"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[6347],{3905:function(e,n,t){t.d(n,{Zo:function(){return _},kt:function(){return p}});var r=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=r.createContext({}),d=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},_=function(e){var n=d(e.components);return r.createElement(u.Provider,{value:n},e.children)},o={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,_=i(e,["components","mdxType","originalType","parentName"]),c=d(t),p=l,k=c["".concat(u,".").concat(p)]||c[p]||o[p]||a;return t?r.createElement(k,s(s({ref:n},_),{},{components:t})):r.createElement(k,s({ref:n},_))}));function p(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,s=new Array(a);s[0]=c;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:l,s[1]=i;for(var d=2;d<a;d++)s[d]=t[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},54604:function(e,n,t){t.r(n),t.d(n,{assets:function(){return _},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return o}});var r=t(87462),l=t(63366),a=(t(67294),t(3905)),s=["components"],i={},u=void 0,d={unversionedId:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784",id:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784",title:"14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784",description:"Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f53\u7cfb\u7ed3\u6784\u5982\u56fe14.1\u6240\u793a\uff0c\u4ece\u4e0a\u5230\u4e0b\u53ef\u4ee5\u5212\u5206\u4e3a4\u5c42\uff0c\u4f9d\u6b21\u4e3a\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u3001\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u3001\u63d0\u4f9b\u5b9e\u9645\u529f\u80fd\u7684\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4ee5\u53ca\u7f51\u7edc\u8bbe\u5907\u4e0e\u5a92\u4ecb\u5c42\uff0c\u8fd94\u5c42\u7684\u4f5c\u7528\u5982\u4e0b\u6240\u793a\u3002",source:"@site/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3",slug:"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784",draft:!1,editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"14.10\u3000\u603b\u7ed3",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3"},next:{title:"14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500"}},_={},o=[],c={toc:o};function p(e){var n=e.components,i=(0,l.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f53\u7cfb\u7ed3\u6784\u5982\u56fe14.1\u6240\u793a\uff0c\u4ece\u4e0a\u5230\u4e0b\u53ef\u4ee5\u5212\u5206\u4e3a4\u5c42\uff0c\u4f9d\u6b21\u4e3a\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u3001\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u3001\u63d0\u4f9b\u5b9e\u9645\u529f\u80fd\u7684\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4ee5\u53ca\u7f51\u7edc\u8bbe\u5907\u4e0e\u5a92\u4ecb\u5c42\uff0c\u8fd94\u5c42\u7684\u4f5c\u7528\u5982\u4e0b\u6240\u793a\u3002"),(0,a.kt)("p",null,"1\uff09\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u5411\u7f51\u7edc\u5c42\u534f\u8bae\u63d0\u4f9b\u7edf\u4e00\u7684\u6570\u636e\u5305\u6536\u53d1\u63a5\u53e3\uff0c\u4e0d\u8bba\u4e0a\u5c42\u534f\u8bae\u662fARP\uff0c\u8fd8\u662fIP\uff0c\u90fd\u901a\u8fc7dev_queue_xmit\uff08\uff09\u51fd\u6570\u53d1\u9001\u6570\u636e\uff0c\u5e76\u901a\u8fc7netif_rx\uff08\uff09\u51fd\u6570\u63a5\u6536\u6570\u636e\u3002\u8fd9\u4e00\u5c42\u7684\u5b58\u5728\u4f7f\u5f97\u4e0a\u5c42\u534f\u8bae\u72ec\u7acb\u4e8e\u5177\u4f53\u7684\u8bbe\u5907\u3002"),(0,a.kt)("p",null,"2\uff09\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u5411\u534f\u8bae\u63a5\u53e3\u5c42\u63d0\u4f9b\u7edf\u4e00\u7684\u7528\u4e8e\u63cf\u8ff0\u5177\u4f53\u7f51\u7edc\u8bbe\u5907\u5c5e\u6027\u548c\u64cd\u4f5c\u7684\u7ed3\u6784\u4f53net_device\uff0c\u8be5\u7ed3\u6784\u4f53\u662f\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4e2d\u5404\u51fd\u6570\u7684\u5bb9\u5668\u3002\u5b9e\u9645\u4e0a\uff0c\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u4ece\u5b8f\u89c2\u4e0a\u89c4\u5212\u4e86\u5177\u4f53\u64cd\u4f5c\u786c\u4ef6\u7684\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u7684\u7ed3\u6784\u3002"),(0,a.kt)("p",null,"3\uff09\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u7684\u5404\u51fd\u6570\u662f\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42net_device\u6570\u636e\u7ed3\u6784\u7684\u5177\u4f53\u6210\u5458\uff0c\u662f\u9a71\u4f7f\u7f51\u7edc\u8bbe\u5907\u786c\u4ef6\u5b8c\u6210\u76f8\u5e94\u52a8\u4f5c\u7684\u7a0b\u5e8f\uff0c\u5b83\u901a\u8fc7hard_start_xmit\uff08\uff09\u51fd\u6570\u542f\u52a8\u53d1\u9001\u64cd\u4f5c\uff0c\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbe\u5907\u4e0a\u7684\u4e2d\u65ad\u89e6\u53d1\u63a5\u6536\u64cd\u4f5c"),(0,a.kt)("p",null,"\u30024\uff09\u7f51\u7edc\u8bbe\u5907\u4e0e\u5a92\u4ecb\u5c42\u662f\u5b8c\u6210\u6570\u636e\u5305\u53d1\u9001\u548c\u63a5\u6536\u7684\u7269\u7406\u5b9e\u4f53\uff0c\u5305\u62ec\u7f51\u7edc\u9002\u914d\u5668\u548c\u5177\u4f53\u7684\u4f20\u8f93\u5a92\u4ecb\uff0c\u7f51\u7edc\u9002\u914d\u5668\u88ab\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4e2d\u7684\u51fd\u6570\u5728\u7269\u7406\u4e0a\u9a71\u52a8\u3002\u5bf9\u4e8eLinux\u7cfb\u7edf\u800c\u8a00\uff0c\u7f51\u7edc\u8bbe\u5907\u548c\u5a92\u4ecb\u90fd\u53ef\u4ee5\u662f\u865a\u62df\u7684\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"1744814560076",src:t(41727).Z,width:"876",height:"610"})),(0,a.kt)("p",null,"\u56fe14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f53\u7cfb\u7ed3\u6784"),(0,a.kt)("p",null,"\u5728\u8bbe\u8ba1\u5177\u4f53\u7684\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5b8c\u6210\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u7f16\u5199\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u7684\u76f8\u5173\u51fd\u6570\u4ee5\u586b\u5145net_device\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\u5e76\u5c06net_device\u6ce8\u518c\u5165\u5185\u6838\u3002"),(0,a.kt)("h1",{id:"1411\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42"},"14.1.1\u3000\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42"),(0,a.kt)("p",null,"\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u6700\u4e3b\u8981\u7684\u529f\u80fd\u662f\u7ed9\u4e0a\u5c42\u534f\u8bae\u63d0\u4f9b\u900f\u660e\u7684\u6570\u636e\u5305\u53d1\u9001\u548c\u63a5\u6536\u63a5\u53e3\u3002\u5f53\u4e0a\u5c42ARP\u6216IP\u9700\u8981\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0c\u5b83\u5c06\u8c03\u7528\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u7684dev_queue_xmit\uff08\uff09\u51fd\u6570\u53d1\u9001\u8be5\u6570\u636e\u5305\uff0c\u540c\u65f6\u9700\u4f20\u9012\u7ed9\u8be5\u51fd\u6570\u4e00\u4e2a\u6307\u5411struct sk_buff\u6570\u636e\u7ed3\u6784\u7684\u6307\u9488\u3002dev_queue_xmit\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int dev_queue_xmit(struct sk_buff *skb);\n")),(0,a.kt)("p",null,"\u540c\u6837\u5730\uff0c\u4e0a\u5c42\u5bf9\u6570\u636e\u5305\u7684\u63a5\u6536\u4e5f\u901a\u8fc7\u5411netif_rx\uff08\uff09\u51fd\u6570\u4f20\u9012\u4e00\u4e2astruct sk_buff\u6570\u636e\u7ed3\u6784\u7684\u6307\u9488\u6765\u5b8c\u6210\u3002netif_rx\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int netif_rx(struct sk_buff *skb);\n")),(0,a.kt)("p",null,"sk_buff\u7ed3\u6784\u4f53\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u5b9a\u4e49\u4e8einclude/linux/skbuff.h\u6587\u4ef6\u4e2d\uff0c\u542b\u4e49\u4e3a\u201c\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u201d\uff0c\u7528\u4e8e\u5728Linux\u7f51\u7edc\u5b50\u7cfb\u7edf\u4e2d\u7684\u5404\u5c42\u4e4b\u95f4\u4f20\u9012\u6570\u636e\uff0c\u662fLinux\u7f51\u7edc\u5b50\u7cfb\u7edf\u6570\u636e\u4f20\u9012\u7684\u201c\u4e2d\u67a2\u795e\u7ecf\u201d\u3002"),(0,a.kt)("p",null,"\u5f53\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0cLinux\u5185\u6838\u7684\u7f51\u7edc\u5904\u7406\u6a21\u5757\u5fc5\u987b\u5efa\u7acb\u4e00\u4e2a\u5305\u542b\u8981\u4f20\u8f93\u7684\u6570\u636e\u5305\u7684sk_buff\uff0c\u7136\u540e\u5c06sk_buff\u9012\u4ea4\u7ed9\u4e0b\u5c42\uff0c\u5404\u5c42\u5728sk_buff\u4e2d\u6dfb\u52a0\u4e0d\u540c\u7684\u534f\u8bae\u5934\u76f4\u81f3\u4ea4\u7ed9\u7f51\u7edc\u8bbe\u5907\u53d1\u9001\u3002\u540c\u6837\u5730\uff0c\u5f53\u7f51\u7edc\u8bbe\u5907\u4ece\u7f51\u7edc\u5a92\u4ecb\u4e0a\u63a5\u6536\u5230\u6570\u636e\u5305\u540e\uff0c\u5b83\u5fc5\u987b\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u8f6c\u6362\u4e3ask_buff\u6570\u636e\u7ed3\u6784\u5e76\u4f20\u9012\u7ed9\u4e0a\u5c42\uff0c\u5404\u5c42\u5265\u53bb\u76f8\u5e94\u7684\u534f\u8bae\u5934\u76f4\u81f3\u4ea4\u7ed9\u7528\u6237\u3002\u4ee3\u7801\u6e05\u535514.1\u5217\u51fa\u4e86sk_buff\u7ed3\u6784\u4f53\u4e2d\u7684\u51e0\u4e2a\u5173\u952e\u6570\u636e\u6210\u5458\u4ee5\u53ca\u63cf\u8ff0\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.1\u3000sk_buff\u7ed3\u6784\u4f53\u4e2d\u7684\u51e0\u4e2a\u5173\u952e\u6570\u636e\u6210\u5458\u4ee5\u53ca\u63cf\u8ff0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," 1/**\n 2 *      struct sk_buff - socket buffer\n 3 *      @next: Next buffer in list\n 4 *      @prev: Previous buffer in list\n 5 *      @len: Length of actual data\n 6 *      @data_len: Data length\n 7 *      @mac_len: Length of link layer header\n 8 *      @hdr_len: writable header length of cloned skb\n 9 *      @csum: Checksum (must include start/offset pair)\n10 *      @csum_start: Offset from skb->head where checksumming should start\n11 *      @csum_offset: Offset from csum_start where checksum should be stored\n12 *      @priority: Packet queueing priority\n13 *      @protocol: Packet protocol from driver\n14 *      @inner_protocol: Protocol (encapsulation)\n15 *      @inner_transport_header: Inner transport layer header (encapsulation)\n16 *      @inner_network_header: Network layer header (encapsulation)\n17 *      @inner_mac_header: Link layer header (encapsulation)\n18 *      @transport_header: Transport layer header\n19 *      @network_header: Network layer header\n20 *      @mac_header: Link layer header\n21 *      @tail: Tail pointer\n22 *      @end: End pointer\n23 *      @head: Head of buffer\n24 *      @data: Data head pointer\n25 */\n26\n27struct sk_buff {\n28        /* These two members must be first. */\n29        struct sk_buff          *next;\n30        struct sk_buff          *prev;\n31\n32        ...\n33        unsigned int            len,\n34                                data_len;\n35        __u16                   mac_len,\n36                                hdr_len;\n37        ...\n38        __u32                   priority;\n39        ...\n40        __be16                  protocol;\n41\n42        ...\n43\n44        __be16                  inner_protocol;\n45        __u16                   inner_transport_header;\n46        __u16                   inner_network_header;\n47        __u16                   inner_mac_header;\n48        __u16                   transport_header;\n49        __u16                   network_header;\n50        __u16                   mac_header;\n51        /* These elements must be at the end, see alloc_skb() for details.  */\n52        sk_buff_data_t          tail;\n53        sk_buff_data_t          end;\n54        unsigned char           *head,\n55                                *data;\n56        ...\n57};\n")),(0,a.kt)("p",null,"\u5982\u56fe14.1\u6240\u793a\uff0c\u5c24\u5176\u503c\u5f97\u6ce8\u610f\u7684\u662fhead\u548cend\u6307\u5411\u7f13\u51b2\u533a\u7684\u5934\u90e8\u548c\u5c3e\u90e8\uff0c\u800cdata\u548ctail\u6307\u5411\u5b9e\u9645\u6570\u636e\u7684\u5934\u90e8\u548c\u5c3e\u90e8\u3002\u6bcf\u4e00\u5c42\u4f1a\u5728head\u548cdata\u4e4b\u95f4\u586b\u5145\u534f\u8bae\u5934\uff0c\u6216\u8005\u5728tail\u548cend\u4e4b\u95f4\u6dfb\u52a0\u65b0\u7684\u534f\u8bae\u6570\u636e\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"1744814702888",src:t(30131).Z,width:"1062",height:"741"})),(0,a.kt)("p",null,"\u56fe14.2\u3000sk_buff\u7684head\u3001data\u3001tail\u3001end\u6307\u9488"),(0,a.kt)("p",null,"\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u6d89\u53ca\u7684\u64cd\u4f5c\u51fd\u6570\uff0cLinux\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u652f\u6301\u5206\u914d\u3001\u91ca\u653e\u3001\u53d8\u66f4\u7b49\u529f\u80fd\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\uff081\uff09\u5206\u914d"),(0,a.kt)("p",null,"Linux\u5185\u6838\u4e2d\u7528\u4e8e\u5206\u914d\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u7684\u51fd\u6570\u6709\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"struct sk_buff *alloc_skb(unsigned int len, gfp_t priority);\nstruct sk_buff *dev_alloc_skb(unsigned int len);\n")),(0,a.kt)("p",null,"alloc_skb\uff08\uff09\u51fd\u6570\u5206\u914d\u4e00\u4e2a\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u548c\u4e00\u4e2a\u6570\u636e\u7f13\u51b2\u533a\uff0c\u53c2\u6570len\u4e3a\u6570\u636e\u7f13\u51b2\u533a\u7684\u7a7a\u95f4\u5927\u5c0f\uff0c\u901a\u5e38\u4ee5L1_CACHE_BYTES\u5b57\u8282\uff08\u5bf9\u4e8eARM\u4e3a32\uff09\u5bf9\u9f50\uff0c\u53c2\u6570priority\u4e3a\u5185\u5b58\u5206\u914d\u7684\u4f18\u5148\u7ea7\u3002dev_alloc_skb\uff08\uff09\u51fd\u6570\u4ee5GFP_ATOMIC\u4f18\u5148\u7ea7\u8fdb\u884cskb\u7684\u5206\u914d\uff0c\u539f\u56e0\u662f\u8be5\u51fd\u6570\u7ecf\u5e38\u5728\u8bbe\u5907\u9a71\u52a8\u7684\u63a5\u6536\u4e2d\u65ad\u91cc\u88ab\u8c03\u7528"),(0,a.kt)("p",null,"\uff082\uff09\u91ca\u653e"),(0,a.kt)("p",null,"Linux\u5185\u6838\u4e2d\u7528\u4e8e\u91ca\u653e\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u7684\u51fd\u6570\u6709\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"void kfree_skb(struct sk_buff *skb);\nvoid dev_kfree_skb(struct sk_buff *skb);\nvoid dev_kfree_skb_irq(struct sk_buff *skb);\nvoid dev_kfree_skb_any(struct sk_buff *skb);\n")),(0,a.kt)("p",null,"\u4e0a\u8ff0\u51fd\u6570\u7528\u4e8e\u91ca\u653e\u88aballoc_skb\uff08\uff09\u51fd\u6570\u5206\u914d\u7684\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u548c\u6570\u636e\u7f13\u51b2\u533a\u3002"),(0,a.kt)("p",null,"Linux\u5185\u6838\u5185\u90e8\u4f7f\u7528kree_skb\uff08\uff09\u51fd\u6570\uff0c\u800c\u5728\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u5219\u6700\u597d\u7528dev_kfree_skb\uff08\uff09\u3001dev_kfree_skb_irq\uff08\uff09\u6216dev_kfree_skb_any\uff08\uff09\u51fd\u6570\u8fdb\u884c\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u7684\u91ca\u653e\u3002\u5176\u4e2d\uff0cdev_kfree_skb\uff08\uff09\u51fd\u6570\u7528\u4e8e\u975e\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0cdev_kfree_skb_irq\uff08\uff09\u51fd\u6570\u7528\u4e8e\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u800cdev_kfree_skb_any\uff08\uff09\u51fd\u6570\u5728\u4e2d\u65ad\u548c\u975e\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u7686\u53ef\u91c7\u7528\uff0c\u5b83\u5176\u5b9e\u662f\u505a\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4e0a\u4e0b\u6587\u5224\u65ad\uff0c\u7136\u540e\u518d\u8c03\u7528__dev_kfree_skb_irq\uff08\uff09\u6216\u8005dev_kfree_skb\uff08\uff09\uff0c\u8fd9\u4ece\u5176\u4ee3\u7801\u7684\u5b9e\u73b0\u4e2d\u4e5f\u53ef\u4ee5\u770b\u51fa\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"void __dev_kfree_skb_any(struct sk_buff *skb, enum skb_free_reason reason)\n{\n        if (in_irq() || irqs_disabled())\n                __dev_kfree_skb_irq(skb, reason);\n        else\n                dev_kfree_skb(skb);\n}\n")),(0,a.kt)("p",null,"\uff083\uff09\u53d8\u66f4"),(0,a.kt)("p",null,"\u5728Linux\u5185\u6838\u4e2d\u53ef\u4ee5\u7528\u5982\u4e0b\u51fd\u6570\u5728\u7f13\u51b2\u533a\u5c3e\u90e8\u589e\u52a0\u6570\u636e\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned char *skb_put(struct sk_buff *skb, unsigned int len);\n")),(0,a.kt)("p",null,"\u5b83\u4f1a\u5bfc\u81f4skb->tail\u540e\u79fblen\uff08skb->tail+=len\uff09\uff0c\u800cskb->len\u4f1a\u589e\u52a0len\u7684\u5927\u5c0f\uff08skb->len+=len\uff09\u3002\u901a\u5e38\uff0c\u5728\u8bbe\u5907\u9a71\u52a8\u7684\u63a5\u6536\u6570\u636e\u5904\u7406\u4e2d\u4f1a\u8c03\u7528\u6b64\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u5728Linux\u5185\u6838\u4e2d\u53ef\u4ee5\u7528\u5982\u4e0b\u51fd\u6570\u5728\u7f13\u51b2\u533a\u5f00\u5934\u589e\u52a0\u6570\u636e\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned char *skb_push(struct sk_buff *skb, unsigned int len);\n")),(0,a.kt)("p",null,"\u5b83\u4f1a\u5bfc\u81f4skb->data\u524d\u79fblen\uff08skb->data-=len\uff09\uff0c\u800cskb->len\u4f1a\u589e\u52a0len\u7684\u5927\u5c0f\uff08skb->len+=len\uff09\u3002\u4e0e\u8be5\u51fd\u6570\u7684\u529f\u80fd\u5b8c\u6210\u76f8\u53cd\u7684\u51fd\u6570\u662fskb_pull\uff08\uff09\uff0c\u5b83\u53ef\u4ee5\u5728\u7f13\u51b2\u533a\u5f00\u5934\u79fb\u9664\u6570\u636e\uff0c\u6267\u884c\u7684\u52a8\u4f5c\u662fskb->len-=len\u3001skb->data+=len\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u7684\u7f13\u51b2\u533a\u800c\u8a00\uff0c\u8c03\u7528\u5982\u4e0b\u51fd\u6570\u53ef\u4ee5\u8c03\u6574\u7f13\u51b2\u533a\u7684\u5934\u90e8\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static inline void skb_reserve(struct sk_buff *skb, int len);\n")),(0,a.kt)("p",null,"\u5b83\u4f1a\u5c06skb->data\u548cskb->tail\u540c\u65f6\u540e\u79fblen\uff0c\u6267\u884cskb->data+=len\u3001skb->tail+=len\u3002\u5185\u6838\u91cc\u5b58\u5728\u8bb8\u591a\u8fd9\u6837\u7684\u4ee3\u7801\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"skb=alloc_skb(len+headspace, GFP_KERNEL);\nskb_reserve(skb, headspace);\nskb_put(skb,len);\nmemcpy_fromfs(skb->data,data,len);\npass_to_m_protocol(skb);\n")),(0,a.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u5148\u5206\u914d\u4e00\u4e2a\u5168\u65b0\u7684sk_buff\uff0c\u63a5\u7740\u8c03\u7528skb_reserve\uff08\uff09\u817e\u51fa\u5934\u90e8\u7a7a\u95f4\uff0c\u4e4b\u540e\u8c03\u7528skb_put\uff08\uff09\u817e\u51fa\u6570\u636e\u7a7a\u95f4\uff0c\u7136\u540e\u628a\u6570\u636e\u590d\u5236\u8fdb\u6765\uff0c\u6700\u540e\u628ask_buff\u4f20\u7ed9\u534f\u8bae\u6808\u3002"),(0,a.kt)("h1",{id:"1412\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42"},"14.1.2\u3000\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42"),(0,a.kt)("p",null,"\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4e3a\u5343\u53d8\u4e07\u5316\u7684\u7f51\u7edc\u8bbe\u5907\u5b9a\u4e49\u7edf\u4e00\u3001\u62bd\u8c61\u7684\u6570\u636e\u7ed3\u6784net_device\u7ed3\u6784\u4f53\uff0c\u4ee5\u4e0d\u53d8\u5e94\u4e07\u53d8\uff0c\u5b9e\u73b0\u591a\u79cd\u786c\u4ef6\u5728\u8f6f\u4ef6\u5c42\u6b21\u4e0a\u7684\u7edf\u4e00\u3002"),(0,a.kt)("p",null,"net_device\u7ed3\u6784\u4f53\u5728\u5185\u6838\u4e2d\u6307\u4ee3\u4e00\u4e2a\u7f51\u7edc\u8bbe\u5907\uff0c\u5b83\u5b9a\u4e49\u4e8einclude/linux/netdevice.h\u6587\u4ef6\u4e2d\uff0c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u53ea\u9700\u901a\u8fc7\u586b\u5145net_device\u7684\u5177\u4f53\u6210\u5458\u5e76\u6ce8\u518cnet_device\u5373\u53ef\u5b9e\u73b0\u786c\u4ef6\u64cd\u4f5c\u51fd\u6570\u4e0e\u5185\u6838\u7684\u6302\u63a5\u3002"),(0,a.kt)("p",null,"net_device\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u7ed3\u6784\u4f53\uff0c\u5b9a\u4e49\u4e8einclude/linux/netdevice.h\u4e2d\uff0c\u5305\u542b\u7f51\u7edc\u8bbe\u5907\u7684\u5c5e\u6027\u63cf\u8ff0\u548c\u64cd\u4f5c\u63a5\u53e3\uff0c\u4e0b\u9762\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e00\u4e9b\u5173\u952e\u6210\u5458\u3002"),(0,a.kt)("p",null,"\uff081\uff09\u5168\u5c40\u4fe1\u606f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"char name[IFNAMESIZ];\n")),(0,a.kt)("p",null,"name\u662f\u7f51\u7edc\u8bbe\u5907\u7684\u540d\u79f0\u3002"),(0,a.kt)("p",null,"\uff082\uff09\u786c\u4ef6\u4fe1\u606f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned long mem_end;\nunsigned long mem_start;\n")),(0,a.kt)("p",null,"mem_start\u548cmem_end\u5206\u522b\u5b9a\u4e49\u4e86\u8bbe\u5907\u6240\u4f7f\u7528\u7684\u5171\u4eab\u5185\u5b58\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u5730\u5740\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned long base_addr;\nunsigned char irq;\nunsigned char if_port;\nunsigned char dma;\n")),(0,a.kt)("p",null,"base_addr\u4e3a\u7f51\u7edc\u8bbe\u5907I/O\u57fa\u5730\u5740\u3002"),(0,a.kt)("p",null,"irq\u4e3a\u8bbe\u5907\u4f7f\u7528\u7684\u4e2d\u65ad\u53f7\u3002"),(0,a.kt)("p",null,"if_port\u6307\u5b9a\u591a\u7aef\u53e3\u8bbe\u5907\u4f7f\u7528\u54ea\u4e00\u4e2a\u7aef\u53e3\uff0c\u8be5\u5b57\u6bb5\u4ec5\u9488\u5bf9\u591a\u7aef\u53e3\u8bbe\u5907\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8bbe\u5907\u540c\u65f6\u652f\u6301IF_PORT_10BASE2\uff08\u540c\u8f74\u7535\u7f06\uff09\u548cIF_PORT_10BASET\uff08\u53cc\u7ede\u7ebf\uff09\uff0c\u5219\u53ef\u4f7f\u7528\u8be5\u5b57\u6bb5\u3002"),(0,a.kt)("p",null,"dma\u6307\u5b9a\u5206\u914d\u7ed9\u8bbe\u5907\u7684DMA\u901a\u9053\u3002"),(0,a.kt)("p",null,"\uff083\uff09\u63a5\u53e3\u4fe1\u606f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned short hard_header_len;\n")),(0,a.kt)("p",null,"hard_header_len\u662f\u7f51\u7edc\u8bbe\u5907\u7684\u786c\u4ef6\u5934\u957f\u5ea6\uff0c\u5728\u4ee5\u592a\u7f51\u8bbe\u5907\u7684\u521d\u59cb\u5316\u51fd\u6570\u4e2d\uff0c\u8be5\u6210\u5458\u88ab\u8d4b\u4e3aETH_HLEN\uff0c\u537314\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned short type;\n")),(0,a.kt)("p",null,"type\u662f\u63a5\u53e3\u7684\u786c\u4ef6\u7c7b\u578b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned mtu;\n")),(0,a.kt)("p",null,"mtu\u6307\u6700\u5927\u4f20\u8f93\u5355\u5143\uff08MTU\uff09\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned char           *dev_addr;\n")),(0,a.kt)("p",null,"\u7528\u4e8e\u5b58\u653e\u8bbe\u5907\u7684\u786c\u4ef6\u5730\u5740\uff0c\u9a71\u52a8\u53ef\u80fd\u63d0\u4f9b\u4e86\u8bbe\u7f6eMAC\u5730\u5740\u7684\u63a5\u53e3\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7528\u6237\u8bbe\u7f6e\u7684MAC\u5730\u5740\u7b49\u5b58\u5165\u8be5\u6210\u5458\uff0c\u5982\u4ee3\u7801\u6e05\u535514.2drivers/net/ethernet/moxa/moxart_ether.c\u4e2d\u7684moxart_set_mac_address\uff08\uff09\u51fd\u6570\u6240\u793a\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.2\u3000set_mac_address\uff08\uff09\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"1static int moxart_set_mac_address(struct net_device *ndev, void *addr)\n2{\n3        struct sockaddr *address = addr;\n4\n5        if (!is_valid_ether_addr(address->sa_data))\n6                return -EADDRNOTAVAIL;\n7\n8        memcpy(ndev->dev_addr, address->sa_data, ndev->addr_len);\n9        moxart_update_mac_address(ndev);\n10\n11        return 0;\n12}\n")),(0,a.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u5b8c\u6210\u4e86memcpy\uff08\uff09\u4ee5\u53ca\u6700\u7ec8\u786c\u4ef6\u4e0a\u7684MAC\u5730\u5740\u53d8\u66f4\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned short flags\uff1b\n")),(0,a.kt)("p",null,"flags\u6307\u7f51\u7edc\u63a5\u53e3\u6807\u5fd7\uff0c\u4ee5IFF_\uff08Interface Flags\uff09\u5f00\u5934\uff0c\u90e8\u5206\u6807\u5fd7\u7531\u5185\u6838\u6765\u7ba1\u7406\uff0c\u5176\u4ed6\u7684\u5728\u63a5\u53e3\u521d\u59cb\u5316\u65f6\u88ab\u8bbe\u7f6e\u4ee5\u8bf4\u660e\u8bbe\u5907\u63a5\u53e3\u7684\u80fd\u529b\u548c\u7279\u6027\u3002\u63a5\u53e3\u6807\u5fd7\u5305\u62ecIFF_UP\uff08\u5f53\u8bbe\u5907\u88ab\u6fc0\u6d3b\u5e76\u53ef\u4ee5\u5f00\u59cb\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0c\u5185\u6838\u8bbe\u7f6e\u8be5\u6807\u5fd7\uff09\u3001IFF_AUTOMEDIA\uff08\u8bbe\u5907\u53ef\u5728\u591a\u79cd\u5a92\u4ecb\u95f4\u5207\u6362\uff09\u3001IFF_BROADCAST\uff08\u5141\u8bb8\u5e7f\u64ad\uff09\u3001IFF_DEBUG\uff08\u8c03\u8bd5\u6a21\u5f0f\uff0c\u53ef\u7528\u4e8e\u63a7\u5236printk\u8c03\u7528\u7684\u8be6\u7ec6\u7a0b\u5ea6\uff09\u3001IFF_LOOPBACK\uff08\u56de\u73af\uff09\u3001IFF_MULTICAST\uff08\u5141\u8bb8\u7ec4\u64ad\uff09\u3001IFF_NOARP\uff08\u63a5\u53e3\u4e0d\u80fd\u6267\u884cARP\uff09\u548cIFF_POINTOPOINT\uff08\u63a5\u53e3\u8fde\u63a5\u5230\u70b9\u5230\u70b9\u94fe\u8def\uff09\u7b49\u3002"),(0,a.kt)("p",null,"\uff084\uff09\u8bbe\u5907\u64cd\u4f5c\u51fd\u6570"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const struct net_device_ops *netdev_ops;\n")),(0,a.kt)("p",null,"\u8be5\u7ed3\u6784\u4f53\u662f\u7f51\u7edc\u8bbe\u5907\u7684\u4e00\u7cfb\u5217\u786c\u4ef6\u64cd\u4f5c\u884c\u6570\u7684\u96c6\u5408\uff0c\u5b83\u4e5f\u5b9a\u4e49\u4e8einclude/linux/netdevice.h\u4e2d\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5f88\u5927\uff0c\u4ee3\u7801\u6e05\u535514.3\u5217\u51fa\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u57fa\u7840\u90e8\u5206\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.3\u3000net_device_ops\u7ed3\u6784\u4f53"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," 1struct net_device_ops {\n 2        int             (*ndo_init)(struct net_device *dev);\n 3        void            (*ndo_uninit)(struct net_device *dev);\n 4        int             (*ndo_open)(struct net_device *dev);\n 5        int             (*ndo_stop)(struct net_device *dev);\n 6        netdev_tx_t     (*ndo_start_xmit) (struct sk_buff *skb,\n 7                                           struct net_device *dev);\n 8        u16             (*ndo_select_queue)(struct net_device *dev,\n 9                                            struct sk_buff *skb,\n10                                            void *accel_priv,\n11                                            select_queue_fallback_t fallback);\n12        void            (*ndo_change_rx_flags)(struct net_device *dev,\n13                                               int flags);\n14        void            (*ndo_set_rx_mode)(struct net_device *dev);\n15        int             (*ndo_set_mac_address)(struct net_device *dev,\n16                                               void *addr);\n17        int             (*ndo_validate_addr)(struct net_device *dev);\n18        int             (*ndo_do_ioctl)(struct net_device *dev,\n19                                        struct ifreq *ifr, int cmd);\n20        ...\n21};\n")),(0,a.kt)("p",null,"ndo_open\uff08\uff09\u51fd\u6570\u7684\u4f5c\u7528\u662f\u6253\u5f00\u7f51\u7edc\u63a5\u53e3\u8bbe\u5907\uff0c\u83b7\u5f97\u8bbe\u5907\u9700\u8981\u7684I/O\u5730\u5740\u3001IRQ\u3001DMA\u901a\u9053\u7b49\u3002stop\uff08\uff09\u51fd\u6570\u7684\u4f5c\u7528\u662f\u505c\u6b62\u7f51\u7edc\u63a5\u53e3\u8bbe\u5907\uff0c\u4e0eopen\uff08\uff09\u51fd\u6570\u7684\u4f5c\u7528\u76f8\u53cd\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int  (*ndo_start_xmit) (struct sk_buff *skb,struct net_device *dev);\n")),(0,a.kt)("p",null,"ndo_start_xmit\uff08\uff09\u51fd\u6570\u4f1a\u542f\u52a8\u6570\u636e\u5305\u7684\u53d1\u9001\uff0c\u5f53\u7cfb\u7edf\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u7684xmit\u51fd\u6570\u65f6\uff0c\u9700\u8981\u5411\u5176\u4f20\u5165\u4e00\u4e2ask_buff\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u4ee5\u4f7f\u5f97\u9a71\u52a8\u7a0b\u5e8f\u80fd\u83b7\u53d6\u4ece\u4e0a\u5c42\u4f20\u9012\u4e0b\u6765\u7684\u6570\u636e\u5305\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"void (*ndo_tx_timeout)(struct net_device *dev);\n")),(0,a.kt)("p",null,"\u5f53\u6570\u636e\u5305\u7684\u53d1\u9001\u8d85\u65f6\u65f6\uff0cndo_tx_timeout\uff08\uff09\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u8be5\u51fd\u6570\u9700\u91c7\u53d6\u91cd\u65b0\u542f\u52a8\u6570\u636e\u5305\u53d1\u9001\u8fc7\u7a0b\u6216\u91cd\u65b0\u542f\u52a8\u786c\u4ef6\u7b49\u63aa\u65bd\u6765\u6062\u590d\u7f51\u7edc\u8bbe\u5907\u5230\u6b63\u5e38\u72b6\u6001\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"struct net_device_stats* (*ndo_get_stats)(struct net_device *dev);\n")),(0,a.kt)("p",null,"ndo_get_stats\uff08\uff09\u51fd\u6570\u7528\u4e8e\u83b7\u5f97\u7f51\u7edc\u8bbe\u5907\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2anet_device_stats\u7ed3\u6784\u4f53\u6307\u9488\u3002net_device_stats\u7ed3\u6784\u4f53\u4fdd\u5b58\u4e86\u8be6\u7ec6\u7684\u7f51\u7edc\u8bbe\u5907\u6d41\u91cf\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u53d1\u9001\u548c\u63a5\u6536\u7684\u6570\u636e\u5305\u6570\u3001\u5b57\u8282\u6570\u7b49\uff0c\u8be6\u89c114.8\u8282\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int (*ndo_do_ioctl)(struct net_device *dev, struct ifreq *ifr, int cmd);\nint (*ndo_set_config)(struct net_device *dev, struct ifmap *map);\nint (*ndo_set_mac_address)(struct net_device *dev, void *addr);\n")),(0,a.kt)("p",null,"ndo_do_ioctl\uff08\uff09\u51fd\u6570\u7528\u4e8e\u8fdb\u884c\u8bbe\u5907\u7279\u5b9a\u7684I/O\u63a7\u5236\u3002"),(0,a.kt)("p",null,"ndo_set_config\uff08\uff09\u51fd\u6570\u7528\u4e8e\u914d\u7f6e\u63a5\u53e3\uff0c\u4e5f\u53ef\u7528\u4e8e\u6539\u53d8\u8bbe\u5907\u7684I/O\u5730\u5740\u548c\u4e2d\u65ad\u53f7\u3002"),(0,a.kt)("p",null,"ndo_set_mac_address\uff08\uff09\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u8bbe\u5907\u7684MAC\u5730\u5740\u3002"),(0,a.kt)("p",null,"\u9664\u4e86netdev_ops\u4ee5\u5916\uff0c\u5728net_device\u4e2d\u8fd8\u5b58\u5728\u7c7b\u4f3c\u4e8eethtool_ops\u3001header_ops\u8fd9\u6837\u7684\u64cd\u4f5c\u96c6\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"const struct ethtool_ops *ethtool_ops;\nconst struct header_ops *header_ops;\n")),(0,a.kt)("p",null,"ethtool_ops\u6210\u5458\u51fd\u6570\u4e0e\u7528\u6237\u7a7a\u95f4ethtool\u5de5\u5177\u7684\u5404\u4e2a\u547d\u4ee4\u9009\u9879\u5bf9\u5e94\uff0cethtool\u63d0\u4f9b\u4e86\u7f51\u5361\u53ca\u7f51\u5361\u9a71\u52a8\u7ba1\u7406\u80fd\u529b\uff0c\u80fd\u591f\u4e3aLinux\u7f51\u7edc\u5f00\u53d1\u4eba\u5458\u548c\u7ba1\u7406\u4eba\u5458\u63d0\u4f9b\u5bf9\u7f51\u5361\u786c\u4ef6\u3001\u9a71\u52a8\u7a0b\u5e8f\u548c\u7f51\u7edc\u534f\u8bae\u6808\u7684\u8bbe\u7f6e\u3001\u67e5\u770b\u4ee5\u53ca\u8c03\u8bd5\u7b49\u529f\u80fd\u3002"),(0,a.kt)("p",null,"header_ops\u5bf9\u5e94\u4e8e\u786c\u4ef6\u5934\u90e8\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u5b8c\u6210\u521b\u5efa\u786c\u4ef6\u5934\u90e8\u548c\u4ece\u7ed9\u5b9a\u7684sk_buff\u5206\u6790\u51fa\u786c\u4ef6\u5934\u90e8\u7b49\u64cd\u4f5c\u3002"),(0,a.kt)("p",null,"\uff085\uff09\u8f85\u52a9\u6210\u5458"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned long trans_start;\nunsigned long last_rx;\n")),(0,a.kt)("p",null,"trans_start\u8bb0\u5f55\u6700\u540e\u7684\u6570\u636e\u5305\u5f00\u59cb\u53d1\u9001\u65f6\u7684\u65f6\u95f4\u6233\uff0clast_rx\u8bb0\u5f55\u6700\u540e\u4e00\u6b21\u63a5\u6536\u5230\u6570\u636e\u5305\u65f6\u7684\u65f6\u95f4\u6233\uff0c\u8fd9\u4e24\u4e2a\u65f6\u95f4\u6233\u8bb0\u5f55\u7684\u90fd\u662fjiffies\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5e94\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u6210\u5458\u3002"),(0,a.kt)("p",null,"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4ee5\u4e2d\u65ad\u65b9\u5f0f\u63a5\u6536\u6570\u636e\u5305\uff0c\u800cpoll_controller\uff08\uff09\u5219\u91c7\u7528\u7eaf\u8f6e\u8be2\u65b9\u5f0f\uff0c\u53e6\u5916\u4e00\u79cd\u6570\u636e\u63a5\u6536\u65b9\u5f0f\u662fNAPI\uff08New API\uff09\uff0c\u5176\u6570\u636e\u63a5\u6536\u6d41\u7a0b\u4e3a\u201c\u63a5\u6536\u4e2d\u65ad\u6765\u4e34\u2192\u5173\u95ed\u63a5\u6536\u4e2d\u65ad\u2192\u4ee5\u8f6e\u8be2\u65b9\u5f0f\u63a5\u6536\u6240\u6709\u6570\u636e\u5305\u76f4\u5230\u6536\u7a7a\u2192\u5f00\u542f\u63a5\u6536\u4e2d\u65ad\u2192\u63a5\u6536\u4e2d\u65ad\u6765\u4e34\u2026\u2026\u201d\u5185\u6838\u4e2d\u63d0\u4f9b\u4e86\u5982\u4e0b\u4e0eNAPI\u76f8\u5173\u7684API\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static inline void netif_napi_add(struct net_device *dev,\n                                  struct napi_struct *napi,\n                                  int (*poll)(struct napi_struct *, int),\n                                  int weight);\nstatic inline void netif_napi_del(struct napi_struct *napi);\n")),(0,a.kt)("p",null,"\u4ee5\u4e0a\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u7528\u4e8e\u521d\u59cb\u5316\u548c\u79fb\u9664\u4e00\u4e2aNAPI\uff0cnetif_napi_add\uff08\uff09\u7684poll\u53c2\u6570\u662fNAPI\u8981\u8c03\u5ea6\u6267\u884c\u7684\u8f6e\u8be2\u51fd\u6570\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static inline void napi_enable(struct napi_struct *n);\nstatic inline void napi_disable(struct napi_struct *n);\n")),(0,a.kt)("p",null,"\u4ee5\u4e0a\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u7528\u4e8e\u4f7f\u80fd\u548c\u7981\u6b62NAPI\u8c03\u5ea6\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static inline int napi_schedule_prep(struct napi_struct *n);\n")),(0,a.kt)("p",null,"\u8be5\u51fd\u6570\u7528\u4e8e\u68c0\u67e5NAPI\u662f\u5426\u53ef\u4ee5\u8c03\u5ea6\uff0c\u800cnapi_schedule\uff08\uff09\u51fd\u6570\u7528\u4e8e\u8c03\u5ea6\u8f6e\u8be2\u5b9e\u4f8b\u7684\u8fd0\u884c\uff0c\u5176\u539f\u578b\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static inline void napi_schedule(struct napi_struct *n);\n")),(0,a.kt)("p",null,"\u5728NAPI\u5904\u7406\u5b8c\u6210\u7684\u65f6\u5019\u5e94\u8be5\u8c03\u7528\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static inline void napi_complete(struct napi_struct *n);\n")),(0,a.kt)("h1",{id:"1413\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42"},"14.1.3\u3000\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42"),(0,a.kt)("p",null,"net_device\u7ed3\u6784\u4f53\u7684\u6210\u5458\uff08\u5c5e\u6027\u548cnet_device_ops\u7ed3\u6784\u4f53\u4e2d\u7684\u51fd\u6570\u6307\u9488\uff09\u9700\u8981\u88ab\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u8d4b\u4e88\u5177\u4f53\u7684\u6570\u503c\u548c\u51fd\u6570\u3002\u5bf9\u4e8e\u5177\u4f53\u7684\u8bbe\u5907xxx\uff0c\u5de5\u7a0b\u5e08\u5e94\u8be5\u7f16\u5199\u76f8\u5e94\u7684\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u7684\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u5f62\u5982xxx_open\uff08\uff09\u3001xxx_stop\uff08\uff09\u3001xxx_tx\uff08\uff09\u3001xxx_hard_header\uff08\uff09\u3001xxx_get_stats\uff08\uff09\u548cxxx_tx_timeout\uff08\uff09\u7b49\u3002"),(0,a.kt)("p",null,"\u7531\u4e8e\u7f51\u7edc\u6570\u636e\u5305\u7684\u63a5\u6536\u53ef\u7531\u4e2d\u65ad\u5f15\u53d1\uff0c\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4e2d\u7684\u53e6\u4e00\u4e2a\u4e3b\u4f53\u90e8\u5206\u5c06\u662f\u4e2d\u65ad\u5904\u7406\u51fd\u6570\uff0c\u5b83\u8d1f\u8d23\u8bfb\u53d6\u786c\u4ef6\u4e0a\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u5e76\u4f20\u9001\u7ed9\u4e0a\u5c42\u534f\u8bae\uff0c\u56e0\u6b64\u53ef\u80fd\u5305\u542bxxx_interrupt\uff08\uff09\u548cxxx_rx\uff08\uff09\u51fd\u6570\uff0c\u524d\u8005\u5b8c\u6210\u4e2d\u65ad\u7c7b\u578b\u5224\u65ad\u7b49\u57fa\u672c\u5de5\u4f5c\uff0c\u540e\u8005\u5219\u9700\u5b8c\u6210\u6570\u636e\u5305\u7684\u751f\u6210\u53ca\u5c06\u5176\u9012\u4ea4\u7ed9\u4e0a\u5c42\u7b49\u590d\u6742\u5de5\u4f5c\u3002"),(0,a.kt)("p",null,"14.2~14.8\u8282\u5c06\u5bf9\u4e0a\u8ff0\u51fd\u6570\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\u5e76\u7ed9\u51fa\u53c2\u8003\u8bbe\u8ba1\u6a21\u677f\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u7279\u5b9a\u7684\u8bbe\u5907\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u76f8\u5173\u7684\u79c1\u6709\u6570\u636e\u548c\u64cd\u4f5c\uff0c\u5e76\u5c01\u88c5\u4e3a\u4e00\u4e2a\u79c1\u6709\u4fe1\u606f\u7ed3\u6784\u4f53xxx_private\uff0c\u8ba9\u5176\u6307\u9488\u8d4b\u503c\u7ed9net_device\u7684\u79c1\u6709\u6210\u5458\u3002\u5728xxx_private\u7ed3\u6784\u4f53\u4e2d\u53ef\u5305\u542b\u8bbe\u5907\u7684\u7279\u6b8a\u5c5e\u6027\u548c\u64cd\u4f5c\u3001\u81ea\u65cb\u9501\u4e0e\u4fe1\u53f7\u91cf\u3001\u5b9a\u65f6\u5668\u4ee5\u53ca\u7edf\u8ba1\u4fe1\u606f\u7b49\uff0c\u8fd9\u90fd\u7531\u5de5\u7a0b\u5e08\u81ea\u5b9a\u4e49\u3002\u5728\u9a71\u52a8\u4e2d\uff0c\u8981\u7528\u5230\u79c1\u6709\u6570\u636e\u7684\u65f6\u5019\uff0c\u5219\u4f7f\u7528\u5728netdevice.h\u4e2d\u5b9a\u4e49\u7684\u63a5\u53e3\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static inline void *netdev_priv(const struct net_device *dev);\n")),(0,a.kt)("p",null,"\u6bd4\u5982\u5728\u9a71\u52a8drivers/net/ethernet/davicom/dm9000.c\u7684dm9000_probe\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u4f7f\u7528alloc_etherdev\uff08sizeof\uff08struct board_info\uff09\uff09\u5206\u914d\u7f51\u7edc\u8bbe\u5907\uff0cboard_info\u7ed3\u6784\u4f53\u5c31\u6210\u4e86\u8fd9\u4e2a\u7f51\u7edc\u8bbe\u5907\u7684\u79c1\u6709\u6570\u636e\uff0c\u5728\u5176\u4ed6\u51fd\u6570\u4e2d\u53ef\u4ee5\u7b80\u5355\u5730\u63d0\u53d6\u8fd9\u4e2a\u79c1\u6709\u6570\u636e\uff0c\u4f8b\u5982\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static int\ndm9000_start_xmit(struct sk_buff *skb, struct net_device *dev)\n{\n        unsigned long flags;\n        board_info_t *db = netdev_priv(dev);\n        ...\n}\n")))}p.isMDXComponent=!0},41727:function(e,n,t){n.Z=t.p+"assets/images/1744814560076-963f54ac8aece79ebd44abef1a82313b.png"},30131:function(e,n,t){n.Z=t.p+"assets/images/1744814702888-4f763cfe19a12051d23fbf042865913e.png"}}]);