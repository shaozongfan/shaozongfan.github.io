"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[7110],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),_=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=_(e.components);return n.createElement(a.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=_(r),d=o,f=u["".concat(a,".").concat(d)]||u[d]||s[d]||c;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=u;var p={};for(var a in t)hasOwnProperty.call(t,a)&&(p[a]=t[a]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var _=2;_<c;_++)i[_]=r[_];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},82488:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return p},metadata:function(){return _},toc:function(){return s}});var n=r(87462),o=r(63366),c=(r(67294),r(3905)),i=["components"],p={},a=void 0,_={unversionedId:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d",id:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d",title:"21.5\u3000\u4f7f\u7528\u201cproc\u201d",description:"\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u5341\u5206\u6709\u7528\uff0c\u5b83\u88ab\u5185\u6838\u7528\u4e8e\u5411\u7528\u6237\u5bfc\u51fa\u4fe1\u606f\u3002\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u5728Linux\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u5728/proc\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5bf9\u865a\u62df\u6587\u4ef6\u7684\u8bfb\u5199\u4f5c\u4e3a\u4e0e\u5185\u6838\u4e2d\u5b9e\u4f53\u8fdb\u884c\u901a\u4fe1\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u4e0e\u666e\u901a\u6587\u4ef6\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e9b\u865a\u62df\u6587\u4ef6\u7684\u5185\u5bb9\u90fd\u662f\u52a8\u6001\u521b\u5efa\u7684\u3002",source:"@site/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3",slug:"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d",draft:!1,editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"21.4\u3000DEBUG_LL\u548cEARLY_PRINTK",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK"},next:{title:"21.6\u3000Oops",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops"}},l={},s=[],u={toc:s};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u5341\u5206\u6709\u7528\uff0c\u5b83\u88ab\u5185\u6838\u7528\u4e8e\u5411\u7528\u6237\u5bfc\u51fa\u4fe1\u606f\u3002\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u5728Linux\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u5728/proc\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5bf9\u865a\u62df\u6587\u4ef6\u7684\u8bfb\u5199\u4f5c\u4e3a\u4e0e\u5185\u6838\u4e2d\u5b9e\u4f53\u8fdb\u884c\u901a\u4fe1\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u4e0e\u666e\u901a\u6587\u4ef6\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e9b\u865a\u62df\u6587\u4ef6\u7684\u5185\u5bb9\u90fd\u662f\u52a8\u6001\u521b\u5efa\u7684\u3002"),(0,c.kt)("p",null,"\u201c/proc\u201d\u4e0b\u7684\u7edd\u5927\u591a\u6570\u6587\u4ef6\u662f\u53ea\u8bfb\u7684\uff0c\u4ee5\u663e\u793a\u5185\u6838\u4fe1\u606f\u4e3a\u4e3b\u3002\u4f46\u662f\u201c/proc\u201d\u4e0b\u7684\u6587\u4ef6\u4e5f\u5e76\u4e0d\u662f\u5b8c\u5168\u53ea\u8bfb\u7684\uff0c\u82e5\u8282\u70b9\u53ef\u5199\uff0c\u8fd8\u53ef\u7528\u4e8e\u4e00\u5b9a\u7684\u63a7\u5236\u6216\u914d\u7f6e\u76ee\u7684\uff0c\u4f8b\u5982\u524d\u9762\u4ecb\u7ecd\u7684\u5199/proc/sys/kernel/printk\u53ef\u4ee5\u6539\u53d8printk\uff08\uff09\u7684\u6253\u5370\u7ea7\u522b\u3002"),(0,c.kt)("p",null,"Linux\u7cfb\u7edf\u7684\u8bb8\u591a\u547d\u4ee4\u672c\u8eab\u90fd\u662f\u901a\u8fc7\u5206\u6790\u201c/proc\u201d\u4e0b\u7684\u6587\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u5982ps\u3001top\u3001uptime\u548cfree\u7b49\u3002\u4f8b\u5982\uff0cfree\u547d\u4ee4\u901a\u8fc7\u5206\u6790/proc/meminfo\u6587\u4ef6\u5f97\u5230\u53ef\u7528\u5185\u5b58\u4fe1\u606f\uff0c\u4e0b\u9762\u663e\u793a\u4e86\u5bf9\u5e94\u7684meminfo\u6587\u4ef6\u548cfree\u547d\u4ee4\u7684\u7ed3\u679c\u3002"),(0,c.kt)("h1",{id:"1meminfo\u6587\u4ef6"},"1.meminfo\u6587\u4ef6"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"[root@localhost proc]# cat meminfo\nMemTotal:        29516 kB\nMemFree:          1472 kB\nBuffers:          4096 kB\nCached:          12648 kB\nSwapCached:          0 kB\nActive:          14208 kB\nInactive:         8844 kB\nHighTotal:           0 kB\nHighFree:            0 kB\nLowTotal:        29516 kB\nLowFree:          1472 kB\nSwapTotal:      265064 kB\nSwapFree:       265064 kB\nDirty:              20 kB\nWriteback:           0 kB\nMapped:          10052 kB\nSlab:             3864 kB\nCommitLimit:    279820 kB\nCommitted_AS:    13760 kB\nPageTables:        444 kB\nVmallocTotal:   999416 kB\nVmallocUsed:       560 kB\nVmallocChunk:   998580 kB\n")),(0,c.kt)("h1",{id:"2-free\u547d\u4ee4"},"2. free\u547d\u4ee4"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"[root@localhost proc]# free\n           total       used      free     shared    buffers     cached\nMem:       29516       28104     1412     0         4100        12700\n-/+ buffers/cache:     11304     18212\nSwap:      265064      0         265064\n")),(0,c.kt)("p",null,"\u5728Linux 3.9\u4ee5\u53ca\u4e4b\u524d\u7684\u5185\u6838\u7248\u672c\u4e2d\uff0c\u53ef\u7528\u5982\u4e0b\u51fd\u6570\u521b\u5efa\u201c/proc\u201d\u8282\u70b9\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"struct proc_dir_entry *create_proc_entry(const char *name, mode_t mode,\n            struct proc_dir_entry *parent);\nstruct proc_dir_entry *create_proc_read_entry(const char *name, mode_t mode,\n            struct proc_dir_entry *base, read_proc_t *read_proc, void * data);\n")),(0,c.kt)("p",null,"create_proc_entry\uff08\uff09\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u201c/proc\u201d\u8282\u70b9\uff0c\u800ccreate_proc_read_entry\uff08\uff09\u8c03\u7528create_proc_entry\uff08\uff09\u521b\u5efa\u53ea\u8bfb\u7684\u201c/proc\u201d\u8282\u70b9\u3002\u53c2\u6570name\u4e3a\u201c/proc\u201d\u8282\u70b9\u7684\u540d\u79f0\uff0cparent/base\u4e3a\u7236\u76ee\u5f55\u7684\u8282\u70b9\uff0c\u5982\u679c\u4e3aNULL\uff0c\u5219\u6307\u201c/proc\u201d\u76ee\u5f55\uff0cread_proc\u662f\u201c/proc\u201d\u8282\u70b9\u7684\u8bfb\u51fd\u6570\u6307\u9488\u3002\u5f53read\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u5728\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6267\u884c\u65f6\uff0c\u5b83\u6620\u50cf\u5230\u4e00\u4e2a\u6570\u636e\u4ea7\u751f\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6570\u636e\u83b7\u53d6\u51fd\u6570\u3002"),(0,c.kt)("p",null,"\u4e0b\u5217\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u201c/proc\u201d\u76ee\u5f55\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"struct proc_dir_entry *proc_mkdir(const char *name, struct proc_dir_entry *parent);\n")),(0,c.kt)("p",null,"\u7ed3\u5408create_proc_entry\uff08\uff09\u548cproc_mkdir\uff08\uff09\uff0c\u4ee3\u7801\u6e05\u535521.5\u4e2d\u7684\u7a0b\u5e8f\u53ef\u7528\u4e8e\u5148\u5728/proc\u4e0b\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55procfs_example\uff0c\u800c\u540e\u5728\u8be5\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6example_file\u3002"),(0,c.kt)("p",null,"\u4ee3\u7801\u6e05\u535521.5\u3000proc_mkdir\uff08\uff09\u548ccreate_proc_entry\uff08\uff09\u51fd\u6570\u4f7f\u7528\u8303\u4f8b"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},' 1/* \u521b\u5efa/proc\u4e0b\u7684\u76ee\u5f55 */\n 2example_dir = proc_mkdir("procfs_example", NULL);\n 3if (example_dir == NULL) {\n 4 rv =  -ENOMEM;\n 5 goto out;\n 6}\n 7\n 8example_dir->owner = THIS_MODULE;\n 9\n10/* \u521b\u5efa\u4e00\u4e2a/proc\u6587\u4ef6 */\n11example_file = create_proc_entry("example_file", 0666, example_dir);\n12if (example_file == NULL) {\n13 rv =  -ENOMEM;\n14 goto out;\n15}\n16\n17example_file->owner = THIS_MODULE;\n18example_file->read_proc = example_file_read;\n19example_file->write_proc = example_file_write\n')),(0,c.kt)("p",null,"\u4f5c\u4e3a\u4e0a\u8ff0\u51fd\u6570\u8fd4\u56de\u503c\u7684proc_dir_entry\u7ed3\u6784\u4f53\u5305\u542b\u4e86\u201c/proc\u201d\u8282\u70b9\u7684\u8bfb\u51fd\u6570\u6307\u9488\uff08read_proc_t",(0,c.kt)("em",{parentName:"p"},"read_proc\uff09\u3001\u5199\u51fd\u6570\u6307\u9488\uff08write_proc_t"),"write_proc\uff09\u4ee5\u53ca\u7236\u8282\u70b9\u3001\u5b50\u8282\u70b9\u4fe1\u606f\u7b49\u3002"),(0,c.kt)("p",null,"/proc\u8282\u70b9\u7684\u8bfb\u5199\u51fd\u6570\u7684\u7c7b\u578b\u5206\u522b\u4e3a\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"typedef int (read_proc_t)(char *page, char **start, off_t off,\n                                  int count, int *eof, void *data);\ntypedef int (write_proc_t)(struct file *file, const char __user *buffer,\n                                  unsigned long count, void *data);\n")),(0,c.kt)("p",null,"[\u63d2\u56fe]","\u8bfb\u51fd\u6570\u4e2dpage\u6307\u9488\u6307\u5411\u7528\u4e8e\u5199\u5165\u6570\u636e\u7684\u7f13\u51b2\u533a\uff0cstart\u7528\u4e8e\u8fd4\u56de\u5b9e\u9645\u7684\u6570\u636e\u5e76\u5199\u5230\u5185\u5b58\u9875\u7684\u4f4d\u7f6e\uff0ceof\u662f\u7528\u4e8e\u8fd4\u56de\u8bfb\u7ed3\u675f\u6807\u5fd7\uff0coffset\u662f\u8bfb\u7684\u504f\u79fb\uff0ccount\u662f\u8981\u8bfb\u7684\u6570\u636e\u957f\u5ea6\u3002start\u53c2\u6570\u6bd4\u8f83\u590d\u6742\uff0c\u5bf9\u4e8e/proc\u53ea\u5305\u542b\u7b80\u5355\u6570\u636e\u7684\u60c5\u51b5\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u5728\u8bfb\u51fd\u6570\u4e2d\u8bbe\u7f6e*start\uff0c\u8fd9\u610f\u5473\u7740\u5185\u6838\u5c06\u8ba4\u4e3a\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u9875\u504f\u79fb0\u7684\u5730\u65b9\u3002"),(0,c.kt)("p",null,"\u5199\u51fd\u6570\u4e0efile_operations\u4e2d\u7684write\uff08\uff09\u6210\u5458\u51fd\u6570\u7c7b\u4f3c\uff0c\u9700\u8981\u4e00\u6b21\u4ece\u7528\u6237\u7f13\u51b2\u533a\u5230\u5185\u5b58\u7a7a\u95f4\u7684\u590d\u5236\u8fc7\u7a0b\u3002"),(0,c.kt)("p",null,"\u5728Linux\u7cfb\u7edf\u4e2d\u53ef\u7528\u5982\u4e0b\u51fd\u6570\u5220\u9664/proc\u8282\u70b9\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"void remove_proc_entry(const char *name, struct proc_dir_entry *parent);\n")),(0,c.kt)("p",null,"\u5728Linux\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u53ef\u4f7f\u7528\u7684/proc\u8282\u70b9\u5b8f\u5305\u62ec\uff1aproc_root_fs\uff08/proc\uff09\u3001proc_net\uff08/proc/net\uff09\u3001proc_bus\uff08/proc/bus\uff09\u3001proc_root_driver\uff08/proc/driver\uff09\u7b49\uff0cproc_root_fs\u5b9e\u9645\u4e0a\u5c31\u662fNULL\u3002"),(0,c.kt)("p",null,"\u4ee3\u7801\u6e05\u535521.6\u6240\u793a\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u8303\u4f8b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5728\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\u521b\u5efa/proc/test_dir\u76ee\u5f55\uff0c\u5e76\u5728\u8be5\u76ee\u5f55\u4e2d\u521b\u5efa/proc/test_dir/test_rw\u6587\u4ef6\u8282\u70b9\uff0c\u5728\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u4e2d\u64a4\u9500\u201c/proc\u201d\u8282\u70b9\uff0c\u800c/proc/test_dir/test_rw\u6587\u4ef6\u4e2d\u53ea\u4fdd\u5b58\u4e86\u4e00\u4e2a32\u4f4d\u7684\u6574\u6570\u3002"),(0,c.kt)("p",null,"\u4ee3\u7801\u6e05\u535521.6\u3000/proc\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u8303\u4f8b"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},' 1#include <linux/module.h>\n 2#include <linux/kernel.h>\n 3#include <linux/init.h>\n 4#include <linux/proc_fs.h>\n 5\n 6static unsigned int variable;\n 7static struct proc_dir_entry *test_dir, *test_entry;\n 8\n 9static int test_proc_read(char *buf, char **start, off_t off, int count,\n10      int *eof, void *data)\n11{\n12 unsigned int *ptr_var = data;\n13 return sprintf(buf, "%u\\n", *ptr_var);\n14}\n15\n16static int test_proc_write(struct file *file, const char *buffer,\n17      unsigned long count, void *data)\n18{\n19 unsigned int *ptr_var = data;\n20\n21 *ptr_var = simple_strtoul(buffer, NULL, 10);\n22\n23 return count;\n24}\n25\n26static __init int test_proc_init(void)\n27{\n28 test_dir = proc_mkdir("test_dir", NULL);\n29 if (test_dir) {\n30     test_entry = create_proc_entry("test_rw", 0666, test_dir);\n31     if (test_entry) {\n32         test_entry->nlink = 1;\n33         test_entry->data = &variable;\n34         test_entry->read_proc = test_proc_read;\n35         test_entry->write_proc = test_proc_write;\n36         return 0;\n37     }\n38 }\n39\n40 return -ENOMEM;\n41}\n42module_init(test_proc_init);\n43\n44static __exit void test_proc_cleanup(void)\n45{\n46 remove_proc_entry("test_rw", test_dir);\n47 remove_proc_entry("test_dir", NULL);\n48}\n49module_exit(test_proc_cleanup);\n50\n51MODULE_AUTHOR("Barry Song <baohua@kernel.org>");\n52MODULE_DESCRIPTION("proc exmaple");\n53MODULE_LICENSE("GPL v2");\n')),(0,c.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u7b2c21\u884c\u8c03\u7528\u7684simple_strtoul\uff08\uff09\u7528\u4e8e\u5c06\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u957f\u6574\u6570\uff0c\u7b2c3\u4e2a\u53c2\u657010\u610f\u5473\u7740\u8f6c\u5316\u65b9\u5f0f\u662f\u5341\u8fdb\u5236\u3002"),(0,c.kt)("p",null,"\u7f16\u8bd1\u4e0a\u8ff0\u7b80\u5355\u7684proc.c\u4e3aproc.ko\uff0c\u8fd0\u884cinsmod proc.ko\u52a0\u8f7d\u8be5\u6a21\u5757\u540e\uff0c\u201c/proc\u201d\u76ee\u5f55\u4e0b\u5c06\u591a\u51fa\u4e00\u4e2a\u76ee\u5f55test_dir\uff0c\u8be5\u76ee\u5f55\u4e0b\u5305\u542b\u4e00\u4e2atest_rw\uff0cls\u2013l\u7684\u7ed3\u679c\u5982\u4e0b\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"$ ls -l /proc/test_dir/test_rw\n-rw-rw-rw- 1 root root 0 Aug 16 20:45 /proc/test_dir/test_rw\n")),(0,c.kt)("p",null,"\u6d4b\u8bd5/proc/test_dir/test_rw\u7684\u8bfb\u5199\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"$ cat /proc/test_dir/test_rw\n0\n$ echo 111 > /proc/test_dir/test_rw\n$ cat /proc/test_dir/test_rw\n")),(0,c.kt)("p",null,"\u8bf4\u660e\u6211\u4eec\u4e0a\u4e00\u6b65\u6267\u884c\u7684\u5199\u64cd\u4f5c\u662f\u6b63\u786e\u7684\u3002"),(0,c.kt)("p",null,"\u5728Linux 3.10\u53ca\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c\u201c/proc\u201d\u7684\u5185\u6838API\u548c\u5b9e\u73b0\u67b6\u6784\u53d8\u66f4\u8f83\u5927\uff0ccreate_proc_entry\uff08\uff09\u3001create_proc_read_entry\uff08\uff09\u4e4b\u7c7b\u7684API\u90fd\u88ab\u5220\u9664\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u76f4\u63a5\u4f7f\u7528proc_create\uff08\uff09\u3001proc_create_data\uff08\uff09API\u3002\u540c\u65f6\uff0c\u4e5f\u4e0d\u518d\u5b58\u5728read_proc\uff08\uff09\u3001write_proc\uff08\uff09\u4e4b\u7c7b\u7684\u9488\u5bf9proc_dir_entry\u7684\u6210\u5458\u51fd\u6570\u4e86\uff0c\u800c\u662f\u76f4\u63a5\u628afile_operations\u7ed3\u6784\u4f53\u7684\u6307\u9488\u4f20\u5165proc_create\uff08\uff09\u6216\u8005proc_create_data\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u5176\u539f\u578b\u4e3a\uff1a"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"static inline struct proc_dir_entry *proc_create(\nconst char *name, umode_t mode, struct proc_dir_entry *parent,\nconst struct file_operations *proc_fops);\nstruct proc_dir_entry *proc_create_data(\nconst char *name, umode_t mode, struct proc_dir_entry *parent,\nconst struct file_operations *proc_fops, void *data);\n")),(0,c.kt)("p",null,"\u6211\u4eec\u628a\u4ee3\u7801\u6e05\u535521.6\u7684\u8303\u4f8b\u6539\u9020\u4e3a\u540c\u65f6\u652f\u6301Linux 3.10\u4ee5\u524d\u7684\u5185\u6838\u548cLinux3.10\u4ee5\u540e\u7684\u5185\u6838\u3002\u6539\u9020\u7ed3\u679c\u5982\u4ee3\u7801\u6e05\u535521.7\u6240\u793a\u3002#if LINUX_VERSION_CODE<KERNEL_VERSION\uff083\uff0c10\uff0c0\uff09\u4e2d\u7684\u90e8\u5206\u662f\u65e7\u7248\u672c\u7684\u4ee3\u7801\uff0c\u4e0e21.6\u76f8\u540c\uff0c\u6240\u4ee5\u7701\u7565\u4e86\u3002"),(0,c.kt)("p",null,"\u4ee3\u7801\u6e05\u535521.7\u3000\u652f\u6301Linux 3.10\u4ee5\u540e\u5185\u6838\u7684/proc\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u8303\u4f8b"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},' 1#include <linux/module.h>\n 2#include <linux/kernel.h>\n 3#include <linux/init.h>\n 4#include <linux/version.h>\n 5#include <linux/proc_fs.h>\n 6#include <linux/seq_file.h>\n 7\n 8static unsigned int variable;\n 9static struct proc_dir_entry *test_dir, *test_entry;\n10\n11#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 10, 0)\n12...\n13#else\n14static int test_proc_show(struct seq_file *seq, void *v)\n15{\n16 unsigned int *ptr_var = seq->private;\n17 seq_printf(seq, "%u\\n", *ptr_var);\n18 return 0;\n19}\n20\n21static ssize_t test_proc_write(struct file *file, const char __user *buffer,\n22      size_t count, loff_t *ppos)\n23{\n24 struct seq_file *seq = file->private_data;\n25 unsigned int *ptr_var = seq->private;\n26\n27 *ptr_var = simple_strtoul(buffer, NULL, 10);\n28 return count;\n29}\n30\n31static int test_proc_open(struct inode *inode, struct file *file)\n32{\n33 return single_open(file, test_proc_show, PDE_DATA(inode));\n34}\n35\n36static const struct file_operations test_proc_fops =\n37{\n38 .owner = THIS_MODULE,\n39 .open = test_proc_open,\n40 .read = seq_read,\n41 .write = test_proc_write,\n42 .llseek = seq_lseek,\n43 .release = single_release,\n44};\n45#endif\n46\n47static __init int test_proc_init(void)\n48{\n49 test_dir = proc_mkdir("test_dir", NULL);\n50 if (test_dir) {\n51#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 10, 0)\n52      ...\n53#else\n54 test_entry = proc_create_data("test_rw",0666, test_dir, &test_proc_fops, &variable);\n55 if (test_entry)\n56     return 0;\n57#endif\n58 }\n59\n60 return -ENOMEM;\n61}\n62module_init(test_proc_init);\n63\n64static __exit void test_proc_cleanup(void)\n65{\n66 remove_proc_entry("test_rw", test_dir);\n67 remove_proc_entry("test_dir", NULL);\n68}\n69module_exit(test_proc_cleanup);\n')))}d.isMDXComponent=!0}}]);