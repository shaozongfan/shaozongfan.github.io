{
  "unversionedId": "奔跑吧linux/基础架构/1、处理器架构面试题",
  "id": "奔跑吧linux/基础架构/1、处理器架构面试题",
  "title": "1．请简述精简指令集RISC和复杂指令集CISC的区别。",
  "description": "​\t20世纪70年代，IBM的John Cocke研究发现，处理器提供的大量指令集和复杂寻址方式并不会被编译器生成的代码用到：20%的简单指令经常被用到，占程序总指令数的80%；而指令集里其余80%的复杂指令很少被用到，只占程序总指令数的20%。基于这种情况，他将指令集和处理器重新进行了设计，在新的设计中只保留了常用的简单指令，这样处理器不需要浪费太多的晶体管去完成那些很复杂又很少使用的复杂指令。通常，大部分简单指令能在一个周期内完成，符合这种情况的指令集叫作精简指令集计算机（Reduced Instruction Set Computer，RISC）指令集，以前的指令集叫作复杂指令集计算机（Complex Instruction Set Computer，CISC）指令集。",
  "source": "@site/docs/奔跑吧linux/基础架构/1、处理器架构面试题.md",
  "sourceDirName": "奔跑吧linux/基础架构",
  "slug": "/奔跑吧linux/基础架构/1、处理器架构面试题",
  "permalink": "/docs/奔跑吧linux/基础架构/1、处理器架构面试题",
  "draft": false,
  "editUrl": "https://github.com/shaozongfan/shaozongfan.github.io/docs/奔跑吧linux/基础架构/1、处理器架构面试题.md",
  "tags": [],
  "version": "current",
  "frontMatter": {},
  "sidebar": "tutorialSidebar",
  "previous": {
    "title": "1．为什么需要高速缓存？",
    "permalink": "/docs/奔跑吧linux/arm64体系结构编程与实践/高级缓存基础面试题"
  },
  "next": {
    "title": "1．ARM64处理器中有两个页表基地址寄存器TTBR0和TTBR1，处理器如何使用它们？",
    "permalink": "/docs/奔跑吧linux/基础架构/2、ARM64在linux内核中的实现面试题"
  }
}