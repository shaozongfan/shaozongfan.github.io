{
  "unversionedId": "技术博客/嵌入式/linux设备驱动开发详解/14.6　数据接收流程",
  "id": "技术博客/嵌入式/linux设备驱动开发详解/14.6　数据接收流程",
  "title": "14.6　数据接收流程",
  "description": "网络设备接收数据的主要方法是由中断引发设备的中断处理函数，中断处理函数判断中断类型，如果为接收中断，则读取接收到的数据，分配skbuffer数据结构和数据缓冲区，将接收到的数据复制到数据缓冲区，并调用netifrx（）函数将sk_buffer传递给上层协议。代码清单14.9所示为完成这个过程的函数模板。",
  "source": "@site/docs/技术博客/嵌入式/linux设备驱动开发详解/14.6　数据接收流程.md",
  "sourceDirName": "技术博客/嵌入式/linux设备驱动开发详解",
  "slug": "/技术博客/嵌入式/linux设备驱动开发详解/14.6　数据接收流程",
  "permalink": "/docs/技术博客/嵌入式/linux设备驱动开发详解/14.6　数据接收流程",
  "draft": false,
  "editUrl": "https://github.com/shaozongfan/shaozongfan.github.io/docs/技术博客/嵌入式/linux设备驱动开发详解/14.6　数据接收流程.md",
  "tags": [],
  "version": "current",
  "frontMatter": {},
  "sidebar": "tutorialSidebar",
  "previous": {
    "title": "14.5　数据发送流程",
    "permalink": "/docs/技术博客/嵌入式/linux设备驱动开发详解/14.5　数据发送流程"
  },
  "next": {
    "title": "14.7　网络连接状态",
    "permalink": "/docs/技术博客/嵌入式/linux设备驱动开发详解/14.7　网络连接状态"
  }
}