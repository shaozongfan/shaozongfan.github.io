"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[64146],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return p}});var r=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},s=Object.keys(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},l=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},_={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,s=t.originalType,c=t.parentName,l=o(t,["components","mdxType","originalType","parentName"]),d=u(n),p=i,f=d["".concat(c,".").concat(p)]||d[p]||_[p]||s;return n?r.createElement(f,a(a({ref:e},l),{},{components:n})):r.createElement(f,a({ref:e},l))}));function p(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var s=n.length,a=new Array(s);a[0]=d;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:i,a[1]=o;for(var u=2;u<s;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72533:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return _}});var r=n(87462),i=n(63366),s=(n(67294),n(3905)),a=["components"],o={},c=void 0,u={permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e",editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e.md",source:"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e.md",title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e",description:"\u7f51\u7edc\u8bbe\u5907\u7684\u9a71\u52a8\u7a0b\u5e8f\u8fd8\u63d0\u4f9b\u4e00\u4e9b\u4f9b\u7cfb\u7edf\u5bf9\u8bbe\u5907\u7684\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\u6216\u8bfb\u53d6\u8bbe\u5907\u76f8\u5173\u4fe1\u606f\u7684\u65b9\u6cd5\u3002",date:"2025-09-15T14:44:14.657Z",formattedDate:"2025\u5e749\u670815\u65e5",tags:[],readingTime:6.5,truncated:!1,authors:[],frontMatter:{},prevItem:{title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316"},nextItem:{title:"1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528"}},l={authorsImageUrls:[]},_=[],d={toc:_};function p(t){var e=t.components,n=(0,i.Z)(t,a);return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u7f51\u7edc\u8bbe\u5907\u7684\u9a71\u52a8\u7a0b\u5e8f\u8fd8\u63d0\u4f9b\u4e00\u4e9b\u4f9b\u7cfb\u7edf\u5bf9\u8bbe\u5907\u7684\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\u6216\u8bfb\u53d6\u8bbe\u5907\u76f8\u5173\u4fe1\u606f\u7684\u65b9\u6cd5\u3002"),(0,s.kt)("p",null,"\u5f53\u7528\u6237\u8c03\u7528ioctl\uff08\uff09\u51fd\u6570\uff0c\u5e76\u6307\u5b9aSIOCSIFHWADDR\u547d\u4ee4\u65f6\uff0c\u610f\u5473\u7740\u8981\u8bbe\u7f6e\u8fd9\u4e2a\u8bbe\u5907\u7684MAC\u5730\u5740\u3002\u8bbe\u7f6e\u7f51\u7edc\u8bbe\u5907\u7684MAC\u5730\u5740\u53ef\u7528\u5982\u4ee3\u7801\u6e05\u535514.14\u6240\u793a\u7684\u6a21\u677f\u3002"),(0,s.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.14\u3000\u8bbe\u7f6e\u7f51\u7edc\u8bbe\u5907\u7684MAC\u5730\u5740"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"}," 1static int set_mac_address(struct net_device *dev, void *addr)\n 2{\n 3    if (netif_running(dev))\n 4        return -EBUSY;  /* \u8bbe\u5907\u5fd9*/\n 5\n 6    /* \u8bbe\u7f6e\u4ee5\u592a\u7f51\u7684MAC\u5730\u5740*/\n 7    xxx_set_mac(dev, addr);\n 8\n 9    return 0;\n10}\n")),(0,s.kt)("p",null,"\u4e0a\u8ff0\u7a0b\u5e8f\u9996\u5148\u7528netif_running\uff08\uff09\u5b8f\u5224\u65ad\u8bbe\u5907\u662f\u5426\u6b63\u5728\u8fd0\u884c\uff0c\u5982\u679c\u662f\uff0c\u5219\u610f\u5473\u7740\u8bbe\u5907\u5fd9\uff0c\u6b64\u65f6\u4e0d\u5141\u8bb8\u8bbe\u7f6eMAC\u5730\u5740\uff1b\u5426\u5219\uff0c\u8c03\u7528xxx_set_mac\uff08\uff09\u51fd\u6570\u5728\u7f51\u7edc\u9002\u914d\u5668\u786c\u4ef6\u5185\u5199\u5165\u65b0\u7684MAC\u5730\u5740\u3002\u8fd9\u8981\u6c42\u8bbe\u5907\u5728\u786c\u4ef6\u4e0a\u652f\u6301MAC\u5730\u5740\u7684\u4fee\u6539\uff0c\u800c\u5b9e\u9645\u4e0a\uff0c\u8bb8\u591a\u8bbe\u5907\u5e76\u4e0d\u63d0\u4f9b\u4fee\u6539MAC\u5730\u5740\u7684\u63a5\u53e3\u3002"),(0,s.kt)("p",null,"netif_running\uff08\uff09\u5b8f\u7684\u5b9a\u4e49\u4e3a\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"static inline bool netif_running(const struct net_device *dev)\n{\n        return test_bit(__LINK_STATE_START, &dev->state);\n}\n")),(0,s.kt)("p",null,"\u5f53\u7528\u6237\u8c03\u7528ioctl\uff08\uff09\u51fd\u6570\u65f6\uff0c\u82e5\u547d\u4ee4\u4e3aSIOCSIFMAP\uff08\u5982\u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u7f51\u7edc\u914d\u7f6e\u547d\u4ee4ifconfig\u5c31\u4f1a\u5f15\u53d1\u8fd9\u4e00\u8c03\u7528\uff09\uff0c\u7cfb\u7edf\u4f1a\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u7684set_config\uff08\uff09\u51fd\u6570\u3002"),(0,s.kt)("p",null,"\u7cfb\u7edf\u4f1a\u5411set_config\uff08\uff09\u51fd\u6570\u4f20\u9012\u4e00\u4e2aifmap\u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u4e3b\u8981\u5305\u542b\u7528\u6237\u6b32\u8bbe\u7f6e\u7684\u8bbe\u5907\u8981\u4f7f\u7528\u7684I/O\u5730\u5740\u3001\u4e2d\u65ad\u7b49\u4fe1\u606f\u3002\u6ce8\u610f\uff0c\u5e76\u4e0d\u662fifmap\u7ed3\u6784\u4f53\u4e2d\u7ed9\u51fa\u7684\u6240\u6709\u4fee\u6539\u90fd\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u5927\u591a\u6570\u8bbe\u5907\u5e76\u4e0d\u9002\u5408\u5305\u542bset_config\uff08\uff09\u51fd\u6570\u3002set_config\uff08\uff09\u51fd\u6570\u7684\u4f8b\u5b50\u5982\u4ee3\u7801\u6e05\u535514.15\u6240\u793a\u3002"),(0,s.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.15\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684set_config\u51fd\u6570\u6a21\u677f"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},' 1static int xxx_config(struct net_device *dev, struct ifmap *map)\n 2{\n 3  if (netif_running(dev))   /* \u4e0d\u80fd\u8bbe\u7f6e\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u72b6\u6001\u7684\u8bbe\u5907*/\n 4    return  - EBUSY;\n 5\n 6  /* \u5047\u8bbe\u4e0d\u5141\u8bb8\u6539\u53d8I/O \u5730\u5740*/\n 7  if (map->base_addr != dev->base_addr) {\n 8    printk(KERN_WARNING "xxx: Can\'t change I/O address\\n");\n 9    return  - EOPNOTSUPP;\n10  }\n11\n12  /* \u5047\u8bbe\u5141\u8bb8\u6539\u53d8IRQ */\n13  if (map->irq != dev->irq)\n14    dev->irq = map->irq;\n15\n16  return 0;\n17}\n')),(0,s.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684set_config\uff08\uff09\u51fd\u6570\u63a5\u53d7IRQ\u7684\u4fee\u6539\uff0c\u62d2\u7edd\u8bbe\u5907I/O\u5730\u5740\u7684\u4fee\u6539\u3002\u5177\u4f53\u7684\u8bbe\u5907\u662f\u5426\u63a5\u53d7\u8fd9\u4e9b\u4fe1\u606f\u7684\u4fee\u6539\uff0c\u8981\u89c6\u786c\u4ef6\u7684\u8bbe\u8ba1\u800c\u5b9a\u3002"),(0,s.kt)("p",null,"\u5982\u679c\u7528\u6237\u8c03\u7528ioctl\uff08\uff09\u65f6\uff0c\u547d\u4ee4\u7c7b\u578b\u5728SIOCDEVPRIVATE\u548cSIOCDEVPRIVATE+15\u4e4b\u95f4\uff0c\u7cfb\u7edf\u4f1a\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u7684do_ioctl\uff08\uff09\u51fd\u6570\uff0c\u4ee5\u8fdb\u884c\u8bbe\u5907\u4e13\u7528\u6570\u636e\u7684\u8bbe\u7f6e\u3002\u8fd9\u4e2a\u8bbe\u7f6e\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4e5f\u5e76\u4e0d\u9700\u8981\u3002"),(0,s.kt)("p",null,"\u9a71\u52a8\u7a0b\u5e8f\u8fd8\u5e94\u63d0\u4f9bget_stats\uff08\uff09\u51fd\u6570\u4ee5\u5411\u7528\u6237\u53cd\u9988\u8bbe\u5907\u72b6\u6001\u548c\u7edf\u8ba1\u4fe1\u606f\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2anet_device_stats\u7ed3\u6784\u4f53\uff0c\u5982\u4ee3\u7801\u6e05\u535514.16\u6240\u793a\u3002"),(0,s.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.16\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684get_stats\uff08\uff09\u51fd\u6570\u6a21\u677f"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"1struct net_device_stats *xxx_stats(struct net_device *dev)\n2{\n3  \u2026\n4  return  &dev->stats;\n5}\n")),(0,s.kt)("p",null,"\u6709\u7684\u7f51\u5361\u786c\u4ef6\u6bd4\u8f83\u5f3a\u5927\uff0c\u53ef\u4ee5\u4ece\u786c\u4ef6\u7684\u5bc4\u5b58\u5668\u4e2d\u8bfb\u51fa\u4e00\u4e9b\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982rx_missed_errors\u3001tx_aborted_errors\u3001rx_dropped\u3001rx_length_errors\u7b49\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5e94\u8be5\u4ece\u786c\u4ef6\u5bc4\u5b58\u5668\u8bfb\u53d6\u7edf\u8ba1\u4fe1\u606f\uff0c\u586b\u5145\u5230net_device\u7684stats\u5b57\u6bb5\u4e2d\uff0c\u5e76\u8fd4\u56de\u3002\u5177\u4f53\u4f8b\u5b50\u53ef\u89c1drivers/net/ethernet/adaptec/starfire.c\u4e2d\u7684get_stats\uff08\uff09\u51fd\u6570\u3002"),(0,s.kt)("p",null,"net_device_stats\u7ed3\u6784\u4f53\u5b9a\u4e49\u5728\u5185\u6838\u7684include/linux/netdevice.h\u6587\u4ef6\u4e2d\uff0c\u5b83\u5305\u542b\u4e86\u6bd4\u8f83\u5b8c\u6574\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u4ee3\u7801\u6e05\u535514.17\u6240\u793a\u3002"),(0,s.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.17\u3000net_device_stats\u7ed3\u6784\u4f53"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"}," 1struct net_device_stats\n 2{\n 3  unsigned long rx_packets;      /* \u6536\u5230\u7684\u6570\u636e\u5305\u6570*/\n 4  unsigned long tx_packets;      /* \u53d1\u9001\u7684\u6570\u636e\u5305\u6570*/\n 5  unsigned long rx_bytes;        /* \u6536\u5230\u7684\u5b57\u8282\u6570*/\n 6  unsigned long tx_bytes;        /* \u53d1\u9001\u7684\u5b57\u8282\u6570*/\n 7  unsigned long rx_errors;       /* \u6536\u5230\u7684\u9519\u8bef\u6570\u636e\u5305\u6570*/\n 8  unsigned long tx_errors;       /* \u53d1\u751f\u53d1\u9001\u9519\u8bef\u7684\u6570\u636e\u5305\u6570*/\n 9  ...\n10};\n")),(0,s.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u6e05\u5355\u53ea\u662f\u5217\u51fa\u4e86net_device_stats\u5305\u542b\u7684\u4e3b\u9879\u76ee\u7edf\u8ba1\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u9879\u76ee\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7ec6\u5206\uff0cnet_device_stats\u4e2d\u7684\u5176\u4ed6\u4fe1\u606f\u7ed9\u51fa\u4e86\u66f4\u8be6\u7ec6\u7684\u5b50\u9879\u76ee\u7edf\u8ba1\uff0c\u8be6\u89c1Linux\u6e90\u4ee3\u7801\u3002"),(0,s.kt)("p",null,"net_device_stats\u7ed3\u6784\u4f53\u5df2\u7ecf\u5185\u5d4c\u5728\u4e0e\u7f51\u7edc\u8bbe\u5907\u5bf9\u5e94\u7684net_device\u7ed3\u6784\u4f53\u4e2d\uff0c\u800c\u5176\u4e2d\u7edf\u8ba1\u4fe1\u606f\u7684\u4fee\u6539\u5219\u5e94\u8be5\u5728\u8bbe\u5907\u9a71\u52a8\u7684\u4e0e\u53d1\u9001\u548c\u63a5\u6536\u76f8\u5173\u7684\u5177\u4f53\u51fd\u6570\u4e2d\u5b8c\u6210\uff0c\u8fd9\u4e9b\u51fd\u6570\u5305\u62ec\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3001\u6570\u636e\u5305\u53d1\u9001\u51fd\u6570\u3001\u6570\u636e\u5305\u53d1\u9001\u8d85\u65f6\u51fd\u6570\u548c\u6570\u636e\u5305\u63a5\u6536\u76f8\u5173\u51fd\u6570\u7b49\u3002\u6211\u4eec\u5e94\u8be5\u5728\u8fd9\u4e9b\u51fd\u6570\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684\u4ee3\u7801\uff0c\u5982\u4ee3\u7801\u6e05\u535514.18\u6240\u793a\u3002"),(0,s.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.18\u3000net_device_stats\u7ed3\u6784\u4f53\u4e2d\u7edf\u8ba1\u4fe1\u606f\u7684\u7ef4\u62a4"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"}," 1/* \u53d1\u9001\u8d85\u65f6\u51fd\u6570*/\n 2void xxx_tx_timeout(struct net_device *dev)\n 3{\n 4  ...\n 5  dev->stats.tx_errors++;        /* \u53d1\u9001\u9519\u8bef\u5305\u6570\u52a01 */\n 6  ...\n 7}\n 8\n 9/* \u4e2d\u65ad\u5904\u7406\u51fd\u6570*/\n10static void xxx_interrupt(int irq, void *dev_id)\n11{\n12  struct net_device *dev = dev_id;\n13  switch (status &ISQ_EVENT_MASK) {\n14  ...\n15  case ISQ_TRANSMITTER_EVENT:       /\n16      dev->stats.tx_packets++;      /* \u6570\u636e\u5305\u53d1\u9001\u6210\u529f\uff0ctx_packets\u4fe1\u606f\u52a01 */\n17      netif_wake_queue(dev);        /* \u901a\u77e5\u4e0a\u5c42\u534f\u8bae*/\n18      if ((status &(TX_OK | TX_LOST_CRS | TX_SQE_ERROR |\n19      TX_LATE_COL | TX_16_COL)) != TX_OK) { /* \u8bfb\u53d6\u786c\u4ef6\u4e0a\u7684\u51fa\u9519\u6807\u5fd7*/\n20        /* \u6839\u636e\u9519\u8bef\u7684\u4e0d\u540c\u60c5\u51b5\uff0c\u5bf9net_device_stats\u7684\u4e0d\u540c\u6210\u5458\u52a01 */\n21        if ((status &TX_OK) == 0)\n22          dev->stats.tx_errors++;\n23        if (status &TX_LOST_CRS)\n24          dev->stats.tx_carrier_errors++;\n25        if (status &TX_SQE_ERROR)\n26          dev->stats.tx_heartbeat_errors++;\n27        if (status &TX_LATE_COL)\n28          dev->stats.tx_window_errors++;\n29        if (status &TX_16_COL)\n30          dev->stats.tx_aborted_errors++;\n31      }\n32      break;\n33  case ISQ_RX_MISS_EVENT:\n34      dev->stats.rx_missed_errors += (status >> 6);\n35      break;\n36  case ISQ_TX_COL_EVENT:\n37      dev->stats.collisions += (status >> 6);\n38      break;\n39  }\n40}\n")))}p.isMDXComponent=!0}}]);