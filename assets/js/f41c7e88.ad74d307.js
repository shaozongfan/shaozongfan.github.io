"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[72566],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return l}});var r=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=r.createContext({}),_=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},d=function(e){var n=_(e.components);return r.createElement(c.Provider,{value:n},e.children)},o={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},a=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),a=_(t),l=s,m=a["".concat(c,".").concat(l)]||a[l]||o[l]||i;return t?r.createElement(m,p(p({ref:n},d),{},{components:t})):r.createElement(m,p({ref:n},d))}));function l(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,p=new Array(i);p[0]=a;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u.mdxType="string"==typeof e?e:s,p[1]=u;for(var _=2;_<i;_++)p[_]=t[_];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}a.displayName="MDXCreateElement"},2570:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return l},frontMatter:function(){return u},metadata:function(){return _},toc:function(){return o}});var r=t(87462),s=t(63366),i=(t(67294),t(3905)),p=["components"],u={},c=void 0,_={permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM",editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM.md",source:"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM.md",title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM",description:"Linux\u652f\u6301STANDBY\u3001\u6302\u8d77\u5230RAM\u3001\u6302\u8d77\u5230\u786c\u76d8\u7b49\u5f62\u5f0f\u7684\u5f85\u673a\uff0c\u5982\u56fe19.9\u6240\u793a\u3002\u4e00\u822c\u7684\u5d4c\u5165\u5f0f\u4ea7\u54c1\u4ec5\u4ec5\u53ea\u5b9e\u73b0\u4e86\u6302\u8d77\u5230RAM\uff08\u4e5f\u7b80\u79f0\u4e3as2ram\uff0c\u6216\u5e38\u7b80\u79f0\u4e3aSTR\uff09\uff0c\u5373\u5c06\u7cfb\u7edf\u7684\u72b6\u6001\u4fdd\u5b58\u4e8e\u5185\u5b58\u4e2d\uff0c\u5e76\u5c06SDRAM\u7f6e\u4e8e\u81ea\u5237\u65b0\u72b6\u6001\uff0c\u5f85\u7528\u6237\u6309\u952e\u7b49\u64cd\u4f5c\u540e\u518d\u91cd\u65b0\u6062\u590d\u7cfb\u7edf\u3002\u5c11\u6570\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u4f1a\u5b9e\u73b0\u6302\u8d77\u5230\u786c\u76d8\uff08\u7b80\u79f0STD\uff09\uff0c\u5b83\u4e0e\u6302\u8d77\u5230RAM\u7684\u4e0d\u540c\u662fs2ram\u5e76\u4e0d\u5173\u673a\uff0cSTD\u5219\u628a\u7cfb\u7edf\u7684\u72b6\u6001\u4fdd\u6301\u4e8e\u78c1\u76d8\uff0c\u7136\u540e\u5173\u95ed\u6574\u4e2a\u7cfb\u7edf\u3002",date:"2025-09-15T14:44:14.865Z",formattedDate:"2025\u5e749\u670815\u65e5",tags:[],readingTime:9.05,truncated:!1,authors:[],frontMatter:{},prevItem:{title:"15.3.1\u3000I2 C\u9002\u914d\u5668\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.3\u3000Linux I2 C\u9002\u914d\u5668\u9a71\u52a8"},nextItem:{title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784"}},d={authorsImageUrls:[]},o=[],a={toc:o};function l(e){var n=e.components,u=(0,s.Z)(e,p);return(0,i.kt)("wrapper",(0,r.Z)({},a,u,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Linux\u652f\u6301STANDBY\u3001\u6302\u8d77\u5230RAM\u3001\u6302\u8d77\u5230\u786c\u76d8\u7b49\u5f62\u5f0f\u7684\u5f85\u673a\uff0c\u5982\u56fe19.9\u6240\u793a\u3002\u4e00\u822c\u7684\u5d4c\u5165\u5f0f\u4ea7\u54c1\u4ec5\u4ec5\u53ea\u5b9e\u73b0\u4e86\u6302\u8d77\u5230RAM\uff08\u4e5f\u7b80\u79f0\u4e3as2ram\uff0c\u6216\u5e38\u7b80\u79f0\u4e3aSTR\uff09\uff0c\u5373\u5c06\u7cfb\u7edf\u7684\u72b6\u6001\u4fdd\u5b58\u4e8e\u5185\u5b58\u4e2d\uff0c\u5e76\u5c06SDRAM\u7f6e\u4e8e\u81ea\u5237\u65b0\u72b6\u6001\uff0c\u5f85\u7528\u6237\u6309\u952e\u7b49\u64cd\u4f5c\u540e\u518d\u91cd\u65b0\u6062\u590d\u7cfb\u7edf\u3002\u5c11\u6570\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u4f1a\u5b9e\u73b0\u6302\u8d77\u5230\u786c\u76d8\uff08\u7b80\u79f0STD\uff09\uff0c\u5b83\u4e0e\u6302\u8d77\u5230RAM\u7684\u4e0d\u540c\u662fs2ram\u5e76\u4e0d\u5173\u673a\uff0cSTD\u5219\u628a\u7cfb\u7edf\u7684\u72b6\u6001\u4fdd\u6301\u4e8e\u78c1\u76d8\uff0c\u7136\u540e\u5173\u95ed\u6574\u4e2a\u7cfb\u7edf\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"1747061022345",src:t(24623).Z,width:"828",height:"682"})),(0,i.kt)("p",null,"\u56fe19.9\u3000Linux\u7684\u5f85\u673a\u6a21\u5f0f"),(0,i.kt)("p",null,"\u5728Linux\u4e0b\uff0c\u8fd9\u4e9b\u884c\u4e3a\u901a\u5e38\u662f\u7531\u7528\u6237\u7a7a\u95f4\u89e6\u53d1\u7684\uff0c\u901a\u8fc7\u5411/sys/power/state\u5199\u5165mem\u53ef\u5f00\u59cb\u6302\u8d77\u5230RAM\u7684\u6d41\u7a0b\u3002\u5f53\u7136\uff0c\u8bb8\u591aLinux\u4ea7\u54c1\u4f1a\u6709\u4e00\u4e2a\u6309\u952e\uff0c\u4e00\u6309\u5c31\u8fdb\u5165\u6302\u8d77\u5230RAM\u3002\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u4e0e\u8fd9\u4e2a\u6309\u952e\u5bf9\u5e94\u7684\u8f93\u5165\u8bbe\u5907\u9a71\u52a8\u6c47\u62a5\u4e86\u4e00\u4e2a\u548c\u7535\u6e90\u76f8\u5173\u7684input_event\uff0c\u7528\u6237\u7a7a\u95f4\u7684\u7535\u6e90\u7ba1\u7406daemon\u8fdb\u7a0b\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u540e\uff0c\u518d\u89e6\u53d1s2ram\u7684\u3002\u5f53\u7136\uff0c\u5185\u6838\u4e5f\u6709\u4e00\u4e2aINPUT_APMPOWER\u9a71\u52a8\uff0c\u4f4d\u4e8edrivers/input/apm-power.c\u4e0b\uff0c\u5b83\u53ef\u4ee5\u5728\u5185\u6838\u7ea7\u522b\u4fa6\u542cEV_PWR\u7c7b\u4e8b\u4ef6\uff0c\u5e76\u901a\u8fc7apm_queue_event\uff08APM_USER_SUSPEND\uff09\u81ea\u52a8\u5f15\u53d1s2ram\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'static void system_power_event(unsigned int keycode)\n{\nswitch (keycode) {\ncase KEY_SUSPEND:\n             apm_queue_event(APM_USER_SUSPEND);\n             pr_info("Requesting system suspend...\\n");\nbreak;\ndefault:\nbreak;\n       }\n}\nstatic void apmpower_event(struct input_handle *handle, unsigned int type,\nunsigned int code, int value)\n{\u2026\nswitch (type) {\ncase EV_PWR:\n              system_power_event(code);\nbreak;\u2026\n     }\n}\n')),(0,i.kt)("p",null,"\u5728Linux\u5185\u6838\u4e2d\uff0c\u5927\u81f4\u7684\u6302\u8d77\u5230RAM\u7684\u6302\u8d77\u548c\u6062\u590d\u6d41\u7a0b\u5982\u56fe19.10\u6240\u793a\uff08\u7275\u6d89\u7684\u64cd\u4f5c\u5305\u62ec\u540c\u6b65\u6587\u4ef6\u7cfb\u7edf\u3001freeze\u8fdb\u7a0b\u3001\u8bbe\u5907\u9a71\u52a8\u6302\u8d77\u4ee5\u53ca\u7cfb\u7edf\u7684\u6302\u8d77\u5165\u53e3\u7b49\uff09\u3002"),(0,i.kt)("p",null,"\u5728Linux\u5185\u6838\u7684device_driver\u7ed3\u6784\u4e2d\uff0c\u542b\u6709\u4e00\u4e2apm\u6210\u5458\uff0c\u5b83\u662f\u4e00\u4e2adev_pm_ops\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u5728\u8be5\u7ed3\u6784\u4f53\u4e2d\uff0c\u5c01\u88c5\u4e86\u6302\u8d77\u5230RAM\u548c\u6302\u8d77\u5230\u786c\u76d8\u6240\u9700\u8981\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5982\u4ee3\u7801\u6e05\u535519.13\u6240\u793a\u3002"),(0,i.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.13\u3000dev_pm_ops\u7ed3\u6784\u4f53"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," 1 struct dev_pm_ops {\n 2        int (*prepare)(struct device *dev);\n 3        void (*complete)(struct device *dev);\n 4        int (*suspend)(struct device *dev);\n 5        int (*resume)(struct device *dev);\n 6        int (*freeze)(struct device *dev);\n 7        int (*thaw)(struct device *dev);\n 8        int (*poweroff)(struct device *dev);\n 9        int (*restore)(struct device *dev);\n10        int (*suspend_late)(struct device *dev);\n11        int (*resume_early)(struct device *dev);\n12        int (*freeze_late)(struct device *dev);\n13        int (*thaw_early)(struct device *dev);\n14        int (*poweroff_late)(struct device *dev);\n15        int (*restore_early)(struct device *dev);\n16        int (*suspend_noirq)(struct device *dev);\n17        int (*resume_noirq)(struct device *dev);\n18        int (*freeze_noirq)(struct device *dev);\n19        int (*thaw_noirq)(struct device *dev);\n20        int (*poweroff_noirq)(struct device *dev);\n21        int (*restore_noirq)(struct device *dev);\n22        int (*runtime_suspend)(struct device *dev);\n23        int (*runtime_resume)(struct device *dev);\n24        int (*runtime_idle)(struct device *dev);\n25};\n")),(0,i.kt)("p",null,"\u56fe19.10\u5b9e\u9645\u4e0a\u4e5f\u7ed9\u51fa\u4e86\u5728\u6302\u8d77\u5230RAM\u7684\u65f6\u5019\u8fd9\u4e9bPM\u56de\u8c03\u51fd\u6570\u7684\u8c03\u7528\u65f6\u673a\u3002"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"1747061123361",src:t(79027).Z,width:"798",height:"1228"})),(0,i.kt)("p",null,"\u56fe19.10\u3000Linux\u6302\u8d77\u5230RAM\u6d41\u7a0b"),(0,i.kt)("p",null,"\u76ee\u524d\u6bd4\u8f83\u63a8\u8350\u7684\u505a\u6cd5\u662f\u5728platform_driver\u3001i2c_driver\u548cspi_driver\u7b49xxx_driver\u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684driver\u6210\u5458\u4e2d\uff0c\u4ee5\u4e0a\u8ff0\u7ed3\u6784\u4f53\u7684\u5f62\u5f0f\u5c01\u88c5PM\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u8d4b\u503c\u5230driver\u7684pm\u5b57\u6bb5\u3002\u5982\u4ee3\u7801\u6e05\u535519.14\u4e2d\u7684\u7b2c50\u884c\uff0c\u5728drivers/spi/spi-s3c64xx.c\u4e2d\uff0cplatform_driver\u4e2d\u7684pm\u6210\u5458\u88ab\u8d4b\u503c\u3002"),(0,i.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.14\u3000\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684pm\u6210\u5458"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},' 1#ifdef CONFIG_PM_SLEEP\n 2static int s3c64xx_spi_suspend(struct device *dev)\n 3{\n 4 struct spi_master *master = dev_get_drvdata(dev);\n 5 struct s3c64xx_spi_driver_data *sdd = spi_master_get_devdata(master);\n 6\n 7 int ret = spi_master_suspend(master);\n 8 if (ret)\n 9     return ret;\n10\n11 if (!pm_runtime_suspended(dev)) {\n12     clk_disable_unprepare(sdd->clk);\n13     clk_disable_unprepare(sdd->src_clk);\n14 }\n15\n16 sdd->cur_speed = 0; /* \u8f93\u51fa\u65f6\u949f\u505c\u6b62*/\n17\n18 return 0;\n19}\n20\n21static int s3c64xx_spi_resume(struct device *dev)\n22{\n23 struct spi_master *master = dev_get_drvdata(dev);\n24 struct s3c64xx_spi_driver_data *sdd = spi_master_get_devdata(master);\n25 struct s3c64xx_spi_info *sci = sdd->cntrlr_info;\n26\n27 if (sci->cfg_gpio)\n28     sci->cfg_gpio();\n29\n30 if (!pm_runtime_suspended(dev)) {\n31     clk_prepare_enable(sdd->src_clk);\n32     clk_prepare_enable(sdd->clk);\n33 }\n34\n35 s3c64xx_spi_hwinit(sdd, sdd->port_id);\n36\n37 return spi_master_resume(master);\n38}\n39#endif /* CONFIG_PM_SLEEP */\n40\n41static const struct dev_pm_ops s3c64xx_spi_pm = {\n42 SET_SYSTEM_SLEEP_PM_OPS(s3c64xx_spi_suspend, s3c64xx_spi_resume)\n43 SET_RUNTIME_PM_OPS(s3c64xx_spi_runtime_suspend,\n44            s3c64xx_spi_runtime_resume, NULL)\n45};\n46\n47static struct platform_driver s3c64xx_spi_driver = {\n48 .driver = {\n49     .name= "s3c64xx-spi",\n50     .pm = &s3c64xx_spi_pm,\n51     .of_match_table = of_match_ptr(s3c64xx_spi_dt_match),\n52 },\n53 .probe = s3c64xx_spi_probe,\n54 .remove = s3c64xx_spi_remove,\n55 .id_table = s3c64xx_spi_driver_ids,\n56};\n')),(0,i.kt)("p",null,"s3c64xx_spi_suspend\uff08\uff09\u5b8c\u6210\u4e86\u65f6\u949f\u7684\u7981\u6b62\uff0cs3c64xx_spi_resume\uff08\uff09\u5219\u5b8c\u6210\u4e86\u786c\u4ef6\u7684\u91cd\u65b0\u521d\u59cb\u5316\u3001\u65f6\u949f\u7684\u4f7f\u80fd\u7b49\u5de5\u4f5c\u3002\u7b2c42\u884c\u7684SET_SYSTEM_SLEEP_PM_OPS\u662f\u4e00\u4e2a\u5feb\u6377\u5b8f\uff0c\u5b83\u5b8c\u6210suspend\u3001resume\u7b49\u6210\u5458\u51fd\u6570\u7684\u8d4b\u503c\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"#define SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \\\n       .suspend = suspend_fn, \\\n       .resume = resume_fn, \\\n       .freeze = suspend_fn, \\\n       .thaw = resume_fn, \\\n       .poweroff = suspend_fn, \\\n       .restore = resume_fn,\n")),(0,i.kt)("p",null,"\u9664\u4e86\u4e0a\u8ff0\u63a8\u884c\u7684\u505a\u6cd5\u4ee5\u5916\uff0c\u5728platform_driver\u3001i2c_driver\u3001spi_driver\u7b49xxx_driver\u7ed3\u6784\u4f53\u4e2d\u4ecd\u7136\u4fdd\u7559\u4e86\u8fc7\u65f6\uff08Legacy\uff09\u7684suspend\u3001resume\u5165\u53e3\u51fd\u6570\uff08\u76ee\u524d\u4e0d\u518d\u63a8\u8350\u4f7f\u7528\u8fc7\u65f6\u7684\u63a5\u53e3\uff0c\u800c\u662f\u63a8\u8350\u8d4b\u503cxxx_driver\u4e2d\u7684driver\u7684pm\u6210\u5458\uff09\uff0c\u8b6c\u5982\u4ee3\u7801\u6e05\u535519.15\u7ed9\u51fa\u7684platform_driver\u5c31\u5305\u542b\u4e86\u8fc7\u65f6\u7684suspend\u3001resume\u7b49\u3002"),(0,i.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.15\u3000\u8bbe\u5907\u9a71\u52a8\u4e2d\u8fc7\u65f6\u7684PM\u6210\u5458\u51fd\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," 1struct platform_driver {\n 2       int (*probe)(struct platform_device *);\n 3       int (*remove)(struct platform_device *);\n 4       void (*shutdown)(struct platform_device *);\n 5       int (*suspend)(struct platform_device *, pm_message_t state);\n 6       int (*resume)(struct platform_device *);\n 7       struct device_driver driver;\n 8       const struct platform_device_id *id_table;\n 9};\n")),(0,i.kt)("p",null,"\u5728Linux\u7684\u6838\u5fc3\u5c42\u4e2d\uff0c\u5b9e\u9645\u4e0a\u662f\u4f18\u5148\u9009\u62e9\u6267\u884cxxx_driver.driver.pm.suspend\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u5728\u524d\u8005\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u8fc7\u65f6\u7684xxx_driver.suspend\uff08\uff09\uff0c\u5982platform_pm_suspend\uff08\uff09\u7684\u903b\u8f91\u5982\u4ee3\u7801\u6e05\u535519.16\u6240\u793a"),(0,i.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.16\u3000\u9a71\u52a8\u6838\u5fc3\u5c42\u5bfb\u627ePM\u56de\u8c03\u7684\u987a\u5e8f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," 1int platform_pm_suspend(struct device *dev)\n 2{\n 3      struct device_driver *drv = dev->driver;\n 4      int ret = 0;\n 5\n 6      if (!drv)\n 7            return 0;\n 8\n 9      if (drv->pm) {\n10             if (drv->pm->suspend)\n11                    ret = drv->pm->suspend(dev);\n12      } else {\n13             ret = platform_legacy_suspend(dev, PMSG_SUSPEND);\n14      }\n15\n16      return ret;\n17}\n")),(0,i.kt)("p",null,"\u4e00\u822c\u6765\u8bb2\uff0c\u5728\u8bbe\u5907\u9a71\u52a8\u7684\u6302\u8d77\u5165\u53e3\u51fd\u6570\u4e2d\uff0c\u4f1a\u5173\u95ed\u8bbe\u5907\u3001\u5173\u95ed\u8be5\u8bbe\u5907\u7684\u65f6\u949f\u8f93\u5165\uff0c\u751a\u81f3\u662f\u5173\u95ed\u8bbe\u5907\u7684\u7535\u6e90\uff0c\u5728\u6062\u590d\u65f6\u5219\u5b8c\u6210\u76f8\u53cd\u7684\u7684\u64cd\u4f5c\u3002\u5728\u6302\u8d77\u5230RAM\u7684\u6302\u8d77\u548c\u6062\u590d\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u6062\u590d\u540e\u8981\u6c42\u6240\u6709\u8bbe\u5907\u7684\u9a71\u52a8\u90fd\u5de5\u4f5c\u6b63\u5e38\u3002\u4e3a\u4e86\u8c03\u8bd5\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u80fd\u5185\u6838\u7684PM_DEBUG\u9009\u9879\uff0c\u5982\u679c\u60f3\u5728\u6302\u8d77\u548c\u6062\u590d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u770b\u5230\u5185\u6838\u7684\u6253\u5370\u4fe1\u606f\u4ee5\u5173\u6ce8\u5177\u4f53\u7684\u8be6\u7ec6\u6d41\u7a0b\uff0c\u53ef\u4ee5\u5728Bootloader\u4f20\u9012\u7ed9\u5185\u6838\u7684bootargs\u4e2d\u8bbe\u7f6e\u6807\u5fd7no_console_suspend\u3002"),(0,i.kt)("p",null,"\u5728\u5c06Linux\u79fb\u690d\u5230\u4e00\u4e2a\u65b0\u7684ARM SoC\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6700\u7ec8\u7cfb\u7edf\u6302\u8d77\u7684\u5165\u53e3\u9700\u7531\u82af\u7247\u4f9b\u5e94\u5546\u5728\u76f8\u5e94\u7684arch/arm/mach-xxx\u4e2d\u5b9e\u73b0platform_suspend_ops\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e00\u822c\u4e3b\u8981\u5b9e\u73b0\u5176\u4e2d\u7684enter\u548cvalid\u6210\u5458\uff0c\u5e76\u5c06\u6574\u4e2aplatform_suspend_ops\u7ed3\u6784\u4f53\u901a\u8fc7\u5185\u6838\u901a\u7528API suspend_set_ops\uff08\uff09\u6ce8\u518c\u8fdb\u7cfb\u7edf\uff0c\u5982arch/arm/mach-prima2/pm.c\u4e2dprima2SoC\u7ea7\u6302\u8d77\u6d41\u7a0b\u7684\u903b\u8f91\u5982\u4ee3\u7801\u6e05\u535519.17\u6240\u793a\u3002"),(0,i.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.17\u3000\u7cfb\u7edf\u6302\u8d77\u5230RAM\u7684SoC\u7ea7\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," 1static int sirfsoc_pm_enter(suspend_state_t state)\n 2{\n 3      switch (state) {\n 4      case PM_SUSPEND_MEM:\n 5             sirfsoc_pre_suspend_power_off();\n 6\n 7             outer_flush_all();\n 8             outer_disable();\n 9             /* go zzz */\n10              cpu_suspend(0, sirfsoc_finish_suspend);\n11              outer_resume();\n12              break;\n13       default:\n14              return -EINVAL;\n15       }\n16       return 0;\n17 }\n18\n19 static const struct platform_suspend_ops sirfsoc_pm_ops = {\n20        .enter = sirfsoc_pm_enter,\n21        .valid = suspend_valid_only_mem,\n22 };\n23\n24 int __init sirfsoc_pm_init(void)\n25 {\n26       suspend_set_ops(&sirfsoc_pm_ops);\n27       return 0;\n28 }\n")),(0,i.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7b2c5\u884c\u7684sirfsoc_pre_suspend_power_off\uff08\uff09\u7684\u5b9e\u73b0\u5982\u4ee3\u7801\u6e05\u535519.18\u6240\u793a\uff0c\u5b83\u4f1a\u5c06\u7cfb\u7edf\u6062\u590d\u56de\u6765\u540e\u91cd\u65b0\u5f00\u59cb\u6267\u884c\u7684\u7269\u7406\u5730\u5740\u5b58\u5165\u4e0eSoC\u76f8\u5173\u7684\u5bc4\u5b58\u5668\u4e2d\u3002\u4e0e\u672c\u4f8b\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u4e3aSIRFSOC_PWRC_SCRATCH_PAD1\uff0c\u5e76\u5411\u8be5\u5bc4\u5b58\u5668\u5199\u5165\u4e86virt_to_phys\uff08cpu_resume\uff09\u3002\u5728\u7cfb\u7edf\u91cd\u65b0\u6062\u590d\u4e2d\uff0c\u4f1a\u6267\u884ccpu_resume\u8fd9\u6bb5\u6c47\u7f16\uff0c\u5e76\u8fdb\u884c\u8bbe\u7f6e\u5524\u9192\u6e90\u7b49\u64cd\u4f5c\u3002"),(0,i.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.18\u3000SoC\u8bbe\u7f6e\u6062\u590d\u56de\u6765\u65f6\u7684\u6267\u884c\u5730\u5740"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," 1static int sirfsoc_pre_suspend_power_off(void)\n 2{\n 3      u32 wakeup_entry = virt_to_phys(cpu_resume);\n 4\n 5      sirfsoc_rtc_iobrg_writel(wakeup_entry, sirfsoc_pwrc_base +\n 6             SIRFSOC_PWRC_SCRATCH_PAD1);\n 7\n 8      sirfsoc_set_wakeup_source();\n 9\n10      sirfsoc_set_sleep_mode(SIRFSOC_DEEP_SLEEP_MODE);\n11\n12      return 0;\n13}\n")),(0,i.kt)("p",null,"\u800ccpu_suspend\uff080\uff0csirfsoc_finish_suspend\uff09\u4ee5\u53ca\u5176\u4e2d\u8c03\u7528\u7684\u4e0eSoC\u76f8\u5173\u7684\u7528\u6c47\u7f16\u5b9e\u73b0\u7684\u51fd\u6570sirfsoc_finish_suspend\uff08\uff09\u771f\u6b63\u5b8c\u6210\u6700\u540e\u7684\u5f85\u673a\u5e76\u5c06\u7cfb\u7edf\u7f6e\u4e8e\u6df1\u5ea6\u7761\u7720\uff0c\u540c\u65f6\u7f6eSDRAM\u4e8e\u81ea\u5237\u65b0\u72b6\u6001\u7684\u8fc7\u7a0b\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u82af\u7247\uff0c\u5176\u5b9e\u73b0\u4e00\u822c\u662f\u4e00\u6bb5\u6c47\u7f16\u3002"))}l.isMDXComponent=!0},24623:function(e,n,t){n.Z=t.p+"assets/images/1747061022345-2354eb9d7c4f8a53961707068432fccc.png"},79027:function(e,n,t){n.Z=t.p+"assets/images/1747061123361-8f0db27b2eefe095386c1b4842ded450.png"}}]);