"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[6042],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return v}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),u=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=u(n),v=i,f=s["".concat(a,".").concat(v)]||s[v]||p[v]||o;return n?r.createElement(f,c(c({ref:t},d),{},{components:n})):r.createElement(f,c({ref:t},d))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,c=new Array(o);c[0]=s;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:i,c[1]=l;for(var u=2;u<o;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},43389:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return a},default:function(){return v},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),c=["components"],l={},a=void 0,u={permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500",editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500.md",source:"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500.md",title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500",description:"\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500\u7531registernetdev\uff08\uff09\u548cunregisternetdev\uff08\uff09\u51fd\u6570\u5b8c\u6210\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a",date:"2025-09-15T14:44:14.825Z",formattedDate:"2025\u5e749\u670815\u65e5",tags:[],readingTime:2.445,truncated:!1,authors:[],frontMatter:{},prevItem:{title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570"},nextItem:{title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3"}},d={authorsImageUrls:[]},p=[],s={toc:p};function v(e){var t=e.components,n=(0,i.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500\u7531register_netdev\uff08\uff09\u548cunregister_netdev\uff08\uff09\u51fd\u6570\u5b8c\u6210\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"int register_netdev(struct net_device *dev);\nvoid unregister_netdev(struct net_device *dev);\n")),(0,o.kt)("p",null,"\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u63a5\u6536\u4e00\u4e2anet_device\u7ed3\u6784\u4f53\u6307\u9488\u4e3a\u53c2\u6570\uff0c\u53ef\u89c1net_device\u6570\u636e\u7ed3\u6784\u5728\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684\u6838\u5fc3\u5730\u4f4d\u3002"),(0,o.kt)("p",null,"net_device\u7684\u751f\u6210\u548c\u6210\u5458\u7684\u8d4b\u503c\u5e76\u4e0d\u4e00\u5b9a\u8981\u7531\u5de5\u7a0b\u5e08\u4eb2\u81ea\u52a8\u624b\u9010\u4e2a\u5b8c\u6210\uff0c\u53ef\u4ee5\u5229\u7528\u4e0b\u9762\u7684\u5b8f\u5e2e\u52a9\u6211\u4eec\u586b\u5145\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"#define alloc_netdev(sizeof_priv, name, setup) \\\n         alloc_netdev_mqs(sizeof_priv, name, setup, 1, 1)\n#define alloc_etherdev(sizeof_priv) alloc_etherdev_mq(sizeof_priv, 1)\n#define alloc_etherdev_mq(sizeof_priv, count) alloc_etherdev_mqs(sizeof_priv,\n    count, count)\n")),(0,o.kt)("p",null,"alloc_netdev\u4ee5\u53caalloc_etherdev\u5b8f\u5f15\u7528\u7684alloc_netdev_mqs\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"struct net_device *alloc_netdev_mqs(int sizeof_priv, const char *name,\n                void (*setup)(struct net_device *),\n                unsigned int txqs, unsigned int rxqs);\n")),(0,o.kt)("p",null,"alloc_netdev_mqs\uff08\uff09\u51fd\u6570\u751f\u6210\u4e00\u4e2anet_device\u7ed3\u6784\u4f53\uff0c\u5bf9\u5176\u6210\u5458\u8d4b\u503c\u5e76\u8fd4\u56de\u8be5\u7ed3\u6784\u4f53\u7684\u6307\u9488\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u8bbe\u5907\u79c1\u6709\u6210\u5458\u7684\u5927\u5c0f\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u8bbe\u5907\u540d\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3anet_device\u7684setup\uff08\uff09\u51fd\u6570\u6307\u9488\uff0c\u7b2c\u56db\u3001\u4e94\u4e2a\u53c2\u6570\u4e3a\u8981\u5206\u914d\u7684\u53d1\u9001\u548c\u63a5\u6536\u5b50\u961f\u5217\u7684\u6570\u91cf\u3002setup\uff08\uff09\u51fd\u6570\u63a5\u6536\u7684\u53c2\u6570\u4e5f\u4e3astruct net_device\u6307\u9488\uff0c\u7528\u4e8e\u9884\u7f6enet_device\u6210\u5458\u7684\u503c\u3002"),(0,o.kt)("p",null,"free_netdev\uff08\uff09\u5b8c\u6210\u4e0ealloc_enetdev\uff08\uff09\u548calloc_etherdev\uff08\uff09\u51fd\u6570\u76f8\u53cd\u7684\u529f\u80fd\uff0c\u5373\u91ca\u653enet_device\u7ed3\u6784\u4f53\u7684\u51fd\u6570\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void free_netdev(struct net_device *dev);\n")),(0,o.kt)("p",null,"net_device\u7ed3\u6784\u4f53\u7684\u5206\u914d\u548c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u9700\u5728\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u8fdb\u884c\uff0c\u800cnet_device\u7ed3\u6784\u4f53\u7684\u91ca\u653e\u548c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u9500\u5728\u8bbe\u5907\u6216\u9a71\u52a8\u88ab\u79fb\u9664\u7684\u65f6\u5019\u6267\u884c\uff0c\u5982\u4ee3\u7801\u6e05\u535514.4\u6240\u793a\u3002"),(0,o.kt)("p",null,"\u4ee3\u7801\u6e05\u535514.4\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u6ce8\u518c\u548c\u6ce8\u9500"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},' 1static int xxx_register(void)\n 2{\n 3  ...\n 4  /* \u5206\u914dnet_device\u7ed3\u6784\u4f53\u5e76\u5bf9\u5176\u6210\u5458\u8d4b\u503c\n */\n 5  xxx_dev = alloc_netdev(sizeof(struct xxx_priv), "sn%d", xxx_init);\n 6  if (xxx_dev == NULL)\n 7  ... /* \u5206\u914dnet_device\u5931\u8d25*/\n 8\n 9  /* \u6ce8\u518cnet_device\u7ed3\u6784\u4f53 */\n10    if ((result = register_netdev(xxx_dev)))\n11    ...\n12}\n13\n14static void xxx_unregister(void)\n15{\n16  ...\n17  /* \u6ce8\u9500net_device\u7ed3\u6784\u4f53*/\n18  unregister_netdev(xxx_dev);\n19  /* \u91ca\u653enet_device\u7ed3\u6784\u4f53*/\n20  free_netdev(xxx_dev);\n21}\n')))}v.isMDXComponent=!0}}]);