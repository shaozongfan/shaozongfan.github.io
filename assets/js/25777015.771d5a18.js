"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[1273],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return c}});var l=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,l,r=function(e,n){if(null==e)return{};var t,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var f=l.createContext({}),d=function(e){var n=l.useContext(f),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=d(e.components);return l.createElement(f.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},s=l.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,f=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=d(t),c=r,m=s["".concat(f,".").concat(c)]||s[c]||p[c]||a;return t?l.createElement(m,o(o({ref:n},u),{},{components:t})):l.createElement(m,o({ref:n},u))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=s;var i={};for(var f in n)hasOwnProperty.call(n,f)&&(i[f]=n[f]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<a;d++)o[d]=t[d];return l.createElement.apply(null,o)}return l.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1884:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return f},default:function(){return c},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return p}});var l=t(7462),r=t(3366),a=(t(7294),t(3905)),o=["components"],i={},f=void 0,d={permalink:"/shaozongfan.github.io/blog/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684",editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/blog/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684.md",source:"@site/blog/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684.md",title:"linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684",description:"\u524d\u8a00",date:"2025-09-07T05:24:28.500Z",formattedDate:"2025\u5e749\u67087\u65e5",tags:[],readingTime:10.255,truncated:!1,authors:[],frontMatter:{},prevItem:{title:"libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898",permalink:"/shaozongfan.github.io/blog/libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898"},nextItem:{title:"Welcome",permalink:"/shaozongfan.github.io/blog/welcome"}},u={authorsImageUrls:[]},p=[{value:"\u524d\u8a00",id:"\u524d\u8a00",level:2},{value:"\u6211\u7684\u95ee\u9898",id:"\u6211\u7684\u95ee\u9898",level:2},{value:"1. <strong>linux \u5185\u6838\u6a21\u5757\u662f\u5982\u4f55\u94fe\u63a5\u7684\uff1f</strong>",id:"1-linux-\u5185\u6838\u6a21\u5757\u662f\u5982\u4f55\u94fe\u63a5\u7684",level:3},{value:"2. \u4e3a\u4ec0\u4e48\u8981\u63d0\u8fd9\u4e2a\u95ee\u9898\uff1f",id:"2-\u4e3a\u4ec0\u4e48\u8981\u63d0\u8fd9\u4e2a\u95ee\u9898",level:3},{value:"\u7ecf\u9a8c\u4e4b\u8c08",id:"\u7ecf\u9a8c\u4e4b\u8c08",level:2},{value:"\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u6e90\u7801",id:"\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u6e90\u7801",level:2},{value:"objdump -d mymodule.ko",id:"objdump--d-mymoduleko",level:2},{value:"readelf -r mymodule.ko",id:"readelf--r-mymoduleko",level:2},{value:"\u5728\u5185\u6838\u6e90\u7801\u4e2d\u627e\u5230\u6a21\u5757\u94fe\u63a5\u76f8\u5173\u4ee3\u7801",id:"\u5728\u5185\u6838\u6e90\u7801\u4e2d\u627e\u5230\u6a21\u5757\u94fe\u63a5\u76f8\u5173\u4ee3\u7801",level:2},{value:"\u5185\u6838\u4ee3\u7801\u4fee\u6539 patch",id:"\u5185\u6838\u4ee3\u7801\u4fee\u6539-patch",level:2},{value:"\u91cd\u65b0\u7f16\u8bd1\u5e76\u66f4\u65b0\u5185\u6838\u540e\u52a0\u8f7d mymodule.ko \u540e dmesg \u90e8\u5206\u6253\u5370\u4fe1\u606f",id:"\u91cd\u65b0\u7f16\u8bd1\u5e76\u66f4\u65b0\u5185\u6838\u540e\u52a0\u8f7d-mymoduleko-\u540e-dmesg-\u90e8\u5206\u6253\u5370\u4fe1\u606f",level:2},{value:"\u6838\u5fc3\u5185\u6838\u4ee3\u7801",id:"\u6838\u5fc3\u5185\u6838\u4ee3\u7801",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],s={toc:p};function c(e){var n=e.components,t=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,l.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u524d\u8a00"},"\u524d\u8a00"),(0,a.kt)("p",null,"linux \u5185\u6838\u6a21\u5757\u7684\u52a0\u8f7d\u6d41\u7a0b\u53bb\u5e74\u5927\u81f4\u7422\u78e8\u4e86\u4e00\u904d\uff0c\u7b80\u5355\u7684\u5199\u4e86\u4e2a\u8349\u7a3f\u540e\u5c31\u5728\u8349\u7a3f\u7bb1\u91cc\u79ef\u538b\u7740\u3002\u6309\u7167\u4ee5\u5f80\u7684\u98ce\u683c\uff0c\u5e94\u5f53\u4ee5\u4e00\u7bc7\u957f\u6587\u5448\u73b0\uff0c\u4eca\u5929\u60f3\u60f3\u5374\u89c9\u5f97\u4e0d\u592a\u53ef\u53d6\u3002\u4e3a\u4ec0\u4e48\u4e0d\u4ece\u5173\u952e\u7684\u95ee\u9898\u7740\u624b\uff0c\u4f7f\u7528\u8f83\u77ed\u7684\u7bc7\u5e45\u6765\u9010\u4e2a\u51fb\u7834\u5462\uff1f"),(0,a.kt)("p",null,"\u6700\u7ec8\u9009\u62e9\u4e86\u4ece\u95ee\u9898\u51fa\u53d1\u7684\u63cf\u8ff0\u65b9\u5f0f\uff0c\u5728\u8fd9\u79cd\u65b9\u5f0f\u4e0b\uff0c\u6211\u9996\u5148\u5f97\u63d0\u51fa\u5173\u952e\u95ee\u9898\uff0c\u8fd9\u9700\u8981\u4e00\u5b9a\u7684\u8bad\u7ec3\uff0c\u672c\u6587\u4fbf\u662f\u8fd9\u6837\u7684\u4e00\u6b21\u5b9e\u8df5\u3002"),(0,a.kt)("h2",{id:"\u6211\u7684\u95ee\u9898"},"\u6211\u7684\u95ee\u9898"),(0,a.kt)("h3",{id:"1-linux-\u5185\u6838\u6a21\u5757\u662f\u5982\u4f55\u94fe\u63a5\u7684"},"1. ",(0,a.kt)("strong",{parentName:"h3"},"linux \u5185\u6838\u6a21\u5757\u662f\u5982\u4f55\u94fe\u63a5\u7684\uff1f")),(0,a.kt)("p",null,"\u6682\u65f6\u65e0\u6cd5\u56de\u7b54\u3002"),(0,a.kt)("h3",{id:"2-\u4e3a\u4ec0\u4e48\u8981\u63d0\u8fd9\u4e2a\u95ee\u9898"},"2. \u4e3a\u4ec0\u4e48\u8981\u63d0\u8fd9\u4e2a\u95ee\u9898\uff1f"),(0,a.kt)("p",null,"\u5e38\u89c4\u7684 c \u7a0b\u5e8f\u8981\u7ecf\u8fc7\u7f16\u8bd1\u94fe\u63a5\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u94fe\u63a5\u7684\u8fc7\u7a0b\u4f1a\u6309\u7167\u94fe\u63a5\u811a\u672c\u7684\u914d\u7f6e\u6765\u5b8c\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684 layout \u540c\u65f6\u4e5f\u4f1a\u5bf9\u6240\u6709\u7684\u53ef\u91cd\u5b9a\u4f4d\u9879\u76ee\u8fdb\u884c\u91cd\u5b9a\u4f4d\uff0c\u4ee5\u786e\u5b9a\u8bbf\u95ee\u5730\u5740\u504f\u79fb\u3002"),(0,a.kt)("p",null,"linux \u5185\u6838\u6a21\u5757\u4e5f\u6709\u7c7b\u4f3c\u7684\u8fc7\u7a0b\uff0c\u53ef\u7f16\u8bd1\u751f\u6210\u7684\u5185\u6838\u6a21\u5757\u53ea\u662f\u4e00\u4e2a\u3010\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u3011\uff0c",(0,a.kt)("strong",{parentName:"p"},"\u90a3\u5b83\u7684\u94fe\u63a5\u8fc7\u7a0b\u662f\u5728\u54ea\u91cc\u6267\u884c\u7684\u5462\uff1f")),(0,a.kt)("h2",{id:"\u7ecf\u9a8c\u4e4b\u8c08"},"\u7ecf\u9a8c\u4e4b\u8c08"),(0,a.kt)("p",null,"\u5185\u6838\u6a21\u5757\u4e00\u822c\u901a\u8fc7 insmod\u3001modprobe \u547d\u4ee4\u52a0\u8f7d\u8fd0\u884c\uff0c\u65e2\u7136\u8981\u8fd0\u884c\uff0c\u80af\u5b9a\u9700\u8981\u786e\u5b9a\u6a21\u5757\u5185\u8c03\u7528\u7684\u5916\u90e8\u7b26\u53f7\u7684\u504f\u79fb\u5730\u5740\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u80fd\u5728\u5982\u4e0b\u6d41\u7a0b\u4e2d\u8fdb\u884c\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"insmod\u3001modprobe \u547d\u4ee4\u4e2d"),(0,a.kt)("li",{parentName:"ol"},"\u5185\u6838\u4ee3\u7801\u4e2d\u6a21\u5757\u52a0\u8f7d\u6d41\u7a0b\u4e2d")),(0,a.kt)("p",null,"\u66fe\u7ecf strace \u8ddf\u8e2a\u8fc7 insmod \u52a0\u8f7d\u5185\u6838\u6a21\u5757\u7684\u8fc7\u7a0b\uff0c\u6838\u5fc3\u903b\u8f91\u662f\u8c03\u7528 finit_module\u3001init_module \u7cfb\u7edf\u8c03\u7528\uff0c\u6ca1\u6709\u770b\u5230\u5176\u5b83\u64cd\u4f5c\uff0c\u4e8e\u662f\u5224\u65ad\u5185\u6838\u6a21\u5757\u7684\u94fe\u63a5\u5e94\u5f53\u662f\u5728\u5185\u6838\u4ee3\u7801\u4e2d\u505a\u7684\u3002"),(0,a.kt)("p",null,"\u4e0b\u9762\u6211\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684 hello world \u5185\u6838\u6a21\u5757\u4e3a\u4f8b\uff0c\u63a2\u8ba8\u5185\u6838\u4e2d\u6267\u884c\u6a21\u5757\u94fe\u63a5\u7684\u8fc7\u7a0b\u3002"),(0,a.kt)("h2",{id:"\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u6e90\u7801"},"\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u6e90\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include <linux/module.h>\n#include <linux/init.h>\n\nstatic int __init my_init(void)\n{\n  printk(KERN_INFO "Hello from Hello Module\\\\n");\n  return 0;\n}\n\nstatic void __exit my_exit(void)\n{\n  printk(KERN_INFO "Bye from Hello Module\\\\n");\n}\n\nmodule_init(my_init);\nmodule_exit(my_exit);\n\nMODULE_DESCRIPTION("Sample Hello World Module");\nMODULE_LICENSE("GPL");\n\n')),(0,a.kt)("p",null,"\u5c06\u4e0a\u8ff0\u5185\u5bb9\u4fdd\u5b58\u4e3a mymodule.c \u4f7f\u7528\u5982\u4e0b Makefile \u5185\u5bb9\u7f16\u8bd1\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-makefile"},"MODULE_FILENAME=mymodule\n\nPWD := $(shell pwd)\nobj-m += ${MODULE_FILENAME}.o\nKO_FILE=${MODULE_FILENAME}.ko\n\nexport KROOT=/lib/modules/$(shell uname -r)/build\nmodules:\n    @${MAKE} -C ${KROOT} M=${PWD}\n\nmodules_install:\n    @${MAKE} -C ${KROOT} M=${PWD} modules_install\n\nclean:\n    @${MAKE} -C ${KROOT} M=${PWD} clean\n    rm -rf Modules.symvers modules.order\n\ninsert: modules\n    sudo insmod ${KO_FILE}\n\nremove:\n    sudo rmmod ${MODULE_FILENAME}\n\nprintlog:\n    sudo dmesg -c\n    sudo insmod ${KO_FILE}\n    dmesg\n")),(0,a.kt)("h2",{id:"objdump--d-mymoduleko"},"objdump -d mymodule.ko"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Disassembly of section .init.text:\n\n0000000000000000 <init_module>:\n   0:   e8 00 00 00 00          callq  5 <init_module+0x5>\n   5:   48 c7 c7 00 00 00 00    mov    $0x0,%rdi\n   c:   e8 00 00 00 00          callq  11 <init_module+0x11>\n  11:   31 c0                   xor    %eax,%eax\n  13:   c3                      retq\n\nDisassembly of section .exit.text:\n\n0000000000000000 <cleanup_module>:\n   0:   48 c7 c7 00 00 00 00    mov    $0x0,%rdi\n   7:   e9 00 00 00 00          jmpq   c <__UNIQUE_ID_description18>\n\n")),(0,a.kt)("p",null,"init_module \u4e3a\u6a21\u5757\u7684\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5728\u5176\u4e2d\u8c03\u7528\u5230\u7684\u4e24\u4e2a ",(0,a.kt)("strong",{parentName:"p"},"callq")," \u6307\u4ee4\u7528\u4e8e\u5b50\u51fd\u6570\u8c03\u7528\u3002",(0,a.kt)("strong",{parentName:"p"},"callq")," \u6307\u4ee4\u7684\u5b57\u8282\u7801\u4e3a ",(0,a.kt)("strong",{parentName:"p"},"0xe8"),"\uff0c\u5176\u540e\u56db\u4e2a\u5b57\u8282\u4e3a\u51fd\u6570\u8df3\u8f6c\u504f\u79fb\uff0c\u8fd9\u91cc\u4e24\u4e2a ",(0,a.kt)("strong",{parentName:"p"},"callq")," \u6307\u4ee4\u7684\u51fd\u6570\u8df3\u8f6c\u504f\u79fb\u503c\u90fd\u4e3a 0\uff0c\u8fd9\u7b26\u5408\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u7684\u7279\u5f81\uff0c\u8fd9\u91cc\u5c31\u662f\u4e24\u5904\u9700\u8981\u94fe\u63a5\u8fc7\u7a0b\u5b8c\u6210\u7684\u91cd\u5b9a\u4f4d\u5bf9\u8c61\u3002"),(0,a.kt)("p",null,"\u7b2c\u4e8c\u4e2a callq \u53ef\u4ee5\u660e\u786e\u662f printk\uff0c\u7b2c\u4e00\u4e2a callq \u6839\u636e readelf -r \u7684\u8f93\u51fa\u5224\u65ad\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"__fentry__ "),"\u3002"),(0,a.kt)("h2",{id:"readelf--r-mymoduleko"},"readelf -r mymodule.ko"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Relocation section '.rela.init.text' at offset 0x1cb30 contains 3 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n000000000001  002600000004 R_X86_64_PLT32    0000000000000000 __fentry__ - 4\n000000000008  00060000000b R_X86_64_32S      0000000000000000 .rodata.str1.1 + 0\n00000000000d  002800000004 R_X86_64_PLT32    0000000000000000 printk - 4\n\nRelocation section '.rela.exit.text' at offset 0x1cb78 contains 2 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n000000000003  00060000000b R_X86_64_32S      0000000000000000 .rodata.str1.1 + 1b\n000000000008  002800000004 R_X86_64_PLT32    0000000000000000 printk - 4\n")),(0,a.kt)("p",null,"readelf -r \u53c2\u6570\u83b7\u53d6\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u7684\u53ef\u91cd\u5b9a\u4f4d section \u8868\u9879\u3002\u4e0a\u8ff0\u8f93\u51fa\u4e2d\u6709\u5982\u4e0b\u4e24\u4e2a\u53ef\u91cd\u5b9a\u4f4d section:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},".rela.init.text"),(0,a.kt)("li",{parentName:"ol"},".rela.exit.text")),(0,a.kt)("p",null,"\u6bcf\u4e2a section \u4e2d\u90fd\u5217\u4e3e\u51fa\u4e86\u3010\u9700\u8981\u91cd\u5b9a\u4f4d\u7684\u9879\u76ee\u3011\uff0c\u4e00\u4e2a\u9879\u76ee\u6709\u4e94\u4e2a\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u5176\u4e2d ",(0,a.kt)("strong",{parentName:"p"},"Offset \u4e3a\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u5730\u5740\u76f8\u5bf9\u6587\u4ef6\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf"),"\uff0c",(0,a.kt)("strong",{parentName:"p"},"Type \u4e3a\u91cd\u5b9a\u4f4d\u7684\u7c7b\u578b"),"\uff0c\u7528\u4e8e\u8ba1\u7b97\u504f\u79fb\u5730\u5740\uff0c",(0,a.kt)("strong",{parentName:"p"},"Sym. Name + Addend \u5b57\u6bb5\u4e3a\u7b26\u53f7\u540d\u79f0\u4ee5\u53ca\u8ba1\u7b97\u5730\u5740\u504f\u79fb\u91cf\u65f6\u7684\u4fee\u6b63\u503c\u3002")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},".rela.init_text section")," \u4e2d\u6709\u4e24\u79cd\u91cd\u5b9a\u4f4d\u7c7b\u578b\uff0c",(0,a.kt)("strong",{parentName:"p"},"R_X86_64_PLT32"),"  \u7528\u4e8e\u51fd\u6570\u504f\u79fb\u8ba1\u7b97\uff0c",(0,a.kt)("strong",{parentName:"p"},"R_X86_64_32S")," \u7528\u4e8e\u6570\u636e\u504f\u79fb\u8ba1\u7b97\u3002str1.1 \u5b9e\u9645\u6307\u5411 init_module \u51fd\u6570\u4e2d printk \u51fd\u6570\u6253\u5370\u7684\u5b57\u7b26\u4e32\u3002"),(0,a.kt)("p",null,"\u51fd\u6570\u504f\u79fb\u7684\u8ba1\u7b97\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u5185\u5bb9\u6765\u5b66\u4e60\uff1a"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"So despite the fact that the type of the relocation entry is R_X86_64_PLT32 the linker will still use the R_X86_64_PC32 computation (S + A - P) for the relocation target being modified, where:"),(0,a.kt)("p",{parentName:"blockquote"},"   S is the value of the symbol (st_value of Elf64_Sym)\nA is the addend (-4 in your case)\nP is the address of the memory location being relocated (the start of the address of the call to Other)")),(0,a.kt)("p",null,"\u4e0a\u8ff0\u82f1\u6587\u6458\u81ea ",(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/64424692/how-does-the-address-of-r-x86-64-plt32-computed"},"How does the address of R_X86_64_PLT32 computed?")," \u66f4\u591a\u7684\u4fe1\u606f\u53ef\u4ee5\u9605\u8bfb\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b\u7b2c\u4e09\u7248 7.7 \u8282\u3002"),(0,a.kt)("p",null,"\u5728\u4e0b\u6587\u4e2d\u6211\u4f1a\u7528\u4e00\u4e2a\u5b9e\u4f8b\u6765\u8bf4\u660e\u51fd\u6570\u504f\u79fb\u5730\u5740\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002"),(0,a.kt)("h2",{id:"\u5728\u5185\u6838\u6e90\u7801\u4e2d\u627e\u5230\u6a21\u5757\u94fe\u63a5\u76f8\u5173\u4ee3\u7801"},"\u5728\u5185\u6838\u6e90\u7801\u4e2d\u627e\u5230\u6a21\u5757\u94fe\u63a5\u76f8\u5173\u4ee3\u7801"),(0,a.kt)("p",null,"\u4f7f\u7528 R_X86_64_PLT32 \u5173\u952e\u5b57\u8fdb\u884c\u5982\u4e0b\u641c\u7d22\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u641c\u7d22 kernel \u76ee\u5f55"),(0,a.kt)("li",{parentName:"ol"},"\u641c\u7d22 arch/x86 \u76ee\u5f55\n\u786e\u5b9a\u6a21\u5757\u94fe\u63a5\u6d41\u7a0b\u5728 arch/x86/kernel/module.c \u4e2d\u5b9e\u73b0\u3002")),(0,a.kt)("p",null,"\u9605\u8bfb module.c \u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a\u8c03\u8bd5\u4fe1\u606f\uff0c\u4e8e\u662f\u4fee\u6539\u5185\u6838\u4ee3\u7801\uff0c\u5f00\u542f\u8c03\u8bd5\u4fe1\u606f\u3002"),(0,a.kt)("h2",{id:"\u5185\u6838\u4ee3\u7801\u4fee\u6539-patch"},"\u5185\u6838\u4ee3\u7801\u4fee\u6539 patch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'diff --git a/arch/x86/kernel/module.c b/arch/x86/kernel/module.c\nindex b052e883dd8c..11e39304c55f 100644\n--- a/arch/x86/kernel/module.c\n+++ b/arch/x86/kernel/module.c\n@@ -37,7 +37,7 @@\n #include <asm/setup.h>\n #include <asm/unwind.h>\n\n-#if 0\n+#if 1\n #define DEBUGP(fmt, ...)                               \\\\\n        printk(KERN_DEBUG fmt, ##__VA_ARGS__)\n #else\n@@ -196,6 +196,7 @@ int apply_relocate_add(Elf64_Shdr *sechdrs,\n                                goto invalid_relocation;\n                        val -= (u64)loc;\n                        *(u32 *)loc = val;\n+\n #if 0\n                        if ((s64)val != *(s32 *)loc)\n                                goto overflow;\n@@ -212,6 +213,7 @@ int apply_relocate_add(Elf64_Shdr *sechdrs,\n                               me->name, ELF64_R_TYPE(rel[i].r_info));\n                        return -ENOEXEC;\n                }\n+               DEBUGP("val is 0x%llx\\\\n", val);\n        }\n        return 0;\n\n')),(0,a.kt)("h2",{id:"\u91cd\u65b0\u7f16\u8bd1\u5e76\u66f4\u65b0\u5185\u6838\u540e\u52a0\u8f7d-mymoduleko-\u540e-dmesg-\u90e8\u5206\u6253\u5370\u4fe1\u606f"},"\u91cd\u65b0\u7f16\u8bd1\u5e76\u66f4\u65b0\u5185\u6838\u540e\u52a0\u8f7d mymodule.ko \u540e dmesg \u90e8\u5206\u6253\u5370\u4fe1\u606f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"[  109.974417] type 4 st_value ffffffffbda016d0 r_addend fffffffffffffffc loc ffffffffc0106001\n[  109.974418] val is 0xfffffffffd8fb6cb\n.........\n")),(0,a.kt)("p",null,"\u7531\u4e8e\u6253\u5370\u4fe1\u606f\u5f88\u591a\uff0c\u6211\u53ea\u622a\u53d6\u4e86\u5176\u4e2d\u7684\u4e00\u6761\u9879\u76ee\u3002\u5728\u4e0a\u8ff0\u9879\u76ee\u4e2d\u5173\u952e\u7684\u4fe1\u606f\u89e3\u6790\u5982\u4e0b\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"type 4 \u8868\u793a\u91cd\u5b9a\u4f4d\u7c7b\u578b\u4e3a R_X86_64_PLT32 ")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"st_value ffffffffbda016d0 \u8868\u793a ",(0,a.kt)("inlineCode",{parentName:"p"},"__fentry__"),"\u7b26\u53f7\u5730\u5740"),(0,a.kt)("p",{parentName:"li"},"\u901a\u8fc7\u8bbf\u95ee /proc/kallsyms \u6587\u4ef6\u786e\u5b9a\uff0c\u76f8\u5173\u4fe1\u606f\u6458\u5f55\u5982\u4e0b\uff1b"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"```bash\n[root@debian-10:17:55:34] helloworld_module # grep __fentry__ /proc/kallsyms\nffffffffbda016d0 T __fentry__\n```\n")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"r_addend fffffffffffffffc  \u4e3a\u4e0a\u6587\u4e2d readelf -r \u8f93\u51fa\u4e2d ",(0,a.kt)("inlineCode",{parentName:"p"},"__fentry__"),"\u51fd\u6570\u7684 Addend \u503c\u2014\u2014 -4")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"loc ffffffffc0106001 \u8868\u793a\u4e0a\u6587\u4e2d readelf -r \u8f93\u51fa\u4e2d",(0,a.kt)("inlineCode",{parentName:"p"},"__fentry__"),"\u88ab\u91cd\u5b9a\u4f4d\u533a\u57df\u5728\u5185\u6838\u7684\u5b9e\u9645\u5730\u5740")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"val is 0xfffffffffd8fb6cb\uff0cval \u4e3a\u6700\u7ec8\u8ba1\u7b97\u51fa\u7684\u8bbf\u95ee ",(0,a.kt)("inlineCode",{parentName:"p"},"__fentry__"),"\u51fd\u6570\u7684\u504f\u79fb\u91cf\uff0c\u4f1a\u88ab\u586b\u5145\u5230 loc \u6307\u5411\u7684\u5730\u5740\u4e2d"),(0,a.kt)("p",{parentName:"li"},"val \u8ba1\u7b97\u516c\u5f0f\u4e3a S + A - P: ffffffffbda016d0 + fffffffffffffffc  - ffffffffc0106001 = ",(0,a.kt)("strong",{parentName:"p"},"0xfffffffffd8fb6cb")))),(0,a.kt)("h2",{id:"\u6838\u5fc3\u5185\u6838\u4ee3\u7801"},"\u6838\u5fc3\u5185\u6838\u4ee3\u7801"),(0,a.kt)("p",null,"\u5185\u6838\u4ee3\u7801\u4e2d\u76f8\u5173\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},"init_module/finit_module\n    load_module\n       apply_relocations\n           apply_relocate_add\n")),(0,a.kt)("p",null,"apply_relocate_add \u51fd\u6570\u4e2d\u5b8c\u6210\u91cd\u5b9a\u5411\u4efb\u52a1\uff0c\u6838\u5fc3\u4ee3\u7801\u6458\u5f55\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'        for (i = 0; i < sechdrs[relsec].sh_size / sizeof(*rel); i++) {\n                /* This is where to make the change */\n                loc = (void *)sechdrs[sechdrs[relsec].sh_info].sh_addr\n                        + rel[i].r_offset;\n\n                /* This is the symbol it is referring to.  Note that all\n                   undefined symbols have been resolved.  */\n                sym = (Elf64_Sym *)sechdrs[symindex].sh_addr\n                        + ELF64_R_SYM(rel[i].r_info);\n\n                DEBUGP("type %d st_value %Lx r_addend %Lx loc %Lx\\\\n",\n                       (int)ELF64_R_TYPE(rel[i].r_info),\n                       sym->st_value, rel[i].r_addend, (u64)loc);\n\n                val = sym->st_value + rel[i].r_addend;\n                switch (ELF64_R_TYPE(rel[i].r_info)) {\n                case R_X86_64_NONE:\n                        break;\n                case R_X86_64_64:\n                        if (*(u64 *)loc != 0)\n                                goto invalid_relocation;\n                        *(u64 *)loc = val;\n                        break;\n                case R_X86_64_32:\n                        if (*(u32 *)loc != 0)\n                                goto invalid_relocation;\n                        *(u32 *)loc = val;\n                        if (val != *(u32 *)loc)\n                                goto overflow;\n                        break;\n                case R_X86_64_32S:\n                        if (*(s32 *)loc != 0)\n                                goto invalid_relocation;\n                        *(s32 *)loc = val;\n                        if ((s64)val != *(s32 *)loc)\n                                goto overflow;\n                        break;\n                case R_X86_64_PC32:\n                case R_X86_64_PLT32:\n                        if (*(u32 *)loc != 0)\n                                goto invalid_relocation;\n                        val -= (u64)loc;\n                        *(u32 *)loc = val;\n..........\n\n')),(0,a.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u904d\u5386\u6bcf\u4e2a\u53ef\u91cd\u5b9a\u4f4d section \u9879\u76ee\uff0cloc \u6307\u5411\u6a21\u5757\u52a0\u8f7d\u5230\u5185\u6838\u540e\u5b58\u50a8\u6bcf\u4e2a\u53ef\u91cd\u5b9a\u4f4d\u9879\u76ee\u88ab\u91cd\u5b9a\u4f4d\u533a\u57df\u7684\u5185\u5b58\u5730\u5740\uff0c\u4ee3\u8868 ",(0,a.kt)("strong",{parentName:"p"},"R_X86_64_PLT32"),"  \u4e2d\u7684\u6807\u53f7 ",(0,a.kt)("strong",{parentName:"p"},"P"),"\u3002"),(0,a.kt)("p",null,"sym \u4e2d\u4fdd\u5b58\u5df2\u7ecf resolve \u7684\u672a\u5b9a\u4e49\u7b26\u53f7\uff0csym->value \u8868\u793a\u7b26\u53f7\u52a0\u8f7d\u5730\u5740\uff0c\u4ee3\u8868 ",(0,a.kt)("strong",{parentName:"p"},"R_X86_64_PLT32"),"  \u4e2d\u7684\u6807\u53f7 ",(0,a.kt)("strong",{parentName:"p"},"S"),"\u3002"),(0,a.kt)("p",null,"rel","[i]",".r_addend \u4fdd\u5b58\u53ef\u91cd\u5b9a\u4f4d\u9879\u76ee\u7684 ",(0,a.kt)("strong",{parentName:"p"},"Addend")," \u503c\uff0c\u4ee3\u8868 ",(0,a.kt)("strong",{parentName:"p"},"R_X86_64_PLT32"),"  \u4e2d\u7684\u6807\u53f7 ",(0,a.kt)("strong",{parentName:"p"},"A"),"\u3002"),(0,a.kt)("p",null,"\u5728\u786e\u5b9a\u4e86\u8fd9\u4e9b\u4fe1\u606f\u540e\uff0cswitch \u8bed\u53e5\u901a\u8fc7\u53ef\u91cd\u5b9a\u4f4d\u9879\u76ee\u7684 Type \u5b57\u6bb5\u8fdb\u884c\u903b\u8f91\u5206\u53d1\uff0c\u8ba1\u7b97\u5e76\u586b\u5145\u91cd\u5b9a\u4f4d\u540e\u7684\u5730\u5740\u3002\u5bf9\u4e8e R_X86_64_PLT32  \u8fd9\u79cd\u7c7b\u578b\u6765\u8bf4\uff0c\u8ba1\u7b97\u516c\u5f0f\u5c31\u662f ",(0,a.kt)("strong",{parentName:"p"},"S + A - P"),"\u3002"),(0,a.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,a.kt)("p",null,"\u5584\u4e8e\u63d0\u95ee\u662f\u4e00\u79cd\u5f88\u597d\u7684\u80fd\u529b\u3002\u4e3b\u52a8\u53d1\u73b0\u5e76\u63d0\u51fa\u95ee\u9898\u7136\u540e\u79ef\u6781\u7684\u5bfb\u627e\u7b54\u6848\uff0c\u6700\u540e\u7ed9\u51fa\u5408\u7406\u7684\u7b54\u6848\uff0c\u6536\u83b7\u6210\u5c31\u611f\u5e76\u63a8\u52a8\u81ea\u5df1\u7ee7\u7eed\u63d0\u51fa\u65b0\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u6b63\u53cd\u9988\u3002\u4ece\u81ea\u5df1\u80fd\u591f\u56de\u7b54\u7684\u5c0f\u95ee\u9898\u5f00\u59cb\uff0c\u4e0d\u65ad\u7684\u5faa\u73af\u5f80\u590d\uff0c\u96ea\u7403\u4f1a\u8d8a\u6eda\u8d8a\u5927\uff0c\u65f6\u95f4\u6b63\u7ad9\u5728\u4f60\u8fd9\u8fb9\u3002"))}c.isMDXComponent=!0}}]);