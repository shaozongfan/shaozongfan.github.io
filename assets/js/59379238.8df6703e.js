"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[30566],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return l}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),d=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=d(e.components);return r.createElement(o.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=d(t),l=a,_=u["".concat(o,".").concat(l)]||u[l]||s[l]||i;return t?r.createElement(_,c(c({ref:n},m),{},{components:t})):r.createElement(_,c({ref:n},m))}));function l(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,c=new Array(i);c[0]=u;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,c[1]=p;for(var d=2;d<i;d++)c[d]=t[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7266:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return o},default:function(){return l},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return s}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),c=["components"],p={},o=void 0,d={permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8",editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8.md",source:"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8.md",title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8",description:"dmaengine\u662f\u4e00\u5957\u901a\u7528\u7684DMA\u9a71\u52a8\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u4e3a\u5177\u4f53\u4f7f\u7528DMA\u901a\u9053\u7684\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u4e86\u4e00\u5957\u7edf\u4e00\u7684API\uff0c\u800c\u4e14\u4e5f\u5b9a\u4e49\u4e86\u7528\u5177\u4f53\u7684DMA\u63a7\u5236\u5668\u5b9e\u73b0\u8fd9\u4e00\u5957API\u7684\u65b9\u6cd5\u3002",date:"2025-09-15T14:44:14.601Z",formattedDate:"2025\u5e749\u670815\u65e5",tags:[],readingTime:4.06,truncated:!1,authors:[],frontMatter:{},prevItem:{title:"1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8"},nextItem:{title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8"}},m={authorsImageUrls:[]},s=[],u={toc:s};function l(e){var n=e.components,t=(0,a.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"dmaengine\u662f\u4e00\u5957\u901a\u7528\u7684DMA\u9a71\u52a8\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u4e3a\u5177\u4f53\u4f7f\u7528DMA\u901a\u9053\u7684\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u4e86\u4e00\u5957\u7edf\u4e00\u7684API\uff0c\u800c\u4e14\u4e5f\u5b9a\u4e49\u4e86\u7528\u5177\u4f53\u7684DMA\u63a7\u5236\u5668\u5b9e\u73b0\u8fd9\u4e00\u5957API\u7684\u65b9\u6cd5\u3002"),(0,i.kt)("p",null,"\u5bf9\u4e8e\u4f7f\u7528DMA\u5f15\u64ce\u7684\u8bbe\u5907\u9a71\u52a8\u800c\u8a00\uff0c\u53d1\u8d77DMA\u4f20\u8f93\u7684\u8fc7\u7a0b\u53d8\u5f97\u6574\u6d01\u4e86\uff0c\u5982\u5728sound\u5b50\u7cfb\u7edf\u7684sound/soc/soc-dmaengine-pcm.c\u4e2d\uff0c\u4f1a\u4f7f\u7528dmaengine\u8fdb\u884c\u5468\u671f\u6027\u7684DMA\u4f20\u8f93\uff0c\u76f8\u5173\u7684\u4ee3\u7801\u5982\u6e05\u535520.27\u6240\u793a\u3002"),(0,i.kt)("p",null,"\u4ee3\u7801\u6e05\u535520.27\u3000dmaengine API\u7684\u4f7f\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," 1static int dmaengine_pcm_prepare_and_submit(struct snd_pcm_substream *substream)\n 2{\n 3         struct dmaengine_pcm_runtime_data *prtd = substream_to_prtd(substream);\n 4         struct dma_chan *chan = prtd->dma_chan;\n 5         struct dma_async_tx_descriptor *desc;\n 6         enum dma_transfer_direction direction;\n 7         unsigned long flags = DMA_CTRL_ACK;\n 8\n 9         \u2026\n10         desc = dmaengine_prep_dma_cyclic(chan,\n11                 substream->runtime->dma_addr,\n12                 snd_pcm_lib_buffer_bytes(substream),\n13                 snd_pcm_lib_period_bytes(substream), direction, flags);\n14\u2026\n15         desc->callback = dmaengine_pcm_dma_complete;\n16         desc->callback_param = substream;\n17         prtd->cookie = dmaengine_submit(desc);\n18}\n19\n20int snd_dmaengine_pcm_trigger(struct snd_pcm_substream *substream, int cmd)\n21{\n22        struct dmaengine_pcm_runtime_data *prtd = substream_to_prtd(substream);\n23        int ret;\n24        switch (cmd) {\n25        case SNDRV_PCM_TRIGGER_START:\n26                ret = dmaengine_pcm_prepare_and_submit(substream);\n27                \u2026\n28                dma_async_issue_pending(prtd->dma_chan);\n29                break;\n30        case SNDRV_PCM_TRIGGER_RESUME:\n31        case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:\n32                dmaengine_resume(prtd->dma_chan);\n33                break;\n34        \u2026\n35}\n")),(0,i.kt)("p",null,"\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u5206\u4e3a4\u6b65\uff1a"),(0,i.kt)("p",null,"1\uff09\u901a\u8fc7dmaengine_prep_dma_xxx\uff08\uff09\u521d\u59cb\u5316\u4e00\u4e2a\u5177\u4f53\u7684DMA\u4f20\u8f93\u63cf\u8ff0\u7b26\uff08\u672c\u4f8b\u4e2d\u4e3a\u7ed3\u6784\u4f53dma_async_tx_descriptor\u7684\u5b9e\u4f8bdesc\uff0c\u672c\u4f8b\u662f\u4e00\u4e2a\u5468\u671f\u6027DMA\uff0c\u56e0\u6b64\u7b2c10\u884c\u8c03\u7528\u7684\u662fdmaengine_prep_dma_cyclic\uff08\uff09\uff09\u3002"),(0,i.kt)("p",null,"2\uff09\u901a\u8fc7dmaengine_submit\uff08\uff09\u5c06\u8be5\u63cf\u8ff0\u7b26\u63d2\u5165dmaengine\u9a71\u52a8\u7684\u4f20\u8f93\u961f\u5217\uff08\u89c1\u7b2c17\u884c\uff09\u3002"),(0,i.kt)("p",null,"3\uff09\u5728\u9700\u8981\u4f20\u8f93\u7684\u65f6\u5019\u901a\u8fc7\u7c7b\u4f3cdma_async_issue_pending\uff08\uff09\u7684\u8c03\u7528\u542f\u52a8\u5bf9\u5e94DMA\u901a\u9053\u4e0a\u7684\u4f20\u8f93\uff08\u89c1\u7b2c28\u884c\uff09\u3002"),(0,i.kt)("p",null,"4\uff09DMA\u7684\u5b8c\u6210\uff0c\u6216\u8005\u5468\u671f\u6027DMA\u5b8c\u6210\u4e86\u4e00\u4e2a\u5468\u671f\uff0c\u90fd\u4f1a\u5f15\u53d1DMA\u4f20\u8f93\u63cf\u8ff0\u7b26\u7684\u5b8c\u6210\u56de\u8c03\u51fd\u6570\u88ab\u8c03\u7528\uff08\u672c\u4f8b\u4e2d\u7684\u8d4b\u503c\u5728\u7b2c15\u884c\uff0c\u5bf9\u5e94\u7684\u56de\u8c03\u51fd\u6570\u662fdmaengine_pcm_dma_complete\uff09\u3002"),(0,i.kt)("p",null,"\u4e5f\u5c31\u662f\u4e0d\u7ba1\u5177\u4f53\u786c\u4ef6\u7684DMA\u63a7\u5236\u5668\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u5728\u8f6f\u4ef6\u610f\u4e49\u4e0a\u90fd\u62bd\u8c61\u4e3a\u4e86\u8bbe\u7f6eDMA\u63cf\u8ff0\u7b26\u3001\u5c06DMA\u63cf\u8ff0\u7b26\u63d2\u5165\u4f20\u8f93\u961f\u5217\u4ee5\u53ca\u542f\u52a8DMA\u4f20\u8f93\u7684\u8fc7\u7a0b\u3002"),(0,i.kt)("p",null,"\u9664\u4e86\u524d\u6587\u63d0\u5230\u7684\u7528dmaengine_prep_dma_cyclic\uff08\uff09\u5b9a\u4e49\u5468\u671f\u6027DMA\u4f20\u8f93\u5916\uff0c\u8fd8\u6709\u4e00\u7ec4\u7c7b\u4f3c\u7684API\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u5404\u79cd\u7c7b\u578b\u7684DMA\u63cf\u8ff0\u7b26\uff0c\u7279\u5b9a\u786c\u4ef6\u7684DMA\u9a71\u52a8\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u5b9e\u73b0\u5c01\u88c5\u5728\u5185\u6838dma_device\u7ed3\u6784\u4f53\u4e2d\u7684\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\uff08\u5b9a\u4e49\u5728include/linux/dmaengine.h\u5934\u6587\u4ef6\u4e2d\uff09\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"/**\n * struct dma_device - info on the entity supplying DMA services\n * @device_prep_dma_memcpy: prepares a memcpy operation\n * @device_prep_dma_xor: prepares a xor operation\n * @device_prep_dma_xor_val: prepares a xor validation operation\n * @device_prep_dma_pq: prepares a pq operation\n * @device_prep_dma_pq_val: prepares a pqzero_sum operation\n * @device_prep_dma_memset: prepares a memset operation\n * @device_prep_dma_interrupt: prepares an end of chain interrupt operation\n * @device_prep_slave_sg: prepares a slave dma operation\n * @device_prep_dma_cyclic: prepare a cyclic dma operation suitable for audio.\n *      The function takes a buffer of size buf_len. The callback function will\n *      be called after period_len bytes have been transferred.\n * @device_prep_interleaved_dma: Transfer expression in a generic way.\n */\n")),(0,i.kt)("p",null,"\u5728\u5e95\u5c42\u7684dmaengine\u9a71\u52a8\u5b9e\u4f8b\u4e2d\uff0c\u4e00\u822c\u4f1a\u7ec4\u7ec7\u597d\u8fd9\u4e2adma_device\u7ed3\u6784\u4f53\uff0c\u5e76\u901a\u8fc7dma_async_device_register\uff08\uff09\u5b8c\u6210\u6ce8\u518c\u3002\u5728\u5176\u5404\u4e2a\u6210\u5458\u51fd\u6570\u4e2d\uff0c\u4e00\u822c\u4f1a\u901a\u8fc7\u94fe\u8868\u6765\u7ba1\u7406DMA\u63cf\u8ff0\u7b26\u7684\u8fd0\u884c\u3001free\u7b49\u961f\u5217\u3002"),(0,i.kt)("p",null,"dma_device\u7684\u6210\u5458\u51fd\u6570device_issue_pending\uff08\uff09\u7528\u4e8e\u5b9e\u73b0DMA\u4f20\u8f93\u5f00\u542f\u7684\u529f\u80fd\uff0c\u6bcf\u5f53DMA\u4f20\u8f93\u5b8c\u6210\u540e\uff0c\u5728\u9a71\u52a8\u4e2d\u6ce8\u518c\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u9876\u534a\u90e8\u6216\u8005\u5e95\u534a\u90e8\u4f1a\u8c03\u7528DMA\u63cf\u8ff0\u7b26dma_async_tx_descriptor\u4e2d\u8bbe\u7f6e\u7684\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u56de\u8c03\u51fd\u6570\u6765\u6e90\u4e8e\u4f7f\u7528DMA\u901a\u9053\u7684\u8bbe\u5907\u9a71\u52a8\u3002"),(0,i.kt)("p",null,"\u5178\u578b\u7684dmaengine\u9a71\u52a8\u53ef\u89c1\u4e8edrivers/dma/\u76ee\u5f55\u4e0b\u7684sirf-dma.c\u3001omap-dma.c\u3001pl330.c\u3001ste_dma40.c\u7b49\u3002"))}l.isMDXComponent=!0}}]);