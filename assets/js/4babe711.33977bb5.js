"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[3755],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function _(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,d=_(e,["components","mdxType","originalType","parentName"]),p=u(n),c=i,k=p["".concat(o,".").concat(c)]||p[c]||s[c]||a;return n?r.createElement(k,l(l({ref:t},d),{},{components:n})):r.createElement(k,l({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=p;var _={};for(var o in t)hasOwnProperty.call(t,o)&&(_[o]=t[o]);_.originalType=e,_.mdxType="string"==typeof e?e:i,l[1]=_;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},73035:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return _},metadata:function(){return u},toc:function(){return s}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),l=["components"],_={},o="10.3.1\u3000\u7533\u8bf7\u548c\u91ca\u653e\u4e2d\u65ad",u={unversionedId:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b",id:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b",title:"10.3.1\u3000\u7533\u8bf7\u548c\u91ca\u653e\u4e2d\u65ad",description:"\u5728Linux\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u4f7f\u7528\u4e2d\u65ad\u7684\u8bbe\u5907\u9700\u8981\u7533\u8bf7\u548c\u91ca\u653e\u5bf9\u5e94\u7684\u4e2d\u65ad\uff0c\u5e76\u5206\u522b\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684requestirq\uff08\uff09\u548cfreeirq\uff08\uff09\u51fd\u6570\u3002",source:"@site/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3",slug:"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b",draft:!1,editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784"},next:{title:"10.4\u3000\u4e2d\u65ad\u5171\u4eab",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab"}},d={},s=[],p={toc:s};function c(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"1031\u7533\u8bf7\u548c\u91ca\u653e\u4e2d\u65ad"},"10.3.1\u3000\u7533\u8bf7\u548c\u91ca\u653e\u4e2d\u65ad"),(0,a.kt)("p",null,"\u5728Linux\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u4f7f\u7528\u4e2d\u65ad\u7684\u8bbe\u5907\u9700\u8981\u7533\u8bf7\u548c\u91ca\u653e\u5bf9\u5e94\u7684\u4e2d\u65ad\uff0c\u5e76\u5206\u522b\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684request_irq\uff08\uff09\u548cfree_irq\uff08\uff09\u51fd\u6570\u3002"),(0,a.kt)("p",null,"1.\u7533\u8bf7irq"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int request_irq(unsigned int irq, irq_handler_t handler, unsigned long flags,\n            const char *name, void *dev);\n")),(0,a.kt)("p",null,"irq\u662f\u8981\u7533\u8bf7\u7684\u786c\u4ef6\u4e2d\u65ad\u53f7\u3002"),(0,a.kt)("p",null,"handler\u662f\u5411\u7cfb\u7edf\u767b\u8bb0\u7684\u4e2d\u65ad\u5904\u7406\u51fd\u6570\uff08\u9876\u534a\u90e8\uff09\uff0c\u662f\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4e2d\u65ad\u53d1\u751f\u65f6\uff0c\u7cfb\u7edf\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0cdev\u53c2\u6570\u5c06\u88ab\u4f20\u9012\u7ed9\u5b83\u3002"),(0,a.kt)("p",null,"irqflags\u662f\u4e2d\u65ad\u5904\u7406\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e2d\u65ad\u7684\u89e6\u53d1\u65b9\u5f0f\u4ee5\u53ca\u5904\u7406\u65b9\u5f0f\u3002\u5728\u89e6\u53d1\u65b9\u5f0f\u65b9\u9762\uff0c\u53ef\u4ee5\u662fIRQF_TRIGGER_RISING\u3001IRQF_TRIGGER_FALLING\u3001IRQF_TRIGGER_HIGH\u3001IRQF_TRIGGER_LOW\u7b49\u3002\u5728\u5904\u7406\u65b9\u5f0f\u65b9\u9762\uff0c\u82e5\u8bbe\u7f6e\u4e86IRQF_SHARED\uff0c\u5219\u8868\u793a\u591a\u4e2a\u8bbe\u5907\u5171\u4eab\u4e2d\u65ad\uff0cdev\u662f\u8981\u4f20\u9012\u7ed9\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u79c1\u6709\u6570\u636e\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3a\u8fd9\u4e2a\u8bbe\u5907\u7684\u8bbe\u5907\u7ed3\u6784\u4f53\u6216\u8005NULL\u3002"),(0,a.kt)("p",null,"request_irq\uff08\uff09\u8fd4\u56de0\u8868\u793a\u6210\u529f\uff0c\u8fd4\u56de-EINVAL\u8868\u793a\u4e2d\u65ad\u53f7\u65e0\u6548\u6216\u5904\u7406\u51fd\u6570\u6307\u9488\u4e3aNULL\uff0c\u8fd4\u56de-EBUSY\u8868\u793a\u4e2d\u65ad\u5df2\u7ecf\u88ab\u5360\u7528\u4e14\u4e0d\u80fd\u5171\u4eab\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int devm_request_irq(struct device *dev, unsigned int irq, irq_handler_t handler,\n                 unsigned long irqflags, const char *devname, void *dev_id);\n")),(0,a.kt)("p",null,"\u6b64\u51fd\u6570\u4e0erequest",(0,a.kt)("em",{parentName:"p"},"irq\uff08\uff09\u7684\u533a\u522b\u662fdevm"),"\u5f00\u5934\u7684API\u7533\u8bf7\u7684\u662f\u5185\u6838\u201cmanaged\u201d\u7684\u8d44\u6e90\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u5728\u51fa\u9519\u5904\u7406\u548cremove\uff08\uff09\u63a5\u53e3\u91cc\u518d\u663e\u5f0f\u7684\u91ca\u653e\u3002\u6709\u70b9\u7c7b\u4f3cJava\u7684\u5783\u573e\u56de\u6536\u673a\u5236\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8eat86rf230\u9a71\u52a8\uff0c\u5982\u4e0b\u7684\u8865\u4e01\u4e2d\u6539\u7528devm_request_irq\uff08\uff09\u540e\u5c31\u5220\u9664\u4e86free_irq\uff08\uff09\uff0c\u8be5\u8865\u4e01\u5bf9\u5e94\u7684\u5185\u6838commit ID\u662f652355c5\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"--- a/drivers/net/ieee802154/at86rf230.c\n+++ b/drivers/net/ieee802154/at86rf230.c\n@@ -1190,24+1190,22@@ static int at86rf230_probe(struct spi_device *spi)\n     if (rc)\n          goto err_hw_init;\n-    rc = request_irq(spi->irq, irq_handler, IRQF_SHARED,\n-               dev_name(&spi->dev), lp);\n+    rc = devm_request_irq(&spi->dev, spi->irq, irq_handler, IRQF_SHARED,\n+                    dev_name(&spi->dev), lp);\n     if (rc)\n         goto err_hw_init;\n     /* Read irq status register to reset irq line */\n     rc = at86rf230_read_subreg(lp, RG_IRQ_STATUS, 0xff, 0, &status);\n     if (rc)\n-        goto err_irq;\n+        goto err_hw_init;\n     rc = ieee802154_register_device(lp->dev);\n     if (rc)\n-        goto err_irq;\n+        goto err_hw_init;\n     return rc;\n-err_irq:\n-    free_irq(spi->irq, lp);\n err_hw_init:\n     flush_work(&lp->irqwork);\n     spi_set_drvdata(spi, NULL);\n@@ -1232,7+1230,6@@ static int at86rf230_remove(struct spi_device *spi)\n     at86rf230_write_subreg(lp, SR_IRQ_MASK, 0);\n     ieee802154_unregister_device(lp->dev);\n-    free_irq(spi->irq, lp);\n     flush_work(&lp->irqwork);\n     if (gpio_is_valid(pdata->slp_tr))\n")),(0,a.kt)("p",null,"\u9876\u534a\u90e8handler\u7684\u7c7b\u578birq_handler_t\u5b9a\u4e49\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"typedef irqreturn_t (*irq_handler_t)(int, void *);\ntypedef int irqreturn_t;\n")),(0,a.kt)("p",null,"2.\u91ca\u653eirq"),(0,a.kt)("p",null,"\u4e0erequest_irq\uff08\uff09\u76f8\u5bf9\u5e94\u7684\u51fd\u6570\u4e3afree_irq\uff08\uff09\uff0cfree_irq\uff08\uff09\u7684\u539f\u578b\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"void free_irq(unsigned int irq,void *dev_id);\n")),(0,a.kt)("p",null,"free_irq\uff08\uff09\u4e2d\u53c2\u6570\u7684\u5b9a\u4e49\u4e0erequest_irq\uff08\uff09\u76f8\u540c\u3002"),(0,a.kt)("h1",{id:"1032\u4f7f\u80fd\u548c\u5c4f\u853d\u4e2d\u65ad"},"10.3.2\u3000\u4f7f\u80fd\u548c\u5c4f\u853d\u4e2d\u65ad"),(0,a.kt)("p",null,"\u4e0b\u52173\u4e2a\u51fd\u6570\u7528\u4e8e\u5c4f\u853d\u4e00\u4e2a\u4e2d\u65ad\u6e90\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"void disable_irq(int irq);\nvoid disable_irq_nosync(int irq);\nvoid enable_irq(int irq);\n")),(0,a.kt)("p",null,"disable_irq_nosync\uff08\uff09\u4e0edisable_irq\uff08\uff09\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u7acb\u5373\u8fd4\u56de\uff0c\u800c\u540e\u8005\u7b49\u5f85\u76ee\u524d\u7684\u4e2d\u65ad\u5904\u7406\u5b8c\u6210\u3002\u7531\u4e8edisable_irq\uff08\uff09\u4f1a\u7b49\u5f85\u6307\u5b9a\u7684\u4e2d\u65ad\u88ab\u5904\u7406\u5b8c\uff0c\u56e0\u6b64\u5982\u679c\u5728n\u53f7\u4e2d\u65ad\u7684\u9876\u534a\u90e8\u8c03\u7528disable_irq\uff08n\uff09\uff0c\u4f1a\u5f15\u8d77\u7cfb\u7edf\u7684\u6b7b\u9501\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u8c03\u7528disable_irq_nosync\uff08n\uff09\u3002"),(0,a.kt)("p",null,"\u4e0b\u5217\u4e24\u4e2a\u51fd\u6570\uff08\u6216\u5b8f\uff0c\u5177\u4f53\u5b9e\u73b0\u4f9d\u8d56\u4e8eCPU\u7684\u4f53\u7cfb\u7ed3\u6784\uff09\u5c06\u5c4f\u853d\u672cCPU\u5185\u7684\u6240\u6709\u4e2d\u65ad\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#define local_irq_save(flags) ...\nvoid local_irq_disable(void);\n")),(0,a.kt)("p",null,"\u524d\u8005\u4f1a\u5c06\u76ee\u524d\u7684\u4e2d\u65ad\u72b6\u6001\u4fdd\u7559\u5728flags\u4e2d\uff08\u6ce8\u610fflags\u4e3aunsigned long\u7c7b\u578b\uff0c\u88ab\u76f4\u63a5\u4f20\u9012\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u6307\u9488\uff09\uff0c\u540e\u8005\u76f4\u63a5\u7981\u6b62\u4e2d\u65ad\u800c\u4e0d\u4fdd\u5b58\u72b6\u6001\u3002"),(0,a.kt)("p",null,"\u4e0e\u4e0a\u8ff0\u4e24\u4e2a\u7981\u6b62\u4e2d\u65ad\u5bf9\u5e94\u7684\u6062\u590d\u4e2d\u65ad\u7684\u51fd\u6570\uff08\u6216\u5b8f\uff09\u662f\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#define local_irq_restore(flags) ...\nvoid local_irq_enable(void);\n")),(0,a.kt)("p",null,"\u4ee5\u4e0a\u5404\u4ee5local_\u5f00\u5934\u7684\u65b9\u6cd5\u7684\u4f5c\u7528\u8303\u56f4\u662f\u672cCPU\u5185\u3002"),(0,a.kt)("h1",{id:"1033\u5e95\u534a\u90e8\u673a\u5236"},"10.3.3\u3000\u5e95\u534a\u90e8\u673a\u5236"),(0,a.kt)("p",null,"Linux\u5b9e\u73b0\u5e95\u534a\u90e8\u7684\u673a\u5236\u4e3b\u8981\u6709tasklet\u3001\u5de5\u4f5c\u961f\u5217\u3001\u8f6f\u4e2d\u65ad\u548c\u7ebf\u7a0b\u5316irq\u3002"),(0,a.kt)("p",null,"1.tasklet"),(0,a.kt)("p",null,"tasklet\u7684\u4f7f\u7528\u8f83\u7b80\u5355\uff0c\u5b83\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u8f6f\u4e2d\u65ad\uff0c\u6267\u884c\u65f6\u673a\u901a\u5e38\u662f\u9876\u534a\u90e8\u8fd4\u56de\u7684\u65f6\u5019\u3002\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49tasklet\u53ca\u5176\u5904\u7406\u51fd\u6570\uff0c\u5e76\u5c06\u4e24\u8005\u5173\u8054\u5219\u53ef\uff0c\u4f8b\u5982\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"void my_tasklet_func(unsigned long); /*\u5b9a\u4e49\u4e00\u4e2a\u5904\u7406\u51fd\u6570*/\nDECLARE_TASKLET(my_tasklet, my_tasklet_func, data);\n  /*\u5b9a\u4e49\u4e00\u4e2atasklet\u7ed3\u6784my_tasklet\uff0c\u4e0emy_tasklet_func(data)\u51fd\u6570\u76f8\u5173\u8054*/\n")),(0,a.kt)("p",null,"\u4ee3\u7801DECLARE_TASKLET\uff08my_tasklet\uff0cmy_tasklet_func\uff0cdata\uff09\u5b9e\u73b0\u4e86\u5b9a\u4e49\u540d\u79f0\u4e3amy_tasklet\u7684tasklet\uff0c\u5e76\u5c06\u5176\u4e0emy_tasklet_func\uff08\uff09\u8fd9\u4e2a\u51fd\u6570\u7ed1\u5b9a\uff0c\u800c\u4f20\u5165\u8fd9\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u4e3adata\u3002"),(0,a.kt)("p",null,"\u5728\u9700\u8981\u8c03\u5ea6tasklet\u7684\u65f6\u5019\u5f15\u7528\u4e00\u4e2atasklet_schedule\uff08\uff09\u51fd\u6570\u5c31\u80fd\u4f7f\u7cfb\u7edf\u5728\u9002\u5f53\u7684\u65f6\u5019\u8fdb\u884c\u8c03\u5ea6\u8fd0\u884c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"tasklet_schedule(&my_tasklet);\n")),(0,a.kt)("p",null,"\u4f7f\u7528tasklet\u4f5c\u4e3a\u5e95\u534a\u90e8\u5904\u7406\u4e2d\u65ad\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u6a21\u677f\u5982\u4ee3\u7801\u6e05\u535510.2\u6240\u793a\uff08\u4ec5\u5305\u542b\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u90e8\u5206\uff09\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535510.2\u3000tasklet\u4f7f\u7528\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' 1/* \u5b9a\u4e49tasklet\u548c\u5e95\u534a\u90e8\u51fd\u6570\u5e76\u5c06\u5b83\u4eec\u5173\u8054 */\n 2void xxx_do_tasklet(unsigned long);\n 3DECLARE_TASKLET(xxx_tasklet, xxx_do_tasklet, 0);\n 4\n 5/* \u4e2d\u65ad\u5904\u7406\u5e95\u534a\u90e8*/\n 6void xxx_do_tasklet(unsigned long)\n 7{\n 8    ...\n 9}\n10\n11/* \u4e2d\u65ad\u5904\u7406\u9876\u534a\u90e8*/\n12irqreturn_t xxx_interrupt(int irq, void *dev_id)\n13{\n14 ...\n15 tasklet_schedule(&xxx_tasklet);\n16 ...\n17}\n18\n19/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570*/\n20int __init xxx_init(void)\n21{\n22 ...\n23 /* \u7533\u8bf7\u4e2d\u65ad */\n24 result = request_irq(xxx_irq, xxx_interrupt,\n25     0, "xxx", NULL);\n26 ...\n27 return IRQ_HANDLED;\n28}\n29\n30/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u5378\u8f7d\u51fd\u6570*/\n31void __exit xxx_exit(void)\n32{\n33 ...\n34 /* \u91ca\u653e\u4e2d\u65ad*/\n35 free_irq(xxx_irq, xxx_interrupt);\n36 ...\n37}\n')),(0,a.kt)("p",null,"\u4e0a\u8ff0\u7a0b\u5e8f\u5728\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\u7533\u8bf7\u4e2d\u65ad\uff08\u7b2c24~25\u884c\uff09\uff0c\u5e76\u5728\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u4e2d\u91ca\u653e\u5b83\uff08\u7b2c35\u884c\uff09\u3002\u5bf9\u5e94\u4e8exxx_irq\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u88ab\u8bbe\u7f6e\u4e3axxx_interrupt\uff08\uff09\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u7b2c15\u884c\u7684tasklet_schedule\uff08&xxx_tasklet\uff09\u8c03\u5ea6\u88ab\u5b9a\u4e49\u7684tasklet\u51fd\u6570xxx_do_tasklet\uff08\uff09\u5728\u9002\u5f53\u7684\u65f6\u5019\u6267\u884c\u3002"),(0,a.kt)("p",null,"2.\u5de5\u4f5c\u961f\u5217"),(0,a.kt)("p",null,"\u5de5\u4f5c\u961f\u5217\u7684\u4f7f\u7528\u65b9\u6cd5\u548ctasklet\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5de5\u4f5c\u961f\u5217\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u5185\u6838\u7ebf\u7a0b\uff0c\u56e0\u6b64\u53ef\u4ee5\u8c03\u5ea6\u548c\u7761\u7720\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u5de5\u4f5c\u961f\u5217\u548c\u4e00\u4e2a\u5e95\u534a\u90e8\u6267\u884c\u51fd\u6570\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"struct work_struct my_wq;                    /* \u5b9a\u4e49\u4e00\u4e2a\u5de5\u4f5c\u961f\u5217 */\nvoid my_wq_func(struct work_struct *work);   /* \u5b9a\u4e49\u4e00\u4e2a\u5904\u7406\u51fd\u6570*/\n")),(0,a.kt)("p",null,"\u901a\u8fc7INIT_WORK\uff08\uff09\u53ef\u4ee5\u521d\u59cb\u5316\u8fd9\u4e2a\u5de5\u4f5c\u961f\u5217\u5e76\u5c06\u5de5\u4f5c\u961f\u5217\u4e0e\u5904\u7406\u51fd\u6570\u7ed1\u5b9a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"INIT_WORK(&my_wq, my_wq_func);\n  /* \u521d\u59cb\u5316\u5de5\u4f5c\u961f\u5217\u5e76\u5c06\u5176\u4e0e\u5904\u7406\u51fd\u6570\u7ed1\u5b9a*/\n")),(0,a.kt)("p",null,"\u4e0etasklet_schedule\uff08\uff09\u5bf9\u5e94\u7684\u7528\u4e8e\u8c03\u5ea6\u5de5\u4f5c\u961f\u5217\u6267\u884c\u7684\u51fd\u6570\u4e3aschedule_work\uff08\uff09\uff0c\u5982\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"schedule_work(&my_wq);     /* \u8c03\u5ea6\u5de5\u4f5c\u961f\u5217\u6267\u884c*/\n")),(0,a.kt)("p",null,"\u4e0e\u4ee3\u7801\u6e05\u535510.2\u5bf9\u5e94\u7684\u4f7f\u7528\u5de5\u4f5c\u961f\u5217\u5904\u7406\u4e2d\u65ad\u5e95\u534a\u90e8\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u6a21\u677f\u5982\u4ee3\u7801\u6e05\u535510.3\u6240\u793a\uff08\u4ec5\u5305\u542b\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u90e8\u5206\uff09\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535510.3\u3000\u5de5\u4f5c\u961f\u5217\u4f7f\u7528\u6a21\u677f"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' 1/* \u5b9a\u4e49\u5de5\u4f5c\u961f\u5217\u548c\u5173\u8054\u51fd\u6570*/\n 2struct work_struct xxx_wq;\n 3void xxx_do_work(struct work_struct *work);\n 4\n 5/* \u4e2d\u65ad\u5904\u7406\u5e95\u534a\u90e8*/\n 6void xxx_do_work(struct work_struct *work)\n 7{\n 8 ...\n 9}\n10\n11/*\u4e2d\u65ad\u5904\u7406\u9876\u534a\u90e8*/\n12irqreturn_t xxx_interrupt(int irq, void *dev_id)\n13{\n14 ...\n15 schedule_work(&xxx_wq);\n16 ...\n17 return IRQ_HANDLED;\n18}\n19\n20/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570*/\n21int xxx_init(void)\n22{\n23 ...\n24 /* \u7533\u8bf7\u4e2d\u65ad*/\n25 result = request_irq(xxx_irq, xxx_interrupt,\n26      0, "xxx", NULL);\n27 ...\n28 /* \u521d\u59cb\u5316\u5de5\u4f5c\u961f\u5217*/\n29 INIT_WORK(&xxx_wq, xxx_do_work);\n30 ...\n31}\n32\n33/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u5378\u8f7d\u51fd\u6570 */\n34void xxx_exit(void)\n35{\n36 ...\n37 /* \u91ca\u653e\u4e2d\u65ad */\n38 free_irq(xxx_irq, xxx_interrupt);\n39 ...\n40}\n')),(0,a.kt)("p",null,"\u4e0e\u4ee3\u7801\u6e05\u535510.2\u4e0d\u540c\u7684\u662f\uff0c\u4e0a\u8ff0\u7a0b\u5e8f\u5728\u8bbe\u8ba1\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\u589e\u52a0\u4e86\u521d\u59cb\u5316\u5de5\u4f5c\u961f\u5217\u7684\u4ee3\u7801\uff08\u7b2c29\u884c\uff09\u3002"),(0,a.kt)("p",null,"\u5de5\u4f5c\u961f\u5217\u65e9\u671f\u7684\u5b9e\u73b0\u662f\u5728\u6bcf\u4e2aCPU\u6838\u4e0a\u521b\u5efa\u4e00\u4e2aworker\u5185\u6838\u7ebf\u7a0b\uff0c\u6240\u6709\u5728\u8fd9\u4e2a\u6838\u4e0a\u8c03\u5ea6\u7684\u5de5\u4f5c\u90fd\u5728\u8be5worker\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u5176\u5e76\u53d1\u6027\u663e\u7136\u5dee\u5f3a\u4eba\u610f\u3002\u5728Linux 2.6.36\u4ee5\u540e\uff0c\u8f6c\u800c\u5b9e\u73b0\u4e86\u201cConcurrency-managed workqueues\u201d\uff0c\u7b80\u79f0cmwq\uff0ccmwq\u4f1a\u81ea\u52a8\u7ef4\u62a4\u5de5\u4f5c\u961f\u5217\u7684\u7ebf\u7a0b\u6c60\u4ee5\u63d0\u9ad8\u5e76\u53d1\u6027\uff0c\u540c\u65f6\u4fdd\u6301\u4e86API\u7684\u5411\u540e\u517c\u5bb9\u3002"),(0,a.kt)("p",null,"3.\u8f6f\u4e2d\u65ad"),(0,a.kt)("p",null,"\u8f6f\u4e2d\u65ad\uff08Softirq\uff09\u4e5f\u662f\u4e00\u79cd\u4f20\u7edf\u7684\u5e95\u534a\u90e8\u5904\u7406\u673a\u5236\uff0c\u5b83\u7684\u6267\u884c\u65f6\u673a\u901a\u5e38\u662f\u9876\u534a\u90e8\u8fd4\u56de\u7684\u65f6\u5019\uff0ctasklet\u662f\u57fa\u4e8e\u8f6f\u4e2d\u65ad\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u4e5f\u8fd0\u884c\u4e8e\u8f6f\u4e2d\u65ad\u4e0a\u4e0b\u6587\u3002"),(0,a.kt)("p",null,"\u5728Linux\u5185\u6838\u4e2d\uff0c\u7528softirq_action\u7ed3\u6784\u4f53\u8868\u5f81\u4e00\u4e2a\u8f6f\u4e2d\u65ad\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5305\u542b\u8f6f\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u6307\u9488\u548c\u4f20\u9012\u7ed9\u8be5\u51fd\u6570\u7684\u53c2\u6570\u3002\u4f7f\u7528open_softirq\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u6ce8\u518c\u8f6f\u4e2d\u65ad\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\uff0c\u800craise_softirq\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u89e6\u53d1\u4e00\u4e2a\u8f6f\u4e2d\u65ad\u3002"),(0,a.kt)("p",null,"\u8f6f\u4e2d\u65ad\u548ctasklet\u8fd0\u884c\u4e8e\u8f6f\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u4ecd\u7136\u5c5e\u4e8e\u539f\u5b50\u4e0a\u4e0b\u6587\u7684\u4e00\u79cd\uff0c\u800c\u5de5\u4f5c\u961f\u5217\u5219\u8fd0\u884c\u4e8e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u3002\u56e0\u6b64\uff0c\u5728\u8f6f\u4e2d\u65ad\u548ctasklet\u5904\u7406\u51fd\u6570\u4e2d\u4e0d\u5141\u8bb8\u7761\u7720\uff0c\u800c\u5728\u5de5\u4f5c\u961f\u5217\u5904\u7406\u51fd\u6570\u4e2d\u5141\u8bb8\u7761\u7720\u3002"),(0,a.kt)("p",null,"local_bh_disable\uff08\uff09\u548clocal_bh_enable\uff08\uff09\u662f\u5185\u6838\u4e2d\u7528\u4e8e\u7981\u6b62\u548c\u4f7f\u80fd\u8f6f\u4e2d\u65ad\u53catasklet\u5e95\u534a\u90e8\u673a\u5236\u7684\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u5185\u6838\u4e2d\u91c7\u7528softirq\u7684\u5730\u65b9\u5305\u62ecHI_SOFTIRQ\u3001TIMER_SOFTIRQ\u3001NET_TX_SOFTIRQ\u3001NET_RX_SOFTIRQ\u3001SCSI_SOFTIRQ\u3001TASKLET_SOFTIRQ\u7b49\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u9a71\u52a8\u7684\u7f16\u5199\u8005\u4e0d\u4f1a\u4e5f\u4e0d\u5b9c\u76f4\u63a5\u4f7f\u7528softirq\u3002"),(0,a.kt)("p",null,"\u7b2c9\u7ae0\u5f02\u6b65\u901a\u77e5\u6240\u57fa\u4e8e\u7684\u4fe1\u53f7\u4e5f\u7c7b\u4f3c\u4e8e\u4e2d\u65ad\uff0c\u73b0\u5728\uff0c\u603b\u7ed3\u4e00\u4e0b\u786c\u4e2d\u65ad\u3001\u8f6f\u4e2d\u65ad\u548c\u4fe1\u53f7\u7684\u533a\u522b\uff1a\u786c\u4e2d\u65ad\u662f\u5916\u90e8\u8bbe\u5907\u5bf9CPU\u7684\u4e2d\u65ad\uff0c\u8f6f\u4e2d\u65ad\u662f\u4e2d\u65ad\u5e95\u534a\u90e8\u7684\u4e00\u79cd\u5904\u7406\u673a\u5236\uff0c\u800c\u4fe1\u53f7\u5219\u662f\u7531\u5185\u6838\uff08\u6216\u5176\u4ed6\u8fdb\u7a0b\uff09\u5bf9\u67d0\u4e2a\u8fdb\u7a0b\u7684\u4e2d\u65ad\u3002\u5728\u6d89\u53ca\u7cfb\u7edf\u8c03\u7528\u7684\u573a\u5408\uff0c\u4eba\u4eec\u4e5f\u5e38\u8bf4\u901a\u8fc7\u8f6f\u4e2d\u65ad\uff08\u4f8b\u5982ARM\u4e3aswi\uff09\u9677\u5165\u5185\u6838\uff0c\u6b64\u65f6\u8f6f\u4e2d\u65ad\u7684\u6982\u5ff5\u662f\u6307\u7531\u8f6f\u4ef6\u6307\u4ee4\u5f15\u53d1\u7684\u4e2d\u65ad\uff0c\u548c\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u8bf4\u7684softirq\u662f\u4e24\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u4e00\u4e2a\u662fsoftware\uff0c\u4e00\u4e2a\u662fsoft\u3002"),(0,a.kt)("p",null,"\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff0c\u8f6f\u4e2d\u65ad\u4ee5\u53ca\u57fa\u4e8e\u8f6f\u4e2d\u65ad\u7684tasklet\u5982\u679c\u5728\u67d0\u6bb5\u65f6\u95f4\u5185\u5927\u91cf\u51fa\u73b0\u7684\u8bdd\uff0c\u5185\u6838\u4f1a\u628a\u540e\u7eed\u8f6f\u4e2d\u65ad\u653e\u5165ksoftirqd\u5185\u6838\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4e2d\u65ad\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8f6f\u4e2d\u65ad\uff0c\u8f6f\u4e2d\u65ad\u53c8\u9ad8\u4e8e\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\u3002\u8f6f\u4e2d\u65ad\u9002\u5ea6\u7ebf\u7a0b\u5316\uff0c\u53ef\u4ee5\u7f13\u89e3\u9ad8\u8d1f\u8f7d\u60c5\u51b5\u4e0b\u7cfb\u7edf\u7684\u54cd\u5e94\u3002"),(0,a.kt)("p",null,"4.threaded_irq"),(0,a.kt)("p",null,"\u5728\u5185\u6838\u4e2d\uff0c\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7request_irq\uff08\uff09\u3001devm_request_irq\uff08\uff09\u7533\u8bf7\u4e2d\u65ad\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7request_threaded_irq\uff08\uff09\u548cdevm_request_threaded_irq\uff08\uff09\u7533\u8bf7\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int request_threaded_irq(unsigned int irq, irq_handler_t handler,\n                     irq_handler_t thread_fn,\n                     unsigned long flags, const char *name, void *dev);\nint devm_request_threaded_irq(struct device *dev, unsigned int irq,\n                          irq_handler_t handler, irq_handler_t thread_fn,\n                          unsigned long irqflags, const char *devname,\n                          void *dev_id);\n")),(0,a.kt)("p",null,"\u7531\u6b64\u53ef\u89c1\uff0c\u5b83\u4eec\u6bd4request_irq\uff08\uff09\u3001devm_request_irq\uff08\uff09\u591a\u4e86\u4e00\u4e2a\u53c2\u6570thread_fn\u3002\u7528\u8fd9\u4e24\u4e2aAPI\u7533\u8bf7\u4e2d\u65ad\u7684\u65f6\u5019\uff0c\u5185\u6838\u4f1a\u4e3a\u76f8\u5e94\u7684\u4e2d\u65ad\u53f7\u5206\u914d\u4e00\u4e2a\u5bf9\u5e94\u7684\u5185\u6838\u7ebf\u7a0b\u3002\u6ce8\u610f\u8fd9\u4e2a\u7ebf\u7a0b\u53ea\u9488\u5bf9\u8fd9\u4e2a\u4e2d\u65ad\u53f7\uff0c\u5982\u679c\u5176\u4ed6\u4e2d\u65ad\u4e5f\u901a\u8fc7request_threaded_irq\uff08\uff09\u7533\u8bf7\uff0c\u81ea\u7136\u4f1a\u5f97\u5230\u65b0\u7684\u5185\u6838\u7ebf\u7a0b\u3002"),(0,a.kt)("p",null,"\u53c2\u6570handler\u5bf9\u5e94\u7684\u51fd\u6570\u6267\u884c\u4e8e\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0cthread_fn\u53c2\u6570\u5bf9\u5e94\u7684\u51fd\u6570\u5219\u6267\u884c\u4e8e\u5185\u6838\u7ebf\u7a0b\u3002\u5982\u679chandler\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u503c\u662fIRQ_WAKE_THREAD\uff0c\u5185\u6838\u4f1a\u8c03\u5ea6\u5bf9\u5e94\u7ebf\u7a0b\u6267\u884cthread_fn\u5bf9\u5e94\u7684\u51fd\u6570\u3002"),(0,a.kt)("p",null,"request_threaded_irq\uff08\uff09\u548cdevm_request_threaded_irq\uff08\uff09\u652f\u6301\u5728irqflags\u4e2d\u8bbe\u7f6eIRQF_ONESHOT\u6807\u8bb0\uff0c\u8fd9\u6837\u5185\u6838\u4f1a\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u5c4f\u853d\u5bf9\u5e94\u7684\u4e2d\u65ad\u53f7\uff0c\u800c\u5728\u5185\u6838\u8c03\u5ea6thread_fn\u6267\u884c\u540e\uff0c\u91cd\u65b0\u4f7f\u80fd\u8be5\u4e2d\u65ad\u53f7\u3002\u5bf9\u4e8e\u6211\u4eec\u65e0\u6cd5\u5728\u4e0a\u534a\u90e8\u6e05\u9664\u4e2d\u65ad\u7684\u60c5\u51b5\uff0cIRQF_ONESHOT\u7279\u522b\u6709\u7528\uff0c\u907f\u514d\u4e86\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e00\u9000\u51fa\uff0c\u4e2d\u65ad\u5c31\u6d2a\u6cdb\u7684\u60c5\u51b5\u3002"),(0,a.kt)("p",null,"handler\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u4f1a\u7528\u9ed8\u8ba4\u7684irq_default_primary_handler\uff08\uff09\u4ee3\u66ffhandler\uff0c\u5e76\u4f1a\u4f7f\u7528IRQF_ONESHOT\u6807\u8bb0\u3002irq_default_primary_handler\uff08\uff09\u5b9a\u4e49\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/*\n * Default primary interrupt handler for threaded interrupts. Is\n * assigned as primary handler when request_threaded_irq is called\n * with handler == NULL. Useful for oneshot interrupts.\n */\nstatic irqreturn_t irq_default_primary_handler(int irq, void *dev_id)\n{\n        return IRQ_WAKE_THREAD;\n}\n")),(0,a.kt)("h1",{id:"1034\u5b9e\u4f8bgpio\u6309\u952e\u7684\u4e2d\u65ad"},"10.3.4\u3000\u5b9e\u4f8b\uff1aGPIO\u6309\u952e\u7684\u4e2d\u65ad"),(0,a.kt)("p",null,"drivers/input/keyboard/gpio_keys.c\u662f\u4e00\u4e2a\u653e\u4e4b\u56db\u6d77\u7686\u51c6\u7684GPIO\u6309\u952e\u9a71\u52a8\uff0c\u4e3a\u4e86\u8ba9\u8be5\u9a71\u52a8\u5728\u7279\u5b9a\u7684\u7535\u8def\u677f\u4e0a\u5de5\u4f5c\uff0c\u901a\u5e38\u53ea\u9700\u8981\u4fee\u6539arch/arm/mach-xxx\u4e0b\u7684\u677f\u6587\u4ef6\u6216\u8005\u4fee\u6539device tree\u5bf9\u5e94\u7684dts\u3002\u8be5\u9a71\u52a8\u4f1a\u4e3a\u6bcf\u4e2aGPIO\u7533\u8bf7\u4e2d\u65ad\uff0c\u5728gpio_keys_setup_key\uff08\uff09\u51fd\u6570\u4e2d\u8fdb\u884c\u3002\u6ce8\u610f\u6700\u540e\u4e00\u4e2a\u53c2\u6570bdata\uff0c\u4f1a\u88ab\u4f20\u5165\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535510.4\u3000GPIO\u6309\u952e\u9a71\u52a8\u4e2d\u65ad\u7533\u8bf7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' 1static int gpio_keys_setup_key(struct platform_device *pdev,\n 2                  struct input_dev *input,\n 3                  struct gpio_button_data *bdata,\n 4                  const struct gpio_keys_button *button)\n 5{\n 6  ...\n 7\n 8  error = request_any_context_irq(bdata->irq, isr, irqflags, desc, bdata);\n 9  if (error < 0) {\n10      dev_err(dev, "Unable to claim irq %d; error %d\\n",\n11          bdata->irq, error);\n12      goto fail;\n13  }\n14  ...\n15}\n')),(0,a.kt)("p",null,"\u7b2c8\u884c\u7684request_any_context_irq\uff08\uff09\u4f1a\u6839\u636eGPIO\u63a7\u5236\u5668\u672c\u8eab\u7684\u201c\u4e0a\u7ea7\u201d\u4e2d\u65ad\u662f\u5426\u4e3athreaded_irq\u6765\u51b3\u5b9a\u91c7\u7528request_irq\uff08\uff09\u8fd8\u662frequest_threaded_irq\uff08\uff09\u3002\u4e00\u7ec4GPIO\uff08\u598232\u4e2aGPIO\uff09\u867d\u7136\u6bcf\u4e2a\u90fd\u63d0\u4f9b\u4e00\u4e2a\u4e2d\u65ad\uff0c\u5e76\u4e14\u90fd\u6709\u4e2d\u65ad\u53f7\uff0c\u4f46\u662f\u5728\u786c\u4ef6\u4e0a\u4e00\u7ec4GPIO\u901a\u5e38\u662f\u5d4c\u5957\u5728\u4e0a\u4e00\u7ea7\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u4e0a\u7684\u4e00\u4e2a\u4e2d\u65ad\u3002"),(0,a.kt)("p",null,"request_any_context_irq\uff08\uff09\u4e5f\u6709\u4e00\u4e2a\u53d8\u4f53\u662fdevm_request_any_context_irq\uff08\uff09\u3002"),(0,a.kt)("p",null,"\u5728GPIO\u6309\u952e\u9a71\u52a8\u7684remove_key\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u4f1a\u91ca\u653eGPIO\u5bf9\u5e94\u7684\u4e2d\u65ad\uff0c\u5982\u4ee3\u7801\u6e05\u535510.5\u6240\u793a\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535510.5\u3000GPIO\u6309\u952e\u9a71\u52a8\u4e2d\u65ad\u91ca\u653e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"1static void gpio_remove_key(struct gpio_button_data *bdata)\n2{\n3    free_irq(bdata->irq, bdata);\n4    if (bdata->timer_debounce)\n5         del_timer_sync(&bdata->timer);\n6    cancel_work_sync(&bdata->work);\n7    if (gpio_is_valid(bdata->button->gpio))\n8         gpio_free(bdata->button->gpio);\n")),(0,a.kt)("p",null,"\u7b2c3\u884c\u76f4\u63a5\u4ecedev_id\u53d6\u51fa\u4e86bdata\uff0c\u8fd9\u5c31\u662f\u5bf9\u5e94\u7684\u90a3\u4e2aGPIO\u952e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e4b\u540e\u6839\u636e\u60c5\u51b5\u542f\u52a8timer\u4ee5\u8fdb\u884cdebounce\u6216\u8005\u76f4\u63a5\u8c03\u5ea6\u5de5\u4f5c\u961f\u5217\u53bb\u6c47\u62a5\u6309\u952e\u4e8b\u4ef6\u3002\u5728GPIO\u6309\u952e\u9a71\u52a8\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u901a\u8fc7INIT_WORK\uff08&bdata->work\uff0cgpio_keys_gpio_work_func\uff09\u521d\u59cb\u5316\u4e86bdata->work\uff0c\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\u662fgpio_keys_gpio_work_func\uff08\uff09\uff0c\u5982\u4ee3\u7801\u6e05\u535510.7\u6240\u793a"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535510.7\u3000GPIO\u6309\u952e\u9a71\u52a8\u7684\u5de5\u4f5c\u961f\u5217\u5e95\u534a\u90e8"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," 1static void gpio_keys_gpio_work_func(struct work_struct *work)\n 2{\n 3        struct gpio_button_data *bdata =\n 4                container_of(work, struct gpio_button_data, work);\n 5\n 6        gpio_keys_gpio_report_event(bdata);\n 7\n 8        if (bdata->button->wakeup)\n 9                pm_relax(bdata->input->dev.parent);\n10}\n")),(0,a.kt)("p",null,"\u89c2\u5bdf\u5176\u4e2d\u7684\u7b2c3~4\u884c\uff0c\u5b83\u901a\u8fc7container_of\uff08\uff09\u518d\u6b21\u4ecework_struct\u53cd\u5411\u89e3\u6790\u51fa\u4e86bdata\u3002\u539f\u56e0\u662fwork_struct\u672c\u8eab\u5728\u5b9a\u4e49\u65f6\uff0c\u5c31\u5d4c\u5165\u5728gpio_button_data\u7ed3\u6784\u4f53\u5185\u3002\u8bfb\u8005\u670b\u53cb\u4eec\u5e94\u8be5\u638c\u63e1Linux\u7684\u8fd9\u79cd\u53ef\u4ee5\u5230\u5904\u83b7\u53d6\u4e00\u4e2a\u7ed3\u6784\u4f53\u6307\u9488\u7684\u6280\u5de7\uff0c\u5b83\u5b9e\u9645\u4e0a\u7c7b\u4f3c\u4e8e\u9762\u5411\u5bf9\u8c61\u91cc\u9762\u7684\u201cthis\u201d\u6307\u9488\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"struct gpio_button_data {\n        const struct gpio_keys_button *button;\n        struct input_dev *input;\n        struct timer_list timer;\n        struct work_struct work;\n        unsigned int timer_debounce;    /* in msecs */\n        unsigned int irq;\n        spinlock_t lock;\n        bool disabled;\n        bool key_pressed;\n};\n")))}c.isMDXComponent=!0}}]);