"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[477],{10:function(n){n.exports=JSON.parse('{"blogPosts":[{"id":"/libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898","metadata":{"permalink":"/blog/libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898.md","source":"@site/blog/libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898.md","title":"libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898","description":"\u524d\u8a00","date":"2025-09-07T11:29:47.997Z","formattedDate":"2025\u5e749\u67087\u65e5","tags":[],"readingTime":20.065,"truncated":false,"authors":[],"frontMatter":{},"nextItem":{"title":"linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684","permalink":"/blog/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684"}},"content":"## \u524d\u8a00\\n\u7814\u7a76\u52a8\u6001\u94fe\u63a5\u7684\u539f\u7406\u4e2d\uff0c\u65e0\u610f\u95f4\u53d1\u73b0\u4e86 **mtrace** \u8fd9\u4e2a\u4e1c\u4e1c\u3002\u5b83\u662f\u4e00\u4e2a libc \u5e93\u63d0\u4f9b\u7684\u51fd\u6570\uff0c**\u901a\u8fc7\u5411 malloc\u3001calloc\u3001free \u7b49\u51fd\u6570\u6ce8\u518c hook \u51fd\u6570\u6765\u5b9e\u73b0\u5185\u5b58\u7533\u8bf7\u4e0e\u91ca\u653e\u7684\u8ddf\u8e2a**\uff0c\u53ef\u4ee5\u7528\u6765**\u5b9a\u4f4d\u5185\u5b58\u6cc4\u9732\u95ee\u9898**\u3002\\n\\n\u5728\u672c\u6587\u4e2d\uff0c\u6211\u5c06\u63cf\u8ff0\u4e00\u4e2a\u5177\u4f53\u7684\u4f7f\u7528\u5b9e\u4f8b\uff0c\u53ca\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u4e00\u4e9b\u95ee\u9898\u3002\\n## mtrace \u793a\u4f8b demo\\n**man 3 mtrace** \u67e5\u770b manual \u4fe1\u606f\uff0c\u53d1\u73b0 manual \u4e2d\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u793a\u4f8b demo\uff0c\u5176\u6e90\u7801\u5982\u4e0b\uff1a\\n\\n```c\\n#include <mcheck.h>\\n#include <stdlib.h>\\n#include <stdio.h>\\n\\nint\\nmain(int argc, char *argv[])\\n{\\n    int j;\\n\\n    mtrace();\\n\\n    for (j = 0; j < 2; j++)\\n        malloc(100);            /* Never freed--a memory leak */\\n\\n    calloc(16, 16);             /* Never freed--a memory leak */\\n    exit(EXIT_SUCCESS);\\n}\\n```\\n\u5c06\u4e0a\u8ff0\u4ee3\u7801\u4fdd\u5b58\u4e3a t_mtrace.c \u6e90\u6587\u4ef6\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1\uff1a\\n\\n```bash\\ngcc -g t_mtrace.c -o t_mtrace\\n```\\n\u5728\u8fd0\u884c\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u5b9a **MALLOC_TRACE** \u73af\u5883\u53d8\u91cf\uff0c\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u6307\u5411 mtrace \u8f93\u51fa\u8bb0\u5f55\u6587\u4ef6\u7684\u8def\u5f84\u3002\\n\\nMALLOC_TRACE \u8bbe\u5b9a\u793a\u4f8b\u5982\u4e0b\uff1a\\n\\n```bash\\n export MALLOC_TRACE=/tmp/t\\n```\\n\u8bbe\u5b9a\u4e86\u8fd9\u4e2a\u53d8\u91cf\u4e4b\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c **t_mtrace** \u7a0b\u5e8f\uff0c\u8fd0\u884c\u5b8c\u6210\u540e /tmp/t \u6587\u4ef6\u4e2d\u5c06\u4f1a\u4fdd\u5b58\u8f93\u51fa\u7684\u8bb0\u5f55\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a\\n\\n```bash\\n[longyu@debian-10:19:25:40] program-problem $ cat /tmp/t\\n= Start\\n@ ./t_mtrace:[0x55555555518c] + 0x5555555596a0 0x64\\n@ ./t_mtrace:[0x55555555518c] + 0x555555559710 0x64\\n@ ./t_mtrace:[0x5555555551a5] + 0x555555559780 0x100\\n```\\n**/tmp/t** \u7684\u8f93\u51fa\u5e76\u4e0d\u76f4\u89c2\uff0clibc \u5e93\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540c\u6837\u540d\u4e3a mtrace \u7684 perl \u811a\u672c\u6765\u89e3\u6790\u8fd9\u4e2a\u8bb0\u5f55\uff0cmtrace \u811a\u672c\u9700\u8981\u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a**\u53ef\u6267\u884c\u7a0b\u5e8f\u7684\u8def\u5f84\u540d**\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a **mtrace \u51fd\u6570\u8f93\u51fa\u7684\u8bb0\u5f55\u6587\u4ef6**\u3002\\n\\n\u6267\u884c\u793a\u4f8b\u5982\u4e0b\uff1a\\n\\n```bash\\n[longyu@debian-10:19:29:08] program-problem $ mtrace ./t_mtrace $MALLOC_TRACE\\n\\nMemory not freed:\\n-----------------\\n           Address     Size     Caller\\n0x00005555555596a0     0x64  at 0x55555555518c\\n0x0000555555559710     0x64  at 0x55555555518c\\n0x0000555555559780    0x100  at 0x5555555551a5\\n```\\n\u8fd9\u91cc\u6211\u5f97\u5230\u7684\u8f93\u51fa\u4fe1\u606f\u4e0e manual \u4e2d\u7684\u4fe1\u606f\u4e0d\u540c\uff0c**\u6ca1\u6709\u663e\u793a\u51fa\u8c03\u7528\u8005\u6240\u5728\u6e90\u7801\u4e2d\u7684\u884c\u53f7\u3002**\\n\\nmanual \u4e2d\u7684\u8f93\u51fa\u4fe1\u606f\u5982\u4e0b\uff1a\\n```bash\\n           $ mtrace ./t_mtrace $MALLOC_TRACE\\n           Memory not freed:\\n           -----------------\\n              Address     Size     Caller\\n           0x084c9378     0x64  at /home/cecilia/t_mtrace.c:12\\n           0x084c93e0     0x64  at /home/cecilia/t_mtrace.c:12\\n           0x084c9448    0x100  at /home/cecilia/t_mtrace.c:16\\n```\\n\u91cd\u65b0 **check** \u6211\u7684\u8fd0\u884c\u8fc7\u7a0b\uff0c\u6211\u786e\u5b9a\u4e0e manual \u4e2d\u63cf\u8ff0\u7684\u4e00\u81f4\uff0c\u770b\u6765\u4e00\u5b9a\u662f\u54ea\u91cc\u51fa\u4e86\u95ee\u9898\u4e86\u3002\\n\\n## \u5bf9 mtrace \u811a\u672c\u89e3\u6790\u4e0d\u5230\u884c\u53f7\u95ee\u9898\u7684\u89e3\u51b3\u8fc7\u7a0b\\n\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u6700\u5f00\u59cb\u8fdb\u884c\u4e86\u5982\u4e0b\u5c1d\u8bd5\uff1a\\n\\n1. -O0 -g \u7f16\u8bd1\u540e\u6d4b\u8bd5\u53d1\u73b0\u4ecd\u65e7\u6ca1\u6709\u6253\u5370\\n2. \u4fee\u6539\u6587\u4ef6\u540d\u4e3a\u7edd\u5bf9\u8def\u5f84\u540e\u4e5f\u6ca1\u6709\u6253\u5370\\n3. \u5bf9\u6bd4\u52a0\u4e86-g\u3001\u6ca1\u6709\u52a0 -g  /tmp/t \u6587\u4ef6\u7684\u533a\u522b\uff0c\u53d1\u73b0\u5185\u5bb9\u5b8c\u5168\u76f8\u540c\\n4. \u7f51\u4e0a\u641c\u7d22\u53d1\u73b0\u6709\u76f8\u5173\u7684\u63cf\u8ff0\uff0c\u4e0d\u8fc7\u7f51\u9875\u4e2d\u540c manual \u4e2d\u4e00\u6837\u80fd\u591f\u663e\u793a\u6e90\u4ee3\u7801\u884c\u53f7\\n\\n\u5728\u4e0a\u9762\u7684\u5c1d\u8bd5\u90fd\u5931\u8d25\u540e\uff0c\u6211\u5f00\u59cb\u4f7f\u7528 strace \u5927\u6cd5\u3002\u7528\u4e86 strace \u540e\u770b\u5230\u4e86\u4e00\u5806\u7cfb\u7edf\u8c03\u7528\uff0c\u5176\u4e2d**\u6709\u6267\u884c addr2line \u7684\u8fc7\u7a0b**\uff0c\u770b\u6765\u8fd9\u4e2a mtrace \u811a\u672c\u5b9e\u9645\u662f\u8fd0\u884c addr2line \u547d\u4ee4\u83b7\u53d6\u5230\u7684\u884c\u53f7\uff0c\u90a3**\u95ee\u9898\u662f\u5426\u51fa\u5728 addr2line \u4e2d\u5462\uff1f**\\n\\n\u6211\u5355\u72ec\u4f7f\u7528 addr2line \u83b7\u53d6 /tmp/t \u4e2d\u51fd\u6570\u8c03\u7528\u5730\u5740\u5bf9\u5e94\u7684\u884c\u53f7\uff0c\u53d1\u73b0\u6839\u672c\u83b7\u53d6\u4e0d\u5230\u4efb\u4f55\u4fe1\u606f\uff0c\u8f93\u51fa\u5185\u5bb9\u4e3a ??\u3002\\n\\n\u641e\u5230\u8fd9\u91cc\u6211\u8fd8\u662f\u6ca1\u6709\u53d1\u73b0\u6839\u672c\u95ee\u9898\uff0c\u53ea\u80fd\u786c\u7740\u5934\u76ae\u7528 perl -d \u6765\u8fd0\u884c\u8fd9\u4e2a mtrace \u811a\u672c\uff0c\u8c03\u8bd5\u4e86\u4e0b\u4e5f\u6ca1\u6709\u53d1\u73b0\u5173\u952e\u7684\u70b9\u3002\\n\\n### \u8fdb\u4e00\u6b65\u7684\u5206\u6790\\n\u5728\u4e00\u7cfb\u5217\u7684\u5c1d\u8bd5\u540e\uff0c\u6211\u6682\u65f6\u6ca1\u6709\u627e\u5230\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u4e0d\u8fc7\u6211\u89c9\u5f97 **addr2line \u662f\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6000\u7591\u5bf9\u8c61**\u3002\u4e3a\u4e86\u9a8c\u8bc1\u6211\u7684\u731c\u6d4b\uff0c\u6211\u5c06\u4ee3\u7801\u8fdb\u884c\u4e86\u5982\u4e0b\u4fee\u6539\uff1a\\n\\n```c\\n#include <mcheck.h>\\n#include <stdlib.h>\\n#include <stdio.h>\\n\\nint\\nmain(int argc, char *argv[])\\n{\\n    int j;\\n\\n    mtrace();\\n\\t\\t\\t\\t\\n    printf(\\"%p\\\\n\\", mtrace);\\n    for (j = 0; j < 2; j++)\\n        malloc(100);            /* Never freed--a memory leak */\\n\\n    calloc(16, 16);             /* Never freed--a memory leak */\\n    pause();\\n    exit(EXIT_SUCCESS);\\n}\\n```\\n\\n\u6211\u8fd9\u91cc\u6253\u5370\u51fa\u4e86 **mtrace \u51fd\u6570\u7684\u5730\u5740**\uff0c\u7f16\u8bd1\u5e76\u6267\u884c\u540e\u4f1a\u5f97\u5230 mtrace \u51fd\u6570\u7684\u5730\u5740\uff0c\u7136\u540e\u6211\u4f7f\u7528 addr2line \u547d\u4ee4\uff0c\u6307\u5b9a\u8fd9\u4e2a\u5730\u5740\u6765\u83b7\u53d6\u6e90\u7801\u884c\u53f7\uff0c\u53d1\u73b0\u4ecd\u65e7\u6253\u5370\u7684\u662f ??\uff0c\u8fd9\u8ba9\u6211\u89c9\u7684\u5f88\u5927\u6982\u7387\u662f **addr2line \u547d\u4ee4\u7684\u95ee\u9898**\u3002\\n\\n\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\uff0c\u6211\u6267\u884c **objdump -d \u53cd\u6c47\u7f16\u53ef\u6267\u884c\u6587\u4ef6**\uff0c\u7136\u540e\u4f7f\u7528 main \u51fd\u6570\u7684**\u76f8\u5bf9\u5730\u5740\u4e3a\u53c2\u6570**\u7ee7\u7eed\u8c03\u7528 addr2line \u547d\u4ee4\u6765\u89e3\u6790\uff0c\u8fd9\u4e00\u6b21**\u80fd\u591f\u89e3\u6790\u5230\u4e86\u3002**\\n\\n\u6d4b\u8bd5\u8fc7\u7a0b\u8bb0\u5f55\u5982\u4e0b\uff1a\\n\\n```bash\\n[longyu@debian-10:19:50:39] program-problem $ objdump -d t_mtrace | grep main\\n    109d:\\t48 8d 3d c1 00 00 00 \\tlea    0xc1(%rip),%rdi        # 1165 <main>\\n    10a4:\\tff 15 2e 2f 00 00    \\tcallq  *0x2f2e(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.2.5>\\n0000000000001165 <main>:\\n    119b:\\teb 0e                \\tjmp    11ab <main+0x46>\\n    11af:\\t7e ec                \\tjle    119d <main+0x38>\\n[longyu@debian-10:19:50:44] program-problem $ addr2line -e ./t_mtrace 1165\\n/home/longyu/problem_and_solution/program-problem/./t_mtrace.c:7\\n```\\n\u53ef\u4ee5\u770b\u5230\u5728\u6700\u540e\u4e00\u884c\uff0caddr2line \u6253\u5370\u51fa\u4e86\u884c\u53f7\uff01\\n\\n\u7136\u540e\u4f7f\u7528 gdb \u8fd0\u884c\uff0cstart \u540e\u5728 main \u51fd\u6570\u5904\u505c\u4e0b\u6765\u540e\uff0c\u53cd\u6c47\u7f16 main \u51fd\u6570\uff0c\u53d1\u73b0 **main \u51fd\u6570\u7684\u5730\u5740\u4e0e objdump -d \u7684\u8f93\u51fa\u5b8c\u5168\u4e0d\u540c**\uff0c\u770b\u6765\u5e94\u8be5\u662f**\u57fa\u5730\u5740\u88ab\u4fee\u6539\u4e86\u3002**\\n\\n\u6d4b\u8bd5\u8bb0\u5f55\u5982\u4e0b\uff1a\\n```bash\\n(gdb) start\\nTemporary breakpoint 1 at 0x1174: file ./mtrace.c, line 10.\\nStarting program: /home/longyu/problem_and_solution/program-problem/t_mtrace \\n\\nTemporary breakpoint 1, main (argc=1, argv=0x7fffffffdae8) at ./mtrace.c:10\\n10\\t               mtrace();\\n(gdb) disass main\\nDump of assembler code for function main:\\n   0x0000555555555165 <+0>:\\tpush   %rbp\\n```\\n\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc main \u51fd\u6570\u7684\u5730\u5740\u53d8\u4e3a\u4e86 **0x0000555555555165**\uff0c\u8fd9\u5c31\u9020\u6210 addr2line \u547d\u4ee4\u4e0d\u80fd\u89e3\u6790\u5230\u6e90\u7801\u884c\u53f7\u3002\\n\\n### \u5173\u95ed ASLR\\n**\u518d\u6b21\u6267\u884c\u6b64\u7a0b\u5e8f**\uff0c\u6211\u53d1\u73b0\u6bcf\u6b21\u6253\u5370\u7684 mtrace \u51fd\u6570\u7684\u5730\u5740\u90fd\u4e0d\u4e00\u6837\uff0c\u8fd9\u70b9\u8ba9\u6211\u60f3\u8d77\u4e86 ASLR \u8fd9\u4e2a\u529f\u80fd\uff0c\u9996\u5148\u67e5\u770b /proc/sys/kernel/randomize_va_space \u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u53d1\u73b0\u503c\u4e3a 2 \u8868\u793a**\u8fd9\u4e2a\u529f\u80fd\u786e\u5b9e\u662f\u6253\u5f00\u7684\u3002**\\n\\n\u4f7f\u7528 root \u6743\u9650\u5411 /proc/sys/kernel/randomize_va_space \u6587\u4ef6\u5199\u5165 0 \u5173\u95ed\u8fd9\u4e2a\u529f\u80fd\u540e\uff0c\u91cd\u65b0\u6267\u884c\u4e0a\u9762\u7684\u6d4b\u8bd5\uff0c\u53d1\u73b0**\u4ecd\u65e7\u4e0d\u80fd\u83b7\u53d6\u5230\u884c\u53f7\u4fe1\u606f**\u3002\\n\\n\u770b\u6765\u8fd8\u662f\u5f97\u4ece addr2line \u547d\u4ee4\u4e0a\u7740\u624b\uff01\\n\\n### \u4ee5 addr2line cannot work \u4e3a\u5173\u952e\u8bcd\u641c\u7d22\u4e92\u8054\u7f51\\n\u4f7f\u7528 addr2line cannot work \u641c\u7d22\u540e\uff0c\u6211\u5728 [addr2line cannot decode addresses that gdb does](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=860394) \u8fd9\u7bc7\u94fe\u63a5\u4e2d\u770b\u5230\u4e86\u5982\u4e0b\u5173\u952e\u4fe1\u606f\uff1a\\n\\n```\\nThere are 2 things going on. First, by default gcc is now building\\nexecutables as position independent (-pie). This can be explicitly\\ndisabled with the -no-pie linking option. Disabling PIE should result in\\nthings working as they did before.\\n\\nThe second thing going on is Address Space Layout Randomization\\n(ASLR). This is now active by default and will cause all PIE executables\\nto be loaded to random addresses. This can be disabled globally with\\nsysctl:\\n\\n    $ sudo sysctl -w kernel.randomize_va_space=0\\n\\nOr with a boot argument:\\n\\n    norandmaps\\n\\nOr (preferrably) locally for the process you are interested:\\n\\n    $ setarch `uname -m` -R /some/program\\n\\nOften it is convenient to use the above command with /bin/bash so as to\\nquickly create a non-randomized environment for yourself.\\n\\nHowever, be aware that even when ASLR is disabled, if it is a PIE\\nexectuable, it will always load to the same address, but that is not the\\naddress within the executable. That means that for PIE executables, many\\nbinutils (such as addr2line) will require you to recalculate the offset.\\n```\\n\u6211**\u5df2\u7ecf\u5173\u95ed\u4e86 ASLR \u529f\u80fd**\uff0c\u5bf9\u5e94\u4e0a\u8ff0\u63cf\u8ff0\u7684\u7b2c\u4e8c\u70b9\uff0c\u7b2c\u4e00\u70b9\u63cf\u8ff0\u8bf4\u4e0e pie \u6709\u5173\uff0c\u901a\u8fc7\u6307\u5b9a **-no-pie** \u53c2\u6570\u91cd\u65b0\u7f16\u8bd1\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u76f4\u63a5\u5728 gdb \u4e2d\u8fd0\u884c\uff0c\u518d\u6b21\u53cd\u6c47\u7f16 main \u51fd\u6570\uff0c\u8fd9\u6b21\u5f97\u5230\u4e86\u5982\u4e0b\u8f93\u51fa\u4fe1\u606f\uff1a\\n\\n```bash\\n(gdb) start\\nTemporary breakpoint 1 at 0x401171: file ./mtrace.c, line 10.\\nStarting program: /home/longyu/problem_and_solution/program-problem/t_mtrace \\n\\nTemporary breakpoint 1, main (argc=1, argv=0x7fffffffdae8) at ./mtrace.c:10\\n10\\t               mtrace();\\n(gdb) disass main\\nDump of assembler code for function main:\\n   0x0000000000401162 <+0>:\\tpush   %rbp\\n```\\n\u53ef\u4ee5\u770b\u5230\u8fd9\u6b21\uff0cmain \u51fd\u6570\u5730\u5740\u53d8\u4e3a\u4e86 **0x401162**\uff0cobjdump -d \u8f93\u51fa\u7684 main \u51fd\u6570\u5730\u5740\u5982\u4e0b\uff1a\\n\\n```bash\\n0000000000401162 <main>:\\n  401162:\\t55                   \\tpush   %rbp\\n```\\n\u53ef\u4ee5\u770b\u5230\uff0c**\u8fd9\u6b21 objdump \u5f97\u5230\u7684\u51fd\u6570\u5730\u5740\u4e0e\u8fd0\u884c\u65f6\u7684\u5730\u5740\u4e00\u81f4\u4e86**\uff0c\u770b\u6765\u5e94\u8be5\u6ca1\u6709\u95ee\u9898\u4e86\u3002\\n\\n\u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u7ee7\u7eed\u67e5\u770b /tmp/t \u7684\u5185\u5bb9\uff0c\u8fd9\u6b21\u5f97\u5230\u4e86\u5982\u4e0b\u4fe1\u606f\uff1a\\n\\n```bash\\n[longyu@debian-10:20:09:00] program-problem $ cat /tmp/t\\n= Start\\n@ /lib/x86_64-linux-gnu/libc.so.6:(_IO_file_doallocate+0x8c)[0x7ffff7e5971c] + 0x4056a0 0x400\\n@ ./t_mtrace:[0x4011a4] + 0x405ab0 0x64\\n@ ./t_mtrace:[0x4011a4] + 0x405b20 0x64\\n@ ./t_mtrace:[0x4011bd] + 0x405b90 0x100\\n@ /lib/x86_64-linux-gnu/libc.so.6:[0x7ffff7f52ad4] - 0x4056a0\\n```\\n\u8fd9\u4e2a\u8f93\u51fa\u770b\u4e0a\u53bb\u975e\u5e38\u6b63\u5e38\uff0c\u770b\u6765\u95ee\u9898\u5e94\u8be5\u80fd\u591f\u5f97\u5230\u89e3\u51b3\u4e86\uff01\u518d\u6b21\u6267\u884c mtrace \u811a\u672c\uff0c\u8fd9\u6b21\u786e\u5b9e\u80fd\u591f\u83b7\u53d6\u5230\u6e90\u7801\u884c\u53f7\u4e86\uff0c\u64cd\u4f5c\u8bb0\u5f55\u5982\u4e0b\uff1a\\n\\n```bash\\n[longyu@debian-10:20:10:06] program-problem $ mtrace ./t_mtrace /tmp/t\\n\\nMemory not freed:\\n-----------------\\n           Address     Size     Caller\\n0x0000000000405ab0     0x64  at /home/longyu/problem_and_solution/program-problem/./t_mtrace.c:13 (discriminator 3)\\n0x0000000000405b20     0x64  at /home/longyu/problem_and_solution/program-problem/./t_mtrace.c:13 (discriminator 3)\\n0x0000000000405b90    0x100  at /home/longyu/problem_and_solution/program-problem/./t_mtrace.c:17\\n```\\n\u5982\u679c\u4f60\u5bf9\u8fd9\u91cc\u7684\u884c\u53f7\u8db3\u591f\u654f\u611f\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u91cc\u7684\u884c\u53f7\u5e76\u4e0d\u51c6\u786e\uff0c\u5176\u5b9e\u5728 manual \u4e2d\u5df2\u7ecf\u8bf4\u660e\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\\n\\n\u4e0a\u8ff0 demo \u4e2d\u8c03\u7528\u4e86 malloc \u4e0e calloc \u51fd\u6570\u5e76\u4e14\u90fd\u6ca1\u6709\u8c03\u7528 free \u6765\u91ca\u653e\uff0c**\u6a21\u62df\u5185\u5b58\u6cc4\u9732\u7684\u60c5\u51b5**\uff0c\u6839\u636e mtrace \u7684\u8f93\u51fa\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u9a6c\u4e0a\u5b9a\u4f4d\u5230\u5185\u5b58\u6cc4\u9732\u7684\u4f4d\u7f6e\u3002\\n\\n\u540c\u65f6\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53 **MALLOC_TRACE** \u6307\u5411\u4e86\u4e00\u4e2a\u5408\u6cd5\u7684\u53ef\u4ee5\u5199\u7684\u6587\u4ef6\u8def\u5f84\u65f6\uff0cmtrace \u80fd\u591f\u8fd0\u884c\uff0c\u4f46\u662f\u53ef\u80fd\u4f1a\u5e26\u6765**\u6027\u80fd\u4e0a\u7684\u635f\u8017\uff01**\\n## mtrace \u662f\u548b\u6837\u5b9e\u73b0\u7684\uff1f\\n\u89e3\u51b3\u4e86 addr2line \u4e0d\u80fd\u663e\u793a\u6e90\u7801\u884c\u53f7\u7684\u95ee\u9898\uff0cmtrace \u7b97\u6b63\u5f0f\u4e0a\u624b\u4e86\uff0c\u4e0b\u4e00\u4e2a\u95ee\u9898\u662f mtrace \u662f\u5982\u4f55\u5b9e\u73b0\u7684\u5462\uff1f\\n\\nmtrace \u51fd\u6570\u7684\u6e90\u7801\u4f4d\u4e8e glibc \u6e90\u7801\u4e2d\u7684 **malloc/mtrace.c** \u4e2d\uff0c\u6838\u5fc3\u903b\u8f91\u662f\u8bbe\u5b9a malloc\u3001calloc\u3001realloc\u3001free \u7b49\u51e0\u4e2a\u7533\u8bf7\u3001\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\u51fd\u6570\u4f7f\u7528\u7684\u5185\u90e8 hook \u51fd\u6570\u3002\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```c\\n308           tr_old_free_hook = __free_hook;\\n309           __free_hook = tr_freehook;\\n310           tr_old_malloc_hook = __malloc_hook;\\n311           __malloc_hook = tr_mallochook;\\n312           tr_old_realloc_hook = __realloc_hook;\\n313           __realloc_hook = tr_reallochook;                                                                                                                               \\n314           tr_old_memalign_hook = __memalign_hook;\\n315           __memalign_hook = tr_memalignhook;\\n```\\n\u90a3\u8fd9\u4e9b hook \u51fd\u6570\u662f\u5728\u54ea\u91cc\u88ab\u8c03\u7528\u7684\u5462\uff1f\u8fd9\u91cc\u6211\u4ee5 malloc \u51fd\u6570\u4e2d\u7684\u8c03\u7528\u4ee3\u7801\u4e3a\u4f8b\u6765\u63cf\u8ff0\uff0c\u65e8\u5728\u629b\u51fa**\u5982\u4f55\u83b7\u53d6\u8fd4\u56de\u5730\u5740**\u8fd9\u4e00\u95ee\u9898\u3002\\n\\n\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a\\n\\n```c\\n3018 void * \\n3019 __libc_malloc (size_t bytes)\\n3020 { \\n3021   mstate ar_ptr;\\n3022   void *victim;\\n3023   \\n3024   void *(*hook) (size_t, const void *)\\n3025     = atomic_forced_read (__malloc_hook);\\n3026   if (__builtin_expect (hook != NULL, 0))\\n3027     return (*hook)(bytes, RETURN_ADDRESS (0));\\n```\\n\u6ce8\u610f\u5f53 **__malloc_hook** \u4e0d\u4e3a NULL \u7684\u65f6\u5019\uff08\u8c03\u7528\u4e86 mtrace \u51fd\u6570\u4f1a\u8bbe\u5b9a __malloc_hook \u51fd\u6570\u6307\u9488\uff09\uff0c\u8be5 hook \u51fd\u6570\u4f1a\u88ab\u88ab\u8c03\u7528\uff0c\u8c03\u7528 hook \u51fd\u6570\u4f20\u9012\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570 **RETURN_ADDRESS (0)** \u503c\u5f97\u7814\u7a76\u3002\\n\\n\u8fd9\u4e2a RETURN_ADDRESS(0) \u662f\u4e00\u4e2a\u5b8f\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a\\n\\n```c\\n/* Determine the return address.  */\\n#define RETURN_ADDRESS(nr) \\\\\\n  __builtin_extract_return_addr (__builtin_return_address (nr))\\n```\\n\u8fd9\u91cc\u4f7f\u7528\u4e86 gcc \u7684\u6269\u5c55\u529f\u80fd\u6765\u83b7\u53d6\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\uff0c\u8fd9\u91cc\u7684 nr \u5bf9\u5e94\u7684\u662f\u6808\u5e27\u7684\u5c42\u7ea7\uff0c0 \u8868\u793a\u5f53\u524d\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\uff0c\u653e\u5728\u8fd9\u5c31\u662f **malloc \u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u7ee7\u7eed\u6267\u884c\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u5730\u5740\u3002**\\n\\n## __builtin_return_address \u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\\n\u5199\u5230\u8fd9\u91cc\u4e0e mtrace \u76f8\u5173\u7684\u5185\u5bb9\u544a\u4e00\u6bb5\u843d\uff0c\u5f00\u59cb\u8df3\u5230 __builtin_return_address \u7684\u5b9e\u73b0\u4e0a\u3002\\n\\n\u5173\u4e8e\u8fd9\u4e2a\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u6839\u636e\u4e4b\u524d\u5b66\u4e60 \u300aCSAPP\u300b\u7684\u5370\u8c61\uff0c\u5176\u5b9e\u5173\u952e\u5728\u4e8e\u83b7\u53d6\u5230\u6808\u4e2d\u4e0d\u540c\u6808\u5e27\u7684 EBP \u4e0e EIP \u7684\u503c\uff0c**EBP \u8868\u793a\u6808\u5e95\uff0c\u800c EIP \u5219\u662f\u8fd4\u56de\u5730\u5740\u3002**\\n\\n\u51fd\u6570\u8c03\u7528\u65f6\uff0c**\u53c2\u6570\u9996\u5148\u538b\u6808\uff0c\u6309\u7167\u4ece\u53f3\u5411\u5de6\u7684\u987a\u5e8f**\uff0c\u7136\u540e**\u8fd4\u56de\u5730\u5740\u5165\u6808**\uff0c\u7136\u540e**\u8c03\u7528\u8005\u7684 EBP \uff08\u65e7\u7684EBP \uff09\u538b\u6808**\u3002x86 \u4e2d\u6808\u662f\u5411\u4e0b\u589e\u957f\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u83b7\u53d6\u5230\u5f53\u524d EBP \u5bc4\u5b58\u5668\u7684\u503c\u5411\u4e0a\u62e8\u52a8\u4e00\u4e2a\u6570\u636e\u5355\u5143\uff0832-bit 4 \u5b57\u8282\uff0c64-bit 8 \u5b57\u8282\uff09\uff0c\u8bbf\u95ee\u8fd9\u4e2a\u5730\u5740\u5c31\u80fd\u591f\u5f97\u5230\u8fd4\u56de\u5730\u5740\u3002\u540c\u65f6\u4e0a\u4e00\u7ea7\u51fd\u6570\u6808\u5e27\u7684 EBP \u53c8\u53ef\u4ee5\u901a\u8fc7\u5f53\u524d\u51fd\u6570\u7684 EBP \u83b7\u53d6\u5230\uff08**\u8bbf\u95ee\u5f53\u524d\u51fd\u6570 EBP \u5bc4\u5b58\u5668\u503c\u6307\u5411\u7684\u5730\u5740**\uff09\u3002\\n\\n\u7531\u4e8e\u51fd\u6570\u8c03\u7528\u5b58\u5728\u5d4c\u5957\u6027\uff0c\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u51fd\u6570\u6808\u5e27\uff0c\u6211\u4eec\u9700\u8981**\u9012\u5f52\u6267\u884c**\u4e0a\u8ff0\u8fc7\u7a0b\u3002\\n\\n\u66f4\u5177\u4f53\u7684\u4fe1\u606f\u8bf7\u8bbf\u95ee\uff1a\\n\\n[\u7cfb\u7edf\u7a0b\u5e8f\u5458\u6210\u957f\u8ba1\u5212\uff0d\u50cf\u673a\u5668\u4e00\u6837\u601d\u8003(\u4e8c)](https://blog.csdn.net/absurd/article/details/4207357?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160423542319724836730112%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=160423542319724836730112&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v1~rank_blog_v1-6-4207357.pc_v1_rank_blog_v1&utm_term=%E8%B0%83%E7%94%A8&spm=1018.2118.3001.4450)\\n[](https://blog.csdn.net/absurd/article/details/4207357?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160423542319724836730112%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=160423542319724836730112&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v1~rank_blog_v1-6-4207357.pc_v1_rank_blog_v1&utm_term=%E8%B0%83%E7%94%A8&spm=1018.2118.3001.4450)\\n\\n\u4e0a\u8ff0\u94fe\u63a5\u4e2d\u7684\u793a\u4f8b\u4ee3\u7801\u76f4\u63a5\u7f16\u8bd1\u8fd0\u884c\u5728\u6211\u7684\u7cfb\u7edf\u4e0a\u4f1a\u62a5\u6bb5\u9519\u8bef\uff0c\u6211\u4fee\u6539\u4e86\u90e8\u5206\u5185\u5bb9\uff0c\u65b0\u7684 demo \u5982\u4e0b\uff1a\\n\\n```c\\n#include <stdio.h> \\n\\n#define NEW_GCC\\n#define MAX_LEVEL 4\\n#ifdef NEW_GCC\\n#define OFFSET 4\\n#else\\n#define OFFSET 0\\n#endif/*NEW_GCC*/ \\n\\nint backtrace(void** buffer, int size)\\n{\\n\\tlong n = 0xfefefefe;\\n\\tlong* p = &n;\\n\\tint\\t i = 0; \\n\\n\\tlong ebp = p[1 + OFFSET];\\n\\tlong eip = p[2 + OFFSET]; \\n\\n\\tfor(i = 0; i < size; i++)\\n\\t{\\n\\t\\tbuffer[i] = (void*)eip;\\n\\t\\tp = (long*)ebp;\\n\\t\\tebp = p[0];\\n\\t\\teip = p[1];\\n\\t} \\n\\n\\treturn size;\\n} \\n\\nstatic void test2()\\n{\\n\\tint i = 0;\\n\\tvoid* buffer[MAX_LEVEL] = {0}; \\n\\n\\tbacktrace(buffer, MAX_LEVEL); \\n\\n\\tfor(i = 0; i < MAX_LEVEL; i++)\\n\\t{\\n\\t\\tprintf(\\"called by %p\\\\n\\",\\tbuffer[i]);\\n\\t} \\n\\n\\treturn;\\n} \\n\\nstatic void test1()\\n{\\n\\tint a=0x11111111;\\n\\tint b=0x11111112; \\n\\n\\ttest2();\\n\\ta = b; \\n\\n\\treturn;\\n} \\n\\nstatic void test()\\n{\\n\\tint a=0x10000000;\\n\\tint b=0x10000002; \\n\\n\\ttest1();\\n\\ta = b; \\n\\n\\treturn;\\n} \\n\\nint main(int argc, char* argv[])\\n{\\n\\ttest(); \\n\\n\\treturn 0;\\n}\\n```\\n\u5c06\u4e0a\u8ff0\u4ee3\u7801\u4fdd\u5b58\u4e3a backtrace.c\uff0c\u7f16\u8bd1\u8fd0\u884c\u80fd\u591f\u6b63\u5e38\uff0c\u8bb0\u5f55\u5982\u4e0b\uff1a\\n```c\\n[longyu@debian-10:21:04:29] program-problem $ gcc ./backtrace.c -o backtrace\\n[longyu@debian-10:21:04:31] program-problem $ ./backtrace\\ncalled by 0x555555555204\\ncalled by 0x555555555258\\ncalled by 0x555555555281\\ncalled by 0x5555555552a3\\n```\\n[\u7cfb\u7edf\u7a0b\u5e8f\u5458\u6210\u957f\u8ba1\u5212\uff0d\u50cf\u673a\u5668\u4e00\u6837\u601d\u8003(\u4e8c)](https://blog.csdn.net/absurd/article/details/4207357?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160423542319724836730112%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=160423542319724836730112&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v1~rank_blog_v1-6-4207357.pc_v1_rank_blog_v1&utm_term=%E8%B0%83%E7%94%A8&spm=1018.2118.3001.4450)\\n[](https://blog.csdn.net/absurd/article/details/4207357?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160423542319724836730112%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=160423542319724836730112&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v1~rank_blog_v1-6-4207357.pc_v1_rank_blog_v1&utm_term=%E8%B0%83%E7%94%A8&spm=1018.2118.3001.4450)\u8fd9\u7bc7\u674e\u5148\u9759\u5927\u795e\u7684\u535a\u5ba2\u4e2d\uff0c\u4ece\u6839\u672c\u4e0a\u89e3\u91ca\u4e86\u6211\u4e4b\u524d\u63cf\u8ff0\u7684 addr2line \u547d\u4ee4\u4e0d\u80fd\u83b7\u53d6\u5230\u884c\u53f7\u7684\u95ee\u9898\u3002\\n\\n\u76f8\u5173\u7684\u5185\u5bb9\u6458\u5f55\u5982\u4e0b\uff1a\\n\\n>\u5bf9\u4e8e\u5171\u4eab\u5e93\uff0caddr2line\u65e0\u6cd5\u6839\u636e\u8fd9\u4e2a\u5730\u5740\u627e\u5230\u5bf9\u5e94\u7684\u6e90\u4ee3\u7801\u4f4d\u7f6e\u4e86\u3002\u539f\u56e0\u662f\uff1aaddr2line\u53ea\u80fd\u901a\u8fc7\u5730\u5740\u504f\u79fb\u91cf\u6765\u67e5\u627e\uff0c\u800c\u6253\u5370\u51fa\u7684\u5730\u5740\u662f\u7edd\u5bf9\u5730\u5740\u3002\u7531\u4e8e\u5171\u4eab\u5e93\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u4f4d\u7f6e\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4e3a\u4e86\u8ba1\u7b97\u5730\u5740\u504f\u79fb\u91cf\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8fdb\u7a0bmaps\u6587\u4ef6\u7684\u5e2e\u52a9\\n\\n## \u8fdb\u7a0b maps \u6587\u4ef6\u7684\u4f7f\u7528\\n\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u865a\u62df\u5185\u5b58\u7a7a\u95f4\uff0c\u5176\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u6620\u5c04\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b /proc/[pid]/maps \u6587\u4ef6\u6765\u786e\u5b9a\u3002\\n\\n\u4e0a\u6587\u4e2d\u5df2\u7ecf\u63cf\u8ff0\u4e86\u8fd0\u884c backtrace \u7a0b\u5e8f\u5f97\u5230\u7684\u5982\u4e0b\u8f93\u51fa\u4fe1\u606f\uff1a\\n\\n```c\\n[longyu@debian-10:21:04:31] program-problem $ ./backtrace\\ncalled by 0x555555555204\\ncalled by 0x555555555258\\ncalled by 0x555555555281\\ncalled by 0x5555555552a3\\n```\\n### \u7528 gdb \u6765\u9a8c\u8bc1\\ngdb \u6302\u8d77\u7a0b\u5e8f\uff0c\u53cd\u6c47\u7f16\u8c03\u7528\u5230\u7684\u4e0d\u540c\u51fd\u6570\uff0c\u8c03\u7528\u6307\u4ee4\u4e0e\u8fd4\u56de\u5730\u5740\u6307\u4ee4\u5217\u4e3e\u5982\u4e0b\uff1a\\n\\n```asm\\n   0x000055555555529e <+20>:\\tcallq  0x555555555261 <test>\\n   **0x00005555555552a3 <+25>:\\tmov    $0x0,%eax**\\n   0x000055555555527c <+27>:\\tcallq  0x555555555238 <test1>\\n   **0x0000555555555281 <+32>:\\tmov    -0x8(%rbp),%eax**\\n   0x0000555555555253 <+27>:\\tcallq  0x5555555551c4 <test2>\\n   **0x0000555555555258 <+32>:\\tmov    -0x8(%rbp),%eax**\\n   0x00005555555551ff <+59>:\\tcallq  0x555555555135 <backtrace>\\n   **0x0000555555555204 <+64>:\\tmovl   $0x0,-0x4(%rbp)**\\n```\\n\\n\u8fd9\u91cc\u52a0\u7c97\u7684\u8868\u793a\u8fd4\u56de\u5730\u5740\uff0c\u53ef\u4ee5\u770b\u5230\u4e0e\u4e0a\u9762\u7684\u8f93\u51fa\u662f\u5bf9\u5e94\u7684\uff0c\u4e0d\u8fc7\u7531\u4e8e backtrace \u662f\u5411\u540e\u56de\u6eaf\u7684\uff0c\u4e0e\u8fd9\u91cc\u7684**\u987a\u5e8f\u521a\u597d\u76f8\u53cd**\u3002\\n\\n### \u4f7f\u7528 maps \u6587\u4ef6\u6765\u9a8c\u8bc1\\n\u4e0a\u9762 backtrace \u7a0b\u5e8f\u8fd0\u884c\u7684\u8f93\u51fa\u4fe1\u606f\u4e2d 0x555555555204 \u8fd9\u4e9b\u5730\u5740\u662f**\u7a0b\u5e8f\u88ab\u6620\u5c04\u5230\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u7684\u865a\u62df\u5730\u5740**\uff0c\u6211\u901a\u8fc7\u6267\u884c\u5982\u4e0b\u6b65\u9aa4\u6765\u83b7\u53d6\u5230\u7a0b\u5e8f\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u5e03\u5c40\uff1a\\n\\n1. \u4f7f\u7528 gdb \u8fd0\u884c backtrace \u7a0b\u5e8f\u5e76\u5728 main \u51fd\u6570\u5904\u505c\u4e0b\u6765\\n2. \u4f7f\u7528 pmap \u67e5\u770b backtrace \u7a0b\u5e8f\u7684\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u6620\u5c04\\n\\n\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u6620\u5c04\u8868\u5982\u4e0b\uff1a\\n\\n```bash\\n[longyu@debian-10:21:17:56] glibc-2.28 $ pmap -p 5201\\n5201:   /home/longyu/problem_and_solution/program-problem/backtrace\\n0000555555554000      4K r---- /home/longyu/problem_and_solution/program-problem/backtrace\\n0000555555555000      4K r-x-- /home/longyu/problem_and_solution/program-problem/backtrace\\n0000555555556000      4K r---- /home/longyu/problem_and_solution/program-problem/backtrace\\n0000555555557000      4K r---- /home/longyu/problem_and_solution/program-problem/backtrace\\n0000555555558000      4K rw--- /home/longyu/problem_and_solution/program-problem/backtrace\\n00007ffff7dea000    136K r---- /usr/lib/x86_64-linux-gnu/libc-2.28.so\\n00007ffff7e0c000   1312K r-x-- /usr/lib/x86_64-linux-gnu/libc-2.28.so\\n00007ffff7f54000    304K r---- /usr/lib/x86_64-linux-gnu/libc-2.28.so\\n00007ffff7fa0000      4K ----- /usr/lib/x86_64-linux-gnu/libc-2.28.so\\n00007ffff7fa1000     16K r---- /usr/lib/x86_64-linux-gnu/libc-2.28.so\\n00007ffff7fa5000      8K rw--- /usr/lib/x86_64-linux-gnu/libc-2.28.so\\n00007ffff7fa7000     24K rw---   [ anon ]\\n00007ffff7fd0000     12K r----   [ anon ]\\n00007ffff7fd3000      8K r-x--   [ anon ]\\n00007ffff7fd5000      4K r---- /usr/lib/x86_64-linux-gnu/ld-2.28.so\\n00007ffff7fd6000    120K r-x-- /usr/lib/x86_64-linux-gnu/ld-2.28.so\\n00007ffff7ff4000     32K r---- /usr/lib/x86_64-linux-gnu/ld-2.28.so\\n00007ffff7ffc000      4K r---- /usr/lib/x86_64-linux-gnu/ld-2.28.so\\n00007ffff7ffd000      4K rw--- /usr/lib/x86_64-linux-gnu/ld-2.28.so\\n00007ffff7ffe000      4K rw---   [ anon ]\\n00007ffffffdd000    136K rw---   [ stack ]\\n total             2148K\\n```\\n\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5173\u6ce8 backtrace \u7a0b\u5e8f\u5728\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u5e03\u5c40\uff0c\u53ef\u4ee5\u770b\u5230\u6709\u51e0\u4e2a\u9879\u76ee\uff0c\u8d77\u59cb\u5730\u5740\u4e3a 0000555555554000\uff0c\u5bf9\u5e94\u7684\u9879\u76ee\u5982\u4e0b\uff1a\\n\\n```bash\\n0000555555554000      4K r---- /home/longyu/problem_and_solution/program-problem/backtrace\\n```\\n0000555555554000  \u5373\u4e3a backtrace \u7a0b\u5e8f\u6620\u5c04\u7684\u8d77\u59cb\u5730\u5740\uff0c\u6211\u4eec\u7528 backtrace \u7a0b\u5e8f\u7684\u8f93\u51fa\u5730\u5740\u51cf\u6389\u8fd9\u4e2a\u8d77\u59cb\u5730\u5740\uff0c\u5c06\u4f1a\u5f97\u5230\u4e0b\u9762\u51e0\u4e2a\u5730\u5740\uff1a\\n\\n0x1204\\n0x1258\\n0x1281\\n0x12a3\\n\\n\u5c06\u8fd9\u51e0\u4e2a\u5730\u5740\u5199\u5165\u4e00\u4e2a\u540d\u4e3a test \u7684\u6587\u4ef6\u4e2d\uff0c\u4f7f\u7528 xargs \u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u5236\u4f5c\u53c2\u6570\u8c03\u7528 addr2line \u547d\u4ee4\uff0c\u5f97\u5230\u4e86\u5982\u4e0b\u4fe1\u606f\uff1a\\n\\n```bash\\n[longyu@debian-10:21:37:35] program-problem $ xargs -a ./test  addr2line -e ./backtrace \\n/home/longyu/problem_and_solution/program-problem/./backtrace.c:38\\n/home/longyu/problem_and_solution/program-problem/./backtrace.c:52\\n/home/longyu/problem_and_solution/program-problem/./backtrace.c:63\\n/home/longyu/problem_and_solution/program-problem/./backtrace.c:72\\n```\\n\u53ef\u4ee5\u770b\u5230 addr2line \u6210\u529f\u89e3\u6790\u51fa\u4e86\u6307\u4ee4\u5728\u4ee3\u7801\u4e2d\u7684\u4f4d\u7f6e\u3002\u5bf9\u4e8e\u52a8\u6001\u5e93\u4e2d\u7684\u51fd\u6570\u5730\u5740\uff0c\u6709\u7c7b\u4f3c\u7684\u8fc7\u7a0b\uff01\\n\\n## \u603b\u7ed3\\n\u4e00\u4e2a\u7b80\u5355\u7684\u77e5\u8bc6\u80cc\u540e\u53ef\u80fd\u8574\u85cf\u4e86\u5f88\u591a\u7684\u95ee\u9898\uff0c\u8fd9\u4e9b\u95ee\u9898\u73af\u73af\u76f8\u6263\uff0c\u5f53\u4f60\u5904\u5728\u5206\u6790\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\u65f6\uff0c\u5e38\u5e38\u4f1a\u611f\u5230\u5934\u75db\uff0c\u4f46\u5c06\u6574\u4e2a\u8fc7\u7a0b\u4e32\u8054\u8d77\u6765\u540e\uff0c\u5374\u53c8\u4f1a\u6709\u975e\u5e38\u5927\u7684\u6210\u5c31\u611f\u3002\\n\\n\u4ece\u4e00\u4e2a\u95ee\u9898\u8df3\u8dc3\u5230\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\uff0c\u7ed5\u6765\u7ed5\u53bb\u6700\u7ec8\u53c8\u56de\u5230\u6700\u521d\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\u6b64\u65f6\u77e5\u8bc6\u9762\u5f97\u5230\u4e86\u6269\u5145\uff0c\u8f93\u5165\u589e\u52a0\u4e86\uff0c\u6709\u4e86\u8fd9\u4e2a\u589e\u52a0\u7684\u8f93\u5165\u4fe1\u606f\uff0c\u6700\u521d\u7684\u95ee\u9898\u5df2\u7ecf\u4e0d\u7b97\u662f\u95ee\u9898\u4e86\uff01\\n\\n\u672c\u6587\u7684\u95ee\u9898\u8109\u7edc\u5927\u81f4\u6709\u5982\u4e0b\u51e0\u70b9\uff1a\\n\\n1. \u5982\u4f55\u4f7f\u7528 mtrace\uff1f\\n2. mtrace \u811a\u672c\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u6253\u5370\u6e90\u7801\u884c\u53f7\uff1f\\n3. addr2line \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u6253\u5370\u6e90\u7801\u884c\u53f7\uff1f\\n4. mtrace \u51fd\u6570\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\\n5. RETURN_ADDRESS \u5b8f\u7684\u5b9a\u4e49\u662f\u4ec0\u4e48\uff1f\\n6. gcc \u5185\u5efa\u7684 __builtin_return_address \u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f\\n7. \u4ece backtrace \u7a0b\u5e8f\u518d\u6b21\u56de\u5230\u7b2c\u4e09\u4e2a\u95ee\u9898\\n\\n\u6ce8\u610f\u5728\u7b2c 7 \u4e2a\u5173\u952e\u70b9\u7684\u65f6\u5019\uff0c\u53c8\u56de\u5230\u4e86 3 \u8fd9\u4e2a\u70b9\uff0c\u4e0d\u8fc7\u8fd9\u65f6\u5019\u6211\u6709\u4e86 maps \u6587\u4ef6\u8fd9\u4e2a\u8f93\u5165\uff0c\u8fd9\u4e2a\u8f93\u5165\u8ba9 addr2line \u4e0d\u80fd\u6253\u5370\u884c\u53f7\u7684\u95ee\u9898\u8fce\u5203\u800c\u89e3\uff01\\n\\n\u5217\u51fa\u8fd9\u4e9b\u5173\u952e\u70b9\u53ea\u60f3\u629b\u51fa\u4e00\u4e2a\u95ee\u9898\uff1a**\u4f60\u89c9\u5f97\u81ea\u5df1\u4f1a\u5728\u54ea\u4e2a\u70b9\u7ed3\u675f\u5462\uff1f**"},{"id":"/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684","metadata":{"permalink":"/blog/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684.md","source":"@site/blog/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684.md","title":"linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684","description":"\u524d\u8a00","date":"2025-09-07T11:29:47.997Z","formattedDate":"2025\u5e749\u67087\u65e5","tags":[],"readingTime":10.255,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898","permalink":"/blog/libc/\u4f7f\u7528mtrace\u8ddf\u8e2a\u5185\u5b58\u6cc4\u9732\u95ee\u9898"},"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"## \u524d\u8a00\\nlinux \u5185\u6838\u6a21\u5757\u7684\u52a0\u8f7d\u6d41\u7a0b\u53bb\u5e74\u5927\u81f4\u7422\u78e8\u4e86\u4e00\u904d\uff0c\u7b80\u5355\u7684\u5199\u4e86\u4e2a\u8349\u7a3f\u540e\u5c31\u5728\u8349\u7a3f\u7bb1\u91cc\u79ef\u538b\u7740\u3002\u6309\u7167\u4ee5\u5f80\u7684\u98ce\u683c\uff0c\u5e94\u5f53\u4ee5\u4e00\u7bc7\u957f\u6587\u5448\u73b0\uff0c\u4eca\u5929\u60f3\u60f3\u5374\u89c9\u5f97\u4e0d\u592a\u53ef\u53d6\u3002\u4e3a\u4ec0\u4e48\u4e0d\u4ece\u5173\u952e\u7684\u95ee\u9898\u7740\u624b\uff0c\u4f7f\u7528\u8f83\u77ed\u7684\u7bc7\u5e45\u6765\u9010\u4e2a\u51fb\u7834\u5462\uff1f\\n\\n\u6700\u7ec8\u9009\u62e9\u4e86\u4ece\u95ee\u9898\u51fa\u53d1\u7684\u63cf\u8ff0\u65b9\u5f0f\uff0c\u5728\u8fd9\u79cd\u65b9\u5f0f\u4e0b\uff0c\u6211\u9996\u5148\u5f97\u63d0\u51fa\u5173\u952e\u95ee\u9898\uff0c\u8fd9\u9700\u8981\u4e00\u5b9a\u7684\u8bad\u7ec3\uff0c\u672c\u6587\u4fbf\u662f\u8fd9\u6837\u7684\u4e00\u6b21\u5b9e\u8df5\u3002\\n\\n## \u6211\u7684\u95ee\u9898\\n\\n### 1. **linux \u5185\u6838\u6a21\u5757\u662f\u5982\u4f55\u94fe\u63a5\u7684\uff1f**\\n\\n\u6682\u65f6\u65e0\u6cd5\u56de\u7b54\u3002\\n\\n### 2. \u4e3a\u4ec0\u4e48\u8981\u63d0\u8fd9\u4e2a\u95ee\u9898\uff1f\\n\\n\u5e38\u89c4\u7684 c \u7a0b\u5e8f\u8981\u7ecf\u8fc7\u7f16\u8bd1\u94fe\u63a5\u6765\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u94fe\u63a5\u7684\u8fc7\u7a0b\u4f1a\u6309\u7167\u94fe\u63a5\u811a\u672c\u7684\u914d\u7f6e\u6765\u5b8c\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684 layout \u540c\u65f6\u4e5f\u4f1a\u5bf9\u6240\u6709\u7684\u53ef\u91cd\u5b9a\u4f4d\u9879\u76ee\u8fdb\u884c\u91cd\u5b9a\u4f4d\uff0c\u4ee5\u786e\u5b9a\u8bbf\u95ee\u5730\u5740\u504f\u79fb\u3002\\n\\nlinux \u5185\u6838\u6a21\u5757\u4e5f\u6709\u7c7b\u4f3c\u7684\u8fc7\u7a0b\uff0c\u53ef\u7f16\u8bd1\u751f\u6210\u7684\u5185\u6838\u6a21\u5757\u53ea\u662f\u4e00\u4e2a\u3010\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u3011\uff0c**\u90a3\u5b83\u7684\u94fe\u63a5\u8fc7\u7a0b\u662f\u5728\u54ea\u91cc\u6267\u884c\u7684\u5462\uff1f**\\n\\n## \u7ecf\u9a8c\u4e4b\u8c08\\n\\n\u5185\u6838\u6a21\u5757\u4e00\u822c\u901a\u8fc7 insmod\u3001modprobe \u547d\u4ee4\u52a0\u8f7d\u8fd0\u884c\uff0c\u65e2\u7136\u8981\u8fd0\u884c\uff0c\u80af\u5b9a\u9700\u8981\u786e\u5b9a\u6a21\u5757\u5185\u8c03\u7528\u7684\u5916\u90e8\u7b26\u53f7\u7684\u504f\u79fb\u5730\u5740\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u53ef\u80fd\u5728\u5982\u4e0b\u6d41\u7a0b\u4e2d\u8fdb\u884c\uff1a\\n\\n1. insmod\u3001modprobe \u547d\u4ee4\u4e2d\\n2. \u5185\u6838\u4ee3\u7801\u4e2d\u6a21\u5757\u52a0\u8f7d\u6d41\u7a0b\u4e2d\\n\\n\u66fe\u7ecf strace \u8ddf\u8e2a\u8fc7 insmod \u52a0\u8f7d\u5185\u6838\u6a21\u5757\u7684\u8fc7\u7a0b\uff0c\u6838\u5fc3\u903b\u8f91\u662f\u8c03\u7528 finit_module\u3001init_module \u7cfb\u7edf\u8c03\u7528\uff0c\u6ca1\u6709\u770b\u5230\u5176\u5b83\u64cd\u4f5c\uff0c\u4e8e\u662f\u5224\u65ad\u5185\u6838\u6a21\u5757\u7684\u94fe\u63a5\u5e94\u5f53\u662f\u5728\u5185\u6838\u4ee3\u7801\u4e2d\u505a\u7684\u3002\\n\\n\u4e0b\u9762\u6211\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684 hello world \u5185\u6838\u6a21\u5757\u4e3a\u4f8b\uff0c\u63a2\u8ba8\u5185\u6838\u4e2d\u6267\u884c\u6a21\u5757\u94fe\u63a5\u7684\u8fc7\u7a0b\u3002\\n\\n## \u4e00\u4e2a\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u6e90\u7801\\n\\n```c\\n#include <linux/module.h>\\n#include <linux/init.h>\\n\\nstatic int __init my_init(void)\\n{\\n  printk(KERN_INFO \\"Hello from Hello Module\\\\\\\\n\\");\\n  return 0;\\n}\\n\\nstatic void __exit my_exit(void)\\n{\\n  printk(KERN_INFO \\"Bye from Hello Module\\\\\\\\n\\");\\n}\\n\\nmodule_init(my_init);\\nmodule_exit(my_exit);\\n\\nMODULE_DESCRIPTION(\\"Sample Hello World Module\\");\\nMODULE_LICENSE(\\"GPL\\");\\n\\n```\\n\\n\u5c06\u4e0a\u8ff0\u5185\u5bb9\u4fdd\u5b58\u4e3a mymodule.c \u4f7f\u7528\u5982\u4e0b Makefile \u5185\u5bb9\u7f16\u8bd1\uff1a\\n\\n```makefile\\nMODULE_FILENAME=mymodule\\n\\nPWD := $(shell pwd)\\nobj-m += ${MODULE_FILENAME}.o\\nKO_FILE=${MODULE_FILENAME}.ko\\n\\nexport KROOT=/lib/modules/$(shell uname -r)/build\\nmodules:\\n\\t@${MAKE} -C ${KROOT} M=${PWD}\\n\\nmodules_install:\\n\\t@${MAKE} -C ${KROOT} M=${PWD} modules_install\\n\\nclean:\\n\\t@${MAKE} -C ${KROOT} M=${PWD} clean\\n\\trm -rf Modules.symvers modules.order\\n\\ninsert: modules\\n\\tsudo insmod ${KO_FILE}\\n\\nremove:\\n\\tsudo rmmod ${MODULE_FILENAME}\\n\\nprintlog:\\n\\tsudo dmesg -c\\n\\tsudo insmod ${KO_FILE}\\n\\tdmesg\\n```\\n\\n## objdump -d mymodule.ko\\n\\n```bash\\nDisassembly of section .init.text:\\n\\n0000000000000000 <init_module>:\\n   0:\\te8 00 00 00 00       \\tcallq  5 <init_module+0x5>\\n   5:\\t48 c7 c7 00 00 00 00 \\tmov    $0x0,%rdi\\n   c:\\te8 00 00 00 00       \\tcallq  11 <init_module+0x11>\\n  11:\\t31 c0                \\txor    %eax,%eax\\n  13:\\tc3                   \\tretq\\n\\nDisassembly of section .exit.text:\\n\\n0000000000000000 <cleanup_module>:\\n   0:\\t48 c7 c7 00 00 00 00 \\tmov    $0x0,%rdi\\n   7:\\te9 00 00 00 00       \\tjmpq   c <__UNIQUE_ID_description18>\\n\\n```\\n\\ninit_module \u4e3a\u6a21\u5757\u7684\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5728\u5176\u4e2d\u8c03\u7528\u5230\u7684\u4e24\u4e2a **callq** \u6307\u4ee4\u7528\u4e8e\u5b50\u51fd\u6570\u8c03\u7528\u3002**callq** \u6307\u4ee4\u7684\u5b57\u8282\u7801\u4e3a **0xe8**\uff0c\u5176\u540e\u56db\u4e2a\u5b57\u8282\u4e3a\u51fd\u6570\u8df3\u8f6c\u504f\u79fb\uff0c\u8fd9\u91cc\u4e24\u4e2a **callq** \u6307\u4ee4\u7684\u51fd\u6570\u8df3\u8f6c\u504f\u79fb\u503c\u90fd\u4e3a 0\uff0c\u8fd9\u7b26\u5408\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u7684\u7279\u5f81\uff0c\u8fd9\u91cc\u5c31\u662f\u4e24\u5904\u9700\u8981\u94fe\u63a5\u8fc7\u7a0b\u5b8c\u6210\u7684\u91cd\u5b9a\u4f4d\u5bf9\u8c61\u3002\\n\\n\u7b2c\u4e8c\u4e2a callq \u53ef\u4ee5\u660e\u786e\u662f printk\uff0c\u7b2c\u4e00\u4e2a callq \u6839\u636e readelf -r \u7684\u8f93\u51fa\u5224\u65ad\u662f ```__fentry__ ```\u3002\\n\\n## readelf -r mymodule.ko\\n\\n```bash\\nRelocation section \'.rela.init.text\' at offset 0x1cb30 contains 3 entries:\\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\\n000000000001  002600000004 R_X86_64_PLT32    0000000000000000 __fentry__ - 4\\n000000000008  00060000000b R_X86_64_32S      0000000000000000 .rodata.str1.1 + 0\\n00000000000d  002800000004 R_X86_64_PLT32    0000000000000000 printk - 4\\n\\nRelocation section \'.rela.exit.text\' at offset 0x1cb78 contains 2 entries:\\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\\n000000000003  00060000000b R_X86_64_32S      0000000000000000 .rodata.str1.1 + 1b\\n000000000008  002800000004 R_X86_64_PLT32    0000000000000000 printk - 4\\n```\\n\\nreadelf -r \u53c2\u6570\u83b7\u53d6\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u7684\u53ef\u91cd\u5b9a\u4f4d section \u8868\u9879\u3002\u4e0a\u8ff0\u8f93\u51fa\u4e2d\u6709\u5982\u4e0b\u4e24\u4e2a\u53ef\u91cd\u5b9a\u4f4d section:\\n\\n1. .rela.init.text\\n2. .rela.exit.text\\n\\n\u6bcf\u4e2a section \u4e2d\u90fd\u5217\u4e3e\u51fa\u4e86\u3010\u9700\u8981\u91cd\u5b9a\u4f4d\u7684\u9879\u76ee\u3011\uff0c\u4e00\u4e2a\u9879\u76ee\u6709\u4e94\u4e2a\u65b9\u9762\u7684\u5185\u5bb9\uff0c\u5176\u4e2d **Offset \u4e3a\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u5730\u5740\u76f8\u5bf9\u6587\u4ef6\u8d77\u59cb\u5730\u5740\u7684\u504f\u79fb\u91cf**\uff0c**Type \u4e3a\u91cd\u5b9a\u4f4d\u7684\u7c7b\u578b**\uff0c\u7528\u4e8e\u8ba1\u7b97\u504f\u79fb\u5730\u5740\uff0c**Sym. Name + Addend \u5b57\u6bb5\u4e3a\u7b26\u53f7\u540d\u79f0\u4ee5\u53ca\u8ba1\u7b97\u5730\u5740\u504f\u79fb\u91cf\u65f6\u7684\u4fee\u6b63\u503c\u3002**\\n\\n**.rela.init_text section** \u4e2d\u6709\u4e24\u79cd\u91cd\u5b9a\u4f4d\u7c7b\u578b\uff0c**R_X86_64_PLT32**  \u7528\u4e8e\u51fd\u6570\u504f\u79fb\u8ba1\u7b97\uff0c**R_X86_64_32S** \u7528\u4e8e\u6570\u636e\u504f\u79fb\u8ba1\u7b97\u3002str1.1 \u5b9e\u9645\u6307\u5411 init_module \u51fd\u6570\u4e2d printk \u51fd\u6570\u6253\u5370\u7684\u5b57\u7b26\u4e32\u3002\\n\\n\u51fd\u6570\u504f\u79fb\u7684\u8ba1\u7b97\u53ef\u4ee5\u53c2\u8003\u5982\u4e0b\u5185\u5bb9\u6765\u5b66\u4e60\uff1a\\n\\n>So despite the fact that the type of the relocation entry is R_X86_64_PLT32 the linker will still use the R_X86_64_PC32 computation (S + A - P) for the relocation target being modified, where:\\n>\\n>    S is the value of the symbol (st_value of Elf64_Sym)\\n    A is the addend (-4 in your case)\\n    P is the address of the memory location being relocated (the start of the address of the call to Other)\\n\\n\u4e0a\u8ff0\u82f1\u6587\u6458\u81ea [How does the address of R_X86_64_PLT32 computed?](https://stackoverflow.com/questions/64424692/how-does-the-address-of-r-x86-64-plt32-computed) \u66f4\u591a\u7684\u4fe1\u606f\u53ef\u4ee5\u9605\u8bfb\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b\u7b2c\u4e09\u7248 7.7 \u8282\u3002\\n\\n\u5728\u4e0b\u6587\u4e2d\u6211\u4f1a\u7528\u4e00\u4e2a\u5b9e\u4f8b\u6765\u8bf4\u660e\u51fd\u6570\u504f\u79fb\u5730\u5740\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002\\n\\n## \u5728\u5185\u6838\u6e90\u7801\u4e2d\u627e\u5230\u6a21\u5757\u94fe\u63a5\u76f8\u5173\u4ee3\u7801\\n\\n\u4f7f\u7528 R_X86_64_PLT32 \u5173\u952e\u5b57\u8fdb\u884c\u5982\u4e0b\u641c\u7d22\uff1a\\n\\n1. \u641c\u7d22 kernel \u76ee\u5f55\\n2. \u641c\u7d22 arch/x86 \u76ee\u5f55\\n\u786e\u5b9a\u6a21\u5757\u94fe\u63a5\u6d41\u7a0b\u5728 arch/x86/kernel/module.c \u4e2d\u5b9e\u73b0\u3002\\n\\n\u9605\u8bfb module.c \u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u6709\u4e00\u4e2a\u8c03\u8bd5\u4fe1\u606f\uff0c\u4e8e\u662f\u4fee\u6539\u5185\u6838\u4ee3\u7801\uff0c\u5f00\u542f\u8c03\u8bd5\u4fe1\u606f\u3002\\n\\n## \u5185\u6838\u4ee3\u7801\u4fee\u6539 patch\\n\\n```c\\ndiff --git a/arch/x86/kernel/module.c b/arch/x86/kernel/module.c\\nindex b052e883dd8c..11e39304c55f 100644\\n--- a/arch/x86/kernel/module.c\\n+++ b/arch/x86/kernel/module.c\\n@@ -37,7 +37,7 @@\\n #include <asm/setup.h>\\n #include <asm/unwind.h>\\n\\n-#if 0\\n+#if 1\\n #define DEBUGP(fmt, ...)                               \\\\\\\\\\n        printk(KERN_DEBUG fmt, ##__VA_ARGS__)\\n #else\\n@@ -196,6 +196,7 @@ int apply_relocate_add(Elf64_Shdr *sechdrs,\\n                                goto invalid_relocation;\\n                        val -= (u64)loc;\\n                        *(u32 *)loc = val;\\n+\\n #if 0\\n                        if ((s64)val != *(s32 *)loc)\\n                                goto overflow;\\n@@ -212,6 +213,7 @@ int apply_relocate_add(Elf64_Shdr *sechdrs,\\n                               me->name, ELF64_R_TYPE(rel[i].r_info));\\n                        return -ENOEXEC;\\n                }\\n+               DEBUGP(\\"val is 0x%llx\\\\\\\\n\\", val);\\n        }\\n        return 0;\\n\\n```\\n\\n## \u91cd\u65b0\u7f16\u8bd1\u5e76\u66f4\u65b0\u5185\u6838\u540e\u52a0\u8f7d mymodule.ko \u540e dmesg \u90e8\u5206\u6253\u5370\u4fe1\u606f\\n\\n```bash\\n[  109.974417] type 4 st_value ffffffffbda016d0 r_addend fffffffffffffffc loc ffffffffc0106001\\n[  109.974418] val is 0xfffffffffd8fb6cb\\n.........\\n```\\n\\n\u7531\u4e8e\u6253\u5370\u4fe1\u606f\u5f88\u591a\uff0c\u6211\u53ea\u622a\u53d6\u4e86\u5176\u4e2d\u7684\u4e00\u6761\u9879\u76ee\u3002\u5728\u4e0a\u8ff0\u9879\u76ee\u4e2d\u5173\u952e\u7684\u4fe1\u606f\u89e3\u6790\u5982\u4e0b\uff1a\\n\\n1. type 4 \u8868\u793a\u91cd\u5b9a\u4f4d\u7c7b\u578b\u4e3a R_X86_64_PLT32 \\n2. st_value ffffffffbda016d0 \u8868\u793a ```__fentry__```\u7b26\u53f7\u5730\u5740\\n    \\n    \u901a\u8fc7\u8bbf\u95ee /proc/kallsyms \u6587\u4ef6\u786e\u5b9a\uff0c\u76f8\u5173\u4fe1\u606f\u6458\u5f55\u5982\u4e0b\uff1b\\n    \\n\\n\\t```bash\\n\\t[root@debian-10:17:55:34] helloworld_module # grep __fentry__ /proc/kallsyms\\n\\tffffffffbda016d0 T __fentry__\\n\\t```\\n\\n1. r_addend fffffffffffffffc  \u4e3a\u4e0a\u6587\u4e2d readelf -r \u8f93\u51fa\u4e2d ```__fentry__```\u51fd\u6570\u7684 Addend \u503c\u2014\u2014 -4\\n2. loc ffffffffc0106001 \u8868\u793a\u4e0a\u6587\u4e2d readelf -r \u8f93\u51fa\u4e2d```__fentry__```\u88ab\u91cd\u5b9a\u4f4d\u533a\u57df\u5728\u5185\u6838\u7684\u5b9e\u9645\u5730\u5740\\n3. val is 0xfffffffffd8fb6cb\uff0cval \u4e3a\u6700\u7ec8\u8ba1\u7b97\u51fa\u7684\u8bbf\u95ee ```__fentry__```\u51fd\u6570\u7684\u504f\u79fb\u91cf\uff0c\u4f1a\u88ab\u586b\u5145\u5230 loc \u6307\u5411\u7684\u5730\u5740\u4e2d\\n    \\n    val \u8ba1\u7b97\u516c\u5f0f\u4e3a S + A - P: ffffffffbda016d0 + fffffffffffffffc  - ffffffffc0106001 = **0xfffffffffd8fb6cb**\\n    \\n\\n## \u6838\u5fc3\u5185\u6838\u4ee3\u7801\\n\\n\u5185\u6838\u4ee3\u7801\u4e2d\u76f8\u5173\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u5982\u4e0b\uff1a\\n```c\\ninit_module/finit_module\\n\\tload_module\\n       apply_relocations\\n           apply_relocate_add\\n  ```\\napply_relocate_add \u51fd\u6570\u4e2d\u5b8c\u6210\u91cd\u5b9a\u5411\u4efb\u52a1\uff0c\u6838\u5fc3\u4ee3\u7801\u6458\u5f55\u5982\u4e0b\uff1a\\n\\n```c\\n        for (i = 0; i < sechdrs[relsec].sh_size / sizeof(*rel); i++) {\\n                /* This is where to make the change */\\n                loc = (void *)sechdrs[sechdrs[relsec].sh_info].sh_addr\\n                        + rel[i].r_offset;\\n\\n                /* This is the symbol it is referring to.  Note that all\\n                   undefined symbols have been resolved.  */\\n                sym = (Elf64_Sym *)sechdrs[symindex].sh_addr\\n                        + ELF64_R_SYM(rel[i].r_info);\\n\\n                DEBUGP(\\"type %d st_value %Lx r_addend %Lx loc %Lx\\\\\\\\n\\",\\n                       (int)ELF64_R_TYPE(rel[i].r_info),\\n                       sym->st_value, rel[i].r_addend, (u64)loc);\\n\\n                val = sym->st_value + rel[i].r_addend;\\n                switch (ELF64_R_TYPE(rel[i].r_info)) {\\n                case R_X86_64_NONE:\\n                        break;\\n                case R_X86_64_64:\\n                        if (*(u64 *)loc != 0)\\n                                goto invalid_relocation;\\n                        *(u64 *)loc = val;\\n                        break;\\n                case R_X86_64_32:\\n                        if (*(u32 *)loc != 0)\\n                                goto invalid_relocation;\\n                        *(u32 *)loc = val;\\n                        if (val != *(u32 *)loc)\\n                                goto overflow;\\n                        break;\\n                case R_X86_64_32S:\\n                        if (*(s32 *)loc != 0)\\n                                goto invalid_relocation;\\n                        *(s32 *)loc = val;\\n                        if ((s64)val != *(s32 *)loc)\\n                                goto overflow;\\n                        break;\\n                case R_X86_64_PC32:\\n                case R_X86_64_PLT32:\\n                        if (*(u32 *)loc != 0)\\n                                goto invalid_relocation;\\n                        val -= (u64)loc;\\n                        *(u32 *)loc = val;\\n..........\\n\\n```\\n\\n\u4e0a\u8ff0\u4ee3\u7801\u904d\u5386\u6bcf\u4e2a\u53ef\u91cd\u5b9a\u4f4d section \u9879\u76ee\uff0cloc \u6307\u5411\u6a21\u5757\u52a0\u8f7d\u5230\u5185\u6838\u540e\u5b58\u50a8\u6bcf\u4e2a\u53ef\u91cd\u5b9a\u4f4d\u9879\u76ee\u88ab\u91cd\u5b9a\u4f4d\u533a\u57df\u7684\u5185\u5b58\u5730\u5740\uff0c\u4ee3\u8868 **R_X86_64_PLT32**  \u4e2d\u7684\u6807\u53f7 **P**\u3002\\n\\nsym \u4e2d\u4fdd\u5b58\u5df2\u7ecf resolve \u7684\u672a\u5b9a\u4e49\u7b26\u53f7\uff0csym->value \u8868\u793a\u7b26\u53f7\u52a0\u8f7d\u5730\u5740\uff0c\u4ee3\u8868 **R_X86_64_PLT32**  \u4e2d\u7684\u6807\u53f7 **S**\u3002\\n\\nrel[i].r_addend \u4fdd\u5b58\u53ef\u91cd\u5b9a\u4f4d\u9879\u76ee\u7684 **Addend** \u503c\uff0c\u4ee3\u8868 **R_X86_64_PLT32**  \u4e2d\u7684\u6807\u53f7 **A**\u3002\\n\\n\u5728\u786e\u5b9a\u4e86\u8fd9\u4e9b\u4fe1\u606f\u540e\uff0cswitch \u8bed\u53e5\u901a\u8fc7\u53ef\u91cd\u5b9a\u4f4d\u9879\u76ee\u7684 Type \u5b57\u6bb5\u8fdb\u884c\u903b\u8f91\u5206\u53d1\uff0c\u8ba1\u7b97\u5e76\u586b\u5145\u91cd\u5b9a\u4f4d\u540e\u7684\u5730\u5740\u3002\u5bf9\u4e8e R_X86_64_PLT32  \u8fd9\u79cd\u7c7b\u578b\u6765\u8bf4\uff0c\u8ba1\u7b97\u516c\u5f0f\u5c31\u662f **S + A - P**\u3002\\n\\n## \u603b\u7ed3\\n\\n\u5584\u4e8e\u63d0\u95ee\u662f\u4e00\u79cd\u5f88\u597d\u7684\u80fd\u529b\u3002\u4e3b\u52a8\u53d1\u73b0\u5e76\u63d0\u51fa\u95ee\u9898\u7136\u540e\u79ef\u6781\u7684\u5bfb\u627e\u7b54\u6848\uff0c\u6700\u540e\u7ed9\u51fa\u5408\u7406\u7684\u7b54\u6848\uff0c\u6536\u83b7\u6210\u5c31\u611f\u5e76\u63a8\u52a8\u81ea\u5df1\u7ee7\u7eed\u63d0\u51fa\u65b0\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u6b63\u53cd\u9988\u3002\u4ece\u81ea\u5df1\u80fd\u591f\u56de\u7b54\u7684\u5c0f\u95ee\u9898\u5f00\u59cb\uff0c\u4e0d\u65ad\u7684\u5faa\u73af\u5f80\u590d\uff0c\u96ea\u7403\u4f1a\u8d8a\u6eda\u8d8a\u5927\uff0c\u65f6\u95f4\u6b63\u7ad9\u5728\u4f60\u8fd9\u8fb9\u3002"},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","formattedDate":"2021\u5e748\u670826\u65e5","tags":[{"label":"facebook","permalink":"/blog/tags/facebook"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.405,"truncated":false,"authors":[{"name":"shaozongfan","title":"shaozongfan\'s life manager","url":"https://github.com/shaozongfan","imageURL":"https://github.com/longyuwlz.png","key":"shaozongfan"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["shaozongfan"],"tags":["facebook","hello","docusaurus"]},"prevItem":{"title":"linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684","permalink":"/blog/linux-kernel/linux-\u5185\u6838\u6a21\u5757\u4e2d\u5f15\u7528\u7b26\u53f7\u662f\u5982\u4f55\u94fe\u63a5\u7684"},"nextItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/blog/mdx-blog-post","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","formattedDate":"2021\u5e748\u67081\u65e5","tags":[{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.175,"truncated":false,"authors":[{"name":"shaozongfan","title":"shaozongfan\'s life manager","url":"https://github.com/shaozongfan","imageURL":"https://github.com/longyuwlz.png","key":"shaozongfan"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["shaozongfan"],"tags":["docusaurus"]},"prevItem":{"title":"Welcome","permalink":"/blog/welcome"},"nextItem":{"title":"shaozongfan Blog Post","permalink":"/blog/shaozongfan-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n\\n:::"},{"id":"shaozongfan-blog-post","metadata":{"permalink":"/blog/shaozongfan-blog-post","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"shaozongfan Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","formattedDate":"2019\u5e745\u670829\u65e5","tags":[{"label":"hello","permalink":"/blog/tags/hello"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":2.05,"truncated":true,"authors":[{"name":"shaozongfan","title":"shaozongfan\'s life manager","url":"https://github.com/shaozongfan","imageURL":"https://github.com/longyuwlz.png","key":"shaozongfan"}],"frontMatter":{"slug":"shaozongfan-blog-post","title":"shaozongfan Blog Post","authors":"shaozongfan","tags":["hello","docusaurus"]},"prevItem":{"title":"MDX Blog Post","permalink":"/blog/mdx-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!--truncate--\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/blog/first-blog-post","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/2019-05-28-first-blog-post.md","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","date":"2019-05-28T00:00:00.000Z","formattedDate":"2019\u5e745\u670828\u65e5","tags":[{"label":"hola","permalink":"/blog/tags/hola"},{"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":0.12,"truncated":false,"authors":[{"name":"shaozongfan","title":"Docusaurus Core Team","url":"https://github.com/shaozongfan","image_url":"https://github.com/shaozongfan.png","imageURL":"https://github.com/shaozongfan.png"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":{"name":"shaozongfan","title":"Docusaurus Core Team","url":"https://github.com/shaozongfan","image_url":"https://github.com/shaozongfan.png","imageURL":"https://github.com/shaozongfan.png"},"tags":["hola","docusaurus"]},"prevItem":{"title":"shaozongfan Blog Post","permalink":"/blog/shaozongfan-blog-post"}},"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}')}}]);