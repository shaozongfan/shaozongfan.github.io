"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[60422],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return s}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=u(t),s=o,m=d["".concat(i,".").concat(s)]||d[s]||_[s]||a;return t?r.createElement(m,c(c({ref:n},l),{},{components:t})):r.createElement(m,c({ref:n},l))}));function s(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=d;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,c[1]=p;for(var u=2;u<a;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},30678:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return i},default:function(){return s},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return _}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),c=["components"],p={},i=void 0,u={permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API",editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API.md",source:"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API.md",title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API",description:"\u9664\u4e86\u524d\u6587\u4ecb\u7ecd\u7684ofmachineiscompatible\uff08\uff09\u3001ofdeviceiscompatible\uff08\uff09\u7b49\u5e38\u7528\u51fd\u6570\u4ee5\u5916\uff0c\u5728Linux\u7684BSP\u548c\u9a71\u52a8\u4ee3\u7801\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9bLinux\u4e2d\u5176\u4ed6\u8bbe\u5907\u6811\u7684API\uff0c\u8fd9\u4e9bAPI\u901a\u5e38\u88ab\u51a0\u4ee5of_\u524d\u7f00\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u4ee3\u7801\u4f4d\u4e8e\u5185\u6838\u7684drivers/of\u76ee\u5f55\u4e0b\u3002",date:"2025-09-15T14:44:15.113Z",formattedDate:"2025\u5e749\u670815\u65e5",tags:[],readingTime:5.395,truncated:!1,authors:[],frontMatter:{},prevItem:{title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784"},nextItem:{title:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA",permalink:"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA"}},l={authorsImageUrls:[]},_=[],d={toc:_};function s(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u9664\u4e86\u524d\u6587\u4ecb\u7ecd\u7684of",(0,a.kt)("em",{parentName:"p"},"machine_is_compatible\uff08\uff09\u3001of_device_is_compatible\uff08\uff09\u7b49\u5e38\u7528\u51fd\u6570\u4ee5\u5916\uff0c\u5728Linux\u7684BSP\u548c\u9a71\u52a8\u4ee3\u7801\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9bLinux\u4e2d\u5176\u4ed6\u8bbe\u5907\u6811\u7684API\uff0c\u8fd9\u4e9bAPI\u901a\u5e38\u88ab\u51a0\u4ee5of"),"\u524d\u7f00\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u4ee3\u7801\u4f4d\u4e8e\u5185\u6838\u7684drivers/of\u76ee\u5f55\u4e0b\u3002"),(0,a.kt)("p",null,"\u8fd9\u4e9b\u5e38\u7528\u7684API\u5305\u62ec\u4e0b\u9762\u5185\u5bb9\u3002"),(0,a.kt)("h1",{id:"1\u5bfb\u627e\u8282\u70b9"},"1.\u5bfb\u627e\u8282\u70b9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"struct device_node *of_find_compatible_node(struct device_node *from,\nconst char *type, const char *compatible);\n")),(0,a.kt)("p",null,"\u6839\u636e\u517c\u5bb9\u5c5e\u6027\uff0c\u83b7\u5f97\u8bbe\u5907\u8282\u70b9\u3002\u904d\u5386\u8bbe\u5907\u6811\u4e2d\u7684\u8bbe\u5907\u8282\u70b9\uff0c\u770b\u770b\u54ea\u4e2a\u8282\u70b9\u7684\u7c7b\u578b\u3001\u517c\u5bb9\u5c5e\u6027\u4e0e\u672c\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u5339\u914d\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cfrom\u3001type\u4e3aNULL\uff0c\u5219\u8868\u793a\u904d\u5386\u4e86\u6240\u6709\u8282\u70b9\u3002"),(0,a.kt)("h1",{id:"2\u8bfb\u53d6\u5c5e\u6027"},"2.\u8bfb\u53d6\u5c5e\u6027"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int of_property_read_u8_array(const struct device_node *np,\nconst char *propname, u8 *out_values, size_t sz);\nint of_property_read_u16_array(const struct device_node *np,\nconst char *propname, u16 *out_values, size_t sz);\nint of_property_read_u32_array(const struct device_node *np,\nconst char *propname, u32 *out_values, size_t sz);\nint of_property_read_u64(const struct device_node *np, const char\n*propname, u64 *out_value);\n")),(0,a.kt)("p",null,"\u8bfb\u53d6\u8bbe\u5907\u8282\u70b9np\u7684\u5c5e\u6027\u540d\uff0c\u4e3apropname\uff0c\u5c5e\u6027\u7c7b\u578b\u4e3a8\u300116\u300132\u300164\u4f4d\u6574\u578b\u6570\u7ec4\u3002\u5bf9\u4e8e32\u4f4d\u5904\u7406\u5668\u6765\u8bb2\uff0c\u6700\u5e38\u7528\u7684\u662fof_property_read_u32_array\uff08\uff09\u3002"),(0,a.kt)("p",null,'\u5982\u5728arch/arm/mm/cache-l2x0.c\u4e2d\uff0c\u901a\u8fc7\u5982\u4e0b\u8bed\u53e5\u53ef\u8bfb\u53d6L2cache\u7684"arm\uff0cdata-latency"\u5c5e\u6027\uff1a'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'of_property_read_u32_array(np, "arm,data-latency",\ndata, ARRAY_SIZE(data));\n')),(0,a.kt)("p",null,'\u5728arch/arm/boot/dts/vexpress-v2p-ca9.dts\u4e2d\uff0c\u5bf9\u5e94\u7684\u542b\u6709"arm\uff0cdata-latency"\u5c5e\u6027\u7684L2cache\u8282\u70b9\u5982\u4e0b\uff1a'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'L2: cache-controller@1e00a000 {\ncompatible = "arm,pl310-cache";\nreg = <0x1e00a000 0x1000>;\ninterrupts = <0 43 4>;\ncache-level = <2>;\narm,data-latency = <1 1 1>;\narm,tag-latency = <1 1 1>;\n}\n')),(0,a.kt)("p",null,"\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6574\u578b\u5c5e\u6027\u7684\u957f\u5ea6\u53ef\u80fd\u4e3a1\uff0c\u4e8e\u662f\u5185\u6838\u4e3a\u4e86\u65b9\u4fbf\u8c03\u7528\u8005\uff0c\u53c8\u5728\u4e0a\u8ff0API\u7684\u57fa\u7840\u4e0a\u5c01\u88c5\u51fa\u4e86\u66f4\u52a0\u7b80\u5355\u7684\u8bfb\u5355\u4e00\u6574\u5f62\u5c5e\u6027\u7684API\uff0c\u5b83\u4eec\u4e3aint of_property_read_u8\uff08\uff09\u3001of_property_read_u16\uff08\uff09\u7b49\uff0c\u5b9e\u73b0\u4e8einclude/linux/of.h\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535518.19\u6240\u793a\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535518.19\u3000\u8bbe\u5907\u6811\u4e2d\u6574\u578b\u5c5e\u6027\u7684\u8bfb\u53d6API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," 1static inline int of_property_read_u8(const struct device_node *np,\n 2                                        const char *propname,\n 3                                        u8 *out_value)\n 4{\n 5         return of_property_read_u8_array(np, propname, out_value, 1);\n 6}\n 7\n 8static inline int of_property_read_u16(const struct device_node *np,\n 9                                        const char *propname,\n10                                        u16 *out_value)\n11{\n12         return of_property_read_u16_array(np, propname, out_value, 1);\n13}\n14\n15static inline int of_property_read_u32(const struct device_node *np,\n16                                        const char *propname,\n17                                        u32 *out_value)\n18{\n19         return of_property_read_u32_array(np, propname, out_value, 1);\n20}\n")),(0,a.kt)("p",null,"\u9664\u4e86\u6574\u578b\u5c5e\u6027\u5916\uff0c\u5b57\u7b26\u4e32\u5c5e\u6027\u4e5f\u6bd4\u8f83\u5e38\u7528\uff0c\u5176\u5bf9\u5e94\u7684API\u5305\u62ec\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"int of_property_read_string(struct device_node *np, const char\n*propname,const char **out_string);\nint of_property_read_string_index(struct device_node *np, const char\n       *propname,int index, const char **output);\n")),(0,a.kt)("p",null,'\u524d\u8005\u8bfb\u53d6\u5b57\u7b26\u4e32\u5c5e\u6027\uff0c\u540e\u8005\u8bfb\u53d6\u5b57\u7b26\u4e32\u6570\u7ec4\u5c5e\u6027\u4e2d\u7684\u7b2cindex\u4e2a\u5b57\u7b26\u4e32\u3002\u5982drivers/clk/clk.c\u4e2d\u7684of_clk_get_parent_name\uff08\uff09\u51fd\u6570\u5c31\u901a\u8fc7of_property_read_string_index\uff08\uff09\u904d\u5386clkspec\u8282\u70b9\u7684\u6240\u6709"clock-output-names"\u5b57\u7b26\u4e32\u6570\u7ec4\u5c5e\u6027\u3002'),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535518.20\u3000\u5728\u9a71\u52a8\u4e2d\u8bfb\u53d6\u7b2cindex\u4e2a\u5b57\u7b26\u4e32\u7684\u4f8b\u5b50"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' 1const char *of_clk_get_parent_name(struct device_node *np, int index)\n 2{\n 3          struct of_phandle_args clkspec;\n 4          const char *clk_name;\n 5          int rc;\n 6\n 7          if (index < 0)\n 8                  return NULL;\n 9\n10          rc = of_parse_phandle_with_args(np, "clocks", "#clock-cells", index,\n11                                         &clkspec);\n12          if (rc)\n13                  return NULL;\n14\n15          if (of_property_read_string_index(clkspec.np, "clock-output-names",\n16                                    clkspec.args_count  clkspec.args[0] : 0,\n17                                            &clk_name) < 0)\n18                  clk_name = clkspec.np->name;\n19\n20          of_node_put(clkspec.np);\n21          return clk_name;\n22}\n23EXPORT_SYMBOL_GPL(of_clk_get_parent_name);\n')),(0,a.kt)("p",null,"\u9664\u6574\u578b\u3001\u5b57\u7b26\u4e32\u4ee5\u5916\u7684\u6700\u5e38\u7528\u5c5e\u6027\u7c7b\u578b\u5c31\u662f\u5e03\u5c14\u578b\uff0c\u5176\u5bf9\u5e94\u7684API\u5f88\u7b80\u5355\uff0c\u5177\u4f53\u5982\u4e0b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static inline bool of_property_read_bool(const struct device_node *np,\nconst char *propname);\n")),(0,a.kt)("p",null,"\u5982\u679c\u8bbe\u5907\u8282\u70b9np\u542b\u6709propname\u5c5e\u6027\uff0c\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002\u4e00\u822c\u7528\u4e8e\u68c0\u67e5\u7a7a\u5c5e\u6027\u662f\u5426\u5b58\u5728\u3002"),(0,a.kt)("h1",{id:"3\u5185\u5b58\u6620\u5c04"},"3.\u5185\u5b58\u6620\u5c04"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"void __iomem *of_iomap(struct device_node *node, int index);\n")),(0,a.kt)("p",null,"\u4e0a\u8ff0API\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8bbe\u5907\u8282\u70b9\u8fdb\u884c\u8bbe\u5907\u5185\u5b58\u533a\u95f4\u7684ioremap\uff08\uff09\uff0cindex\u662f\u5185\u5b58\u6bb5\u7684\u7d22\u5f15\u3002\u82e5\u8bbe\u5907\u8282\u70b9\u7684reg\u5c5e\u6027\u6709\u591a\u6bb5\uff0c\u53ef\u901a\u8fc7index\u6807\u793a\u8981ioremap\uff08\uff09\u7684\u662f\u54ea\u4e00\u6bb5\uff0c\u5728\u53ea\u67091\u6bb5\u7684\u60c5\u51b5\uff0cindex\u4e3a0\u3002\u91c7\u7528\u8bbe\u5907\u6811\u540e\uff0c\u4e00\u4e9b\u8bbe\u5907\u9a71\u52a8\u901a\u8fc7of_iomap\uff08\uff09\u800c\u4e0d\u518d\u901a\u8fc7\u4f20\u7edf\u7684ioremap\uff08\uff09\u8fdb\u884c\u6620\u5c04\uff0c\u5f53\u7136\uff0c\u4f20\u7edf\u7684ioremap\uff08\uff09\u7684\u7528\u6237\u4e5f\u4e0d\u5c11\u3002"),(0,a.kt)("p",null,"\u4e0a\u8ff0API\u901a\u8fc7\u8bbe\u5907\u8282\u70b9\u83b7\u53d6\u4e0e\u5b83\u5bf9\u5e94\u7684\u5185\u5b58\u8d44\u6e90\u7684resource\u7ed3\u6784\u4f53\u3002\u5176\u672c\u8d28\u662f\u5206\u6790reg\u5c5e\u6027\u4ee5\u83b7\u53d6\u5185\u5b58\u57fa\u5730\u5740\u3001\u5927\u5c0f\u7b49\u4fe1\u606f\u5e76\u586b\u5145\u5230struct resource*r\u53c2\u6570\u6307\u5411\u7684\u7ed3\u6784\u4f53\u4e2d\u3002"),(0,a.kt)("h1",{id:"4\u89e3\u6790\u4e2d\u65ad"},"4.\u89e3\u6790\u4e2d\u65ad"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unsigned int irq_of_parse_and_map(struct device_node *dev, int index);\n")),(0,a.kt)("p",null,"\u901a\u8fc7\u8bbe\u5907\u6811\u83b7\u5f97\u8bbe\u5907\u7684\u4e2d\u65ad\u53f7\uff0c\u5b9e\u9645\u4e0a\u662f\u4ece.dts\u4e2d\u7684interrupts\u5c5e\u6027\u91cc\u89e3\u6790\u51fa\u4e2d\u65ad\u53f7\u3002\u82e5\u8bbe\u5907\u4f7f\u7528\u4e86\u591a\u4e2a\u4e2d\u65ad\uff0cindex\u6307\u5b9a\u4e2d\u65ad\u7684\u7d22\u5f15\u53f7\u3002"),(0,a.kt)("h1",{id:"5\u83b7\u53d6\u4e0e\u8282\u70b9\u5bf9\u5e94\u7684platform_device"},"5.\u83b7\u53d6\u4e0e\u8282\u70b9\u5bf9\u5e94\u7684platform_device"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"struct platform_device *of_find_device_by_node(struct device_node *np);\n")),(0,a.kt)("p",null,"\u5728\u53ef\u4ee5\u62ff\u5230device_node\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60f3\u53cd\u5411\u83b7\u53d6\u5bf9\u5e94\u7684platform_device\uff0c\u53ef\u4f7f\u7528\u4e0a\u8ff0API\u3002"),(0,a.kt)("p",null,"\u5f53\u7136\uff0c\u5728\u5df2\u77e5platform_device\u7684\u60c5\u51b5\u4e0b\uff0c\u60f3\u83b7\u53d6device_node\u5219\u6613\u5982\u53cd\u638c\uff0c\u4f8b\u5982\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"static int sirfsoc_dma_probe(struct platform_device *op)\n{\nstruct device_node *dn = op->dev.of_node;\n        \u2026\n}\n")))}s.isMDXComponent=!0}}]);