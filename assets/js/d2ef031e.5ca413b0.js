"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[2443],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(67294);function u(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function _(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){u(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,u=function(e,n){if(null==e)return{};var t,r,u={},p=Object.keys(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||(u[t]=e[t]);return u}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)t=p[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(u[t]=e[t])}return u}var s=r.createContext({}),o=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):_(_({},n),e)),t},d=function(e){var n=o(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,u=e.mdxType,p=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=o(t),m=u,a=c["".concat(s,".").concat(m)]||c[m]||l[m]||p;return t?r.createElement(a,_(_({ref:n},d),{},{components:t})):r.createElement(a,_({ref:n},d))}));function m(e,n){var t=arguments,u=n&&n.mdxType;if("string"==typeof e||u){var p=t.length,_=new Array(p);_[0]=c;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:u,_[1]=i;for(var o=2;o<p;o++)_[o]=t[o];return r.createElement.apply(null,_)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},42833:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return l}});var r=t(87462),u=t(63366),p=(t(67294),t(3905)),_=["components"],i={},s=void 0,o={unversionedId:"linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM",id:"linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM",title:"19.10\u3000\u8fd0\u884c\u65f6\u7684PM",description:"\u5728\u524d\u6587\u7ed9\u51fa\u7684devpmops\u7ed3\u6784\u4f53\u4e2d\uff0c\u67093\u4e2a\u4ee5runtime\u5f00\u5934\u7684\u6210\u5458\u51fd\u6570\uff1aruntimesuspend\uff08\uff09\u3001runtimeresume\uff08\uff09\u548cruntime_idle\uff08\uff09\uff0c\u5b83\u4eec\u8f85\u52a9\u8bbe\u5907\u5b8c\u6210\u8fd0\u884c\u65f6\u7684\u7535\u6e90\u7ba1\u7406\uff1a",source:"@site/docs/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM.md",sourceDirName:"linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3",slug:"/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM",permalink:"/docs/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM",draft:!1,editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/docs/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"18.5\u3000\u603b\u7ed3",permalink:"/docs/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3"},next:{title:"19.11\u3000\u603b\u7ed3",permalink:"/docs/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3"}},d={},l=[],c={toc:l};function m(e){var n=e.components,t=(0,u.Z)(e,_);return(0,p.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"\u5728\u524d\u6587\u7ed9\u51fa\u7684dev_pm_ops\u7ed3\u6784\u4f53\u4e2d\uff0c\u67093\u4e2a\u4ee5runtime\u5f00\u5934\u7684\u6210\u5458\u51fd\u6570\uff1aruntime_suspend\uff08\uff09\u3001runtime_resume\uff08\uff09\u548cruntime_idle\uff08\uff09\uff0c\u5b83\u4eec\u8f85\u52a9\u8bbe\u5907\u5b8c\u6210\u8fd0\u884c\u65f6\u7684\u7535\u6e90\u7ba1\u7406\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"struct dev_pm_ops {\n       ...\n       int (*runtime_suspend)(struct device *dev);\n       int (*runtime_resume)(struct device *dev);\n       int (*runtime_idle)(struct device *dev);\n       ...\n};\n")),(0,p.kt)("p",null,"\u8fd0\u884c\u65f6\u7684PM\u4e0e\u524d\u6587\u63cf\u8ff0\u7684\u7cfb\u7edf\u7ea7\u6302\u8d77\u5230RAM\u65f6\u5019\u7684PM\u4e0d\u592a\u4e00\u6837\uff0c\u5b83\u662f\u9488\u5bf9\u5355\u4e2a\u8bbe\u5907\uff0c\u6307\u7cfb\u7edf\u5728\u975e\u7761\u7720\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u67d0\u4e2a\u8bbe\u5907\u5728\u7a7a\u95f2\u65f6\u53ef\u4ee5\u8fdb\u5165\u8fd0\u884c\u65f6\u6302\u8d77\u72b6\u6001\uff0c\u800c\u5728\u4e0d\u662f\u7a7a\u95f2\u65f6\u6267\u884c\u8fd0\u884c\u65f6\u6062\u590d\u4f7f\u5f97\u8bbe\u5907\u8fdb\u5165\u6b63\u5e38\u5de5\u4f5c\u72b6\u6001\uff0c\u5982\u6b64\uff0c\u8fd9\u4e2a\u8bbe\u5907\u5728\u8fd0\u884c\u65f6\u4f1a\u7701\u7535\u3002Linux\u8fd0\u884c\u65f6PM\u6700\u65e9\u662f\u5728Linux2.6.32\u5185\u6838\u4e2d\u88ab\u5408\u5e76\u7684\u3002"),(0,p.kt)("p",null,"Linux\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217API\uff0c\u4ee5\u4fbf\u4e8e\u8bbe\u5907\u53ef\u4ee5\u58f0\u660e\u81ea\u5df1\u7684\u8fd0\u884c\u65f6PM\u72b6\u6001\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_runtime_suspend(struct device *dev);\n")),(0,p.kt)("p",null,"\u5f15\u53d1\u8bbe\u5907\u7684\u6302\u8d77\uff0c\u6267\u884c\u76f8\u5173\u7684runtime_suspend\uff08\uff09\u51fd\u6570\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_schedule_suspend(struct device *dev, unsigned int delay);\n")),(0,p.kt)("p",null,"\u201c\u8c03\u5ea6\u201d\u8bbe\u5907\u7684\u6302\u8d77\uff0c\u5ef6\u8fdfdelay\u6beb\u79d2\u540e\u5c06\u6302\u8d77\u5de5\u4f5c\u6302\u5165pm_wq\u7b49\u5f85\u961f\u5217\uff0c\u7ed3\u679c\u7b49\u4ef7\u4e8edelay\u6beb\u79d2\u540e\u6267\u884c\u76f8\u5173\u7684runtime_suspend\uff08\uff09\u51fd\u6570\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_request_autosuspend(struct device *dev);\n")),(0,p.kt)("p",null,"\u201c\u8c03\u5ea6\u201d\u8bbe\u5907\u7684\u6302\u8d77\uff0c\u81ea\u52a8\u6302\u8d77\u7684\u5ef6\u8fdf\u5230\u540e\uff0c\u6302\u8d77\u7684\u5de5\u4f5c\u9879\u76ee\u88ab\u81ea\u52a8\u653e\u5165\u961f\u5217\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_runtime_resume(struct device *dev);\n")),(0,p.kt)("p",null,"\u5f15\u53d1\u8bbe\u5907\u7684\u6062\u590d\uff0c\u6267\u884c\u76f8\u5173\u7684runtime_resume\uff08\uff09\u51fd\u6570\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_request_resume(struct device *dev);\n")),(0,p.kt)("p",null,"\u53d1\u8d77\u4e00\u4e2a\u8bbe\u5907\u6062\u590d\u7684\u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u4e5f\u662f\u6302\u5165pm_wq\u7b49\u5f85\u961f\u5217\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_runtime_idle(struct device *dev);\n")),(0,p.kt)("p",null,"\u5f15\u53d1\u8bbe\u5907\u7684\u7a7a\u95f2\uff0c\u6267\u884c\u76f8\u5173\u7684runtime_idle\uff08\uff09\u51fd\u6570\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_request_idle(struct device *dev);\n")),(0,p.kt)("p",null,"\u53d1\u8d77\u4e00\u4e2a\u8bbe\u5907\u7a7a\u95f2\u7684\u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u4e5f\u662f\u6302\u5165pm_wq\u7b49\u5f85\u961f\u5217\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"void pm_runtime_enable(struct device *dev);\n")),(0,p.kt)("p",null,"\u4f7f\u80fd\u8bbe\u5907\u7684\u8fd0\u884c\u65f6PM\u652f\u6301\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_runtime_disable(struct device *dev);\n")),(0,p.kt)("p",null,"\u7981\u6b62\u8bbe\u5907\u7684\u8fd0\u884c\u65f6PM\u652f\u6301\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_runtime_get(struct device *dev);\nint pm_runtime_get_sync(struct device *dev);\n")),(0,p.kt)("p",null,"\u589e\u52a0\u8bbe\u5907\u7684\u5f15\u7528\u8ba1\u6570\uff08usage_count\uff09\uff0c\u8fd9\u7c7b\u4f3c\u4e8eclk_get\uff08\uff09\uff0c\u4f1a\u95f4\u63a5\u5f15\u53d1\u8bbe\u5907\u7684runtime_resume\uff08\uff09\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"int pm_runtime_put(struct device *dev);\nint pm_runtime_put_sync(struct device *dev)\n")),(0,p.kt)("p",null,"\u51cf\u5c0f\u8bbe\u5907\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u8fd9\u7c7b\u4f3c\u4e8eclk_put\uff08\uff09\uff0c\u4f1a\u95f4\u63a5\u5f15\u53d1\u8bbe\u5907\u7684runtime_idle\uff08\uff09\u3002"),(0,p.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7b80\u5355\u5730\u7406\u89e3Linux\u8fd0\u884c\u65f6PM\u7684\u673a\u5236\uff0c\u6bcf\u4e2a\u8bbe\u5907\uff08\u603b\u7ebf\u7684\u63a7\u5236\u5668\u81ea\u8eab\u4e5f\u5c5e\u4e8e\u4e00\u4e2a\u8bbe\u5907\uff09\u90fd\u6709\u5f15\u7528\u8ba1\u6570usage_count\u548c\u6d3b\u8dc3\u5b50\u8bbe\u5907\uff08Active Children\uff0c\u5b50\u8bbe\u5907\u7684\u610f\u601d\u5c31\u662f\u8be5\u7ea7\u603b\u7ebf\u4e0a\u6302\u7684\u8bbe\u5907\uff09\u8ba1\u6570child_count\uff0c\u5f53\u4e24\u4e2a\u8ba1\u6570\u90fd\u4e3a0\u7684\u65f6\u5019\uff0c\u5c31\u8fdb\u5165\u7a7a\u95f2\u72b6\u6001\uff0c\u8c03\u7528pm_request_idle\uff08dev\uff09\u3002\u5f53\u8bbe\u5907\u8fdb\u5165\u7a7a\u95f2\u72b6\u6001\uff0c\u4e0epm_request_idle\uff08dev\uff09\u5bf9\u5e94\u7684PM\u6838\u5e76\u4e0d\u4e00\u5b9a\u76f4\u63a5\u8c03\u7528\u8bbe\u5907\u9a71\u52a8\u7684runtime_suspend\uff08\uff09\uff0c\u5b83\u5b9e\u9645\u4e0a\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u8c03\u7528\u4e0e\u8be5\u8bbe\u5907\u5bf9\u5e94\u7684bus_type\u7684runtime_idle\uff08\uff09\u3002\u4e0b\u9762\u662f\u5185\u6838\u7684\u4ee3\u7801\u903b\u8f91\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"static pm_callback_t __rpm_get_callback(struct device *dev, size_t cb_offset)\n{\npm_callback_t cb;\nconst struct dev_pm_ops *ops;\nif (dev->pm_domain)\nops = &dev->pm_domain->ops;\nelse if (dev->type && dev->type->pm)\nops = dev->type->pm;\nelse if (dev->class && dev->class->pm)\nops = dev->class->pm;\nelse if (dev->bus && dev->bus->pm)\nops = dev->bus->pm;\nelse\nops = NULL;\nif (ops)\ncb = *(pm_callback_t *)((void *)ops + cb_offset);\nelse\ncb = NULL;\nif (!cb && dev->driver && dev->driver->pm)\ncb = *(pm_callback_t *)((void *)dev->driver->pm + cb_offset);\nreturn cb;\n}\n")),(0,p.kt)("p",null,"\u636e\u6b64\u53ef\u77e5\uff0cbus_type\u7ea7\u7684\u56de\u8c03\u51fd\u6570\u5b9e\u9645\u4e0a\u53ef\u4ee5\u88abpm_domain\u3001type\u3001class\u8986\u76d6\u6389\uff0c\u8fd9\u4e9b\u90fd\u7edf\u79f0\u4e3a\u5b50\u7cfb\u7edf\u3002bus_type\u7b49\u5b50\u7cfb\u7edf\u7ea7\u522b\u7684runtime_idle\uff08\uff09\u884c\u4e3a\u5b8c\u5168\u7531\u76f8\u5e94\u7684\u603b\u7ebf\u7c7b\u578b\u3001\u8bbe\u5907\u5206\u7c7b\u548cpm_domain\u56e0\u7d20\u51b3\u5b9a\uff0c\u4f46\u662f\u4e00\u822c\u7684\u884c\u4e3a\u662f\u5b50\u7cfb\u7edf\u7ea7\u522b\u7684runtime_idle\uff08\uff09\u4f1a\u8c03\u5ea6\u8bbe\u5907\u9a71\u52a8\u7684runtime_suspend\uff08\uff09\u3002"),(0,p.kt)("p",null,"\u5728\u5177\u4f53\u7684\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u4e00\u822c\u7684\u7528\u6cd5\u5219\u662f\u5728\u8bbe\u5907\u9a71\u52a8probe\uff08\uff09\u65f6\u8fd0\u884cpm_runtime_enable\uff08\uff09\u4f7f\u80fd\u8fd0\u884c\u65f6PM\u652f\u6301\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u52a8\u6001\u5730\u6267\u884c\u201cpm_runtime_get_xxx\uff08\uff09->\u505a\u5de5\u4f5c->pm_runtime_put_xxx\uff08\uff09\u201d\u7684\u5e8f\u5217\u3002\u5982\u4ee3\u7801\u6e05\u535519.19\u4e2d\u7684drivers/watchdog/omap_wdt.c OMAP\u7684\u770b\u95e8\u72d7\u9a71\u52a8\u3002\u5728omap_wdt_start\uff08\uff09\u4e2d\u542f\u52a8\u4e86pm_runtime_get_sync\uff08\uff09\uff0c\u800c\u5728omap_wdt_stop\uff08\uff09\u4e2d\u8c03\u7528\u4e86pm_runtime_put_sync\uff08\uff09\u3002"),(0,p.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.19\u3000\u8fd0\u884c\u65f6PM\u7684pm_runtime_get\uff08\uff09\u548cpm_runtime_put\uff08\uff09"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"}," 1static int omap_wdt_start(struct watchdog_device *wdog)\n 2{\n 3      struct omap_wdt_dev *wdev = watchdog_get_drvdata(wdog);\n 4      void __iomem *base = wdev->base;\n 5\n 6      mutex_lock(&wdev->lock);\n 7\n 8      wdev->omap_wdt_users = true;\n 9\n10      pm_runtime_get_sync(wdev->dev);\n11\n12      /* initialize prescaler */\n13      while (readl_relaxed(base + OMAP_WATCHDOG_WPS) & 0x01)\n14            cpu_relax();\n15      ...\n16      mutex_unlock(&wdev->lock);\n17\n18      return 0;\n19}\n20static int omap_wdt_stop(struct watchdog_device *wdog)\n21{\n22      struct omap_wdt_dev *wdev = watchdog_get_drvdata(wdog);\n23\n24      mutex_lock(&wdev->lock);\n25      omap_wdt_disable(wdev);\n26      pm_runtime_put_sync(wdev->dev);\n27      wdev->omap_wdt_users = false;\n28      mutex_unlock(&wdev->lock);\n29      return 0;\n30}\n31\n32static const struct watchdog_ops omap_wdt_ops = {\n33      .owner          = THIS_MODULE,\n34      .start          = omap_wdt_start,\n35      .stop           = omap_wdt_stop,\n36      .ping           = omap_wdt_ping,\n37      .set_timeout    = omap_wdt_set_timeout,\n38};\n")),(0,p.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u7b2c10\u884c\u7684pm_runtime_get_sync\uff08wdev->dev\uff09\u544a\u8bc9\u5185\u6838\u8981\u5f00\u59cb\u7528\u770b\u95e8\u72d7\u8fd9\u4e2a\u8bbe\u5907\u4e86\uff0c\u5982\u679c\u770b\u95e8\u72d7\u8bbe\u5907\u5df2\u7ecf\u8fdb\u5165\u7701\u7535\u6a21\u5f0f\uff08\u4e4b\u524d\u5f15\u7528\u8ba1\u6570\u4e3a0\u4e14\u6267\u884c\u4e86\u8fd0\u884c\u65f6\u6302\u8d77\uff09\uff0c\u4f1a\u5bfc\u81f4\u8be5\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u6062\u590d\uff1b\u7b2c26\u884c\u544a\u8bc9\u5185\u6838\u4e0d\u7528\u8fd9\u4e2a\u8bbe\u5907\u4e86\uff0c\u5982\u679c\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a0\u4e14\u6d3b\u8dc3\u5b50\u8bbe\u5907\u4e3a0\uff0c\u5219\u5bfc\u81f4\u8be5\u770b\u95e8\u72d7\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u6302\u8d77\u3002"),(0,p.kt)("p",null,"\u4e0a\u8ff0\u4ee3\u7801\u7b2c10\u884c\u7684pm_runtime_get_sync\uff08wdev->dev\uff09\u544a\u8bc9\u5185\u6838\u8981\u5f00\u59cb\u7528\u770b\u95e8\u72d7\u8fd9\u4e2a\u8bbe\u5907\u4e86\uff0c\u5982\u679c\u770b\u95e8\u72d7\u8bbe\u5907\u5df2\u7ecf\u8fdb\u5165\u7701\u7535\u6a21\u5f0f\uff08\u4e4b\u524d\u5f15\u7528\u8ba1\u6570\u4e3a0\u4e14\u6267\u884c\u4e86\u8fd0\u884c\u65f6\u6302\u8d77\uff09\uff0c\u4f1a\u5bfc\u81f4\u8be5\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u6062\u590d\uff1b\u7b2c26\u884c\u544a\u8bc9\u5185\u6838\u4e0d\u7528\u8fd9\u4e2a\u8bbe\u5907\u4e86\uff0c\u5982\u679c\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a0\u4e14\u6d3b\u8dc3\u5b50\u8bbe\u5907\u4e3a0\uff0c\u5219\u5bfc\u81f4\u8be5\u770b\u95e8\u72d7\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u6302\u8d77\u3002"),(0,p.kt)("p",null,"\u5728\u6267\u884c\u64cd\u4f5c\u7684\u65f6\u5019\u58f0\u660epm_runtime_get\uff08\uff09\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u6267\u884cpm_runtime_mark_last_busy\uff08\uff09\u548cpm_runtime_put_autosuspend\uff08\uff09\uff0c\u4e00\u65e6\u81ea\u52a8\u6302\u52a8\u7684\u5ef6\u65f6\u5230\u671f\u4e14\u8bbe\u5907\u7684\u4f7f\u7528\u8ba1\u6570\u4e3a0\uff0c\u5219\u5f15\u53d1\u76f8\u5173runtime_suspend\uff08\uff09\u5165\u53e3\u51fd\u6570\u7684\u8c03\u7528\u3002\u4e00\u4e2a\u5178\u578b\u7528\u6cd5\u5982\u4ee3\u7801\u6e05\u535519.20\u6240\u793a\u3002"),(0,p.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.20\u3000\u8fd0\u884c\u65f6PM\u7684\u81ea\u52a8\u6302\u52a8"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"}," 1foo_read_or_write(struct foo_priv *foo, void *data)\n 2{\n 3      lock(&foo->private_lock);\n 4      add_request_to_io_queue(foo, data);\n 5      if (foo->num_pending_requests++ == 0)\n 6             pm_runtime_get(&foo->dev);\n 7      if (!foo->is_suspended)\n 8             foo_process_next_request(foo);\n 9      unlock(&foo->private_lock);\n10}\n11\n12foo_io_completion(struct foo_priv *foo, void *req)\n13{\n14       lock(&foo->private_lock);\n15       if (--foo->num_pending_requests == 0) {\n16              pm_runtime_mark_last_busy(&foo->dev);\n17              pm_runtime_put_autosuspend(&foo->dev);\n18       } else {\n19              foo_process_next_request(foo);\n20       }\n21       unlock(&foo->private_lock);\n22       /* \u5c06\u8bf7\u6c42\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237\n ... */\n23}\n")),(0,p.kt)("p",null,"\u5728\u4e0a\u8ff0\u4ee3\u7801\u7684\u7b2c6\u884c\u5f00\u59cb\u8fdb\u884cI/O\u4f20\u8f93\u4e86\uff0c\u56e0\u6b64\u8fd0\u884c\u4e86pm_runtime_get\uff08\uff09\u4e4b\u540e\uff0c\u5f53I/O\u4f20\u8f93\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u7b2c16~17\u884c\u5411\u5185\u6838\u544a\u77e5\u8be5\u8bbe\u5907\u6700\u540e\u7684\u5fd9\u65f6\u523b\uff0c\u5e76\u6267\u884c\u4e86pm_runtime_put_autosuspend\uff08\uff09\u3002"),(0,p.kt)("p",null,"\u8bbe\u5907\u9a71\u52a8PM\u6210\u5458\u7684runtime_suspend\uff08\uff09\u4e00\u822c\u5b8c\u6210\u4fdd\u5b58\u4e0a\u4e0b\u6587\u3001\u5207\u5230\u7701\u7535\u6a21\u5f0f\u7684\u5de5\u4f5c\uff0c\u800cruntime_resume\uff08\uff09\u4e00\u822c\u5b8c\u6210\u5bf9\u786c\u4ef6\u4e0a\u7535\u3001\u6062\u590d\u4e0a\u4e0b\u6587\u7684\u5de5\u4f5c\u3002\u4ee3\u7801\u6e05\u535519.21\u7ed9\u51fa\u4e86\u4e00\u4e2adrivers/spi/spi-pl022.c\u7684\u6848\u4f8b\u3002"),(0,p.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.21\u3000\u8fd0\u884c\u65f6PM\u7684runtime_suspend/resume\uff08\uff09\u6848\u4f8b"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"}," 1#ifdef CONFIG_PM\n 2static int pl022_runtime_suspend(struct device *dev)\n 3{\n 4      struct pl022 *pl022 = dev_get_drvdata(dev);\n 5\n 6      clk_disable_unprepare(pl022->clk);\n 7      pinctrl_pm_select_idle_state(dev);\n 8\n 9      return 0;\n10}\n11\n12static int pl022_runtime_resume(struct device *dev)\n13{\n14      struct pl022 *pl022 = dev_get_drvdata(dev);\n15\n16      pinctrl_pm_select_default_state(dev);\n17      clk_prepare_enable(pl022->clk);\n18\n19      return 0;\n20}\n21#endif\n22\n23static const struct dev_pm_ops pl022_dev_pm_ops = {\n24      SET_SYSTEM_SLEEP_PM_OPS(pl022_suspend, pl022_resume)\n25      SET_RUNTIME_PM_OPS(pl022_runtime_suspend, pl022_runtime_resume, NULL)\n26};\n")),(0,p.kt)("p",null,"\u7b2c25\u884c\u7684SET_RUNTIME_PM_OPS\uff08\uff09\u662f\u4e00\u4e2a\u5feb\u6377\u5b8f\uff0c\u5b83\u5b8c\u6210\u4e86runtime_suspend\u3001runtime_resume\u7684\u8d4b\u503c\u52a8\u4f5c\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"#define SET_RUNTIME_PM_OPS(suspend_fn, resume_fn, idle_fn) \\\n       .runtime_suspend = suspend_fn, \\\n       .runtime_resume = resume_fn, \\\n       .runtime_idle = idle_fn,\n")),(0,p.kt)("p",null,"\u5176\u5b9e\uff0c\u9664\u4e86SET_RUNTIME_PM_OPS\uff08\uff09\u548c\u524d\u6587\u4ecb\u7ecd\u7684SET_SYSTEM_SLEEP_PM_OPS\uff08\uff09\uff0c\u5728include/linux/pm.h\u4e2d\u8fd8\u5b9a\u4e49\u4e86SIMPLE_DEV_PM_OPS\uff08\uff09\u3001UNIVERSAL_DEV_PM_OPS\uff08\uff09\u7b49\u66f4\u5feb\u6377\u7684\u5b8f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"#define SIMPLE_DEV_PM_OPS(name, suspend_fn, resume_fn) \\\nconst struct dev_pm_ops name = { \\\n       SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \\\n}\n#define UNIVERSAL_DEV_PM_OPS(name, suspend_fn, resume_fn, idle_fn) \\\nconst struct dev_pm_ops name = { \\\n       SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \\\n       SET_RUNTIME_PM_OPS(suspend_fn, resume_fn, idle_fn) \\\n}\n")),(0,p.kt)("p",null,"\u5728\u5185\u6838\u91cc\u5145\u65a5\u7740\u8fd9\u4e9b\u5b8f\u7684\u4f7f\u7528\u4f8b\u5b50\u3002\u6211\u4eec\u4eceUNIVERSAL_DEV_PM_OPS\uff08\uff09\u8fd9\u4e2a\u5b8f\u7684\u5b9a\u4e49\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u9488\u5bf9\u7684\u662f\u6302\u8d77\u5230RAM\u548c\u8fd0\u884c\u65f6PM\u884c\u4e3a\u4e00\u81f4\u7684\u573a\u666f\u3002"))}m.isMDXComponent=!0}}]);