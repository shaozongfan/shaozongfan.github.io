"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[57977],{3905:function(n,i,r){r.d(i,{Zo:function(){return o},kt:function(){return u}});var e=r(67294);function t(n,i,r){return i in n?Object.defineProperty(n,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[i]=r,n}function a(n,i){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);i&&(e=e.filter((function(i){return Object.getOwnPropertyDescriptor(n,i).enumerable}))),r.push.apply(r,e)}return r}function c(n){for(var i=1;i<arguments.length;i++){var r=null!=arguments[i]?arguments[i]:{};i%2?a(Object(r),!0).forEach((function(i){t(n,i,r[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(i){Object.defineProperty(n,i,Object.getOwnPropertyDescriptor(r,i))}))}return n}function _(n,i){if(null==n)return{};var r,e,t=function(n,i){if(null==n)return{};var r,e,t={},a=Object.keys(n);for(e=0;e<a.length;e++)r=a[e],i.indexOf(r)>=0||(t[r]=n[r]);return t}(n,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(e=0;e<a.length;e++)r=a[e],i.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(t[r]=n[r])}return t}var l=e.createContext({}),s=function(n){var i=e.useContext(l),r=i;return n&&(r="function"==typeof n?n(i):c(c({},i),n)),r},o=function(n){var i=s(n.components);return e.createElement(l.Provider,{value:i},n.children)},p={inlineCode:"code",wrapper:function(n){var i=n.children;return e.createElement(e.Fragment,{},i)}},d=e.forwardRef((function(n,i){var r=n.components,t=n.mdxType,a=n.originalType,l=n.parentName,o=_(n,["components","mdxType","originalType","parentName"]),d=s(r),u=t,q=d["".concat(l,".").concat(u)]||d[u]||p[u]||a;return r?e.createElement(q,c(c({ref:i},o),{},{components:r})):e.createElement(q,c({ref:i},o))}));function u(n,i){var r=arguments,t=i&&i.mdxType;if("string"==typeof n||t){var a=r.length,c=new Array(a);c[0]=d;var _={};for(var l in i)hasOwnProperty.call(i,l)&&(_[l]=i[l]);_.originalType=n,_.mdxType="string"==typeof n?n:t,c[1]=_;for(var s=2;s<a;s++)c[s]=r[s];return e.createElement.apply(null,c)}return e.createElement.apply(null,r)}d.displayName="MDXCreateElement"},50295:function(n,i,r){r.r(i),r.d(i,{assets:function(){return o},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return _},metadata:function(){return s},toc:function(){return p}});var e=r(87462),t=r(63366),a=(r(67294),r(3905)),c=["components"],_={},l=void 0,s={unversionedId:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8",id:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8",title:"20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8",description:"\u5728Linux\u5185\u6838\u4e2d\uff0c\u5404\u4e2a\u8bbe\u5907\u9a71\u52a8\u53ef\u4ee5\u7b80\u5355\u5730\u8c03\u7528requestirq\uff08\uff09\u3001enableirq\uff08\uff09\u3001disableirq\uff08\uff09\u3001localirqdisable\uff08\uff09\u3001localirq_enable\uff08\uff09\u7b49\u901a\u7528API\u6765\u5b8c\u6210\u4e2d\u65ad\u7533\u8bf7\u3001\u4f7f\u80fd\u3001\u7981\u6b62\u7b49\u529f\u80fd\u3002\u5728\u5c06Linux\u79fb\u690d\u5230\u65b0\u7684SoC\u65f6\uff0c\u82af\u7247\u4f9b\u5e94\u5546\u9700\u8981\u63d0\u4f9b\u8be5\u90e8\u5206API\u7684\u5e95\u5c42\u652f\u6301\u3002",source:"@site/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3",slug:"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8",draft:!1,editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8"},next:{title:"20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8"}},o={},p=[],d={toc:p};function u(n){var i=n.components,_=(0,t.Z)(n,c);return(0,a.kt)("wrapper",(0,e.Z)({},d,_,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u5728Linux\u5185\u6838\u4e2d\uff0c\u5404\u4e2a\u8bbe\u5907\u9a71\u52a8\u53ef\u4ee5\u7b80\u5355\u5730\u8c03\u7528request_irq\uff08\uff09\u3001enable_irq\uff08\uff09\u3001disable_irq\uff08\uff09\u3001local_irq_disable\uff08\uff09\u3001local_irq_enable\uff08\uff09\u7b49\u901a\u7528API\u6765\u5b8c\u6210\u4e2d\u65ad\u7533\u8bf7\u3001\u4f7f\u80fd\u3001\u7981\u6b62\u7b49\u529f\u80fd\u3002\u5728\u5c06Linux\u79fb\u690d\u5230\u65b0\u7684SoC\u65f6\uff0c\u82af\u7247\u4f9b\u5e94\u5546\u9700\u8981\u63d0\u4f9b\u8be5\u90e8\u5206API\u7684\u5e95\u5c42\u652f\u6301\u3002"),(0,a.kt)("p",null,"local_irq_disable\uff08\uff09\u3001local_irq_enable\uff08\uff09\u7684\u5b9e\u73b0\u4e0e\u5177\u4f53\u4e2d\u65ad\u63a7\u5236\u5668\u65e0\u5173\uff0c\u5bf9\u4e8eARM v6\u4ee5\u4e0a\u7684\u4f53\u7cfb\u7ed3\u6784\u800c\u8a00\uff0c\u662f\u76f4\u63a5\u8c03\u7528CPSID/CPSIE\u6307\u4ee4\u8fdb\u884c\uff0c\u800c\u5bf9\u4e8eARM v6\u4ee5\u524d\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u5219\u662f\u901a\u8fc7MRS\u3001MSR\u6307\u4ee4\u6765\u8bfb\u53d6\u548c\u8bbe\u7f6eARM\u7684CPSR\u5bc4\u5b58\u5668\u3002\u7531\u6b64\u53ef\u89c1\uff0clocal_irq_disable\uff08\uff09\u3001local_irq_enable\uff08\uff09\u9488\u5bf9\u7684\u5e76\u4e0d\u662f\u5916\u90e8\u7684\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u800c\u662f\u76f4\u63a5\u8ba9CPU\u672c\u8eab\u4e0d\u54cd\u5e94\u4e2d\u65ad\u8bf7\u6c42\u3002\u76f8\u5173\u7684\u5b9e\u73b0\u4f4d\u4e8earch/arm/include/asm/irqflags.h\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535520.3\u6240\u793a\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535520.3\u3000ARM Linux local_irq_disable\uff08\uff09/enable\uff08\uff09\u5e95\u5c42\u5b9e\u73b0"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' 1#if __LINUX_ARM_ARCH__ >= 6\n 2\n 3static inline unsigned long arch_local_irq_save(void)\n 4{\n 5        unsigned long flags;\n 6\n 7        asm volatile(\n 8                "       mrs     %0, cpsr        @ arch_local_irq_save\\n"\n 9                "       cpsid   i"\n10                : "=r" (flags) : : "memory", "cc");\n11        return flags;\n12}\n13\n14static inline void arch_local_irq_enable(void)\n15{\n16        asm volatile(\n17                "       cpsie i                 @ arch_local_irq_enable"\n18                :\n19                :\n20                : "memory", "cc");\n21}\n22\n23static inline void arch_local_irq_disable(void)\n24{\n25        asm volatile(\n26                "       cpsid i                 @ arch_local_irq_disable"\n27                :\n28                :\n29                : "memory", "cc");\n30}\n31#else\n32\n33/*\n34 * Save the current interrupt enable state & disable IRQs\n35 */\n36static inline unsigned long arch_local_irq_save(void)\n37{\n38        unsigned long flags, temp;\n39\n40        asm volatile(\n41                "       mrs     %0, cpsr        @ arch_local_irq_save\\n"\n42                "       orr     %1, %0, #128\\n"\n43                "       msr     cpsr_c, %1"\n44                : "=r" (flags), "=r" (temp)\n45                :\n46                : "memory", "cc");\n47        return flags;\n48}\n49\n50/*\n51 * Enable IRQs\n52 */\n53static inline void arch_local_irq_enable(void)\n54{\n55        unsigned long temp;\n56        asm volatile(\n57                "       mrs     %0, cpsr        @ arch_local_irq_enable\\n"\n58                "       bic     %0, %0, #128\\n"\n59                "       msr     cpsr_c, %0"\n60                : "=r" (temp)\n61                :\n62                : "memory", "cc");\n63}\n64\n65/*\n66 * Disable IRQs\n67 */\n68static inline void arch_local_irq_disable(void)\n69{\n70        unsigned long temp;\n71        asm volatile(\n72                "       mrs     %0, cpsr        @ arch_local_irq_disable\\n"\n73                "       orr     %0, %0, #128\\n"\n74                "       msr     cpsr_c, %0"\n75                : "=r" (temp)\n76                :\n77                : "memory", "cc");\n78}\n79 #endif\n')),(0,a.kt)("p",null,"\u4e0elocal_irq_disable\uff08\uff09\u548clocal_irq_enable\uff08\uff09\u4e0d\u540c\uff0cdisable_irq\uff08\uff09\u3001enable_irq\uff08\uff09\u9488\u5bf9\u7684\u5219\u662f\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u56e0\u6b64\u5b83\u4eec\u9002\u7528\u7684\u5bf9\u8c61\u662f\u67d0\u4e2a\u4e2d\u65ad\u3002disable_irq\uff08\uff09\u7684\u5b57\u9762\u610f\u601d\u662f\u6682\u65f6\u5c4f\u853d\u6389\u67d0\u4e2d\u65ad\uff08\u5176\u5b9e\u5728\u5185\u6838\u7684\u5b9e\u73b0\u5c42\u9762\u4e0a\u505a\u4e86\u5ef6\u540e\u5c4f\u853d\uff09\uff0c\u76f4\u5230enable_irq\uff08\uff09\u540e\u518d\u6267\u884cISR\u3002\u5b9e\u9645\u4e0a\uff0c\u5c4f\u853d\u4e2d\u65ad\u53ef\u4ee5\u53d1\u751f\u5728\u5916\u8bbe\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u3001CPU\u4e09\u4e2a\u4f4d\u7f6e\uff0c\u5982\u56fe20.3\u6240\u793a\u3002\u5bf9\u4e8e\u5916\u8bbe\u7aef\uff0c\u662f\u4ece\u6e90\u5934\u4e0a\u5c31\u4e0d\u4ea7\u751f\u4e2d\u65ad\u4fe1\u53f7\u7ed9\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u7531\u4e8e\u5b83\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u5916\u8bbe\u4e8e\u672c\u8eab\uff0c\u6240\u4ee5Linux\u4e0d\u63d0\u4f9b\u6807\u51c6\u7684API\u800c\u662f\u7531\u5916\u8bbe\u7684\u9a71\u52a8\u76f4\u63a5\u8bfb\u5199\u81ea\u8eab\u7684\u5bc4\u5b58\u5668\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"1747233426546",src:r(88764).Z,width:"1227",height:"607"})),(0,a.kt)("p",null,"\u56fe20.3\u3000\u5c4f\u853d\u4e2d\u65ad\u76843\u4e2a\u4e0d\u540c\u4f4d\u7f6e"),(0,a.kt)("p",null,"\u5728\u5185\u6838\u4e2d\uff0c\u901a\u8fc7irq_chip\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u4e2d\u65ad\u63a7\u5236\u5668\u3002\u8be5\u7ed3\u6784\u4f53\u5185\u90e8\u5c01\u88c5\u4e86\u4e2d\u65admask\u3001unmask\u3001ack\u7b49\u6210\u5458\u51fd\u6570\uff0c\u5176\u5b9a\u4e49\u4e8einclude/linux/irq.h\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535520.4\u6240\u793a\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535520.4\u3000irq_chip\u7ed3\u6784\u4f53"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," 1struct irq_chip {\n 2        const char      *name;\n 3        unsigned int    (*irq_startup)(struct irq_data *data);\n 4        void            (*irq_shutdown)(struct irq_data *data);\n 5        void            (*irq_enable)(struct irq_data *data);\n 6        void            (*irq_disable)(struct irq_data *data);\n 7\n 8        void            (*irq_ack)(struct irq_data *data);\n 9        void            (*irq_mask)(struct irq_data *data);\n10        void            (*irq_mask_ack)(struct irq_data *data);\n11        void            (*irq_unmask)(struct irq_data *data);\n12        void            (*irq_eoi)(struct irq_data *data);\n13\n14        int             (*irq_set_affinity)(struct irq_data *data, const struct\n                                       cpumask *dest, bool force);\n15        int             (*irq_retrigger)(struct irq_data *data);\n16        int             (*irq_set_type)(struct irq_data *data, unsigned int\n                                     flow_type);\n17        int             (*irq_set_wake)(struct irq_data *data, unsigned int on);\n18};\n")),(0,a.kt)("p",null,"\u5404\u4e2a\u82af\u7247\u516c\u53f8\u4f1a\u5c06\u82af\u7247\u5185\u90e8\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u5b9e\u73b0\u4e3airq_chip\u9a71\u52a8\u7684\u5f62\u5f0f\u3002\u53d7\u9650\u4e8e\u4e2d\u65ad\u63a7\u5236\u5668\u786c\u4ef6\u7684\u80fd\u529b\uff0c\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u5168\u90e8\u5b9e\u73b0\uff0c\u6709\u65f6\u5019\u53ea\u9700\u8981\u5b9e\u73b0\u5176\u4e2d\u7684\u90e8\u5206\u51fd\u6570\u5373\u53ef\u3002\u8b6c\u5982drivers/pinctrl/sirf/pinctrl-sirf.c\u9a71\u52a8\u4e2d\u7684\u4e0b\u9762\u4ee3\u7801\u90e8\u5206\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'static struct irq_chip sirfsoc_irq_chip = {\n        .name = "sirf-gpio-irq",\n        .irq_ack = sirfsoc_gpio_irq_ack,\n        .irq_mask = sirfsoc_gpio_irq_mask,\n        .irq_unmask = sirfsoc_gpio_irq_unmask,\n        .irq_set_type = sirfsoc_gpio_irq_type,\n};\n')),(0,a.kt)("p",null,"\u6211\u4eec\u53ea\u5b9e\u73b0\u4e86\u5176\u4e2d\u7684ack\u3001mask\u3001unmask\u548cset_type\u6210\u5458\u51fd\u6570\uff0cack\u51fd\u6570\u7528\u4e8e\u6e05\u4e2d\u65ad\uff0cmask\u3001unmask\u7528\u4e8e\u4e2d\u65ad\u5c4f\u853d\u548c\u53d6\u6d88\u4e2d\u65ad\u5c4f\u853d\u3001set_type\u5219\u7528\u4e8e\u914d\u7f6e\u4e2d\u65ad\u7684\u89e6\u53d1\u65b9\u5f0f\uff0c\u5982\u9ad8\u7535\u5e73\u3001\u4f4e\u7535\u5e73\u3001\u4e0a\u5347\u6cbf\u3001\u4e0b\u964d\u6cbf\u7b49\u3002\u81f3\u4e8e\u5230enable_irq\uff08\uff09\u7684\u65f6\u5019\uff0c\u867d\u7136\u6ca1\u6709\u5b9e\u73b0irq_enable\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u5185\u6838\u4f1a\u95f4\u63a5\u8c03\u7528irq_unmask\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u8fd9\u70b9\u4ecekernel/irq/chip.c\u4e2d\u53ef\u4ee5\u770b\u51fa\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"void irq_enable(struct irq_desc *desc)\n{\n        irq_state_clr_disabled(desc);\n        if (desc->irq_data.chip->irq_enable)\n                desc->irq_data.chip->irq_enable(&desc->irq_data);\n        else\n                desc->irq_data.chip->irq_unmask(&desc->irq_data);\n        irq_state_clr_masked(desc);\n}\n")),(0,a.kt)("p",null,"\u5728\u82af\u7247\u5185\u90e8\uff0c\u4e2d\u65ad\u63a7\u5236\u5668\u53ef\u80fd\u4e0d\u6b621\u4e2a\uff0c\u591a\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u4e4b\u95f4\u8fd8\u5f88\u53ef\u80fd\u662f\u7ea7\u8054\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u82af\u7247\u5185\u90e8\u6709\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u652f\u630132\u4e2a\u4e2d\u65ad\u6e90\uff0c\u5176\u4e2d\u67094\u4e2a\u6765\u6e90\u4e8eGPIO\u63a7\u5236\u5668\u5916\u56f4\u76844\u7ec4GPIO\uff0c\u6bcf\u7ec4GPIO\u4e0a\u53c8\u670932\u4e2a\u4e2d\u65ad\uff08\u8bb8\u591a\u82af\u7247\u7684GPIO\u63a7\u5236\u5668\u4e5f\u540c\u65f6\u662f\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\uff09\uff0c\u5176\u5173\u7cfb\u5982\u56fe20.4\u6240\u793a\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"1747233562390",src:r(61479).Z,width:"1216",height:"688"})),(0,a.kt)("p",null,"\u56fe20.4\u3000SoC\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u5178\u578b\u5206\u5e03"),(0,a.kt)("p",null,"\u90a3\u4e48\uff0c\u4e00\u822c\u6765\u8bb2\uff0c\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0cgpio0_0~gpio0_31\u8fd9\u4e9b\u5f15\u811a\u672c\u8eab\u5728\u7b2c1\u7ea7\u4f1a\u4f7f\u7528\u4e2d\u65ad\u53f728\uff0c\u800c\u8fd9\u4e9b\u5f15\u811a\u672c\u8eab\u7684\u4e2d\u65ad\u53f7\u5728\u5b9e\u73b0\u4e0eGPIO\u63a7\u5236\u5668\u5bf9\u5e94\u7684irq_chip\u9a71\u52a8\u65f6\uff0c\u6211\u4eec\u53c8\u4f1a\u628a\u5b83\u6620\u5c04\u5230Linux\u7cfb\u7edf\u768432~63\u53f7\u4e2d\u65ad\u3002\u540c\u7406\uff0cgpio1_0~gpio1_31\u8fd9\u4e9b\u5f15\u811a\u672c\u8eab\u5728\u7b2c1\u7ea7\u4f1a\u4f7f\u7528\u4e2d\u65ad\u53f729\uff0c\u800c\u8fd9\u4e9b\u5f15\u811a\u672c\u8eab\u7684\u4e2d\u65ad\u53f7\u5728\u5b9e\u73b0\u4e0eGPIO\u63a7\u5236\u5668\u5bf9\u5e94\u7684irq_chip\u9a71\u52a8\u65f6\uff0c\u6211\u4eec\u53c8\u4f1a\u628a\u5b83\u6620\u5c04\u5230Linux\u7cfb\u7edf\u768464~95\u53f7\u4e2d\u65ad\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5bf9\u4e8e\u4e2d\u65ad\u53f7\u7684\u4f7f\u7528\u8005\u800c\u8a00\uff0c\u65e0\u987b\u770b\u5230\u8fd9\u79cd2\u7ea7\u6620\u5c04\u5173\u7cfb\u3002\u5982\u679c\u67d0\u8bbe\u5907\u60f3\u7533\u8bf7\u4e0egpio1_0\u8fd9\u4e2a\u5f15\u811a\u5bf9\u5e94\u7684\u4e2d\u65ad\uff0c\u5b83\u53ea\u9700\u8981\u7533\u8bf764\u53f7\u4e2d\u65ad\u5373\u53ef\u3002\u8fd9\u4e2a\u5173\u7cfb\u56fe\u770b\u8d77\u6765\u5982\u56fe20.5\u6240\u793a\u3002"),(0,a.kt)("p",null,"\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u8ff0\u56fe20.4\u548c20.5\u4e2d\u6240\u6d89\u53ca\u7684\u4e2d\u65ad\u53f7\u7684\u6570\u503c\uff0c\u65e0\u8bba\u662fbase\u8fd8\u662f\u5177\u4f53\u67d0\u4e2aGPIO\u5bf9\u5e94\u7684\u4e2d\u65ad\u53f7\u662f\u591a\u5c11\uff0c\u90fd\u4e0d\u4e00\u5b9a\u662f\u5982\u56fe20.4\u548c\u56fe20.5\u6240\u63cf\u8ff0\u7684\u7b80\u5355\u7ebf\u6027\u6620\u5c04\u3002Linux\u4f7f\u7528IRQ Domain\u6765\u63cf\u8ff0\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u6240\u7ba1\u7406\u7684\u4e2d\u65ad\u6e90\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u90fd\u6709\u81ea\u5df1\u7684Domain\u3002\u6211\u4eec\u53ef\u4ee5\u5c06IRQ Domain\u770b\u4f5c\u662fIRQ\u63a7\u5236\u5668\u7684\u8f6f\u4ef6\u62bd\u8c61\u3002\u5728\u6dfb\u52a0IRQ Domain\u7684\u65f6\u5019\uff0c\u5185\u6838\u4e2d\u5b58\u5728\u7684\u6620\u5c04\u65b9\u6cd5\u6709\uff1airq_domain_add_legacy\uff08\uff09\u3001irq_domain_add_linear\uff08\uff09\u3001irq_domain_add_tree\uff08\uff09\u7b49\u3002"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"1747233631119",src:r(72592).Z,width:"1276",height:"1041"})),(0,a.kt)("p",null,"\u56fe20.5\u3000\u4e2d\u65ad\u7ea7\u8054\u4e0e\u6620\u5c04"),(0,a.kt)("p",null,"irq_domain_add_legacy\uff08\uff09\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u8fc7\u65f6\u7684\u65b9\u6cd5\uff0c\u5b83\u4e00\u822c\u662f\u7531IRQ\u63a7\u5236\u5668\u9a71\u52a8\u76f4\u63a5\u6307\u5b9a\u4e2d\u65ad\u6e90\u786c\u4ef6\u610f\u4e49\u4e0a\u7684\u504f\u79fb\uff08\u4e00\u822c\u79f0\u4e3ahwirq\uff09\u548cLinux\u903b\u8f91\u4e0a\u7684\u4e2d\u65ad\u53f7\u7684\u6620\u5c04\u5173\u7cfb\u3002\u7c7b\u4f3c\u56fe20.5\u7684\u6307\u5b9a\u6620\u5c04\u53ef\u4ee5\u88ab\u8fd9\u79cd\u65b9\u6cd5\u5f04\u51fa\u6765\u3002irq_domain_add_linear\uff08\uff09\u5219\u5728\u4e2d\u65ad\u6e90\u548cirq_desc\u4e4b\u95f4\u5efa\u7acb\u7ebf\u6027\u6620\u5c04\uff0c\u5185\u6838\u9488\u5bf9\u8fd9\u4e2aIRQ Domain\u7ef4\u62a4\u4e86\u4e00\u4e2ahwirq\u548cLinux\u903b\u8f91IRQ\u4e4b\u95f4\u5173\u7cfb\u7684\u4e00\u4e2a\u8868\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5176\u5b9e\u4e5f\u5b8c\u5168\u4e0d\u5173\u5fc3\u903b\u8f91\u4e2d\u65ad\u53f7\u4e86\uff1birq_domain_add_tree\uff08\uff09\u5219\u66f4\u52a0\u7075\u6d3b\uff0c\u903b\u8f91\u4e2d\u65ad\u53f7\u548chwirq\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u662f\u7528\u4e00\u68f5radix\u6811\u6765\u63cf\u8ff0\u7684\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u67e5\u627e\u7684\u65b9\u6cd5\u6765\u5bfb\u627ehwirq\u548cLinux\u903b\u8f91IRQ\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e00\u822c\u9002\u5408\u67d0\u4e2d\u65ad\u63a7\u5236\u5668\u652f\u6301\u975e\u5e38\u591a\u4e2d\u65ad\u6e90\u7684\u60c5\u51b5\u3002"),(0,a.kt)("p",null,"\u5b9e\u9645\u4e0a\uff0c\u5728\u5f53\u524d\u7684\u5185\u6838\u4e2d\uff0c\u4e2d\u65ad\u53f7\u66f4\u591a\u7684\u662f\u4e00\u4e2a\u903b\u8f91\u6982\u5ff5\uff0c\u5177\u4f53\u6570\u503c\u662f\u591a\u5c11\u4e0d\u662f\u5f88\u5173\u952e\u3002\u4eba\u4eec\u66f4\u591a\u7684\u662f\u5173\u5fc3\u5728\u8bbe\u5907\u6811\u4e2d\u8bbe\u7f6e\u6b63\u786e\u7684interrupt_parrent\u548c\u76f8\u5bf9\u8be5interrupt_parent\u7684\u504f\u79fb\u3002"),(0,a.kt)("p",null,"\u4ee5drivers/pinctrl/sirf/pinctrl-sirf.c\u7684irq_chip\u90e8\u5206\u4e3a\u4f8b\uff0c\u5728sirfsoc_gpio_probe\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u6bcf\u7ec4GPIO\u7684\u4e2d\u65ad\u90fd\u901a\u8fc7gpiochip_set_chained_irqchip\uff08\uff09\u7ea7\u8054\u5230\u4e0a\u4e00\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u4e2d\u65ad\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535520.5\u3000\u4e8c\u7ea7GPIO\u4e2d\u65ad\u7ea7\u8054\u5230\u4e00\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," 1static int sirfsoc_gpio_probe(struct device_node *np)\n 2{\n 3...\n 4for (i = 0; i < SIRFSOC_GPIO_NO_OF_BANKS; i++) {\n 5       bank = &sgpio->sgpio_bank[i];\n 6       spin_lock_init(&bank->lock);\n 7       bank->parent_irq = platform_get_irq(pdev, i);\n 8       if (bank->parent_irq < 0) {\n 9               err = bank->parent_irq;\n10               goto out_banks;\n11       }\n12\n13       gpiochip_set_chained_irqchip(&sgpio->chip.gc,\n14               &sirfsoc_irq_chip,\n15               bank->parent_irq,\n16               sirfsoc_gpio_handle_irq);\n17}\n18\n19...\n20}\n")),(0,a.kt)("p",null,"\u5bf9\u4e8eSIRFSOC_GPIO_NO_OF_BANKS\u8fd9\u4e48\u591a\u7ec4GPIO\u8fdb\u884c\u5faa\u73af\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7b2c15\u884c\u7684bank->parent_irq\u662f\u4e0e\u8fd9\u4e00\u7ec4GPIO\u5bf9\u5e94\u7684\u201c\u4e0a\u7ea7\u201d\u4e2d\u65ad\u53f7\uff0csirfsoc_gpio_handle_irq\uff08\uff09\u5219\u662f\u4e0ebank->parent_irq\u5bf9\u5e94\u7684\u201c\u4e0a\u7ea7\u201d\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002\u800csirfsoc_gpio_handle_irq\uff08\uff09\u8fd9\u4e2a\u201c\u4e0a\u7ea7\u201d\u51fd\u6570\u6700\u7ec8\u8fd8\u662f\u8981\u8c03\u7528GPIO\u8fd9\u4e00\u7ea7\u522b\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002"),(0,a.kt)("p",null,"\u5728sirfsoc_gpio_handle_irq\uff08\uff09\u51fd\u6570\u7684\u5165\u53e3\u5904\u8c03\u7528chained_irq_enter\uff08\uff09\u6697\u793a\u81ea\u8eab\u8fdb\u5165\u94fe\u5f0fIRQ\u5904\u7406\uff0c\u5728\u51fd\u6570\u4f53\u5185\u5224\u51b3\u5177\u4f53\u7684GPIO\u4e2d\u65ad\uff0c\u5e76\u901a\u8fc7generic_handle_irq\uff08\uff09\u8c03\u7528\u6700\u7ec8\u7684\u5916\u8bbe\u9a71\u52a8\u4e2d\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff0c\u6700\u540e\u8c03\u7528chained_irq_exit\uff08\uff09\u6697\u793a\u81ea\u8eab\u9000\u51fa\u94fe\u5f0fIRQ\u5904\u7406\uff0c\u5982\u4ee3\u7801\u6e05\u535520.6\u6240\u793a\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535520.6\u3000\u201c\u4e0a\u7ea7\u201d\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u6d3e\u751f\u5230\u4e0b\u7ea7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"}," 1static void sirfsoc_gpio_handle_irq(unsigned int irq, struct irq_desc *desc)\n 2{\n 3...\n 4chained_irq_enter(chip, desc);\n 5\n 6while (status) {\n 7       ctrl = readl(sgpio->chip.regs + SIRFSOC_GPIO_CTRL(bank->id, idx));\n 8\n 9       /*\n10        * Here we must check whether the corresponding GPIO\u2019s interrupt\n11        * has been enabled, otherwise just skip it\n12        */\n13       if ((status & 0x1) && (ctrl & SIRFSOC_GPIO_CTL_INTR_EN_MASK)) {\n14              generic_handle_irq(irq_find_mapping(gc->irqdomain, idx +\n15                             bank->id * SIRFSOC_GPIO_BANK_SIZE));\n16       }\n17\n18       idx++;\n19       status = status >> 1;\n20}\n21\n22chained_irq_exit(chip, desc);\n23}\n")),(0,a.kt)("p",null,"\u4e0b\u9762\u7528\u4e00\u4e2a\u5b9e\u4f8b\u6765\u5448\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5047\u8bbeGPIO0_0~31\u5bf9\u5e94\u4e0a\u7ea7\u4e2d\u65ad\u53f728\uff0c\u800c\u5916\u8bbeA\u4f7f\u7528\u4e86GPIO0_5\uff08\u5373\u7b2c0\u7ec4GPIO\u7684\u7b2c5\u4e2a\uff09\uff0c\u5e76\u5047\u5b9a\u5916\u8bbeA\u7684\u4e2d\u65ad\u53f7\u4e3a37\uff0c\u537332+5\uff0c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e3adeva_isr\uff08\uff09\u3002\u90a3\u4e48\uff0c\u5f53GPIO0_5\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u5019\uff0c\u5185\u6838\u7684\u8c03\u7528\u987a\u5e8f\u662f\uff1asirfsoc_gpio_handle_irq\uff08\uff09->generic_handle_irq\uff08\uff09->deva_isr\uff08\uff09\u3002\u5982\u679c\u786c\u4ef6\u7684\u4e2d\u65ad\u7cfb\u7edf\u6709\u66f4\u6df1\u7684\u5c42\u6b21\uff0c\u8fd9\u79cd\u8f6f\u4ef6\u4e0a\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7ea7\u8054\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6709\u66f4\u6df1\u7684\u7ea7\u522b\u3002"),(0,a.kt)("p",null,"\u5728\u4e0a\u8ff0\u5b9e\u4f8b\u4e2d\uff0cGPIO0_0~31\u7684interrupt_parrent\u5b9e\u9645\u662f\u4e0a\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u800c\u5916\u8bbeA\u7684interrupt_parrent\u5c31\u662fGPIO0\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u5728\u8bbe\u5907\u6811\u4e2d\u8fdb\u884c\u5448\u73b0\u3002"),(0,a.kt)("p",null,"\u5f88\u591a\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\u5b9a\u4e49\u5448\u73b0\u51fa\u7b80\u5355\u7684\u89c4\u5f8b\uff0c\u5982\u6709\u4e00\u4e2amask\u5bc4\u5b58\u5668\uff0c\u5176\u4e2d\u6bcf1\u4f4d\u53ef\u5c4f\u853d1\u4e2a\u4e2d\u65ad\u7b49\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u65e0\u987b\u5b9e\u73b01\u4e2a\u5b8c\u6574\u7684irq_chip\u9a71\u52a8\uff0c\u800c\u53ef\u4ee5\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684\u901a\u7528irq_chip\u9a71\u52a8\u67b6\u6784irq_chip_generic\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u5b9e\u73b0\u6781\u5c11\u91cf\u7684\u4ee3\u7801\uff0c\u5982drivers/irqchip/irq-sirfsoc.c\u4e2d\uff0c\u7528\u4e8e\u6ce8\u518cCSR SiRFprimaII\u5185\u90e8\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u4ee3\u7801\uff08\u89c1\u4ee3\u7801\u6e05\u535520.7\uff09\u3002"),(0,a.kt)("p",null,"\u4ee3\u7801\u6e05\u535520.7\u3000\u4f7f\u7528generic\u7684irq_chip\u6846\u67b6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},' 1static __init void\n 2sirfsoc_alloc_gc(void __iomem *base, unsigned int irq_start, unsigned int num)\n 3{\n 4        struct irq_chip_generic *gc;\n 5        struct irq_chip_type *ct;\n 6        int ret;\n 7        unsigned int clr = IRQ_NOREQUEST | IRQ_NOPROBE | IRQ_NOAUTOEN;\n 8        unsigned int set = IRQ_LEVEL;\n 9\n10        ret = irq_alloc_domain_generic_chips(sirfsoc_irqdomain,num, 1, "irq_sirfsoc",\n11               handle_level_irq, clr, set, IRQ_GC_INIT_MASK_CACHE);\n12\n13        gc = irq_get_domain_generic_chip(sirfsoc_irqdomain, irq_start);\n14        gc->reg_base = base;\n15        ct = gc->chip_types;\n16        ct->chip.irq_mask = irq_gc_mask_clr_bit;\n17        ct->chip.irq_unmask = irq_gc_mask_set_bit;\n18        ct->regs.mask = SIRFSOC_INT_RISC_MASK0;\n19}\n')),(0,a.kt)("p",null,"irq_chip\u9a71\u52a8\u7684\u5165\u53e3\u58f0\u660e\u65b9\u6cd5\u5f62\u5982\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'IRQCHIP_DECLARE(sirfsoc_intc, "sirf,prima2-intc", sirfsoc_irq_init);\n')),(0,a.kt)("p",null,"sirf\uff0cprima2-intc\u662f\u8bbe\u5907\u6811\u4e2d\u4e2d\u65ad\u63a7\u5236\u5668\u7684compatible\u5b57\u6bb5\uff0csirfsoc_irq_init\u662f\u5339\u914d\u8fd9\u4e2acompatible\u5b57\u6bb5\u540e\u8fd0\u884c\u7684\u521d\u59cb\u5316\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u7279\u522b\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u76ee\u524d\u591a\u6570\u4e3b\u6d41ARM\u82af\u7247\u5185\u90e8\u7684\u4e00\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\u90fd\u4f7f\u7528\u4e86ARM\u516c\u53f8\u7684GIC\uff0c\u6211\u4eec\u51e0\u4e4e\u4e0d\u9700\u8981\u5b9e\u73b0\u4efb\u4f55\u4ee3\u7801\uff0c\u53ea\u9700\u8981\u5728\u8bbe\u5907\u6811\u4e2d\u6dfb\u52a0\u76f8\u5173\u7684\u8282\u70b9\u3002"),(0,a.kt)("p",null,"\u5982\u5728arch/arm/boot/dts/exynos5250.dtsi\u4e2d\u5373\u542b\u6709\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'gic:interrupt-controller@10481000 {\n        compatible = "arm,cortex-a9-gic";\n        #interrupt-cells = <3>;\n        interrupt-controller;\n        reg = <0x10481000 0x1000>, <0x10482000 0x2000>;\n};\n')),(0,a.kt)("p",null,"\u6253\u5f00drivers/irqchip/irq-gic.c\uff0c\u53d1\u73b0GIC\u9a71\u52a8\u7684\u5165\u53e3\u58f0\u660e\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'IRQCHIP_DECLARE(gic_400, "arm,gic-400", gic_of_init);\nIRQCHIP_DECLARE(cortex_a15_gic, "arm,cortex-a15-gic", gic_of_init);\nIRQCHIP_DECLARE(cortex_a9_gic, "arm,cortex-a9-gic", gic_of_init);\nIRQCHIP_DECLARE(cortex_a7_gic, "arm,cortex-a7-gic", gic_of_init);\nIRQCHIP_DECLARE(msm_8660_qgic, "qcom,msm-8660-qgic", gic_of_init);\nIRQCHIP_DECLARE(msm_qgic2, "qcom,msm-qgic2", gic_of_init);\n')),(0,a.kt)("p",null,"\u8fd9\u8bf4\u660edrivers/irqchip/irq-gic.c\u8fd9\u4e2a\u9a71\u52a8\u53ef\u4ee5\u517c\u5bb9arm\uff0cgic-400\u3001arm\uff0ccortex-a15-gic\u3001arm\uff0ccortex-a7-gic\u7b49\uff0c\u4f46\u662f\u521d\u59cb\u5316\u51fd\u6570\u90fd\u662f\u7edf\u4e00\u7684gic_of_init\u3002"))}u.isMDXComponent=!0},88764:function(n,i,r){i.Z=r.p+"assets/images/1747233426546-efb776a119a9ebd95377d9432140f43d.png"},61479:function(n,i,r){i.Z=r.p+"assets/images/1747233562390-4a5d0d5733a6eddd70e6e5f503d10862.png"},72592:function(n,i,r){i.Z=r.p+"assets/images/1747233631119-0e0ace9ba651c9c4871d899c2af70318.png"}}]);