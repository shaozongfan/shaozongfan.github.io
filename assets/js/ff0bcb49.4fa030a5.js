"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[97786],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return g}});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},s=Object.keys(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var o=r.createContext({}),u=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=u(n.components);return r.createElement(o.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},_=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,s=n.originalType,o=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),_=u(t),g=a,d=_["".concat(o,".").concat(g)]||_[g]||c[g]||s;return t?r.createElement(d,i(i({ref:e},p),{},{components:t})):r.createElement(d,i({ref:e},p))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var s=t.length,i=new Array(s);i[0]=_;var l={};for(var o in e)hasOwnProperty.call(e,o)&&(l[o]=e[o]);l.originalType=n,l.mdxType="string"==typeof n?n:a,i[1]=l;for(var u=2;u<s;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}_.displayName="MDXCreateElement"},47441:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return o},default:function(){return g},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var r=t(87462),a=t(63366),s=(t(67294),t(3905)),i=["components"],l={},o=void 0,u={unversionedId:"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236",id:"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236",title:"linux\u4fe1\u53f7\u673a\u5236",description:"\u5728Linux\u5185\u6838\u4e2d\uff0c\u4fe1\u53f7\u5904\u7406\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u6d89\u53ca\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u7684\u4ea4\u4e92\u3002\u4ee5\u4e0b\u662f\u4fe1\u53f7\u5904\u7406\u7684\u8be6\u7ec6\u6d41\u7a0b\uff0c\u7ed3\u5408\u4ee3\u7801\u548c\u6ce8\u91ca\u8fdb\u884c\u8bf4\u660e\u3002",source:"@site/docs/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5",slug:"/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236",draft:!1,editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/docs/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u4e00\uff0cringBuffer",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5de5\u5177(\u4e09)ftrace\u6846\u67b6"},next:{title:"\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55"}},p={},c=[{value:"2.1 \u4fe1\u53f7\u4f20\u9012",id:"21-\u4fe1\u53f7\u4f20\u9012",level:2},{value:"2.2  \u4fe1\u53f7\u68c0\u67e5",id:"22--\u4fe1\u53f7\u68c0\u67e5",level:2},{value:"2.3\u4fe1\u53f7\u5904\u7406",id:"23\u4fe1\u53f7\u5904\u7406",level:2},{value:"2.4 \u4fe1\u53f7\u5904\u7406\u5b8c\u6210",id:"24-\u4fe1\u53f7\u5904\u7406\u5b8c\u6210",level:2}],_={toc:c};function g(n){var e=n.components,t=(0,a.Z)(n,i);return(0,s.kt)("wrapper",(0,r.Z)({},_,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"\u5728Linux\u5185\u6838\u4e2d\uff0c\u4fe1\u53f7\u5904\u7406\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u6d89\u53ca\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u7684\u4ea4\u4e92\u3002\u4ee5\u4e0b\u662f\u4fe1\u53f7\u5904\u7406\u7684\u8be6\u7ec6\u6d41\u7a0b\uff0c\u7ed3\u5408\u4ee3\u7801\u548c\u6ce8\u91ca\u8fdb\u884c\u8bf4\u660e\u3002"),(0,s.kt)("h1",{id:"\u4e00\u4fe1\u53f7\u5904\u7406\u7684\u6574\u4f53\u6d41\u7a0b"},"\u4e00\u3001\u4fe1\u53f7\u5904\u7406\u7684\u6574\u4f53\u6d41\u7a0b"),(0,s.kt)("p",null,"\u4fe1\u53f7\u5904\u7406\u7684\u6d41\u7a0b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u4fe1\u53f7\u4ea7\u751f\uff1a\u5185\u6838\u6216\u7528\u6237\u7a0b\u5e8f\u53d1\u9001\u4fe1\u53f7\u3002")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u4fe1\u53f7\u4f20\u9012\uff1a\u5185\u6838\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u76ee\u6807\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u4fe1\u53f7\u68c0\u67e5\uff1a\u5728\u8fdb\u7a0b\u4ece\u5185\u6838\u6001\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u5185\u6838\u68c0\u67e5\u662f\u5426\u6709\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u4fe1\u53f7\u5904\u7406\uff1a"),(0,s.kt)("p",{parentName:"li"},"\u200b\t\u5982\u679c\u8fdb\u7a0b\u6ce8\u518c\u4e86\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u5185\u6838\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\u3002"),(0,s.kt)("p",{parentName:"li"},"\u200b\t\u5982\u679c\u6ca1\u6709\u6ce8\u518c\u5904\u7406\u51fd\u6570\uff0c\u5185\u6838\u4f1a\u6267\u884c\u9ed8\u8ba4\u884c\u4e3a\uff08\u5982\u7ec8\u6b62\u8fdb\u7a0b\u3001\u5ffd\u7565\u4fe1\u53f7\u7b49\uff09\u3002")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"\u4fe1\u53f7\u5904\u7406\u5b8c\u6210\uff1a\u8fdb\u7a0b\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u6253\u65ad\u7684\u4ee3\u7801\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002"))),(0,s.kt)("h1",{id:"\u4e8c\u4fe1\u53f7\u5904\u7406\u7684\u4ee3\u7801\u5b9e\u73b0"},"\u4e8c\u3001\u4fe1\u53f7\u5904\u7406\u7684\u4ee3\u7801\u5b9e\u73b0"),(0,s.kt)("p",null,"\u4ee5\u4e0b\u662fLinux\u5185\u6838\u4e2d\u4fe1\u53f7\u5904\u7406\u7684\u6838\u5fc3\u4ee3\u7801\u7247\u6bb5\uff0c\u7ed3\u5408\u6ce8\u91ca\u8fdb\u884c\u8bf4\u660e\u3002"),(0,s.kt)("h2",{id:"21-\u4fe1\u53f7\u4f20\u9012"},"2.1 \u4fe1\u53f7\u4f20\u9012"),(0,s.kt)("p",null,"\u5f53\u5185\u6838\u9700\u8981\u5411\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\u65f6\uff0c\u4f1a\u8c03\u7528",(0,s.kt)("inlineCode",{parentName:"p"},"send_signal()"),"\u51fd\u6570"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"</kernel/signal.c>\n/**\n * send_signal - \u5411\u6307\u5b9a\u4efb\u52a1\u53d1\u9001\u4fe1\u53f7\n * @sig: \u8981\u53d1\u9001\u7684\u4fe1\u53f7\u7f16\u53f7\n * @info: \u6307\u5411kernel_siginfo\u7ed3\u6784\u7684\u6307\u9488\uff0c\u5305\u542b\u4fe1\u53f7\u4fe1\u606f\n * @t: \u6307\u5411\u76ee\u6807\u4efb\u52a1\u7ed3\u6784\u7684\u6307\u9488\n * @type: \u8fdb\u7a0bID\u7c7b\u578b\n *\n * \u6b64\u51fd\u6570\u8d1f\u8d23\u5411\u6307\u5b9a\u7684\u4efb\u52a1\u53d1\u9001\u4fe1\u53f7\u3002\u6839\u636e\u4fe1\u53f7\u7684\u4e0d\u540c\u6765\u6e90\u548c\u7c7b\u578b\uff0c\n * \u53ef\u80fd\u9700\u8981\u5f3a\u5236\u53d1\u9001\u4fe1\u53f7\uff08\u5373\u4f7f\u76ee\u6807\u8fdb\u7a0b\u901a\u5e38\u4f1a\u5ffd\u7565\u8be5\u4fe1\u53f7\uff09\u3002\n * \u51fd\u6570\u5904\u7406\u4e86\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u4e4b\u95f4\u7684\u4fe1\u53f7\u53d1\u9001\uff0c\u5e76\u9002\u5f53\u8c03\u6574\u4fe1\u53f7\u53d1\u9001\u8005\u7684\n * \u7528\u6237ID\u548c\u8fdb\u7a0bID\u4fe1\u606f\u3002\n *\n * \u8fd4\u56de\u503c\uff1a\u6210\u529f\u53d1\u9001\u4fe1\u53f7\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de\u76f8\u5e94\u7684\u9519\u8bef\u7801\n */\nstatic int send_signal(int sig, struct kernel_siginfo *info, struct task_struct *t,\n            enum pid_type type)\n{\n    /* Should SIGKILL or SIGSTOP be received by a pid namespace init? */ //  \u68c0\u67e5SIGKILL\u6216SIGSTOP\u4fe1\u53f7\u662f\u5426\u5e94\u8be5\u88abpid namespace\u7684init\u8fdb\u7a0b\u63a5\u6536\n    bool force = false;\n\n    if (info == SEND_SIG_NOINFO) {\n        /* Force if sent from an ancestor pid namespace */\n        force = !task_pid_nr_ns(current, task_active_pid_ns(t)); //  \u6839\u636e\u5f53\u524d\u8fdb\u7a0b\u548c\u76ee\u6807\u8fdb\u7a0b\u7684\u547d\u540d\u7a7a\u95f4\u5173\u7cfb\u51b3\u5b9a\u662f\u5426\u5f3a\u5236\u53d1\u9001\u4fe1\u53f7\n    } else if (info == SEND_SIG_PRIV) { //  \u5224\u65ad\u662f\u5426\u4e3a\u7279\u6743\u4fe1\u53f7\u53d1\u9001\n        /* Don't ignore kernel generated signals */ //  \u4e0d\u8981\u5ffd\u7565\u5185\u6838\u751f\u6210\u7684\u4fe1\u53f7\n        force = true;\n    } else if (has_si_pid_and_uid(info)) { //  \u68c0\u67e5\u662f\u5426\u5177\u6709\u7279\u6b8a\u4fe1\u53f7ID\u548c\u7528\u6237ID\n        /* SIGKILL and SIGSTOP is special or has ids */ //  SIGKILL\u548cSIGSTOP\u662f\u7279\u6b8a\u4fe1\u53f7\u6216\u8005\u5177\u6709ID\n        struct user_namespace *t_user_ns; //  \u5b9a\u4e49\u7528\u6237\u547d\u540d\u7a7a\u95f4\u6307\u9488\n\n        rcu_read_lock(); //  \u8bfb\u9501\uff0c\u786e\u4fddRCU\u8bfb\u4e34\u754c\u533a\u5b89\u5168\n        t_user_ns = task_cred_xxx(t, user_ns); //  \u83b7\u53d6\u76ee\u6807\u4efb\u52a1\u7684\u7528\u6237\u547d\u540d\u7a7a\u95f4\n        if (current_user_ns() != t_user_ns) { //  \u5982\u679c\u5f53\u524d\u7528\u6237\u547d\u540d\u7a7a\u95f4\u4e0e\u76ee\u6807\u4e0d\u540c\n            kuid_t uid = make_kuid(current_user_ns(), info->si_uid); //  \u521b\u5efa\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u7684UID\n            info->si_uid = from_kuid_munged(t_user_ns, uid); //  \u8f6c\u6362\u4e3a\u76ee\u6807\u547d\u540d\u7a7a\u95f4\u7684UID\n        }\n        rcu_read_unlock(); //  \u91ca\u653e\u8bfb\u9501\n\n        /* A kernel generated signal? */ //  \u662f\u5426\u4e3a\u5185\u6838\u751f\u6210\u7684\u4fe1\u53f7\n        force = (info->si_code == SI_KERNEL); //  \u8bbe\u7f6eforce\u6807\u5fd7\n\n        /* From an ancestor pid namespace? */ //  \u662f\u5426\u6765\u81ea\u7956\u5148PID\u547d\u540d\u7a7a\u95f4\n        if (!task_pid_nr_ns(current, task_active_pid_ns(t))) { //  \u5982\u679c\u5f53\u524d\u8fdb\u7a0b\u4e0d\u5728\u76ee\u6807\u7684PID\u547d\u540d\u7a7a\u95f4\u4e2d\n            info->si_pid = 0; //  \u91cd\u7f6e\u53d1\u9001\u8005PID\u4e3a0\n            force = true; //  \u8bbe\u7f6e\u5f3a\u5236\u53d1\u9001\u6807\u5fd7\n        }\n    }\n    return __send_signal(sig, info, t, type, force); //  \u8c03\u7528\u5e95\u5c42\u4fe1\u53f7\u53d1\u9001\u51fd\u6570\n}\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"send_signal()")),"\uff1a\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u76ee\u6807\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"signal_wake_up()")),"\uff1a\u5982\u679c\u8fdb\u7a0b\u5904\u4e8e\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\uff0c\u5524\u9192\u8fdb\u7a0b\u3002")),(0,s.kt)("h2",{id:"22--\u4fe1\u53f7\u68c0\u67e5"},"2.2  \u4fe1\u53f7\u68c0\u67e5"),(0,s.kt)("p",null,"\u5728\u8fdb\u7a0b\u4ece\u5185\u6838\u6001\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u5185\u6838\u4f1a\u8c03\u7528",(0,s.kt)("inlineCode",{parentName:"p"},"do_signal()"),"\u51fd\u6570\u68c0\u67e5\u662f\u5426\u6709\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<arch/arm64/kernel/signal.c>\n\n/**\n * do_signal - \u5904\u7406\u5f53\u524d\u8fdb\u7a0b\u7684\u5f85\u5904\u7406\u4fe1\u53f7\n * @regs: \u6307\u5411CPU\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u6307\u9488\uff0c\u5305\u542b\u5f53\u524d\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\n * \n * \u8be5\u51fd\u6570\u8d1f\u8d23\u5904\u7406\u5f53\u524d\u8fdb\u7a0b\u7684\u5f85\u5904\u7406\u4fe1\u53f7\u3002\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a\n * 1. \u68c0\u67e5\u662f\u5426\u5728\u7cfb\u7edf\u8c03\u7528\u4e2d\uff0c\u5982\u679c\u662f\u5219\u5904\u7406\u7cfb\u7edf\u8c03\u7528\u91cd\u542f\u76f8\u5173\u903b\u8f91\n * 2. \u83b7\u53d6\u9700\u8981\u4f20\u9012\u7684\u4fe1\u53f7\uff0c\u5e76\u6839\u636e\u4fe1\u53f7\u8bbe\u7f6e\u51b3\u5b9a\u662f\u5426\u91cd\u542f\u7cfb\u7edf\u8c03\u7528\n * 3. \u5982\u679c\u6ca1\u6709\u9700\u8981\u5904\u7406\u7684\u4fe1\u53f7\uff0c\u5219\u5904\u7406\u7cfb\u7edf\u8c03\u7528\u91cd\u542f\u7684\u7279\u6b8a\u60c5\u51b5\n * 4. \u6062\u590d\u4fdd\u5b58\u7684\u4fe1\u53f7\u63a9\u7801\n * \n * \u6ce8\u610f\uff1a\u8be5\u51fd\u6570\u5728\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u8c03\u8bd5\u5668\u53ef\u80fd\u6539\u53d8\u6240\u6709\u5bc4\u5b58\u5668\u7684\u503c\n */\nstatic void do_signal(struct pt_regs *regs)\n{\n    unsigned long continue_addr = 0, restart_addr = 0;\n    int retval = 0;\n    struct ksignal ksig;\n    bool syscall = in_syscall(regs);\n\n    /*\n     * \u5982\u679c\u6765\u81ea\u7cfb\u7edf\u8c03\u7528\uff0c\u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u542f\u7cfb\u7edf\u8c03\u7528...\n     */\n    if (syscall) {\n        continue_addr = regs->pc;\n        restart_addr = continue_addr - (compat_thumb_mode(regs) ? 2 : 4);\n        retval = regs->regs[0];\n\n        /*\n         * \u907f\u514d\u901a\u8fc7ret_to_user\u8fdb\u884c\u989d\u5916\u7684\u7cfb\u7edf\u8c03\u7528\u91cd\u542f\n         */\n        forget_syscall(regs);\n\n        /*\n         * \u51c6\u5907\u7cfb\u7edf\u8c03\u7528\u91cd\u542f\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u505a\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u6837\u8c03\u8bd5\u5668\u5c31\u80fd\u770b\u5230\u5df2\u7ecf\u6539\u53d8\u7684PC\u3002\n         */\n        switch (retval) {\n        case -ERESTARTNOHAND:\n        case -ERESTARTSYS:\n        case -ERESTARTNOINTR:\n        case -ERESTART_RESTARTBLOCK:\n            regs->regs[0] = regs->orig_x0;\n            regs->pc = restart_addr;\n            break;\n        }\n    }\n\n    /*\n     * \u83b7\u53d6\u9700\u8981\u4f20\u9012\u7684\u4fe1\u53f7\u3002\u5728ptrace\u4e0b\u8fd0\u884c\u65f6\uff0c\u6b64\u65f6\u8c03\u8bd5\u5668\u53ef\u80fd\u4f1a\u6539\u53d8\u6211\u4eec\u7684\u6240\u6709\u5bc4\u5b58\u5668\u3002\n     */\n    if (get_signal(&ksig)) {\n        /*\n         * \u6839\u636e\u4fe1\u53f7\u8bbe\u7f6e\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u64a4\u9500\u91cd\u542f\u7cfb\u7edf\u8c03\u7528\u7684\u51b3\u5b9a\uff0c\n         * \u4f46\u5982\u679c\u8c03\u8bd5\u5668\u9009\u62e9\u5728\u4e0d\u540c\u7684PC\u5904\u91cd\u542f\uff0c\u5219\u8df3\u8fc7\u6b64\u6b65\u9aa4\u3002\n         */\n        if (regs->pc == restart_addr &&\n            (retval == -ERESTARTNOHAND ||\n             retval == -ERESTART_RESTARTBLOCK ||\n             (retval == -ERESTARTSYS &&\n              !(ksig.ka.sa.sa_flags & SA_RESTART)))) {\n            syscall_set_return_value(current, regs, -EINTR, 0);\n            regs->pc = continue_addr;\n        }\n\n        handle_signal(&ksig, regs);\n        return;\n    }\n\n    /*\n     * \u5904\u7406\u91cd\u542f\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u5982\u679c\u8c03\u8bd5\u5668\u9009\u62e9\u5728\u4e0d\u540c\u7684PC\u5904\u91cd\u542f\uff0c\u5219\u5ffd\u7565\u91cd\u542f\u3002\n     */\n    if (syscall && regs->pc == restart_addr) {\n        if (retval == -ERESTART_RESTARTBLOCK)\n            setup_restart_syscall(regs);\n        user_rewind_single_step(current);\n    }\n\n    restore_saved_sigmask();\n}\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"get_signal()")),"\uff1a\u4ece\u4fe1\u53f7\u961f\u5217\u4e2d\u83b7\u53d6\u4e00\u4e2a\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("inlineCode",{parentName:"strong"},"handle_signal()")),"\uff1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002")),(0,s.kt)("h2",{id:"23\u4fe1\u53f7\u5904\u7406"},"2.3\u4fe1\u53f7\u5904\u7406"),(0,s.kt)("p",null,"\u5982\u679c\u8fdb\u7a0b\u6ce8\u518c\u4e86\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u5185\u6838\u4f1a\u8c03\u7528",(0,s.kt)("inlineCode",{parentName:"p"},"handle_signal()"),"\u51fd\u6570\u3002"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<arch/arm64/kernel/signal.c>\n/**\n * handle_signal - \u5904\u7406\u4fe1\u53f7\u4f20\u9012\u548c\u8bbe\u7f6e\u4fe1\u53f7\u5904\u7406\u6808\u5e27\n * @ksig: \u5305\u542b\u4fe1\u53f7\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\n * @regs: \u6307\u5411\u5904\u7406\u5668\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u6307\u9488\n * \n * \u8be5\u51fd\u6570\u8d1f\u8d23\u5904\u7406\u4fe1\u53f7\u7684\u4f20\u9012\uff0c\u5305\u62ec\u8bbe\u7f6e\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u7684\u6808\u5e27\uff0c\n * \u5e76\u786e\u4fdd\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u6709\u6548\u6027\u3002\u6839\u636e\u4efb\u52a1\u662f\u5426\u4e3a\u517c\u5bb9\u6a21\u5f0f\uff08compat mode\uff09\uff0c\n * \u9009\u62e9\u4e0d\u540c\u7684\u6808\u5e27\u8bbe\u7f6e\u65b9\u5f0f\u3002\u6700\u540e\uff0c\u68c0\u67e5\u5bc4\u5b58\u5668\u72b6\u6001\u662f\u5426\u6709\u6548\uff0c\n * \u5e76\u5b8c\u6210\u4fe1\u53f7\u5904\u7406\u7684\u8bbe\u7f6e\u3002\n * \n * \u6ce8\u610f\uff1a\u8be5\u51fd\u6570\u5728\u5185\u6838\u4fe1\u53f7\u5904\u7406\u8def\u5f84\u4e2d\u88ab\u8c03\u7528\u3002\n */\nstatic void handle_signal(struct ksignal *ksig, struct pt_regs *regs)\n{\n    sigset_t *oldset = sigmask_to_save(); //  \u4fdd\u5b58\u5f53\u524d\u4fe1\u53f7\u63a9\u7801\n    int usig = ksig->sig; //  \u83b7\u53d6\u4fe1\u53f7\u7f16\u53f7\n    int ret; //  \u8fd4\u56de\u503c\uff0c\u7528\u4e8e\u6807\u8bb0\u64cd\u4f5c\u662f\u5426\u6210\u529f\n\n    rseq_signal_deliver(ksig, regs); //  \u6267\u884c\u7ebf\u7a0b\u76f8\u5173\u7684\u4fe1\u53f7\u5904\u7406\n\n    /*\n     * Set up the stack frame\n     */\n    if (is_compat_task()) { //  \u68c0\u67e5\u5f53\u524d\u4efb\u52a1\u662f\u5426\u4e3a\u517c\u5bb9\u6a21\u5f0f\n        if (ksig->ka.sa.sa_flags & SA_SIGINFO) //  \u5982\u679c\u662f\u517c\u5bb9\u6a21\u5f0f\u4e14\u8bbe\u7f6e\u4e86SA_SIGINFO\u6807\u5fd7\uff0c\u5219\u8bbe\u7f6e\u517c\u5bb9\u7248\u672c\u7684\u5b9e\u65f6\u4fe1\u53f7\u5904\u7406\u5e27\n            ret = compat_setup_rt_frame(usig, ksig, oldset, regs);\n        else //  \u5426\u5219\u8bbe\u7f6e\u517c\u5bb9\u7248\u672c\u7684\u666e\u901a\u4fe1\u53f7\u5904\u7406\u5e27\n            ret = compat_setup_frame(usig, ksig, oldset, regs);\n    } else {\n        ret = setup_rt_frame(usig, ksig, oldset, regs); //  \u975e\u517c\u5bb9\u6a21\u5f0f\u4e0b\uff0c\u8bbe\u7f6e\u5b9e\u65f6\u4fe1\u53f7\u5904\u7406\u5e27\n    }\n\n    /*\n     * Check that the resulting registers are actually sane.\n     */\n    ret |= !valid_user_regs(&regs->user_regs, current); //  \u5c06valid_user_regs\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e0eret\u8fdb\u884c\u6309\u4f4d\u6216\u64cd\u4f5c\uff0c\u5e76\u66f4\u65b0ret\u7684\u503c valid_user_regs\u7528\u4e8e\u9a8c\u8bc1\u7528\u6237\u5bc4\u5b58\u5668\u7684\u6709\u6548\u6027\uff0c\u53c2\u6570\u4e3a\u7528\u6237\u5bc4\u5b58\u5668\u7ed3\u6784\u548c\u5f53\u524d\u8fdb\u7a0b \u5982\u679c\u5bc4\u5b58\u5668\u65e0\u6548\uff0c\u5219!valid_user_regs\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n\n    /* Step into the signal handler if we are stepping */\n    signal_setup_done(ret, ksig, test_thread_flag(TIF_SINGLESTEP)); //  \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u8bbe\u7f6e\u4e86\u5355\u6b65\u6267\u884c\u6807\u5fd7(TIF_SINGLESTEP)\uff0c\u5219\u8fdb\u5165\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f signal_setup_done\u51fd\u6570\u5b8c\u6210\u4fe1\u53f7\u5904\u7406\u7684\u8bbe\u7f6e\u5de5\u4f5c \u53c2\u6570ret\u8868\u793a\u4e4b\u524d\u7684\u5904\u7406\u72b6\u6001\uff0cksig\u8868\u793a\u4fe1\u53f7\u7ed3\u6784\uff0ctest_thread_flag\u7528\u4e8e\u68c0\u67e5\u7ebf\u7a0b\u6807\u5fd7\n}\n")),(0,s.kt)("h2",{id:"24-\u4fe1\u53f7\u5904\u7406\u5b8c\u6210"},"2.4 \u4fe1\u53f7\u5904\u7406\u5b8c\u6210"),(0,s.kt)("p",null,"\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fdb\u7a0b\u4f1a\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u6253\u65ad\u7684\u4ee3\u7801\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"<arch/arm64/kernel/signal.c>\n/**\n * rt_sigreturn - \u7cfb\u7edf\u8c03\u7528\uff0c\u7528\u4e8e\u4ece\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u5e76\u6062\u590d\u8fdb\u7a0b\u4e0a\u4e0b\u6587\n * \n * \u8be5\u51fd\u6570\u5b9e\u73b0\u4e86rt_sigreturn\u7cfb\u7edf\u8c03\u7528\uff0c\u5176\u4e3b\u8981\u529f\u80fd\u662f\uff1a\n * 1. \u786e\u4fdd\u4efb\u4f55\u5f85\u91cd\u542f\u7684\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de-EINTR\n * 2. \u68c0\u67e5\u6808\u6307\u9488\u662f\u5426\u5bf9\u9f50\uff08128\u4f4d\u8fb9\u754c\uff09\n * 3. \u9a8c\u8bc1\u7528\u6237\u7a7a\u95f4\u4fe1\u53f7\u5e27\u7684\u5185\u5b58\u53ef\u8bbf\u95ee\u6027\n * 4. \u6062\u590d\u4fe1\u53f7\u5e27\u4e2d\u7684\u5bc4\u5b58\u5668\u72b6\u6001\n * 5. \u6062\u590d\u5907\u9009\u6808\u4fe1\u606f\n * 6. \u8fd4\u56de\u539f\u59cb\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\n * \n * \u8fd4\u56de\u503c\uff1a\n * \u6210\u529f\u65f6\u8fd4\u56de\u539f\u59cb\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\uff08regs->regs[0]\uff09\n * \u5931\u8d25\u65f6\u53d1\u9001\u6bb5\u9519\u8bef\u4fe1\u53f7\u5e76\u8fd4\u56de0\n */\nSYSCALL_DEFINE0(rt_sigreturn)\n{\n    struct pt_regs *regs = current_pt_regs(); //  \u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684\u5bc4\u5b58\u5668\u72b6\u6001\n    struct rt_sigframe __user *frame; //  \u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u7528\u6237\u7a7a\u95f4\u4fe1\u53f7\u5e27\u7ed3\u6784\u7684\u6307\u9488\n\n    /* Always make any pending restarted system calls return -EINTR */\n    current->restart_block.fn = do_no_restart_syscall; //  \u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u7684\u91cd\u542f\u5757\u51fd\u6570\u4e3ado_no_restart_syscall\uff0c\u8868\u793a\u4e0d\u91cd\u542f\u7cfb\u7edf\u8c03\u7528\n\n    /*\n     * Since we stacked the signal on a 128-bit boundary, then 'sp' should\n     * be word aligned here.\n     */\n    if (regs->sp & 15)\n        goto badframe;\n\n    frame = (struct rt_sigframe __user *)regs->sp;\n\n    if (!access_ok(frame, sizeof (*frame))) /* * \u68c0\u67e5\u4f20\u5165\u7684frame\u6307\u9488\u662f\u5426\u6709\u6548 * \u5982\u679c\u8bbf\u95ee\u4e0d\u5b89\u5168\uff0c\u5219\u8df3\u8f6c\u5230badframe\u6807\u7b7e\u5904 */\n        goto badframe;\n\n    if (restore_sigframe(regs, frame)) /*    * \u5c1d\u8bd5\u6062\u590d\u4fe1\u53f7\u5e27   * \u5982\u679c\u6062\u590d\u5931\u8d25\uff0c\u5219\u8df3\u8f6c\u5230badframe\u6807\u7b7e\u5904    */\n        goto badframe;\n\n    if (restore_altstack(&frame->uc.uc_stack)) /*    * \u6062\u66ff\u5907\u7528\u6808     * \u5982\u679c\u6062\u590d\u5931\u8d25\uff0c\u5219\u8df3\u8f6c\u5230badframe\u6807\u7b7e\u5904    */\n        goto badframe;\n\n    return regs->regs[0]; //  \u8fd4\u56de\u5bc4\u5b58\u56680\u4e2d\u7684\u503c\n\nbadframe:\n    arm64_notify_segfault(regs->sp); //  \u53d1\u751f\u6bb5\u9519\u8bef\u901a\u77e5\uff0c\u5e76\u8fd4\u56de0\n    return 0;\n}\n\n")),(0,s.kt)("h1",{id:"\u4e09\u4fe1\u53f7\u5904\u7406\u7684\u573a\u666f\u548c\u5f71\u54cd"},"\u4e09\u3001\u4fe1\u53f7\u5904\u7406\u7684\u573a\u666f\u548c\u5f71\u54cd"),(0,s.kt)("p",null,"\uff081\uff09\u573a\u666f1\uff1a\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\n\u573a\u666f\uff1a\u8fdb\u7a0b\u6b63\u5728\u6267\u884c\u7528\u6237\u6001\u4ee3\u7801\uff0c\u7a81\u7136\u6536\u5230\u4fe1\u53f7\uff08\u5982SIGINT\uff09\u3002"),(0,s.kt)("p",null,"\u6d41\u7a0b\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u5185\u6838\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u8fdb\u7a0b\u4ece\u5185\u6838\u6001\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u68c0\u67e5\u5230\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u5185\u6838\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fdb\u7a0b\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u6253\u65ad\u7684\u4ee3\u7801\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002"))),(0,s.kt)("p",null,"\u5f71\u54cd\uff1a\u8fdb\u7a0b\u7684\u6267\u884c\u88ab\u4fe1\u53f7\u6253\u65ad\uff0c\u4f46\u4f1a\u7ee7\u7eed\u6267\u884c\u3002"),(0,s.kt)("p",null,"\uff082\uff09\u573a\u666f2\uff1a\u8fdb\u7a0b\u5904\u4e8e\u53ef\u4e2d\u65ad\u7761\u7720\n\u573a\u666f\uff1a\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85I/O\u64cd\u4f5c\uff08\u5982read()\uff09\uff0c\u7a81\u7136\u6536\u5230\u4fe1\u53f7\uff08\u5982SIGTERM\uff09\u3002"),(0,s.kt)("p",null,"\u6d41\u7a0b\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u5185\u6838\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u5185\u6838\u5524\u9192\u8fdb\u7a0b\uff0c\u5e76\u5c06\u5176\u72b6\u6001\u8bbe\u7f6e\u4e3aTASK_RUNNING\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u8fdb\u7a0b\u4ece\u5185\u6838\u6001\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u68c0\u67e5\u5230\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u5185\u6838\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fdb\u7a0b\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u6253\u65ad\u7684\u4ee3\u7801\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002"))),(0,s.kt)("p",null,"\u5f71\u54cd\uff1a\u8fdb\u7a0b\u88ab\u4fe1\u53f7\u5524\u9192\uff0cI/O\u64cd\u4f5c\u53ef\u80fd\u88ab\u4e2d\u65ad\u3002"),(0,s.kt)("p",null,"\uff083\uff09\u573a\u666f3\uff1a\u8fdb\u7a0b\u5904\u4e8e\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\n\u573a\u666f\uff1a\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u786c\u4ef6I/O\u64cd\u4f5c\uff08\u5982\u78c1\u76d8\u8bfb\u5199\uff09\uff0c\u7a81\u7136\u6536\u5230\u4fe1\u53f7\uff08\u5982SIGKILL\uff09\u3002"),(0,s.kt)("p",null,"\u6d41\u7a0b\uff1a"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u5185\u6838\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u7531\u4e8e\u8fdb\u7a0b\u5904\u4e8e\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\uff0c\u4fe1\u53f7\u4e0d\u4f1a\u5524\u9192\u8fdb\u7a0b\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u8fdb\u7a0b\u7ee7\u7eed\u7b49\u5f85\u786c\u4ef6I/O\u64cd\u4f5c\u5b8c\u6210\u3002")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u786c\u4ef6I/O\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u8fdb\u7a0b\u88ab\u5524\u9192\u5e76\u5904\u7406\u4fe1\u53f7\u3002"))),(0,s.kt)("p",null,"\u5f71\u54cd\uff1a\u4fe1\u53f7\u4e0d\u4f1a\u7acb\u5373\u751f\u6548\uff0c\u8fdb\u7a0b\u5fc5\u987b\u7b49\u5f85\u786c\u4ef6\u64cd\u4f5c\u5b8c\u6210\u3002"))}g.isMDXComponent=!0}}]);