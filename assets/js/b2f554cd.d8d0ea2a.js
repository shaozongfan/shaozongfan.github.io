"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[11477],{30010:function(r){r.exports=JSON.parse('{"blogPosts":[{"id":"/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5206\u6790\u795e\u5668ftrace\uff1a\u4ece\u539f\u7406\u5230\u5b9e\u6218","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5206\u6790\u795e\u5668ftrace\uff1a\u4ece\u539f\u7406\u5230\u5b9e\u6218","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5206\u6790\u795e\u5668ftrace\uff1a\u4ece\u539f\u7406\u5230\u5b9e\u6218.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5206\u6790\u795e\u5668ftrace\uff1a\u4ece\u539f\u7406\u5230\u5b9e\u6218.md","title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5206\u6790\u795e\u5668ftrace\uff1a\u4ece\u539f\u7406\u5230\u5b9e\u6218","description":"\u5728\u5f53\u4eca\u6570\u5b57\u5316\u65f6\u4ee3\uff0cLinux \u7cfb\u7edf\u51ed\u501f\u5176\u5f00\u6e90\u3001\u7a33\u5b9a\u3001\u5b89\u5168\u7b49\u8bf8\u591a\u4f18\u52bf\uff0c\u5728\u670d\u52a1\u5668\u9886\u57df\u5360\u636e\u4e86\u4e3e\u8db3\u8f7b\u91cd\u7684\u5730\u4f4d\u3002\u636e\u7edf\u8ba1\uff0c\u5168\u7403\u8d85\u8fc7 70% \u7684\u7f51\u7ad9\u670d\u52a1\u5668\u90fd\u8fd0\u884c\u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e0a \uff0c\u4f17\u591a\u5927\u578b\u4e92\u8054\u7f51\u516c\u53f8\u5982 Google\u3001Facebook \u7b49\uff0c\u90fd\u5728\u5176\u6570\u636e\u4e2d\u5fc3\u5927\u89c4\u6a21\u4f7f\u7528 Linux\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u6548\u7684\u6570\u636e\u5904\u7406\u548c\u5b58\u50a8\u3002","date":"2025-09-15T14:44:16.893Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":49.785,"truncated":false,"authors":[],"frontMatter":{},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790"}},"content":"\u5728\u5f53\u4eca\u6570\u5b57\u5316\u65f6\u4ee3\uff0cLinux \u7cfb\u7edf\u51ed\u501f\u5176\u5f00\u6e90\u3001\u7a33\u5b9a\u3001\u5b89\u5168\u7b49\u8bf8\u591a\u4f18\u52bf\uff0c\u5728\u670d\u52a1\u5668\u9886\u57df\u5360\u636e\u4e86\u4e3e\u8db3\u8f7b\u91cd\u7684\u5730\u4f4d\u3002\u636e\u7edf\u8ba1\uff0c\u5168\u7403\u8d85\u8fc7 70% \u7684\u7f51\u7ad9\u670d\u52a1\u5668\u90fd\u8fd0\u884c\u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e0a \uff0c\u4f17\u591a\u5927\u578b\u4e92\u8054\u7f51\u516c\u53f8\u5982 Google\u3001Facebook \u7b49\uff0c\u90fd\u5728\u5176\u6570\u636e\u4e2d\u5fc3\u5927\u89c4\u6a21\u4f7f\u7528 Linux\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u6548\u7684\u6570\u636e\u5904\u7406\u548c\u5b58\u50a8\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u4f01\u4e1a\u800c\u8a00\uff0cLinux \u670d\u52a1\u5668\u7684\u6027\u80fd\u76f4\u63a5\u5173\u7cfb\u5230\u4e1a\u52a1\u7684\u7a33\u5b9a\u8fd0\u884c\u548c\u7528\u6237\u4f53\u9a8c\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5f53\u7528\u6237\u8bbf\u95ee\u7f51\u7ad9\u6216\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5982\u679c\u7cfb\u7edf\u54cd\u5e94\u7f13\u6162\u751a\u81f3\u51fa\u73b0\u5361\u987f\uff0c\u7528\u6237\u5f88\u53ef\u80fd\u4f1a\u9009\u62e9\u79bb\u5f00\uff0c\u8fd9\u4e0d\u4ec5\u4f1a\u5bfc\u81f4\u4e1a\u52a1\u6d41\u5931\uff0c\u8fd8\u4f1a\u635f\u5bb3\u4f01\u4e1a\u7684\u58f0\u8a89\u3002\u800c\u901a\u8fc7\u6709\u6548\u7684\u6027\u80fd\u5206\u6790\uff0c\u6211\u4eec\u80fd\u591f\u53ca\u65f6\u53d1\u73b0\u7cfb\u7edf\u4e2d\u7684\u6f5c\u5728\u95ee\u9898\uff0c\u627e\u51fa\u6027\u80fd\u74f6\u9888\u6240\u5728\uff0c\u4ece\u800c\u91c7\u53d6\u9488\u5bf9\u6027\u7684\u4f18\u5316\u63aa\u65bd\uff0c\u786e\u4fdd\u7cfb\u7edf\u59cb\u7ec8\u5904\u4e8e\u6700\u4f73\u8fd0\u884c\u72b6\u6001\u3002\\r\\n\\r\\n\u5728 Linux \u6027\u80fd\u5206\u6790\u7684\u5de5\u5177\u5bb6\u65cf\u4e2d\uff0cftrace \u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u4e14\u72ec\u7279\u7684\u5de5\u5177\uff0c\u5b83\u72b9\u5982\u4e00\u628a\u7cbe\u5bc6\u7684\u624b\u672f\u5200\uff0c\u80fd\u591f\u6df1\u5165\u5256\u6790 Linux \u5185\u6838\u7684\u8fd0\u884c\u65f6\u884c\u4e3a\uff0c\u4e3a\u6211\u4eec\u63ed\u793a\u7cfb\u7edf\u5185\u90e8\u7684\u5965\u79d8\uff0c\u5728\u6027\u80fd\u5206\u6790\u548c\u6545\u969c\u8c03\u8bd5\u4e2d\u53d1\u6325\u7740\u5173\u952e\u4f5c\u7528\u3002\\r\\n\\r\\n# \u4e00\u3001Ftrace\u6982\u8ff0\\r\\n\\r\\nftrace\uff0c\u5373 Function Trace \u7684\u7f29\u5199\uff0c\u662f Linux \u5185\u6838\u81ea\u5e26\u7684\u4e00\u6b3e\u5f3a\u5927\u7684\u8ddf\u8e2a\u5de5\u5177 \u3002\u5b83\u8bde\u751f\u4e8e 2008 \u5e74\uff0c\u7531 Steven Rostedt \u5f00\u53d1\uff0c\u5e76\u5728 2.6.27 \u7248\u672c\u7684\u5185\u6838\u4e2d\u9996\u6b21\u5f15\u5165\u3002\u6700\u521d\uff0cftrace \u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u8ddf\u8e2a\u5668\uff0c\u4e3b\u8981\u7528\u4e8e\u8bb0\u5f55\u5185\u6838\u7684\u51fd\u6570\u8c03\u7528\u6d41\u7a0b\uff0c\u968f\u7740\u4e0d\u65ad\u7684\u53d1\u5c55\u548c\u5b8c\u5584\uff0c\u5982\u4eca\u5b83\u5df2\u6f14\u53d8\u6210\u4e00\u4e2a\u529f\u80fd\u4e30\u5bcc\u7684\u8ddf\u8e2a\u6846\u67b6\uff0c\u91c7\u7528\u63d2\u4ef6\u5f0f\u7684\u8bbe\u8ba1\uff0c\u652f\u6301\u5f00\u53d1\u8005\u6dfb\u52a0\u66f4\u591a\u7c7b\u578b\u7684\u8ddf\u8e2a\u529f\u80fd\uff0c\u5728 Linux \u5185\u6838\u7684\u5f00\u53d1\u4e0e\u8c03\u8bd5\u4e2d\u53d1\u6325\u7740\u4e0d\u53ef\u6216\u7f3a\u7684\u4f5c\u7528\u3002\\r\\n\\r\\n\u7b80\u5355\u6765\u8bf4\uff0cftrace \u5c31\u50cf\u662f\u4e00\u4e2a \u201c\u5185\u6838\u4fa6\u63a2\u201d\uff0c\u80fd\u591f\u6df1\u5165\u7cfb\u7edf\u5185\u90e8\uff0c\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u4e86\u89e3 Linux \u5185\u6838\u5728\u8fd0\u884c\u65f6\u7684\u5404\u79cd\u884c\u4e3a\u3002\u65e0\u8bba\u662f\u5185\u6838\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u3001\u6267\u884c\u65f6\u95f4\uff0c\u8fd8\u662f\u8fdb\u7a0b\u7684\u8c03\u5ea6\u60c5\u51b5\u3001\u4e2d\u65ad\u7684\u5904\u7406\u8fc7\u7a0b\uff0cftrace \u90fd\u80fd\u8fdb\u884c\u8be6\u7ec6\u7684\u8ddf\u8e2a\u548c\u8bb0\u5f55\u3002\u901a\u8fc7\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u50cf\u4fa6\u63a2\u7834\u6848\u4e00\u6837\uff0c\u4ece\u86db\u4e1d\u9a6c\u8ff9\u4e2d\u627e\u51fa\u7cfb\u7edf\u8fd0\u884c\u65f6\u51fa\u73b0\u7684\u95ee\u9898\uff0c\u8fdb\u800c\u8fdb\u884c\u9488\u5bf9\u6027\u7684\u4f18\u5316\u548c\u8c03\u8bd5\u3002\\r\\n\\r\\n\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0cftrace \u7684\u7528\u9014\u5341\u5206\u5e7f\u6cdb\u3002\u5f53\u7cfb\u7edf\u51fa\u73b0\u6027\u80fd\u74f6\u9888\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u501f\u52a9 ftrace \u6765\u5206\u6790\u662f\u54ea\u4e9b\u5185\u6838\u51fd\u6570\u5360\u7528\u4e86\u5927\u91cf\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u627e\u51fa\u6027\u80fd\u74f6\u9888\u6240\u5728\uff0c\u8fdb\u884c\u4f18\u5316\u3002\u6bd4\u5982\uff0c\u5728\u4e00\u4e2a\u9ad8\u5e76\u53d1\u7684 Web \u670d\u52a1\u5668\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u54cd\u5e94\u65f6\u95f4\u8fc7\u957f\uff0c\u901a\u8fc7 ftrace \u8ddf\u8e2a\u76f8\u5173\u7684\u7f51\u7edc\u5904\u7406\u51fd\u6570\u548c\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u51fd\u6570\uff0c\u5c31\u6709\u53ef\u80fd\u53d1\u73b0\u662f\u67d0\u4e9b\u51fd\u6570\u7684\u4f4e\u6548\u5b9e\u73b0\u6216\u8005\u8d44\u6e90\u7ade\u4e89\u5bfc\u81f4\u4e86\u6027\u80fd\u95ee\u9898\u3002\u53c8\u6216\u8005\uff0c\u5f53\u7cfb\u7edf\u51fa\u73b0\u5f02\u5e38\u5d29\u6e83\u65f6\uff0cftrace \u8bb0\u5f55\u7684\u51fd\u6570\u8c03\u7528\u6808\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5b9a\u4f4d\u5230\u95ee\u9898\u7684\u6839\u6e90\uff0c\u786e\u5b9a\u662f\u54ea\u4e2a\u51fd\u6570\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u6545\u969c\u6392\u67e5\u7684\u6548\u7387\u3002\\r\\n\\r\\n# \u4e8c\u3001Ftrace\u7684\u529f\u80fd\u8be6\u89e3\\r\\n\\r\\n## 2.1\u591a\u6837\u5316\u7684\u8ffd\u8e2a\u529f\u80fd\\r\\n\\r\\nftrace \u62e5\u6709\u4e30\u5bcc\u591a\u6837\u7684\u8ffd\u8e2a\u529f\u80fd\uff0c\u8fd9\u5f97\u76ca\u4e8e\u5b83\u6240\u652f\u6301\u7684\u4e00\u7cfb\u5217\u4e0d\u540c\u7c7b\u578b\u7684 tracer\uff0c\u8fd9\u4e9b tracer \u5c31\u50cf\u662f\u4e00\u4e2a\u4e2a\u5404\u6709\u6240\u957f\u7684 \u201c\u4fa6\u5bdf\u5175\u201d\uff0c\u80fd\u591f\u4ece\u4e0d\u540c\u89d2\u5ea6\u5bf9 Linux \u5185\u6838\u7684\u8fd0\u884c\u65f6\u884c\u4e3a\u8fdb\u884c\u7ec6\u81f4\u5165\u5fae\u7684\u8ddf\u8e2a\u3002\\r\\n\\r\\n\u5176\u4e2d\uff0cFunction tracer\uff08\u51fd\u6570\u8ddf\u8e2a\u5668\uff09\u662f\u6700\u57fa\u7840\u7684\u4e00\u79cd tracer \uff0c\u5b83\u5c31\u50cf\u4e00\u4e2a\u52e4\u594b\u7684\u8bb0\u5f55\u5458\uff0c\u80fd\u591f\u5fe0\u5b9e\u5730\u8ddf\u8e2a\u5185\u6838\u51fd\u6570\u7684\u8c03\u7528\u60c5\u51b5\u3002\u5f53\u7cfb\u7edf\u8fd0\u884c\u65f6\uff0c\u5b83\u4f1a\u8be6\u7ec6\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u51fd\u6570\u4f55\u65f6\u88ab\u8c03\u7528\uff0c\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u51fd\u6570\u8c03\u7528\u7684\u57fa\u672c\u65f6\u95f4\u7ebf\u3002\u901a\u8fc7\u5206\u6790 Function tracer \u751f\u6210\u7684\u8ddf\u8e2a\u4fe1\u606f\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6e05\u6670\u5730\u4e86\u89e3\u5230\u7cfb\u7edf\u4e2d\u5404\u4e2a\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\uff0c\u8fd9\u5bf9\u4e8e\u7406\u89e3\u590d\u6742\u7684\u5185\u6838\u4ee3\u7801\u903b\u8f91\u4ee5\u53ca\u6392\u67e5\u56e0\u51fd\u6570\u8c03\u7528\u987a\u5e8f\u9519\u8bef\u800c\u5bfc\u81f4\u7684\u95ee\u9898\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u4e2d\uff0cFunction tracer \u53ef\u4ee5\u8bb0\u5f55\u4e0b\u4ece\u6587\u4ef6\u6253\u5f00\u51fd\u6570\u5230\u6587\u4ef6\u8bfb\u5199\u51fd\u6570\u518d\u5230\u6587\u4ef6\u5173\u95ed\u51fd\u6570\u7684\u4e00\u7cfb\u5217\u8c03\u7528\u8fc7\u7a0b\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u4e00\u76ee\u4e86\u7136\u5730\u770b\u5230\u6574\u4e2a\u6587\u4ef6\u64cd\u4f5c\u7684\u6d41\u7a0b\u3002\\r\\n\\r\\nFunction graph tracer\uff08\u51fd\u6570\u8c03\u7528\u56fe\u8ddf\u8e2a\u5668\uff09\u5219\u4ee5\u4e00\u79cd\u66f4\u52a0\u76f4\u89c2\u7684\u56fe\u5f62\u5316\u65b9\u5f0f\u5c55\u793a\u51fd\u6570\u8c03\u7528\u7684\u5c42\u6b21\u5173\u7cfb \u3002\u5b83\u4e0d\u4ec5\u80fd\u591f\u663e\u793a\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\uff0c\u8fd8\u80fd\u6e05\u6670\u5730\u5448\u73b0\u51fa\u51fd\u6570\u4e4b\u95f4\u7684\u5d4c\u5957\u5173\u7cfb\uff0c\u5c31\u50cf\u4e00\u5e45\u8be6\u7ec6\u7684\u4f5c\u6218\u5730\u56fe\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u5bf9\u51fd\u6570\u8c03\u7528\u7684\u6574\u4f53\u7ed3\u6784\u6709\u66f4\u5168\u9762\u7684\u8ba4\u8bc6\u3002\u6bd4\u5982\uff0c\u5728\u4e00\u4e2a\u7f51\u7edc\u6570\u636e\u5305\u5904\u7406\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u6d89\u53ca\u5230\u591a\u4e2a\u5c42\u6b21\u7684\u51fd\u6570\u8c03\u7528\uff0c\u4ece\u7f51\u7edc\u9a71\u52a8\u5c42\u7684\u63a5\u6536\u51fd\u6570\uff0c\u5230\u7f51\u7edc\u534f\u8bae\u6808\u4e2d\u7684\u5404\u4e2a\u5904\u7406\u51fd\u6570\uff0c\u518d\u5230\u5e94\u7528\u5c42\u7684\u56de\u8c03\u51fd\u6570\u3002Function graph tracer \u53ef\u4ee5\u5c06\u8fd9\u4e9b\u51fd\u6570\u7684\u8c03\u7528\u5173\u7cfb\u4ee5\u56fe\u5f62\u7684\u5f62\u5f0f\u5c55\u793a\u51fa\u6765\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u8fc5\u901f\u5b9a\u4f4d\u5230\u5173\u952e\u51fd\u6570\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u65b9\u4fbf\u8fdb\u884c\u6027\u80fd\u4f18\u5316\u548c\u95ee\u9898\u6392\u67e5\u3002\\r\\n\\r\\nSchedule switch tracer\uff08\u8c03\u5ea6\u5207\u6362\u8ddf\u8e2a\u5668\uff09\u4e3b\u8981\u8d1f\u8d23\u8ddf\u8e2a\u8fdb\u7a0b\u7684\u8c03\u5ea6\u60c5\u51b5 \uff0c\u5b83\u80fd\u591f\u8bb0\u5f55\u4e0b\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u4f55\u65f6\u8fdb\u884c\u4e86\u5207\u6362\uff0c\u4ee5\u53ca\u5207\u6362\u7684\u539f\u56e0\u3002\u5728\u591a\u4efb\u52a1\u7684 Linux \u7cfb\u7edf\u4e2d\uff0c\u8fdb\u7a0b\u8c03\u5ea6\u662f\u4e00\u4e2a\u5173\u952e\u7684\u73af\u8282\uff0c\u8fdb\u7a0b\u7684\u9891\u7e41\u5207\u6362\u53ef\u80fd\u4f1a\u5e26\u6765\u989d\u5916\u7684\u5f00\u9500\uff0c\u5f71\u54cd\u7cfb\u7edf\u6027\u80fd\u3002\u901a\u8fc7\u5206\u6790 Schedule switch tracer \u7684\u8ddf\u8e2a\u6570\u636e\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4e86\u89e3\u5230\u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u8c03\u5ea6\u7684\u9891\u7e41\u7a0b\u5ea6\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e0d\u5408\u7406\u7684\u8c03\u5ea6\u7b56\u7565\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u8fdb\u7a0b\u9891\u7e41\u5730\u88ab\u8c03\u5ea6\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u8be5\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u8bbe\u7f6e\u4e0d\u5408\u7406\uff0c\u6216\u8005\u662f\u56e0\u4e3a\u5b83\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u8d44\u6e90\u7ade\u4e89\u7b49\u95ee\u9898\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u636e\u6b64\u8fdb\u884c\u9488\u5bf9\u6027\u7684\u8c03\u6574\u548c\u4f18\u5316\u3002\\r\\n\\r\\nWakeup tracer\uff08\u5524\u9192\u8ddf\u8e2a\u5668\uff09\u4e13\u6ce8\u4e8e\u8ddf\u8e2a\u8fdb\u7a0b\u7684\u8c03\u5ea6\u5ef6\u8fdf \uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u5b9e\u65f6\u8fdb\u7a0b\uff0c\u5b83\u80fd\u591f\u8bb0\u5f55\u4e0b\u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b\u4ece\u8fdb\u5165\u5c31\u7eea\u72b6\u6001\u5230\u83b7\u5f97 CPU \u7684\u5ef6\u8fdf\u65f6\u95f4\u3002\u5728\u5b9e\u65f6\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u8fdb\u7a0b\u7684\u54cd\u5e94\u65f6\u95f4\u6709\u7740\u4e25\u683c\u7684\u8981\u6c42\uff0c\u54ea\u6015\u662f\u5fae\u5c0f\u7684\u8c03\u5ea6\u5ef6\u8fdf\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e25\u91cd\u7684\u540e\u679c\u3002Wakeup tracer \u5c31\u50cf\u662f\u4e00\u4e2a\u7cbe\u51c6\u7684\u8ba1\u65f6\u5668\uff0c\u80fd\u591f\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u51c6\u786e\u5730\u6d4b\u91cf\u51fa\u8c03\u5ea6\u5ef6\u8fdf\uff0c\u4ece\u800c\u627e\u51fa\u5bfc\u81f4\u5ef6\u8fdf\u7684\u539f\u56e0\uff0c\u6bd4\u5982\u662f\u5426\u5b58\u5728\u5176\u4ed6\u8fdb\u7a0b\u5360\u7528\u4e86\u8fc7\u591a\u7684 CPU \u8d44\u6e90\uff0c\u6216\u8005\u662f\u5185\u6838\u8c03\u5ea6\u7b97\u6cd5\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5b58\u5728\u7f3a\u9677\u7b49\u3002\u901a\u8fc7\u4f18\u5316\u8fd9\u4e9b\u95ee\u9898\uff0c\u53ef\u4ee5\u63d0\u9ad8\u5b9e\u65f6\u7cfb\u7edf\u7684\u54cd\u5e94\u6027\u80fd\uff0c\u786e\u4fdd\u5173\u952e\u4efb\u52a1\u80fd\u591f\u53ca\u65f6\u5f97\u5230\u5904\u7406\u3002\\r\\n\\r\\nIrqsoff tracer\uff08\u4e2d\u65ad\u5173\u95ed\u8ddf\u8e2a\u5668\uff09\u5219\u662f\u4e13\u95e8\u7528\u4e8e\u8ddf\u8e2a\u5185\u6838\u4e2d\u4e2d\u65ad\u88ab\u7981\u6b62\u7684\u60c5\u51b5 \u3002\u5f53\u4e2d\u65ad\u88ab\u7981\u6b62\u65f6\uff0c\u7cfb\u7edf\u65e0\u6cd5\u53ca\u65f6\u54cd\u5e94\u5916\u90e8\u4e8b\u4ef6\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u54cd\u5e94\u5ef6\u8fdf\uff0c\u5f71\u54cd\u7528\u6237\u4f53\u9a8c\u3002Irqsoff tracer \u4f1a\u8bb0\u5f55\u4e0b\u54ea\u4e9b\u51fd\u6570\u7981\u6b62\u4e86\u4e2d\u65ad\uff0c\u5e76\u4e14\u4f1a\u7279\u522b\u6807\u793a\u51fa\u4e2d\u65ad\u7981\u6b62\u65f6\u95f4\u6700\u957f\u7684\u51fd\u6570\uff0c\u5c31\u50cf\u4e00\u4e2a \u201c\u7f6a\u9b41\u7978\u9996\u63a2\u6d4b\u5668\u201d\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u8fc5\u901f\u5b9a\u4f4d\u5230\u90a3\u4e9b\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u54cd\u5e94\u95ee\u9898\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u5b9e\u65f6\u63a7\u5236\u7cfb\u7edf\u4e2d\uff0c\u5982\u679c\u67d0\u4e2a\u51fd\u6570\u957f\u65f6\u95f4\u7981\u6b62\u4e2d\u65ad\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4f20\u611f\u5668\u6570\u636e\u65e0\u6cd5\u53ca\u65f6\u91c7\u96c6\u548c\u5904\u7406\uff0c\u4ece\u800c\u5f71\u54cd\u7cfb\u7edf\u7684\u63a7\u5236\u7cbe\u5ea6\u3002\u901a\u8fc7\u4f7f\u7528 Irqsoff tracer\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u53ca\u65f6\u53d1\u73b0\u5e76\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u9760\u6027\u3002\\r\\n\\r\\n\u9664\u4e86\u4e0a\u8ff0\u51e0\u79cd\u5e38\u89c1\u7684 tracer\uff0cftrace \u8fd8\u652f\u6301 Branch tracer\uff08\u5206\u652f\u8ddf\u8e2a\u5668\uff09\uff0c\u7528\u4e8e\u8ddf\u8e2a\u5185\u6838\u7a0b\u5e8f\u4e2d\u7684\u5206\u652f\u9884\u6d4b\u547d\u4e2d\u7387\u60c5\u51b5\uff0c\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u4f18\u5316\u7a0b\u5e8f\u7684\u6267\u884c\u8def\u5f84\uff1bHardware branch tracer\uff08\u786c\u4ef6\u5206\u652f\u8ddf\u8e2a\u5668\uff09\uff0c\u5229\u7528\u5904\u7406\u5668\u7684\u5206\u652f\u8ddf\u8e2a\u80fd\u529b\uff0c\u5b9e\u73b0\u786c\u4ef6\u7ea7\u522b\u7684\u6307\u4ee4\u8df3\u8f6c\u8bb0\u5f55\uff1bInitcall tracer\uff08\u521d\u59cb\u5316\u8c03\u7528\u8ddf\u8e2a\u5668\uff09\uff0c\u8bb0\u5f55\u7cfb\u7edf\u5728\u542f\u52a8\u9636\u6bb5\u6240\u8c03\u7528\u7684\u521d\u59cb\u5316\u51fd\u6570\uff1bMmiotrace tracer\uff08\u5185\u5b58\u6620\u5c04 I/O \u8ddf\u8e2a\u5668\uff09\uff0c\u8bb0\u5f55\u5185\u5b58\u6620\u5c04 I/O \u7684\u76f8\u5173\u4fe1\u606f\uff1b\\r\\n\\r\\nPower tracer\uff08\u7535\u6e90\u8ddf\u8e2a\u5668\uff09\uff0c\u8bb0\u5f55\u7cfb\u7edf\u7535\u6e90\u7ba1\u7406\u76f8\u5173\u7684\u4fe1\u606f\uff1bSysprof tracer\uff08\u7cfb\u7edf\u6027\u80fd\u5206\u6790\u8ddf\u8e2a\u5668\uff09\uff0c\u5b9a\u671f\u5bf9\u5185\u6838\u8fdb\u884c\u91c7\u6837\uff0c\u8bb0\u5f55\u51fd\u6570\u8c03\u7528\u548c\u5806\u6808\u4fe1\u606f\uff1bKernel memory tracer\uff08\u5185\u6838\u5185\u5b58\u8ddf\u8e2a\u5668\uff09\uff0c\u8ddf\u8e2a\u5185\u6838\u5185\u5b58\u5206\u914d\u5668\u7684\u5206\u914d\u60c5\u51b5\uff0c\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u5206\u6790\u5185\u5b58\u788e\u7247\u95ee\u9898\uff1bWorkqueue statistical tracer\uff08\u5de5\u4f5c\u961f\u5217\u7edf\u8ba1\u8ddf\u8e2a\u5668\uff09\uff0c\u7edf\u8ba1\u7cfb\u7edf\u4e2d\u6240\u6709\u5de5\u4f5c\u961f\u5217\u7684\u5de5\u4f5c\u60c5\u51b5\uff0c\u8f85\u52a9\u5f00\u53d1\u4eba\u5458\u9009\u62e9\u5408\u9002\u7684\u5de5\u4f5c\u961f\u5217\u5b9e\u73b0\u65b9\u5f0f\uff1bEvent tracer\uff08\u4e8b\u4ef6\u8ddf\u8e2a\u5668\uff09\uff0c\u8ddf\u8e2a\u7cfb\u7edf\u4e2d\u7684\u5404\u79cd\u4e8b\u4ef6\uff0c\u5982\u5b9a\u65f6\u5668\u3001\u7cfb\u7edf\u8c03\u7528\u3001\u4e2d\u65ad\u7b49\u3002\u8fd9\u4e9b\u4e30\u5bcc\u7684 tracer \u7c7b\u578b\uff0c\u4f7f\u5f97 ftrace \u80fd\u591f\u6ee1\u8db3\u4e0d\u540c\u573a\u666f\u4e0b\u7684\u6027\u80fd\u5206\u6790\u548c\u6545\u969c\u8c03\u8bd5\u9700\u6c42\uff0c\u6210\u4e3a Linux \u5185\u6838\u5f00\u53d1\u548c\u7ef4\u62a4\u7684\u5f97\u529b\u52a9\u624b\u3002\\r\\n\\r\\n## 2.2\u8f7b\u91cf\u7ea7\u4e0e\u7a33\u5b9a\u6027\\r\\n\\r\\nftrace \u5728\u8bbe\u8ba1\u4e0a\u91c7\u7528\u4e86\u9759\u6001\u4ee3\u7801\u63d2\u88c5\u6280\u672f\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5177\u6709\u663e\u8457\u7684\u8f7b\u91cf\u7ea7\u7279\u6027\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u9759\u6001\u4ee3\u7801\u63d2\u88c5\u5c31\u662f\u5728\u7f16\u8bd1\u5185\u6838\u65f6\uff0c\u5c06\u4e00\u4e9b\u7279\u5b9a\u7684\u4ee3\u7801\u7247\u6bb5\u63d2\u5165\u5230\u5185\u6838\u51fd\u6570\u4e2d\uff0c\u8fd9\u4e9b\u4ee3\u7801\u7247\u6bb5\u5c31\u50cf\u662f\u9884\u5148\u8bbe\u7f6e\u597d\u7684 \u201c\u5c0f\u63a2\u9488\u201d\uff0c\u80fd\u591f\u5728\u51fd\u6570\u6267\u884c\u65f6\u6536\u96c6\u76f8\u5173\u4fe1\u606f\u3002\u4e0e\u5176\u4ed6\u4e00\u4e9b\u52a8\u6001\u8ddf\u8e2a\u6280\u672f\u76f8\u6bd4\uff0cftrace \u7684\u9759\u6001\u4ee3\u7801\u63d2\u88c5\u65b9\u5f0f\u4e0d\u9700\u8981\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u590d\u6742\u7684\u52a8\u6001\u5206\u6790\u548c\u4ee3\u7801\u6ce8\u5165\uff0c\u56e0\u6b64\u4ee3\u7801\u91cf\u76f8\u5bf9\u8f83\u5c0f\uff0c\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u5360\u7528\u4e5f\u975e\u5e38\u4f4e\u3002\u5728\u4e00\u4e2a\u9ad8\u8d1f\u8f7d\u7684\u670d\u52a1\u5668\u73af\u5883\u4e2d\uff0c\u7cfb\u7edf\u8d44\u6e90\u5341\u5206\u5b9d\u8d35\uff0c\u4f7f\u7528 ftrace \u8fdb\u884c\u6027\u80fd\u5206\u6790\u65f6\uff0c\u5b83\u51e0\u4e4e\u4e0d\u4f1a\u5bf9\u7cfb\u7edf\u7684\u6b63\u5e38\u8fd0\u884c\u4ea7\u751f\u660e\u663e\u7684\u5f71\u54cd\uff0c\u5c31\u50cf\u4e00\u4e2a\u5b89\u9759\u7684\u89c2\u5bdf\u8005\uff0c\u9ed8\u9ed8\u5730\u8bb0\u5f55\u7740\u7cfb\u7edf\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u800c\u4e0d\u4f1a\u5e72\u6270\u7cfb\u7edf\u7684\u6b63\u5e38\u5de5\u4f5c\u8282\u594f\u3002\\r\\n\\r\\n\u8fd9\u79cd\u9759\u6001\u4ee3\u7801\u63d2\u88c5\u6280\u672f\u8fd8\u8d4b\u4e88\u4e86 ftrace \u6781\u9ad8\u7684\u7a33\u5b9a\u6027 \u3002\u7531\u4e8e\u5b83\u4e0d\u9700\u8981\u652f\u6301\u590d\u6742\u7684\u7f16\u7a0b\u63a5\u53e3\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u8ddf\u8e2a\u884c\u4e3a\uff0c\u4e5f\u5c31\u51cf\u5c11\u4e86\u56e0\u7528\u6237\u4e0d\u5f53\u4f7f\u7528\u800c\u5bfc\u81f4\u5185\u6838\u5d29\u6e83\u7684\u98ce\u9669\u3002\u4e0e\u4e00\u4e9b\u529f\u80fd\u5f3a\u5927\u4f46\u8bbe\u8ba1\u590d\u6742\u7684\u8ddf\u8e2a\u5de5\u5177\uff08\u5982 SystemTap\uff09\u76f8\u6bd4\uff0cftrace \u7684\u8bbe\u8ba1\u76ee\u6807\u66f4\u52a0\u7b80\u5355\u76f4\u63a5\uff0c\u5b83\u4e13\u6ce8\u4e8e\u63d0\u4f9b\u53ef\u9760\u7684\u8ddf\u8e2a\u529f\u80fd\uff0c\u800c\u4e0d\u662f\u8ffd\u6c42\u8fc7\u4e8e\u590d\u6742\u7684\u81ea\u5b9a\u4e49\u80fd\u529b\u3002\u5728\u5b9e\u9645\u7684\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u7a33\u5b9a\u6027\u662f\u81f3\u5173\u91cd\u8981\u7684\uff0c\u4efb\u4f55\u4e00\u6b21\u7cfb\u7edf\u5d29\u6e83\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e25\u91cd\u7684\u4e1a\u52a1\u635f\u5931\u3002ftrace \u7684\u7a33\u5b9a\u53ef\u9760\u7279\u6027\uff0c\u4f7f\u5f97\u5b83\u6210\u4e3a\u4e86\u5185\u6838\u5f00\u53d1\u4eba\u5458\u548c\u7cfb\u7edf\u7ba1\u7406\u5458\u5728\u8fdb\u884c\u6027\u80fd\u5206\u6790\u548c\u6545\u969c\u6392\u67e5\u65f6\u7684\u9996\u9009\u5de5\u5177\u4e4b\u4e00\uff0c\u5c31\u50cf\u4e00\u4f4d\u503c\u5f97\u4fe1\u8d56\u7684\u8001\u4f19\u4f34\uff0c\u59cb\u7ec8\u80fd\u591f\u5728\u5173\u952e\u65f6\u523b\u63d0\u4f9b\u51c6\u786e\u53ef\u9760\u7684\u4fe1\u606f\uff0c\u5e2e\u52a9\u89e3\u51b3\u95ee\u9898\u3002\\r\\n\\r\\n##  2.3\u4fbf\u6377\u7684\u63a5\u53e3\\r\\n\\r\\nftrace \u901a\u8fc7 debugfs \u63a5\u53e3\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\uff0c\u8fd9\u4f7f\u5f97\u5b83\u7684\u4f7f\u7528\u53d8\u5f97\u975e\u5e38\u4fbf\u6377 \u3002debugfs \u662f Linux \u5185\u6838\u63d0\u4f9b\u7684\u4e00\u79cd\u7279\u6b8a\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u8c03\u8bd5\u76ee\u7684\uff0c\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u548c\u4fee\u6539\u5185\u6838\u7684\u8c03\u8bd5\u4fe1\u606f\u3002ftrace \u5229\u7528 debugfs \u6587\u4ef6\u7cfb\u7edf\uff0c\u5c06\u5176\u5404\u79cd\u63a7\u5236\u548c\u914d\u7f6e\u9009\u9879\u4ee5\u6587\u4ef6\u7684\u5f62\u5f0f\u5448\u73b0\u7ed9\u7528\u6237\uff0c\u7528\u6237\u53ea\u9700\u8981\u901a\u8fc7\u7b80\u5355\u7684\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u5bf9 ftrace \u7684\u5404\u79cd\u8bbe\u7f6e\u548c\u64cd\u4f5c\u3002\\r\\n\\r\\n\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u7528\u6237\u60f3\u8981\u4f7f\u7528 ftrace \u65f6\uff0c\u9996\u5148\u9700\u8981\u6302\u8f7d debugfs \u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u901a\u5e38\u53ea\u9700\u8981\u6267\u884c\u4e00\u6761\u7b80\u5355\u7684\u547d\u4ee4\uff0c\u5982 \u201cmount -t debugfs nodev /sys/kernel/debug\u201d\uff08\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u4e2d\uff0c\u6302\u8f7d\u70b9\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c\uff09\u3002\u6302\u8f7d\u5b8c\u6210\u540e\uff0c\u7528\u6237\u5c31\u53ef\u4ee5\u5728 \u201c/sys/kernel/debug/tracing\u201d \u76ee\u5f55\u4e0b\u627e\u5230 ftrace \u7684\u5404\u79cd\u63a7\u5236\u6587\u4ef6\u3002\\r\\n\\r\\n\u4f8b\u5982\uff0c\u201cavailable_tracers\u201d \u6587\u4ef6\u5217\u51fa\u4e86\u5f53\u524d\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u6240\u6709 tracer \u7c7b\u578b\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u8fd9\u4e2a\u6587\u4ef6\u6765\u4e86\u89e3 ftrace \u652f\u6301\u54ea\u4e9b\u8ddf\u8e2a\u529f\u80fd\uff1b\u201ccurrent_tracer\u201d \u6587\u4ef6\u5219\u7528\u4e8e\u6307\u5b9a\u5f53\u524d\u8981\u4f7f\u7528\u7684 tracer\uff0c\u7528\u6237\u53ea\u9700\u8981\u5c06\u60f3\u8981\u4f7f\u7528\u7684 tracer \u540d\u79f0\u5199\u5165\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5207\u6362\u8ddf\u8e2a\u5668\uff1b\u201ctracing_on\u201d \u6587\u4ef6\u7528\u4e8e\u63a7\u5236 ftrace \u7684\u5f00\u542f\u548c\u5173\u95ed\uff0c\u5c06 \u201c1\u201d \u5199\u5165\u8be5\u6587\u4ef6\u8868\u793a\u5f00\u542f\u8ddf\u8e2a\uff0c\u5c06 \u201c0\u201d \u5199\u5165\u5219\u8868\u793a\u5173\u95ed\u8ddf\u8e2a\uff1b\u201ctrace\u201d \u6587\u4ef6\u5219\u662f\u7528\u4e8e\u67e5\u770b ftrace \u751f\u6210\u7684\u8ddf\u8e2a\u4fe1\u606f\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 \u201ccat\u201d \u547d\u4ee4\u6765\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4ece\u800c\u83b7\u53d6\u7cfb\u7edf\u7684\u8fd0\u884c\u65f6\u884c\u4e3a\u6570\u636e\u3002\\r\\n\\r\\n\u8fd9\u79cd\u57fa\u4e8e\u6587\u4ef6\u7cfb\u7edf\u7684\u63a5\u53e3\u8bbe\u8ba1\uff0c\u4f7f\u5f97 ftrace \u7684\u4f7f\u7528\u975e\u5e38\u7075\u6d3b\u65b9\u4fbf\uff0c\u5373\u4f7f\u662f\u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u592a\u719f\u6089\u590d\u6742\u547d\u4ee4\u884c\u5de5\u5177\u7684\u7528\u6237\u6765\u8bf4\uff0c\u4e5f\u80fd\u591f\u8f7b\u677e\u4e0a\u624b\u3002\u7528\u6237\u4e0d\u9700\u8981\u5b66\u4e60\u590d\u6742\u7684\u547d\u4ee4\u8bed\u6cd5\u548c\u53c2\u6570\u8bbe\u7f6e\uff0c\u53ea\u9700\u8981\u719f\u6089\u57fa\u672c\u7684\u6587\u4ef6\u64cd\u4f5c\u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u5145\u5206\u5229\u7528 ftrace \u7684\u5f3a\u5927\u529f\u80fd\u3002\u800c\u4e14\uff0c\u7531\u4e8e ftrace \u7684\u8f93\u51fa\u4fe1\u606f\u90fd\u662f\u4ee5\u6587\u672c\u6587\u4ef6\u7684\u5f62\u5f0f\u5448\u73b0\uff0c\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u5730\u4f7f\u7528\u5404\u79cd\u6587\u672c\u5904\u7406\u5de5\u5177\u5bf9\u8ddf\u8e2a\u6570\u636e\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5206\u6790\u548c\u5904\u7406\uff0c\u5982\u4f7f\u7528 grep \u547d\u4ee4\u8fdb\u884c\u5173\u952e\u8bcd\u641c\u7d22\uff0c\u4f7f\u7528 awk \u547d\u4ee4\u8fdb\u884c\u6570\u636e\u63d0\u53d6\u548c\u7edf\u8ba1\u7b49\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u5206\u6790\u6548\u7387\u3002\\r\\n\\r\\n# \u4e09\u3001Ftrace\u7684\u5de5\u4f5c\u539f\u7406\\r\\n\\r\\n## 3.1\u63d2\u6869\u6280\u672f\\r\\n\\r\\nftrace \u7684\u5f3a\u5927\u529f\u80fd\u79bb\u4e0d\u5f00\u5176\u80cc\u540e\u7cbe\u5999\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u800c\u63d2\u6869\u6280\u672f\u5219\u662f\u5176\u5b9e\u73b0\u5185\u6838\u8ddf\u8e2a\u7684\u6838\u5fc3\u57fa\u7840\u3002\u63d2\u6869\u6280\u672f\u5c31\u50cf\u662f\u5728\u7cfb\u7edf\u8fd9\u4e2a\u5e9e\u5927\u7684\u673a\u5668\u4e2d\u5b89\u88c5\u4e86\u8bb8\u591a\u7cbe\u5bc6\u7684 \u201c\u4f20\u611f\u5668\u201d\uff0c\u8fd9\u4e9b \u201c\u4f20\u611f\u5668\u201d \u80fd\u591f\u5b9e\u65f6\u6355\u6349\u7cfb\u7edf\u8fd0\u884c\u65f6\u7684\u5404\u79cd\u4fe1\u606f\uff0c\u4e3a\u6211\u4eec\u6df1\u5165\u4e86\u89e3\u7cfb\u7edf\u5185\u90e8\u7684\u8fd0\u884c\u673a\u5236\u63d0\u4f9b\u4e86\u5173\u952e\u6570\u636e\u3002ftrace \u91c7\u7528\u4e86\u9759\u6001\u63d2\u6869\u548c\u52a8\u6001\u63d2\u6869\u4e24\u79cd\u65b9\u5f0f\uff0c\u5b83\u4eec\u5404\u6709\u7279\u70b9\uff0c\u76f8\u4e92\u914d\u5408\uff0c\u5171\u540c\u5b9e\u73b0\u4e86\u9ad8\u6548\u7684\u5185\u6838\u8ddf\u8e2a\u3002\\r\\n\\r\\n![1742998590821](./figure/1742998590821.png)\\r\\n\\r\\n![image-20250326221456688](./figure/image-20250326221456688.png)\\r\\n\\r\\n\u9759\u6001\u63d2\u6869\u662f ftrace \u5b9e\u73b0\u8ddf\u8e2a\u529f\u80fd\u7684\u57fa\u7840\u65b9\u5f0f\u4e4b\u4e00 \u3002\u5f53\u6211\u4eec\u5728 Kernel \u4e2d\u6253\u5f00 CONFIG_FUNCTION_TRACER \u529f\u80fd\u540e\uff0c\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4f1a\u589e\u52a0\u4e00\u4e2a - pg \u7684\u7f16\u8bd1\u9009\u9879\u3002\u8fd9\u4e2a\u7f16\u8bd1\u9009\u9879\u5c31\u50cf\u662f\u4e00\u4e2a\u795e\u5947\u7684 \u201c\u6307\u4ee4\u6ce8\u5165\u5668\u201d\uff0c\u5b83\u4f1a\u5728\u6bcf\u4e2a\u51fd\u6570\u5165\u53e3\u5904\u63d2\u5165\u4e00\u6761 bl mcount \u8df3\u8f6c\u6307\u4ee4\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5f53\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u51fd\u6570\u8fd0\u884c\u65f6\uff0c\u90fd\u4f1a\u5148\u8df3\u8f6c\u5230 mcount \u51fd\u6570\u3002\u5728 mcount \u51fd\u6570\u4e2d\uff0c\u4f1a\u5224\u65ad\u51fd\u6570\u6307\u9488 ftrace_trace_function \u662f\u5426\u88ab\u6ce8\u518c\uff0c\u9ed8\u8ba4\u6ce8\u518c\u7684\u662f\u7a7a\u51fd\u6570 ftrace_stub\uff0c\u53ea\u6709\u6253\u5f00 function tracer \u540e\u624d\u4f1a\u6ce8\u518c\u5177\u4f53\u7684\u5904\u7406\u51fd\u6570 ftrace_trace_function\u3002\\r\\n\\r\\n\u8fd9\u79cd\u9759\u6001\u63d2\u6869\u7684\u65b9\u5f0f\uff0c\u5c31\u50cf\u662f\u5728\u6bcf\u4e2a\u51fd\u6570\u7684\u5fc5\u7ecf\u4e4b\u8def\u4e0a\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u56fa\u5b9a\u7684 \u201c\u68c0\u67e5\u70b9\u201d\uff0c\u65e0\u8bba\u51fd\u6570\u4f55\u65f6\u88ab\u8c03\u7528\uff0c\u90fd\u5fc5\u987b\u7ecf\u8fc7\u8fd9\u4e2a \u201c\u68c0\u67e5\u70b9\u201d\uff0c\u4ece\u800c\u5b9e\u73b0\u5bf9\u6240\u6709\u51fd\u6570\u8c03\u7528\u7684\u8ddf\u8e2a\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u80fd\u591f\u5168\u9762\u5730\u8ddf\u8e2a\u51fd\u6570\u8c03\u7528\uff0c\u4f46\u4e5f\u5e26\u6765\u4e86\u4e00\u5b9a\u7684\u6027\u80fd\u5f00\u9500\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u90fd\u8981\u989d\u5916\u6267\u884c\u4e00\u6b21\u8df3\u8f6c\u548c\u5224\u65ad\u64cd\u4f5c\uff0c\u8fd9\u5728\u9ad8\u8d1f\u8f7d\u7684\u7cfb\u7edf\u4e2d\u53ef\u80fd\u4f1a\u5bf9\u6027\u80fd\u4ea7\u751f\u660e\u663e\u7684\u5f71\u54cd\u3002\\r\\n\\r\\n\u4e3a\u4e86\u89e3\u51b3\u9759\u6001\u63d2\u6869\u5e26\u6765\u7684\u6027\u80fd\u95ee\u9898\uff0c\u5f00\u53d1\u8005\u4eec\u63a8\u51fa\u4e86 Dynamic ftrace\uff0c\u5373\u52a8\u6001\u63d2\u6869\u6280\u672f \u3002\u52a8\u6001\u63d2\u6869\u6280\u672f\u7684\u6838\u5fc3\u601d\u60f3\u662f\u52a8\u6001\u4fee\u6539\u51fd\u6570\u6307\u4ee4\uff0c\u4ee5\u5b9e\u73b0\u66f4\u52a0\u7075\u6d3b\u548c\u9ad8\u6548\u7684\u8ddf\u8e2a\u3002\u5728\u7f16\u8bd1\u65f6\uff0c\u7cfb\u7edf\u4f1a\u8bb0\u5f55\u6240\u6709\u88ab\u6dfb\u52a0\u8df3\u8f6c\u6307\u4ee4\uff08\u5373\u652f\u6301\u8ffd\u8e2a\uff09\u7684\u51fd\u6570\u3002\\r\\n\\r\\n\u5728\u5185\u6838\u542f\u52a8\u65f6\uff0c\u8fd9\u4e9b\u51fd\u6570\u5165\u53e3\u5904\u7684\u8df3\u8f6c\u6307\u4ee4\u4f1a\u88ab\u66ff\u6362\u4e3a nop \u6307\u4ee4\uff08nop \u6307\u4ee4\u662f\u4e00\u79cd\u7a7a\u64cd\u4f5c\u6307\u4ee4\uff0c\u6267\u884c\u5b83\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u5b9e\u9645\u7684\u8fd0\u7b97\u6216\u64cd\u4f5c\uff0c\u4ec5\u5360\u7528\u4e00\u4e2a\u6307\u4ee4\u5468\u671f\uff09\uff0c\u8fd9\u6837\u5728\u975e\u8c03\u8bd5\u72b6\u6001\u4e0b\uff0c\u51fd\u6570\u7684\u6267\u884c\u5c31\u4e0d\u4f1a\u53d7\u5230\u989d\u5916\u7684\u6027\u80fd\u635f\u8017\uff0c\u5c31\u50cf\u5728\u9ad8\u901f\u516c\u8def\u4e0a\u53d6\u6d88\u4e86\u6240\u6709\u4e0d\u5fc5\u8981\u7684\u6536\u8d39\u7ad9\uff0c\u8f66\u8f86\u53ef\u4ee5\u7545\u884c\u65e0\u963b\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u8fd0\u884c\u6548\u7387\u3002\u800c\u5f53\u9700\u8981\u8fdb\u884c\u8ddf\u8e2a\u65f6\uff0c\u6839\u636e function tracer \u7684\u8bbe\u7f6e\uff0c\u7cfb\u7edf\u4f1a\u52a8\u6001\u5730\u5c06\u88ab\u8c03\u8bd5\u51fd\u6570\u7684 nop \u6307\u4ee4\u66ff\u6362\u4e3a\u8df3\u8f6c\u6307\u4ee4\uff0c\u4ece\u800c\u5b9e\u73b0\u5bf9\u7279\u5b9a\u51fd\u6570\u7684\u8ffd\u8e2a\u3002\\r\\n\\r\\n\u8fd9\u79cd\u52a8\u6001\u63d2\u6869\u7684\u65b9\u5f0f\uff0c\u5c31\u50cf\u662f\u4e00\u4e2a\u667a\u80fd\u7684 \u201c\u4ea4\u901a\u7ba1\u5236\u7cfb\u7edf\u201d\uff0c\u53ea\u6709\u5728\u9700\u8981\u76d1\u63a7\u67d0\u4e9b\u7279\u5b9a \u201c\u8f66\u8f86\u201d\uff08\u51fd\u6570\uff09\u65f6\uff0c\u624d\u4f1a\u5728\u5176\u884c\u9a76\u8def\u5f84\u4e0a\u8bbe\u7f6e \u201c\u68c0\u67e5\u70b9\u201d\uff0c\u800c\u5728\u5176\u4ed6\u65f6\u5019\uff0c\u9053\u8def\u5219\u4fdd\u6301\u7545\u901a\uff0c\u65e2\u5b9e\u73b0\u4e86\u8ddf\u8e2a\u529f\u80fd\uff0c\u53c8\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u4e86\u5bf9\u7cfb\u7edf\u6027\u80fd\u7684\u5f71\u54cd\u3002\\r\\n\\r\\n## 3.2\u6570\u636e\u8bb0\u5f55\u4e0e\u5b58\u50a8\\r\\n\\r\\n\u5f53 ftrace \u901a\u8fc7\u63d2\u6869\u6280\u672f\u5728\u51fd\u6570\u5165\u53e3\u5904\u8bbe\u7f6e\u597d \u201c\u4f20\u611f\u5668\u201d \u540e\uff0c\u63a5\u4e0b\u6765\u5c31\u9700\u8981\u8003\u8651\u5982\u4f55\u8bb0\u5f55\u8fd9\u4e9b\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u6570\u636e\uff0c\u5e76\u5c06\u8fd9\u4e9b\u5b9d\u8d35\u7684\u4fe1\u606f\u5b58\u50a8\u8d77\u6765\uff0c\u4ee5\u4fbf\u540e\u7eed\u7684\u5206\u6790\u548c\u5904\u7406\u3002\\r\\n\\r\\n\u5728\u5f00\u542f ftrace \u7684\u8ddf\u8e2a\u529f\u80fd\u540e\uff0c\u9996\u5148\u4f1a\u6253\u5f00\u7f16\u8bd1\u9009\u9879 -pg\uff0c\u4e3a\u6bcf\u4e2a\u51fd\u6570\u90fd\u589e\u52a0\u8df3\u8f6c\u6307\u4ee4\uff0c\u8fd9\u5c31\u50cf\u662f\u4e3a\u6bcf\u4e2a\u51fd\u6570\u90fd\u5b89\u88c5\u4e86\u4e00\u4e2a \u201c\u6570\u636e\u91c7\u96c6\u5668\u201d\uff0c\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u201c\u6570\u636e\u91c7\u96c6\u5668\u201d \u5c31\u4f1a\u88ab\u89e6\u53d1\u3002\\r\\n\\r\\n\u7136\u540e\uff0c\u7cfb\u7edf\u4f1a\u8bb0\u5f55\u8fd9\u4e9b\u53ef\u8ffd\u8e2a\u7684\u51fd\u6570\uff0c\u5e76\u4e3a\u4e86\u51cf\u5c11\u6027\u80fd\u6d88\u8017\uff0c\u5c06\u8df3\u8f6c\u51fd\u6570\u66ff\u6362\u4e3a nop \u6307\u4ee4\uff0c\u5c31\u50cf\u6682\u65f6\u5173\u95ed\u4e86\u8fd9\u4e9b \u201c\u6570\u636e\u91c7\u96c6\u5668\u201d\uff0c\u8ba9\u7cfb\u7edf\u80fd\u591f\u9ad8\u6548\u8fd0\u884c\u3002\u800c\u5f53\u9700\u8981\u8fdb\u884c\u8ddf\u8e2a\u65f6\uff0c\u901a\u8fc7 flag \u6807\u5fd7\u4f4d\u6765\u52a8\u6001\u7ba1\u7406\uff0c\u5c06\u9700\u8981\u8ffd\u8e2a\u7684\u51fd\u6570\u9884\u7559\u7684 nop \u6307\u4ee4\u66ff\u6362\u56de\u8ffd\u8e2a\u6307\u4ee4\uff0c\u6b64\u65f6 \u201c\u6570\u636e\u91c7\u96c6\u5668\u201d \u91cd\u65b0\u542f\u52a8\uff0c\u5f00\u59cb\u8bb0\u5f55\u8c03\u8bd5\u4fe1\u606f\uff0c\u5305\u62ec\u51fd\u6570\u7684\u8c03\u7528\u65f6\u95f4\u3001\u8c03\u7528\u53c2\u6570\u3001\u8fd4\u56de\u503c\u7b49\u5173\u952e\u4fe1\u606f\u3002\\r\\n\\r\\nftrace \u5c06\u8fd9\u4e9b\u8ffd\u8e2a\u4fe1\u606f\u5b58\u50a8\u5230 Ring buffer \u7f13\u51b2\u533a\u4e2d \u3002Ring buffer \u662f\u4e00\u79cd\u73af\u5f62\u7f13\u51b2\u533a\uff0c\u5b83\u5c31\u50cf\u662f\u4e00\u4e2a\u5faa\u73af\u7684 \u201c\u6570\u636e\u4ed3\u5e93\u201d\uff0c\u5177\u6709\u56fa\u5b9a\u7684\u5927\u5c0f\u3002\u5f53\u8ffd\u8e2a\u4fe1\u606f\u4ea7\u751f\u65f6\uff0c\u4f1a\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u5199\u5165 Ring buffer \u4e2d\u3002\u5f53\u7f13\u51b2\u533a\u88ab\u586b\u6ee1\u540e\uff0c\u65b0\u4ea7\u751f\u7684\u8ffd\u8e2a\u4fe1\u606f\u4f1a\u8986\u76d6\u6700\u65e9\u5199\u5165\u7684\u4fe1\u606f\uff0c\u5c31\u50cf\u4e00\u4e2a\u4e0d\u65ad\u5faa\u73af\u7684\u4f20\u9001\u5e26\uff0c\u59cb\u7ec8\u4fdd\u6301\u6700\u65b0\u7684\u8ffd\u8e2a\u6570\u636e\u5728\u7f13\u51b2\u533a\u4e2d\u3002\u8fd9\u79cd\u8bbe\u8ba1\u65b9\u5f0f\u65e2\u4fdd\u8bc1\u4e86\u8ffd\u8e2a\u4fe1\u606f\u7684\u5b9e\u65f6\u6027\uff0c\u53c8\u907f\u514d\u4e86\u56e0\u7f13\u51b2\u533a\u6ea2\u51fa\u800c\u5bfc\u81f4\u7684\u6570\u636e\u4e22\u5931\u95ee\u9898\u3002\\r\\n\\r\\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6 Ring buffer \u4e2d\u7684\u6570\u636e\uff0c\u6765\u83b7\u53d6\u7cfb\u7edf\u7684\u8fd0\u884c\u65f6\u884c\u4e3a\u4fe1\u606f\uff0c\u4e3a\u6027\u80fd\u5206\u6790\u548c\u6545\u969c\u6392\u67e5\u63d0\u4f9b\u6709\u529b\u7684\u652f\u6301\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6790\u7cfb\u7edf\u6027\u80fd\u74f6\u9888\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4ece Ring buffer \u4e2d\u8bfb\u53d6\u51fd\u6570\u8c03\u7528\u7684\u65f6\u95f4\u4fe1\u606f\uff0c\u627e\u51fa\u90a3\u4e9b\u6267\u884c\u65f6\u95f4\u8f83\u957f\u7684\u51fd\u6570\uff0c\u8fdb\u800c\u6df1\u5165\u5206\u6790\u8fd9\u4e9b\u51fd\u6570\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u627e\u51fa\u6027\u80fd\u74f6\u9888\u6240\u5728\uff1b\u5728\u6392\u67e5\u7cfb\u7edf\u6545\u969c\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8bfb\u53d6\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u4fe1\u606f\uff0c\u5224\u65ad\u51fd\u6570\u662f\u5426\u5728\u67d0\u4e9b\u7279\u5b9a\u53c2\u6570\u4e0b\u51fa\u73b0\u5f02\u5e38\uff0c\u4ece\u800c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u7684\u6839\u6e90\u3002\\r\\n\\r\\n# \u56db\u3001Ftrace\u7684\u4f7f\u7528\u65b9\u6cd5\\r\\n\\r\\n##  4.1\u5185\u6838\u914d\u7f6e\\r\\n\\r\\n\u5728\u4f7f\u7528 ftrace \u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u786e\u4fdd\u5185\u6838\u914d\u7f6e\u4e2d\u542f\u7528\u4e86\u76f8\u5173\u9009\u9879\u3002\u8fd9\u4e00\u6b65\u81f3\u5173\u91cd\u8981\uff0c\u5c31\u50cf\u642d\u5efa\u4e00\u5ea7\u623f\u5b50\uff0c\u5185\u6838\u914d\u7f6e\u662f\u57fa\u77f3\uff0c\u53ea\u6709\u6253\u597d\u4e86\u57fa\u7840\uff0cftrace \u624d\u80fd\u6b63\u5e38\u53d1\u6325\u5176\u5f3a\u5927\u7684\u529f\u80fd\u3002\u4e3b\u8981\u7684\u914d\u7f6e\u9009\u9879\u5305\u62ec\uff1a\\r\\n\\r\\n- CONFIG_FTRACE\uff1a\u8fd9\u662f ftrace \u7684\u6838\u5fc3\u914d\u7f6e\u9009\u9879\uff0c\u5b83\u5c31\u50cf\u662f ftrace \u7684\u603b\u5f00\u5173\uff0c\u53ea\u6709\u5f00\u542f\u4e86\u8fd9\u4e2a\u9009\u9879\uff0cftrace \u7684\u5176\u4ed6\u529f\u80fd\u624d\u80fd\u5f97\u4ee5\u542f\u7528\u3002\u5982\u679c\u6ca1\u6709\u542f\u7528 CONFIG_FTRACE\uff0c\u90a3\u4e48\u540e\u7eed\u7684\u4e00\u5207\u914d\u7f6e\u548c\u64cd\u4f5c\u90fd\u5c06\u65e0\u6cd5\u8fdb\u884c\uff0c\u5c31\u5982\u540c\u6ca1\u6709\u542f\u52a8\u53d1\u52a8\u673a\u7684\u6c7d\u8f66\uff0c\u65e0\u8bba\u591a\u4e48\u7cbe\u7f8e\u7684\u5185\u9970\u548c\u5148\u8fdb\u7684\u914d\u7f6e\u90fd\u65e0\u6cd5\u8ba9\u5b83\u884c\u9a76\u8d77\u6765\u3002\u5728\u7f16\u8bd1\u5185\u6838\u65f6\uff0c\u901a\u8fc7 make menuconfig \u547d\u4ee4\u8fdb\u5165\u5185\u6838\u914d\u7f6e\u754c\u9762\uff0c\u5728 \u201cKernel hacking ---\x3e Tracers ---\x3e\u201d \u8def\u5f84\u4e0b\uff0c\u53ef\u4ee5\u627e\u5230 CONFIG_FTRACE \u9009\u9879\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a \u201c[*]\u201d\uff0c\u8868\u793a\u542f\u7528\u8be5\u9009\u9879\u3002\\r\\n- CONFIG_FUNCTION_TRACER\uff1a\u6b64\u9009\u9879\u7528\u4e8e\u542f\u7528\u51fd\u6570\u8ddf\u8e2a\u529f\u80fd\uff0c\u5b83\u662f ftrace \u4e2d\u6700\u5e38\u7528\u7684\u529f\u80fd\u4e4b\u4e00\u3002\u4e00\u65e6\u542f\u7528\uff0cftrace \u5c31\u80fd\u591f\u8ddf\u8e2a\u5185\u6838\u4e2d\u51fd\u6570\u7684\u8c03\u7528\u60c5\u51b5\uff0c\u8bb0\u5f55\u51fd\u6570\u7684\u8c03\u7528\u65f6\u95f4\u3001\u8c03\u7528\u53c2\u6570\u7b49\u5173\u952e\u4fe1\u606f\u3002\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\uff0c\u8fd9\u4e9b\u4fe1\u606f\u5c31\u50cf\u662f\u6253\u5f00\u7cfb\u7edf\u5185\u90e8\u5965\u79d8\u7684\u94a5\u5319\uff0c\u80fd\u591f\u5e2e\u52a9\u4ed6\u4eec\u6df1\u5165\u4e86\u89e3\u7cfb\u7edf\u7684\u8fd0\u884c\u673a\u5236\uff0c\u6392\u67e5\u5404\u79cd\u6f5c\u5728\u7684\u95ee\u9898\u3002\u5728\u4e0a\u8ff0\u5185\u6838\u914d\u7f6e\u754c\u9762\u4e2d\uff0c\u627e\u5230 \u201c[*] Kernel Function Tracer\u201d \u9009\u9879\uff0c\u5c06\u5176\u9009\u4e2d\u5373\u53ef\u542f\u7528\u51fd\u6570\u8ddf\u8e2a\u529f\u80fd\u3002\\r\\n- CONFIG_FUNCTION_GRAPH_TRACER\uff1a\u8fd9\u4e2a\u9009\u9879\u4e3b\u8981\u7528\u4e8e\u542f\u7528\u51fd\u6570\u8c03\u7528\u56fe\u8ddf\u8e2a\u529f\u80fd\uff0c\u5b83\u80fd\u591f\u4ee5\u56fe\u5f62\u5316\u7684\u65b9\u5f0f\u5c55\u793a\u51fd\u6570\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\uff0c\u8ba9\u5f00\u53d1\u8005\u5bf9\u7cfb\u7edf\u7684\u51fd\u6570\u8c03\u7528\u7ed3\u6784\u4e00\u76ee\u4e86\u7136\u3002\u5728\u5206\u6790\u590d\u6742\u7684\u7cfb\u7edf\u65f6\uff0c\u51fd\u6570\u8c03\u7528\u56fe\u80fd\u591f\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5b9a\u4f4d\u5173\u952e\u51fd\u6570\u548c\u5b83\u4eec\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u95ee\u9898\u6392\u67e5\u548c\u6027\u80fd\u4f18\u5316\u7684\u6548\u7387\u3002\u5728 \u201cTracers ---\x3e\u201d \u8def\u5f84\u4e0b\uff0c\u627e\u5230 \u201c[] Kernel Function Graph Tracer\u201d \u9009\u9879\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a \u201c[]\u201d\uff0c\u5373\u53ef\u542f\u7528\u51fd\u6570\u8c03\u7528\u56fe\u8ddf\u8e2a\u529f\u80fd\u3002\\r\\n- CONFIG_DYNAMIC_FTRACE\uff1a\u52a8\u6001 ftrace \u914d\u7f6e\u9009\u9879\uff0c\u5b83\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u4fee\u6539\u51fd\u6570\u6307\u4ee4\uff0c\u4ee5\u5b9e\u73b0\u66f4\u52a0\u7075\u6d3b\u7684\u8ddf\u8e2a\u3002\u901a\u8fc7\u542f\u7528\u8fd9\u4e2a\u9009\u9879\uff0cftrace \u53ef\u4ee5\u5728\u4e0d\u91cd\u65b0\u7f16\u8bd1\u5185\u6838\u7684\u60c5\u51b5\u4e0b\uff0c\u6839\u636e\u5b9e\u9645\u9700\u6c42\u52a8\u6001\u5730\u5f00\u542f\u6216\u5173\u95ed\u5bf9\u67d0\u4e9b\u51fd\u6570\u7684\u8ddf\u8e2a\uff0c\u5927\u5927\u63d0\u9ad8\u4e86 ftrace \u7684\u4f7f\u7528\u7075\u6d3b\u6027\u548c\u6548\u7387\u3002\u5728 \u201cTracers ---\x3e\u201d \u8def\u5f84\u4e0b\uff0c\u627e\u5230 \u201c[*] Dynamic ftrace\u201d \u9009\u9879\uff0c\u5c06\u5176\u9009\u4e2d\u5373\u53ef\u542f\u7528\u52a8\u6001 ftrace \u529f\u80fd\u3002\\r\\n\\r\\n\u9664\u4e86\u4e0a\u8ff0\u4e3b\u8981\u9009\u9879\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5982 CONFIG_IRQSOFF_TRACER\uff08\u7528\u4e8e\u542f\u7528\u4e2d\u65ad\u5173\u95ed\u8ddf\u8e2a\u529f\u80fd\uff09\u3001CONFIG_SCHED_TRACER\uff08\u7528\u4e8e\u542f\u7528\u8c03\u5ea6\u8ddf\u8e2a\u529f\u80fd\uff09\u7b49\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u7684\u9700\u6c42\u8fdb\u884c\u9009\u62e9\u548c\u914d\u7f6e\u3002\u4e0d\u540c\u7684\u914d\u7f6e\u9009\u9879\u5c31\u50cf\u662f\u4e0d\u540c\u7684\u5de5\u5177\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636e\u95ee\u9898\u7684\u7c7b\u578b\u548c\u5206\u6790\u7684\u76ee\u7684\uff0c\u9009\u62e9\u5408\u9002\u7684\u5de5\u5177\u6765\u8fdb\u884c\u7cfb\u7edf\u6027\u80fd\u5206\u6790\u548c\u6545\u969c\u6392\u67e5\u3002\\r\\n\\r\\n## 4.2\u6302\u8f7d debugfs \u6587\u4ef6\u7cfb\u7edf\\r\\n\\r\\n\u5728\u5b8c\u6210\u5185\u6838\u914d\u7f6e\u5e76\u6210\u529f\u7f16\u8bd1\u5185\u6838\u540e\uff0c\u63a5\u4e0b\u6765\u9700\u8981\u6302\u8f7d debugfs \u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u662f\u4f7f\u7528 ftrace \u7684\u5173\u952e\u6b65\u9aa4\u4e4b\u4e00\u3002debugfs \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u4e3a\u5185\u6838\u8c03\u8bd5\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0cftrace \u6b63\u662f\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u4e0e\u7528\u6237\u8fdb\u884c\u4ea4\u4e92\uff0c\u5c06\u5185\u6838\u7684\u8ddf\u8e2a\u4fe1\u606f\u5448\u73b0\u7ed9\u7528\u6237\u3002\\r\\n\\r\\n\u6302\u8f7d debugfs \u6587\u4ef6\u7cfb\u7edf\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a\\r\\n\\r\\n1. \u9996\u5148\uff0c\u68c0\u67e5\u7cfb\u7edf\u4e2d\u662f\u5426\u5df2\u7ecf\u6302\u8f7d\u4e86 debugfs \u6587\u4ef6\u7cfb\u7edf\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u68c0\u67e5\\r\\n\\r\\n   ```\\r\\n   mount | grep debugfs\\r\\n   ```\\r\\n\\r\\n   \u5982\u679c\u547d\u4ee4\u8f93\u51fa\u4e2d\u5305\u542b\u7c7b\u4f3c\u4e8e \u201cdebugfs /sys/kernel/debug debugfs rw,relatime 0 0\u201d \u7684\u4fe1\u606f\uff0c\u8bf4\u660e debugfs \u6587\u4ef6\u7cfb\u7edf\u5df2\u7ecf\u6302\u8f7d\uff0c\u6302\u8f7d\u70b9\u4e3a /sys/kernel/debug\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002\\r\\n\\r\\n2. \u5982\u679c debugfs \u6587\u4ef6\u7cfb\u7edf\u5c1a\u672a\u6302\u8f7d\uff0c\u5219\u9700\u8981\u624b\u52a8\u8fdb\u884c\u6302\u8f7d\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u6302\u8f7d\uff1a\\r\\n\\r\\n   ```\\r\\n   mount -t debugfs none /sys/kernel/debug\\r\\n   ```\\r\\n\\r\\n   \u5728\u8fd9\u4e2a\u547d\u4ee4\u4e2d\uff0c\u201c-t debugfs\u201d \u8868\u793a\u6307\u5b9a\u8981\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\u4e3a debugfs\uff0c\u201cnone\u201d \u8868\u793a\u4e0d\u9700\u8981\u6307\u5b9a\u8bbe\u5907\uff0c\u56e0\u4e3a debugfs \u662f\u4e00\u79cd\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u4e0d\u9700\u8981\u5b9e\u9645\u7684\u7269\u7406\u8bbe\u5907\u652f\u6301\uff0c\u201c/sys/kernel/debug\u201d \u662f\u6302\u8f7d\u70b9\uff0c\u5373\u5c06 debugfs \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5230 /sys/kernel/debug \u76ee\u5f55\u4e0b\u3002\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\u540e\uff0cdebugfs \u6587\u4ef6\u7cfb\u7edf\u5c31\u4f1a\u88ab\u6302\u8f7d\u5230\u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\uff0c\u5c31\u50cf\u5c06\u4e00\u4e2a\u88c5\u6ee1\u5de5\u5177\u7684\u5de5\u5177\u7bb1\u653e\u7f6e\u5728\u4e86\u4e00\u4e2a\u65b9\u4fbf\u53d6\u7528\u7684\u4f4d\u7f6e\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6302\u8f7d\u70b9\u6765\u8bbf\u95ee ftrace \u63d0\u4f9b\u7684\u5404\u79cd\u8c03\u8bd5\u4fe1\u606f\u548c\u63a7\u5236\u6587\u4ef6\\r\\n\\r\\n3. \u6302\u8f7d\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b /sys/kernel/debug \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6765\u9a8c\u8bc1 debugfs \u6587\u4ef6\u7cfb\u7edf\u662f\u5426\u6302\u8f7d\u6210\u529f\u3002\u5728\u8be5\u76ee\u5f55\u4e0b\uff0c\u5e94\u8be5\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u540d\u4e3a \u201ctracing\u201d \u7684\u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u5c31\u662f ftrace \u7684\u4e3b\u8981\u5de5\u4f5c\u76ee\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5404\u79cd\u7528\u4e8e\u63a7\u5236\u548c\u67e5\u770b ftrace \u8ddf\u8e2a\u4fe1\u606f\u7684\u6587\u4ef6\u3002\u5982\u679c\u80fd\u591f\u627e\u5230 \u201ctracing\u201d \u76ee\u5f55\uff0c\u8bf4\u660e debugfs \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u6210\u529f\uff0c\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\u540e\u7eed\u7684 ftrace \u914d\u7f6e\u548c\u4f7f\u7528\u64cd\u4f5c\u3002\\r\\n\\r\\n##  4.3\u5e38\u7528\u6587\u4ef6\u53ca\u64cd\u4f5c\\r\\n\\r\\n\u5404\u79cd\u63a7\u5236\u6587\u4ef6\u548c\u8ddf\u8e2a\u4fe1\u606f\u6587\u4ef6\u3002\u8fd9\u4e9b\u6587\u4ef6\u5c31\u50cf\u662f ftrace \u7684\u64cd\u4f5c\u624b\u518c\u548c\u65e5\u5fd7\u8bb0\u5f55\uff0c\u901a\u8fc7\u5bf9\u5b83\u4eec\u7684\u64cd\u4f5c\u548c\u67e5\u770b\uff0c\u7528\u6237\u53ef\u4ee5\u5b9e\u73b0\u5bf9 ftrace \u7684\u5404\u79cd\u914d\u7f6e\u548c\u8ddf\u8e2a\u4fe1\u606f\u7684\u83b7\u53d6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u6587\u4ef6\u53ca\u5176\u64cd\u4f5c\u65b9\u6cd5\uff1a\\r\\n\\r\\ntrace \u6587\u4ef6\uff1a\u8fd9\u662f ftrace \u6700\u91cd\u8981\u7684\u6587\u4ef6\u4e4b\u4e00\uff0c\u5b83\u5305\u542b\u4e86\u5f53\u524d\u7684\u8ffd\u8e2a\u5185\u5bb9\u3002\u5c31\u50cf\u4e00\u4e2a\u8be6\u7ec6\u7684\u65e5\u8bb0\uff0ctrace \u6587\u4ef6\u8bb0\u5f55\u4e86 ftrace \u8ddf\u8e2a\u5230\u7684\u6240\u6709\u5185\u6838\u51fd\u6570\u8c03\u7528\u3001\u4e8b\u4ef6\u53d1\u751f\u7b49\u4fe1\u606f\u3002\\r\\n\\r\\n\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b trace \u6587\u4ef6\u7684\u5185\u5bb9\uff1a\\r\\n\\r\\n```\\r\\ncat /sys/kernel/debug/tracing/trace\\r\\n```\\r\\n\\r\\n\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\u540e\uff0c\u7cfb\u7edf\u4f1a\u8f93\u51fa trace \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff0c\u8fd9\u4e9b\u5185\u5bb9\u901a\u5e38\u4ee5\u6587\u672c\u5f62\u5f0f\u5448\u73b0\uff0c\u5305\u62ec\u65f6\u95f4\u6233\u3001\u8fdb\u7a0b ID\u3001CPU \u7f16\u53f7\u3001\u51fd\u6570\u540d\u7b49\u4fe1\u606f\uff0c\u901a\u8fc7\u5206\u6790\u8fd9\u4e9b\u4fe1\u606f\uff0c\u7528\u6237\u53ef\u4ee5\u4e86\u89e3\u7cfb\u7edf\u7684\u8fd0\u884c\u65f6\u884c\u4e3a\uff0c\u627e\u51fa\u6f5c\u5728\u7684\u6027\u80fd\u95ee\u9898\u548c\u6545\u969c\u539f\u56e0\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5728 trace \u6587\u4ef6\u4e2d\u53d1\u73b0\u67d0\u4e2a\u51fd\u6570\u7684\u8c03\u7528\u9891\u7387\u975e\u5e38\u9ad8\uff0c\u6216\u8005\u67d0\u4e2a\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u8fc7\u957f\uff0c\u5c31\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6df1\u5165\u5206\u6790\u8fd9\u4e2a\u51fd\u6570\uff0c\u67e5\u770b\u5b83\u7684\u5b9e\u73b0\u903b\u8f91\u548c\u8c03\u7528\u53c2\u6570\uff0c\u627e\u51fa\u4f18\u5316\u7684\u65b9\u5411\u3002\\r\\n\\r\\ntracing_on \u6587\u4ef6\uff1a\u7528\u4e8e\u542f\u7528\u6216\u505c\u6b62\u8ffd\u8e2a\uff0c\u5b83\u5c31\u50cf\u662f ftrace \u7684\u542f\u52a8\u548c\u505c\u6b62\u6309\u94ae\u3002\u5c06 \u201c1\u201d \u5199\u5165 tracing_on \u6587\u4ef6\uff0c\u8868\u793a\u542f\u7528\u8ffd\u8e2a\uff0c\u6b64\u65f6 ftrace \u4f1a\u5f00\u59cb\u8bb0\u5f55\u7cfb\u7edf\u7684\u8fd0\u884c\u65f6\u4fe1\u606f\uff1b\u5c06 \u201c0\u201d \u5199\u5165\u8be5\u6587\u4ef6\uff0c\u8868\u793a\u505c\u6b62\u8ffd\u8e2a\uff0cftrace \u4f1a\u505c\u6b62\u8bb0\u5f55\u65b0\u7684\u4fe1\u606f\u3002\u3001\\r\\n\\r\\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u542f\u7528\u8ffd\u8e2a\uff1a\\r\\n\\r\\n```\\r\\necho 1 > /sys/kernel/debug/tracing/tracing_on\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u505c\u6b62\u8ffd\u8e2a\uff1a\\r\\n\\r\\n```\\r\\necho 0 > /sys/kernel/debug/tracing/tracing_on\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u7075\u6d3b\u5730\u63a7\u5236 tracing_on \u6587\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9700\u6c42\u5728\u9700\u8981\u65f6\u5f00\u542f\u8ffd\u8e2a\uff0c\u83b7\u53d6\u7cfb\u7edf\u7684\u8fd0\u884c\u4fe1\u606f\uff0c\u5728\u4e0d\u9700\u8981\u65f6\u505c\u6b62\u8ffd\u8e2a\uff0c\u51cf\u5c11\u7cfb\u7edf\u8d44\u6e90\u7684\u6d88\u8017\u3002\\r\\n\\r\\ncurrent_tracer \u6587\u4ef6\uff1a\u7528\u4e8e\u8bbe\u7f6e\u5f53\u524d\u542f\u7528\u7684 tracer\uff0c\u5b83\u5c31\u50cf\u662f ftrace \u7684\u529f\u80fd\u9009\u62e9\u5668\u3002ftrace \u652f\u6301\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 tracer\uff0c\u6bcf\u79cd tracer \u90fd\u6709\u5176\u7279\u5b9a\u7684\u529f\u80fd\u548c\u7528\u9014\uff0c\u901a\u8fc7\u8bbe\u7f6e current_tracer \u6587\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u4e0d\u540c\u7684 tracer \u6765\u6ee1\u8db3\u4e0d\u540c\u7684\u5206\u6790\u9700\u6c42\u3002\\r\\n\\r\\n\u4f8b\u5982\uff0c\u5982\u679c\u60f3\u8981\u8ddf\u8e2a\u5185\u6838\u51fd\u6570\u7684\u8c03\u7528\u60c5\u51b5\uff0c\u53ef\u4ee5\u5c06 \u201cfunction\u201d \u5199\u5165 current_tracer \u6587\u4ef6\uff1b\u5982\u679c\u60f3\u8981\u4ee5\u56fe\u5f62\u5316\u7684\u65b9\u5f0f\u67e5\u770b\u51fd\u6570\u8c03\u7528\u5173\u7cfb\uff0c\u53ef\u4ee5\u5c06 \u201cfunction_graph\u201d \u5199\u5165\u8be5\u6587\u4ef6\u3002\\r\\n\\r\\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u8bbe\u7f6e\u5f53\u524d\u542f\u7528\u7684 tracer \u4e3a function\uff1a\\r\\n\\r\\n```\\r\\necho function > /sys/kernel/debug/tracing/current_tracer\\r\\n```\\r\\n\\r\\n\u5728\u8bbe\u7f6e current_tracer \u6587\u4ef6\u540e\uff0cftrace \u4f1a\u6839\u636e\u7528\u6237\u9009\u62e9\u7684 tracer \u7c7b\u578b\u6765\u8bb0\u5f55\u548c\u5c55\u793a\u7cfb\u7edf\u7684\u8fd0\u884c\u65f6\u4fe1\u606f\u3002\\r\\n\\r\\navailable_tracers \u6587\u4ef6\uff1a\u5217\u51fa\u4e86\u5f53\u524d\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684\u6240\u6709 tracer \u7c7b\u578b\uff0c\u5b83\u5c31\u50cf\u662f ftrace \u7684\u529f\u80fd\u83dc\u5355\u3002\\r\\n\\r\\n\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b available_tracers \u6587\u4ef6\u7684\u5185\u5bb9\uff1a\\r\\n\\r\\n```\\r\\ncat /sys/kernel/debug/tracing/available_tracers\\r\\n```\\r\\n\\r\\n\u6267\u884c\u8fd9\u4e2a\u547d\u4ee4\u540e\uff0c\u7cfb\u7edf\u4f1a\u8f93\u51fa\u5f53\u524d\u7cfb\u7edf\u4e2d\u53ef\u7528\u7684 tracer \u7c7b\u578b\uff0c\u5982 function\u3001function_graph\u3001irqsoff\u3001wakeup \u7b49\u3002\u901a\u8fc7\u67e5\u770b\u8fd9\u4e2a\u6587\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u4e86\u89e3 ftrace \u652f\u6301\u54ea\u4e9b\u8ddf\u8e2a\u529f\u80fd\uff0c\u4ece\u800c\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684 tracer\u3002\\r\\n\\r\\nset_ftrace_filter \u6587\u4ef6\uff1a\u7528\u4e8e\u8bbe\u7f6e\u51fd\u6570\u8fc7\u6ee4\uff0c\u5b83\u5c31\u50cf\u662f\u4e00\u4e2a\u7b5b\u5b50\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u7b5b\u9009\u51fa\u611f\u5174\u8da3\u7684\u51fd\u6570\u8fdb\u884c\u8ddf\u8e2a\u3002\u901a\u8fc7\u5c06\u9700\u8981\u8ddf\u8e2a\u7684\u51fd\u6570\u540d\u5199\u5165 set_ftrace_filter \u6587\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u53ea\u8ba9 ftrace \u8ddf\u8e2a\u8fd9\u4e9b\u7279\u5b9a\u7684\u51fd\u6570\uff0c\u800c\u5ffd\u7565\u5176\u4ed6\u51fd\u6570\uff0c\u4ece\u800c\u51cf\u5c11\u8ddf\u8e2a\u6570\u636e\u7684\u91cf\uff0c\u63d0\u9ad8\u5206\u6790\u6548\u7387\u3002\\r\\n\\r\\n\u4f8b\u5982\uff0c\u5982\u679c\u53ea\u5bf9 \u201cvfs_open\u201d \u51fd\u6570\u611f\u5174\u8da3\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8bbe\u7f6e\u51fd\u6570\u8fc7\u6ee4\uff1a\\r\\n\\r\\n```\\r\\necho vfs_open > /sys/kernel/debug/tracing/set_ftrace_filter\\r\\n```\\r\\n\\r\\n\u8bbe\u7f6e\u5b8c\u6210\u540e\uff0cftrace \u53ea\u4f1a\u8ddf\u8e2a \u201cvfs_open\u201d \u51fd\u6570\u7684\u8c03\u7528\u60c5\u51b5\uff0c\u800c\u4e0d\u4f1a\u8bb0\u5f55\u5176\u4ed6\u51fd\u6570\u7684\u4fe1\u606f\u3002\\r\\n\\r\\nset_ftrace_pid \u6587\u4ef6\uff1a\u7528\u4e8e\u8bbe\u7f6e\u8fdb\u7a0b ID \u8fc7\u6ee4\uff0c\u5b83\u5c31\u50cf\u662f\u4e00\u4e2a\u5b9a\u4f4d\u5668\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u53ea\u8ddf\u8e2a\u7279\u5b9a\u8fdb\u7a0b\u7684\u51fd\u6570\u8c03\u7528\u3002\u5c06\u9700\u8981\u8ddf\u8e2a\u7684\u8fdb\u7a0b ID \u5199\u5165 set_ftrace_pid \u6587\u4ef6\uff0cftrace \u4f1a\u53ea\u8bb0\u5f55\u8be5\u8fdb\u7a0b\u4e2d\u51fd\u6570\u7684\u8c03\u7528\u60c5\u51b5\uff0c\u800c\u5ffd\u7565\u5176\u4ed6\u8fdb\u7a0b\u7684\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8981\u8ddf\u8e2a\u8fdb\u7a0b ID \u4e3a 1234 \u7684\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8bbe\u7f6e\u8fdb\u7a0b ID \u8fc7\u6ee4\uff1a\\r\\n\\r\\n```\\r\\necho 1234 > /sys/kernel/debug/tracing/set_ftrace_pid\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u8bbe\u7f6e\u8fdb\u7a0b ID \u8fc7\u6ee4\uff0c\u7528\u6237\u53ef\u4ee5\u66f4\u6709\u9488\u5bf9\u6027\u5730\u5206\u6790\u7279\u5b9a\u8fdb\u7a0b\u7684\u6027\u80fd\u548c\u884c\u4e3a\uff0c\u627e\u51fa\u8be5\u8fdb\u7a0b\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898\u3002\\r\\n\\r\\n# \u4e94\u3001Ftrace\u5e94\u7528\u6848\u4f8b\\r\\n\\r\\n## 5.1\u6027\u80fd\u4f18\u5316\\r\\n\\r\\n\u5047\u8bbe\u6211\u4eec\u6b63\u5728\u5f00\u53d1\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u7684\u5185\u6838\u6a21\u5757\uff0c\u8fd1\u671f\u53d1\u73b0\u7cfb\u7edf\u5728\u8fdb\u884c\u5927\u91cf\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\u65f6\uff0c\u6027\u80fd\u51fa\u73b0\u4e86\u660e\u663e\u7684\u4e0b\u964d\u3002\u4e3a\u4e86\u627e\u51fa\u6027\u80fd\u74f6\u9888\uff0c\u6211\u4eec\u51b3\u5b9a\u4f7f\u7528 ftrace \u6765\u8fdb\u884c\u6df1\u5165\u5206\u6790\u3002\\r\\n\\r\\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd ftrace \u5df2\u7ecf\u6b63\u786e\u914d\u7f6e\u5e76\u542f\u7528\u3002\u901a\u8fc7\u524d\u9762\u4ecb\u7ecd\u7684\u65b9\u6cd5\uff0c\u6302\u8f7d debugfs \u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u8fdb\u5165 /sys/kernel/debug/tracing \u76ee\u5f55\u3002\\r\\n\\r\\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u4f7f\u7528 Function graph tracer \u6765\u8ddf\u8e2a\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u51fd\u6570\u7684\u8c03\u7528\u60c5\u51b5\u3002\u56e0\u4e3a Function graph tracer \u80fd\u591f\u4ee5\u56fe\u5f62\u5316\u7684\u65b9\u5f0f\u5c55\u793a\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u548c\u6267\u884c\u65f6\u95f4\uff0c\u8fd9\u5bf9\u4e8e\u6211\u4eec\u5206\u6790\u6027\u80fd\u74f6\u9888\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u6211\u4eec\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\necho 0 > tracing_on  # \u505c\u6b62\u8ffd\u8e2a\\r\\necho nop > current_tracer  # \u6e05\u9664\u5f53\u524d\u8ffd\u8e2a\u5668\\r\\necho function_graph > current_tracer  # \u542f\u7528function_graph\u8ddf\u8e2a\u5668\\r\\n```\\r\\n\\r\\n\u7136\u540e\uff0c\u6211\u4eec\u8bbe\u7f6e\u53ea\u8ddf\u8e2a\u4e0e\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u7684\u51fd\u6570\uff0c\u8fd9\u91cc\u4ee5 \u201cvfs_read\u201d \u548c \u201cvfs_write\u201d \u51fd\u6570\u4e3a\u4f8b\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\necho vfs_read > set_graph_function\\r\\necho vfs_write >> set_graph_function\\r\\n```\\r\\n\\r\\n\u5b8c\u6210\u4e0a\u8ff0\u8bbe\u7f6e\u540e\uff0c\u6211\u4eec\u5f00\u59cb\u8fdb\u884c\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\uff0c\u6a21\u62df\u5b9e\u9645\u7684\u4e1a\u52a1\u573a\u666f\u3002\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u505c\u6b62\u8ffd\u8e2a\uff0c\u6267\u884c\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\necho 0 > tracing_on\\r\\n```\\r\\n\\r\\n\u63a5\u7740\uff0c\u6211\u4eec\u67e5\u770b trace \u6587\u4ef6\uff0c\u83b7\u53d6\u8ddf\u8e2a\u7ed3\u679c\uff1a\\r\\n\\r\\n```\\r\\ncat trace\\r\\n```\\r\\n\\r\\n\u5728 trace \u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\n# tracer: function_graph\\r\\n#\\r\\n# CPU  DURATION                  FUNCTION CALLS\\r\\n# |     |   |                     |   |   |   |\\r\\n0)  1234.567 us |  vfs_read() {\\r\\n0)  10.123 us |    generic_file_read() {\\r\\n0)  5.678 us |      do_generic_file_read() {\\r\\n0)  3.456 us |        page_cache_sync_readahead() {\\r\\n0)  1.234 us |          ra_submit() {\\r\\n0)  0.567 us |            submit_bio() {\\r\\n0)  0.234 us |              generic_make_request() {\\r\\n0)  0.123 us |                blk_queue_bio() {\\r\\n0)  0.067 us |                  blk_mq_submit_bio() {\\r\\n0)  0.034 us |                    blk_mq_alloc_request() {\\r\\n0)  0.012 us |                      kmem_cache_alloc() {\\r\\n0)  0.005 us |                        slab_alloc() {\\r\\n0)  0.002 us |                         ...\\r\\n0)  0.002 us |                        }\\r\\n0)  0.005 us |                      }\\r\\n0)  0.012 us |                    }\\r\\n0)  0.034 us |                  }\\r\\n0)  0.067 us |                }\\r\\n0)  0.123 us |              }\\r\\n0)  0.234 us |            }\\r\\n0)  0.567 us |          }\\r\\n0)  1.234 us |        }\\r\\n0)  3.456 us |      }\\r\\n0)  5.678 us |    }\\r\\n0)  1234.567 us |  }\\r\\n```\\r\\n\\r\\n\u4ece\u8fd9\u4e9b\u4fe1\u606f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u5730\u770b\u5230\u51fd\u6570\u7684\u8c03\u7528\u5c42\u6b21\u548c\u6bcf\u4e2a\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u3002\u901a\u8fc7\u5206\u6790\uff0c\u6211\u4eec\u53d1\u73b0 \u201cpage_cache_sync_readahead\u201d \u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u8f83\u957f\uff0c\u8fdb\u4e00\u6b65\u67e5\u770b\u5176\u5185\u90e8\u8c03\u7528\u7684\u51fd\u6570\uff0c\u53d1\u73b0 \u201cra_submit\u201d \u51fd\u6570\u4ee5\u53ca\u5176\u4e0b\u7684\u4e00\u7cfb\u5217\u51fd\u6570\u8c03\u7528\u4e5f\u5360\u7528\u4e86\u4e0d\u5c11\u65f6\u95f4\u3002\u7ecf\u8fc7\u6df1\u5165\u7814\u7a76\u4ee3\u7801\u903b\u8f91\uff0c\u6211\u4eec\u53d1\u73b0 \u201cra_submit\u201d \u51fd\u6570\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u8fdb\u884c\u4e0d\u5fc5\u8981\u7684\u78c1\u76d8 I/O \u64cd\u4f5c\uff0c\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002\\r\\n\\r\\n\u9488\u5bf9\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u5bf9\u4ee3\u7801\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u51cf\u5c11\u4e86\u4e0d\u5fc5\u8981\u7684\u78c1\u76d8 I/O \u64cd\u4f5c\u3002\u518d\u6b21\u4f7f\u7528 ftrace \u8fdb\u884c\u8ddf\u8e2a\u6d4b\u8bd5\uff0c\u53d1\u73b0 \u201cvfs_read\u201d \u548c \u201cvfs_write\u201d \u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u660e\u663e\u7f29\u77ed\uff0c\u7cfb\u7edf\u7684\u6587\u4ef6\u8bfb\u5199\u6027\u80fd\u5f97\u5230\u4e86\u663e\u8457\u63d0\u5347\u3002\\r\\n\\r\\n##  5.2\u6545\u969c\u6392\u67e5\\r\\n\\r\\n\u67d0\u4e00\u5929\uff0c\u8fd0\u7ef4\u4eba\u5458\u53d1\u73b0\u751f\u4ea7\u7cfb\u7edf\u51fa\u73b0\u4e86\u54cd\u5e94\u5ef6\u8fdf\u7684\u95ee\u9898\uff0c\u7528\u6237\u53cd\u9988\u5728\u8bbf\u95ee\u7cfb\u7edf\u65f6\uff0c\u9875\u9762\u52a0\u8f7d\u901f\u5ea6\u660e\u663e\u53d8\u6162\uff0c\u4e00\u4e9b\u64cd\u4f5c\u751a\u81f3\u9700\u8981\u7b49\u5f85\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\u3002\u4e3a\u4e86\u627e\u51fa\u95ee\u9898\u7684\u6839\u6e90\uff0c\u6211\u4eec\u51b3\u5b9a\u4f7f\u7528 ftrace \u6765\u8fdb\u884c\u6545\u969c\u6392\u67e5\u3002\\r\\n\\r\\n\u9996\u5148\uff0c\u6211\u4eec\u6000\u7591\u662f\u4e2d\u65ad\u76f8\u5173\u7684\u95ee\u9898\u5bfc\u81f4\u4e86\u7cfb\u7edf\u54cd\u5e94\u5ef6\u8fdf\uff0c\u56e0\u4e3a\u5f53\u4e2d\u65ad\u88ab\u7981\u6b62\u65f6\uff0c\u7cfb\u7edf\u65e0\u6cd5\u53ca\u65f6\u54cd\u5e94\u5916\u90e8\u4e8b\u4ef6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u54cd\u5e94\u5ef6\u8fdf\u3002\u6240\u4ee5\u6211\u4eec\u4f7f\u7528 Irqsoff tracer \u6765\u8ddf\u8e2a\u4e2d\u65ad\u7981\u6b62\u7684\u60c5\u51b5\u3002\u8fdb\u5165 /sys/kernel/debug/tracing \u76ee\u5f55\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\necho 0 > tracing_on  # \u505c\u6b62\u8ffd\u8e2a\\r\\necho nop > current_tracer  # \u6e05\u9664\u5f53\u524d\u8ffd\u8e2a\u5668\\r\\necho irqsoff > current_tracer  # \u542f\u7528irqsoff\u8ddf\u8e2a\u5668\\r\\n```\\r\\n\\r\\n\u7136\u540e\uff0c\u6211\u4eec\u7b49\u5f85\u7cfb\u7edf\u54cd\u5e94\u5ef6\u8fdf\u95ee\u9898\u518d\u6b21\u51fa\u73b0\uff0c\u5728\u95ee\u9898\u51fa\u73b0\u671f\u95f4\uff0cftrace \u4f1a\u8bb0\u5f55\u4e0b\u4e2d\u65ad\u7981\u6b62\u7684\u76f8\u5173\u4fe1\u606f\u3002\u95ee\u9898\u51fa\u73b0\u540e\uff0c\u6211\u4eec\u505c\u6b62\u8ffd\u8e2a\uff0c\u6267\u884c\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\necho 0 > tracing_on\\r\\n```\\r\\n\\r\\n\u63a5\u7740\uff0c\u67e5\u770b trace \u6587\u4ef6\uff0c\u83b7\u53d6\u8ddf\u8e2a\u7ed3\u679c\uff1a\\r\\n\\r\\n```\\r\\ncat trace\\r\\n```\\r\\n\\r\\n\u5728 trace \u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u770b\u5230\u4e86\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\n# tracer: irqsoff\\r\\n#\\r\\n# WORST IRQSOFF LATENCY: 12345 us\\r\\n#\\r\\n#              _-----=> irqs-off\\r\\n#             / _----=> need-resched\\r\\n#            | / _---=> hardirq/softirq\\r\\n#            || / _--=> preempt-depth\\r\\n#            ||| / _-=> migrate-disable\\r\\n#            |||| /     delay\\r\\n#           TASK-PID     CPU#  |||||  TIMESTAMP  FUNCTION\\r\\n#              | |         |   |||||     |         |\\r\\nmy_task-1234[000] d.h. 123456.789012: irqsoff_delay: 12345 us\\r\\nmy_task-1234[000] d.h. 123456.789012:   <stack trace>\\r\\n => 0xffffffffc0123456\\r\\n => some_function_1\\r\\n => some_function_2\\r\\n => some_function_3\\r\\n```\\r\\n\\r\\n\u4ece\u8fd9\u4e9b\u4fe1\u606f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e2d\u65ad\u7981\u6b62\u7684\u6700\u957f\u5ef6\u8fdf\u65f6\u95f4\u4e3a 12345 \u5fae\u79d2\uff0c\u5e76\u4e14\u8bb0\u5f55\u4e86\u5bfc\u81f4\u4e2d\u65ad\u7981\u6b62\u7684\u51fd\u6570\u8c03\u7528\u6808\u3002\u901a\u8fc7\u5206\u6790\u51fd\u6570\u8c03\u7528\u6808\uff0c\u6211\u4eec\u53d1\u73b0 \u201csome_function_3\u201d \u51fd\u6570\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u7981\u6b62\u4e86\u4e2d\u65ad\uff0c\u5e76\u4e14\u7981\u6b62\u65f6\u95f4\u8f83\u957f\uff0c\u5f88\u53ef\u80fd\u662f\u8fd9\u4e2a\u51fd\u6570\u5bfc\u81f4\u4e86\u7cfb\u7edf\u54cd\u5e94\u5ef6\u8fdf\u3002\\r\\n\\r\\n\u8fdb\u4e00\u6b65\u67e5\u770b \u201csome_function_3\u201d \u51fd\u6570\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u8be5\u51fd\u6570\u5728\u8fdb\u884c\u4e00\u4e9b\u590d\u6742\u7684\u6570\u636e\u5904\u7406\u65f6\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\uff0c\u9519\u8bef\u5730\u7981\u6b62\u4e86\u4e2d\u65ad\uff0c\u800c\u4e14\u5904\u7406\u8fc7\u7a0b\u4e2d\u5b58\u5728\u4e00\u4e9b\u4f4e\u6548\u7684\u7b97\u6cd5\uff0c\u5bfc\u81f4\u6267\u884c\u65f6\u95f4\u8fc7\u957f\u3002\u6211\u4eec\u5bf9\u8be5\u51fd\u6570\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u5c06\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u65ad\u7981\u6b62\u65f6\u95f4\u5c3d\u91cf\u7f29\u77ed\uff0c\u5e76\u4f18\u5316\u4e86\u7b97\u6cd5\uff0c\u63d0\u9ad8\u4e86\u6267\u884c\u6548\u7387\u3002\\r\\n\\r\\n\u7ecf\u8fc7\u4f18\u5316\u540e\uff0c\u518d\u6b21\u89c2\u5bdf\u7cfb\u7edf\u8fd0\u884c\u60c5\u51b5\uff0c\u54cd\u5e94\u5ef6\u8fdf\u95ee\u9898\u5f97\u5230\u4e86\u6709\u6548\u89e3\u51b3\uff0c\u7528\u6237\u53cd\u9988\u7cfb\u7edf\u6062\u590d\u6b63\u5e38\u3002\u901a\u8fc7\u8fd9\u4e2a\u6848\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230 ftrace \u5728\u6545\u969c\u6392\u67e5\u4e2d\u7684\u5f3a\u5927\u4f5c\u7528\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u7684\u6839\u6e90\uff0c\u4e3a\u89e3\u51b3\u7cfb\u7edf\u6545\u969c\u63d0\u4f9b\u6709\u529b\u7684\u652f\u6301\u3002\\r\\n\\r\\n# \u516d\u3001Ftrace\u4e0e\u5176\u4ed6\u5de5\u5177\u5bf9\u6bd4\\r\\n\\r\\n##  6.1ftrace\u4e0e systemTap \u5bf9\u6bd4\\r\\n\\r\\n\u5728 Linux \u6027\u80fd\u5206\u6790\u5de5\u5177\u7684\u5927\u5bb6\u5ead\u4e2d\uff0csystemTap \u662f\u4e0e ftrace \u5e38\u5e38\u88ab\u653e\u5728\u4e00\u8d77\u6bd4\u8f83\u7684\u5de5\u5177\u3002systemTap \u8bde\u751f\u4e8e Linux \u793e\u533a\u5bf9 SUN Dtrace \u7684\u56de\u5e94\uff0c\u5176\u76ee\u6807\u662f\u8fbe\u5230\u751a\u81f3\u8d85\u8d8a Dtrace \uff0c\u8fd9\u4f7f\u5f97\u5b83\u5728\u8bbe\u8ba1\u4e0a\u8f83\u4e3a\u590d\u6742\u3002\u5b83\u4e3a\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u79cd\u5f3a\u5927\u7684\u811a\u672c\u8bed\u8a00\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u811a\u672c\u6765\u81ea\u5b9a\u4e49\u8ddf\u8e2a\u903b\u8f91\uff0c\u5b9e\u73b0\u5bf9\u7cfb\u7edf\u5404\u79cd\u884c\u4e3a\u7684\u6df1\u5165\u5206\u6790\u3002\u6bd4\u5982\uff0c\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 systemTap \u7f16\u5199\u811a\u672c\uff0c\u7cbe\u786e\u5730\u7edf\u8ba1\u67d0\u4e2a\u7cfb\u7edf\u8c03\u7528\u5728\u7279\u5b9a\u65f6\u95f4\u6bb5\u5185\u7684\u8c03\u7528\u6b21\u6570\uff0c\u6216\u8005\u8ba1\u7b97\u67d0\u4e2a\u51fd\u6570\u7684\u5e73\u5747\u6267\u884c\u65f6\u95f4\u7b49\uff0c\u8fd9\u79cd\u9ad8\u5ea6\u7684\u81ea\u5b9a\u4e49\u80fd\u529b\u4f7f\u5f97 systemTap \u5728\u5904\u7406\u590d\u6742\u7684\u6027\u80fd\u5206\u6790\u573a\u666f\u65f6\u5177\u6709\u5f88\u5927\u7684\u4f18\u52bf\u3002\\r\\n\\r\\n\u7136\u800c\uff0c\u6b63\u662f\u7531\u4e8e systemTap \u7684\u8bbe\u8ba1\u590d\u6742\uff0c\u5b83\u4e5f\u5b58\u5728\u4e00\u4e9b\u4e0d\u8db3\u4e4b\u5904\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0csystemTap \u59cb\u7ec8\u5904\u4e8e\u4e0d\u65ad\u5b8c\u5584\u81ea\u8eab\u7684\u72b6\u6001\uff0c\u4e0d\u5f53\u7684\u4f7f\u7528\u548c\u5176\u81ea\u8eab\u7684\u4e0d\u5b8c\u5584\u90fd\u6709\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u5d29\u6e83\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u8fd0\u7ef4\u4eba\u5458\u5c1d\u8bd5\u4f7f\u7528 systemTap \u6765\u5206\u6790\u7cfb\u7edf\u6027\u80fd\uff0c\u7531\u4e8e\u5bf9\u811a\u672c\u7f16\u5199\u4e0d\u591f\u719f\u6089\uff0c\u7f16\u5199\u7684\u811a\u672c\u4e2d\u5b58\u5728\u4e00\u4e9b\u903b\u8f91\u9519\u8bef\uff0c\u7ed3\u679c\u5728\u8fd0\u884c\u811a\u672c\u65f6\uff0c\u5bfc\u81f4\u4e86\u7cfb\u7edf\u7684\u4e0d\u7a33\u5b9a\uff0c\u751a\u81f3\u51fa\u73b0\u4e86\u77ed\u6682\u7684\u670d\u52a1\u4e2d\u65ad\uff0c\u7ed9\u4e1a\u52a1\u5e26\u6765\u4e86\u4e00\u5b9a\u7684\u5f71\u54cd\u3002\\r\\n\\r\\n\u76f8\u6bd4\u4e4b\u4e0b\uff0cftrace \u7684\u8bbe\u8ba1\u76ee\u6807\u5219\u7b80\u5355\u5f97\u591a\uff0c\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u9759\u6001\u4ee3\u7801\u63d2\u88c5\u6280\u672f\uff0c\u4e0d\u9700\u8981\u652f\u6301\u590d\u6742\u7684\u7f16\u7a0b\u63a5\u53e3\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49 trace \u884c\u4e3a\u3002\u8fd9\u79cd\u8bbe\u8ba1\u4f7f\u5f97 ftrace \u66f4\u52a0\u53ef\u9760\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u7528\u6237\u7684\u4e0d\u5f53\u4f7f\u7528\u800c\u8f7b\u6613\u5bfc\u81f4\u5185\u6838\u5d29\u6e83 \u3002ftrace \u7684\u4ee3\u7801\u91cf\u4e5f\u5f88\u5c0f\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u5360\u7528\u975e\u5e38\u4f4e\uff0c\u5728\u7cfb\u7edf\u8fd0\u884c\u65f6\u51e0\u4e4e\u4e0d\u4f1a\u5bf9\u7cfb\u7edf\u6027\u80fd\u4ea7\u751f\u660e\u663e\u7684\u5f71\u54cd\u3002\u5728\u4e00\u4e2a\u5bf9\u7a33\u5b9a\u6027\u8981\u6c42\u6781\u9ad8\u7684\u670d\u52a1\u5668\u73af\u5883\u4e2d\uff0cftrace \u7684\u8fd9\u4e9b\u7279\u6027\u4f7f\u5f97\u5b83\u6210\u4e3a\u4e86\u7cfb\u7edf\u7ba1\u7406\u5458\u548c\u5185\u6838\u5f00\u53d1\u8005\u7684\u9996\u9009\u5de5\u5177\u4e4b\u4e00\u3002\u5373\u4f7f\u662f\u5728\u7cfb\u7edf\u9ad8\u8d1f\u8f7d\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 ftrace \u8fdb\u884c\u6027\u80fd\u5206\u6790\u4e5f\u4e0d\u4f1a\u7ed9\u7cfb\u7edf\u5e26\u6765\u989d\u5916\u7684\u8d1f\u62c5\uff0c\u80fd\u591f\u786e\u4fdd\u7cfb\u7edf\u7684\u7a33\u5b9a\u8fd0\u884c\u3002\\r\\n\\r\\n## 6.2ftrace\u4e0e LTTng \u5bf9\u6bd4\\r\\n\\r\\nLTTng\uff08Linux Trace Toolkit Next Generation\uff09\u4e5f\u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u8ddf\u8e2a\u5de5\u5177\uff0c\u5b83\u4e0e ftrace \u5728\u4e00\u4e9b\u65b9\u9762\u5b58\u5728\u660e\u663e\u7684\u5dee\u5f02\u3002\\r\\n\\r\\n\u4ece\u63a5\u53e3\u7c7b\u578b\u6765\u770b\uff0cftrace \u91c7\u7528\u7684\u662f ASCII \u63a5\u53e3\uff0c\u8fd9\u4f7f\u5f97\u5b83\u7684\u8f93\u51fa\u4fe1\u606f\u53ef\u4ee5\u76f4\u63a5\u9605\u8bfb\uff0c\u5bf9\u4e8e\u5185\u6838\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u8fd9\u79cd\u63a5\u53e3\u975e\u5e38\u5177\u6709\u5438\u5f15\u529b\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ea\u9700\u8981\u7ed3\u5408\u5185\u6838\u4ee3\u7801\u548c\u7b80\u5355\u7684 cat \u547d\u4ee4\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u83b7\u53d6\u548c\u5206\u6790\u8ddf\u8e2a\u4fe1\u606f\uff0c\u64cd\u4f5c\u5341\u5206\u4fbf\u6377\u3002\u5728\u8fdb\u884c\u5185\u6838\u8c03\u8bd5\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 cat \u547d\u4ee4\u67e5\u770b ftrace \u751f\u6210\u7684\u8ddf\u8e2a\u6587\u4ef6\uff0c\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u6240\u5728\u3002\u800c LTTng \u5219\u91c7\u7528 binary \u63a5\u53e3\uff0c\u8fd9\u79cd\u63a5\u53e3\u66f4\u5229\u4e8e\u4e13\u95e8\u5de5\u5177\u8fdb\u884c\u5206\u6790\u4f7f\u7528\uff0c\u5b83\u80fd\u591f\u5c06\u8ddf\u8e2a\u6570\u636e\u4ee5\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\u9ad8\u6548\u5b58\u50a8\uff0c\u9002\u5408\u901a\u8fc7\u7279\u5b9a\u7684\u5de5\u5177\u8fdb\u884c\u6df1\u5165\u7684\u6570\u636e\u6316\u6398\u548c\u5206\u6790\u3002\\r\\n\\r\\n\u5728 ring buffer \u7684\u5b9e\u73b0\u4e0a\uff0c\u4e24\u8005\u4e5f\u6709\u6240\u4e0d\u540c\u3002ftrace \u5bf9\u6240\u6709 tracer \u90fd\u91c7\u7528\u540c\u4e00\u4e2a ring buffer\uff0c\u5c31\u50cf\u4e00\u4e2a\u516c\u5171\u7684 \u201c\u6570\u636e\u4ed3\u5e93\u201d\uff0c\u6240\u6709\u7684\u8ddf\u8e2a\u4fe1\u606f\u90fd\u5b58\u50a8\u5728\u8fd9\u4e2a\u7edf\u4e00\u7684\u7f13\u51b2\u533a\u4e2d\u3002\u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u7b80\u5355\u76f4\u63a5\uff0c\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f13\u51b2\u533a\u7684\u7ade\u4e89\u548c\u6570\u636e\u8986\u76d6\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5f53\u591a\u4e2a tracer \u540c\u65f6\u4ea7\u751f\u5927\u91cf\u7684\u8ddf\u8e2a\u4fe1\u606f\u65f6\uff0c\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7f13\u51b2\u533a\u7a7a\u95f4\u4e0d\u8db3\u800c\u5bfc\u81f4\u90e8\u5206\u6570\u636e\u88ab\u8986\u76d6\uff0c\u5f71\u54cd\u5206\u6790\u7684\u5b8c\u6574\u6027\u3002\u800c LTTng \u5219\u4f7f\u7528\u5404\u81ea\u4e0d\u540c\u7684 ring buffer\uff0c\u6bcf\u4e2a tracer \u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684 \u201c\u5c0f\u4ed3\u5e93\u201d\uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u5730\u907f\u514d\u7f13\u51b2\u533a\u7ade\u4e89\u95ee\u9898\uff0c\u786e\u4fdd\u6bcf\u4e2a tracer \u7684\u6570\u636e\u90fd\u80fd\u5f97\u5230\u51c6\u786e\u7684\u5b58\u50a8\u548c\u8bb0\u5f55\u3002\u8fd9\u4f7f\u5f97 LTTng \u5728\u5904\u7406\u591a tracer \u540c\u65f6\u5de5\u4f5c\u7684\u590d\u6742\u573a\u666f\u65f6\uff0c\u5177\u6709\u66f4\u597d\u7684\u6027\u80fd\u548c\u7a33\u5b9a\u6027\u3002\\r\\n\\r\\n\u7531\u4e8e\u8fd9\u4e9b\u5dee\u5f02\uff0cftrace \u548c LTTng \u5728\u9002\u7528\u573a\u666f\u4e0a\u4e5f\u5404\u6709\u4fa7\u91cd\u3002ftrace \u7531\u4e8e\u5176\u7b80\u5355\u6613\u7528\u3001\u76f4\u63a5\u53ef\u8bfb\u7684\u7279\u70b9\uff0c\u66f4\u9002\u5408\u5185\u6838\u5f00\u53d1\u4eba\u5458\u5728\u65e5\u5e38\u5f00\u53d1\u548c\u8c03\u8bd5\u4e2d\u5feb\u901f\u83b7\u53d6\u7cfb\u7edf\u8fd0\u884c\u65f6\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u8fdb\u884c\u521d\u6b65\u7684\u6027\u80fd\u5206\u6790\u548c\u95ee\u9898\u6392\u67e5\uff1b\u800c LTTng \u5219\u51ed\u501f\u5176\u9ad8\u6548\u7684\u4e8c\u8fdb\u5236\u63a5\u53e3\u548c\u72ec\u7acb\u7684 ring buffer \u8bbe\u8ba1\uff0c\u66f4\u53d7\u5d4c\u5165\u5f0f\u5de5\u7a0b\u5e08\u7684\u6b22\u8fce\uff0c\u5728\u5bf9\u8ddf\u8e2a\u6570\u636e\u7684\u5b58\u50a8\u548c\u5206\u6790\u8981\u6c42\u8f83\u9ad8\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5f00\u53d1\u4e2d\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790.md","title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790","description":"\u5728 Linux \u5185\u6838\u7684\u5e7f\u88a4\u5929\u5730\u91cc\uff0c\u6027\u80fd\u4f18\u5316\u4e0e\u6545\u969c\u6392\u67e5\u5b9b\u5982\u4e24\u5ea7\u9ad8\u8038\u7684\u5c71\u5cf0\uff0c\u6a2a\u4e98\u5728\u5f00\u53d1\u8005\u524d\u884c\u7684\u9053\u8def\u4e0a\u3002\u4e3a\u4e86\u6500\u767b\u8fd9\u4e24\u5ea7\u9ad8\u5cf0\uff0c\u5f00\u53d1\u8005\u4eec\u4e0d\u65ad\u5bfb\u89c5\u7740\u5f3a\u5927\u7684\u5de5\u5177\u3002\u800c perf\uff0c\u65e0\u7591\u662f\u5176\u4e2d\u6700\u4e3a\u8000\u773c\u7684 \u201c\u795e\u5668\u201d \u4e4b\u4e00\u3002\u5f53\u4f60\u5728\u8fd0\u884c\u4e00\u4e2a\u590d\u6742\u7684 Linux \u7cfb\u7edf\u65f6\uff0c\u662f\u5426\u5e38\u5e38\u88ab\u4e00\u4e9b\u83ab\u540d\u7684\u6027\u80fd\u95ee\u9898\u6240\u56f0\u6270\uff1f\u7cfb\u7edf\u7a81\u7136\u53d8\u5f97\u5361\u987f\uff0c\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94\u8fdf\u7f13\uff0c\u53ef\u4f60\u5374\u65e0\u4ece\u4e0b\u624b\uff0c\u4e0d\u77e5\u95ee\u9898\u7a76\u7adf\u51fa\u5728\u54ea\u91cc\u3002\u6216\u8bb8\u662f\u67d0\u4e2a\u5185\u6838\u51fd\u6570\u5728\u4e0d\u7ecf\u610f\u95f4\u6d88\u8017\u4e86\u5927\u91cf\u8d44\u6e90\uff0c\u53c8\u6216\u8bb8\u662f\u8fdb\u7a0b\u95f4\u7684\u8d44\u6e90\u7ade\u4e89\u5f15\u53d1\u4e86\u74f6\u9888\u3002","date":"2025-09-15T14:44:16.889Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":45.245,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5206\u6790\u795e\u5668ftrace\uff1a\u4ece\u539f\u7406\u5230\u5b9e\u6218","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5206\u6790\u795e\u5668ftrace\uff1a\u4ece\u539f\u7406\u5230\u5b9e\u6218"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236"}},"content":"\u5728 Linux \u5185\u6838\u7684\u5e7f\u88a4\u5929\u5730\u91cc\uff0c\u6027\u80fd\u4f18\u5316\u4e0e\u6545\u969c\u6392\u67e5\u5b9b\u5982\u4e24\u5ea7\u9ad8\u8038\u7684\u5c71\u5cf0\uff0c\u6a2a\u4e98\u5728\u5f00\u53d1\u8005\u524d\u884c\u7684\u9053\u8def\u4e0a\u3002\u4e3a\u4e86\u6500\u767b\u8fd9\u4e24\u5ea7\u9ad8\u5cf0\uff0c\u5f00\u53d1\u8005\u4eec\u4e0d\u65ad\u5bfb\u89c5\u7740\u5f3a\u5927\u7684\u5de5\u5177\u3002\u800c perf\uff0c\u65e0\u7591\u662f\u5176\u4e2d\u6700\u4e3a\u8000\u773c\u7684 \u201c\u795e\u5668\u201d \u4e4b\u4e00\u3002\u5f53\u4f60\u5728\u8fd0\u884c\u4e00\u4e2a\u590d\u6742\u7684 Linux \u7cfb\u7edf\u65f6\uff0c\u662f\u5426\u5e38\u5e38\u88ab\u4e00\u4e9b\u83ab\u540d\u7684\u6027\u80fd\u95ee\u9898\u6240\u56f0\u6270\uff1f\u7cfb\u7edf\u7a81\u7136\u53d8\u5f97\u5361\u987f\uff0c\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94\u8fdf\u7f13\uff0c\u53ef\u4f60\u5374\u65e0\u4ece\u4e0b\u624b\uff0c\u4e0d\u77e5\u95ee\u9898\u7a76\u7adf\u51fa\u5728\u54ea\u91cc\u3002\u6216\u8bb8\u662f\u67d0\u4e2a\u5185\u6838\u51fd\u6570\u5728\u4e0d\u7ecf\u610f\u95f4\u6d88\u8017\u4e86\u5927\u91cf\u8d44\u6e90\uff0c\u53c8\u6216\u8bb8\u662f\u8fdb\u7a0b\u95f4\u7684\u8d44\u6e90\u7ade\u4e89\u5f15\u53d1\u4e86\u74f6\u9888\u3002\\r\\n\\r\\n\u5728\u8fc7\u53bb\uff0c\u9762\u5bf9\u8fd9\u4e9b\u95ee\u9898\uff0c\u5f00\u53d1\u8005\u4eec\u72b9\u5982\u5728\u9ed1\u6697\u4e2d\u6478\u7d22\uff0c\u53ea\u80fd\u51ed\u501f\u7ecf\u9a8c\u548c\u731c\u6d4b\u6765\u8fdb\u884c\u8c03\u8bd5\u3002\u4f46 perf \u7684\u51fa\u73b0\uff0c\u5f7b\u5e95\u6539\u53d8\u4e86\u8fd9\u4e00\u5c40\u9762\u3002\u5b83\u5c31\u50cf\u4e00\u628a\u7cbe\u51c6\u7684\u624b\u672f\u5200\uff0c\u80fd\u591f\u6df1\u5165\u5230\u5185\u6838\u7684\u6bcf\u4e00\u4e2a\u89d2\u843d\uff0c\u7cbe\u51c6\u5730\u5256\u6790\u7cfb\u7edf\u6027\u80fd\u3002\u4ece\u5904\u7406\u5668\u7684\u6307\u4ee4\u5468\u671f\uff0c\u5230\u7f13\u5b58\u7684\u547d\u4e2d\u7387\uff1b\u4ece\u51fd\u6570\u7684\u8c03\u7528\u9891\u7387\uff0c\u5230\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0cperf \u90fd\u80fd\u63d0\u4f9b\u8be6\u5c3d\u7684\u6570\u636e\u3002\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u4e00\u540c\u6df1\u5165 perf \u7684\u4e16\u754c\uff0c\u63a2\u5bfb\u5b83\u7a76\u7adf\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u5f3a\u5927\u529f\u80fd\u7684\uff0c\u770b\u770b\u5b83\u662f\u600e\u6837\u5728\u590d\u6742\u7684\u5185\u6838\u73af\u5883\u4e2d\uff0c\u4e3a\u6211\u4eec\u63ed\u793a\u6027\u80fd\u5965\u79d8\uff0c\u52a9\u529b\u89e3\u51b3\u68d8\u624b\u7684\u95ee\u9898 \u3002\\r\\n\\r\\n# \u4e00\u3001Perf\u5de5\u5177\u7b80\u4ecb\\r\\n\\r\\n## 1.1\u4ec0\u4e48\u662f Perf\\r\\n\\r\\n\u5728 Linux \u6027\u80fd\u5206\u6790\u7684\u5e7f\u88a4\u9886\u57df\u4e2d\uff0cPerf \u72b9\u5982\u4e00\u9897\u7480\u74a8\u7684\u660e\u661f\uff0c\u6563\u53d1\u7740\u72ec\u7279\u7684\u5149\u8292\u3002Perf\uff0c\u5373 Performance \u7684\u7f29\u5199\uff0c\u662f\u4e00\u6b3e\u96c6\u6210\u4e8e Linux \u5185\u6838\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u5982\u540c\u4e00\u4f4d\u6280\u827a\u7cbe\u6e5b\u7684\u8bca\u65ad\u5927\u5e08\uff0c\u80fd\u6df1\u5165\u7cfb\u7edf\u7684\u5404\u4e2a\u89d2\u843d\uff0c\u7cbe\u51c6\u5730\u5256\u6790\u7cfb\u7edf\u6027\u80fd\u3002\u5b83\u4ee5\u4e8b\u4ef6\u9a71\u52a8\u4e3a\u6838\u5fc3\u673a\u5236\uff0c\u5982\u540c\u7cbe\u5bc6\u7684\u4eea\u5668\uff0c\u80fd\u591f\u6355\u6349\u5230\u786c\u4ef6\u3001\u8f6f\u4ef6\u4ee5\u53ca\u5185\u6838\u5c42\u9762\u7684\u5404\u79cd\u6027\u80fd\u4e8b\u4ef6\u3002\\r\\n\\r\\n\u968f\u7740 Linux \u5185\u6838\u7684\u4e0d\u65ad\u6f14\u8fdb\uff0cPerf \u4e5f\u5728\u6301\u7eed\u53d1\u5c55\u58ee\u5927\u3002\u4ece\u6700\u521d\u7b80\u5355\u7684\u6027\u80fd\u76d1\u6d4b\uff0c\u5230\u5982\u4eca\u5177\u5907\u4e30\u5bcc\u591a\u6837\u7684\u529f\u80fd\uff0cPerf \u5df2\u7ecf\u6210\u4e3a Linux \u6027\u80fd\u5206\u6790\u4e0d\u53ef\u6216\u7f3a\u7684\u5de5\u5177\u3002\u5b83\u4e0d\u4ec5\u652f\u6301\u786c\u4ef6\u4e8b\u4ef6\u7684\u76d1\u6d4b\uff0c\u5982 CPU \u65f6\u949f\u5468\u671f\u3001\u7f13\u5b58\u547d\u4e2d\u60c5\u51b5\u7b49\uff0c\u8fd9\u4e9b\u786c\u4ef6\u4e8b\u4ef6\u72b9\u5982\u7cfb\u7edf\u8fd0\u884c\u7684\u8109\u640f\uff0c\u53cd\u6620\u7740\u786c\u4ef6\u7684\u5de5\u4f5c\u72b6\u6001\uff1b\u8fd8\u80fd\u6355\u6349\u8f6f\u4ef6\u4e8b\u4ef6\uff0c\u5982\u8fdb\u7a0b\u5207\u6362\u3001\u7f3a\u9875\u4e2d\u65ad\u7b49\uff0c\u8fd9\u4e9b\u8f6f\u4ef6\u4e8b\u4ef6\u5219\u662f\u7cfb\u7edf\u8fd0\u884c\u7684 \u201c\u8f6f\u6307\u6807\u201d\uff0c\u63ed\u793a\u7740\u8f6f\u4ef6\u5c42\u9762\u7684\u8fd0\u884c\u6548\u7387\u3002\u6b64\u5916\uff0c\u5185\u6838\u8ffd\u8e2a\u70b9\u4e8b\u4ef6\u3001\u7528\u6237\u7a0b\u5e8f\u9759\u6001\u8ffd\u8e2a\u70b9\u4ee5\u53ca\u52a8\u6001\u8ffd\u8e2a\u7b49\u529f\u80fd\uff0c\u66f4\u662f\u8ba9 Perf \u7684\u76d1\u6d4b\u80fd\u529b\u5982\u864e\u6dfb\u7ffc\uff0c\u80fd\u591f\u5168\u65b9\u4f4d\u3001\u6df1\u5c42\u6b21\u5730\u6d1e\u5bdf\u7cfb\u7edf\u6027\u80fd\u3002\\r\\n\\r\\n## 1.2Perf \u7684\u5f3a\u5927\u529f\u80fd\\r\\n\\r\\nPerf \u4e4b\u6240\u4ee5\u5907\u53d7\u8d5e\u8a89\uff0c\u662f\u56e0\u4e3a\u5b83\u62e5\u6709\u4e00\u7cfb\u5217\u5f3a\u5927\u800c\u5b9e\u7528\u7684\u529f\u80fd\uff0c\u8fd9\u4e9b\u529f\u80fd\u72b9\u5982\u4e00\u628a\u628a\u7cbe\u51c6\u7684\u624b\u672f\u5200\uff0c\u80fd\u591f\u6df1\u5165\u5256\u6790\u7cfb\u7edf\u6027\u80fd\u7684\u5404\u4e2a\u65b9\u9762\u3002Perf\u662f\u5185\u7f6e\u4e8eLinux\u5185\u6838\u6e90\u7801\u6811\u4e2d\u7684\u6027\u80fd\u5256\u6790(profiling)\u5de5\u5177\u3002\u5b83\u57fa\u4e8e\u4e8b\u4ef6\u91c7\u6837\u539f\u7406\uff0c\u4ee5\u6027\u80fd\u4e8b\u4ef6\u4e3a\u57fa\u7840\uff0c\u652f\u6301\u9488\u5bf9\u5904\u7406\u5668\u76f8\u5173\u6027\u80fd\u6307\u6807\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u6027\u80fd\u6307\u6807\u7684\u6027\u80fd\u5256\u6790\uff0c\u5e38\u7528\u4e8e\u6027\u80fd\u74f6\u9888\u7684\u67e5\u627e\u4e0e\u70ed\u70b9\u4ee3\u7801\u7684\u5b9a\u4f4d\u3002\\r\\n\\r\\n**(1)\u8f7b\u91cf\u7ea7\u4e8b\u4ef6\u91c7\u6837**\\r\\n\\r\\nPerf \u5177\u5907\u8f7b\u91cf\u7ea7\u4e8b\u4ef6\u91c7\u6837\u7684\u80fd\u529b\uff0c\u8fd9\u4f7f\u5176\u80fd\u591f\u901a\u8fc7\u786c\u4ef6\u6027\u80fd\u8ba1\u6570\u5bf9\u5904\u7406\u5668\u4e8b\u4ef6\u8fdb\u884c\u91c7\u6837\uff0c\u4ece\u800c\u83b7\u53d6\u5e94\u7528\u7a0b\u5e8f\u6216\u5185\u6838\u7684\u6027\u80fd\u6570\u636e \u3002\u5b83\u53ef\u4ee5\u76d1\u6d4b\u6307\u4ee4\u6267\u884c\u7684\u6570\u91cf\uff0c\u4e86\u89e3\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5230\u5e95\u6267\u884c\u4e86\u591a\u5c11\u6761\u6307\u4ee4\uff0c\u8fd9\u5c31\u50cf\u662f\u8bb0\u5f55\u4e00\u573a\u6bd4\u8d5b\u4e2d\u8fd0\u52a8\u5458\u7684\u52a8\u4f5c\u6b21\u6570\uff0c\u80fd\u76f4\u89c2\u53cd\u6620\u51fa\u7a0b\u5e8f\u7684\u5de5\u4f5c\u91cf\u3002\u7f13\u5b58\u547d\u4e2d\u7387\u4e5f\u662f\u5b83\u7684\u76d1\u6d4b\u8303\u56f4\uff0c\u7f13\u5b58\u4f5c\u4e3a\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u901f\u5ea6\u8f83\u5feb\u7684\u5b58\u50a8\u533a\u57df\uff0c\u7f13\u5b58\u547d\u4e2d\u7387\u7684\u9ad8\u4f4e\u76f4\u63a5\u5f71\u54cd\u7740\u7cfb\u7edf\u7684\u6027\u80fd\uff0cPerf \u80fd\u591f\u7cbe\u786e\u5730\u6355\u6349\u5230\u7f13\u5b58\u547d\u4e2d\u7684\u6b21\u6570\u4ee5\u53ca\u672a\u547d\u4e2d\u7684\u6b21\u6570\uff0c\u8ba9\u6211\u4eec\u6e05\u695a\u5730\u77e5\u9053\u7f13\u5b58\u7684\u5de5\u4f5c\u6548\u7387\u3002\u5206\u652f\u9884\u6d4b\u540c\u6837\u9003\u4e0d\u8fc7 Perf \u7684 \u201c\u773c\u775b\u201d\uff0c\u5206\u652f\u9884\u6d4b\u662f\u5904\u7406\u5668\u4e3a\u4e86\u63d0\u9ad8\u6267\u884c\u6548\u7387\u800c\u91c7\u7528\u7684\u4e00\u79cd\u6280\u672f\uff0cPerf \u53ef\u4ee5\u76d1\u6d4b\u5206\u652f\u9884\u6d4b\u7684\u6210\u529f\u7387\uff0c\u5e2e\u52a9\u6211\u4eec\u8bc4\u4f30\u5904\u7406\u5668\u5728\u8fd9\u65b9\u9762\u7684\u6027\u80fd\u8868\u73b0\u3002\u8fd9\u4e9b\u76d1\u6d4b\u6307\u6807\u5c31\u50cf\u4e00\u4e2a\u4e2a\u5173\u952e\u7684\u4fe1\u53f7\uff0c\u4e3a\u6211\u4eec\u63ed\u793a\u4e86\u7cfb\u7edf\u6027\u80fd\u7684\u5965\u79d8\u3002\\r\\n\\r\\n**(2)Trace \u529f\u80fd**\\r\\n\\r\\nTrace \u529f\u80fd\u662f Perf \u7684\u53c8\u4e00\u5f3a\u5927\u6b66\u5668\uff0c\u5b83\u53ef\u4ee5\u8ddf\u8e2a\u8fdb\u7a0b\u6216\u5185\u6838\u7684\u51fd\u6570\u8c03\u7528\u94fe\uff0c\u5982\u540c\u4e00\u4f4d\u7ecf\u9a8c\u4e30\u5bcc\u7684\u4fa6\u63a2\uff0c\u80fd\u591f\u987a\u7740\u7ebf\u7d22\u627e\u51fa\u4ee3\u7801\u7684\u6267\u884c\u8def\u5f84\u3002\u901a\u8fc7\u8fd9\u4e00\u529f\u80fd\uff0cPerf \u53ef\u4ee5\u751f\u6210\u51fd\u6570\u8c03\u7528\u56fe\uff0c\u51fd\u6570\u8c03\u7528\u56fe\u5c31\u50cf\u662f\u4e00\u5e45\u8be6\u7ec6\u7684\u5730\u56fe\uff0c\u5c55\u793a\u4e86\u5404\u4e2a\u51fd\u6570\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\uff0c\u8ba9\u6211\u4eec\u4e00\u76ee\u4e86\u7136\u5730\u770b\u5230\u7a0b\u5e8f\u7684\u6267\u884c\u6d41\u7a0b\u3002\u706b\u7130\u56fe\u4e5f\u662f Perf Trace \u529f\u80fd\u7684\u91cd\u8981\u4ea7\u7269\uff0c\u706b\u7130\u56fe\u4ee5\u4e00\u79cd\u76f4\u89c2\u7684\u65b9\u5f0f\u5c55\u793a\u4e86\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\u548c\u8c03\u7528\u6808\u6df1\u5ea6\uff0c\u8d8a\u5bbd\u7684\u90e8\u5206\u8868\u793a\u8be5\u51fd\u6570\u5360\u7528\u7684\u65f6\u95f4\u8d8a\u957f\uff0c\u5c31\u50cf\u706b\u7130\u7684\u5927\u5c0f\u53cd\u6620\u4e86\u706b\u52bf\u7684\u5f3a\u5f31\uff0c\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5b9a\u4f4d\u6027\u80fd\u74f6\u9888\u6240\u5728\u3002\u5728\u4e00\u4e2a\u590d\u6742\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u51fd\u6570\u76f8\u4e92\u8c03\u7528\uff0c\u901a\u8fc7\u706b\u7130\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u53d1\u73b0\u54ea\u4e9b\u51fd\u6570\u5360\u7528\u4e86\u5927\u91cf\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u6709\u9488\u5bf9\u6027\u5730\u8fdb\u884c\u4f18\u5316\u3002\\r\\n\\r\\n**(3)Profiling \u529f\u80fd**\\r\\n\\r\\nProfiling \u529f\u80fd\u4f7f Perf \u80fd\u591f\u5bf9\u7279\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u6df1\u5165\u5206\u6790\uff0c\u627e\u51fa\u5176\u4e2d\u6700\u8017\u65f6\u7684\u51fd\u6570\u548c\u4ee3\u7801\u884c\u3002\u5b83\u63d0\u4f9b\u4e86\u9010\u884c\u7edf\u8ba1\u7684\u529f\u80fd\uff0c\u5c31\u50cf\u4e00\u4f4d\u7ec6\u5fc3\u7684\u6821\u5bf9\u5458\uff0c\u5bf9\u6bcf\u4e00\u884c\u4ee3\u7801\u7684\u6267\u884c\u65f6\u95f4\u8fdb\u884c\u7edf\u8ba1\uff0c\u8ba9\u6211\u4eec\u6e05\u695a\u5730\u77e5\u9053\u6bcf\u4e00\u884c\u4ee3\u7801\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u3002\u706b\u7130\u56fe\u5728 Profiling \u529f\u80fd\u4e2d\u540c\u6837\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\uff0c\u901a\u8fc7\u706b\u7130\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5b8f\u89c2\u7684\u89d2\u5ea6\u770b\u5230\u6574\u4e2a\u7a0b\u5e8f\u7684\u6027\u80fd\u70ed\u70b9\uff0c\u5feb\u901f\u9501\u5b9a\u9700\u8981\u4f18\u5316\u7684\u533a\u57df\u3002\u70ed\u70b9\u5206\u6790\u4e5f\u662f Perf Profiling \u529f\u80fd\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u80fd\u591f\u5e2e\u52a9\u6211\u4eec\u627e\u51fa\u7a0b\u5e8f\u4e2d\u6700\u5e38\u88ab\u8bbf\u95ee\u6216\u6267\u884c\u65f6\u95f4\u6700\u957f\u7684\u4ee3\u7801\u533a\u57df\uff0c\u8fd9\u4e9b\u533a\u57df\u5f80\u5f80\u662f\u6027\u80fd\u4f18\u5316\u7684\u5173\u952e\u6240\u5728\u3002\u5728\u5f00\u53d1\u4e00\u4e2a\u5927\u578b\u8f6f\u4ef6\u9879\u76ee\u65f6\uff0c\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u6838\u5fc3\u7b97\u6cd5\u6216\u9891\u7e41\u8c03\u7528\u7684\u51fd\u6570\uff0c\u901a\u8fc7 Perf \u7684 Profiling \u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u51c6\u786e\u5730\u627e\u51fa\u8fd9\u4e9b\u51fd\u6570\u548c\u4ee3\u7801\u884c\uff0c\u5bf9\u5176\u8fdb\u884c\u4f18\u5316\uff0c\u4ece\u800c\u63d0\u9ad8\u6574\u4e2a\u8f6f\u4ef6\u7684\u6027\u80fd\u3002\\r\\n\\r\\n**(4)\u57fa\u51c6\u6d4b\u8bd5**\\r\\n\\r\\n\u5728\u57fa\u51c6\u6d4b\u8bd5\u65b9\u9762\uff0cPerf \u53ef\u4ee5\u4e0e\u5176\u4ed6\u57fa\u51c6\u6d4b\u8bd5\u5de5\u5177\u5982 sysbench\u3001fio \u7b49\u7ed3\u5408\u4f7f\u7528\uff0c\u5bf9\u7cfb\u7edf\u7684\u6574\u4f53\u6027\u80fd\u8fdb\u884c\u5168\u9762\u8bc4\u4f30\u3002\u4e0e sysbench \u7ed3\u5408\u65f6\uff0cPerf \u53ef\u4ee5\u6d4b\u91cf CPU \u5728\u4e0d\u540c\u8d1f\u8f7d\u4e0b\u7684\u6027\u80fd\u8868\u73b0\uff0c\u6bd4\u5982\u5728\u9ad8\u5e76\u53d1\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u5904\u7406\u4e2d\uff0cCPU \u7684\u8fd0\u7b97\u901f\u5ea6\u3001\u54cd\u5e94\u65f6\u95f4\u7b49\u6307\u6807\uff0c\u8fd9\u5bf9\u4e8e\u8bc4\u4f30\u670d\u52a1\u5668\u5728\u5b9e\u9645\u4e1a\u52a1\u573a\u666f\u4e2d\u7684\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002\u5728\u5185\u5b58\u6027\u80fd\u8bc4\u4f30\u4e0a\uff0cPerf \u4e0e fio \u914d\u5408\uff0c\u80fd\u591f\u7cbe\u51c6\u5730\u6d4b\u91cf\u5185\u5b58\u7684\u8bfb\u5199\u901f\u5ea6\u3001\u5e26\u5bbd\u5229\u7528\u7387\u7b49\u53c2\u6570\u3002\u78c1\u76d8 IO \u6027\u80fd\u4e5f\u662f Perf \u7684 \u201c\u62ff\u624b\u597d\u620f\u201d\uff0c\u5b83\u53ef\u4ee5\u6d4b\u8bd5\u78c1\u76d8\u7684\u8bfb\u5199\u901f\u7387\u3001\u5bfb\u9053\u65f6\u95f4\u7b49\u5173\u952e\u6307\u6807\uff0c\u4e3a\u7cfb\u7edf\u8c03\u4f18\u63d0\u4f9b\u5168\u9762\u800c\u51c6\u786e\u7684\u53c2\u8003\u6570\u636e\u3002\u5728\u6784\u5efa\u4e00\u4e2a\u5927\u578b\u6570\u636e\u4e2d\u5fc3\u65f6\uff0c\u9700\u8981\u5bf9\u670d\u52a1\u5668\u7684\u6027\u80fd\u8fdb\u884c\u5168\u9762\u8bc4\u4f30\uff0cPerf \u4e0e\u5176\u4ed6\u57fa\u51c6\u6d4b\u8bd5\u5de5\u5177\u7684\u7ed3\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u670d\u52a1\u5668\u5728\u4e0d\u540c\u5de5\u4f5c\u8d1f\u8f7d\u4e0b\u7684\u6027\u80fd\u8868\u73b0\uff0c\u4ece\u800c\u5408\u7406\u914d\u7f6e\u786c\u4ef6\u8d44\u6e90\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u6574\u4f53\u6027\u80fd\u3002\\r\\n\\r\\n**(5)\u8c03\u8bd5\u529f\u80fd**\\r\\n\\r\\nPerf \u8fd8\u5177\u5907\u5f3a\u5927\u7684\u8c03\u8bd5\u529f\u80fd\uff0c\u5b83\u53ef\u4ee5\u4e0e\u8c03\u8bd5\u5668\u5982 gdb \u7ed3\u5408\u4f7f\u7528\uff0c\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u66f4\u8be6\u7ec6\u7684\u6027\u80fd\u5206\u6790\u548c\u8c03\u8bd5\u4fe1\u606f\u3002\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0cPerf \u80fd\u591f\u6355\u83b7\u8ddf\u8e2a\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5c31\u50cf\u662f\u7a0b\u5e8f\u8fd0\u884c\u7684 \u201c\u811a\u5370\u201d\uff0c\u8bb0\u5f55\u4e86\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\u3002\u5e76\u4e14\uff0cPerf \u53ef\u4ee5\u5c06\u8fd9\u4e9b\u8ddf\u8e2a\u6570\u636e\u4e0e\u6e90\u4ee3\u7801\u8fdb\u884c\u5173\u8054\uff0c\u5c31\u50cf\u5c06\u6848\u4ef6\u7684\u7ebf\u7d22\u4e0e\u5acc\u7591\u4eba\u7684\u884c\u4e3a\u8054\u7cfb\u8d77\u6765\uff0c\u8ba9\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u6e05\u6670\u5730\u770b\u5230\u7a0b\u5e8f\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u5404\u4e2a\u51fd\u6570\u7684\u8c03\u7528\u60c5\u51b5\u3001\u6267\u884c\u65f6\u95f4\u4ee5\u53ca\u53d8\u91cf\u7684\u53d8\u5316\u7b49\u4fe1\u606f\uff0c\u4ece\u800c\u66f4\u597d\u5730\u7406\u89e3\u7a0b\u5e8f\u7684\u8fd0\u884c\u673a\u5236\uff0c\u5feb\u901f\u5b9a\u4f4d\u5e76\u89e3\u51b3\u6027\u80fd\u95ee\u9898\u3002\u5728\u5f00\u53d1\u4e00\u4e2a\u590d\u6742\u7684\u8f6f\u4ef6\u7cfb\u7edf\u65f6\uff0c\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u96be\u4ee5\u6392\u67e5\u7684\u6027\u80fd\u95ee\u9898\uff0c\u901a\u8fc7 Perf \u4e0e gdb \u7684\u7ed3\u5408\u4f7f\u7528\uff0c\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6df1\u5165\u5206\u6790\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u627e\u51fa\u95ee\u9898\u7684\u6839\u6e90\uff0c\u63d0\u9ad8\u8f6f\u4ef6\u5f00\u53d1\u7684\u6548\u7387\u548c\u8d28\u91cf\u3002\\r\\n\\r\\n# \u4e8c\u3001Perf\u5b89\u88c5\u4e0e\u4f7f\u7528\\r\\n\\r\\n## 2.1\u5b89\u88c5 Perf\\r\\n\\r\\n\u5728\u4f7f\u7528 Perf \u4e4b\u524d\uff0c\u9996\u5148\u9700\u8981\u5c06\u5176\u5b89\u88c5\u5230\u7cfb\u7edf\u4e2d\u3002Perf \u5728\u4e0d\u540c\u7684 Linux \u53d1\u884c\u7248\u4e2d\u6709\u4e0d\u540c\u7684\u5b89\u88c5\u65b9\u5f0f\u3002\\r\\n\\r\\n\u5728\u57fa\u4e8e Debian \u6216 Ubuntu \u7684\u7cfb\u7edf\u4e2d\uff0cPerf \u5de5\u5177\u901a\u5e38\u5305\u542b\u5728linux-tools-common\u548clinux-tools-< kernel-version>\u5305\u4e2d\u3002\u5b89\u88c5\u547d\u4ee4\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nsudo apt-get install linux-tools-common linux-tools-`uname -r`\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u547d\u4ee4\u4e2d\uff0cuname -r\u7528\u4e8e\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u7684\u5185\u6838\u7248\u672c\uff0clinux-tools-kernel-version\u5305\u4f1a\u6839\u636e\u5b9e\u9645\u7684\u5185\u6838\u7248\u672c\u8fdb\u884c\u5b89\u88c5\uff0c\u786e\u4fdd Perf \u4e0e\u7cfb\u7edf\u5185\u6838\u7248\u672c\u517c\u5bb9\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u57fa\u4e8e Red Hat \u6216 CentOS \u7684\u7cfb\u7edf\uff0c\u53ef\u4ee5\u4f7f\u7528 yum \u5305\u7ba1\u7406\u5668\u8fdb\u884c\u5b89\u88c5\uff1a\\r\\n\\r\\n```\\r\\nsudo yum install perf\\r\\n```\\r\\n\\r\\n\u5982\u679c\u7cfb\u7edf\u4e2d\u6ca1\u6709\u914d\u7f6e\u5bf9\u5e94\u7684 yum \u6e90\uff0c\u53ef\u80fd\u9700\u8981\u5148\u914d\u7f6e yum \u6e90\uff0c\u518d\u8fdb\u884c\u5b89\u88c5\u3002yum \u6e90\u7684\u914d\u7f6e\u65b9\u5f0f\u6839\u636e\u4e0d\u540c\u7684\u7cfb\u7edf\u548c\u9700\u6c42\u6709\u6240\u4e0d\u540c\uff0c\u4e00\u822c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8f7d\u5b98\u65b9\u7684 yum \u6e90\u914d\u7f6e\u6587\u4ef6\uff0c\u653e\u7f6e\u5230/etc/yum.repos.d/\u76ee\u5f55\u4e0b\uff0c\u5e76\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\uff0c\u5982baseurl\u3001gpgcheck\u7b49\u3002\\r\\n\\r\\n\u4ece\u6e90\u7801\u5b89\u88c5 Perf \u5219\u662f\u53e6\u4e00\u79cd\u5b89\u88c5\u65b9\u5f0f\uff0c\u9002\u5408\u90a3\u4e9b\u9700\u8981\u5b9a\u5236 Perf \u529f\u80fd\u6216\u5728\u6ca1\u6709\u5305\u7ba1\u7406\u5668\u7684\u73af\u5883\u4e2d\u5b89\u88c5\u7684\u60c5\u51b5\u3002\u9996\u5148\uff0c\u9700\u8981\u4ece Linux \u5185\u6838\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u5185\u6838\u6e90\u7801\uff0c\u4e0b\u8f7d\u547d\u4ee4\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\ngit clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git\\r\\n```\\r\\n\\r\\n\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u8fdb\u5165\u5185\u6838\u6e90\u7801\u76ee\u5f55\u4e2d\u7684tools/perf\u5b50\u76ee\u5f55\uff0c\u6267\u884cmake\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1\uff1a\\r\\n\\r\\n```\\r\\ncd linux/tools/perf\\r\\nmake\\r\\n```\\r\\n\\r\\n\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u4f1a\u68c0\u67e5\u4f9d\u8d56\u5e93\u7684\u60c5\u51b5\uff0c\u5982\u679c\u7f3a\u5c11\u4f9d\u8d56\u5e93\uff0c\u4f1a\u63d0\u793a\u9700\u8981\u5b89\u88c5\u76f8\u5e94\u7684\u5e93\u3002\u5b89\u88c5\u5b8c\u6240\u6709\u4f9d\u8d56\u5e93\u540e\uff0c\u518d\u6b21\u6267\u884cmake\u547d\u4ee4\u8fdb\u884c\u7f16\u8bd1\u3002\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e00\u4e2a\u540d\u4e3aperf\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u8fd9\u5c31\u662f Perf \u5de5\u5177\u3002\u53ef\u4ee5\u5c06\u5176\u590d\u5236\u5230\u7cfb\u7edf\u7684\u53ef\u6267\u884c\u6587\u4ef6\u76ee\u5f55\u4e2d\uff0c\u5982/usr/local/bin/\uff0c\u4ee5\u4fbf\u5728\u7cfb\u7edf\u7684\u4efb\u4f55\u4f4d\u7f6e\u90fd\u80fd\u6267\u884c Perf \u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\nsudo cp perf /usr/local/bin/\\r\\n```\\r\\n\\r\\n\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884cperf --version\u547d\u4ee4\u6765\u9a8c\u8bc1 Perf \u662f\u5426\u6b63\u786e\u5b89\u88c5\u3002\u5982\u679c\u5b89\u88c5\u6210\u529f\uff0c\u4f1a\u663e\u793a Perf \u7684\u7248\u672c\u4fe1\u606f\u3002\\r\\n\\r\\n## 2.2Perf\u7684\u57fa\u672c\u4f7f\u7528\\r\\n\\r\\nCPU\u5468\u671f(cpu-cycles)\u662f\u9ed8\u8ba4\u7684\u6027\u80fd\u4e8b\u4ef6\uff0c\u6240\u8c13\u7684CPU\u5468\u671f\u662f\u6307CPU\u6240\u80fd\u8bc6\u522b\u7684\u6700\u5c0f\u65f6\u95f4\u5355\u5143\uff0c\u901a\u5e38\u4e3a\u4ebf\u5206\u4e4b\u51e0\u79d2\uff0c\u662fCPU\u6267\u884c\u6700\u7b80\u5355\u7684\u6307\u4ee4\u65f6\u6240\u9700\u8981\u7684\u65f6\u95f4\uff0c\u4f8b\u5982\u8bfb\u53d6\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\uff0c\u4e5f\u53eb\u505aclock tick\u3002\\r\\n\\r\\nperf COMMAND [-e event ...] PROGRAM, perf \u662f\u91c7\u7528\u7684\u8fd9\u4e48\u4e00\u4e2a\u547d\u4ee4\u683c\u5f0f, COMMAND\u4e00\u822c\u5e38\u7528\u7684\u5c31\u662f top, stat, record, report\u7b49. \u7136\u540e\u7528 -e \u53c2\u6570\u6765\u7edf\u8ba1\u9700\u8981\u5173\u6ce8\u7684\u4e8b\u4ef6. \u591a\u4e2a\u4e8b\u4ef6\u5c31\u7528\u591a\u4e2a -e \u8fde\u63a5\u3002\\r\\n\\r\\nPerf\u662f\u4e00\u4e2a\u5305\u542b22\u79cd\u5b50\u5de5\u5177\u7684\u5de5\u5177\u96c6\uff0c\u4ee5\u4e0b\u662f\u6700\u5e38\u7528\u76846\u79cd\uff1a\\r\\n\\r\\n1. perf-list\\r\\n2. perf-stat\\r\\n3. perf-top\\r\\n4. perf-record\\r\\n5. perf-report\\r\\n6. perf-trace\\r\\n\\r\\n**\u2474perf-list**\\r\\n\\r\\nPerf-list\u7528\u6765\u67e5\u770bperf\u6240\u652f\u6301\u7684\u6027\u80fd\u4e8b\u4ef6\uff0c\u6709\u8f6f\u4ef6\u7684\u4e5f\u6709\u786c\u4ef6\u7684\u3002\\r\\nList all symbolic event types\u3002\\r\\n\\r\\n```\\r\\nperf list [hw | sw | cache | tracepoint | event_glob]\\r\\n```\\r\\n\\r\\n**\u2475perf stat**\\r\\n\\r\\n\u8bf4\u660e\u4e00\u4e2a\u5de5\u5177\u7684\u6700\u4f73\u9014\u5f84\u662f\u5217\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u3002\u8003\u67e5\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u7a0b\u5e8f\u3002\u5176\u4e2d\u51fd\u6570 longa() \u662f\u4e2a\u5f88\u957f\u7684\u5faa\u73af\uff0c\u6bd4\u8f83\u6d6a\u8d39\u65f6\u95f4\u3002\u51fd\u6570 foo1 \u548c foo2 \u5c06\u5206\u522b\u8c03\u7528\u8be5\u51fd\u6570 10 \u6b21\uff0c\u4ee5\u53ca 100 \u6b21\u3002\\r\\n\\r\\n```\\r\\n//t1.c\\r\\n void longa()\\r\\n {\\r\\n   int i,j;\\r\\n   for(i = 0; i < 1000000; i++)\\r\\n   j=i; //am I silly or crazy? I feel boring and desperate.\\r\\n }\\r\\n\\r\\n void foo2()\\r\\n {\\r\\n   int i;\\r\\n   for(i=0 ; i < 10; i++)\\r\\n        longa();\\r\\n }\\r\\n\\r\\n void foo1()\\r\\n {\\r\\n   int i;\\r\\n   for(i = 0; i< 100; i++)\\r\\n      longa();\\r\\n }\\r\\n\\r\\n int main(void)\\r\\n {\\r\\n   foo1();\\r\\n   foo2();\\r\\n }\\r\\n```\\r\\n\\r\\n\u7136\u540e\u7f16\u8bd1\u5b83\uff1a\\r\\n\\r\\n```\\r\\ngcc -o t1 -g t1.c\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u6f14\u793a\u4e86 perf stat \u9488\u5bf9\u7a0b\u5e8f t1 \u7684\u8f93\u51fa\uff1a\\r\\n\\r\\n```\\r\\nroot@ubuntu-test:~# perf stat ./t1\\r\\n\\r\\n Performance counter stats for \'./t1\':\\r\\n\\r\\n        218.584169 task-clock # 0.997 CPUs utilized\\r\\n                18 context-switches # 0.000 M/sec\\r\\n                 0 CPU-migrations # 0.000 M/sec\\r\\n                82 page-faults # 0.000 M/sec\\r\\n       771,180,100 cycles # 3.528 GHz\\r\\n     <not counted> stalled-cycles-frontend\\r\\n     <not counted> stalled-cycles-backend\\r\\n       550,703,114 instructions # 0.71 insns per cycle\\r\\n       110,117,522 branches # 503.776 M/sec\\r\\n             5,009 branch-misses # 0.00% of all branches\\r\\n\\r\\n       0.219155248 seconds time elapsed\\r\\n\\r\\n\u7a0b\u5e8f t1 \u662f\u4e00\u4e2a CPU bound \u578b\uff0c\u56e0\u4e3a task-clock-msecs \u63a5\u8fd1 1\\r\\n```\\r\\n\\r\\n\u5bf9 t1 \u8fdb\u884c\u8c03\u4f18\u5e94\u8be5\u8981\u627e\u5230\u70ed\u70b9 ( \u5373\u6700\u8017\u65f6\u7684\u4ee3\u7801\u7247\u6bb5 )\uff0c\u518d\u770b\u770b\u662f\u5426\u80fd\u591f\u63d0\u9ad8\u70ed\u70b9\u4ee3\u7801\u7684\u6548\u7387\u3002\u7f3a\u7701\u60c5\u51b5\u4e0b\uff0c\u9664\u4e86 task-clock-msecs \u4e4b\u5916\uff0cperf stat \u8fd8\u7ed9\u51fa\u4e86\u5176\u4ed6\u51e0\u4e2a\u6700\u5e38\u7528\u7684\u7edf\u8ba1\u4fe1\u606f\uff1a\\r\\n\\r\\n- Task-clock-msecs\uff1aCPU \u5229\u7528\u7387\uff0c\u8be5\u503c\u9ad8\uff0c\u8bf4\u660e\u7a0b\u5e8f\u7684\u591a\u6570\u65f6\u95f4\u82b1\u8d39\u5728 CPU \u8ba1\u7b97\u4e0a\u800c\u975e IO\u3002\\r\\n- Context-switches\uff1a\u8fdb\u7a0b\u5207\u6362\u6b21\u6570\uff0c\u8bb0\u5f55\u4e86\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u591a\u5c11\u6b21\u8fdb\u7a0b\u5207\u6362\uff0c\u9891\u7e41\u7684\u8fdb\u7a0b\u5207\u6362\u662f\u5e94\u8be5\u907f\u514d\u7684\u3002\\r\\n- Cache-misses\uff1a\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u603b\u4f53\u7684 cache \u5229\u7528\u60c5\u51b5\uff0c\u5982\u679c\u8be5\u503c\u8fc7\u9ad8\uff0c\u8bf4\u660e\u7a0b\u5e8f\u7684 cache \u5229\u7528\u4e0d\u597d\\r\\n- CPU-migrations\uff1a\u8868\u793a\u8fdb\u7a0b t1 \u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u591a\u5c11\u6b21 CPU \u8fc1\u79fb\uff0c\u5373\u88ab\u8c03\u5ea6\u5668\u4ece\u4e00\u4e2a CPU \u8f6c\u79fb\u5230\u53e6\u5916\u4e00\u4e2a CPU \u4e0a\u8fd0\u884c\u3002\\r\\n- Cycles\uff1a\u5904\u7406\u5668\u65f6\u949f\uff0c\u4e00\u6761\u673a\u5668\u6307\u4ee4\u53ef\u80fd\u9700\u8981\u591a\u4e2a cycles\uff0cInstructions: \u673a\u5668\u6307\u4ee4\u6570\u76ee\u3002\\r\\n- IPC\uff1a\u662f Instructions/Cycles \u7684\u6bd4\u503c\uff0c\u8be5\u503c\u8d8a\u5927\u8d8a\u597d\uff0c\u8bf4\u660e\u7a0b\u5e8f\u5145\u5206\u5229\u7528\u4e86\u5904\u7406\u5668\u7684\u7279\u6027\u3002\\r\\n- Cache-references: cache \u547d\u4e2d\u7684\u6b21\u6570\uff0cCache-misses: cache \u5931\u6548\u7684\u6b21\u6570\u3002\\r\\n\\r\\n\u901a\u8fc7\u6307\u5b9a -e \u9009\u9879\uff0c\u60a8\u53ef\u4ee5\u6539\u53d8 perf stat \u7684\u7f3a\u7701\u4e8b\u4ef6 ( \u5173\u4e8e\u4e8b\u4ef6\uff0c\u5728\u4e0a\u4e00\u5c0f\u8282\u5df2\u7ecf\u8bf4\u660e\uff0c\u53ef\u4ee5\u901a\u8fc7 perf list \u6765\u67e5\u770b )\u3002\u5047\u5982\u60a8\u5df2\u7ecf\u6709\u5f88\u591a\u7684\u8c03\u4f18\u7ecf\u9a8c\uff0c\u53ef\u80fd\u4f1a\u4f7f\u7528 -e \u9009\u9879\u6765\u67e5\u770b\u60a8\u6240\u611f\u5174\u8da3\u7684\u7279\u6b8a\u7684\u4e8b\u4ef6\u3002\\r\\n\\r\\n\u6709\u4e9b\u7a0b\u5e8f\u6162\u662f\u56e0\u4e3a\u8ba1\u7b97\u91cf\u592a\u5927\uff0c\u5176\u591a\u6570\u65f6\u95f4\u90fd\u5e94\u8be5\u5728\u4f7f\u7528 CPU \u8fdb\u884c\u8ba1\u7b97\uff0c\u8fd9\u53eb\u505a CPU bound \u578b\uff1b\u6709\u4e9b\u7a0b\u5e8f\u6162\u662f\u56e0\u4e3a\u8fc7\u591a\u7684 IO\uff0c\u8fd9\u79cd\u65f6\u5019\u5176 CPU \u5229\u7528\u7387\u5e94\u8be5\u4e0d\u9ad8\uff0c\u8fd9\u53eb\u505a IO bound \u578b\uff1b\u5bf9\u4e8e CPU bound \u7a0b\u5e8f\u7684\u8c03\u4f18\u548c IO bound \u7684\u8c03\u4f18\u662f\u4e0d\u540c\u7684\u3002\\r\\n\\r\\n**\u2476perf top**\\r\\n\\r\\n\u4f7f\u7528 perf stat \u7684\u65f6\u5019\uff0c\u5f80\u5f80\u60a8\u5df2\u7ecf\u6709\u4e00\u4e2a\u8c03\u4f18\u7684\u76ee\u6807\u3002\u6bd4\u5982\u6211\u521a\u624d\u5199\u7684\u90a3\u4e2a\u65e0\u804a\u7a0b\u5e8f t1\u3002\\r\\n\\r\\n\u4e5f\u6709\u4e9b\u65f6\u5019\uff0c\u60a8\u53ea\u662f\u53d1\u73b0\u7cfb\u7edf\u6027\u80fd\u65e0\u7aef\u4e0b\u964d\uff0c\u5e76\u4e0d\u6e05\u695a\u7a76\u7adf\u54ea\u4e2a\u8fdb\u7a0b\u6210\u4e3a\u4e86\u8d2a\u5403\u7684 hog\u3002\\r\\n\\r\\n\u6b64\u65f6\u9700\u8981\u4e00\u4e2a\u7c7b\u4f3c top \u7684\u547d\u4ee4\uff0c\u5217\u51fa\u6240\u6709\u503c\u5f97\u6000\u7591\u7684\u8fdb\u7a0b\uff0c\u4ece\u4e2d\u627e\u5230\u9700\u8981\u8fdb\u4e00\u6b65\u5ba1\u67e5\u7684\u5bb6\u4f19\u3002\\r\\n\\r\\nPerf top \u7528\u4e8e\u5b9e\u65f6\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u7684\u6027\u80fd\u7edf\u8ba1\u4fe1\u606f\u3002\u8be5\u547d\u4ee4\u4e3b\u8981\u7528\u6765\u89c2\u5bdf\u6574\u4e2a\u7cfb\u7edf\u5f53\u524d\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b\u8be5\u547d\u4ee4\u7684\u8f93\u51fa\u6765\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u6700\u8017\u65f6\u7684\u5185\u6838\u51fd\u6570\u6216\u67d0\u4e2a\u7528\u6237\u8fdb\u7a0b\u3002\\r\\n\\r\\n\u8ba9\u6211\u4eec\u518d\u8bbe\u8ba1\u4e00\u4e2a\u4f8b\u5b50\u6765\u6f14\u793a\u5427\uff0c\u6211\u5f88\u5feb\u5c31\u60f3\u5230\u4e86\u5982\u4ee3\u7801\u6e05\u5355 2 \u6240\u793a\u7684\u4e00\u4e2a\u7a0b\u5e8f\uff1a\\r\\n\\r\\n```\\r\\n//t2.c\\r\\nmain(){\\r\\n    int i;\\r\\n    while(1) i++;\\r\\n}\\r\\n```\\r\\n\\r\\n\u7136\u540e\u7f16\u8bd1\u8fd9\u4e2a\u7a0b\u5e8f\uff1a\\r\\n\\r\\n```\\r\\ngcc -o t2 -g t2.c\\r\\n```\\r\\n\\r\\n\u8fd0\u884c\u8fd9\u4e2a\u7a0b\u5e8f\u540e\uff0c \u6211\u4eec\u53e6\u8d77\u4e00\u4e2a\u7a97\u53e3\uff0c\u8fd0\u884cperf top\u6765\u770b\u770b\uff1a\\r\\n\\r\\n```\\r\\nEvents: 8K cycles\\r\\n 98.67% t2 [.] main\\r\\n  1.10% [kernel] [k] __do_softirq\\r\\n  0.07% [kernel] [k] _raw_spin_unlock_irqrestore\\r\\n  0.05% perf [.] kallsyms__parse\\r\\n  0.05% libc-2.15.so [.] 0x807c7\\r\\n  0.05% [kernel] [k] kallsyms_expand_symbol\\r\\n  0.02% perf [.] map__process_kallsym_symbol\\r\\n```\\r\\n\\r\\n\u5f88\u5bb9\u6613\u4fbf\u53d1\u73b0 t2 \u662f\u9700\u8981\u5173\u6ce8\u7684\u53ef\u7591\u7a0b\u5e8f\u3002\u4e0d\u8fc7\u5176\u4f5c\u6848\u624b\u6cd5\u592a\u7b80\u5355\uff1a\u8086\u65e0\u5fcc\u60ee\u5730\u6d6a\u8d39\u7740 CPU\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u518d\u505a\u4ec0\u4e48\u5176\u4ed6\u7684\u4e8b\u60c5\u4fbf\u53ef\u4ee5\u627e\u5230\u95ee\u9898\u6240\u5728\u3002\u4f46\u73b0\u5b9e\u751f\u6d3b\u4e2d\uff0c\u5f71\u54cd\u6027\u80fd\u7684\u7a0b\u5e8f\u4e00\u822c\u90fd\u4e0d\u4f1a\u5982\u6b64\u611a\u8822\uff0c\u6240\u4ee5\u6211\u4eec\u5f80\u5f80\u8fd8\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u7684 perf \u5de5\u5177\u8fdb\u4e00\u6b65\u5206\u6790\u3002\\r\\n\\r\\n**\u2477\u4f7f\u7528 perf record, \u89e3\u8bfb report**\\r\\n\\r\\n\u4f7f\u7528 top \u548c stat \u4e4b\u540e\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u5927\u81f4\u6709\u6570\u4e86\u3002\u8981\u8fdb\u4e00\u6b65\u5206\u6790\uff0c\u4fbf\u9700\u8981\u4e00\u4e9b\u7c92\u5ea6\u66f4\u7ec6\u7684\u4fe1\u606f\u3002\u6bd4\u5982\u8bf4\u60a8\u5df2\u7ecf\u65ad\u5b9a\u76ee\u6807\u7a0b\u5e8f\u8ba1\u7b97\u91cf\u8f83\u5927\uff0c\u4e5f\u8bb8\u662f\u56e0\u4e3a\u6709\u4e9b\u4ee3\u7801\u5199\u7684\u4e0d\u591f\u7cbe\u7b80\u3002\u90a3\u4e48\u9762\u5bf9\u957f\u957f\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u7a76\u7adf\u54ea\u51e0\u884c\u4ee3\u7801\u9700\u8981\u8fdb\u4e00\u6b65\u4fee\u6539\u5462\uff1f\u8fd9\u4fbf\u9700\u8981\u4f7f\u7528 perf record \u8bb0\u5f55\u5355\u4e2a\u51fd\u6570\u7ea7\u522b\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u4f7f\u7528 perf report \u6765\u663e\u793a\u7edf\u8ba1\u7ed3\u679c\u3002\\r\\n\\r\\n\u60a8\u7684\u8c03\u4f18\u5e94\u8be5\u5c06\u6ce8\u610f\u529b\u96c6\u4e2d\u5230\u767e\u5206\u6bd4\u9ad8\u7684\u70ed\u70b9\u4ee3\u7801\u7247\u6bb5\u4e0a\uff0c\u5047\u5982\u4e00\u6bb5\u4ee3\u7801\u53ea\u5360\u7528\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u65f6\u95f4\u7684 0.1%\uff0c\u5373\u4f7f\u60a8\u5c06\u5176\u4f18\u5316\u5230\u4ec5\u5269\u4e00\u6761\u673a\u5668\u6307\u4ee4\uff0c\u6050\u6015\u4e5f\u53ea\u80fd\u5c06\u6574\u4f53\u7684\u7a0b\u5e8f\u6027\u80fd\u63d0\u9ad8 0.1%\u3002\u4fd7\u8bdd\u8bf4\uff0c\u597d\u94a2\u7528\u5728\u5200\u5203\u4e0a\uff0c\u4e0d\u5fc5\u6211\u591a\u8bf4\u4e86\u3002\\r\\n\\r\\n```\\r\\nperf record -e cpu-clock ./t1\\r\\nperf report\\r\\n```\\r\\n\\r\\nperf report \u8f93\u51fa\u7ed3\u679c\uff1a\\r\\n\\r\\n```\\r\\nEvents: 229 cpu-clock\\r\\n100.00% t1 t1 [.] longa\\r\\n```\\r\\n\\r\\n\u4e0d\u51fa\u6240\u6599\uff0chot spot \u662f longa( ) \u51fd\u6570\u3002\u4f46\uff0c\u4ee3\u7801\u662f\u975e\u5e38\u590d\u6742\u96be\u8bf4\u7684\uff0ct1 \u7a0b\u5e8f\u4e2d\u7684 foo1() \u4e5f\u662f\u4e00\u4e2a\u6f5c\u5728\u7684\u8c03\u4f18\u5bf9\u8c61\uff0c\u4e3a\u4ec0\u4e48\u8981\u8c03\u7528 100 \u6b21\u90a3\u4e2a\u65e0\u804a\u7684 longa() \u51fd\u6570\u5462\uff1f\u4f46\u6211\u4eec\u5728\u4e0a\u56fe\u4e2d\u65e0\u6cd5\u53d1\u73b0 foo1 \u548c foo2\uff0c\u66f4\u65e0\u6cd5\u4e86\u89e3\u4ed6\u4eec\u7684\u533a\u522b\u4e86\u3002\\r\\n\\r\\n\u6211\u66fe\u53d1\u73b0\u81ea\u5df1\u5199\u7684\u4e00\u4e2a\u7a0b\u5e8f\u5c45\u7136\u6709\u8fd1\u4e00\u534a\u7684\u65f6\u95f4\u82b1\u8d39\u5728 string \u7c7b\u7684\u51e0\u4e2a\u65b9\u6cd5\u4e0a\uff0cstring \u662f C++ \u6807\u51c6\uff0c\u6211\u7edd\u4e0d\u53ef\u80fd\u5199\u51fa\u6bd4 STL \u66f4\u597d\u7684\u4ee3\u7801\u4e86\u3002\u56e0\u6b64\u6211\u53ea\u6709\u627e\u5230\u81ea\u5df1\u7a0b\u5e8f\u4e2d\u8fc7\u591a\u4f7f\u7528 string \u7684\u5730\u65b9\u3002\u56e0\u6b64\u6211\u5f88\u9700\u8981\u6309\u7167\u8c03\u7528\u5173\u7cfb\u8fdb\u884c\u663e\u793a\u7684\u7edf\u8ba1\u4fe1\u606f\u3002\\r\\n\\r\\n\u4f7f\u7528 perf \u7684 -g \u9009\u9879\u4fbf\u53ef\u4ee5\u5f97\u5230\u9700\u8981\u7684\u4fe1\u606f\uff1a\\r\\n\\r\\n\u8f93\u51fa\u7ed3\u679c\uff1a\\r\\n\\r\\n```\\r\\nEvents: 270 cpu-clock\\r\\n- 100.00% t1 t1 [.] longa\\r\\n   - longa\\r\\n      + 91.85% foo1\\r\\n      + 8.15% foo2\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u5bf9 calling graph \u7684\u5206\u6790\uff0c\u80fd\u5f88\u65b9\u4fbf\u5730\u770b\u5230 91.85% \u7684\u65f6\u95f4\u90fd\u82b1\u8d39\u5728 foo1() \u51fd\u6570\u4e2d\uff0c\u56e0\u4e3a\u5b83\u8c03\u7528\u4e86 100 \u6b21 longa() \u51fd\u6570\uff0c\u56e0\u6b64\u5047\u5982 longa() \u662f\u4e2a\u65e0\u6cd5\u4f18\u5316\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5458\u5c31\u5e94\u8be5\u8003\u8651\u4f18\u5316 foo1\uff0c\u51cf\u5c11\u5bf9 longa() \u7684\u8c03\u7528\u6b21\u6570\u3002\\r\\n\\r\\n**\u2478\u4f7f\u7528tracepoint**\\r\\n\\r\\n\u5f53 perf \u6839\u636e tick \u65f6\u95f4\u70b9\u8fdb\u884c\u91c7\u6837\u540e\uff0c\u4eba\u4eec\u4fbf\u80fd\u591f\u5f97\u5230\u5185\u6838\u4ee3\u7801\u4e2d\u7684 hot spot\u3002\u90a3\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u4f7f\u7528 tracepoint \u6765\u91c7\u6837\u5462\uff1f\\r\\n\\r\\n\u6211\u60f3\u4eba\u4eec\u4f7f\u7528 tracepoint \u7684\u57fa\u672c\u9700\u6c42\u662f\u5bf9\u5185\u6838\u7684\u8fd0\u884c\u65f6\u884c\u4e3a\u7684\u5173\u5fc3\uff0c\u5982\u524d\u6240\u8ff0\uff0c\u6709\u4e9b\u5185\u6838\u5f00\u53d1\u4eba\u5458\u9700\u8981\u4e13\u6ce8\u4e8e\u7279\u5b9a\u7684\u5b50\u7cfb\u7edf\uff0c\u6bd4\u5982\u5185\u5b58\u7ba1\u7406\u6a21\u5757\u3002\u8fd9\u4fbf\u9700\u8981\u7edf\u8ba1\u76f8\u5173\u5185\u6838\u51fd\u6570\u7684\u8fd0\u884c\u60c5\u51b5\u3002\u53e6\u5916\uff0c\u5185\u6838\u884c\u4e3a\u5bf9\u5e94\u7528\u7a0b\u5e8f\u6027\u80fd\u7684\u5f71\u54cd\u4e5f\u662f\u4e0d\u5bb9\u5ffd\u89c6\u7684\uff1a\\r\\n\\r\\n\u4ee5\u4e4b\u524d\u7684\u9057\u61be\u4e3a\u4f8b\uff0c\u5047\u5982\u65f6\u5149\u5012\u6d41\uff0c\u6211\u60f3\u6211\u8981\u505a\u7684\u662f\u7edf\u8ba1\u8be5\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u7a76\u7adf\u53d1\u751f\u4e86\u591a\u5c11\u6b21\u7cfb\u7edf\u8c03\u7528\u3002\u5728\u54ea\u91cc\u53d1\u751f\u7684\uff1f\\r\\n\\r\\n\u4e0b\u9762\u6211\u7528 ls \u547d\u4ee4\u6765\u6f14\u793a sys_enter \u8fd9\u4e2a tracepoint \u7684\u4f7f\u7528\uff1a\\r\\n\\r\\n```\\r\\nroot@ubuntu-test:~# perf stat -e raw_syscalls:sys_enter ls\\r\\nbin libexec off perf.data.old t1 t3 tutong.iso\\r\\nbwtest minicom.log perf.data pktgen t1.c t3.c\\r\\n\\r\\n Performance counter stats for \'ls\':\\r\\n\\r\\n               111 raw_syscalls:sys_enter\\r\\n\\r\\n       0.001557549 seconds time elapsed\\r\\n```\\r\\n\\r\\n\u4e0a\u4e2a\u62a5\u544a\u8be6\u7ec6\u8bf4\u660e\u4e86\u5728 ls \u8fd0\u884c\u671f\u95f4\u53d1\u751f\u4e86\u591a\u5c11\u6b21\u7cfb\u7edf\u8c03\u7528 ( \u4e0a\u4f8b\u4e2d\u6709 111 \u6b21 )\u3002\\r\\n\\r\\n## 2.3\u5e38\u7528\u547d\u4ee4\u8be6\u89e3\\r\\n\\r\\nPerf \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u547d\u4ee4\u548c\u53c2\u6570\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u6027\u80fd\u5206\u6790\u9700\u6c42\u3002\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u547d\u4ee4\u53ca\u53c2\u6570\u3002\\r\\n\\r\\n**(1)\u5217\u51fa\u6240\u6709\u53ef\u76d1\u6d4b\u4e8b\u4ef6**\\r\\n\\r\\nperf list\u547d\u4ee4\u7528\u4e8e\u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709\u53ef\u76d1\u6d4b\u7684\u6027\u80fd\u4e8b\u4ef6\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u5305\u62ec\u786c\u4ef6\u6027\u80fd\u4e8b\u4ef6\u3001\u8f6f\u4ef6\u6027\u80fd\u4e8b\u4ef6\u4ee5\u53ca tracepoints\u3002\u786c\u4ef6\u6027\u80fd\u4e8b\u4ef6\u7531 CPU \u786c\u4ef6\u63d0\u4f9b\uff0c\u5982cycles\u8868\u793a CPU \u65f6\u949f\u5468\u671f\u8ba1\u6570\uff0cinstructions\u8868\u793a\u6267\u884c\u7684\u6307\u4ee4\u6570\uff0ccache-misses\u8868\u793a\u7f13\u5b58\u672a\u547d\u4e2d\u8ba1\u6570\u7b49\uff1b\u8f6f\u4ef6\u6027\u80fd\u4e8b\u4ef6\u7531\u5185\u6838\u8f6f\u4ef6\u63d0\u4f9b\uff0c\u4f8b\u5982context-switches\u8868\u793a\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6b21\u6570\uff0cpage-faults\u8868\u793a\u9875\u9762\u9519\u8bef\u7684\u6b21\u6570\uff0ccpu-migrations\u8868\u793a CPU \u8fc1\u79fb\u7684\u6b21\u6570\u7b49\uff1btracepoints \u5219\u662f\u5185\u6838\u4e2d\u9759\u6001 tracepoint \u6240\u89e6\u53d1\u7684\u4e8b\u4ef6\uff0c\u7528\u6765\u5224\u65ad\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u5185\u6838\u7684\u884c\u4e3a\u7ec6\u8282 \u3002\u4f7f\u7528perf list\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u7cfb\u7edf\u652f\u6301\u7684\u6240\u6709\u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\n$ perf list\\r\\nList of pre-defined events (to be used in -e):\\r\\n  branch-instructions OR branches                    [Hardware event]\\r\\n  branch-misses                                      [Hardware event]\\r\\n  bus-cycles                                         [Hardware event]\\r\\n  cache-misses                                       [Hardware event]\\r\\n  cache-references                                   [Hardware event]\\r\\n  cpu-cycles OR cycles                               [Hardware event]\\r\\n  instructions                                       [Hardware event]\\r\\n  alignment-faults                                   [Software event]\\r\\n  bpf-output                                         [Software event]\\r\\n  context-switches OR cs                             [Software event]\\r\\n  cpu-clock                                          [Software event]\\r\\n  cpu-migrations OR migrations                       [Software event]\\r\\n  dummy                                              [Software event]\\r\\n  emulation-faults                                   [Software event]\\r\\n  major-faults                                       [Software event]\\r\\n  minor-faults                                       [Software event]\\r\\n  page-faults OR faults                              [Software event]\\r\\n  task-clock                                         [Software event]\\r\\n  duration_time                                      [Tool event]\\r\\n  L1-dcache-load-misses                              [Hardware cache event]\\r\\n  L1-dcache-loads                                    [Hardware cache event]\\r\\n  L1-dcache-stores                                   [Hardware cache event]\\r\\n  L1-icache-load-misses                              [Hardware cache event]\\r\\n  L1-icache-loads                                    [Hardware cache event]\\r\\n  branch-load-misses                                 [Hardware cache event]\\r\\n  branch-loads                                       [Hardware cache event]\\r\\n  dTLB-load-misses                                   [Hardware cache event]\\r\\n  dTLB-loads                                         [Hardware cache event]\\r\\n  dTLB-store-misses                                  [Hardware cache event]\\r\\n  dTLB-stores                                        [Hardware cache event]\\r\\n  iTLB-load-misses                                   [Hardware cache event]\\r\\n  iTLB-loads                                         [Hardware cache event]\\r\\n  node-load-misses                                   [Hardware cache event]\\r\\n  node-loads                                         [Hardware cache event]\\r\\n  node-store-misses                                  [Hardware cache event]\\r\\n  node-stores                                        [Hardware cache event]\\r\\n  branch-instructions OR cpu/branch-instructions/    [Kernel PMU event]\\r\\n  branch-misses OR cpu/branch-misses/                [Kernel PMU event]\\r\\n  bus-cycles OR cpu/bus-cycles/                      [Kernel PMU event]\\r\\n  cache-misses OR cpu/cache-misses/                  [Kernel PMU event]\\r\\n  cache-references OR cpu/cache-references/          [Kernel PMU event]\\r\\n  cpu-cycles OR cpu/cpu-cycles/                      [Kernel PMU event]\\r\\n  instructions OR cpu/instructions/                  [Kernel PMU event]\\r\\n  mem-loads OR cpu/mem-loads/                        [Kernel PMU event]\\r\\n  mem-stores OR cpu/mem-stores/                      [Kernel PMU event]\\r\\n  ref-cycles OR cpu/ref-cycles/                      [Kernel PMU event]\\r\\n  topdown-fetch-bubbles OR cpu/topdown-fetch-bubbles/ [Kernel PMU event]\\r\\n  topdown-recovery-bubbles OR cpu/topdown-recovery-bubbles/ [Kernel PMU event]\\r\\n  topdown-slots-issued OR cpu/topdown-slots-issued/  [Kernel PMU event]\\r\\n  topdown-slots-retired OR cpu/topdown-slots-retired/ [Kernel PMU event]\\r\\n  topdown-total-slots OR cpu/topdown-total-slots/    [Kernel PMU event]\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u67e5\u770b\u8fd9\u4e9b\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u4e86\u89e3\u7cfb\u7edf\u4e2d\u54ea\u4e9b\u6027\u80fd\u6307\u6807\u662f\u53ef\u4ee5\u88ab\u76d1\u6d4b\u7684\uff0c\u4ece\u800c\u5728\u8fdb\u884c\u6027\u80fd\u5206\u6790\u65f6\u9009\u62e9\u5408\u9002\u7684\u4e8b\u4ef6\u8fdb\u884c\u76d1\u6d4b\u3002\\r\\n\\r\\n**(2)\u663e\u793a\u7edf\u8ba1\u4fe1\u606f**\\r\\n\\r\\nperf stat\u547d\u4ee4\u7528\u4e8e\u5206\u6790\u6307\u5b9a\u7a0b\u5e8f\u6216\u547d\u4ee4\u7684\u6027\u80fd\u6982\u51b5\uff0c\u5b83\u4f1a\u5728\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f\u540e\uff0c\u8f93\u51fa\u5404\u7c7b\u4e8b\u4ef6\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e2e\u52a9\u7528\u6237\u4e86\u89e3\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u6027\u80fd\u8868\u73b0\u3002\u4f8b\u5982\uff0c\u4f7f\u7528perf stat\u547d\u4ee4\u76d1\u6d4bls\u547d\u4ee4\u7684\u6027\u80fd\uff1a\\r\\n\\r\\n```\\r\\n$ perf stat ls\\r\\nPerformance counter stats for \'ls\':\\r\\n\\r\\n         0.653782 task-clock (msec)         #    0.691 CPUs utilized\\r\\n                 0 context-switches          #    0.000 K/sec\\r\\n                 0 CPU-migrations            #    0.000 K/sec\\r\\n               247 page-faults               #    0.378 M/sec\\r\\n         1,625,426 cycles                    #    2.486 GHz\\r\\n         1,050,293 stalled-cycles-frontend   #   64.62% frontend cycles idle\\r\\n           838,781 stalled-cycles-backend    #   51.60% backend cycles idle\\r\\n         1,055,735 instructions              #    0.65  insns per cycle\\r\\n                                              #    0.99  stalled cycles per insn\\r\\n           210,587 branches                  #  322.106 M/sec\\r\\n            10,809 branch-misses             #    5.13% of all branches\\r\\n\\r\\n       0.000945883 seconds time elapsed\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u8f93\u51fa\u4e2d\uff0ctask-clock\u8868\u793a\u4efb\u52a1\u771f\u6b63\u5360\u7528\u7684\u5904\u7406\u5668\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff1bCPUs utilized\u8868\u793a CPU \u7684\u5360\u7528\u7387\uff0c\u901a\u8fc7task-clock\u9664\u4ee5time elapsed\u8ba1\u7b97\u5f97\u51fa\uff1bcontext-switches\u8868\u793a\u4e0a\u4e0b\u6587\u7684\u5207\u6362\u6b21\u6570\uff1bCPU-migrations\u8868\u793a\u5904\u7406\u5668\u8fc1\u79fb\u6b21\u6570\uff0cLinux \u4e3a\u4e86\u7ef4\u6301\u591a\u4e2a\u5904\u7406\u5668\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u4f1a\u5c06\u67d0\u4e2a\u4efb\u52a1\u4ece\u4e00\u4e2a CPU \u8fc1\u79fb\u5230\u53e6\u4e00\u4e2a CPU\uff1bpage-faults\u8868\u793a\u7f3a\u9875\u5f02\u5e38\u7684\u6b21\u6570\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u8bf7\u6c42\u7684\u9875\u9762\u5c1a\u672a\u5efa\u7acb\u3001\u8bf7\u6c42\u7684\u9875\u9762\u4e0d\u5728\u5185\u5b58\u4e2d\uff0c\u6216\u8005\u8bf7\u6c42\u7684\u9875\u9762\u867d\u7136\u5728\u5185\u5b58\u4e2d\uff0c\u4f46\u7269\u7406\u5730\u5740\u548c\u865a\u62df\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb\u5c1a\u672a\u5efa\u7acb\u65f6\uff0c\u90fd\u4f1a\u89e6\u53d1\u4e00\u6b21\u7f3a\u9875\u5f02\u5e38\uff1bcycles\u8868\u793a\u6d88\u8017\u7684\u5904\u7406\u5668\u5468\u671f\u6570\uff1binstructions\u8868\u793a\u6267\u884c\u7684\u6307\u4ee4\u6570\uff1bbranches\u8868\u793a\u9047\u5230\u7684\u5206\u652f\u6307\u4ee4\u6570\uff1bbranch-misses\u8868\u793a\u9884\u6d4b\u9519\u8bef\u7684\u5206\u652f\u6307\u4ee4\u6570\uff1btime elapsed\u8868\u793a\u7a0b\u5e8f\u6301\u7eed\u65f6\u95f4\u3002\\r\\n\\r\\nperf stat\u547d\u4ee4\u8fd8\u53ef\u4ee5\u901a\u8fc7-e\u9009\u9879\u6307\u5b9a\u8981\u663e\u793a\u7edf\u8ba1\u7684\u6027\u80fd\u4e8b\u4ef6\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\n$ perf stat -e cache-misses,cache-references ls\\r\\nPerformance counter stats for \'ls\':\\r\\n\\r\\n            13,808 cache-misses              #    14.603 M/sec\\r\\n            53,932 cache-references          #    57.029 M/sec\\r\\n\\r\\n       0.000945883 seconds time elapsed\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u547d\u4ee4\u53ea\u7edf\u8ba1\u4e86cache-misses\u548ccache-references\u4e8b\u4ef6\uff0c\u5e2e\u52a9\u7528\u6237\u66f4\u4e13\u6ce8\u5730\u4e86\u89e3\u7a0b\u5e8f\u5728\u7f13\u5b58\u65b9\u9762\u7684\u6027\u80fd\u8868\u73b0\u3002\\r\\n\\r\\n**(3)\u5b9e\u65f6\u67e5\u770b\u7cfb\u7edf\u6027\u80fd**\\r\\n\\r\\nperf top\u547d\u4ee4\u7528\u4e8e\u5b9e\u65f6\u663e\u793a\u7cfb\u7edf\u6216\u8fdb\u7a0b\u7684\u6027\u80fd\u7edf\u8ba1\u4fe1\u606f\uff0c\u5b83\u4f1a\u52a8\u6001\u5730\u5c55\u793a\u5360\u7528\u6700\u591a CPU \u65f6\u95f4\u7684\u51fd\u6570\u6216\u7a0b\u5e8f\uff0c\u7c7b\u4f3c\u4e8etop\u547d\u4ee4\uff0c\u4f46\u66f4\u52a0\u4e13\u6ce8\u4e8e\u6027\u80fd\u5206\u6790\u3002\u76f4\u63a5\u8fd0\u884cperf top\u547d\u4ee4\uff0c\u5c06\u4f1a\u5c55\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u8fdb\u7a0b\u548c\u51fd\u6570\uff0c\u6309\u7167\u5b83\u4eec\u5360\u7528 CPU \u65f6\u95f4\u7684\u767e\u5206\u6bd4\u964d\u5e8f\u6392\u5217\uff1a\\r\\n\\r\\n```\\r\\n$ perf top\\r\\nSamples: 1M of event \'cycles\', Event count (approx.): 73891391490\\r\\n  5.44%  perf                 [.] 0x0000000000023256\\r\\n  4.86%  [kernel]             [k] _spin_lock\\r\\n  2.43%  [kernel]             [k] _spin_lock_bh\\r\\n  2.29%  [kernel]             [k] _spin_lock_irqsave\\r\\n  1.77%  [kernel]             [k] __d_lookup\\r\\n  1.55%  libc-2.12.so         [.] __strcmp_sse42\\r\\n  1.43%  nginx                [.] ngx_vslprintf\\r\\n  1.37%  [kernel]             [k] tcp_poll\\r\\n```\\r\\n\\r\\n\u7b2c\u4e00\u5217\u8868\u793a\u7b26\u53f7\u5f15\u53d1\u7684\u6027\u80fd\u4e8b\u4ef6\u7684\u6bd4\u4f8b\uff0c\u9ed8\u8ba4\u6307\u5360\u7528\u7684 CPU \u5468\u671f\u6bd4\u4f8b\uff1b\u7b2c\u4e8c\u5217\u8868\u793a\u7b26\u53f7\u6240\u5728\u7684 DSO\uff08Dynamic Shared Object\uff09\uff0c\u53ef\u4ee5\u662f\u5e94\u7528\u7a0b\u5e8f\u3001\u5185\u6838\u3001\u52a8\u6001\u94fe\u63a5\u5e93\u3001\u6a21\u5757\uff1b\u7b2c\u4e09\u5217\u8868\u793a DSO \u7684\u7c7b\u578b\uff0c[.]\u8868\u793a\u6b64\u7b26\u53f7\u5c5e\u4e8e\u7528\u6237\u6001\u7684 ELF \u6587\u4ef6\uff0c\u5305\u62ec\u53ef\u6267\u884c\u6587\u4ef6\u4e0e\u52a8\u6001\u94fe\u63a5\u5e93\uff0c[k]\u8868\u793a\u6b64\u7b26\u53f7\u5c5e\u4e8e\u5185\u6838\u6216\u6a21\u5757\uff1b\u7b2c\u56db\u5217\u8868\u793a\u7b26\u53f7\u540d\uff0c\u6709\u4e9b\u7b26\u53f7\u4e0d\u80fd\u89e3\u6790\u4e3a\u51fd\u6570\u540d\uff0c\u53ea\u80fd\u7528\u5730\u5740\u8868\u793a\u3002\\r\\n\\r\\n\u5982\u679c\u53ea\u60f3\u5173\u6ce8\u7279\u5b9a\u7684\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528-p\u9009\u9879\uff0c\u540e\u9762\u8ddf\u4e0a\u8fdb\u7a0b\u7684 PID\uff1a\\r\\n\\r\\n```\\r\\n$ perf top -p <PID>\\r\\n```\\r\\n\\r\\n\u4f7f\u7528-e\u9009\u9879\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u7279\u5b9a\u7684\u6027\u80fd\u4e8b\u4ef6\uff0c\u6bd4\u5982\u5173\u5fc3\u7f13\u5b58\u672a\u547d\u4e2d\uff08cache misses\uff09\uff1a\\r\\n\\r\\n```\\r\\n$ perf top -e cache-misses\\r\\n```\\r\\n\\r\\n-a\u9009\u9879\u7528\u4e8e\u67e5\u770b\u6240\u6709 CPU \u7684\u6570\u636e\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u9ed8\u8ba4\u7684 CPU 0\uff1a\\r\\n\\r\\n```\\r\\n$ perf top -a\\r\\n```\\r\\n\\r\\n-K\u9009\u9879\u53ef\u4ee5\u9690\u85cf\u5185\u6838\u76f8\u5173\u7684\u7b26\u53f7\uff0c\u5982\u679c\u53ea\u5bf9\u7528\u6237\u7a7a\u95f4\u7684\u6027\u80fd\u611f\u5174\u8da3\uff0c\u8fd9\u4e2a\u9009\u9879\u4f1a\u975e\u5e38\u6709\u7528\uff1a\\r\\n\\r\\n```\\r\\n$ perf top -K\\r\\n```\\r\\n\\r\\n\u5728\u8fd0\u884cperf top\u65f6\uff0c\u9700\u8981\u786e\u4fdd\u6709\u8db3\u591f\u7684\u6743\u9650\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u9700\u8981 root \u6743\u9650\u624d\u80fd\u8fd0\u884c\u5b83\u3002\u5e76\u4e14\uff0cperf top\u7684\u7ed3\u679c\u662f\u5b9e\u65f6\u66f4\u65b0\u7684\uff0c\u7528\u6237\u53ea\u9700\u8981\u4fdd\u6301\u7a97\u53e3\u5f00\u542f\uff0c\u5c31\u53ef\u4ee5\u5b9e\u65f6\u89c2\u5bdf\u5230\u7cfb\u7edf\u6027\u80fd\u7684\u53d8\u5316\u3002\\r\\n\\r\\n**(4)\u8bb0\u5f55\u4e0e\u751f\u6210\u62a5\u544a**\\r\\n\\r\\nperf record\u547d\u4ee4\u7528\u4e8e\u6536\u96c6\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u6027\u80fd\u6570\u636e\uff0c\u5e76\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u4e00\u4e2a\u540d\u4e3aperf.data\u7684\u6587\u4ef6\u4e2d\u3002\u4f8b\u5982\uff0c\u4f7f\u7528perf record\u547d\u4ee4\u8bb0\u5f55ls\u547d\u4ee4\u7684\u6027\u80fd\u6570\u636e\uff1a\\r\\n\\r\\n```\\r\\n$ perf record -g ls\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u547d\u4ee4\u4e2d\uff0c-g\u9009\u9879\u7528\u4e8e\u8bb0\u5f55\u51fd\u6570\u95f4\u7684\u8c03\u7528\u5173\u7cfb\uff0c\u65b9\u4fbf\u540e\u7eed\u5206\u6790\u51fd\u6570\u7684\u8c03\u7528\u6808\u3002\u8fd0\u884c\u8be5\u547d\u4ee4\u540e\uff0cls\u547d\u4ee4\u7684\u6027\u80fd\u6570\u636e\u4f1a\u88ab\u8bb0\u5f55\u5230perf.data\u6587\u4ef6\u4e2d\u3002\\r\\n\\r\\nperf report\u547d\u4ee4\u7528\u4e8e\u5206\u6790perf record\u751f\u6210\u7684perf.data\u6587\u4ef6\uff0c\u5e76\u663e\u793a\u5206\u6790\u62a5\u544a\u3002\u8fd0\u884cperf report\u547d\u4ee4\u540e\uff0c\u4f1a\u8fdb\u5165\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u754c\u9762\uff0c\u5c55\u793a\u6027\u80fd\u6570\u636e\u7684\u8be6\u7ec6\u5206\u6790\u7ed3\u679c\uff0c\u5305\u62ec\u51fd\u6570\u7684\u8c03\u7528\u5173\u7cfb\u3001\u6bcf\u4e2a\u51fd\u6570\u5360\u7528\u7684 CPU \u65f6\u95f4\u7b49\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\n$ perf report -i perf.data\\r\\n```\\r\\n\\r\\n-i\u9009\u9879\u7528\u4e8e\u6307\u5b9a\u8981\u5206\u6790\u7684perf.data\u6587\u4ef6\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u5206\u6790\u5f53\u524d\u76ee\u5f55\u4e0b\u7684perf.data\u6587\u4ef6\u3002\u5728\u4ea4\u4e92\u5f0f\u754c\u9762\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u65b9\u5411\u952e\u4e0a\u4e0b\u79fb\u52a8\u9009\u62e9\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u6309\u56de\u8f66\u952e\u53ef\u4ee5\u67e5\u770b\u51fd\u6570\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5982\u6c47\u7f16\u4ee3\u7801\u3001\u8c03\u7528\u6808\u7b49\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528/\u952e\u8fdb\u884c\u641c\u7d22\uff0c\u8f93\u5165\u5173\u952e\u8bcd\u6765\u67e5\u627e\u7279\u5b9a\u7684\u51fd\u6570\u6216\u7b26\u53f7\u3002\\r\\n\\r\\n\u6b64\u5916\uff0cperf report\u547d\u4ee4\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u53c2\u6570\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u5206\u6790\u3002\u4f8b\u5982\uff0c-d\u9009\u9879\u53ea\u663e\u793a\u6307\u5b9a DSO \u7684\u7b26\u53f7\uff0c-C\u9009\u9879\u53ea\u663e\u793a\u6307\u5b9a comm\uff08\u89e6\u53d1\u4e8b\u4ef6\u7684\u8fdb\u7a0b\u540d\uff09\u7684\u4fe1\u606f\uff0c-S\u9009\u9879\u53ea\u8003\u8651\u6307\u5b9a\u7b26\u53f7\uff0c-U\u9009\u9879\u53ea\u663e\u793a\u5df2\u89e3\u6790\u7684\u7b26\u53f7\uff0c-g[type,min,order]\u9009\u9879\u663e\u793a\u8c03\u7528\u5173\u7cfb\uff0c\u5177\u4f53\u7b49\u540c\u4e8eperf top\u547d\u4ee4\u4e2d\u7684-g\u9009\u9879 \u3002\u901a\u8fc7\u8fd9\u4e9b\u53c2\u6570\u7684\u7ec4\u5408\u4f7f\u7528\uff0c\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u9700\u6c42\u5bf9\u6027\u80fd\u6570\u636e\u8fdb\u884c\u66f4\u6709\u9488\u5bf9\u6027\u7684\u5206\u6790\u3002\\r\\n\\r\\n# \u4e09\u3001Perf\u7684\u5e94\u7528\u573a\u666f\u4e0e\u91cd\u8981\u6027\\r\\n\\r\\n## 3.1\u6027\u80fd\u95ee\u9898\u5b9a\u4f4d\\r\\n\\r\\nperf \u5728\u89e3\u51b3\u7cfb\u7edf\u6027\u80fd\u95ee\u9898\u65b9\u9762\u53d1\u6325\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528\u3002\u5f53\u9762\u4e34 CPU \u5229\u7528\u7387\u8fc7\u9ad8\u7684\u60c5\u51b5\u65f6\uff0cperf \u53ef\u4ee5\u901a\u8fc7\u6536\u96c6\u6027\u80fd\u6570\u636e\uff0c\u5206\u6790\u5404\u4e2a\u8fdb\u7a0b\u548c\u51fd\u6570\u5bf9 CPU \u8d44\u6e90\u7684\u5360\u7528\u60c5\u51b5\uff0c\u627e\u51fa\u5bfc\u81f4\u9ad8 CPU \u4f7f\u7528\u7387\u7684\u70ed\u70b9\u4ee3\u7801\u6bb5\u3002\u4f8b\u5982\uff0c\u901a\u8fc7 perf top \u547d\u4ee4\u53ef\u4ee5\u5b9e\u65f6\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u4e2d\u6d88\u8017 CPU \u5468\u671f\u6700\u591a\u7684\u51fd\u6570\u6216\u6307\u4ee4\uff0c\u5feb\u901f\u5b9a\u4f4d\u53ef\u80fd\u5b58\u5728\u6027\u80fd\u95ee\u9898\u7684\u4ee3\u7801\u533a\u57df\u3002\\r\\n\\r\\n\u5728 cache miss \u8fc7\u591a\u7684\u573a\u666f\u4e0b\uff0cperf \u80fd\u591f\u8bc4\u4f30\u7a0b\u5e8f\u5bf9\u5404\u7ea7 cache \u7684\u8bbf\u95ee\u6b21\u6570\u548c\u4e22\u5931\u6b21\u6570\u3002\u5229\u7528 perf stat \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u4e0e cache \u76f8\u5173\u7684\u6027\u80fd\u4e8b\u4ef6\uff0c\u5982 L1-dcache-loads\u3001L1-dcache-load-miss \u7b49\uff0c\u4e86\u89e3 cache \u7684\u5229\u7528\u60c5\u51b5\u3002\u5982\u679c\u53d1\u73b0 cache miss \u7387\u8fc7\u9ad8\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5206\u6790\u4ee3\u7801\uff0c\u4f18\u5316\u6570\u636e\u8bbf\u95ee\u6a21\u5f0f\u4ee5\u63d0\u9ad8 cache \u547d\u4e2d\u7387\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u5185\u5b58 I/O \u8fc7\u6162\u7684\u95ee\u9898\uff0cperf \u53ef\u4ee5\u8bc4\u4f30\u7a0b\u5e8f\u7684\u5185\u5b58\u8bbf\u95ee\u884c\u4e3a\u3002\u901a\u8fc7\u6536\u96c6\u4e0e\u5185\u5b58\u76f8\u5173\u7684\u6027\u80fd\u4e8b\u4ef6\uff0c\u5982 page-faults\u3001dTLB-loads\u3001dTLB-load-miss \u7b49\uff0c\u5206\u6790\u5185\u5b58\u8bbf\u95ee\u7684\u6548\u7387\u3002\u5982\u679c\u9891\u7e41\u51fa\u73b0\u9875\u9519\u8bef\u6216\u8005 TLB \u672a\u547d\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u8c03\u6574\u5185\u5b58\u5206\u914d\u7b56\u7565\u6216\u8005\u4f18\u5316\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee\u7684\u5f00\u9500\u3002\\r\\n\\r\\n\u6b64\u5916\uff0cperf \u8fd8\u53ef\u4ee5\u751f\u6210\u7a0b\u5e8f\u7684\u8c03\u7528\u56fe\uff0c\u8bb0\u5f55\u51fd\u6570\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u3002\u901a\u8fc7 perf record \u548c perf report \u547d\u4ee4\uff0c\u53ef\u4ee5\u6536\u96c6\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u6027\u80fd\u6570\u636e\uff0c\u5e76\u751f\u6210\u8be6\u7ec6\u7684\u62a5\u544a\uff0c\u5305\u62ec\u51fd\u6570\u8c03\u7528\u56fe\u3001\u8017\u65f6\u5206\u5e03\u7b49\u4fe1\u606f\u3002\u8fd9\u6709\u52a9\u4e8e\u7406\u89e3\u7a0b\u5e8f\u7684\u6267\u884c\u6d41\u7a0b\uff0c\u627e\u51fa\u53ef\u80fd\u5b58\u5728\u6027\u80fd\u74f6\u9888\u7684\u51fd\u6570\u8c03\u7528\u94fe\u3002\\r\\n\\r\\n\u540c\u65f6\uff0cperf \u8fd8\u80fd\u68c0\u6d4b\u7a0b\u5e8f\u7684\u5185\u5b58\u6cc4\u6f0f\u95ee\u9898\u3002\u867d\u7136\u6587\u7ae0\u4e2d\u672a\u660e\u786e\u63d0\u53ca perf \u5728\u5185\u5b58\u6cc4\u6f0f\u68c0\u6d4b\u65b9\u9762\u7684\u5177\u4f53\u65b9\u6cd5\uff0c\u4f46\u53ef\u4ee5\u63a8\u6d4b\uff0c\u901a\u8fc7\u5bf9\u5185\u5b58\u76f8\u5173\u6027\u80fd\u4e8b\u4ef6\u7684\u76d1\u6d4b\u4ee5\u53ca\u5bf9\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u7684\u5206\u6790\uff0c\u53ef\u80fd\u80fd\u591f\u53d1\u73b0\u5185\u5b58\u6cc4\u6f0f\u7684\u8ff9\u8c61\u3002\u4f8b\u5982\uff0c\u6301\u7eed\u89c2\u5bdf\u5185\u5b58\u4f7f\u7528\u91cf\u7684\u589e\u957f\u60c5\u51b5\uff0c\u7ed3\u5408\u51fd\u6570\u8c03\u7528\u56fe\u5206\u6790\u53ef\u80fd\u5b58\u5728\u5185\u5b58\u5206\u914d\u4f46\u672a\u91ca\u653e\u7684\u4f4d\u7f6e\u3002\\r\\n\\r\\n## 3.2\u6027\u80fd\u4f18\u5316\u5173\u952e\\r\\n\\r\\nperf \u5728\u7a0b\u5e8f\u6027\u80fd\u4f18\u5316\u4e2d\u5177\u6709\u4e0d\u53ef\u66ff\u4ee3\u7684\u91cd\u8981\u6027\u3002\u5b83\u53ef\u4ee5\u6df1\u5165\u4e86\u89e3\u5e94\u7528\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u5173\u952e\u7684\u6027\u80fd\u6307\u6807\u548c\u5206\u6790\u7ed3\u679c\uff0c\u5e2e\u52a9\u53d1\u73b0\u6027\u80fd\u74f6\u9888\u5e76\u8fdb\u884c\u9488\u5bf9\u6027\u4f18\u5316\u3002\\r\\n\\r\\n\u901a\u8fc7\u8ffd\u8e2a CPU \u4f7f\u7528\u60c5\u51b5\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4e86\u89e3\u7a0b\u5e8f\u5728\u4e0d\u540c\u9636\u6bb5\u5bf9 CPU \u8d44\u6e90\u7684\u6d88\u8017\u60c5\u51b5\u3002\u5229\u7528 perf stat \u547d\u4ee4\u53ef\u4ee5\u83b7\u53d6\u8bf8\u5982 cycles\u3001instructions\u3001IPC \u7b49\u6307\u6807\uff0c\u5206\u6790\u7a0b\u5e8f\u662f\u5426\u5145\u5206\u5229\u7528\u4e86\u5904\u7406\u5668\u7684\u7279\u6027\u3002\u5982\u679c IPC \u503c\u8f83\u4f4e\uff0c\u53ef\u80fd\u9700\u8981\u4f18\u5316\u4ee3\u7801\u4ee5\u63d0\u9ad8\u6307\u4ee4\u7684\u6267\u884c\u6548\u7387\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u6307\u4ee4\u6216\u5faa\u73af\u3002\\r\\n\\r\\n\u5185\u5b58\u5360\u7528\u7684\u8ffd\u8e2a\u4e5f\u662f\u6027\u80fd\u4f18\u5316\u7684\u91cd\u8981\u65b9\u9762\u3002perf \u53ef\u4ee5\u76d1\u6d4b\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u5305\u62ec\u5185\u5b58\u5206\u914d\u3001\u91ca\u653e\u4ee5\u53ca cache \u7684\u5229\u7528\u60c5\u51b5\u3002\u901a\u8fc7\u5206\u6790\u8fd9\u4e9b\u6570\u636e\uff0c\u53ef\u4ee5\u4f18\u5316\u5185\u5b58\u7ba1\u7406\u7b56\u7565\uff0c\u51cf\u5c11\u5185\u5b58\u788e\u7247\uff0c\u63d0\u9ad8\u5185\u5b58\u7684\u4f7f\u7528\u6548\u7387\u3002\u4f8b\u5982\uff0c\u5408\u7406\u8c03\u6574\u6570\u636e\u7ed3\u6784\u7684\u5927\u5c0f\u548c\u5e03\u5c40\uff0c\u907f\u514d\u9891\u7e41\u7684\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u64cd\u4f5c\u3002\\r\\n\\r\\n\u51fd\u6570\u8c03\u7528\u5806\u6808\u7684\u8ffd\u8e2a\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u627e\u51fa\u70ed\u70b9\u51fd\u6570\uff0c\u5373\u90a3\u4e9b\u6d88\u8017\u5927\u91cf\u8d44\u6e90\u7684\u51fd\u6570\u3002\u5229\u7528 perf top \u548c perf record \u547d\u4ee4\u53ef\u4ee5\u6536\u96c6\u51fd\u6570\u7ea7\u522b\u7684\u6027\u80fd\u6570\u636e\uff0c\u786e\u5b9a\u54ea\u4e9b\u51fd\u6570\u662f\u6027\u80fd\u74f6\u9888\u6240\u5728\u3002\u9488\u5bf9\u70ed\u70b9\u51fd\u6570\uff0c\u53ef\u4ee5\u8fdb\u884c\u7b97\u6cd5\u4f18\u5316\u6216\u4ee3\u7801\u91cd\u6784\uff0c\u63d0\u9ad8\u5176\u6267\u884c\u6548\u7387\u3002\\r\\n\\r\\n# \u56db\u3001\u5e38\u89c1\u6027\u80fd\u95ee\u9898\u5206\u6790\\r\\n\\r\\n**\u2474\u6027\u80fd\u6d4b\u8bd5\u5927\u81f4\u5206\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a**\\r\\n\\r\\n1. \u9700\u6c42\u5206\u6790\\r\\n2. \u811a\u672c\u51c6\u5907\\r\\n3. \u6d4b\u8bd5\u6267\u884c\\r\\n4. \u7ed3\u679c\u6574\u7406\\r\\n5. \u95ee\u9898\u5206\u6790\\r\\n\\r\\n> \u9700\u6c42\u63cf\u8ff0\uff1a\u6709\u4e00\u4e2a\u670d\u52a1\uff0c\u542f\u52a8\u65f6\u4f1a\u52a0\u8f7d\u4e00\u4e2a1G\u7684\u8bcd\u8868\u6587\u4ef6\u5230\u5185\u5b58\uff0c\u8bf7\u6c42\u6765\u4e86\u4e4b\u540e\uff0c\u4f1a\u628a\u8bf7\u6c42\u8bcd\u53bb\u8bcd\u8868\u91cc\u505a\u6a21\u7cca\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u5230\u4e86\u5c31\u5411\u4e00\u4e2a\u540e\u7aef\u670d\u52a1\u53d1\u9001\u4e00\u6761http\u8bf7\u6c42\uff0c\u62ff\u56de\u6570\u636e\u4e4b\u540e\uff0c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7684\u540c\u65f6\uff0c\u5411mysql\u8bb0\u5f55\u8bf7\u6c42\u7684\u552f\u4e00\u6807\u8bc6\u548c\u4e00\u4e2a\u8bf7\u6c42\u6b21\u6570\u7684\u6807\u8bb0\uff1b\\r\\n\\r\\n- \u5176\u4e2d\u6709\u51e0\u4e2a\u5173\u952e\u51fd\u6570\\r\\n- \u6a21\u7cca\u5339\u914d\uff08fuzzyMatching\uff09\\r\\n- \u540e\u7aef\u8bf7\u6c42\u51fd\u6570\uff08sendingRequest\uff09\\r\\n- \u62fc\u88c5\u8bf7\u6c42\u51fd\u6570\uff08buildResponse\uff09\\r\\n- \u8bb0\u5f55mysql\u8bf7\u6c42\u6b21\u6570\u6807\u8bb0\uff08signNum\uff09\\r\\n\\r\\n**\u95ee\u9898\u53ca\u5206\u6790\uff1a**\\r\\n\\r\\n\u7b2c\u4e00\u7ec4\uff1a\u5b8c\u5168\u968f\u673a\u8bf7\u6c42\u8bcd\uff0cqps\u8fbe\u52301k\u65f6\uff0c\u670d\u52a1\u5668\u672a\u89c1\u5f02\u5e38\uff0ccpu\u3001\u5185\u5b58\u3001\u5e26\u5bbd\u5747\u672a\u6ee1\uff0cqps\u65e0\u6cd5\u7ee7\u7eed\u63d0\u5347\uff1b\\r\\n\\r\\n> \u5206\u6790\uff1a\u7531\u4e8e\u6b64\u670d\u52a1\u540e\u7aef\u8fde\u63a5\u4e86\u5176\u5b83\u670d\u52a1\uff0c\u6240\u4ee5\u5728\u538b\u6d4b\u4e4b\u524d\uff0c\u8981\u786e\u8ba4\u540e\u7aef\u670d\u52a1\u4e0d\u4f1a\u6210\u4e3a\u74f6\u9888\u70b9\uff0c\u76ee\u524d\u7684\u72b6\u6001\u5f88\u53ef\u80fd\u662f\u540e\u7aef\u670d\u52a1\u9650\u5236\u4e86\u88ab\u6d4b\u670d\u52a1\u7684\u6027\u80fd\uff1b\u6b64\u65f6\u53ef\u4ee5\u68c0\u67e5\u540e\u7aef\u670d\u52a1\u6240\u5728\u673a\u5668\u7684\u5404\u9879\u6307\u6807\uff0c\u6216\u8005\u67e5\u770b\u672c\u673a\u7684\u8fde\u63a5\u72b6\u51b5\uff0c\u4e00\u822c\u540e\u7aef\u670d\u52a1\u65e0\u6cd5\u5904\u7406\uff0c\u800c\u88ab\u6d4b\u670d\u52a1\u53c8\u4f1a\u4e00\u76f4\u5411\u540e\u9762\u8bf7\u6c42\u7684\u8bdd\uff0ctimewait\u72b6\u6001\u7684\u8fde\u63a5\u4f1a\u53d8\u5f97\u6bd4\u8f83\u591a\uff1b\\r\\n\\r\\n\u7b2c\u4e8c\u7ec4\uff1a\u89e3\u51b3\u540e\u7aef\u670d\u52a1\u7684\u95ee\u9898\u540e\uff0c\u7b2c\u4e8c\u7ec4\u4f7f\u7528\u5e73\u574730\u4e2a\u5b57\u7684\u8bf7\u6c42\u8bcd\uff0c\u6765\u6253\u538b\uff0cqps\u5230400\u65f6\uff0ccpu load\u5df2\u6ee1\uff1b\\r\\n\\r\\n> \u5206\u6790\uff1a\u8fd9\u79cd\u60c5\u51b5\u660e\u663e\u662f\u7531\u4e8efuzzyMatching\u51fd\u6570\u8ba1\u7b97\u6548\u7387\u7684\u95ee\u9898\u5bfc\u81f4cpu\u6ee1\u8f7d\uff0c\u4ece\u800c\u65e0\u6cd5\u63d0\u5347qps\uff0c\u4f7f\u54cd\u5e94\u65f6\u95f4\u4e0d\u65ad\u589e\u5927\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7perf+\u706b\u7130\u56fe\u6765\u786e\u5b9a\u6574\u4e2a\u5904\u7406\u8bf7\u6c42\u8fc7\u7a0b\u4e2d\u54cd\u5e94\u65f6\u95f4\u957f\u7684\u51fd\u6570\uff1b\u6b64\u65f6\u9700\u8981\u8bc4\u4f30\u538b\u6d4b\u6570\u636e\u662f\u5426\u5408\u7406\uff0c\u5982\u679c\u7ebf\u4e0a\u5e73\u5747\u8bf7\u6c42\u8bcd\u53ea\u67092\u4e2a\u7684\u65f6\u5019\uff0c\u6b64\u7ec4\u6d4b\u8bd5\u660e\u663e\u4e0d\u5408\u7406\uff0c\u6b64\u65f6\u8981\u5f00\u53d1\u8fdb\u884c\u6027\u80fd\u4f18\u5316\u5c31\u662f\u6d6a\u8d39\u65f6\u95f4\u7684\uff1b\u5982\u679c\u8bc4\u4f30\u6d4b\u8bd5\u6570\u636e\u5408\u7406\uff0c\u53ef\u4ee5\u518d\u6b21\u66f4\u6362\u77ed\u8bcd\u6570\u636e\u8fdb\u884c\u538b\u6d4b\u9a8c\u8bc1\u731c\u6d4b\uff1b\\r\\n\\r\\n\u7b2c\u4e09\u7ec4\uff1a\u89e3\u51b3\u4e86\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\u4e4b\u540e\uff0c\u4f7f\u7528\u5b8c\u5168\u968f\u673a\u8bf7\u6c42\u8bcd\uff0cqps\u5230\u8fbe3k\u540e\u964d\u4f4e\u81f31k\uff0c\u7136\u540e\u518d\u6b21\u63d0\u5347\u52303k\uff0c\u5982\u6b64\u53cd\u590d\uff1b\\r\\n\\r\\n> \u5206\u6790\uff1a\u6b64\u65f6\u5173\u6ce8\u4e00\u4e0b\u5404\u9879\u6307\u6807\uff0c\u6392\u9664\u4e86\u4ee5\u4e0a\u7684\u95ee\u9898\u7684\u8bdd\uff0c\u64cd\u4f5cmysql\u6162\u7684\u95ee\u9898\u53ef\u80fd\u6027\u5927\u4e00\u4e9b\uff0c\u5bf9\u8fd9\u79cd\u9700\u8981\u9ad8\u5e76\u53d1\u7684\u7cfb\u7edf\u6765\u8bf4\uff0c\u76f4\u63a5\u8bfb\u5199mysql\u4e0d\u662f\u4e2a\u806a\u660e\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4e00\u822c\u4f1a\u7528redis\u505a\u4e00\u5c42\u7f13\u5b58\uff0c\u8fd9\u91cc\u8bf4\u9053\u7684\u53e6\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u5f00\u53d1\u8bbe\u8ba1\u4e0d\u5408\u7406\uff0c\u5bfc\u81f4\u7684\u6027\u80fd\u95ee\u9898\uff1b\\r\\n\\r\\n\u7b2c\u56db\u7ec4\uff1a\u5c06\u540e\u7aef\u6362\u505a\u771f\u5b9e\u7684\u670d\u52a1\u6765\u505a\u6574\u4f53\u538b\u6d4b\uff0c\u53d1\u73b0qps\u6700\u9ad8\u53ea\u80fd\u5230300\uff0c\u6b64\u65f6\u68c0\u67e5\u5404\u9879\u6307\u6807\uff0c\u53d1\u73b0\u5165\u53e3\u5e26\u5bbd\u5360\u6ee1\u4e86\uff1b\\r\\n\\r\\n> \u5206\u6790\uff1a\u8fd9\u6b21\u95ee\u9898\u6bd4\u8f83\u660e\u663e\uff0c\u540e\u7aef\u670d\u52a1\u8fd4\u56de\u5185\u5bb9\u8fc7\u5927\uff0c\u5bfc\u81f4\u5e26\u5bbd\u88ab\u5360\u6ee1\uff0c\u6b64\u65f6\u4f9d\u7136\u9700\u8981\u8bc4\u4f30\u9700\u6c42\uff1a1\u3001\u662f\u5426\u9700\u8981\u540e\u7aef\u8fd4\u56de\u7684\u6240\u6709\u6570\u636e\u5185\u5bb9\uff1b2\u3001\u8bc4\u4f30\u66f4\u6362\u4e07\u5146\u7f51\u5361\u7684\u6027\u4ef7\u6bd4\uff1b3\u3001\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u6280\u672f\u624b\u6bb5\u4f18\u5316\u5e26\u5bbd\u5360\u7528\uff0c\u6bd4\u5982\u628a\u4e00\u6b21\u8bf7\u6c42\u5206\u6563\u5230\u591a\u7ec4\u670d\u52a1\u7684\u591a\u4e2a\u8bf7\u6c42\uff1b\\r\\n\\r\\n**\u2475perf+\u706b\u7130\u56fe\u5b9a\u4f4d\u51fd\u6570\u95ee\u9898**\\r\\n\\r\\n\u8fd9\u91cc\u7b80\u5355\u8bf4\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528perf+\u706b\u7130\u56fe\u6765\u76f4\u89c2\u7684\u5b9a\u4f4d\u6027\u80fd\u95ee\u9898\uff1a\\r\\n\\r\\nPerf \u62e5\u6709\u4e86\u4f17\u591a\u7684\u6027\u80fd\u5206\u6790\u80fd\u529b\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4f7f\u7528 Perf \u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u5185\u7684\u6307\u4ee4\u6570\uff0c\u79f0\u4e3a IPC\uff0cIPC \u504f\u4f4e\u8868\u660e\u4ee3\u7801\u6ca1\u6709\u5f88\u597d\u5730\u5229\u7528 CPU\u3002Perf \u8fd8\u53ef\u4ee5\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u51fd\u6570\u7ea7\u522b\u7684\u91c7\u6837\uff0c\u4ece\u800c\u4e86\u89e3\u7a0b\u5e8f\u7684\u6027\u80fd\u74f6\u9888\u7a76\u7adf\u5728\u54ea\u91cc\u7b49\u7b49\u3002Perf \u8fd8\u53ef\u4ee5\u66ff\u4ee3 strace\uff0c\u53ef\u4ee5\u6dfb\u52a0\u52a8\u6001\u5185\u6838 probe \u70b9\uff0c\u8fd8\u53ef\u4ee5\u505a benchmark \u8861\u91cf\u8c03\u5ea6\u5668\u7684\u597d\u574f\u3002\\r\\n\\r\\n- \u4f7f\u7528\u4e3e\u4f8b\uff1aperf record -e cpu-clock -g -p 11110 -o data/perf.data sleep 30\\r\\n- -g \u9009\u9879\u662f\u544a\u8bc9perf record\u989d\u5916\u8bb0\u5f55\u51fd\u6570\u7684\u8c03\u7528\u5173\u7cfb -e cpu-clock \u6307perf record\u76d1\u63a7\u7684\u6307\u6807\u4e3acpu\u5468\u671f -p \u6307\u5b9a\u9700\u8981record\u7684\u8fdb\u7a0bpid\\r\\n\\r\\n**\u2476\u751f\u6210\u706b\u7130\u56fe**\\r\\n\\r\\n\u2460\u7b2c\u4e00\u6b65\uff1a\u4f7f\u7528\u538b\u529b\u6d4b\u8bd5\u5de5\u5177\u5bf9\u7a0b\u5e8f\u8fdb\u884c\u6253\u538b\uff0c\u538b\u5230\u7a0b\u5e8f\u62d0\u70b9\uff1b\\r\\n\\r\\n```\\r\\n$sudo perf record -e cpu-clock -g -p 11110\\r\\nCtrl+c\u7ed3\u675f\u6267\u884c\u540e\uff0c\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u91c7\u6837\u6570\u636eperf.data.\\r\\n```\\r\\n\\r\\n\u2461\u7b2c\u4e8c\u6b65\uff1a\u7528perf \u5de5\u5177\u5bf9perf.data\u8fdb\u884c\u89e3\u6790\\r\\n\\r\\n```\\r\\nperf -i perf.data &> perf.unfold\\r\\n```\\r\\n\\r\\n\u2476\u7b2c\u4e09\u6b65\uff1a\u5c06perf.unfold\u4e2d\u7684\u7b26\u53f7\u8fdb\u884c\u6298\u53e0\uff1a\\r\\n\\r\\n```\\r\\n./stackcollapse-perf.pl perf.unfold &> perf.folded\\r\\n```\\r\\n\\r\\n\u2463\u6700\u540e\u751f\u6210svg\u56fe\uff1a\\r\\n\\r\\n```\\r\\n./flamegraph.pl perf.folded > perf.svg\\r\\n```\\r\\n\\r\\n\u5230\u8fd9\u513f\u53ef\u4ee5\u751f\u6210\u51fd\u6570\u8c03\u7528\u706b\u7130\u56fe\uff0c\u5982\u4e0b\u56fe\uff1a\\r\\n\\r\\n![640](./figure/640.webp)\\r\\n\\r\\n\u539f\u751f\u7684perf\u53ef\u4ee5\u76f4\u63a5\u5b9a\u4f4dC/C++\u7684\u7a0b\u5e8f\uff0c\u901a\u5e38\u7f16\u8bd1debug\u7248\u672c\u7684\u7a0b\u5e8f\u80fd\u770b\u5230\u66f4\u591a\u7684\u4fe1\u606f\uff0cjava\u3001go\u7b49\u8bed\u8a00\u53ef\u4ee5\u901a\u8fc7\u5404\u81ea\u5b9a\u5236\u7684\u5de5\u5177\u6765\u751f\u6210\uff0c\u539f\u7406\u7c7b\u4f3c\uff1b\u901a\u8fc7\u706b\u7130\u56fe\u53ef\u4ee5\u8f7b\u677e\u5b9a\u4f4d\u5230\u54ea\u4e2a\u51fd\u6570\u7684\u5904\u7406\u65f6\u95f4\u6700\u957f\uff0c\u4ece\u800c\u627e\u5230\u95ee\u9898\u6240\u5728\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236.md","title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236","description":"\u5728Linux\u5185\u6838\u4e2d\uff0c\u4fe1\u53f7\u5904\u7406\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u6d89\u53ca\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u7684\u4ea4\u4e92\u3002\u4ee5\u4e0b\u662f\u4fe1\u53f7\u5904\u7406\u7684\u8be6\u7ec6\u6d41\u7a0b\uff0c\u7ed3\u5408\u4ee3\u7801\u548c\u6ce8\u91ca\u8fdb\u884c\u8bf4\u660e\u3002","date":"2025-09-15T14:44:16.889Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":14.18,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u5185\u6838\u8ffd\u8e2a\u795e\u5668\uff1aperf\u5b9e\u73b0\u539f\u7406\u5256\u6790"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55"}},"content":"\u5728Linux\u5185\u6838\u4e2d\uff0c\u4fe1\u53f7\u5904\u7406\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u6d89\u53ca\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u7684\u4ea4\u4e92\u3002\u4ee5\u4e0b\u662f\u4fe1\u53f7\u5904\u7406\u7684\u8be6\u7ec6\u6d41\u7a0b\uff0c\u7ed3\u5408\u4ee3\u7801\u548c\u6ce8\u91ca\u8fdb\u884c\u8bf4\u660e\u3002\\r\\n\\r\\n# \u4e00\u3001\u4fe1\u53f7\u5904\u7406\u7684\u6574\u4f53\u6d41\u7a0b\\r\\n\\r\\n\u4fe1\u53f7\u5904\u7406\u7684\u6d41\u7a0b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a\\r\\n\\r\\n1. \u4fe1\u53f7\u4ea7\u751f\uff1a\u5185\u6838\u6216\u7528\u6237\u7a0b\u5e8f\u53d1\u9001\u4fe1\u53f7\u3002\\r\\n\\r\\n2. \u4fe1\u53f7\u4f20\u9012\uff1a\u5185\u6838\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u76ee\u6807\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002\\r\\n\\r\\n3. \u4fe1\u53f7\u68c0\u67e5\uff1a\u5728\u8fdb\u7a0b\u4ece\u5185\u6838\u6001\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u5185\u6838\u68c0\u67e5\u662f\u5426\u6709\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002\\r\\n\\r\\n4. \u4fe1\u53f7\u5904\u7406\uff1a\\r\\n\\r\\n   \u200b\\t\u5982\u679c\u8fdb\u7a0b\u6ce8\u518c\u4e86\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u5185\u6838\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\u3002\\r\\n\\r\\n   \u200b\\t\u5982\u679c\u6ca1\u6709\u6ce8\u518c\u5904\u7406\u51fd\u6570\uff0c\u5185\u6838\u4f1a\u6267\u884c\u9ed8\u8ba4\u884c\u4e3a\uff08\u5982\u7ec8\u6b62\u8fdb\u7a0b\u3001\u5ffd\u7565\u4fe1\u53f7\u7b49\uff09\u3002\\r\\n\\r\\n5. \u4fe1\u53f7\u5904\u7406\u5b8c\u6210\uff1a\u8fdb\u7a0b\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u6253\u65ad\u7684\u4ee3\u7801\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002\\r\\n\\r\\n# \u4e8c\u3001\u4fe1\u53f7\u5904\u7406\u7684\u4ee3\u7801\u5b9e\u73b0\\r\\n\\r\\n\u4ee5\u4e0b\u662fLinux\u5185\u6838\u4e2d\u4fe1\u53f7\u5904\u7406\u7684\u6838\u5fc3\u4ee3\u7801\u7247\u6bb5\uff0c\u7ed3\u5408\u6ce8\u91ca\u8fdb\u884c\u8bf4\u660e\u3002\\r\\n\\r\\n## 2.1 \u4fe1\u53f7\u4f20\u9012\\r\\n\\r\\n\u5f53\u5185\u6838\u9700\u8981\u5411\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\u65f6\uff0c\u4f1a\u8c03\u7528`send_signal()`\u51fd\u6570\\r\\n\\r\\n```\\r\\n</kernel/signal.c>\\r\\n/**\\r\\n * send_signal - \u5411\u6307\u5b9a\u4efb\u52a1\u53d1\u9001\u4fe1\u53f7\\r\\n * @sig: \u8981\u53d1\u9001\u7684\u4fe1\u53f7\u7f16\u53f7\\r\\n * @info: \u6307\u5411kernel_siginfo\u7ed3\u6784\u7684\u6307\u9488\uff0c\u5305\u542b\u4fe1\u53f7\u4fe1\u606f\\r\\n * @t: \u6307\u5411\u76ee\u6807\u4efb\u52a1\u7ed3\u6784\u7684\u6307\u9488\\r\\n * @type: \u8fdb\u7a0bID\u7c7b\u578b\\r\\n *\\r\\n * \u6b64\u51fd\u6570\u8d1f\u8d23\u5411\u6307\u5b9a\u7684\u4efb\u52a1\u53d1\u9001\u4fe1\u53f7\u3002\u6839\u636e\u4fe1\u53f7\u7684\u4e0d\u540c\u6765\u6e90\u548c\u7c7b\u578b\uff0c\\r\\n * \u53ef\u80fd\u9700\u8981\u5f3a\u5236\u53d1\u9001\u4fe1\u53f7\uff08\u5373\u4f7f\u76ee\u6807\u8fdb\u7a0b\u901a\u5e38\u4f1a\u5ffd\u7565\u8be5\u4fe1\u53f7\uff09\u3002\\r\\n * \u51fd\u6570\u5904\u7406\u4e86\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u4e4b\u95f4\u7684\u4fe1\u53f7\u53d1\u9001\uff0c\u5e76\u9002\u5f53\u8c03\u6574\u4fe1\u53f7\u53d1\u9001\u8005\u7684\\r\\n * \u7528\u6237ID\u548c\u8fdb\u7a0bID\u4fe1\u606f\u3002\\r\\n *\\r\\n * \u8fd4\u56de\u503c\uff1a\u6210\u529f\u53d1\u9001\u4fe1\u53f7\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de\u76f8\u5e94\u7684\u9519\u8bef\u7801\\r\\n */\\r\\nstatic int send_signal(int sig, struct kernel_siginfo *info, struct task_struct *t,\\r\\n\\t\\t\\tenum pid_type type)\\r\\n{\\r\\n\\t/* Should SIGKILL or SIGSTOP be received by a pid namespace init? */ //  \u68c0\u67e5SIGKILL\u6216SIGSTOP\u4fe1\u53f7\u662f\u5426\u5e94\u8be5\u88abpid namespace\u7684init\u8fdb\u7a0b\u63a5\u6536\\r\\n\\tbool force = false;\\r\\n\\r\\n\\tif (info == SEND_SIG_NOINFO) {\\r\\n\\t\\t/* Force if sent from an ancestor pid namespace */\\r\\n\\t\\tforce = !task_pid_nr_ns(current, task_active_pid_ns(t)); //  \u6839\u636e\u5f53\u524d\u8fdb\u7a0b\u548c\u76ee\u6807\u8fdb\u7a0b\u7684\u547d\u540d\u7a7a\u95f4\u5173\u7cfb\u51b3\u5b9a\u662f\u5426\u5f3a\u5236\u53d1\u9001\u4fe1\u53f7\\r\\n\\t} else if (info == SEND_SIG_PRIV) { //  \u5224\u65ad\u662f\u5426\u4e3a\u7279\u6743\u4fe1\u53f7\u53d1\u9001\\r\\n\\t\\t/* Don\'t ignore kernel generated signals */ //  \u4e0d\u8981\u5ffd\u7565\u5185\u6838\u751f\u6210\u7684\u4fe1\u53f7\\r\\n\\t\\tforce = true;\\r\\n\\t} else if (has_si_pid_and_uid(info)) { //  \u68c0\u67e5\u662f\u5426\u5177\u6709\u7279\u6b8a\u4fe1\u53f7ID\u548c\u7528\u6237ID\\r\\n\\t\\t/* SIGKILL and SIGSTOP is special or has ids */ //  SIGKILL\u548cSIGSTOP\u662f\u7279\u6b8a\u4fe1\u53f7\u6216\u8005\u5177\u6709ID\\r\\n\\t\\tstruct user_namespace *t_user_ns; //  \u5b9a\u4e49\u7528\u6237\u547d\u540d\u7a7a\u95f4\u6307\u9488\\r\\n\\r\\n\\t\\trcu_read_lock(); //  \u8bfb\u9501\uff0c\u786e\u4fddRCU\u8bfb\u4e34\u754c\u533a\u5b89\u5168\\r\\n\\t\\tt_user_ns = task_cred_xxx(t, user_ns); //  \u83b7\u53d6\u76ee\u6807\u4efb\u52a1\u7684\u7528\u6237\u547d\u540d\u7a7a\u95f4\\r\\n\\t\\tif (current_user_ns() != t_user_ns) { //  \u5982\u679c\u5f53\u524d\u7528\u6237\u547d\u540d\u7a7a\u95f4\u4e0e\u76ee\u6807\u4e0d\u540c\\r\\n\\t\\t\\tkuid_t uid = make_kuid(current_user_ns(), info->si_uid); //  \u521b\u5efa\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u7684UID\\r\\n\\t\\t\\tinfo->si_uid = from_kuid_munged(t_user_ns, uid); //  \u8f6c\u6362\u4e3a\u76ee\u6807\u547d\u540d\u7a7a\u95f4\u7684UID\\r\\n\\t\\t}\\r\\n\\t\\trcu_read_unlock(); //  \u91ca\u653e\u8bfb\u9501\\r\\n\\r\\n\\t\\t/* A kernel generated signal? */ //  \u662f\u5426\u4e3a\u5185\u6838\u751f\u6210\u7684\u4fe1\u53f7\\r\\n\\t\\tforce = (info->si_code == SI_KERNEL); //  \u8bbe\u7f6eforce\u6807\u5fd7\\r\\n\\r\\n\\t\\t/* From an ancestor pid namespace? */ //  \u662f\u5426\u6765\u81ea\u7956\u5148PID\u547d\u540d\u7a7a\u95f4\\r\\n\\t\\tif (!task_pid_nr_ns(current, task_active_pid_ns(t))) { //  \u5982\u679c\u5f53\u524d\u8fdb\u7a0b\u4e0d\u5728\u76ee\u6807\u7684PID\u547d\u540d\u7a7a\u95f4\u4e2d\\r\\n\\t\\t\\tinfo->si_pid = 0; //  \u91cd\u7f6e\u53d1\u9001\u8005PID\u4e3a0\\r\\n\\t\\t\\tforce = true; //  \u8bbe\u7f6e\u5f3a\u5236\u53d1\u9001\u6807\u5fd7\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn __send_signal(sig, info, t, type, force); //  \u8c03\u7528\u5e95\u5c42\u4fe1\u53f7\u53d1\u9001\u51fd\u6570\\r\\n}\\r\\n```\\r\\n\\r\\n- **`send_signal()`**\uff1a\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u76ee\u6807\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002\\r\\n- **`signal_wake_up()`**\uff1a\u5982\u679c\u8fdb\u7a0b\u5904\u4e8e\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\uff0c\u5524\u9192\u8fdb\u7a0b\u3002\\r\\n\\r\\n## 2.2  \u4fe1\u53f7\u68c0\u67e5\\r\\n\\r\\n\u5728\u8fdb\u7a0b\u4ece\u5185\u6838\u6001\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u5185\u6838\u4f1a\u8c03\u7528`do_signal()`\u51fd\u6570\u68c0\u67e5\u662f\u5426\u6709\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002\\r\\n\\r\\n```\\r\\n<arch/arm64/kernel/signal.c>\\r\\n\\r\\n/**\\r\\n * do_signal - \u5904\u7406\u5f53\u524d\u8fdb\u7a0b\u7684\u5f85\u5904\u7406\u4fe1\u53f7\\r\\n * @regs: \u6307\u5411CPU\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u6307\u9488\uff0c\u5305\u542b\u5f53\u524d\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\\r\\n * \\r\\n * \u8be5\u51fd\u6570\u8d1f\u8d23\u5904\u7406\u5f53\u524d\u8fdb\u7a0b\u7684\u5f85\u5904\u7406\u4fe1\u53f7\u3002\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a\\r\\n * 1. \u68c0\u67e5\u662f\u5426\u5728\u7cfb\u7edf\u8c03\u7528\u4e2d\uff0c\u5982\u679c\u662f\u5219\u5904\u7406\u7cfb\u7edf\u8c03\u7528\u91cd\u542f\u76f8\u5173\u903b\u8f91\\r\\n * 2. \u83b7\u53d6\u9700\u8981\u4f20\u9012\u7684\u4fe1\u53f7\uff0c\u5e76\u6839\u636e\u4fe1\u53f7\u8bbe\u7f6e\u51b3\u5b9a\u662f\u5426\u91cd\u542f\u7cfb\u7edf\u8c03\u7528\\r\\n * 3. \u5982\u679c\u6ca1\u6709\u9700\u8981\u5904\u7406\u7684\u4fe1\u53f7\uff0c\u5219\u5904\u7406\u7cfb\u7edf\u8c03\u7528\u91cd\u542f\u7684\u7279\u6b8a\u60c5\u51b5\\r\\n * 4. \u6062\u590d\u4fdd\u5b58\u7684\u4fe1\u53f7\u63a9\u7801\\r\\n * \\r\\n * \u6ce8\u610f\uff1a\u8be5\u51fd\u6570\u5728\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u8c03\u8bd5\u5668\u53ef\u80fd\u6539\u53d8\u6240\u6709\u5bc4\u5b58\u5668\u7684\u503c\\r\\n */\\r\\nstatic void do_signal(struct pt_regs *regs)\\r\\n{\\r\\n\\tunsigned long continue_addr = 0, restart_addr = 0;\\r\\n\\tint retval = 0;\\r\\n\\tstruct ksignal ksig;\\r\\n\\tbool syscall = in_syscall(regs);\\r\\n\\r\\n\\t/*\\r\\n\\t * \u5982\u679c\u6765\u81ea\u7cfb\u7edf\u8c03\u7528\uff0c\u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u542f\u7cfb\u7edf\u8c03\u7528...\\r\\n\\t */\\r\\n\\tif (syscall) {\\r\\n\\t\\tcontinue_addr = regs->pc;\\r\\n\\t\\trestart_addr = continue_addr - (compat_thumb_mode(regs) ? 2 : 4);\\r\\n\\t\\tretval = regs->regs[0];\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\t * \u907f\u514d\u901a\u8fc7ret_to_user\u8fdb\u884c\u989d\u5916\u7684\u7cfb\u7edf\u8c03\u7528\u91cd\u542f\\r\\n\\t\\t */\\r\\n\\t\\tforget_syscall(regs);\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\t * \u51c6\u5907\u7cfb\u7edf\u8c03\u7528\u91cd\u542f\u3002\u6211\u4eec\u5728\u8fd9\u91cc\u505a\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u6837\u8c03\u8bd5\u5668\u5c31\u80fd\u770b\u5230\u5df2\u7ecf\u6539\u53d8\u7684PC\u3002\\r\\n\\t\\t */\\r\\n\\t\\tswitch (retval) {\\r\\n\\t\\tcase -ERESTARTNOHAND:\\r\\n\\t\\tcase -ERESTARTSYS:\\r\\n\\t\\tcase -ERESTARTNOINTR:\\r\\n\\t\\tcase -ERESTART_RESTARTBLOCK:\\r\\n\\t\\t\\tregs->regs[0] = regs->orig_x0;\\r\\n\\t\\t\\tregs->pc = restart_addr;\\r\\n\\t\\t\\tbreak;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/*\\r\\n\\t * \u83b7\u53d6\u9700\u8981\u4f20\u9012\u7684\u4fe1\u53f7\u3002\u5728ptrace\u4e0b\u8fd0\u884c\u65f6\uff0c\u6b64\u65f6\u8c03\u8bd5\u5668\u53ef\u80fd\u4f1a\u6539\u53d8\u6211\u4eec\u7684\u6240\u6709\u5bc4\u5b58\u5668\u3002\\r\\n\\t */\\r\\n\\tif (get_signal(&ksig)) {\\r\\n\\t\\t/*\\r\\n\\t\\t * \u6839\u636e\u4fe1\u53f7\u8bbe\u7f6e\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u64a4\u9500\u91cd\u542f\u7cfb\u7edf\u8c03\u7528\u7684\u51b3\u5b9a\uff0c\\r\\n\\t\\t * \u4f46\u5982\u679c\u8c03\u8bd5\u5668\u9009\u62e9\u5728\u4e0d\u540c\u7684PC\u5904\u91cd\u542f\uff0c\u5219\u8df3\u8fc7\u6b64\u6b65\u9aa4\u3002\\r\\n\\t\\t */\\r\\n\\t\\tif (regs->pc == restart_addr &&\\r\\n\\t\\t    (retval == -ERESTARTNOHAND ||\\r\\n\\t\\t     retval == -ERESTART_RESTARTBLOCK ||\\r\\n\\t\\t     (retval == -ERESTARTSYS &&\\r\\n\\t\\t      !(ksig.ka.sa.sa_flags & SA_RESTART)))) {\\r\\n\\t\\t\\tsyscall_set_return_value(current, regs, -EINTR, 0);\\r\\n\\t\\t\\tregs->pc = continue_addr;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\thandle_signal(&ksig, regs);\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\r\\n\\t/*\\r\\n\\t * \u5904\u7406\u91cd\u542f\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u5982\u4e0a\u6240\u8ff0\uff0c\u5982\u679c\u8c03\u8bd5\u5668\u9009\u62e9\u5728\u4e0d\u540c\u7684PC\u5904\u91cd\u542f\uff0c\u5219\u5ffd\u7565\u91cd\u542f\u3002\\r\\n\\t */\\r\\n\\tif (syscall && regs->pc == restart_addr) {\\r\\n\\t\\tif (retval == -ERESTART_RESTARTBLOCK)\\r\\n\\t\\t\\tsetup_restart_syscall(regs);\\r\\n\\t\\tuser_rewind_single_step(current);\\r\\n\\t}\\r\\n\\r\\n\\trestore_saved_sigmask();\\r\\n}\\r\\n```\\r\\n\\r\\n- **`get_signal()`**\uff1a\u4ece\u4fe1\u53f7\u961f\u5217\u4e2d\u83b7\u53d6\u4e00\u4e2a\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002\\r\\n- **`handle_signal()`**\uff1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\\r\\n\\r\\n## 2.3\u4fe1\u53f7\u5904\u7406\\r\\n\\r\\n\u5982\u679c\u8fdb\u7a0b\u6ce8\u518c\u4e86\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u5185\u6838\u4f1a\u8c03\u7528`handle_signal()`\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\n<arch/arm64/kernel/signal.c>\\r\\n/**\\r\\n * handle_signal - \u5904\u7406\u4fe1\u53f7\u4f20\u9012\u548c\u8bbe\u7f6e\u4fe1\u53f7\u5904\u7406\u6808\u5e27\\r\\n * @ksig: \u5305\u542b\u4fe1\u53f7\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\u6307\u9488\\r\\n * @regs: \u6307\u5411\u5904\u7406\u5668\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u6307\u9488\\r\\n * \\r\\n * \u8be5\u51fd\u6570\u8d1f\u8d23\u5904\u7406\u4fe1\u53f7\u7684\u4f20\u9012\uff0c\u5305\u62ec\u8bbe\u7f6e\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u7684\u6808\u5e27\uff0c\\r\\n * \u5e76\u786e\u4fdd\u5bc4\u5b58\u5668\u72b6\u6001\u7684\u6709\u6548\u6027\u3002\u6839\u636e\u4efb\u52a1\u662f\u5426\u4e3a\u517c\u5bb9\u6a21\u5f0f\uff08compat mode\uff09\uff0c\\r\\n * \u9009\u62e9\u4e0d\u540c\u7684\u6808\u5e27\u8bbe\u7f6e\u65b9\u5f0f\u3002\u6700\u540e\uff0c\u68c0\u67e5\u5bc4\u5b58\u5668\u72b6\u6001\u662f\u5426\u6709\u6548\uff0c\\r\\n * \u5e76\u5b8c\u6210\u4fe1\u53f7\u5904\u7406\u7684\u8bbe\u7f6e\u3002\\r\\n * \\r\\n * \u6ce8\u610f\uff1a\u8be5\u51fd\u6570\u5728\u5185\u6838\u4fe1\u53f7\u5904\u7406\u8def\u5f84\u4e2d\u88ab\u8c03\u7528\u3002\\r\\n */\\r\\nstatic void handle_signal(struct ksignal *ksig, struct pt_regs *regs)\\r\\n{\\r\\n\\tsigset_t *oldset = sigmask_to_save(); //  \u4fdd\u5b58\u5f53\u524d\u4fe1\u53f7\u63a9\u7801\\r\\n\\tint usig = ksig->sig; //  \u83b7\u53d6\u4fe1\u53f7\u7f16\u53f7\\r\\n\\tint ret; //  \u8fd4\u56de\u503c\uff0c\u7528\u4e8e\u6807\u8bb0\u64cd\u4f5c\u662f\u5426\u6210\u529f\\r\\n\\r\\n\\trseq_signal_deliver(ksig, regs); //  \u6267\u884c\u7ebf\u7a0b\u76f8\u5173\u7684\u4fe1\u53f7\u5904\u7406\\r\\n\\r\\n\\t/*\\r\\n\\t * Set up the stack frame\\r\\n\\t */\\r\\n\\tif (is_compat_task()) { //  \u68c0\u67e5\u5f53\u524d\u4efb\u52a1\u662f\u5426\u4e3a\u517c\u5bb9\u6a21\u5f0f\\r\\n\\t\\tif (ksig->ka.sa.sa_flags & SA_SIGINFO) //  \u5982\u679c\u662f\u517c\u5bb9\u6a21\u5f0f\u4e14\u8bbe\u7f6e\u4e86SA_SIGINFO\u6807\u5fd7\uff0c\u5219\u8bbe\u7f6e\u517c\u5bb9\u7248\u672c\u7684\u5b9e\u65f6\u4fe1\u53f7\u5904\u7406\u5e27\\r\\n\\t\\t\\tret = compat_setup_rt_frame(usig, ksig, oldset, regs);\\r\\n\\t\\telse //  \u5426\u5219\u8bbe\u7f6e\u517c\u5bb9\u7248\u672c\u7684\u666e\u901a\u4fe1\u53f7\u5904\u7406\u5e27\\r\\n\\t\\t\\tret = compat_setup_frame(usig, ksig, oldset, regs);\\r\\n\\t} else {\\r\\n\\t\\tret = setup_rt_frame(usig, ksig, oldset, regs); //  \u975e\u517c\u5bb9\u6a21\u5f0f\u4e0b\uff0c\u8bbe\u7f6e\u5b9e\u65f6\u4fe1\u53f7\u5904\u7406\u5e27\\r\\n\\t}\\r\\n\\r\\n\\t/*\\r\\n\\t * Check that the resulting registers are actually sane.\\r\\n\\t */\\r\\n\\tret |= !valid_user_regs(&regs->user_regs, current); //  \u5c06valid_user_regs\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e0eret\u8fdb\u884c\u6309\u4f4d\u6216\u64cd\u4f5c\uff0c\u5e76\u66f4\u65b0ret\u7684\u503c valid_user_regs\u7528\u4e8e\u9a8c\u8bc1\u7528\u6237\u5bc4\u5b58\u5668\u7684\u6709\u6548\u6027\uff0c\u53c2\u6570\u4e3a\u7528\u6237\u5bc4\u5b58\u5668\u7ed3\u6784\u548c\u5f53\u524d\u8fdb\u7a0b \u5982\u679c\u5bc4\u5b58\u5668\u65e0\u6548\uff0c\u5219!valid_user_regs\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\\r\\n\\r\\n\\t/* Step into the signal handler if we are stepping */\\r\\n\\tsignal_setup_done(ret, ksig, test_thread_flag(TIF_SINGLESTEP)); //  \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u8bbe\u7f6e\u4e86\u5355\u6b65\u6267\u884c\u6807\u5fd7(TIF_SINGLESTEP)\uff0c\u5219\u8fdb\u5165\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f signal_setup_done\u51fd\u6570\u5b8c\u6210\u4fe1\u53f7\u5904\u7406\u7684\u8bbe\u7f6e\u5de5\u4f5c \u53c2\u6570ret\u8868\u793a\u4e4b\u524d\u7684\u5904\u7406\u72b6\u6001\uff0cksig\u8868\u793a\u4fe1\u53f7\u7ed3\u6784\uff0ctest_thread_flag\u7528\u4e8e\u68c0\u67e5\u7ebf\u7a0b\u6807\u5fd7\\r\\n}\\r\\n```\\r\\n\\r\\n## 2.4 \u4fe1\u53f7\u5904\u7406\u5b8c\u6210\\r\\n\\r\\n\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fdb\u7a0b\u4f1a\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u6253\u65ad\u7684\u4ee3\u7801\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\\r\\n\\r\\n```\\r\\n<arch/arm64/kernel/signal.c>\\r\\n/**\\r\\n * rt_sigreturn - \u7cfb\u7edf\u8c03\u7528\uff0c\u7528\u4e8e\u4ece\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u5e76\u6062\u590d\u8fdb\u7a0b\u4e0a\u4e0b\u6587\\r\\n * \\r\\n * \u8be5\u51fd\u6570\u5b9e\u73b0\u4e86rt_sigreturn\u7cfb\u7edf\u8c03\u7528\uff0c\u5176\u4e3b\u8981\u529f\u80fd\u662f\uff1a\\r\\n * 1. \u786e\u4fdd\u4efb\u4f55\u5f85\u91cd\u542f\u7684\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de-EINTR\\r\\n * 2. \u68c0\u67e5\u6808\u6307\u9488\u662f\u5426\u5bf9\u9f50\uff08128\u4f4d\u8fb9\u754c\uff09\\r\\n * 3. \u9a8c\u8bc1\u7528\u6237\u7a7a\u95f4\u4fe1\u53f7\u5e27\u7684\u5185\u5b58\u53ef\u8bbf\u95ee\u6027\\r\\n * 4. \u6062\u590d\u4fe1\u53f7\u5e27\u4e2d\u7684\u5bc4\u5b58\u5668\u72b6\u6001\\r\\n * 5. \u6062\u590d\u5907\u9009\u6808\u4fe1\u606f\\r\\n * 6. \u8fd4\u56de\u539f\u59cb\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\\r\\n * \\r\\n * \u8fd4\u56de\u503c\uff1a\\r\\n * \u6210\u529f\u65f6\u8fd4\u56de\u539f\u59cb\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\uff08regs->regs[0]\uff09\\r\\n * \u5931\u8d25\u65f6\u53d1\u9001\u6bb5\u9519\u8bef\u4fe1\u53f7\u5e76\u8fd4\u56de0\\r\\n */\\r\\nSYSCALL_DEFINE0(rt_sigreturn)\\r\\n{\\r\\n\\tstruct pt_regs *regs = current_pt_regs(); //  \u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u7684\u5bc4\u5b58\u5668\u72b6\u6001\\r\\n\\tstruct rt_sigframe __user *frame; //  \u5b9a\u4e49\u4e00\u4e2a\u6307\u5411\u7528\u6237\u7a7a\u95f4\u4fe1\u53f7\u5e27\u7ed3\u6784\u7684\u6307\u9488\\r\\n\\r\\n\\t/* Always make any pending restarted system calls return -EINTR */\\r\\n\\tcurrent->restart_block.fn = do_no_restart_syscall; //  \u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u7684\u91cd\u542f\u5757\u51fd\u6570\u4e3ado_no_restart_syscall\uff0c\u8868\u793a\u4e0d\u91cd\u542f\u7cfb\u7edf\u8c03\u7528\\r\\n\\r\\n\\t/*\\r\\n\\t * Since we stacked the signal on a 128-bit boundary, then \'sp\' should\\r\\n\\t * be word aligned here.\\r\\n\\t */\\r\\n\\tif (regs->sp & 15)\\r\\n\\t\\tgoto badframe;\\r\\n\\r\\n\\tframe = (struct rt_sigframe __user *)regs->sp;\\r\\n\\r\\n\\tif (!access_ok(frame, sizeof (*frame))) /* * \u68c0\u67e5\u4f20\u5165\u7684frame\u6307\u9488\u662f\u5426\u6709\u6548 * \u5982\u679c\u8bbf\u95ee\u4e0d\u5b89\u5168\uff0c\u5219\u8df3\u8f6c\u5230badframe\u6807\u7b7e\u5904 */\\r\\n\\t\\tgoto badframe;\\r\\n\\r\\n\\tif (restore_sigframe(regs, frame)) /*\\t * \u5c1d\u8bd5\u6062\u590d\u4fe1\u53f7\u5e27\\t * \u5982\u679c\u6062\u590d\u5931\u8d25\uff0c\u5219\u8df3\u8f6c\u5230badframe\u6807\u7b7e\u5904\\t */\\r\\n\\t\\tgoto badframe;\\r\\n\\r\\n\\tif (restore_altstack(&frame->uc.uc_stack)) /*\\t * \u6062\u66ff\u5907\u7528\u6808\\t * \u5982\u679c\u6062\u590d\u5931\u8d25\uff0c\u5219\u8df3\u8f6c\u5230badframe\u6807\u7b7e\u5904\\t */\\r\\n\\t\\tgoto badframe;\\r\\n\\r\\n\\treturn regs->regs[0]; //  \u8fd4\u56de\u5bc4\u5b58\u56680\u4e2d\u7684\u503c\\r\\n\\r\\nbadframe:\\r\\n\\tarm64_notify_segfault(regs->sp); //  \u53d1\u751f\u6bb5\u9519\u8bef\u901a\u77e5\uff0c\u5e76\u8fd4\u56de0\\r\\n\\treturn 0;\\r\\n}\\r\\n\\r\\n```\\r\\n\\r\\n# \u4e09\u3001\u4fe1\u53f7\u5904\u7406\u7684\u573a\u666f\u548c\u5f71\u54cd\\r\\n\\r\\n\uff081\uff09\u573a\u666f1\uff1a\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\\r\\n\u573a\u666f\uff1a\u8fdb\u7a0b\u6b63\u5728\u6267\u884c\u7528\u6237\u6001\u4ee3\u7801\uff0c\u7a81\u7136\u6536\u5230\u4fe1\u53f7\uff08\u5982SIGINT\uff09\u3002\\r\\n\\r\\n\u6d41\u7a0b\uff1a\\r\\n\\r\\n- \u5185\u6838\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002\\r\\n\\r\\n- \u8fdb\u7a0b\u4ece\u5185\u6838\u6001\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u68c0\u67e5\u5230\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002\\r\\n\\r\\n- \u5185\u6838\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\\r\\n\\r\\n- \u4fe1\u53f7\u5904\u7406\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fdb\u7a0b\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u6253\u65ad\u7684\u4ee3\u7801\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002\\r\\n\\r\\n\\r\\n\u5f71\u54cd\uff1a\u8fdb\u7a0b\u7684\u6267\u884c\u88ab\u4fe1\u53f7\u6253\u65ad\uff0c\u4f46\u4f1a\u7ee7\u7eed\u6267\u884c\u3002\\r\\n\\r\\n\uff082\uff09\u573a\u666f2\uff1a\u8fdb\u7a0b\u5904\u4e8e\u53ef\u4e2d\u65ad\u7761\u7720\\r\\n\u573a\u666f\uff1a\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85I/O\u64cd\u4f5c\uff08\u5982read()\uff09\uff0c\u7a81\u7136\u6536\u5230\u4fe1\u53f7\uff08\u5982SIGTERM\uff09\u3002\\r\\n\\r\\n\u6d41\u7a0b\uff1a\\r\\n\\r\\n- \u5185\u6838\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002\\r\\n\\r\\n- \u5185\u6838\u5524\u9192\u8fdb\u7a0b\uff0c\u5e76\u5c06\u5176\u72b6\u6001\u8bbe\u7f6e\u4e3aTASK_RUNNING\u3002\\r\\n\\r\\n- \u8fdb\u7a0b\u4ece\u5185\u6838\u6001\u8fd4\u56de\u5230\u7528\u6237\u6001\u65f6\uff0c\u68c0\u67e5\u5230\u672a\u5904\u7406\u7684\u4fe1\u53f7\u3002\\r\\n\\r\\n- \u5185\u6838\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\\r\\n\\r\\n- \u4fe1\u53f7\u5904\u7406\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u8fdb\u7a0b\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u6253\u65ad\u7684\u4ee3\u7801\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002\\r\\n\\r\\n\\r\\n\u5f71\u54cd\uff1a\u8fdb\u7a0b\u88ab\u4fe1\u53f7\u5524\u9192\uff0cI/O\u64cd\u4f5c\u53ef\u80fd\u88ab\u4e2d\u65ad\u3002\\r\\n\\r\\n\uff083\uff09\u573a\u666f3\uff1a\u8fdb\u7a0b\u5904\u4e8e\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\\r\\n\u573a\u666f\uff1a\u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u786c\u4ef6I/O\u64cd\u4f5c\uff08\u5982\u78c1\u76d8\u8bfb\u5199\uff09\uff0c\u7a81\u7136\u6536\u5230\u4fe1\u53f7\uff08\u5982SIGKILL\uff09\u3002\\r\\n\\r\\n\u6d41\u7a0b\uff1a\\r\\n\\r\\n- \u5185\u6838\u5c06\u4fe1\u53f7\u6dfb\u52a0\u5230\u8fdb\u7a0b\u7684\u4fe1\u53f7\u961f\u5217\u4e2d\u3002\\r\\n\\r\\n- \u7531\u4e8e\u8fdb\u7a0b\u5904\u4e8e\u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\uff0c\u4fe1\u53f7\u4e0d\u4f1a\u5524\u9192\u8fdb\u7a0b\u3002\\r\\n\\r\\n- \u8fdb\u7a0b\u7ee7\u7eed\u7b49\u5f85\u786c\u4ef6I/O\u64cd\u4f5c\u5b8c\u6210\u3002\\r\\n\\r\\n- \u786c\u4ef6I/O\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u8fdb\u7a0b\u88ab\u5524\u9192\u5e76\u5904\u7406\u4fe1\u53f7\u3002\\r\\n\\r\\n\\r\\n\u5f71\u54cd\uff1a\u4fe1\u53f7\u4e0d\u4f1a\u7acb\u5373\u751f\u6548\uff0c\u8fdb\u7a0b\u5fc5\u987b\u7b49\u5f85\u786c\u4ef6\u64cd\u4f5c\u5b8c\u6210\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55.md","title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55","description":"\u5728\u4e2dcompletesignal\u52a0\u5165dumpstack()","date":"2025-09-15T14:44:16.877Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.695,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/linux\u4fe1\u53f7\u673a\u5236"},"nextItem":{"title":"\u4e00\uff0cringBuffer","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5de5\u5177(\u4e09)ftrace\u6846\u67b6"}},"content":"\u5728\u4e2dcomplete_signal\u52a0\u5165dump_stack()\\r\\n\\r\\n```\\r\\n[   42.412897]  dump_backtrace+0x0/0x160\\r\\n[   42.412909]  dump_stack+0xd0/0x12c\\r\\n[   42.412919]  complete_signal+0x198/0x1b0\\r\\n[   42.412926]  __send_signal+0x1c4/0x314\\r\\n[   42.412932]  send_signal+0xd8/0x120\\r\\n[   42.412937]  do_send_sig_info+0x60/0xc0\\r\\n[   42.412943]  __kill_pgrp_info+0xc8/0xe0\\r\\n[   42.412949]  kill_pgrp+0x44/0x70\\r\\n[   42.412954]  isig+0x90/0x170\\r\\n[   42.412960]  n_tty_receive_signal_char+0x24/0x7c\\r\\n[   42.412966]  n_tty_receive_char_special+0x4a0/0xb90\\r\\n[   42.412972]  n_tty_receive_buf_common+0x72c/0x9b0\\r\\n[   42.412978]  n_tty_receive_buf2+0x14/0x20\\r\\n[   42.412984]  tty_ldisc_receive_buf+0x20/0x70\\r\\n[   42.412991]  tty_port_default_receive_buf+0x44/0x8c\\r\\n[   42.412998]  flush_to_ldisc+0xdc/0x160\\r\\n[   42.413004]  process_one_work+0x1cc/0x29c\\r\\n[   42.413012]  worker_thread+0x60/0x394\\r\\n[   42.413019]  kthread+0x18c/0x1a0\\r\\n[   42.413025]  ret_from_fork+0x10/0x34\\r\\n[   42.435462] CPU: 0 PID: 258 Comm: top Not tainted 5.10.83-cip1-rt1-arm64-renesas #7\\r\\n[   42.435487] Hardware name: Renesas SMARC EVK based on r9a07g044l2 (DT)\\r\\n[   42.435492] Call trace:\\r\\n[   42.435494]  dump_backtrace+0x0/0x160\\r\\n[   42.435512]  dump_stack+0xd0/0x12c\\r\\n[   42.435522]  complete_signal+0x198/0x1b0\\r\\n[   42.435530]  __send_signal+0x1c4/0x314\\r\\n[   42.435536]  do_notify_parent+0x244/0x27c\\r\\n[   42.435541]  do_exit+0x834/0x990\\r\\n[   42.435549]  do_group_exit+0x44/0xa0\\r\\n[   42.435554]  __arm64_sys_exit_group+0x18/0x20\\r\\n[   42.435561]  el0_svc_common.constprop.0+0x78/0x1c4\\r\\n[   42.435569]  do_el0_svc+0x24/0x8c\\r\\n[   42.435576]  el0_svc+0x14/0x20\\r\\n[   42.435583]  el0_sync_handler+0xb0/0xb4\\r\\n[   42.435588]  el0_sync+0x180/0x1c0\\r\\n\\r\\n```\\r\\n\\r\\n\u5728\u4e2ddo_signal\u52a0\u5165dump_stack()\\r\\n\\r\\n```\\r\\n[   49.809377] Workqueue: events_unbound flush_to_ldisc\\r\\n[   49.809399] Call trace:\\r\\n[   49.809401]  dump_backtrace+0x0/0x160\\r\\n[   49.809415]  dump_stack+0xd0/0x12c\\r\\n[   49.809424]  __send_signal+0x30/0x298\\r\\n[   49.809430]  send_signal+0xf8/0x124\\r\\n[   49.809437]  do_send_sig_info+0x60/0xc0\\r\\n[   49.809443]  __kill_pgrp_info+0xc8/0xe0\\r\\n[   49.809449]  kill_pgrp+0x44/0x70\\r\\n[   49.809454]  isig+0x90/0x170\\r\\n[   49.809461]  n_tty_receive_signal_char+0x24/0x7c\\r\\n[   49.809467]  n_tty_receive_char_special+0x4a0/0xb90\\r\\n[   49.809473]  n_tty_receive_buf_common+0x72c/0x9b0\\r\\n[   49.809479]  n_tty_receive_buf2+0x14/0x20\\r\\n[   49.809485]  tty_ldisc_receive_buf+0x20/0x70\\r\\n[   49.809491]  tty_port_default_receive_buf+0x44/0x8c\\r\\n[   49.809498]  flush_to_ldisc+0xdc/0x160\\r\\n[   49.809504]  process_one_work+0x1cc/0x29c\\r\\n[   49.809512]  worker_thread+0x60/0x394\\r\\n[   49.809519]  kthread+0x18c/0x1a0\\r\\n[   49.809527]  ret_from_fork+0x10/0x34\\r\\n[   49.822368] CPU: 0 PID: 258 Comm: top Not tainted 5.10.83-cip1-rt1-arm64-renesas #4\\r\\n[   49.822386] Hardware name: Renesas SMARC EVK based on r9a07g044l2 (DT)\\r\\n[   49.822391] Call trace:\\r\\n[   49.822393]  dump_backtrace+0x0/0x160\\r\\n[   49.822411]  dump_stack+0xd0/0x12c\\r\\n[   49.822420]  __send_signal+0x30/0x298\\r\\n[   49.822426]  do_notify_parent+0x244/0x27c\\r\\n[   49.822434]  do_exit+0x834/0x990\\r\\n[   49.822441]  do_group_exit+0x44/0xa0\\r\\n[   49.822446]  __arm64_sys_exit_group+0x18/0x20\\r\\n[   49.822453]  el0_svc_common.constprop.0+0x78/0x1c4\\r\\n[   49.822462]  do_el0_svc+0x24/0x8c\\r\\n[   49.822468]  el0_svc+0x14/0x20\\r\\n[   49.822474]  el0_sync_handler+0xb0/0xb4\\r\\n[   49.822480]  el0_sync+0x180/0x1c0\\r\\n\\r\\n```\\r\\n\\r\\n`ls` \u7ed3\u675f\u540e\u5185\u6838\u5411\u5b83\u7684**\u7236\u8fdb\u7a0b**\uff08\u901a\u5e38\u662f shell\uff09\u53d1\u9001 **SIGCHLD\uff08\u4fe1\u53f7 17\uff09**\uff0c\u4e0d\u662f\u4e3a\u4e86 `ls` \u81ea\u5df1\uff0c\u800c\u662f\u4e3a\u4e86\u901a\u77e5\u7236\u8fdb\u7a0b\uff1a\u201c\u4f60\u7684\u67d0\u4e2a\u5b50\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62\u4e86\u201d\u3002\\r\\n\\r\\n```\\r\\n[  328.459410] szf: complete_signal, 1055,sig is 9\\r\\n[  328.460320] szf: complete_signal, 1055,sig is 19\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5de5\u5177(\u4e09)ftrace\u6846\u67b6","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5de5\u5177(\u4e09)ftrace\u6846\u67b6","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5de5\u5177(\u4e09)ftrace\u6846\u67b6.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5de5\u5177(\u4e09)ftrace\u6846\u67b6.md","title":"\u4e00\uff0cringBuffer","description":"Ringbuffer\u662ftrace32\u6846\u67b6\u7684\u4e00\u4e2a\u57fa\u7840\uff0c\u6240\u6709\u7684trace\u539f\u59cb\u6570\u636e\u90fd\u662f\u901a\u8fc7Ring Buffer\u8bb0\u5f55\u7684\uff0c\u5176\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4f5c\u7528\uff1a","date":"2025-09-15T14:44:16.789Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":16.88,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/\u4fe1\u53f7\u673a\u5236\u5b66\u4e60\u8bb0\u5f55"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898"}},"content":"Ringbuffer\u662ftrace32\u6846\u67b6\u7684\u4e00\u4e2a\u57fa\u7840\uff0c\u6240\u6709\u7684trace\u539f\u59cb\u6570\u636e\u90fd\u662f\u901a\u8fc7Ring Buffer\u8bb0\u5f55\u7684\uff0c\u5176\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u4f5c\u7528\uff1a\\r\\n\\r\\n- \u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u5bf9\u7cfb\u7edf\u7684\u6027\u80fd\u5f71\u54cd\u964d\u5230\u6700\u4f4e\u7684\u6c34\u5e73\\r\\n- ring\u7ed3\u6784\uff0c\u53ef\u4ee5\u5faa\u73af\u5199\uff0c\u5b89\u5168\u800c\u4e0d\u6d6a\u8d39\u5185\u5b58\u7a7a\u95f4\uff0c\u80fd\u591fget\u5230\u6700\u65b0\u7684trace\u4fe1\u606f\\r\\n\\r\\n\u5bf9\u4e8e\u7cfb\u7edf\uff0c\u771f\u6b63\u7684\u96be\u70b9\u5728\u4e8e\u7cfb\u7edf\u5728\u5404\u79cd\u590d\u6742\u7684\u573a\u666f\u4e0b\uff0c\u4f8b\u5982\u5e38\u89c4\u7684\u4e0a\u4e0b\u6587\u3001\u4e2d\u65ad\u4e0a\u4e0b\u6587(NMI/IRQ/SOFTIRQ)\u7b49\u90fd\u80fd\u5f88\u597d\u7684trace\uff0c\u5982\u4f55\u4fdd\u8bc1\u65e2\u4e0d\u5f71\u54cd\u7cfb\u7edf\u7684\u903b\u8f91\uff0c\u53c8\u80fd\u5904\u7406\u597d\u76f8\u4e92\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u540c\u65f6\u53c8\u4e0d\u5f71\u54cd\u7cfb\u7edf\u7684\u6027\u80fd\u3002\\r\\n\\r\\n## 1.1 Ring buffer\u8bbe\u8ba1\u601d\u8def\\r\\n\\r\\n\u5bf9\u4e8eRing Buffer\u9762\u4e34\u7684\u6700\u5927\u95ee\u9898\\r\\n\\r\\n- \u5f53\u6211\u4eec\u4f7f\u7528trace\u5de5\u5177\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u5904\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\uff0c\u5bf9Ring Buffer\u7684\u8bbf\u95ee\u65f6\u968f\u65f6\u53ef\u80fd\u88ab\u6253\u65ad\u7684\uff0c\u6240\u4ee5\u9700\u8981\u5bf9Ring Buffer\u7684\u8bbf\u95ee\u65f6\u9700\u8981\u4e92\u65a5\u4fdd\u62a4\u7684\\r\\n- RingBuffer\u4e0d\u80fd\u4f7f\u7528\u5e38\u89c4\u7684lock\u64cd\u4f5c\uff0c\u8fd9\u6837\u4f1a\u4f7f\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e4b\u95f4\u51fa\u73b0\u5927\u91cf\u7684\u963b\u585e\u64cd\u4f5c\uff0c\u4ea7\u751f\u4e86\u5927\u91cf\u7684\u8026\u5408\u903b\u8f91\uff0c\u5f71\u54cd\u7a0b\u5e8f\u539f\u7406\u7684\u903b\u8f91\u548c\u6027\u80fd\\r\\n\\r\\n\u4f55\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u5462\uff1f\u9996\u5148\u4eceRing Buffer\u4f7f\u7528\u7684\u65b9\u5f0f\u6765\u770b\uff0c\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5bf9\u4e8e\u8be5\u6a21\u5f0f\uff0c\u662f\u4e00\u4e2a\u5f88\u5178\u578b\u7684\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\uff0c\u5176\u4e3b\u8981\u5206\u4e3a\uff1a\\r\\n\\r\\n- Producer/Consumer\u6a21\u5f0f\uff1a \u6709\u4e0d\u65ad\u7684\u6570\u636e\u5199\u5165\u5230Ring Buffer\uff0c\u662f\u4e00\u4e2a\u5199\u5165\u8005\uff1b\u540c\u65f6\u5bf9\u4e8e\u7528\u6237\u4e5f\u4e0d\u65ad\u7684\u4eceRingBuffer\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u5728\u751f\u4ea7\u8005\u5df2\u7ecf\u628aRing Buffer\u7a7a\u95f4\u5199\u6ee1\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u6d88\u8d39\u8005\u6765\u8bfb\u53d6\u6570\u636e\uff0c\u6ca1\u6709Free\u7a7a\u95f4\uff0c\u90a3\u4e48\u751f\u4ea7\u8005\u5c31\u4f1a\u505c\u6b62\u5199\u5165\u4e22\u5f03\u65b0\u7684\u6570\u636e\\r\\n- Overwrite\u6a21\u5f0f\uff1a \u5728\u751f\u4ea7\u8005\u5df2\u7ecf\u628aRing Buffer\u7a7a\u95f4\u5199\u6ee1\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u6d88\u8d39\u8005\u6765\u8bfb\u6570\u636efree\u7a7a\u95f4\uff0c\u751f\u4ea7\u8005\u4f1a\u8986\u76d6\u5199\u5165\uff0c\u6700\u8001\u7684\u6570\u636e\u4f1a\u88ab\u8986\u76d6\uff1b\\r\\n\\r\\n\u5176\u6b21\uff0c\u4ece\u67b6\u6784\u56fe\u4e2d\uff0c\u6211\u4eec\u9762\u5bf9\u6709\u5f88\u591a\u7684\u5199\u8005\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2aper cpu\u7684RingBuffer\uff0c\u5176\u5199\u5fc5\u987b\u6ee1\u8db3\uff1a\\r\\n\\r\\n- \u4e0d\u80fd\u540c\u65f6\u6709\u4e24\u4e2a\u5199\u5165\u8005\u5728\u8fdb\u884c\u5199\u64cd\u4f5c\\r\\n- \u5141\u8bb8\u9ad8\u4f18\u5148\u7ea7\u7684\u5199\u5165\u8005\u4e2d\u65ad\u4f4e\u4f18\u5148\u7ea7\u7684\u5199\u5165\u8005\\r\\n\\r\\n**\u5bf9\u4e8e\u8bfb\u64cd\u4f5c\u5fc5\u987b\u8981\u6ee1\u8db3\uff1a**\\r\\n\\r\\n- \u8bfb\u64cd\u4f5c\u53ef\u4ee5\u968f\u65f6\u53d1\u751f\uff0c\u4f46\u662f\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u8bfb\u8005\u5728\u5de5\u4f5c\\r\\n- \u8bfb\u64cd\u4f5c\u548c\u5199\u64cd\u4f5c\u53ef\u4ee5\u540c\u65f6\u53d1\u751f\\r\\n- \u8bfb\u64cd\u4f5c\u4e0d\u4f1a\u4e2d\u65ad\u5199\u64cd\u4f5c\uff0c\u4f46\u662f\u5199\u64cd\u4f5c\u4f1a\u4e2d\u65ad\u8bfb\u64cd\u4f5c\\r\\n- \u652f\u6301\u4e24\u79cd\u6a21\u5f0f\u7684\u8bfb\u64cd\u4f5c\uff1a\u7b80\u6613\u8bfb\uff0c\u4e5f\u53ebiterator\u8bfb\uff0c\u5728\u8bfb\u53d6\u65f6\u4f1a\u5173\u95ed\u5199\u5165\uff0c\u4e14\u8bfb\u5b8c\u4e0d\u4f1a\u7834\u574f\u6570\u636e\u53ef\u4ee5\u91cd\u590d\u8bfb\u53d6\uff0c\u5b9e\u4f8b\u89c1\\"/sys/kernel/debug/tracing/trace\\"\uff1b\u5e76\u884c\u8bfb\uff0c\u4e5f\u53ebcustom\u8bfb\uff0c\u5e38\u7528\u4e8e\u76d1\u63a7\u7a0b\u5e8f\u5b9e\u65f6\u5730\u8fdb\u884c\u5e76\u884c\u8bfb\uff0c\u5176\u5229\u7528\u4e86\u4e00\u4e2areader page\u4ea4\u6362\u51faring buffer\u4e2d\u7684head page\uff0c\u907f\u514d\u4e86\u8bfb\u5199\u7684\u76f8\u4e92\u963b\u585e\uff0c\u5b9e\u4f8b\u89c1\\"/sys/kernel/debug/tracing/trace_pipe\\"\uff1b\\r\\n\\r\\n## 1.2 \u4ee3\u7801\u6d41\u7a0b\u548c\u6846\u67b6\\r\\n\\r\\n\u5bf9\u4e8eRingbuffer\u7684\u521d\u59cb\u5316\uff0c\u4e3b\u8981\u662f\u901a\u8fc7tracer_alloc_buffers\u8c03\u7528\u5230ring_buffer_alloc\u5b8c\u6210\u7684\uff0c\u5176\u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n\\r\\n/**\\r\\n * __ring_buffer_alloc - allocate a new ring_buffer\\r\\n * @size: the size in bytes per cpu that is needed.\\r\\n * @flags: attributes to set for the ring buffer.\\r\\n *\\r\\n * Currently the only flag that is available is the RB_FL_OVERWRITE\\r\\n * flag. This flag means that the buffer will overwrite old data\\r\\n * when the buffer wraps. If this flag is not set, the buffer will\\r\\n * drop data when the tail hits the head.\\r\\n */\\r\\nstruct ring_buffer *__ring_buffer_alloc(unsigned long size, unsigned flags,\\r\\n\\t\\t\\t\\t\\tstruct lock_class_key *key)\\r\\n{\\r\\n\\tstruct ring_buffer *buffer;\\r\\n\\tlong nr_pages;\\r\\n\\tint bsize;\\r\\n\\tint cpu;\\r\\n\\tint ret;\\r\\n\\r\\n\\t/* keep it in its own cache line */\\r\\n\\tbuffer = kzalloc(ALIGN(sizeof(*buffer), cache_line_size()),\\r\\n\\t\\t\\t GFP_KERNEL);        /*\u5206\u914dring_buffer\u6570\u636e\u7ed3\u6784*/\\r\\n\\tif (!buffer)\\r\\n\\t\\treturn NULL;\\r\\n\\r\\n\\tif (!zalloc_cpumask_var(&buffer->cpumask, GFP_KERNEL))\\r\\n\\t\\tgoto fail_free_buffer;\\r\\n\\r\\n\\tnr_pages = DIV_ROUND_UP(size, BUF_PAGE_SIZE);\\r\\n\\tbuffer->flags = flags;\\r\\n\\tbuffer->clock = trace_clock_local;\\r\\n\\tbuffer->reader_lock_key = key;\\r\\n\\r\\n\\tinit_irq_work(&buffer->irq_work.work, rb_wake_up_waiters);\\r\\n\\tinit_waitqueue_head(&buffer->irq_work.waiters);\\r\\n\\r\\n\\t/* need at least two pages */\\r\\n\\tif (nr_pages < 2)\\r\\n\\t\\tnr_pages = 2;\\r\\n\\r\\n\\tbuffer->cpus = nr_cpu_ids;\\r\\n\\r\\n\\tbsize = sizeof(void *) * nr_cpu_ids;\\r\\n\\tbuffer->buffers = kzalloc(ALIGN(bsize, cache_line_size()),\\r\\n\\t\\t\\t\\t  GFP_KERNEL);\\r\\n\\tif (!buffer->buffers)\\r\\n\\t\\tgoto fail_free_cpumask;\\r\\n\\r\\n\\tcpu = raw_smp_processor_id();\\r\\n\\tcpumask_set_cpu(cpu, buffer->cpumask);\\r\\n\\tbuffer->buffers[cpu] = rb_allocate_cpu_buffer(buffer, nr_pages, cpu);\\r\\n\\tif (!buffer->buffers[cpu])\\r\\n\\t\\tgoto fail_free_buffers;\\r\\n\\r\\n\\tret = cpuhp_state_add_instance(CPUHP_TRACE_RB_PREPARE, &buffer->node);\\r\\n\\tif (ret < 0)\\r\\n\\t\\tgoto fail_free_buffers;\\r\\n\\r\\n\\tmutex_init(&buffer->mutex);\\r\\n\\r\\n\\treturn buffer;\\r\\n\\r\\n fail_free_buffers:\\r\\n\\tfor_each_buffer_cpu(buffer, cpu) { /*\u4e3a\u6bcf\u4e2aCPU\u5206\u914dring_buffer\u7684per cpu\u673a\u6784*/\\r\\n\\t\\tif (buffer->buffers[cpu])\\r\\n\\t\\t\\trb_free_cpu_buffer(buffer->buffers[cpu]);\\r\\n\\t}\\r\\n\\tkfree(buffer->buffers);\\r\\n\\r\\n fail_free_cpumask:\\r\\n\\tfree_cpumask_var(buffer->cpumask);\\r\\n\\r\\n fail_free_buffer:\\r\\n\\tkfree(buffer);\\r\\n\\treturn NULL;\\r\\n}\\r\\nEXPORT_SYMBOL_GPL(__ring_buffer_alloc);\\r\\n```\\r\\n\\r\\n\u5176\u4e3b\u8981\u6570\u636e\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\r\\n\\r\\n![image-20250326225000375](./figure/image-20250326225000375.png)\\r\\n\\r\\n- struct ring_buffer\u5728\u6bcf\u4e2acpu\u4e0a\u6709\u72ec\u7acb\u7684struct ring_buffer_per_cpu\u6570\u636e\u7ed3\u6784\\r\\n- struct ring_buffer_per_cpu\u6839\u636e\u5b9a\u4e49size\u7684\u5927\u5c0f\uff0c\u5206\u914dpage\u7a7a\u95f4\uff0c\u5e76\u628apage\u8fde\u6210\u73af\u5f62\u7ed3\u6784\\r\\n- struct buffer_page\u662f\u4e00\u4e2a\u63a7\u5236\u7ed3\u6784\uff1bstruct buffer_data_page\u624d\u662f\u4e00\u4e2a\u5b9e\u9645\u7684page\uff0c\u9664\u4e86\u5f00\u5934\u7684\u4e24\u4e2a\u63a7\u5236\u5b57\u6bb5time_stamp\u3001commit\uff0c\u5176\u4ed6\u7a7a\u95f4\u90fd\u662f\u7528\u6765\u5b58\u50a8\u6570\u636e\u7684\uff1b\u6570\u636e\u4f7f\u7528struct ring_buffer_event\u6765\u5b58\u50a8\uff0c\u5176\u5728\u5305\u5934\u4e2d\u8fd8\u5b58\u50a8\u4e86\u65f6\u95f4\u6233\u3001\u957f\u5ea6/\u7c7b\u578b\u4fe1\u606f\\r\\n- struct ring_buffer_per_cpu\u4e2d\u4f7f\u7528head_page(\u8bfb)\u3001commit_page(\u5199\u786e\u8ba4)\u3001tail_page(\u5199)\u4e09\u79cd\u6307\u9488\u6765\u7ba1\u7406page ring\uff1b\u540c\u7406buffer_page->read(\u8bfb)\u3001buffer_page->write(\u5199)\u3001buffer_data_page->commit(\u5199\u786e\u8ba4)\u7528\u6765\u63cf\u8ff0page\u5185\u7684\u504f\u79fb\u6307\u9488\\r\\n- ring_buffer_per_cpu->reader_page\u4e2d\u8fd8\u5305\u542b\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684page\uff0c\u7528\u6765\u652f\u6301reader\u65b9\u5f0f\u7684\u8bfb\u64cd\u4f5c\\r\\n\\r\\n# \u4e8c\uff0cftrace\u7684\u5185\u6838\u6ce8\u518c\\r\\n\\r\\n\u5bf9\u4e8eftrace\u7684framwork\u5c42\uff0c\u9996\u5148\u9700\u8981\u5efa\u7acb[debugfs](https://zhida.zhihu.com/search?content_id=194763848&content_type=Article&match_order=1&q=debugfs&zd_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ6aGlkYV9zZXJ2ZXIiLCJleHAiOjE3NDMxNzExNzIsInEiOiJkZWJ1Z2ZzIiwiemhpZGFfc291cmNlIjoiZW50aXR5IiwiY29udGVudF9pZCI6MTk0NzYzODQ4LCJjb250ZW50X3R5cGUiOiJBcnRpY2xlIiwibWF0Y2hfb3JkZXIiOjEsInpkX3Rva2VuIjpudWxsfQ.nyedhLi7L2sXKuYcPcqErb8Ep6UHWhZNLTjNRZJ6vUI&zhida_source=entity)\u7684\u4e00\u7cfb\u5217\u7684\u8bbf\u95ee\u8282\u70b9\uff0c\u662f\u901a\u8fc7\u5982\u4e0b\u7684\u6d41\u7a0b\u5b8c\u6210\u7684\\r\\n\\r\\n![v2-8ad55885a702197e0b66196e0d039edf_r](./figure/v2-8ad55885a702197e0b66196e0d039edf_r.jpg)\\r\\n\\r\\n\u5b8c\u6210\u4e86\u6838\u5fc3\u7684\u6ce8\u518c\u540e\uff0c\u6211\u4eec\u6765\u770b\u770bftrace\u662f\u5982\u4f55\u5b8c\u6210\u5404\u4e2a\u529f\u80fd\u7684\uff0c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2atrace\u529f\u80fd\uff0c**\u90fd\u53ef\u4ee5\u5f52\u7eb3\u4e8e\u5982\u4e0b\u6d41\u7a0b\uff1a**\\r\\n\\r\\n- \u51fd\u6570\u63d2\u6869\uff1a \u4f7f\u7528\u5404\u79cd\u63d2\u6869\u65b9\u5f0f\u628a\u81ea\u5df1\u7684trace\u51fd\u6570\u63d2\u5165\u5230\u9700\u8981\u8ddf\u8e2a\u7684probe point\u4e0a\\r\\n- Input trace\u6570\u636e\uff1a \u5728trace\u7684probe\u51fd\u6570\u4e2d\u547d\u4e2d\u65f6\uff0c\u4f1a\u5b58\u50a8\u6570\u636e\u5230ring buffer\u5f53\u4e2d\uff0c\u8fd9\u91cc\u4e3b\u8981\u5305\u62ecfilter\u548ctigger\u529f\u80fd\\r\\n- Output trace\u6570\u636e\uff1a \u7528\u6237\u548c\u7a0b\u5e8f\u9700\u8981\u8bfb\u53d6trace\u6570\u636e\uff0c\u6839\u636e\u9700\u8981\u8f93\u51fa\u6570\u636e\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u89e3\u6790\u7b49\\r\\n\\r\\n##  2.1 Function tracer\u7684\u5b9e\u73b0\\r\\n\\r\\n\u8fd9\u4e2a\u529f\u80fd\u662f\u5229\u7528_mcount()\u51fd\u6570\u8fdb\u884c\u63d2\u6869\u7684\uff0c\u5728gcc\u4f7f\u7528\u4e86\\"-gp\u201c\u9009\u9879\u4ee5\u540e\uff0c\u4f1a\u5728\u6bcf\u4e2a\u51fd\u6570\u5165\u53e3\u63d2\u5165\u4ee5\u4e0b\u7684\u8bed\u53e5\\r\\n\\r\\n![v2-437619132779b3504d125ef972c90451_1440w](./figure/v2-437619132779b3504d125ef972c90451_1440w.jpg)\\r\\n\\r\\n\u6bcf\u4e2a\u51fd\u6570\u5165\u53e3\u5904\u63d2\u5165\u5bf9_mcount()\u51fd\u6570\u7684\u8c03\u7528\uff0c\u5c31\u662fgcc\u63d0\u4f9b\u7684\u63d2\u6869\u673a\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49_mcount()\u51fd\u6570\u4e2d\u7684\u5185\u5bb9\uff0c\u8c03\u7528\u60f3\u8981\u6267\u884c\u7684\u5185\u5bb9\u3002\u5bf9\u4e8etracer\u81ea\u8eab\u800c\u8a00\uff0c\u662f\u4e0d\u662f\u9700\u8981-pg\u9009\u9879\uff0c\u56e0\u6b64\u5728kernel/tracing/Makefile\u4e2d\u5c06-pg\u9009\u9879\u4e2d\u7531\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\\r\\n\\r\\n![v2-2cab18882895033fa62d93c9b77af728_1440w](./figure/v2-2cab18882895033fa62d93c9b77af728_1440w.jpg)\\r\\n\\r\\n### 2.1.1 \u9759\u6001\u63d2\u6869\\r\\n\\r\\n\u6211\u4eec\u6765\u770b\u770bARM64\u5982\u4f55\u5904\u7406\u7684\uff0c\u5176\u4ee3\u7801\u8def\u5f84\u4e3aarch/arm64/kernel/entry-ftrace.S\\r\\n\\r\\n![v2-c1216c3a204eff9e28a66b48500c6437_r](./figure/v2-c1216c3a204eff9e28a66b48500c6437_r.jpg)\\r\\n\\r\\n**\u5f53\u672a\u9009\u4e2dCONFIG_DYNAMIC_FTRACE\u65f6\uff0c\u5176\u91c7\u7528\u5982\u4e0b\u7684\u65b9\u6848;**\\r\\n\\r\\n- \u6bcf\u4e2a\u51fd\u6570\u8c03\u7528\u90fd\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u4f53\u7cfb\u7ed3\u6784\u7684\u5b9e\u73b0\u8c03\u7528_mcount\u51fd\u6570\\r\\n- \u5982\u679cftrace\u4f7f\u7528\u4e86\u67d0\u4e9b\u8ddf\u8e2a\u5668\uff0cftrace_trace_function\u6307\u9488\u4e0d\u518d\u6307\u5411ftrace_stub\uff0c\u800c\u662f\u6307\u5411\u5177\u4f53\u7684\u8ddf\u8e2a\u51fd\u6570\\r\\n- \u5426\u5219\u5c31\u6267\u884c\u5230\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u7684ftrace_stub\u4ece\u51fd\u6570\u8fd4\u56de\uff0c\u800c\u8be5\u63a5\u53e3\u4e3a\u7a7a\u51fd\u6570\\r\\n\\r\\n![v2-aa88732557ae827f51d2717f3af624dc_r](./figure/v2-aa88732557ae827f51d2717f3af624dc_r.jpg)\\r\\n\\r\\n### 2.1.2 \u52a8\u6001\u63d2\u6869\\r\\n\\r\\nstatic ftrace\u4e00\u65e6\u4f7f\u80fd\uff0c\u5bf9kernel\u4e2d\u6240\u6709\u7684\u51fd\u6570(\u9664\u5f00notrace\u3001online\u3001\u5176\u4ed6\u7279\u6b8a\u51fd\u6570)\u8fdb\u884c\u63d2\u88c5\uff0c\u8fd9\u5e26\u6765\u7684\u6027\u80fd\u5f00\u9500\u662f\u60ca\u4eba\u7684\uff0c\u6709\u53ef\u80fd\u5bfc\u81f4\u4eba\u4eec\u5f03\u7528ftrace\u529f\u80fd\u3002\\r\\n\\r\\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5185\u6838\u5f00\u53d1\u8005\u63a8\u51fa\u4e86dynamic ftrace\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u8c03\u7528\u8005\u4e00\u822c\u4e0d\u9700\u8981\u5bf9\u6240\u6709\u51fd\u6570\u8fdb\u884c\u8ffd\u8e2a\uff0c\u53ea\u4f1a\u5bf9\u611f\u5174\u8da3\u7684\u4e00\u90e8\u5206\u51fd\u6570\u8fdb\u884c\u8ffd\u8e2a\u3002dynamic ftrace\u628a\u4e0d\u9700\u8981\u8ffd\u8e2a\u7684\u51fd\u6570\u5165\u53e3\u5904\u6307\u4ee4\u201cbl _mcount\\"\u66ff\u6362\u6210nop\uff0c\u8fd9\u6837\u57fa\u672c\u4e0a\u5bf9\u6027\u80fd\u65e0\u5f71\u54cd\uff0c\u5bf9\u9700\u8981\u8ffd\u8e2a\u7684\u51fd\u6570\u66ff\u6362\u5165\u53e3\u5904\\"bl _mcount\\"\u4e3a\u9700\u8981\u8c03\u7528\u7684\u51fd\u6570\u3002\\r\\n\\r\\n- ftrace\u5728\u521d\u59cb\u5316\u65f6\uff0c\u201cscripts/recordmcount.pl\u201d\u811a\u672c\u8bb0\u5f55\u7684\u6240\u6709\u51fd\u6570\u5165\u53e3\u5904\u63d2\u6869\u4f4d\u7f6e\u7684\u201cbl _mcount\u201d\uff0c\u5c06\u5176\u66ff\u6362\u6210\u201cnop\u201d\u6307\u4ee4\uff0c\u5bf9\u6027\u80fd\u57fa\u672c\u65e0\u5f71\u54cd\\r\\n- \u5728tracer enable\u7684\u65f6\u5019\uff0c\u628a\u9700\u8981\u8ddf\u8e2a\u7684\u51fd\u6570\u7684\u63d2\u6869\u4f4d\u7f6enop\u66ff\u6362\u6210bl ftrace_caller\\r\\n\\r\\n![v2-ff24f390f26d41862312f89549c356ed_r](./figure/v2-ff24f390f26d41862312f89549c356ed_r.jpg)\\r\\n\\r\\n\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u8c03\u7528recordmcount.pl\u641c\u7d22\u6240\u6709_mcount\u51fd\u6570\u8c03\u7528\u70b9\uff0c\u5e76\u4e14\u6240\u6709\u7684\u8c03\u7528\u70b9\u5730\u5740\u4fdd\u5b58\u5230section _mcount_loc\uff0c\u5176\u5b9a\u4e49\u5728include/asm-generic/vmlinux.lds.h\uff0c\u8be6\u7ec6\u7684\u89c1\u6587\u4ef6\u4ee5\u5177\u4f53\u7814\u7a76\u201cscripts/recordmcount.pl\u3001scripts/recordmcount.c\u201d\u3002\\r\\n\\r\\n![v2-273bbb42eb4c4a2738b943b3229384d5_r](./figure/v2-273bbb42eb4c4a2738b943b3229384d5_r.jpg)\\r\\n\\r\\n\u5728\u521d\u59cb\u5316\u65f6\uff0c\u904d\u5386section __mcount_loc\u7684\u8c03\u7528\u70b9\u5730\u5740\uff0c\u9ed8\u8ba4\u4e3a\u6240\u6709\u201cbl _mcount\u201d\u66ff\u6362\u6210\u201cnop\u201d\uff0c\u5176\u5b9a\u4e49\u4e3akernel/trace/ftrace.c\\r\\n\\r\\n![v2-26c700e0ed80688c007040f77ca70966_r](./figure/v2-26c700e0ed80688c007040f77ca70966_r.jpg)\\r\\n\\r\\n### 2.1.3 irqs off/preempt off/preempt irqsoff tracer\\r\\n\\r\\n- irqsoff tracer\uff1a \u5f53\u4e2d\u65ad\u88ab\u7981\u6b62\u65f6\uff0c\u7cfb\u7edf\u65e0\u6cd5\u54cd\u5e94\u5916\u90e8\u4e8b\u4ef6\uff0c\u6bd4\u5982\u9f20\u6807\u548c\u952e\u76d8\uff0c\u65f6\u949f\u4e5f\u65e0\u6cd5\u4ea7\u751ftick\u4e2d\u65ad\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u7cfb\u7edf\u54cd\u5e94\u5ef6\u8fdf\uff0cirqsoff\u8fd9\u4e2atracer\u80fd\u591f\u8ddf\u8e2a\u5e76\u8bb0\u5f55\u5185\u6838\u4e2d\u54ea\u4e9b\u51fd\u6570\u7981\u6b62\u4e86\u4e2d\u65ad\uff0c\u5bf9\u4e8e\u5176\u4e2d\u4e2d\u65ad\u7981\u6b62\u65f6\u95f4\u6700\u957f\u7684\uff0cirqsoff\u5c06\u5728Log\u6587\u4ef6\u4e2d\u7b2c\u4e00\u884c\u6807\u8bb0\u51fa\u6765\uff0c\u4ece\u800c\u4f7f\u5f00\u53d1\u8005\u53ef\u4ee5\u8fc5\u901f\u5b9a\u4f4d\u9020\u6210\u54cd\u5e94\u5ef6\u8fdf\u7684\u7f6a\u9b41\u7978\u9996\\r\\n- preemptoff tracer\uff1a \u8ddf\u8e2a\u5e76\u8bb0\u5f55\u7981\u6b62\u5185\u6838\u62a2\u5360\u5e76\u5173\u95ed\u4e2d\u65ad\u5360\u7528\u671f\u95f4\u7684\u51fd\u6570\uff0c\u5e76\u6e05\u6670\u5730\u663e\u793a\u51fa\u7981\u6b62\u62a2\u5360\u65f6\u95f4\u6700\u957f\u7684\u5185\u6838\u51fd\u6570\\r\\n- preempt irqsoff tracer: \u8ddf\u8e2a\u548c\u8bb0\u5f55\u7981\u6b62\u4e2d\u65ad\u6216\u7981\u6b62\u62a2\u5360\u7684\u5185\u6838\u51fd\u6570\uff0c\u4ee5\u53ca\u7981\u6b62\u65f6\u95f4\u6700\u957f\u7684\u51fd\u6570\\r\\n\\r\\n**preemptoff\u4e0eirqsoff\u8ddf\u8e2a\u5668**\\r\\n\\r\\npreempt off\u4e0eirqs off\u8ddf\u8e2a\u5668\u7528\u7684\u8ddf\u8e2a\u51fd\u6570\u662f\u76f8\u540c\u7684\uff0c\u90fd\u662firqsoff_tracer_call()\u3002\\r\\n\\r\\npreemptoff\u4e0eirqsoff\u8ddf\u8e2a\u5668\u7684\u4e0d\u540c\u4e4b\u5904\\r\\n\\r\\nirqsoff\u8ddf\u8e2a\u5668\u7684start\u70b9\u5728\u5f00\u542f\u6216\u5173\u95ed\u4e2d\u65ad\u7684\u5730\u65b9\uff0c\u5982local_irq_disable()\\r\\n\\r\\npreemptoff\u8ddf\u8e2a\u5668\u7684start\u70b9\u5728\u5f00\u542f\u6216\u5173\u95ed\u62a2\u5360\u7684\u5730\u65b9\uff0c\u5982prempt_disable()\\r\\n\\r\\n![v2-17e3fd0528caf09b71ce07f85d1b03d3_r](./figure/v2-17e3fd0528caf09b71ce07f85d1b03d3_r.jpg)\\r\\n\\r\\nirqsoff tracer\u7684\u63d2\u6869\u65b9\u6cd5\uff0c\u662f\u76f4\u63a5\u5728local_irq_enable()\u3001local_irq_disable()\u4e2d\u76f4\u63a5\u63d2\u5165\u94a9\u5b50\u51fd\u6570trace_hardirqs_on()\u3001trace_hardirqs_off()\u3002\\r\\n\\r\\n![v2-c504cb01a770d6a6cfc4cf4d6b9a0472_r](./figure/v2-c504cb01a770d6a6cfc4cf4d6b9a0472_r.jpg)\\r\\n\\r\\n\u6211\u4eec\u6765\u770b\u770bstart_critical_timing\u7684\u5b9e\u73b0\uff0c\u5176\u4e3b\u8981\u4e3a\uff1a\\r\\n\\r\\n![v2-fb7ec502cb0230944d8b69881adf6c68_r](./figure/v2-fb7ec502cb0230944d8b69881adf6c68_r.jpg)\\r\\n\\r\\n\u5176\u4e3b\u8981\u7684\u8bbe\u8ba1\u601d\u60f3\u5982\u4e0b\\r\\n\\r\\n![v2-53da13949b09a2c35d6132954532a26e_r](./figure/v2-53da13949b09a2c35d6132954532a26e_r.jpg)\\r\\n\\r\\n## 2.2 trace event\\r\\n\\r\\nlinux trace\u4e2d\uff0c\u6700\u57fa\u7840\u7684\u65f6function tracer\u548ctracer event\uff0c\u4e0a\u9762\u5b66\u4e60\u4e86function\uff0c\u672c\u8282\u662f\u5b66\u4e60event\uff0c\u5176\u4e5f\u79bb\u4e0d\u5f00\u5982\u4e0b\u6d41\u7a0b\\r\\n\\r\\n![v2-b639d0d23c8ca3a00a9d3c4514b5ba49_r](./figure/v2-b639d0d23c8ca3a00a9d3c4514b5ba49_r.jpg)\\r\\n\\r\\ntrace event\u7684\u63d2\u6869\u4f7f\u7528\u7684\u662f[tracepoint](https://zhida.zhihu.com/search?content_id=194763848&content_type=Article&match_order=1&q=tracepoint&zd_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJ6aGlkYV9zZXJ2ZXIiLCJleHAiOjE3NDMxNzExNzIsInEiOiJ0cmFjZXBvaW50IiwiemhpZGFfc291cmNlIjoiZW50aXR5IiwiY29udGVudF9pZCI6MTk0NzYzODQ4LCJjb250ZW50X3R5cGUiOiJBcnRpY2xlIiwibWF0Y2hfb3JkZXIiOjEsInpkX3Rva2VuIjpudWxsfQ.h_Isu7mAqNcwOWVjtiyUI4_Jd8DmgwyMWqlwWyXwqlk&zhida_source=entity)\u673a\u5236\uff0c\u8be5\u673a\u5236\u662f\u4e00\u79cd\u9759\u6001\u7684\u63d2\u6869\u65b9\u6cd5\uff0c\u5b83\u9700\u8981\u9759\u6001\u7684\u5b9a\u4e49\u6869\u51fd\u6570\uff0c\u5e76\u4e14\u5728\u63d2\u6869\u4f4d\u7f6e\u663e\u5f0f\u8c03\u7528\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u597d\u5904\u662f\u9ad8\u6548\u53ef\u9760\uff0c\u5e76\u4e14\u53ef\u4ee5\u5904\u4e8e\u51fd\u6570\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\u3001\u65b9\u4fbf\u7684\u8bbf\u95ee\u5404\u79cd\u53d8\u91cf\uff0c\u574f\u5904\u662f\u4e0d\u592a\u7075\u6d3b\u3002\u5bf9\u4e8ekernel\u5728\u91cd\u8981\u7684\u8282\u70b9\u56fa\u5b9a\u4f4d\u7f6e\uff0c\u63d2\u5165\u4e86\u51e0\u767e\u4e2atrace event\u7528\u4e8e\u8ddf\u8e2a\u3002\\r\\n\\r\\n![v2-793d4aec6243b543241e78c515121e0b_r](./figure/v2-793d4aec6243b543241e78c515121e0b_r.jpg)\\r\\n\\r\\n\u5bf9\u4e8e\u5185\u6838\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u51e0\u4e2a\u64cd\u4f5ctracepoint\u7684\u51fd\u6570:\\r\\n\\r\\n- \u6869\u51fd\u6570\uff1a trace_##name();\\r\\n- \u6ce8\u518c\u56de\u8c03\u51fd\u6570\uff1a register_trace_##name();\\r\\n- \u6ce8\u9500\u56de\u8c03\u51fd\u6570\uff1aunregister_trace_##name();\\r\\n\\r\\ntracepoint \u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nstruct tracepoint {\\r\\n\\tconst char *name;\\t\\t/* Tracepoint name */\\r\\n\\tstruct static_key key;\\r\\n\\tvoid (*regfunc)(void);\\r\\n\\tvoid (*unregfunc)(void);\\r\\n\\tstruct tracepoint_func __rcu *funcs;\\r\\n};\\r\\n```\\r\\n\\r\\n- key tracepoint:\u662f\u5426\u4f7f\u80fd\u5f00\u5173\uff0c\u5982\u679c\u56de\u8c03\u51fd\u6570\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5219key\u4e3adisable\uff1b\u5982\u679c\u56de\u8c03\u51fd\u6570\u6570\u7ec4\u4e2d\u6709\u51fd\u6570\u6307\u9488\uff0c\u5219key\u4e3aenable\\r\\n- regfunc/unregfunc: \u6ce8\u518c/\u6ce8\u9500\u56de\u8c03\u51fd\u6570\u65f6\u7684\u94a9\u5b50\u51fd\u6570\\r\\n- funcs :\u56de\u8c03\u51fd\u6570\u6570\u7ec4\uff0ctracepoint\u7684\u4f5c\u7528\u5c31\u662f\u5728\u6869\u51fd\u6570\u88ab\u547d\u4e2d\u65f6\uff0c\u9010\u4e2a\u8c03\u7528\u56de\u8c03\u51fd\u6570\u6570\u7ec4\u7684\u51fd\u6570\\r\\n\\r\\n\u6211\u4eec\u5728\u63a2\u6d4b\u70b9\u63d2\u5165\u6869\u51fd\u6570\uff1a(kernl/sched/core.c)\\r\\n\\r\\n```\\r\\nstatic void __sched notrace __schedule(bool preempt)\\r\\n{\\r\\n\\t...\\r\\n    trace_sched_switch(preempt, prev, next);\\r\\n\\t...\\r\\n}\\r\\n```\\r\\n\\r\\n\u6869\u51fd\u6570\u88ab\u547d\u4e2d\u65f6\u7684\u6267\u884c\u6d41\u7a0b\uff0c\u53ef\u4ee5\u770b\u5230\u5c31\u662f\u9010\u4e2a\u7684\u6267\u884c\u56de\u8c03\u51fd\u6570\u6570\u7ec4\u4e2d\u7684\u51fd\u6570\u6307\u9488:\\r\\n\\r\\n![v2-67e2d3fcb3f948b07d74b1817983ad2a_r](./figure/v2-67e2d3fcb3f948b07d74b1817983ad2a_r.jpg)\\r\\n\\r\\n![v2-d89a370a5cac042dabd81b4f02a1c452_r](./figure/v2-d89a370a5cac042dabd81b4f02a1c452_r.jpg)\\r\\n\\r\\n\u53ef\u4ee5\u901a\u8fc7 register_trace_##name()/unregister_trace_##name() \u51fd\u6570\u5411\u56de\u8c03\u51fd\u6570\u6570\u7ec4\u4e2d\u6dfb\u52a0/\u5220\u9664\u51fd\u6570\u6307\u9488\\r\\n\\r\\n![v2-3f7ea42857f084418e15d04474472ef3_r](./figure/v2-3f7ea42857f084418e15d04474472ef3_r.jpg)\\r\\n\\r\\ntrace event \u5bf9 tracepoint \u7684\u5229\u7528\uff0c\u4ee5\u4e0a\u53ef\u4ee5\u770b\u5230\uff0ctracepoint \u53ea\u662f\u4e00\u79cd\u9759\u6001\u63d2\u6869\u65b9\u6cd5\u3002trace event \u53ef\u4ee5\u4f7f\u7528\uff0c\u5176\u4ed6\u673a\u5236\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff0c\u53ea\u662f kernel \u7684\u7edd\u5927\u90e8\u5206 tracepoint \u90fd\u662f trace event \u5728\u4f7f\u7528\u3002\\r\\n\\r\\ntrace event \u4e5f\u5fc5\u987b\u5411 tracepoint \u6ce8\u518c\u81ea\u5df1\u7684\u56de\u8c03\u51fd\u6570\uff0c\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u5728\u51fd\u6570\u88ab\u547d\u4e2d\u65f6\u5f80 ringbuffer \u4e2d\u5199\u5165 trace \u4fe1\u606f\u3002ftrace\u5f00\u53d1\u8005\u4eec\u610f\u8bc6\u5230\u4e86\u8fd9\u70b9\uff0c\u6240\u4ee5\u63d0\u4f9b\u4e86trace event\u529f\u80fd\uff0c\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u81ea\u5df1\u53bb\u6ce8\u518c\u6869\u51fd\u6570\u4e86\uff0c\u6613\u7528\u6027\u8f83\u597d\\r\\n\\r\\n### 2.2.1 \u589e\u52a0\u4e00\u4e2a\u65b0\u7684 trace event\\r\\n\\r\\n\u5728\u73b0\u6709\u7684\u4ee3\u7801\u4e2d\u6dfb\u52a0\u63a2\u6d4b\u51fd\u6570\uff0c\u8fd9\u662f\u8ba9\u5f88\u591a\u5185\u6838\u5f00\u53d1\u8005\u975e\u5e38\u4e0d\u723d\u7684\u4e00\u4ef6\u4e8b\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u964d\u4f4e\u6027\u80fd\u6216\u8005\u8ba9\u4ee3\u7801\u770b\u8d77\u6765\u975e\u5e38\u81c3\u80bf\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u5185\u6838\u6700\u7ec8\u8fdb\u5316\u51fa\u4e86\u4e00\u4e2a TRACE_EVENT() \u6765\u5b9e\u73b0 trace event \u7684\u5b9a\u4e49\uff0c\u8fd9\u662f\u975e\u5e38\u7b80\u6d01\u3001\u667a\u80fd\u7684\u4e00\u4e2a\u5b8f\u5b9a\u4e49\u3002\\r\\n\\r\\n\u9996\u5148\u6211\u4eec\u5148\u6765\u4e86\u89e3\u4e00\u4e0b\u600e\u4e48\u6837\u4f7f\u7528 TRACE_EVENT() \u65b0\u589e\u52a0\u4e00\u4e2a trace event\uff0c\u65b0\u589e\u52a0 trace event\uff0c\u6211\u4eec\u5fc5\u987b\u9075\u5faa\u89c4\u5b9a\u7684\u683c\u5f0f\u3002\\r\\n\\r\\n\u4ee5\u4e0b\u4ee5\u5185\u6838\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684 event sched_switch \u4e3a\u4f8b\uff0c\u8bf4\u660e\u5b9a\u4e49\u8fc7\u7a0b\u3002\\r\\n\\r\\n\u9996\u5148\u9700\u8981\u5728 include/trace/events/\u6587\u4ef6\u5939\u4e0b\u6dfb\u52a0\u4e00\u4e2a\u81ea\u5df1 event \u7684\u5934\u6587\u4ef6\uff0c\u9700\u8981\u9075\u5faa\u6ce8\u91ca\u7684\u6807\u51c6\u683c\u5f0f\uff1ainclude/trace/events/sched.h\\r\\n\\r\\n\u5728\u63a2\u6d4b\u70b9\u4f4d\u7f6e\u4e2d\u8c03\u7528\u6869\u51fd\u6570\uff0c\u9700\u8981\u9075\u5faa\u6ce8\u91ca\u7684\u6807\u51c6\u683c\u5f0f\\r\\n\\r\\n\u7531\u4e8e\u5185\u6838\u5404\u4e2a\u5b50\u7cfb\u7edf\u5927\u91cf\u4f7f\u7528 event tracing \u6765 trace \u4e0d\u540c\u7684\u4e8b\u4ef6\uff0c\u6bcf\u6709\u4e00\u4e2a\u9700\u8981 trace \u7684\u4e8b\u4ef6\u5c31\u5b9e\u73b0\u8fd9\u4e48\u4e00\u5957\u51fd\u6570\uff0c\u8fd9\u6837\u5185\u6838\u5c31\u4f1a\u5b58\u5728\u5927\u91cf\u7c7b\u4f3c\u7684\u91cd\u590d\u7684\u4ee3\u7801\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u6837\u7684\u60c5\u51b5\uff0c\u5185\u6838\u5f00\u53d1\u8005\u4f7f\u7528\u4e00\u4e2a\u5b8f\uff0c\u8ba9\u5b8f\u81ea\u52a8\u5c55\u5f00\u6210\u5177\u6709\u76f8\u4f3c\u6027\u7684\u4ee3\u7801\u3002\u8fd9\u4e2a\u5b8f\u5c31\u662f TRACE_EVENT\uff0c\u8981\u4e3a\u67d0\u4e2a\u4e8b\u4ef6\u6dfb\u52a0\u4e00\u4e2a trace event\uff0c\u53ea\u9700\u8981\u58f0\u660e\u8fd9\u6837\u4e00\u4e2a\u5b8f\u5c31\u53ef\u4ee5\u4e86\\r\\n\\r\\n# \u4e09\u3001kprobe\\r\\n\\r\\nkprobe event\u5c31\u662f\u8fd9\u6837\u7684\u4ea7\u7269\u3002krpobe event\u548ctrace event\u7684\u529f\u80fd\u4e00\u6837\uff0c\u4f46\u662f\u56e0\u4e3a\u5b83\u91c7\u7528\u7684\u662fkprobe\u63d2\u6869\u673a\u5236\uff0c\u6240\u4ee5\u5b83\u4e0d\u9700\u8981\u9884\u7559\u63d2\u6869\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u52a8\u6001\u7684\u5728\u4efb\u4f55\u4f4d\u7f6e\u8fdb\u884c\u63d2\u6869\u3002\u5f00\u9500\u4f1a\u5927\u4e00\u70b9\uff0c\u4f46\u662f\u975e\u5e38\u7075\u6d3b\uff0c\u662f\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u8865\u5145\u673a\u5236\u3002\\r\\n\\r\\nkprobe\u7684\u4e3b\u8981\u539f\u7406\u662f\u4f7f\u7528\u201c\u65ad\u70b9\u5f02\u5e38\u201d\u548c\u201c\u5355\u6b65\u5f02\u5e38\u201d\u4e24\u79cd\u5f02\u5e38\u6307\u4ee4\u6765\u5bf9\u4efb\u610f\u5730\u5740\u8fdb\u884c\u63d2\u6869\uff0c\u5728\u6b64\u57fa\u7840\u4e4b\u4e0a\u5b9e\u73b0\u4e86\u4e09\u79cd\u673a\u5236\uff1a\\r\\n\\r\\n- kprobe\uff1a \u53ef\u4ee5\u88ab\u63d2\u5165\u5230\u5185\u6838\u7684\u4efb\u4f55\u6307\u4ee4\u4f4d\u7f6e\uff0c\u5728\u88ab\u63d2\u5165\u6307\u4ee4\u4e4b\u524d\u8c03\u7528kp.pre_handler()\uff0c\u5728\u88ab\u63d2\u5165\u6307\u4ee4\u4e4b\u540e\u8c03\u7528kp.post_handler()\\r\\n- jprobe\uff1a \u53ea\u652f\u6301\u5bf9\u51fd\u6570\u8fdb\u884c\u63d2\u5165\\r\\n- kretprobe\uff1a \u548cjprobe\u7c7b\u4f3c\uff0c\u673a\u5236\u7565\u6709\u4e0d\u540c\uff0c\u4f1a\u66ff\u6362\u88ab\u63a2\u6d4b\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\uff0c\u8ba9\u51fd\u6570\u5148\u6267\u884c\u63d2\u5165\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u518d\u6062\u590d\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898.md","title":"\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898","description":"1753882115624","date":"2025-09-15T14:44:16.777Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.025,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4e00\uff0cringBuffer","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u8c03\u8bd5/Linux\u6027\u80fd\u5de5\u5177(\u4e09)ftrace\u6846\u67b6"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump"}},"content":"![1753882115624](./figure/1753882115624-1757599056156-1.png)\\r\\n\\r\\n![1753882154478](./figure/1753882154478-1757599056156-2.png)\\r\\n\\r\\n![9c85c87b302256850ce0b33901003e1](./figure/9c85c87b302256850ce0b33901003e1-1757599056157-4.png)\\r\\n\\r\\n![1753882047106](./figure/1753882047106-1757599056157-3.png)\\r\\n\\r\\n![1753882074921](./figure/1753882074921-1757599056157-5.png)"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump","description":"busybox\u652f\u6301kdump","date":"2025-09-15T14:44:16.689Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":6.785,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u7f51\u7edc/\u7f51\u7edc\u95ee\u9898"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab"}},"content":"busybox\u652f\u6301kdump\\n\\n\u4e00\u3001\u5185\u6838\u9009\u9879\u652f\u6301\\n\\n```\\nCONFIG_KEXEC=y\\nCONFIG_KEXEC_CORE=y\\nCONFIG_SYSFS=y\\nCONFIG_DEBUG_INFO=Y\\nCONFIG_CRASH_DUMP=y\\nCONFIG_PROC_VMCORE=y\\nCONFIG_PROC_KCORE=y\\nCONFIG_PROC_VMCORE=y\\n```\\n\\n\\n# CONFIG_CMA is not set  //\u5fc5\u9009\\n\u7136\u540e\u7f16\u8bd1\u6210\u65b0\u7684\u5185\u6838\u548c\u8bbe\u5907\u6811\u3002\\n\\n\u4e8c\u3001\u5e94\u7528\u7a0b\u5e8f\u79fb\u690dkdump\u548ckexec\\n\u9700\u8981\u5c06kexec\u3001vmcore-dmesg\u3001makedumpfile\u4e09\u4e2a\u5de5\u5177\u548c\u4f9d\u8d56\u5e93\u79fb\u690d\u5230\u5f00\u53d1\u677f\u5361\u4e0a\\n\\n```\\nldd /usr/bin/kexec\\n    linux-vdso.so.1 (0x0000007f87fd3000)\\n    libz.so.1 => /lib/aarch64-linux-gnu/libz.so.1 (0x0000007f87f1e000)\\n    libc.so.6 => /lib/aarch64-linux-gnu/libc.so.6 (0x0000007f87dab000)\\n    /lib/ld-linux-aarch64.so.1 (0x0000007f87fa3000)\\n\\nldd /usr/sbin/vmcore-dmesg \\n    linux-vdso.so.1 (0x0000007f92820000)\\n    libc.so.6 => /lib/aarch64-linux-gnu/libc.so.6 (0x0000007f9264b000)\\n    /lib/ld-linux-aarch64.so.1 (0x0000007f927f0000)\\n    \\n    \\nldd /usr/bin/makedumpfile\\n    linux-vdso.so.1 (0x0000007f8f8a4000)\\n    libpthread.so.0 => /lib/aarch64-linux-gnu/libpthread.so.0 (0x0000007f8f7bd000)\\n    liblzo2.so.2 => /lib/aarch64-linux-gnu/liblzo2.so.2 (0x0000007f8f78f000)\\n    libdw.so.1 => /lib/aarch64-linux-gnu/libdw.so.1 (0x0000007f8f72b000)\\n    libdl.so.2 => /lib/aarch64-linux-gnu/libdl.so.2 (0x0000007f8f717000)\\n    libelf.so.1 => /lib/aarch64-linux-gnu/libelf.so.1 (0x0000007f8f6ea000)\\n    libz.so.1 => /lib/aarch64-linux-gnu/libz.so.1 (0x0000007f8f6c0000)\\n    libc.so.6 => /lib/aarch64-linux-gnu/libc.so.6 (0x0000007f8f54d000)\\n    /lib/ld-linux-aarch64.so.1 (0x0000007f8f874000)\\n    liblzma.so.5 => /lib/aarch64-linux-gnu/liblzma.so.5 (0x0000007f8f519000)\\n    libbz2.so.1.0 => /lib/aarch64-linux-gnu/libbz2.so.1.0 (0x0000007f8f4f8000)\\n```\\n\\n\u4e09\u3001\u5236\u4f5c\u542f\u52a8\u7b2c\u4e8c\u5185\u6838\u7684\u6587\u4ef6\u7cfb\u7edf\\n\u4f7f\u7528\u5c06kexec\u3001vmcore-dmesg\u3001makedumpfile\u4e09\u4e2a\u5de5\u5177\u548c\u4f9d\u8d56\u5e93\u79fb\u690d\u5b8c\u6210\u7684\u6587\u4ef6\u7cfb\u7edf\u6bd4\u5982\\n\\n```\\ncd ram\\nls\\n\\nata2  dev  firmware  home  lib      mnt  proc     root  sbin  ssd   sys  usr\\nbin   etc  flashDev  init  linuxrc  opt  ramDisk  run   srv   stop  tmp  var\\n```\\n\\n\u5728\u6587\u4ef6\u7cfb\u7edf\u6240\u5728\u7684\u76ee\u5f55\u6267\u884c\u5982\u4e0b\u547d\u4ee4\\n\\n```\\nsudo find . | cpio -o -H newc > ../test.cpio\\nsudo gzip -9 < ../test.cpio > ../test.cpio.gz\\n```\\n\\n\u56db\u3001\u7f16\u5199\u811a\u672c\\n\u7f16\u5199kexec.sh\u811a\u672c\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\u53ef\u4ee5\u89e6\u53d1\u542f\u52a8\u7b2c\u4e8c\u5185\u6838\u3002\u8be5\u811a\u672c\u5728\u6b63\u5e38\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\u90e8\u7f72\\n\\n```\\n#!/bin/bash\\nkexec -p /root/Image-smarc-rzg2l.bin --initrd=test.cpio.gz --append=\\"root=/dev/mmcblk1p1 debug\\"\\ncat /sys/kernel/kexec_crash_size\\ncat /sys/kernel/kexec_crash_loaded\\n```\\n\\n\u5176\u4e2dImage-smarc-rzg2l.bin\u662f\u6b65\u9aa4\u4e00\u5185\u6838\u9009\u578b\u652f\u6301\u7f16\u8bd1\u51fa\u6765\u7684\u5185\u6838\u548c\u8bbe\u5907\u6811\u3002\\n\\n```\\nkexec -p /root/Image-smarc-rzg2l.bin --initrd=test.cpio.gz --append=\\"root=/dev/mmcblk1p1 debug\\"\\n```\\n\\n-p\u200b\u200b\uff1a\u6307\u5b9a\u52a0\u8f7d\u7684\u5185\u6838\u7528\u4e8e\u5d29\u6e83\u8f6c\u50a8\uff08\u4e0e -l\u4e0d\u540c\uff0c-p\u4e13\u4e3a kdump \u573a\u666f\u8bbe\u8ba1\uff09/root/Image-smarc-rzg2l.bin\u200b\u200b\uff1a\u76ee\u6807\u5185\u6838\u955c\u50cf\u6587\u4ef6\uff08\u9700\u4e0e\u5f53\u524d\u8fd0\u884c\u5185\u6838\u67b6\u6784\u5339\u914d\uff0c\u5982 ARM64\uff09\u3002\\n\u200b--initrd=test.cpio.gz\u200b\u200b\uff1a\u6307\u5b9a\u521d\u59cb RAM \u78c1\u76d8\uff08initrd\uff09\uff0c\u901a\u5e38\u5305\u542b\u6355\u83b7\u5185\u6838\u6240\u9700\u7684\u9a71\u52a8\u548c\u5de5\u5177\uff08\u5982 makedumpfile\uff09\\n\u200b--append\u200b\u200b\uff1a\u4f20\u9012\u5185\u6838\u542f\u52a8\u53c2\u6570\uff0c\u4f8b\u5982\uff1aroot=/dev/mmcblk1p1\uff1a\u6307\u5b9a\u6839\u6587\u4ef6\u7cfb\u7edf\u8bbe\u5907\u3002debug\uff1a\u542f\u7528\u5185\u6838\u8c03\u8bd5\u8f93\u51fa\\n\\n\u7f16\u5199vmcore.sh\u811a\u672c\uff0c\u8be5\u811a\u672c\u7528\u4e8e\u751f\u6210vmcore\u6587\u4ef6\u3002\u8be5\u811a\u672c\u5728\u7b2c\u4e8c\u5185\u6838\u542f\u52a8\u540e\u7684\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4f7f\u7528\u3002\\n\\n```\\n#!/bin/bash\\n\\n/etc/init.d/haveged restart\\n/etc/init.d/ssh restart\\n\\nvmcore-dmesg /proc/vmcore > vdmesg-test.txt\\n\\nmakedumpfile -l --message-level 1 -d 31 /proc/vmcore vmcore-test\\n\\n\\n\\nscp vmcore-test kylin@172.30.192.248:/home/kylin/test/kdump\\nscp vdmesg-test.txt kylin@172.30.192.248:/home/kylin/test/kdump\\n\u200b\\n```\\n\\nvmcore-dmesg /proc/vmcore > vdmesg-test.txt\\nvmcore-dmesg\uff1a\u7528\u4e8e\u4ece\u5185\u6838\u5d29\u6e83\u8f6c\u50a8\u6587\u4ef6\uff08/proc/vmcore\uff09\u4e2d\u63d0\u53d6\u5185\u6838\u65e5\u5fd7\uff08dmesg\uff09\u7684\u5de5\u5177\u3002\\n/proc/vmcore\uff1a\u662f\u5185\u6838\u5d29\u6e83\u65f6\u751f\u6210\u7684\u8f6c\u50a8\u6587\u4ef6\uff0c\u5305\u542b\u5d29\u6e83\u65f6\u7684\u5185\u5b58\u72b6\u6001\u548c\u5185\u6838\u65e5\u5fd7\u3002\\n\\n> vdmesg-test.txt\uff1a\u5c06\u63d0\u53d6\u7684\u65e5\u5fd7\u91cd\u5b9a\u5411\u5230vdmesg-test.txt\u6587\u4ef6\u4e2d\u3002\\n\u200b\\nmakedumpfile -l --message-level 1 -d 31 /proc/vmcore vmcore-test\\n-l\uff1a\u4f7f\u7528LZO\u538b\u7f29\u7b97\u6cd5\u538b\u7f29\u8f6c\u50a8\u6570\u636e\uff08\u9700\u7f16\u8bd1\u65f6\u542f\u7528USELZO=on\uff09\u3002\\n--message-level 1\uff1a\u9650\u5236\u8f93\u51fa\u6d88\u606f\u7ea7\u522b\u4e3a1\uff08\u4ec5\u663e\u793a\u5173\u952e\u9519\u8bef\u4fe1\u606f\uff09\u3002\\n-d 31\uff1a\u6307\u5b9a\u8f6c\u50a8\u7ea7\u522b\u4e3a31\uff0c\u6392\u9664\u4ee5\u4e0b\u9875\u9762\u7c7b\u578b\uff1a\\n        1\uff08\u586b\u96f6\u9875\u9762\uff09\\n        2\uff08\u975e\u79c1\u6709\u7f13\u5b58\u9875\u9762\uff09\\n        4\uff08\u6240\u6709\u7f13\u5b58\u9875\u9762\uff09\\n        8\uff08\u7528\u6237\u8fdb\u7a0b\u6570\u636e\u9875\u9762\uff09\\n        16\uff08\u7a7a\u95f2\u9875\u9762\uff09\\n/proc/vmcore\uff1a\u8f93\u5165\u6587\u4ef6\uff0c\u5373\u5d29\u6e83\u5185\u6838\u7684\u5185\u5b58\u6620\u50cf\u3002\\nvmcore-test\uff1a\u8f93\u51fa\u6587\u4ef6\uff0c\u751f\u6210\u538b\u7f29\u540e\u7684\u8f6c\u50a8\u6587\u4ef6\u3002\\n\\n\u4e94\u3001\u6d4b\u8bd5\\n1\u3001\u91cd\u542f\u8bbe\u7f6euboot\u7684bootargs\u53c2\u6570\uff0c\u52a0\u5165crashkernel=512M\\n\\n```\\nroot=/dev/mmcblk1p1  rootwait rw isolcpus=1 nohz_full=1 crashkernel=512M\\n```\\n\\n2\u3001\u66ff\u6362\u7b2c\u4e00\u6b65\u7f16\u8bd1\u7684\u7f16\u8bd1\u6210\u65b0\u7684\u5185\u6838\u548c\u8bbe\u5907\u6811\uff0c\u4f5c\u4e3a\u9ed8\u8ba4\u5185\u6838\u548c\u8bbe\u5907\u6811\u542f\u52a8\uff0c\u7136\u540e\u542f\u52a8\u6587\u4ef6\u7cfb\u7edf\\n3\u3001\u5c06\u7b2c\u4e09\u6b65\u5236\u4f5c\u542f\u52a8\u7b2c\u4e8c\u5185\u6838\u7684\u6587\u4ef6\u7cfb\u7edf\u5236\u4f5c\u7684test.cpio.gz\u548c\u7b2c\u56db\u90e8\u7f16\u5199\u7684kexec.sh\u811a\u672c\u62f7\u8d1d\u5230\uff0c\u6587\u4ef6\u7cfb\u7edf\u5185\\n\\n```\\nls kdump\\nImage-smarc-rzg2l.bin              kexec.sh          Image-r9a07g044l2-smarc.dtb         test.cpio.gz\\n```\\n\\n\u6267\u884ckexec.sh\\n\\n```\\n./kexec.sh\\n\\n./kexec.sh \\n536870912\\n1\\n```\\n\\n4\u3001\u89e6\u53d1kdump\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\\n\\n```\\necho c > /proc/sysrq-trigger\\n```\\n\\n\u89e6\u53d1\u542f\u52a8\u7b2c\u4e8c\u5185\u6838\u65e5\u5fd7\u5982\u4e0b\\n\\n```\\necho c > /proc/sysrq-trigger                                     \\n[   39.750075] sysrq: SysRq : Trigger a crash                                                \\n[   39.754270] Unable to handle kernel NULL pointer dereference at virtual address 0000000000\\n[   39.763050] Mem abort info:                                                               \\n[   39.765839]   ESR = 0x96000046                                                            \\n[   39.768889]   Exception class = DABT (current EL), IL = 32 bits                           \\n[   39.774803]   SET = 0, FnV = 0                                                            \\n[   39.777852]   EA = 0, S1PTW = 0                                                           \\n[   39.780986] Data abort info:                                                              \\n[   39.783860]   ISV = 0, ISS = 0x00000046                                                   \\n[   39.787689]   CM = 0, WnR = 1                                                             \\n[   39.790647] user pgtable: 4k pages, 48-bit VAs, pgdp = 0000000004c0b539                   \\n[   39.797254] [0000000000000000] pgd=00000021744ac003, pud=0000002175db3003, pmd=00000000000\\n[   39.805952] Internal error: Oops: 96000046 [#1] PREEMPT SMP                               \\n[   39.811514] Modules linked in:                                                            \\n[   39.814559] CPU: 3 PID: 2183 Comm: sh Kdump: loaded Not tainted 4.19.90-g79148c6d4-dirty 2\\n[   39.822986] Hardware name: FT-2000/4-D4-DSK Development Board (DT)                        \\n[   39.829155] pstate: 60000005 (nZCv daif -PAN -UAO)                                        \\n[   39.833938] pc : sysrq_handle_crash+0x28/0x38                                             \\n[   39.838283] lr : sysrq_handle_crash+0x14/0x38                                             \\n[   39.842628] sp : ffff00000f983c50                                                         \\n[   39.845931] x29: ffff00000f983c50 x28: ffff8020f1fe5280                                   \\n[   39.851234] x27: 0000000000000000 x26: 0000000000000000                                   \\n[   39.856536] x25: 0000000056000000 x24: ffff00000a0af000                                   \\n[   39.861837] x23: 0000000000000000 x22: 0000000000000007                                   \\n[   39.867139] x21: ffff00000a0afa38 x20: 0000000000000063                                   \\n[   39.872441] x19: ffff000009f4f000 x18: ffffffffffffffff                                   \\n[   39.877742] x17: 0000000000000000 x16: 0000000000000000                                   \\n[   39.883044] x15: ffff000009f2a788 x14: ffff00008a1a753f                                   \\n[   39.888345] x13: ffff00000a1a754d x12: ffff000009f4f000                                   \\n[   39.893647] x11: 0000000005f5e0ff x10: ffff000009f2a9e8                                   \\n[   39.898949] x9 : ffff000008931bc0 x8 : 6120726567676972                                   \\n[   39.904250] x7 : 54203a2071527379 x6 : 0000000000000397                                   \\n[   39.909552] x5 : 0000000000000000 x4 : ffff8020f1fe5280                                   \\n[   39.914854] x3 : ffff000009f2b000 x2 : 38d1cde1282e1e00                                   \\n[   39.920155] x1 : 0000000000000001 x0 : 0000000000000000                                   \\n[   39.925457] Process sh (pid: 2183, stack limit = 0x0000000097ef60d4)                      \\n[   39.931799] Call trace:                                                                   \\n[   39.934235]  sysrq_handle_crash+0x28/0x38                                                 \\n[   39.938233]  __handle_sysrq+0xb0/0x1a8                                                    \\n[   39.941971]  write_sysrq_trigger+0x70/0x88                                                \\n[   39.946058]  proc_reg_write+0x80/0xd8                                                     \\n[   39.949710]  __vfs_write+0x60/0x180                                                       \\n[   39.953187]  vfs_write+0xac/0x1c0                                                         \\n[   39.956491]  ksys_write+0x6c/0xd8                                                         \\n[   39.959794]  __arm64_sys_write+0x24/0x30                                                  \\n[   39.963707]  el0_svc_common+0x7c/0x118                                                    \\n[   39.967444]  el0_svc_handler+0x38/0x78                                                    \\n[   39.971182]  el0_svc+0x8/0xc                                                              \\n[   39.974052] Code: 52800021 b903c001 d5033e9f d2800000 (39000001)                          \\n[   39.980139] SMP: stopping secondary CPUs                                                  \\nNNNOOOTTTIIICCCEEE:::      SSSttta[daddSSrri1c   atl:0088000a022u                            \\n kIrE: .ft2                                                                                  \\n           04_pwr_domain_off                                                                 \\nNOTICE:  [CLUST_PSOCFG_REG]= 50                                                              \\nNOTICE:  ft2004_pwr_domr_dooff                                                               \\npwrICE: _[CLUSNOTSOE:G_REG]= fi_e                                                            \\n                                 NOTI E:  ft2004_pwr_domain_off                              \\nNOTICE:  [CLUST_PSOCFG_REG]= 53                                                              \\nNOTICE:  power off cluster, CLUST_PSOCFG_REG = 0x53.                                         \\nNOTICE:  ft2004_psci_pwr_domain_pwr_down_wfi                                                 \\nNOTICE:  scpi_wfi_enalbe                                                                     \\n[   40.018025] Bye! \\n```\\n\\n5\u3001\u7b2c\u4e8c\u5185\u6838\u542f\u52a8\u540e\u751f\u6210vmcore\\n\u8fdb\u5165\u7b2c\u4e8c\u5185\u6838\u542f\u52a8\u7684\u7cfb\u7edf\u540e\uff0c\u6267\u884c\u5982\u4e0b\u547d\u4ee4\\n\\n```\\n./vmcore.sh\\n```\\n\\n\u5c06\u751f\u6210\u5982\u4e0b\u6587\u4ef6\\n\\n```\\nvdmesg-test.txt  vmcore-test\\n```\\n\\n\u5c06\u8fd9\u4e24\u4e2a\u6587\u4ef6\u5bfc\u51fa\u5373\u53ef\uff0c\u6700\u597d\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u51fa\u6765\\n\u516d\u3001\u5e38\u89c1\u95ee\u9898\\n6.1 \u95ee\u9898\uff1avmcore-dmesg /proc/vmcore \u62a5\u9519No program header covering vaddr 0xffff800010ee29f0found kexec bug?\\n\u89e3\u51b3\u65b9\u6cd5\uff1a\u5efa\u8bae\u5c06kexec-tools\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\\n\\n6.2 \u95ee\u9898\uff1a\u4f7f\u7528crash\u5de5\u5177\u62a5\u9519\\ngdb called without error_hook: Dwarf Error: wrong version in compilation unit header (is 0, should be 2, 3, or 4) [in module /home/rlk/szf/rzg/kernel-source/vmlinux]\\nDwarf Error: wrong version in compilation unit header (is 0, should be 2, 3, or 4) [in module /home/rlk/szf/rzg/kernel-source/vmlinux]\\n\\ncrash: kernel-source/vmlinux: no debugging data available\\n\u89e3\u51b3\u65b9\u6cd5\uff1agcc\u7248\u672c\u898110\u4ee5\u4e0b"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab","description":"\u591a\u4e2a\u8bbe\u5907\u5171\u4eab\u4e00\u6839\u786c\u4ef6\u4e2d\u65ad\u7ebf\u7684\u60c5\u51b5\u5728\u5b9e\u9645\u7684\u786c\u4ef6\u7cfb\u7edf\u4e2d\u5e7f\u6cdb\u5b58\u5728\uff0cLinux\u652f\u6301\u8fd9\u79cd\u4e2d\u65ad\u5171\u4eab\u3002\u4e0b\u9762\u662f\u4e2d\u65ad\u5171\u4eab\u7684\u4f7f\u7528\u65b9\u6cd5\u3002","date":"2025-09-15T14:44:15.137Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.47,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/rzg\u90e8\u7f72kdump"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784"}},"content":"\u591a\u4e2a\u8bbe\u5907\u5171\u4eab\u4e00\u6839\u786c\u4ef6\u4e2d\u65ad\u7ebf\u7684\u60c5\u51b5\u5728\u5b9e\u9645\u7684\u786c\u4ef6\u7cfb\u7edf\u4e2d\u5e7f\u6cdb\u5b58\u5728\uff0cLinux\u652f\u6301\u8fd9\u79cd\u4e2d\u65ad\u5171\u4eab\u3002\u4e0b\u9762\u662f\u4e2d\u65ad\u5171\u4eab\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\\r\\n\\r\\n1\uff09\u5171\u4eab\u4e2d\u65ad\u7684\u591a\u4e2a\u8bbe\u5907\u5728\u7533\u8bf7\u4e2d\u65ad\u65f6\uff0c\u90fd\u5e94\u8be5\u4f7f\u7528IRQF_SHARED\u6807\u5fd7\uff0c\u800c\u4e14\u4e00\u4e2a\u8bbe\u5907\u4ee5IRQF_SHARED\u7533\u8bf7\u67d0\u4e2d\u65ad\u6210\u529f\u7684\u524d\u63d0\u662f\u8be5\u4e2d\u65ad\u672a\u88ab\u7533\u8bf7\uff0c\u6216\u8be5\u4e2d\u65ad\u867d\u7136\u88ab\u7533\u8bf7\u4e86\uff0c\u4f46\u662f\u4e4b\u524d\u7533\u8bf7\u8be5\u4e2d\u65ad\u7684\u6240\u6709\u8bbe\u5907\u4e5f\u90fd\u4ee5IRQF_SHARED\u6807\u5fd7\u7533\u8bf7\u8be5\u4e2d\u65ad\u3002\\r\\n\\r\\n2\uff09\u5c3d\u7ba1\u5185\u6838\u6a21\u5757\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5730\u5740\u90fd\u53ef\u4ee5\u4f5c\u4e3arequest_irq\uff08\u2026\uff0cvoid*dev_id\uff09\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570dev_id\uff0c\u4f46\u662f\u8bbe\u5907\u7ed3\u6784\u4f53\u6307\u9488\u663e\u7136\u662f\u53ef\u4f20\u5165\u7684\u6700\u4f73\u53c2\u6570\u3002\\r\\n\\r\\n3\uff09\u5728\u4e2d\u65ad\u5230\u6765\u65f6\uff0c\u4f1a\u904d\u5386\u6267\u884c\u5171\u4eab\u6b64\u4e2d\u65ad\u7684\u6240\u6709\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u76f4\u5230\u67d0\u4e00\u4e2a\u51fd\u6570\u8fd4\u56deIRQ_HANDLED\u3002\u5728\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u9876\u534a\u90e8\u4e2d\uff0c\u5e94\u6839\u636e\u786c\u4ef6\u5bc4\u5b58\u5668\u4e2d\u7684\u4fe1\u606f\u6bd4\u7167\u4f20\u5165\u7684dev_id\u53c2\u6570\u8fc5\u901f\u5730\u5224\u65ad\u662f\u5426\u4e3a\u672c\u8bbe\u5907\u7684\u4e2d\u65ad\uff0c\u82e5\u4e0d\u662f\uff0c\u5e94\u8fc5\u901f\u8fd4\u56deIRQ_NONE\uff0c\u5982\u56fe10.5\u6240\u793a\u3002\\r\\n\\r\\n![1743431228924](./figure/1743431228924.png)\\r\\n\\r\\n\u56fe10.5\u3000\u5171\u4eab\u4e2d\u65ad\u7684\u5904\u7406\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.8\u7ed9\u51fa\u4e86\u4f7f\u7528\u5171\u4eab\u4e2d\u65ad\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u6a21\u677f\uff08\u4ec5\u5305\u542b\u4e0e\u5171\u4eab\u4e2d\u65ad\u673a\u5236\u76f8\u5173\u7684\u90e8\u5206\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.8\u3000\u5171\u4eab\u4e2d\u65ad\u7f16\u7a0b\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1/* \u4e2d\u65ad\u5904\u7406\u9876\u534a\u90e8 */\\r\\n 2irqreturn_t xxx_interrupt(int irq, void *dev_id)\\r\\n 3{\\r\\n 4    ...\\r\\n 5 int status = read_int_status();      /* \u83b7\u77e5\u4e2d\u65ad\u6e90*/\\r\\n 6 if(!is_myint(dev_id,status))         /* \u5224\u65ad\u662f\u5426\u4e3a\u672c\u8bbe\u5907\u4e2d\u65ad*/\\r\\n 7          return IRQ_NONE;            /* \u4e0d\u662f\u672c\u8bbe\u5907\u4e2d\u65ad\uff0c\u7acb\u5373\u8fd4\u56de*/\\r\\n 8\\r\\n 9 /* \u662f\u672c\u8bbe\u5907\u4e2d\u65ad\uff0c\u8fdb\u884c\u5904\u7406*/\\r\\n10   ...\\r\\n11   return IRQ_HANDLED;                /* \u8fd4\u56deIRQ_HANDLED\u8868\u660e\u4e2d\u65ad\u5df2\u88ab\u5904\u7406*/\\r\\n12}\\r\\n13\\r\\n14/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570*/\\r\\n15int xxx_init(void)\\r\\n16{\\r\\n17    ...\\r\\n18    /* \u7533\u8bf7\u5171\u4eab\u4e2d\u65ad*/\\r\\n19    result = request_irq(sh_irq, xxx_interrupt,\\r\\n20        IRQF_SHARED, \\"xxx\\", xxx_dev);\\r\\n21 ...\\r\\n22}\\r\\n23\\r\\n24/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u5378\u8f7d\u51fd\u6570*/\\r\\n25void xxx_exit(void)\\r\\n26{\\r\\n27    ...\\r\\n28    /* \u91ca\u653e\u4e2d\u65ad*/\\r\\n29    free_irq(xxx_irq, xxx_interrupt);\\r\\n30    ...\\r\\n31}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784","description":"Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f53\u7cfb\u7ed3\u6784\u5982\u56fe14.1\u6240\u793a\uff0c\u4ece\u4e0a\u5230\u4e0b\u53ef\u4ee5\u5212\u5206\u4e3a4\u5c42\uff0c\u4f9d\u6b21\u4e3a\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u3001\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u3001\u63d0\u4f9b\u5b9e\u9645\u529f\u80fd\u7684\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4ee5\u53ca\u7f51\u7edc\u8bbe\u5907\u4e0e\u5a92\u4ecb\u5c42\uff0c\u8fd94\u5c42\u7684\u4f5c\u7528\u5982\u4e0b\u6240\u793a\u3002","date":"2025-09-15T14:44:15.129Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":19.835,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.4\u3000\u4e2d\u65ad\u5171\u4eab"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API"}},"content":"Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f53\u7cfb\u7ed3\u6784\u5982\u56fe14.1\u6240\u793a\uff0c\u4ece\u4e0a\u5230\u4e0b\u53ef\u4ee5\u5212\u5206\u4e3a4\u5c42\uff0c\u4f9d\u6b21\u4e3a\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u3001\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u3001\u63d0\u4f9b\u5b9e\u9645\u529f\u80fd\u7684\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4ee5\u53ca\u7f51\u7edc\u8bbe\u5907\u4e0e\u5a92\u4ecb\u5c42\uff0c\u8fd94\u5c42\u7684\u4f5c\u7528\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\n1\uff09\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u5411\u7f51\u7edc\u5c42\u534f\u8bae\u63d0\u4f9b\u7edf\u4e00\u7684\u6570\u636e\u5305\u6536\u53d1\u63a5\u53e3\uff0c\u4e0d\u8bba\u4e0a\u5c42\u534f\u8bae\u662fARP\uff0c\u8fd8\u662fIP\uff0c\u90fd\u901a\u8fc7dev_queue_xmit\uff08\uff09\u51fd\u6570\u53d1\u9001\u6570\u636e\uff0c\u5e76\u901a\u8fc7netif_rx\uff08\uff09\u51fd\u6570\u63a5\u6536\u6570\u636e\u3002\u8fd9\u4e00\u5c42\u7684\u5b58\u5728\u4f7f\u5f97\u4e0a\u5c42\u534f\u8bae\u72ec\u7acb\u4e8e\u5177\u4f53\u7684\u8bbe\u5907\u3002\\r\\n\\r\\n2\uff09\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u5411\u534f\u8bae\u63a5\u53e3\u5c42\u63d0\u4f9b\u7edf\u4e00\u7684\u7528\u4e8e\u63cf\u8ff0\u5177\u4f53\u7f51\u7edc\u8bbe\u5907\u5c5e\u6027\u548c\u64cd\u4f5c\u7684\u7ed3\u6784\u4f53net_device\uff0c\u8be5\u7ed3\u6784\u4f53\u662f\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4e2d\u5404\u51fd\u6570\u7684\u5bb9\u5668\u3002\u5b9e\u9645\u4e0a\uff0c\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u4ece\u5b8f\u89c2\u4e0a\u89c4\u5212\u4e86\u5177\u4f53\u64cd\u4f5c\u786c\u4ef6\u7684\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u7684\u7ed3\u6784\u3002\\r\\n\\r\\n3\uff09\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u7684\u5404\u51fd\u6570\u662f\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42net_device\u6570\u636e\u7ed3\u6784\u7684\u5177\u4f53\u6210\u5458\uff0c\u662f\u9a71\u4f7f\u7f51\u7edc\u8bbe\u5907\u786c\u4ef6\u5b8c\u6210\u76f8\u5e94\u52a8\u4f5c\u7684\u7a0b\u5e8f\uff0c\u5b83\u901a\u8fc7hard_start_xmit\uff08\uff09\u51fd\u6570\u542f\u52a8\u53d1\u9001\u64cd\u4f5c\uff0c\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbe\u5907\u4e0a\u7684\u4e2d\u65ad\u89e6\u53d1\u63a5\u6536\u64cd\u4f5c\\r\\n\\r\\n\u30024\uff09\u7f51\u7edc\u8bbe\u5907\u4e0e\u5a92\u4ecb\u5c42\u662f\u5b8c\u6210\u6570\u636e\u5305\u53d1\u9001\u548c\u63a5\u6536\u7684\u7269\u7406\u5b9e\u4f53\uff0c\u5305\u62ec\u7f51\u7edc\u9002\u914d\u5668\u548c\u5177\u4f53\u7684\u4f20\u8f93\u5a92\u4ecb\uff0c\u7f51\u7edc\u9002\u914d\u5668\u88ab\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4e2d\u7684\u51fd\u6570\u5728\u7269\u7406\u4e0a\u9a71\u52a8\u3002\u5bf9\u4e8eLinux\u7cfb\u7edf\u800c\u8a00\uff0c\u7f51\u7edc\u8bbe\u5907\u548c\u5a92\u4ecb\u90fd\u53ef\u4ee5\u662f\u865a\u62df\u7684\u3002\\r\\n\\r\\n![1744814560076](./figure/1744814560076.png)\\r\\n\\r\\n\u56fe14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u4f53\u7cfb\u7ed3\u6784\\r\\n\\r\\n\u5728\u8bbe\u8ba1\u5177\u4f53\u7684\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5b8c\u6210\u7684\u4e3b\u8981\u5de5\u4f5c\u662f\u7f16\u5199\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u7684\u76f8\u5173\u51fd\u6570\u4ee5\u586b\u5145net_device\u6570\u636e\u7ed3\u6784\u7684\u5185\u5bb9\u5e76\u5c06net_device\u6ce8\u518c\u5165\u5185\u6838\u3002\\r\\n\\r\\n# 14.1.1\u3000\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\\r\\n\\r\\n\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u6700\u4e3b\u8981\u7684\u529f\u80fd\u662f\u7ed9\u4e0a\u5c42\u534f\u8bae\u63d0\u4f9b\u900f\u660e\u7684\u6570\u636e\u5305\u53d1\u9001\u548c\u63a5\u6536\u63a5\u53e3\u3002\u5f53\u4e0a\u5c42ARP\u6216IP\u9700\u8981\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0c\u5b83\u5c06\u8c03\u7528\u7f51\u7edc\u534f\u8bae\u63a5\u53e3\u5c42\u7684dev_queue_xmit\uff08\uff09\u51fd\u6570\u53d1\u9001\u8be5\u6570\u636e\u5305\uff0c\u540c\u65f6\u9700\u4f20\u9012\u7ed9\u8be5\u51fd\u6570\u4e00\u4e2a\u6307\u5411struct sk_buff\u6570\u636e\u7ed3\u6784\u7684\u6307\u9488\u3002dev_queue_xmit\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint dev_queue_xmit(struct sk_buff *skb);\\r\\n```\\r\\n\\r\\n\u540c\u6837\u5730\uff0c\u4e0a\u5c42\u5bf9\u6570\u636e\u5305\u7684\u63a5\u6536\u4e5f\u901a\u8fc7\u5411netif_rx\uff08\uff09\u51fd\u6570\u4f20\u9012\u4e00\u4e2astruct sk_buff\u6570\u636e\u7ed3\u6784\u7684\u6307\u9488\u6765\u5b8c\u6210\u3002netif_rx\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint netif_rx(struct sk_buff *skb);\\r\\n```\\r\\n\\r\\nsk_buff\u7ed3\u6784\u4f53\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u5b9a\u4e49\u4e8einclude/linux/skbuff.h\u6587\u4ef6\u4e2d\uff0c\u542b\u4e49\u4e3a\u201c\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u201d\uff0c\u7528\u4e8e\u5728Linux\u7f51\u7edc\u5b50\u7cfb\u7edf\u4e2d\u7684\u5404\u5c42\u4e4b\u95f4\u4f20\u9012\u6570\u636e\uff0c\u662fLinux\u7f51\u7edc\u5b50\u7cfb\u7edf\u6570\u636e\u4f20\u9012\u7684\u201c\u4e2d\u67a2\u795e\u7ecf\u201d\u3002\\r\\n\\r\\n\u5f53\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0cLinux\u5185\u6838\u7684\u7f51\u7edc\u5904\u7406\u6a21\u5757\u5fc5\u987b\u5efa\u7acb\u4e00\u4e2a\u5305\u542b\u8981\u4f20\u8f93\u7684\u6570\u636e\u5305\u7684sk_buff\uff0c\u7136\u540e\u5c06sk_buff\u9012\u4ea4\u7ed9\u4e0b\u5c42\uff0c\u5404\u5c42\u5728sk_buff\u4e2d\u6dfb\u52a0\u4e0d\u540c\u7684\u534f\u8bae\u5934\u76f4\u81f3\u4ea4\u7ed9\u7f51\u7edc\u8bbe\u5907\u53d1\u9001\u3002\u540c\u6837\u5730\uff0c\u5f53\u7f51\u7edc\u8bbe\u5907\u4ece\u7f51\u7edc\u5a92\u4ecb\u4e0a\u63a5\u6536\u5230\u6570\u636e\u5305\u540e\uff0c\u5b83\u5fc5\u987b\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u8f6c\u6362\u4e3ask_buff\u6570\u636e\u7ed3\u6784\u5e76\u4f20\u9012\u7ed9\u4e0a\u5c42\uff0c\u5404\u5c42\u5265\u53bb\u76f8\u5e94\u7684\u534f\u8bae\u5934\u76f4\u81f3\u4ea4\u7ed9\u7528\u6237\u3002\u4ee3\u7801\u6e05\u535514.1\u5217\u51fa\u4e86sk_buff\u7ed3\u6784\u4f53\u4e2d\u7684\u51e0\u4e2a\u5173\u952e\u6570\u636e\u6210\u5458\u4ee5\u53ca\u63cf\u8ff0\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.1\u3000sk_buff\u7ed3\u6784\u4f53\u4e2d\u7684\u51e0\u4e2a\u5173\u952e\u6570\u636e\u6210\u5458\u4ee5\u53ca\u63cf\u8ff0\\r\\n\\r\\n```\\r\\n 1/**\\r\\n 2 *      struct sk_buff - socket buffer\\r\\n 3 *      @next: Next buffer in list\\r\\n 4 *      @prev: Previous buffer in list\\r\\n 5 *      @len: Length of actual data\\r\\n 6 *      @data_len: Data length\\r\\n 7 *      @mac_len: Length of link layer header\\r\\n 8 *      @hdr_len: writable header length of cloned skb\\r\\n 9 *      @csum: Checksum (must include start/offset pair)\\r\\n10 *      @csum_start: Offset from skb->head where checksumming should start\\r\\n11 *      @csum_offset: Offset from csum_start where checksum should be stored\\r\\n12 *      @priority: Packet queueing priority\\r\\n13 *      @protocol: Packet protocol from driver\\r\\n14 *      @inner_protocol: Protocol (encapsulation)\\r\\n15 *      @inner_transport_header: Inner transport layer header (encapsulation)\\r\\n16 *      @inner_network_header: Network layer header (encapsulation)\\r\\n17 *      @inner_mac_header: Link layer header (encapsulation)\\r\\n18 *      @transport_header: Transport layer header\\r\\n19 *      @network_header: Network layer header\\r\\n20 *      @mac_header: Link layer header\\r\\n21 *      @tail: Tail pointer\\r\\n22 *      @end: End pointer\\r\\n23 *      @head: Head of buffer\\r\\n24 *      @data: Data head pointer\\r\\n25 */\\r\\n26\\r\\n27struct sk_buff {\\r\\n28        /* These two members must be first. */\\r\\n29        struct sk_buff          *next;\\r\\n30        struct sk_buff          *prev;\\r\\n31\\r\\n32        ...\\r\\n33        unsigned int            len,\\r\\n34                                data_len;\\r\\n35        __u16                   mac_len,\\r\\n36                                hdr_len;\\r\\n37        ...\\r\\n38        __u32                   priority;\\r\\n39        ...\\r\\n40        __be16                  protocol;\\r\\n41\\r\\n42        ...\\r\\n43\\r\\n44        __be16                  inner_protocol;\\r\\n45        __u16                   inner_transport_header;\\r\\n46        __u16                   inner_network_header;\\r\\n47        __u16                   inner_mac_header;\\r\\n48        __u16                   transport_header;\\r\\n49        __u16                   network_header;\\r\\n50        __u16                   mac_header;\\r\\n51        /* These elements must be at the end, see alloc_skb() for details.  */\\r\\n52        sk_buff_data_t          tail;\\r\\n53        sk_buff_data_t          end;\\r\\n54        unsigned char           *head,\\r\\n55                                *data;\\r\\n56        ...\\r\\n57};\\r\\n```\\r\\n\\r\\n\u5982\u56fe14.1\u6240\u793a\uff0c\u5c24\u5176\u503c\u5f97\u6ce8\u610f\u7684\u662fhead\u548cend\u6307\u5411\u7f13\u51b2\u533a\u7684\u5934\u90e8\u548c\u5c3e\u90e8\uff0c\u800cdata\u548ctail\u6307\u5411\u5b9e\u9645\u6570\u636e\u7684\u5934\u90e8\u548c\u5c3e\u90e8\u3002\u6bcf\u4e00\u5c42\u4f1a\u5728head\u548cdata\u4e4b\u95f4\u586b\u5145\u534f\u8bae\u5934\uff0c\u6216\u8005\u5728tail\u548cend\u4e4b\u95f4\u6dfb\u52a0\u65b0\u7684\u534f\u8bae\u6570\u636e\u3002\\r\\n\\r\\n![1744814702888](./figure/1744814702888.png)\\r\\n\\r\\n\u56fe14.2\u3000sk_buff\u7684head\u3001data\u3001tail\u3001end\u6307\u9488\\r\\n\\r\\n\u4e0b\u9762\u6211\u4eec\u6765\u5206\u6790\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u6d89\u53ca\u7684\u64cd\u4f5c\u51fd\u6570\uff0cLinux\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u652f\u6301\u5206\u914d\u3001\u91ca\u653e\u3001\u53d8\u66f4\u7b49\u529f\u80fd\u51fd\u6570\u3002\\r\\n\\r\\n\uff081\uff09\u5206\u914d\\r\\n\\r\\nLinux\u5185\u6838\u4e2d\u7528\u4e8e\u5206\u914d\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u7684\u51fd\u6570\u6709\uff1a\\r\\n\\r\\n```\\r\\nstruct sk_buff *alloc_skb(unsigned int len, gfp_t priority);\\r\\nstruct sk_buff *dev_alloc_skb(unsigned int len);\\r\\n```\\r\\n\\r\\nalloc_skb\uff08\uff09\u51fd\u6570\u5206\u914d\u4e00\u4e2a\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u548c\u4e00\u4e2a\u6570\u636e\u7f13\u51b2\u533a\uff0c\u53c2\u6570len\u4e3a\u6570\u636e\u7f13\u51b2\u533a\u7684\u7a7a\u95f4\u5927\u5c0f\uff0c\u901a\u5e38\u4ee5L1_CACHE_BYTES\u5b57\u8282\uff08\u5bf9\u4e8eARM\u4e3a32\uff09\u5bf9\u9f50\uff0c\u53c2\u6570priority\u4e3a\u5185\u5b58\u5206\u914d\u7684\u4f18\u5148\u7ea7\u3002dev_alloc_skb\uff08\uff09\u51fd\u6570\u4ee5GFP_ATOMIC\u4f18\u5148\u7ea7\u8fdb\u884cskb\u7684\u5206\u914d\uff0c\u539f\u56e0\u662f\u8be5\u51fd\u6570\u7ecf\u5e38\u5728\u8bbe\u5907\u9a71\u52a8\u7684\u63a5\u6536\u4e2d\u65ad\u91cc\u88ab\u8c03\u7528\\r\\n\\r\\n\uff082\uff09\u91ca\u653e\\r\\n\\r\\nLinux\u5185\u6838\u4e2d\u7528\u4e8e\u91ca\u653e\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u7684\u51fd\u6570\u6709\uff1a\\r\\n\\r\\n```\\r\\nvoid kfree_skb(struct sk_buff *skb);\\r\\nvoid dev_kfree_skb(struct sk_buff *skb);\\r\\nvoid dev_kfree_skb_irq(struct sk_buff *skb);\\r\\nvoid dev_kfree_skb_any(struct sk_buff *skb);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u7528\u4e8e\u91ca\u653e\u88aballoc_skb\uff08\uff09\u51fd\u6570\u5206\u914d\u7684\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u548c\u6570\u636e\u7f13\u51b2\u533a\u3002\\r\\n\\r\\nLinux\u5185\u6838\u5185\u90e8\u4f7f\u7528kree_skb\uff08\uff09\u51fd\u6570\uff0c\u800c\u5728\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u5219\u6700\u597d\u7528dev_kfree_skb\uff08\uff09\u3001dev_kfree_skb_irq\uff08\uff09\u6216dev_kfree_skb_any\uff08\uff09\u51fd\u6570\u8fdb\u884c\u5957\u63a5\u5b57\u7f13\u51b2\u533a\u7684\u91ca\u653e\u3002\u5176\u4e2d\uff0cdev_kfree_skb\uff08\uff09\u51fd\u6570\u7528\u4e8e\u975e\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0cdev_kfree_skb_irq\uff08\uff09\u51fd\u6570\u7528\u4e8e\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u800cdev_kfree_skb_any\uff08\uff09\u51fd\u6570\u5728\u4e2d\u65ad\u548c\u975e\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u7686\u53ef\u91c7\u7528\uff0c\u5b83\u5176\u5b9e\u662f\u505a\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u4e0a\u4e0b\u6587\u5224\u65ad\uff0c\u7136\u540e\u518d\u8c03\u7528__dev_kfree_skb_irq\uff08\uff09\u6216\u8005dev_kfree_skb\uff08\uff09\uff0c\u8fd9\u4ece\u5176\u4ee3\u7801\u7684\u5b9e\u73b0\u4e2d\u4e5f\u53ef\u4ee5\u770b\u51fa\uff1a\\r\\n\\r\\n```\\r\\nvoid __dev_kfree_skb_any(struct sk_buff *skb, enum skb_free_reason reason)\\r\\n{\\r\\n        if (in_irq() || irqs_disabled())\\r\\n                __dev_kfree_skb_irq(skb, reason);\\r\\n        else\\r\\n                dev_kfree_skb(skb);\\r\\n}\\r\\n```\\r\\n\\r\\n\uff083\uff09\u53d8\u66f4\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\u53ef\u4ee5\u7528\u5982\u4e0b\u51fd\u6570\u5728\u7f13\u51b2\u533a\u5c3e\u90e8\u589e\u52a0\u6570\u636e\uff1a\\r\\n\\r\\n```\\r\\nunsigned char *skb_put(struct sk_buff *skb, unsigned int len);\\r\\n```\\r\\n\\r\\n\u5b83\u4f1a\u5bfc\u81f4skb->tail\u540e\u79fblen\uff08skb->tail+=len\uff09\uff0c\u800cskb->len\u4f1a\u589e\u52a0len\u7684\u5927\u5c0f\uff08skb->len+=len\uff09\u3002\u901a\u5e38\uff0c\u5728\u8bbe\u5907\u9a71\u52a8\u7684\u63a5\u6536\u6570\u636e\u5904\u7406\u4e2d\u4f1a\u8c03\u7528\u6b64\u51fd\u6570\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\u53ef\u4ee5\u7528\u5982\u4e0b\u51fd\u6570\u5728\u7f13\u51b2\u533a\u5f00\u5934\u589e\u52a0\u6570\u636e\uff1a\\r\\n\\r\\n```\\r\\nunsigned char *skb_push(struct sk_buff *skb, unsigned int len);\\r\\n```\\r\\n\\r\\n\u5b83\u4f1a\u5bfc\u81f4skb->data\u524d\u79fblen\uff08skb->data-=len\uff09\uff0c\u800cskb->len\u4f1a\u589e\u52a0len\u7684\u5927\u5c0f\uff08skb->len+=len\uff09\u3002\u4e0e\u8be5\u51fd\u6570\u7684\u529f\u80fd\u5b8c\u6210\u76f8\u53cd\u7684\u51fd\u6570\u662fskb_pull\uff08\uff09\uff0c\u5b83\u53ef\u4ee5\u5728\u7f13\u51b2\u533a\u5f00\u5934\u79fb\u9664\u6570\u636e\uff0c\u6267\u884c\u7684\u52a8\u4f5c\u662fskb->len-=len\u3001skb->data+=len\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u4e00\u4e2a\u7a7a\u7684\u7f13\u51b2\u533a\u800c\u8a00\uff0c\u8c03\u7528\u5982\u4e0b\u51fd\u6570\u53ef\u4ee5\u8c03\u6574\u7f13\u51b2\u533a\u7684\u5934\u90e8\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void skb_reserve(struct sk_buff *skb, int len);\\r\\n```\\r\\n\\r\\n\u5b83\u4f1a\u5c06skb->data\u548cskb->tail\u540c\u65f6\u540e\u79fblen\uff0c\u6267\u884cskb->data+=len\u3001skb->tail+=len\u3002\u5185\u6838\u91cc\u5b58\u5728\u8bb8\u591a\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nskb=alloc_skb(len+headspace, GFP_KERNEL);\\r\\nskb_reserve(skb, headspace);\\r\\nskb_put(skb,len);\\r\\nmemcpy_fromfs(skb->data,data,len);\\r\\npass_to_m_protocol(skb);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u5148\u5206\u914d\u4e00\u4e2a\u5168\u65b0\u7684sk_buff\uff0c\u63a5\u7740\u8c03\u7528skb_reserve\uff08\uff09\u817e\u51fa\u5934\u90e8\u7a7a\u95f4\uff0c\u4e4b\u540e\u8c03\u7528skb_put\uff08\uff09\u817e\u51fa\u6570\u636e\u7a7a\u95f4\uff0c\u7136\u540e\u628a\u6570\u636e\u590d\u5236\u8fdb\u6765\uff0c\u6700\u540e\u628ask_buff\u4f20\u7ed9\u534f\u8bae\u6808\u3002\\r\\n\\r\\n# 14.1.2\u3000\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\\r\\n\\r\\n\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4e3a\u5343\u53d8\u4e07\u5316\u7684\u7f51\u7edc\u8bbe\u5907\u5b9a\u4e49\u7edf\u4e00\u3001\u62bd\u8c61\u7684\u6570\u636e\u7ed3\u6784net_device\u7ed3\u6784\u4f53\uff0c\u4ee5\u4e0d\u53d8\u5e94\u4e07\u53d8\uff0c\u5b9e\u73b0\u591a\u79cd\u786c\u4ef6\u5728\u8f6f\u4ef6\u5c42\u6b21\u4e0a\u7684\u7edf\u4e00\u3002\\r\\n\\r\\nnet_device\u7ed3\u6784\u4f53\u5728\u5185\u6838\u4e2d\u6307\u4ee3\u4e00\u4e2a\u7f51\u7edc\u8bbe\u5907\uff0c\u5b83\u5b9a\u4e49\u4e8einclude/linux/netdevice.h\u6587\u4ef6\u4e2d\uff0c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u53ea\u9700\u901a\u8fc7\u586b\u5145net_device\u7684\u5177\u4f53\u6210\u5458\u5e76\u6ce8\u518cnet_device\u5373\u53ef\u5b9e\u73b0\u786c\u4ef6\u64cd\u4f5c\u51fd\u6570\u4e0e\u5185\u6838\u7684\u6302\u63a5\u3002\\r\\n\\r\\nnet_device\u662f\u4e00\u4e2a\u5de8\u5927\u7684\u7ed3\u6784\u4f53\uff0c\u5b9a\u4e49\u4e8einclude/linux/netdevice.h\u4e2d\uff0c\u5305\u542b\u7f51\u7edc\u8bbe\u5907\u7684\u5c5e\u6027\u63cf\u8ff0\u548c\u64cd\u4f5c\u63a5\u53e3\uff0c\u4e0b\u9762\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e00\u4e9b\u5173\u952e\u6210\u5458\u3002\\r\\n\\r\\n\uff081\uff09\u5168\u5c40\u4fe1\u606f\\r\\n\\r\\n```\\r\\nchar name[IFNAMESIZ];\\r\\n```\\r\\n\\r\\nname\u662f\u7f51\u7edc\u8bbe\u5907\u7684\u540d\u79f0\u3002\\r\\n\\r\\n\uff082\uff09\u786c\u4ef6\u4fe1\u606f\\r\\n\\r\\n```\\r\\nunsigned long mem_end;\\r\\nunsigned long mem_start;\\r\\n```\\r\\n\\r\\nmem_start\u548cmem_end\u5206\u522b\u5b9a\u4e49\u4e86\u8bbe\u5907\u6240\u4f7f\u7528\u7684\u5171\u4eab\u5185\u5b58\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u5730\u5740\u3002\\r\\n\\r\\n```\\r\\nunsigned long base_addr;\\r\\nunsigned char irq;\\r\\nunsigned char if_port;\\r\\nunsigned char dma;\\r\\n```\\r\\n\\r\\nbase_addr\u4e3a\u7f51\u7edc\u8bbe\u5907I/O\u57fa\u5730\u5740\u3002\\r\\n\\r\\nirq\u4e3a\u8bbe\u5907\u4f7f\u7528\u7684\u4e2d\u65ad\u53f7\u3002\\r\\n\\r\\nif_port\u6307\u5b9a\u591a\u7aef\u53e3\u8bbe\u5907\u4f7f\u7528\u54ea\u4e00\u4e2a\u7aef\u53e3\uff0c\u8be5\u5b57\u6bb5\u4ec5\u9488\u5bf9\u591a\u7aef\u53e3\u8bbe\u5907\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8bbe\u5907\u540c\u65f6\u652f\u6301IF_PORT_10BASE2\uff08\u540c\u8f74\u7535\u7f06\uff09\u548cIF_PORT_10BASET\uff08\u53cc\u7ede\u7ebf\uff09\uff0c\u5219\u53ef\u4f7f\u7528\u8be5\u5b57\u6bb5\u3002\\r\\n\\r\\ndma\u6307\u5b9a\u5206\u914d\u7ed9\u8bbe\u5907\u7684DMA\u901a\u9053\u3002\\r\\n\\r\\n\uff083\uff09\u63a5\u53e3\u4fe1\u606f\\r\\n\\r\\n```\\r\\nunsigned short hard_header_len;\\r\\n```\\r\\n\\r\\nhard_header_len\u662f\u7f51\u7edc\u8bbe\u5907\u7684\u786c\u4ef6\u5934\u957f\u5ea6\uff0c\u5728\u4ee5\u592a\u7f51\u8bbe\u5907\u7684\u521d\u59cb\u5316\u51fd\u6570\u4e2d\uff0c\u8be5\u6210\u5458\u88ab\u8d4b\u4e3aETH_HLEN\uff0c\u537314\u3002\\r\\n\\r\\n```\\r\\nunsigned short type;\\r\\n```\\r\\n\\r\\ntype\u662f\u63a5\u53e3\u7684\u786c\u4ef6\u7c7b\u578b\u3002\\r\\n\\r\\n```\\r\\nunsigned mtu;\\r\\n```\\r\\n\\r\\nmtu\u6307\u6700\u5927\u4f20\u8f93\u5355\u5143\uff08MTU\uff09\u3002\\r\\n\\r\\n```\\r\\nunsigned char           *dev_addr;\\r\\n```\\r\\n\\r\\n\u7528\u4e8e\u5b58\u653e\u8bbe\u5907\u7684\u786c\u4ef6\u5730\u5740\uff0c\u9a71\u52a8\u53ef\u80fd\u63d0\u4f9b\u4e86\u8bbe\u7f6eMAC\u5730\u5740\u7684\u63a5\u53e3\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7528\u6237\u8bbe\u7f6e\u7684MAC\u5730\u5740\u7b49\u5b58\u5165\u8be5\u6210\u5458\uff0c\u5982\u4ee3\u7801\u6e05\u535514.2drivers/net/ethernet/moxa/moxart_ether.c\u4e2d\u7684moxart_set_mac_address\uff08\uff09\u51fd\u6570\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.2\u3000set_mac_address\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n1static int moxart_set_mac_address(struct net_device *ndev, void *addr)\\r\\n2{\\r\\n3        struct sockaddr *address = addr;\\r\\n4\\r\\n5        if (!is_valid_ether_addr(address->sa_data))\\r\\n6                return -EADDRNOTAVAIL;\\r\\n7\\r\\n8        memcpy(ndev->dev_addr, address->sa_data, ndev->addr_len);\\r\\n9        moxart_update_mac_address(ndev);\\r\\n10\\r\\n11        return 0;\\r\\n12}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u5b8c\u6210\u4e86memcpy\uff08\uff09\u4ee5\u53ca\u6700\u7ec8\u786c\u4ef6\u4e0a\u7684MAC\u5730\u5740\u53d8\u66f4\u3002\\r\\n\\r\\n```\\r\\nunsigned short flags\uff1b\\r\\n```\\r\\n\\r\\nflags\u6307\u7f51\u7edc\u63a5\u53e3\u6807\u5fd7\uff0c\u4ee5IFF_\uff08Interface Flags\uff09\u5f00\u5934\uff0c\u90e8\u5206\u6807\u5fd7\u7531\u5185\u6838\u6765\u7ba1\u7406\uff0c\u5176\u4ed6\u7684\u5728\u63a5\u53e3\u521d\u59cb\u5316\u65f6\u88ab\u8bbe\u7f6e\u4ee5\u8bf4\u660e\u8bbe\u5907\u63a5\u53e3\u7684\u80fd\u529b\u548c\u7279\u6027\u3002\u63a5\u53e3\u6807\u5fd7\u5305\u62ecIFF_UP\uff08\u5f53\u8bbe\u5907\u88ab\u6fc0\u6d3b\u5e76\u53ef\u4ee5\u5f00\u59cb\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0c\u5185\u6838\u8bbe\u7f6e\u8be5\u6807\u5fd7\uff09\u3001IFF_AUTOMEDIA\uff08\u8bbe\u5907\u53ef\u5728\u591a\u79cd\u5a92\u4ecb\u95f4\u5207\u6362\uff09\u3001IFF_BROADCAST\uff08\u5141\u8bb8\u5e7f\u64ad\uff09\u3001IFF_DEBUG\uff08\u8c03\u8bd5\u6a21\u5f0f\uff0c\u53ef\u7528\u4e8e\u63a7\u5236printk\u8c03\u7528\u7684\u8be6\u7ec6\u7a0b\u5ea6\uff09\u3001IFF_LOOPBACK\uff08\u56de\u73af\uff09\u3001IFF_MULTICAST\uff08\u5141\u8bb8\u7ec4\u64ad\uff09\u3001IFF_NOARP\uff08\u63a5\u53e3\u4e0d\u80fd\u6267\u884cARP\uff09\u548cIFF_POINTOPOINT\uff08\u63a5\u53e3\u8fde\u63a5\u5230\u70b9\u5230\u70b9\u94fe\u8def\uff09\u7b49\u3002\\r\\n\\r\\n\uff084\uff09\u8bbe\u5907\u64cd\u4f5c\u51fd\u6570\\r\\n\\r\\n```\\r\\nconst struct net_device_ops *netdev_ops;\\r\\n```\\r\\n\\r\\n\u8be5\u7ed3\u6784\u4f53\u662f\u7f51\u7edc\u8bbe\u5907\u7684\u4e00\u7cfb\u5217\u786c\u4ef6\u64cd\u4f5c\u884c\u6570\u7684\u96c6\u5408\uff0c\u5b83\u4e5f\u5b9a\u4e49\u4e8einclude/linux/netdevice.h\u4e2d\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5f88\u5927\uff0c\u4ee3\u7801\u6e05\u535514.3\u5217\u51fa\u4e86\u5176\u4e2d\u7684\u4e00\u4e9b\u57fa\u7840\u90e8\u5206\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.3\u3000net_device_ops\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct net_device_ops {\\r\\n 2        int             (*ndo_init)(struct net_device *dev);\\r\\n 3        void            (*ndo_uninit)(struct net_device *dev);\\r\\n 4        int             (*ndo_open)(struct net_device *dev);\\r\\n 5        int             (*ndo_stop)(struct net_device *dev);\\r\\n 6        netdev_tx_t     (*ndo_start_xmit) (struct sk_buff *skb,\\r\\n 7                                           struct net_device *dev);\\r\\n 8        u16             (*ndo_select_queue)(struct net_device *dev,\\r\\n 9                                            struct sk_buff *skb,\\r\\n10                                            void *accel_priv,\\r\\n11                                            select_queue_fallback_t fallback);\\r\\n12        void            (*ndo_change_rx_flags)(struct net_device *dev,\\r\\n13                                               int flags);\\r\\n14        void            (*ndo_set_rx_mode)(struct net_device *dev);\\r\\n15        int             (*ndo_set_mac_address)(struct net_device *dev,\\r\\n16                                               void *addr);\\r\\n17        int             (*ndo_validate_addr)(struct net_device *dev);\\r\\n18        int             (*ndo_do_ioctl)(struct net_device *dev,\\r\\n19                                        struct ifreq *ifr, int cmd);\\r\\n20        ...\\r\\n21};\\r\\n```\\r\\n\\r\\nndo_open\uff08\uff09\u51fd\u6570\u7684\u4f5c\u7528\u662f\u6253\u5f00\u7f51\u7edc\u63a5\u53e3\u8bbe\u5907\uff0c\u83b7\u5f97\u8bbe\u5907\u9700\u8981\u7684I/O\u5730\u5740\u3001IRQ\u3001DMA\u901a\u9053\u7b49\u3002stop\uff08\uff09\u51fd\u6570\u7684\u4f5c\u7528\u662f\u505c\u6b62\u7f51\u7edc\u63a5\u53e3\u8bbe\u5907\uff0c\u4e0eopen\uff08\uff09\u51fd\u6570\u7684\u4f5c\u7528\u76f8\u53cd\u3002\\r\\n\\r\\n```\\r\\nint  (*ndo_start_xmit) (struct sk_buff *skb,struct net_device *dev);\\r\\n```\\r\\n\\r\\nndo_start_xmit\uff08\uff09\u51fd\u6570\u4f1a\u542f\u52a8\u6570\u636e\u5305\u7684\u53d1\u9001\uff0c\u5f53\u7cfb\u7edf\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u7684xmit\u51fd\u6570\u65f6\uff0c\u9700\u8981\u5411\u5176\u4f20\u5165\u4e00\u4e2ask_buff\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u4ee5\u4f7f\u5f97\u9a71\u52a8\u7a0b\u5e8f\u80fd\u83b7\u53d6\u4ece\u4e0a\u5c42\u4f20\u9012\u4e0b\u6765\u7684\u6570\u636e\u5305\u3002\\r\\n\\r\\n```\\r\\nvoid (*ndo_tx_timeout)(struct net_device *dev);\\r\\n```\\r\\n\\r\\n\u5f53\u6570\u636e\u5305\u7684\u53d1\u9001\u8d85\u65f6\u65f6\uff0cndo_tx_timeout\uff08\uff09\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u8be5\u51fd\u6570\u9700\u91c7\u53d6\u91cd\u65b0\u542f\u52a8\u6570\u636e\u5305\u53d1\u9001\u8fc7\u7a0b\u6216\u91cd\u65b0\u542f\u52a8\u786c\u4ef6\u7b49\u63aa\u65bd\u6765\u6062\u590d\u7f51\u7edc\u8bbe\u5907\u5230\u6b63\u5e38\u72b6\u6001\u3002\\r\\n\\r\\n```\\r\\nstruct net_device_stats* (*ndo_get_stats)(struct net_device *dev);\\r\\n```\\r\\n\\r\\nndo_get_stats\uff08\uff09\u51fd\u6570\u7528\u4e8e\u83b7\u5f97\u7f51\u7edc\u8bbe\u5907\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2anet_device_stats\u7ed3\u6784\u4f53\u6307\u9488\u3002net_device_stats\u7ed3\u6784\u4f53\u4fdd\u5b58\u4e86\u8be6\u7ec6\u7684\u7f51\u7edc\u8bbe\u5907\u6d41\u91cf\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u53d1\u9001\u548c\u63a5\u6536\u7684\u6570\u636e\u5305\u6570\u3001\u5b57\u8282\u6570\u7b49\uff0c\u8be6\u89c114.8\u8282\u3002\\r\\n\\r\\n```\\r\\nint (*ndo_do_ioctl)(struct net_device *dev, struct ifreq *ifr, int cmd);\\r\\nint (*ndo_set_config)(struct net_device *dev, struct ifmap *map);\\r\\nint (*ndo_set_mac_address)(struct net_device *dev, void *addr);\\r\\n```\\r\\n\\r\\nndo_do_ioctl\uff08\uff09\u51fd\u6570\u7528\u4e8e\u8fdb\u884c\u8bbe\u5907\u7279\u5b9a\u7684I/O\u63a7\u5236\u3002\\r\\n\\r\\nndo_set_config\uff08\uff09\u51fd\u6570\u7528\u4e8e\u914d\u7f6e\u63a5\u53e3\uff0c\u4e5f\u53ef\u7528\u4e8e\u6539\u53d8\u8bbe\u5907\u7684I/O\u5730\u5740\u548c\u4e2d\u65ad\u53f7\u3002\\r\\n\\r\\nndo_set_mac_address\uff08\uff09\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u8bbe\u5907\u7684MAC\u5730\u5740\u3002\\r\\n\\r\\n\u9664\u4e86netdev_ops\u4ee5\u5916\uff0c\u5728net_device\u4e2d\u8fd8\u5b58\u5728\u7c7b\u4f3c\u4e8eethtool_ops\u3001header_ops\u8fd9\u6837\u7684\u64cd\u4f5c\u96c6\uff1a\\r\\n\\r\\n```\\r\\nconst struct ethtool_ops *ethtool_ops;\\r\\nconst struct header_ops *header_ops;\\r\\n```\\r\\n\\r\\nethtool_ops\u6210\u5458\u51fd\u6570\u4e0e\u7528\u6237\u7a7a\u95f4ethtool\u5de5\u5177\u7684\u5404\u4e2a\u547d\u4ee4\u9009\u9879\u5bf9\u5e94\uff0cethtool\u63d0\u4f9b\u4e86\u7f51\u5361\u53ca\u7f51\u5361\u9a71\u52a8\u7ba1\u7406\u80fd\u529b\uff0c\u80fd\u591f\u4e3aLinux\u7f51\u7edc\u5f00\u53d1\u4eba\u5458\u548c\u7ba1\u7406\u4eba\u5458\u63d0\u4f9b\u5bf9\u7f51\u5361\u786c\u4ef6\u3001\u9a71\u52a8\u7a0b\u5e8f\u548c\u7f51\u7edc\u534f\u8bae\u6808\u7684\u8bbe\u7f6e\u3001\u67e5\u770b\u4ee5\u53ca\u8c03\u8bd5\u7b49\u529f\u80fd\u3002\\r\\n\\r\\nheader_ops\u5bf9\u5e94\u4e8e\u786c\u4ef6\u5934\u90e8\u64cd\u4f5c\uff0c\u4e3b\u8981\u662f\u5b8c\u6210\u521b\u5efa\u786c\u4ef6\u5934\u90e8\u548c\u4ece\u7ed9\u5b9a\u7684sk_buff\u5206\u6790\u51fa\u786c\u4ef6\u5934\u90e8\u7b49\u64cd\u4f5c\u3002\\r\\n\\r\\n\uff085\uff09\u8f85\u52a9\u6210\u5458\\r\\n\\r\\n```\\r\\nunsigned long trans_start;\\r\\nunsigned long last_rx;\\r\\n```\\r\\n\\r\\ntrans_start\u8bb0\u5f55\u6700\u540e\u7684\u6570\u636e\u5305\u5f00\u59cb\u53d1\u9001\u65f6\u7684\u65f6\u95f4\u6233\uff0clast_rx\u8bb0\u5f55\u6700\u540e\u4e00\u6b21\u63a5\u6536\u5230\u6570\u636e\u5305\u65f6\u7684\u65f6\u95f4\u6233\uff0c\u8fd9\u4e24\u4e2a\u65f6\u95f4\u6233\u8bb0\u5f55\u7684\u90fd\u662fjiffies\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5e94\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u6210\u5458\u3002\\r\\n\\r\\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4ee5\u4e2d\u65ad\u65b9\u5f0f\u63a5\u6536\u6570\u636e\u5305\uff0c\u800cpoll_controller\uff08\uff09\u5219\u91c7\u7528\u7eaf\u8f6e\u8be2\u65b9\u5f0f\uff0c\u53e6\u5916\u4e00\u79cd\u6570\u636e\u63a5\u6536\u65b9\u5f0f\u662fNAPI\uff08New API\uff09\uff0c\u5176\u6570\u636e\u63a5\u6536\u6d41\u7a0b\u4e3a\u201c\u63a5\u6536\u4e2d\u65ad\u6765\u4e34\u2192\u5173\u95ed\u63a5\u6536\u4e2d\u65ad\u2192\u4ee5\u8f6e\u8be2\u65b9\u5f0f\u63a5\u6536\u6240\u6709\u6570\u636e\u5305\u76f4\u5230\u6536\u7a7a\u2192\u5f00\u542f\u63a5\u6536\u4e2d\u65ad\u2192\u63a5\u6536\u4e2d\u65ad\u6765\u4e34\u2026\u2026\u201d\u5185\u6838\u4e2d\u63d0\u4f9b\u4e86\u5982\u4e0b\u4e0eNAPI\u76f8\u5173\u7684API\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void netif_napi_add(struct net_device *dev,\\r\\n                                  struct napi_struct *napi,\\r\\n                                  int (*poll)(struct napi_struct *, int),\\r\\n                                  int weight);\\r\\nstatic inline void netif_napi_del(struct napi_struct *napi);\\r\\n```\\r\\n\\r\\n\u4ee5\u4e0a\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u7528\u4e8e\u521d\u59cb\u5316\u548c\u79fb\u9664\u4e00\u4e2aNAPI\uff0cnetif_napi_add\uff08\uff09\u7684poll\u53c2\u6570\u662fNAPI\u8981\u8c03\u5ea6\u6267\u884c\u7684\u8f6e\u8be2\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\nstatic inline void napi_enable(struct napi_struct *n);\\r\\nstatic inline void napi_disable(struct napi_struct *n);\\r\\n```\\r\\n\\r\\n\u4ee5\u4e0a\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u7528\u4e8e\u4f7f\u80fd\u548c\u7981\u6b62NAPI\u8c03\u5ea6\u3002\\r\\n\\r\\n```\\r\\nstatic inline int napi_schedule_prep(struct napi_struct *n);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7528\u4e8e\u68c0\u67e5NAPI\u662f\u5426\u53ef\u4ee5\u8c03\u5ea6\uff0c\u800cnapi_schedule\uff08\uff09\u51fd\u6570\u7528\u4e8e\u8c03\u5ea6\u8f6e\u8be2\u5b9e\u4f8b\u7684\u8fd0\u884c\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void napi_schedule(struct napi_struct *n);\\r\\n```\\r\\n\\r\\n\u5728NAPI\u5904\u7406\u5b8c\u6210\u7684\u65f6\u5019\u5e94\u8be5\u8c03\u7528\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void napi_complete(struct napi_struct *n);\\r\\n```\\r\\n\\r\\n# 14.1.3\u3000\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\\r\\n\\r\\nnet_device\u7ed3\u6784\u4f53\u7684\u6210\u5458\uff08\u5c5e\u6027\u548cnet_device_ops\u7ed3\u6784\u4f53\u4e2d\u7684\u51fd\u6570\u6307\u9488\uff09\u9700\u8981\u88ab\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u8d4b\u4e88\u5177\u4f53\u7684\u6570\u503c\u548c\u51fd\u6570\u3002\u5bf9\u4e8e\u5177\u4f53\u7684\u8bbe\u5907xxx\uff0c\u5de5\u7a0b\u5e08\u5e94\u8be5\u7f16\u5199\u76f8\u5e94\u7684\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u7684\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u5f62\u5982xxx_open\uff08\uff09\u3001xxx_stop\uff08\uff09\u3001xxx_tx\uff08\uff09\u3001xxx_hard_header\uff08\uff09\u3001xxx_get_stats\uff08\uff09\u548cxxx_tx_timeout\uff08\uff09\u7b49\u3002\\r\\n\\r\\n\u7531\u4e8e\u7f51\u7edc\u6570\u636e\u5305\u7684\u63a5\u6536\u53ef\u7531\u4e2d\u65ad\u5f15\u53d1\uff0c\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u4e2d\u7684\u53e6\u4e00\u4e2a\u4e3b\u4f53\u90e8\u5206\u5c06\u662f\u4e2d\u65ad\u5904\u7406\u51fd\u6570\uff0c\u5b83\u8d1f\u8d23\u8bfb\u53d6\u786c\u4ef6\u4e0a\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u5e76\u4f20\u9001\u7ed9\u4e0a\u5c42\u534f\u8bae\uff0c\u56e0\u6b64\u53ef\u80fd\u5305\u542bxxx_interrupt\uff08\uff09\u548cxxx_rx\uff08\uff09\u51fd\u6570\uff0c\u524d\u8005\u5b8c\u6210\u4e2d\u65ad\u7c7b\u578b\u5224\u65ad\u7b49\u57fa\u672c\u5de5\u4f5c\uff0c\u540e\u8005\u5219\u9700\u5b8c\u6210\u6570\u636e\u5305\u7684\u751f\u6210\u53ca\u5c06\u5176\u9012\u4ea4\u7ed9\u4e0a\u5c42\u7b49\u590d\u6742\u5de5\u4f5c\u3002\\r\\n\\r\\n14.2~14.8\u8282\u5c06\u5bf9\u4e0a\u8ff0\u51fd\u6570\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\u5e76\u7ed9\u51fa\u53c2\u8003\u8bbe\u8ba1\u6a21\u677f\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u7279\u5b9a\u7684\u8bbe\u5907\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u76f8\u5173\u7684\u79c1\u6709\u6570\u636e\u548c\u64cd\u4f5c\uff0c\u5e76\u5c01\u88c5\u4e3a\u4e00\u4e2a\u79c1\u6709\u4fe1\u606f\u7ed3\u6784\u4f53xxx_private\uff0c\u8ba9\u5176\u6307\u9488\u8d4b\u503c\u7ed9net_device\u7684\u79c1\u6709\u6210\u5458\u3002\u5728xxx_private\u7ed3\u6784\u4f53\u4e2d\u53ef\u5305\u542b\u8bbe\u5907\u7684\u7279\u6b8a\u5c5e\u6027\u548c\u64cd\u4f5c\u3001\u81ea\u65cb\u9501\u4e0e\u4fe1\u53f7\u91cf\u3001\u5b9a\u65f6\u5668\u4ee5\u53ca\u7edf\u8ba1\u4fe1\u606f\u7b49\uff0c\u8fd9\u90fd\u7531\u5de5\u7a0b\u5e08\u81ea\u5b9a\u4e49\u3002\u5728\u9a71\u52a8\u4e2d\uff0c\u8981\u7528\u5230\u79c1\u6709\u6570\u636e\u7684\u65f6\u5019\uff0c\u5219\u4f7f\u7528\u5728netdevice.h\u4e2d\u5b9a\u4e49\u7684\u63a5\u53e3\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void *netdev_priv(const struct net_device *dev);\\r\\n```\\r\\n\\r\\n\u6bd4\u5982\u5728\u9a71\u52a8drivers/net/ethernet/davicom/dm9000.c\u7684dm9000_probe\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u4f7f\u7528alloc_etherdev\uff08sizeof\uff08struct board_info\uff09\uff09\u5206\u914d\u7f51\u7edc\u8bbe\u5907\uff0cboard_info\u7ed3\u6784\u4f53\u5c31\u6210\u4e86\u8fd9\u4e2a\u7f51\u7edc\u8bbe\u5907\u7684\u79c1\u6709\u6570\u636e\uff0c\u5728\u5176\u4ed6\u51fd\u6570\u4e2d\u53ef\u4ee5\u7b80\u5355\u5730\u63d0\u53d6\u8fd9\u4e2a\u79c1\u6709\u6570\u636e\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nstatic int\\r\\ndm9000_start_xmit(struct sk_buff *skb, struct net_device *dev)\\r\\n{\\r\\n        unsigned long flags;\\r\\n        board_info_t *db = netdev_priv(dev);\\r\\n        ...\\r\\n}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API","description":"\u9664\u4e86\u524d\u6587\u4ecb\u7ecd\u7684ofmachineiscompatible\uff08\uff09\u3001ofdeviceiscompatible\uff08\uff09\u7b49\u5e38\u7528\u51fd\u6570\u4ee5\u5916\uff0c\u5728Linux\u7684BSP\u548c\u9a71\u52a8\u4ee3\u7801\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9bLinux\u4e2d\u5176\u4ed6\u8bbe\u5907\u6811\u7684API\uff0c\u8fd9\u4e9bAPI\u901a\u5e38\u88ab\u51a0\u4ee5of_\u524d\u7f00\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u4ee3\u7801\u4f4d\u4e8e\u5185\u6838\u7684drivers/of\u76ee\u5f55\u4e0b\u3002","date":"2025-09-15T14:44:15.113Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":5.395,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.1\u3000Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA"}},"content":"\u9664\u4e86\u524d\u6587\u4ecb\u7ecd\u7684of_machine_is_compatible\uff08\uff09\u3001of_device_is_compatible\uff08\uff09\u7b49\u5e38\u7528\u51fd\u6570\u4ee5\u5916\uff0c\u5728Linux\u7684BSP\u548c\u9a71\u52a8\u4ee3\u7801\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9bLinux\u4e2d\u5176\u4ed6\u8bbe\u5907\u6811\u7684API\uff0c\u8fd9\u4e9bAPI\u901a\u5e38\u88ab\u51a0\u4ee5of_\u524d\u7f00\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u4ee3\u7801\u4f4d\u4e8e\u5185\u6838\u7684drivers/of\u76ee\u5f55\u4e0b\u3002\\r\\n\\r\\n\u8fd9\u4e9b\u5e38\u7528\u7684API\u5305\u62ec\u4e0b\u9762\u5185\u5bb9\u3002\\r\\n\\r\\n# 1.\u5bfb\u627e\u8282\u70b9\\r\\n\\r\\n```\\r\\nstruct device_node *of_find_compatible_node(struct device_node *from,\\r\\nconst char *type, const char *compatible);\\r\\n```\\r\\n\\r\\n\u6839\u636e\u517c\u5bb9\u5c5e\u6027\uff0c\u83b7\u5f97\u8bbe\u5907\u8282\u70b9\u3002\u904d\u5386\u8bbe\u5907\u6811\u4e2d\u7684\u8bbe\u5907\u8282\u70b9\uff0c\u770b\u770b\u54ea\u4e2a\u8282\u70b9\u7684\u7c7b\u578b\u3001\u517c\u5bb9\u5c5e\u6027\u4e0e\u672c\u51fd\u6570\u7684\u8f93\u5165\u53c2\u6570\u5339\u914d\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cfrom\u3001type\u4e3aNULL\uff0c\u5219\u8868\u793a\u904d\u5386\u4e86\u6240\u6709\u8282\u70b9\u3002\\r\\n\\r\\n# 2.\u8bfb\u53d6\u5c5e\u6027\\r\\n\\r\\n```\\r\\nint of_property_read_u8_array(const struct device_node *np,\\r\\nconst char *propname, u8 *out_values, size_t sz);\\r\\nint of_property_read_u16_array(const struct device_node *np,\\r\\nconst char *propname, u16 *out_values, size_t sz);\\r\\nint of_property_read_u32_array(const struct device_node *np,\\r\\nconst char *propname, u32 *out_values, size_t sz);\\r\\nint of_property_read_u64(const struct device_node *np, const char\\r\\n*propname, u64 *out_value);\\r\\n```\\r\\n\\r\\n\u8bfb\u53d6\u8bbe\u5907\u8282\u70b9np\u7684\u5c5e\u6027\u540d\uff0c\u4e3apropname\uff0c\u5c5e\u6027\u7c7b\u578b\u4e3a8\u300116\u300132\u300164\u4f4d\u6574\u578b\u6570\u7ec4\u3002\u5bf9\u4e8e32\u4f4d\u5904\u7406\u5668\u6765\u8bb2\uff0c\u6700\u5e38\u7528\u7684\u662fof_property_read_u32_array\uff08\uff09\u3002\\r\\n\\r\\n\u5982\u5728arch/arm/mm/cache-l2x0.c\u4e2d\uff0c\u901a\u8fc7\u5982\u4e0b\u8bed\u53e5\u53ef\u8bfb\u53d6L2cache\u7684\\"arm\uff0cdata-latency\\"\u5c5e\u6027\uff1a\\r\\n\\r\\n```\\r\\nof_property_read_u32_array(np, \\"arm,data-latency\\",\\r\\ndata, ARRAY_SIZE(data));\\r\\n```\\r\\n\\r\\n\u5728arch/arm/boot/dts/vexpress-v2p-ca9.dts\u4e2d\uff0c\u5bf9\u5e94\u7684\u542b\u6709\\"arm\uff0cdata-latency\\"\u5c5e\u6027\u7684L2cache\u8282\u70b9\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nL2: cache-controller@1e00a000 {\\r\\ncompatible = \\"arm,pl310-cache\\";\\r\\nreg = <0x1e00a000 0x1000>;\\r\\ninterrupts = <0 43 4>;\\r\\ncache-level = <2>;\\r\\narm,data-latency = <1 1 1>;\\r\\narm,tag-latency = <1 1 1>;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6574\u578b\u5c5e\u6027\u7684\u957f\u5ea6\u53ef\u80fd\u4e3a1\uff0c\u4e8e\u662f\u5185\u6838\u4e3a\u4e86\u65b9\u4fbf\u8c03\u7528\u8005\uff0c\u53c8\u5728\u4e0a\u8ff0API\u7684\u57fa\u7840\u4e0a\u5c01\u88c5\u51fa\u4e86\u66f4\u52a0\u7b80\u5355\u7684\u8bfb\u5355\u4e00\u6574\u5f62\u5c5e\u6027\u7684API\uff0c\u5b83\u4eec\u4e3aint of_property_read_u8\uff08\uff09\u3001of_property_read_u16\uff08\uff09\u7b49\uff0c\u5b9e\u73b0\u4e8einclude/linux/of.h\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535518.19\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.19\u3000\u8bbe\u5907\u6811\u4e2d\u6574\u578b\u5c5e\u6027\u7684\u8bfb\u53d6API\\r\\n\\r\\n```\\r\\n 1static inline int of_property_read_u8(const struct device_node *np,\\r\\n 2                                        const char *propname,\\r\\n 3                                        u8 *out_value)\\r\\n 4{\\r\\n 5         return of_property_read_u8_array(np, propname, out_value, 1);\\r\\n 6}\\r\\n 7\\r\\n 8static inline int of_property_read_u16(const struct device_node *np,\\r\\n 9                                        const char *propname,\\r\\n10                                        u16 *out_value)\\r\\n11{\\r\\n12         return of_property_read_u16_array(np, propname, out_value, 1);\\r\\n13}\\r\\n14\\r\\n15static inline int of_property_read_u32(const struct device_node *np,\\r\\n16                                        const char *propname,\\r\\n17                                        u32 *out_value)\\r\\n18{\\r\\n19         return of_property_read_u32_array(np, propname, out_value, 1);\\r\\n20}\\r\\n```\\r\\n\\r\\n\u9664\u4e86\u6574\u578b\u5c5e\u6027\u5916\uff0c\u5b57\u7b26\u4e32\u5c5e\u6027\u4e5f\u6bd4\u8f83\u5e38\u7528\uff0c\u5176\u5bf9\u5e94\u7684API\u5305\u62ec\uff1a\\r\\n\\r\\n```\\r\\nint of_property_read_string(struct device_node *np, const char\\r\\n*propname,const char **out_string);\\r\\nint of_property_read_string_index(struct device_node *np, const char\\r\\n       *propname,int index, const char **output);\\r\\n```\\r\\n\\r\\n\u524d\u8005\u8bfb\u53d6\u5b57\u7b26\u4e32\u5c5e\u6027\uff0c\u540e\u8005\u8bfb\u53d6\u5b57\u7b26\u4e32\u6570\u7ec4\u5c5e\u6027\u4e2d\u7684\u7b2cindex\u4e2a\u5b57\u7b26\u4e32\u3002\u5982drivers/clk/clk.c\u4e2d\u7684of_clk_get_parent_name\uff08\uff09\u51fd\u6570\u5c31\u901a\u8fc7of_property_read_string_index\uff08\uff09\u904d\u5386clkspec\u8282\u70b9\u7684\u6240\u6709\\"clock-output-names\\"\u5b57\u7b26\u4e32\u6570\u7ec4\u5c5e\u6027\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.20\u3000\u5728\u9a71\u52a8\u4e2d\u8bfb\u53d6\u7b2cindex\u4e2a\u5b57\u7b26\u4e32\u7684\u4f8b\u5b50\\r\\n\\r\\n```\\r\\n 1const char *of_clk_get_parent_name(struct device_node *np, int index)\\r\\n 2{\\r\\n 3          struct of_phandle_args clkspec;\\r\\n 4          const char *clk_name;\\r\\n 5          int rc;\\r\\n 6\\r\\n 7          if (index < 0)\\r\\n 8                  return NULL;\\r\\n 9\\r\\n10          rc = of_parse_phandle_with_args(np, \\"clocks\\", \\"#clock-cells\\", index,\\r\\n11                                         &clkspec);\\r\\n12          if (rc)\\r\\n13                  return NULL;\\r\\n14\\r\\n15          if (of_property_read_string_index(clkspec.np, \\"clock-output-names\\",\\r\\n16                                    clkspec.args_count  clkspec.args[0] : 0,\\r\\n17                                            &clk_name) < 0)\\r\\n18                  clk_name = clkspec.np->name;\\r\\n19\\r\\n20          of_node_put(clkspec.np);\\r\\n21          return clk_name;\\r\\n22}\\r\\n23EXPORT_SYMBOL_GPL(of_clk_get_parent_name);\\r\\n```\\r\\n\\r\\n\u9664\u6574\u578b\u3001\u5b57\u7b26\u4e32\u4ee5\u5916\u7684\u6700\u5e38\u7528\u5c5e\u6027\u7c7b\u578b\u5c31\u662f\u5e03\u5c14\u578b\uff0c\u5176\u5bf9\u5e94\u7684API\u5f88\u7b80\u5355\uff0c\u5177\u4f53\u5982\u4e0b\\r\\n\\r\\n```\\r\\nstatic inline bool of_property_read_bool(const struct device_node *np,\\r\\nconst char *propname);\\r\\n```\\r\\n\\r\\n\u5982\u679c\u8bbe\u5907\u8282\u70b9np\u542b\u6709propname\u5c5e\u6027\uff0c\u5219\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002\u4e00\u822c\u7528\u4e8e\u68c0\u67e5\u7a7a\u5c5e\u6027\u662f\u5426\u5b58\u5728\u3002\\r\\n\\r\\n# 3.\u5185\u5b58\u6620\u5c04\\r\\n\\r\\n```\\r\\nvoid __iomem *of_iomap(struct device_node *node, int index);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0API\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8bbe\u5907\u8282\u70b9\u8fdb\u884c\u8bbe\u5907\u5185\u5b58\u533a\u95f4\u7684ioremap\uff08\uff09\uff0cindex\u662f\u5185\u5b58\u6bb5\u7684\u7d22\u5f15\u3002\u82e5\u8bbe\u5907\u8282\u70b9\u7684reg\u5c5e\u6027\u6709\u591a\u6bb5\uff0c\u53ef\u901a\u8fc7index\u6807\u793a\u8981ioremap\uff08\uff09\u7684\u662f\u54ea\u4e00\u6bb5\uff0c\u5728\u53ea\u67091\u6bb5\u7684\u60c5\u51b5\uff0cindex\u4e3a0\u3002\u91c7\u7528\u8bbe\u5907\u6811\u540e\uff0c\u4e00\u4e9b\u8bbe\u5907\u9a71\u52a8\u901a\u8fc7of_iomap\uff08\uff09\u800c\u4e0d\u518d\u901a\u8fc7\u4f20\u7edf\u7684ioremap\uff08\uff09\u8fdb\u884c\u6620\u5c04\uff0c\u5f53\u7136\uff0c\u4f20\u7edf\u7684ioremap\uff08\uff09\u7684\u7528\u6237\u4e5f\u4e0d\u5c11\u3002\\r\\n\\r\\n\u4e0a\u8ff0API\u901a\u8fc7\u8bbe\u5907\u8282\u70b9\u83b7\u53d6\u4e0e\u5b83\u5bf9\u5e94\u7684\u5185\u5b58\u8d44\u6e90\u7684resource\u7ed3\u6784\u4f53\u3002\u5176\u672c\u8d28\u662f\u5206\u6790reg\u5c5e\u6027\u4ee5\u83b7\u53d6\u5185\u5b58\u57fa\u5730\u5740\u3001\u5927\u5c0f\u7b49\u4fe1\u606f\u5e76\u586b\u5145\u5230struct resource*r\u53c2\u6570\u6307\u5411\u7684\u7ed3\u6784\u4f53\u4e2d\u3002\\r\\n\\r\\n# 4.\u89e3\u6790\u4e2d\u65ad\\r\\n\\r\\n```\\r\\nunsigned int irq_of_parse_and_map(struct device_node *dev, int index);\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u8bbe\u5907\u6811\u83b7\u5f97\u8bbe\u5907\u7684\u4e2d\u65ad\u53f7\uff0c\u5b9e\u9645\u4e0a\u662f\u4ece.dts\u4e2d\u7684interrupts\u5c5e\u6027\u91cc\u89e3\u6790\u51fa\u4e2d\u65ad\u53f7\u3002\u82e5\u8bbe\u5907\u4f7f\u7528\u4e86\u591a\u4e2a\u4e2d\u65ad\uff0cindex\u6307\u5b9a\u4e2d\u65ad\u7684\u7d22\u5f15\u53f7\u3002\\r\\n\\r\\n# 5.\u83b7\u53d6\u4e0e\u8282\u70b9\u5bf9\u5e94\u7684platform_device\\r\\n\\r\\n```\\r\\nstruct platform_device *of_find_device_by_node(struct device_node *np);\\r\\n```\\r\\n\\r\\n\u5728\u53ef\u4ee5\u62ff\u5230device_node\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u60f3\u53cd\u5411\u83b7\u53d6\u5bf9\u5e94\u7684platform_device\uff0c\u53ef\u4f7f\u7528\u4e0a\u8ff0API\u3002\\r\\n\\r\\n\u5f53\u7136\uff0c\u5728\u5df2\u77e5platform_device\u7684\u60c5\u51b5\u4e0b\uff0c\u60f3\u83b7\u53d6device_node\u5219\u6613\u5982\u53cd\u638c\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nstatic int sirfsoc_dma_probe(struct platform_device *op)\\r\\n{\\r\\nstruct device_node *dn = op->dev.of_node;\\r\\n        \u2026\\r\\n}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA","description":"CPLD\uff08\u590d\u6742\u53ef\u7f16\u7a0b\u903b\u8f91\u5668\u4ef6\uff09\u7531\u5b8c\u5168\u53ef\u7f16\u7a0b\u7684\u4e0e\u6216\u95e8\u9635\u5217\u4ee5\u53ca\u5b8f\u5355\u5143\u6784\u6210\u3002","date":"2025-09-15T14:44:15.097Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":5.745,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.4\u3000\u5e38\u7528\u7684OF API"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570"}},"content":"CPLD\uff08\u590d\u6742\u53ef\u7f16\u7a0b\u903b\u8f91\u5668\u4ef6\uff09\u7531\u5b8c\u5168\u53ef\u7f16\u7a0b\u7684\u4e0e\u6216\u95e8\u9635\u5217\u4ee5\u53ca\u5b8f\u5355\u5143\u6784\u6210\u3002\\r\\n\\r\\nCPLD\u4e2d\u7684\u57fa\u672c\u903b\u8f91\u5355\u5143\u662f\u5b8f\u5355\u5143\uff0c\u5b8f\u5355\u5143\u7531\u4e00\u4e9b\u201c\u4e0e\u6216\u201d\u9635\u5217\u52a0\u4e0a\u89e6\u53d1\u5668\u6784\u6210\uff0c\u5176\u4e2d\u201c\u4e0e\u6216\u201d\u9635\u5217\u5b8c\u6210\u7ec4\u5408\u903b\u8f91\u529f\u80fd\uff0c\u89e6\u53d1\u5668\u5b8c\u6210\u65f6\u5e8f\u903b\u8f91\u529f\u80fd\u3002\u5b8f\u5355\u5143\u4e2d\u4e0e\u9635\u5217\u7684\u8f93\u51fa\u79f0\u4e3a\u4e58\u79ef\u9879\uff0c\u5176\u6570\u91cf\u6807\u793a\u7740CPLD\u7684\u5bb9\u91cf\u3002\u4e58\u79ef\u9879\u9635\u5217\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u201c\u4e0e\u6216\u201d\u9635\u5217\uff0c\u6bcf\u4e00\u4e2a\u4ea4\u53c9\u70b9\u90fd\u662f\u4e00\u4e2a\u53ef\u7f16\u7a0b\u7194\u4e1d\uff0c\u5982\u679c\u5bfc\u901a\u5c31\u662f\u5b9e\u73b0\u201c\u4e0e\u201d\u903b\u8f91\u3002\u5728\u201c\u4e0e\u201d\u9635\u5217\u540e\u4e00\u822c\u8fd8\u6709\u4e00\u4e2a\u201c\u6216\u201d\u9635\u5217\uff0c\u7528\u4ee5\u5b8c\u6210\u6700\u5c0f\u903b\u8f91\u8868\u8fbe\u5f0f\u4e2d\u7684\u201c\u6216\u201d\u5173\u7cfb\u3002\u56fe2.19\u6240\u793a\u4e3a\u975e\u5e38\u5178\u578b\u7684CPLD\u7684\u5355\u4e2a\u5b8f\u5355\u5143\u7ed3\u6784\\r\\n\\r\\n\u56fe2.20\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5178\u578bCPLD\u7684\u6574\u4f53\u7ed3\u6784\u3002\u8fd9\u4e2aCPLD\u7531LAB\uff08\u903b\u8f91\u9635\u5217\u6a21\u5757\uff0c\u7531\u591a\u4e2a\u5b8f\u5355\u5143\u7ec4\u6210\uff09\u901a\u8fc7PIA\uff08\u53ef\u7f16\u7a0b\u4e92\u8fde\u9635\u5217\uff09\u4e92\u8fde\u7ec4\u6210\uff0c\u800cCPLD\u4e0e\u5916\u90e8\u7684\u63a5\u53e3\u5219\u7531I/O\u63a7\u5236\u6a21\u5757\u63d0\u4f9b\u3002\\r\\n\\r\\n![image-20250323211447557](./figure/image-20250323211447557.png)\\r\\n\\r\\n\u56fe2.19\u3000\u5178\u578b\u7684CPLD\u7684\u5355\u4e2a\u5b8f\u5355\u5143\u7ed3\u6784\\r\\n\\r\\n![1742735704639](./figure/1742735704639.png)\\r\\n\\r\\n\u56fe2.20\u3000\u5178\u578b\u7684CPLD\u6574\u4f53\u67b6\u6784\\r\\n\\r\\n\u56fe2.20\u4e2d\u5b8f\u5355\u5143\u7684\u8f93\u51fa\u4f1a\u7ecfI/O\u63a7\u5236\u5757\u9001\u81f3I/O\u5f15\u811a\uff0cI/O\u63a7\u5236\u5757\u63a7\u5236\u6bcf\u4e00\u4e2aI/O\u5f15\u811a\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u51b3\u5b9a\u5176\u4e3a\u8f93\u5165\u3001\u8f93\u51fa\u8fd8\u662f\u53cc\u5411\u5f15\u811a\uff0c\u5e76\u51b3\u5b9a\u5176\u4e09\u6001\u8f93\u51fa\u7684\u4f7f\u80fd\u7aef\u63a7\u5236\\r\\n\\r\\n\u4e0eCPLD\u4e0d\u540c\uff0cFPGA\uff08\u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217\uff09\u57fa\u4e8eLUT\uff08\u67e5\u627e\u8868\uff09\u5de5\u827a\u3002\u67e5\u627e\u8868\u672c\u8d28\u4e0a\u662f\u4e00\u7247RAM\uff0c\u5f53\u7528\u6237\u901a\u8fc7\u539f\u7406\u56fe\u6216HDL\uff08\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff09\u63cf\u8ff0\u4e86\u4e00\u4e2a\u903b\u8f91\u7535\u8def\u4ee5\u540e\uff0cFPGA\u5f00\u53d1\u8f6f\u4ef6\u4f1a\u81ea\u52a8\u8ba1\u7b97\u903b\u8f91\u7535\u8def\u6240\u6709\u53ef\u80fd\u7684\u7ed3\u679c\uff0c\u5e76\u628a\u7ed3\u679c\u4e8b\u5148\u5199\u5165RAM\u3002\u8fd9\u6837\uff0c\u8f93\u5165\u4e00\u7ec4\u4fe1\u53f7\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97\u5c31\u7b49\u4e8e\u8f93\u5165\u4e00\u4e2a\u5730\u5740\u8fdb\u884c\u67e5\u8868\u4ee5\u8f93\u51fa\u5bf9\u5e94\u5730\u5740\u7684\u5185\u5bb9\u3002\\r\\n\\r\\n\u56fe2.21\u6240\u793a\u4e3a\u4e00\u4e2a\u5178\u578bFPGA\u7684\u5185\u90e8\u7ed3\u6784\u3002\u8fd9\u4e2aFPGA\u7531IOC\uff08\u8f93\u5165/\u8f93\u51fa\u63a7\u5236\u6a21\u5757\uff09\u3001EAB\uff08\u5d4c\u5165\u5f0f\u9635\u5217\u5757\uff09\u3001LAB\u548c\u5feb\u901f\u901a\u9053\u4e92\u8fde\u6784\u6210\u3002\\r\\n\\r\\n![1742735769657](./figure/1742735769657.png)\\r\\n\\r\\n\u56fe2.21\u3000\u5178\u578b\u7684FPGA\u5185\u90e8\u7ed3\u6784\\r\\n\\r\\nIOC\u662f\u5185\u90e8\u4fe1\u53f7\u5230I/O\u5f15\u811a\u7684\u63a5\u53e3\uff0c\u5b83\u4f4d\u4e8e\u5feb\u901f\u901a\u9053\u7684\u884c\u548c\u5217\u7684\u672b\u7aef\uff0c\u6bcf\u4e2aIOC\u5305\u542b\u4e00\u4e2a\u53cc\u5411I/O\u7f13\u51b2\u5668\u548c\u4e00\u4e2a\u65e2\u53ef\u4f5c\u4e3a\u8f93\u5165\u5bc4\u5b58\u5668\u4e5f\u53ef\u4f5c\u4e3a\u8f93\u51fa\u5bc4\u5b58\u5668\u7684\u89e6\u53d1\u5668\u3002\\r\\n\\r\\nEAB\uff08\u5d4c\u5165\u5f0f\u5b58\u50a8\u5757\uff09\u662f\u4e00\u79cd\u8f93\u5165\u8f93\u51fa\u7aef\u5e26\u6709\u5bc4\u5b58\u5668\u7684\u975e\u5e38\u7075\u6d3b\u7684RAM\u3002EAB\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4f5c\u5b58\u50a8\u5668\uff0c\u8fd8\u53ef\u4ee5\u4e8b\u5148\u5199\u5165\u67e5\u8868\u503c\u4ee5\u7528\u6765\u6784\u6210\u5982\u4e58\u6cd5\u5668\u3001\u7ea0\u9519\u903b\u8f91\u7b49\u7535\u8def\u3002\u5f53\u7528\u4e8eRAM\u65f6\uff0cEAB\u53ef\u914d\u5236\u62108\u4f4d\u30014\u4f4d\u30012\u4f4d\u548c1\u4f4d\u957f\u5ea6\u7684\u6570\u636e\u683c\u5f0f\u3002\\r\\n\\r\\nLAB\u4e3b\u8981\u7528\u4e8e\u903b\u8f91\u7535\u8def\u8bbe\u8ba1\uff0c\u4e00\u4e2aLAB\u5305\u62ec\u591a\u4e2aLE\uff08\u903b\u8f91\u5355\u5143\uff09\uff0c\u6bcf\u4e2aLE\u5305\u62ec\u7ec4\u5408\u903b\u8f91\u53ca\u4e00\u4e2a\u53ef\u7f16\u7a0b\u89e6\u53d1\u5668\u3002\u4e00\u7cfb\u5217LAB\u6784\u6210\u7684\u903b\u8f91\u9635\u5217\u53ef\u5b9e\u73b0\u666e\u901a\u903b\u8f91\u529f\u80fd\uff0c\u5982\u8ba1\u6570\u5668\u3001\u52a0\u6cd5\u5668\u3001\u72b6\u6001\u673a\u7b49\\r\\n\\r\\n\u5668\u4ef6\u5185\u90e8\u4fe1\u53f7\u7684\u4e92\u8fde\u548c\u5668\u4ef6\u5f15\u51fa\u7aef\u4e4b\u95f4\u7684\u4fe1\u53f7\u4e92\u8fde\u7531\u5feb\u901f\u901a\u9053\u8fde\u7ebf\u63d0\u4f9b\uff0c\u5feb\u901f\u901a\u9053\u904d\u5e03\u4e8e\u6574\u4e2aFPGA\u5668\u4ef6\u4e2d\uff0c\u662f\u4e00\u7cfb\u5217\u6c34\u5e73\u548c\u5782\u76f4\u8d70\u5411\u7684\u8fde\u7eed\u5f0f\u5e03\u7ebf\u901a\u9053\u3002\\r\\n\\r\\n\u88682.2\u6240\u793a\u4e3a\u4e00\u4e2a4\u8f93\u5165LUT\u7684\u5b9e\u9645\u903b\u8f91\u7535\u8def\u4e0eLUT\u5b9e\u73b0\u65b9\u5f0f\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\\r\\n\\r\\n\u88682.2\u3000\u5b9e\u9645\u903b\u8f91\u7535\u8def\u4e0e\u67e5\u627e\u8868\u7684\u5b9e\u73b0\\r\\n\\r\\n![1742735831146](./figure/1742735831146.png)\\r\\n\\r\\nCPLD\u548cFPGA\u7684\u4e3b\u8981\u5382\u5546\u6709Altera\u3001Xilinx\u548cLattice\u7b49\uff0c\u5b83\u4eec\u91c7\u7528\u4e13\u95e8\u7684\u5f00\u53d1\u6d41\u7a0b\uff0c\u5728\u8bbe\u8ba1\u9636\u6bb5\u4f7f\u7528HDL\uff08\u5982VHDL\u3001Verilog HDL\uff09\u7f16\u7a0b\u3002\u5b83\u4eec\u53ef\u4ee5\u5b9e\u73b0\u8bb8\u591a\u590d\u6742\u7684\u529f\u80fd\uff0c\u5982\u5b9e\u73b0UART\u3001I2 C\u7b49I/O\u63a7\u5236\u82af\u7247\u3001\u901a\u4fe1\u7b97\u6cd5\u3001\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u7b97\u6cd5\u7b49\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u76f4\u63a5\u96c6\u6210ARM\u7b49CPU\u5185\u6838\u548c\u5916\u56f4\u7535\u8def\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u9a71\u52a8\u5de5\u7a0b\u5e08\u800c\u8a00\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8fd9\u6837\u770b\u5f85CPLD\u548cFPGA\uff1a\u5982\u679c\u5b83\u5b8c\u6210\u7684\u662f\u7279\u5b9a\u7684\u63a5\u53e3\u548c\u63a7\u5236\u529f\u80fd\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u628a\u5b83\u5f53\u6210\u7531\u5f88\u591a\u903b\u8f91\u95e8\uff08\u4e0e\u3001\u975e\u3001\u6216\u3001D\u89e6\u53d1\u5668\uff09\u7ec4\u6210\u7684\u53ef\u5b8c\u6210\u4e00\u7cfb\u5217\u65f6\u5e8f\u903b\u8f91\u548c\u7ec4\u5408\u903b\u8f91\u7684ASIC\uff1b\u5982\u679c\u5b83\u5b8c\u6210\u7684\u662fCPU\u7684\u529f\u80fd\uff0c\u6211\u4eec\u5c31\u76f4\u63a5\u628a\u5b83\u5f53\u6210CPU\u3002\u9a71\u52a8\u5de5\u7a0b\u5e08\u773c\u91cc\u7684\u786c\u4ef6\u6bd4IC\u8bbe\u8ba1\u5e08\u8981\u5b8f\u89c2\u3002\\r\\n\\r\\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cXilinx\u516c\u53f8\u8fd8\u63a8\u51fa\u4e86ZYNQ\u82af\u7247\uff0c\u5185\u90e8\u540c\u65f6\u96c6\u6210\u4e86\u4e24\u4e2aCortex-A9ARM\u591a\u5904\u7406\u5668\u5b50\u7cfb\u7edf\u548c\u53ef\u7f16\u7a0b\u903b\u8f91FPGA\uff0c\u540c\u65f6\u53ef\u7f16\u7a0b\u903b\u8f91\u53ef\u7531\u7528\u6237\u914d\u7f6e\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570","description":"Linux 2.4\u5185\u6838\u4e2d\uff0c\u6a21\u5757\u81ea\u8eab\u901a\u8fc7MODINCUSECOUNT\u3001MODDECUSECOUNT\u5b8f\u6765\u7ba1\u7406\u81ea\u5df1\u88ab\u4f7f\u7528\u7684\u8ba1\u6570\u3002","date":"2025-09-15T14:44:15.093Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.215,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.4\u3000CPLD\u548cFPGA"},"nextItem":{"title":"13.7.1\u3000vmem_disk\u7684\u786c\u4ef6\u539f\u7406","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.7\u3000\u5b9e\u4f8b\uff1avmem_disk\u9a71\u52a8"}},"content":"Linux 2.4\u5185\u6838\u4e2d\uff0c\u6a21\u5757\u81ea\u8eab\u901a\u8fc7MOD_INC_USE_COUNT\u3001MOD_DEC_USE_COUNT\u5b8f\u6765\u7ba1\u7406\u81ea\u5df1\u88ab\u4f7f\u7528\u7684\u8ba1\u6570\u3002\\r\\n\\r\\nLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u63d0\u4f9b\u4e86\u6a21\u5757\u8ba1\u6570\u7ba1\u7406\u63a5\u53e3try_module_get\uff08&module\uff09\u548cmodule_put\uff08&module\uff09\uff0c\u4ece\u800c\u53d6\u4ee3Linux 2.4\u5185\u6838\u4e2d\u7684\u6a21\u5757\u4f7f\u7528\u8ba1\u6570\u7ba1\u7406\u5b8f\u3002\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570\u4e00\u822c\u4e0d\u5fc5\u7531\u6a21\u5757\u81ea\u8eab\u7ba1\u7406\uff0c\u800c\u4e14\u6a21\u5757\u8ba1\u6570\u7ba1\u7406\u8fd8\u8003\u8651\u4e86SMP\u4e0ePREEMPT\u673a\u5236\u7684\u5f71\u54cd\u3002\\r\\n\\r\\n```\\r\\nint try_module_get(struct module *module);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7528\u4e8e\u589e\u52a0\u6a21\u5757\u4f7f\u7528\u8ba1\u6570\uff1b\u82e5\u8fd4\u56de\u4e3a0\uff0c\u8868\u793a\u8c03\u7528\u5931\u8d25\uff0c\u5e0c\u671b\u4f7f\u7528\u7684\u6a21\u5757\u6ca1\u6709\u88ab\u52a0\u8f7d\u6216\u6b63\u5728\u88ab\u5378\u8f7d\u4e2d\u3002\\r\\n\\r\\n```\\r\\nvoid module_put(struct module *module);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7528\u4e8e\u51cf\u5c11\u6a21\u5757\u4f7f\u7528\u8ba1\u6570\u3002\\r\\n\\r\\ntry_module_get\uff08\uff09\u548cmodule_put\uff08\uff09\u7684\u5f15\u5165\u3001\u4f7f\u7528\u4e0eLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u4e0b\u7684\u8bbe\u5907\u6a21\u578b\u5bc6\u5207\u76f8\u5173\u3002Linux 2.6\u4ee5\u540e\u7684\u5185\u6838\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u8bbe\u5907\u5b9a\u4e49\u4e86struct module*owner\u57df\uff0c\u7528\u6765\u6307\u5411\u7ba1\u7406\u6b64\u8bbe\u5907\u7684\u6a21\u5757\u3002\u5f53\u5f00\u59cb\u4f7f\u7528\u67d0\u4e2a\u8bbe\u5907\u65f6\uff0c\u5185\u6838\u4f7f\u7528try_module_get\uff08dev->owner\uff09\u53bb\u589e\u52a0\u7ba1\u7406\u6b64\u8bbe\u5907\u7684owner\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570\uff1b\u5f53\u4e0d\u518d\u4f7f\u7528\u6b64\u8bbe\u5907\u65f6\uff0c\u5185\u6838\u4f7f\u7528module_put\uff08dev->owner\uff09\u51cf\u5c11\u5bf9\u7ba1\u7406\u6b64\u8bbe\u5907\u7684\u7ba1\u7406\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570\u3002\u8fd9\u6837\uff0c\u5f53\u8bbe\u5907\u5728\u4f7f\u7528\u65f6\uff0c\u7ba1\u7406\u6b64\u8bbe\u5907\u7684\u6a21\u5757\u5c06\u4e0d\u80fd\u88ab\u5378\u8f7d\u3002\u53ea\u6709\u5f53\u8bbe\u5907\u4e0d\u518d\u88ab\u4f7f\u7528\u65f6\uff0c\u6a21\u5757\u624d\u5141\u8bb8\u88ab\u5378\u8f7d\u3002\\r\\n\\r\\n\u5728Linux 2.6\u4ee5\u540e\u7684\u5185\u6838\u4e0b\uff0c\u5bf9\u4e8e\u8bbe\u5907\u9a71\u52a8\u800c\u8a00\uff0c\u5f88\u5c11\u9700\u8981\u4eb2\u81ea\u8c03\u7528try_module_get\uff08\uff09\u4e0emodule_put\uff08\uff09\uff0c\u56e0\u4e3a\u6b64\u65f6\u5f00\u53d1\u4eba\u5458\u6240\u5199\u7684\u9a71\u52a8\u901a\u5e38\u4e3a\u652f\u6301\u67d0\u5177\u4f53\u8bbe\u5907\u7684\u7ba1\u7406\u6a21\u5757\uff0c\u5bf9\u6b64\u8bbe\u5907owner\u6a21\u5757\u7684\u8ba1\u6570\u7ba1\u7406\u7531\u5185\u6838\u91cc\u66f4\u5e95\u5c42\u7684\u4ee3\u7801\uff08\u5982\u603b\u7ebf\u9a71\u52a8\u6216\u662f\u6b64\u7c7b\u8bbe\u5907\u5171\u7528\u7684\u6838\u5fc3\u6a21\u5757\uff09\u6765\u5b9e\u73b0\uff0c\u4ece\u800c\u7b80\u5316\u4e86\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.7\u3000\u5b9e\u4f8b\uff1avmem_disk\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.7\u3000\u5b9e\u4f8b\uff1avmem_disk\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.7\u3000\u5b9e\u4f8b\uff1avmem_disk\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.7\u3000\u5b9e\u4f8b\uff1avmem_disk\u9a71\u52a8.md","title":"13.7.1\u3000vmem_disk\u7684\u786c\u4ef6\u539f\u7406","description":"vmem_disk\u662f\u4e00\u79cd\u6a21\u62df\u78c1\u76d8\uff0c\u5176\u6570\u636e\u5b9e\u9645\u4e0a\u5b58\u50a8\u5728RAM\u4e2d\u3002\u5b83\u4f7f\u7528\u901a\u8fc7vmalloc\uff08\uff09\u5206\u914d\u51fa\u6765\u7684\u5185\u5b58\u7a7a\u95f4\u6765\u6a21\u62df\u51fa\u4e00\u4e2a\u78c1\u76d8\uff0c\u4ee5\u5757\u8bbe\u5907\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u8fd9\u7247\u5185\u5b58\u3002\u8be5\u9a71\u52a8\u662f\u5bf9\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ae0\u8282\u4e2dglobalmem\u9a71\u52a8\u7684\u5757\u65b9\u5f0f\u6539\u9020\u3002","date":"2025-09-15T14:44:15.085Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":6.93,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.8\u3000\u6a21\u5757\u7684\u4f7f\u7528\u8ba1\u6570"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8"}},"content":"vmem_disk\u662f\u4e00\u79cd\u6a21\u62df\u78c1\u76d8\uff0c\u5176\u6570\u636e\u5b9e\u9645\u4e0a\u5b58\u50a8\u5728RAM\u4e2d\u3002\u5b83\u4f7f\u7528\u901a\u8fc7vmalloc\uff08\uff09\u5206\u914d\u51fa\u6765\u7684\u5185\u5b58\u7a7a\u95f4\u6765\u6a21\u62df\u51fa\u4e00\u4e2a\u78c1\u76d8\uff0c\u4ee5\u5757\u8bbe\u5907\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u8fd9\u7247\u5185\u5b58\u3002\u8be5\u9a71\u52a8\u662f\u5bf9\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ae0\u8282\u4e2dglobalmem\u9a71\u52a8\u7684\u5757\u65b9\u5f0f\u6539\u9020\u3002\\r\\n\\r\\n\u52a0\u8f7dvmem_disk.ko\u540e\uff0c\u5728\u4f7f\u7528\u9ed8\u8ba4\u6a21\u5757\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u7cfb\u7edf\u4f1a\u589e\u52a04\u4e2a\u5757\u8bbe\u5907\u8282\u70b9\uff1a\\r\\n\\r\\n```\\r\\n# ls -l /dev/vmem_disk*\\r\\nbrw-rw---- 1 root disk 252,  0  2\u6708\\r\\n\\r\\n\\r\\n 25 14:00 /dev/vmem_diska\\r\\nbrw-rw---- 1 root disk 252, 16  2\u6708\\r\\n\\r\\n\\r\\n 25 14:00 /dev/vmem_diskb\\r\\nbrw-rw---- 1 root disk 252, 32  2\u6708\\r\\n\\r\\n\\r\\n 25 14:00 /dev/vmem_diskc\\r\\nbrw-rw---- 1 root disk 252, 48  2\u6708\\r\\n\\r\\n\\r\\n 25 14:00 /dev/vmem_diskd\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0cmkfs.ext2/dev/vmem_diska\u547d\u4ee4\u7684\u6267\u884c\u4f1a\u56de\u9988\u5982\u4e0b\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\n$ sudo mkfs.ext2  /dev/vmem_diska\\r\\nmke2fs 1.42.9 (4-Feb-2014)\\r\\nFilesystem label=\\r\\nOS type: Linux\\r\\nBlock size=1024 (log=0)\\r\\nFragment size=1024 (log=0)\\r\\nStride=0 blocks, Stripe width=0blocks\\r\\n64 inodes, 512 blocks\\r\\n25 blocks (4.88%) reserved for the super user\\r\\nFirst data block=1\\r\\nMaximum filesystem blocks=524288\\r\\n1 block group\\r\\n8192 blocks per group, 8192fragments per group\\r\\n64 inodes per group\\r\\nAllocating group tables: done\\r\\nWriting inode tables: done\\r\\nWriting superblocks and filesystem accounting information: done\\r\\n```\\r\\n\\r\\n\u5b83\u5c06/dev/vmem_diska\u683c\u5f0f\u5316\u4e3aEXT2\u6587\u4ef6\u7cfb\u7edf\u3002\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5mount\u8fd9\u4e2a\u5206\u533a\u5e76\u5728\u5176\u4e2d\u8fdb\u884c\u6587\u4ef6\u8bfb\u5199\u3002\\r\\n\\r\\n# 13.7.2\u3000vmem_disk\u9a71\u52a8\u6a21\u5757\u7684\u52a0\u8f7d\u4e0e\u5378\u8f7d\\r\\n\\r\\nvmem_disk\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u5b8c\u6210\u7684\u5de5\u4f5c\u4e0e13.3\u8282\u7ed9\u51fa\u7684\u6a21\u677f\u5b8c\u5168\u4e00\u81f4\uff0c\u5b83\u652f\u6301\u201c\u5236\u9020\u8bf7\u6c42\u201d\uff08\u5bf9\u5e94\u4e8e\u4ee3\u7801\u6e05\u535513.9\uff09\u3001\u8bf7\u6c42\u961f\u5217\uff08\u5bf9\u5e94\u4e8e\u4ee3\u7801\u6e05\u535513.10\uff09\u4e24\u79cd\u6a21\u5f0f\uff08\u8bf7\u6ce8\u610f\u5728\u8bf7\u6c42\u961f\u5217\u65b9\u9762\u53c8\u652f\u6301\u7b80\u3001\u7e41\u4e24\u79cd\u6a21\u5f0f\uff09\uff0c\u4f7f\u7528\u6a21\u5757\u53c2\u6570request_mode\u8fdb\u884c\u533a\u5206\u3002\u4ee3\u7801\u6e05\u535513.13\u7ed9\u51fa\u4e86vmem_disk\u8bbe\u5907\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.13\u3000vmem_disk\u8bbe\u5907\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static void setup_device(struct vmem_disk_dev *dev, int which)\\r\\n 2{\\r\\n 3    memset (dev, 0, sizeof (struct vmem_disk_dev));\\r\\n 4    dev->size = NSECTORS*HARDSECT_SIZE;\\r\\n 5    dev->data = vmalloc(dev->size);\\r\\n 6    if (dev->data == NULL) {\\r\\n 7        printk (KERN_NOTICE \\"vmalloc failure.\\\\n\\");\\r\\n 8        return;\\r\\n 9    }\\r\\n10    spin_lock_init(&dev->lock);\\r\\n11\\r\\n12    /*\\r\\n13     * The I/O queue, depending on whether we are using our own\\r\\n14     * make_request function or not.\\r\\n15     */\\r\\n16    switch (request_mode) {\\r\\n17    case VMEMD_NOQUEUE:\\r\\n18        dev->queue = blk_alloc_queue(GFP_KERNEL);\\r\\n19        if (dev->queue == NULL)\\r\\n20            goto out_vfree;\\r\\n21        blk_queue_make_request(dev->queue, vmem_disk_make_request);\\r\\n22        break;\\r\\n23    default:\\r\\n24        printk(KERN_NOTICE \\"Bad request mode %d, using simple\\\\n\\", request_mode);\\r\\n25    case VMEMD_QUEUE:\\r\\n26        dev->queue = blk_init_queue(vmem_disk_request, &dev->lock);\\r\\n27        if (dev->queue == NULL)\\r\\n28            goto out_vfree;\\r\\n29        break;\\r\\n30    }\\r\\n31    blk_queue_logical_block_size(dev->queue, HARDSECT_SIZE);\\r\\n32    dev->queue->queuedata = dev;\\r\\n33\\r\\n34    dev->gd = alloc_disk(VMEM_DISK_MINORS);\\r\\n35    if (!dev->gd) {\\r\\n36        printk (KERN_NOTICE \\"alloc_disk failure\\\\n\\");\\r\\n37        goto out_vfree;\\r\\n38    }\\r\\n39    dev->gd->major = vmem_disk_major;\\r\\n40    dev->gd->first_minor = which*VMEM_DISK_MINORS;\\r\\n41    dev->gd->fops = &vmem_disk_ops;\\r\\n42    dev->gd->queue = dev->queue;\\r\\n43    dev->gd->private_data = dev;\\r\\n44    snprintf (dev->gd->disk_name, 32, \\"vmem_disk%c\\", which + \'a\');\\r\\n45    set_capacity(dev->gd, NSECTORS*(HARDSECT_SIZE/KERNEL_SECTOR_SIZE));\\r\\n46    add_disk(dev->gd);\\r\\n47    return;\\r\\n48\\r\\n49out_vfree:\\r\\n50    if (dev->data)\\r\\n51        vfree(dev->data);\\r\\n52}\\r\\n53\\r\\n54\\r\\n55static int __init vmem_disk_init(void)\\r\\n56{\\r\\n57    int i;\\r\\n58\\r\\n59    vmem_disk_major = register_blkdev(vmem_disk_major, \\"vmem_disk\\");\\r\\n60    if (vmem_disk_major <= 0) {\\r\\n61        printk(KERN_WARNING \\"vmem_disk: unable to get major number\\\\n\\");\\r\\n62        return -EBUSY;\\r\\n63    }\\r\\n64\\r\\n65    devices = kmalloc(NDEVICES*sizeof (struct vmem_disk_dev), GFP_KERNEL);\\r\\n66    if (!devices)\\r\\n67        goto out_unregister;\\r\\n68    for (i = 0; i < NDEVICES; i++)\\r\\n69        setup_device(devices + i, i);\\r\\n70\\r\\n71    return 0;\\r\\n72\\r\\n73out_unregister:\\r\\n74    unregister_blkdev(vmem_disk_major, \\"sbd\\");\\r\\n75    return -ENOMEM;\\r\\n76}\\r\\n77module_init(vmem_disk_init);\\r\\n```\\r\\n\\r\\n\u6ce8\u610f\u4e0a\u8ff0\u4ee3\u7801\u7684\u7b2c16~30\u884c\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u652f\u6301\u4e24\u79cdI/O\u8bf7\u6c42\u6a21\u5f0f\uff0c\u4e00\u79cd\u662fmake_request\uff0c\u53e6\u4e00\u79cd\u662frequest_queue\u3002make_request\u7684\u7248\u672c\u76f4\u63a5\u4f7f\u7528vmem_disk_make_request\uff08\uff09\u6765\u5904\u7406bio\uff0c\u800crequest_queue\u7684\u7248\u672c\u5219\u4f7f\u7528vmem_disk_request\u6765\u5904\u7406\u8bf7\u6c42\u961f\u5217\u3002\\r\\n\\r\\n# 13.7.3\u3000vmem_disk\u8bbe\u5907\u9a71\u52a8\u7684block_device_operations\\r\\n\\r\\nvmem_disk\u63d0\u4f9bblock_device_operations\u7ed3\u6784\u4f53\u4e2d\u7684getgeo\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u4ee3\u7801\u6e05\u535513.14\u7ed9\u51fa\u4e86vmem_disk\u8bbe\u5907\u9a71\u52a8\u7684block_device_operations\u7ed3\u6784\u4f53\u5b9a\u4e49\u53ca\u5176\u6210\u5458\u51fd\u6570\u7684\u5b9e\u73b0\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.14\u3000vmem_disk\u8bbe\u5907\u9a71\u52a8\u7684block_device_operations\u7ed3\u6784\u4f53\u53ca\u6210\u5458\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int vmem_disk_getgeo(struct block_device *bdev, struct hd_geometry *geo)\\r\\n 2{\\r\\n 3    long size;\\r\\n 4    struct vmem_disk_dev *dev = bdev->bd_disk->private_data;\\r\\n 5\\r\\n 6    size = dev->size*(HARDSECT_SIZE/KERNEL_SECTOR_SIZE);\\r\\n 7    geo->cylinders = (size & ~0x3f) >> 6;\\r\\n 8    geo->heads = 4;\\r\\n 9    geo->sectors = 16;\\r\\n10    geo->start = 4;\\r\\n11\\r\\n12    return 0;\\r\\n13}\\r\\n14\\r\\n15static struct block_device_operations vmem_disk_ops = {\\r\\n16    .getgeo          = vmem_disk_getgeo,\\r\\n17};\\r\\n```\\r\\n\\r\\n# 13.7.4\u3000vmem_disk\u7684I/O\u8bf7\u6c42\u5904\u7406\\r\\n\\r\\n\u5728vmem_disk\u9a71\u52a8\u4e2d\uff0c\u901a\u8fc7\u6a21\u5757\u53c2\u6570request_mode\u7684\u65b9\u5f0f\u6765\u652f\u63013\u79cd\u4e0d\u540c\u7684\u8bf7\u6c42\u5904\u7406\u6a21\u5f0f\u4ee5\u52a0\u6df1\u8bfb\u8005\u5bf9\u5b83\u4eec\u7684\u7406\u89e3\uff0c\u4ee3\u7801\u6e05\u535513.15\u5217\u51fa\u4e86vmem_disk\u8bbe\u5907\u9a71\u52a8\u7684\u8bf7\u6c42\u5904\u7406\u4ee3\u7801\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.15\u3000vmem_disk\u8bbe\u5907\u9a71\u52a8\u7684\u8bf7\u6c42\u5904\u7406\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1/*\\r\\n 2 * Handle an I/O request.\\r\\n 3 */\\r\\n 4static void vmem_disk_transfer(struct vmem_disk_dev *dev, unsigned long sector,\\r\\n 5        unsigned long nsect, char *buffer, int write)\\r\\n 6{\\r\\n 7    unsigned long offset = sector*KERNEL_SECTOR_SIZE;\\r\\n 8    unsigned long nbytes = nsect*KERNEL_SECTOR_SIZE;\\r\\n 9\\r\\n10    if ((offset + nbytes) > dev->size) {\\r\\n11        printk (KERN_NOTICE \\"Beyond-end write (%ld %ld)\\\\n\\", offset, nbytes);\\r\\n12        return;\\r\\n13    }\\r\\n14    if (write)\\r\\n15        memcpy(dev->data + offset, buffer, nbytes);\\r\\n16    else\\r\\n17        memcpy(buffer, dev->data + offset, nbytes);\\r\\n18}\\r\\n19\\r\\n20/*\\r\\n21 * Transfer a single BIO.\\r\\n22 */\\r\\n23static int vmem_disk_xfer_bio(struct vmem_disk_dev *dev, struct bio *bio)\\r\\n24{\\r\\n25        struct bio_vec bvec;\\r\\n26        struct bvec_iter iter;\\r\\n27        sector_t sector = bio->bi_iter.bi_sector;\\r\\n28\\r\\n29    bio_for_each_segment(bvec, bio, iter) {\\r\\n30        char *buffer = __bio_kmap_atomic(bio, iter);\\r\\n31        vmem_disk_transfer(dev, sector, bio_cur_bytes(bio) >> 9,\\r\\n32            buffer, bio_data_dir(bio) == WRITE);\\r\\n33        sector += bio_cur_bytes(bio) >> 9;\\r\\n34        __bio_kunmap_atomic(buffer);\\r\\n35    }\\r\\n36    return 0;\\r\\n37}\\r\\n38\\r\\n39/*\\r\\n40 * The request_queue version.\\r\\n41 */\\r\\n42static void vmem_disk_request(struct request_queue *q)\\r\\n43{\\r\\n44    struct request *req;\\r\\n45    struct bio *bio;\\r\\n46\\r\\n47    while ((req = blk_peek_request(q)) != NULL) {\\r\\n48        struct vmem_disk_dev *dev = req->rq_disk->private_data;\\r\\n49        if (req->cmd_type != REQ_TYPE_FS) {\\r\\n50            printk (KERN_NOTICE \\"Skip non-fs request\\\\n\\");\\r\\n51            blk_start_request(req);\\r\\n52            __blk_end_request_all(req, -EIO);\\r\\n53            continue;\\r\\n54        }\\r\\n55\\r\\n56        blk_start_request(req);\\r\\n57        __rq_for_each_bio(bio, req)\\r\\n58            vmem_disk_xfer_bio(dev, bio);\\r\\n59        __blk_end_request_all(req, 0);\\r\\n60    }\\r\\n61}\\r\\n62\\r\\n63\\r\\n64/*\\r\\n65 * The direct make request version.\\r\\n66 */\\r\\n67static void vmem_disk_make_request(struct request_queue *q, struct bio *bio)\\r\\n68{\\r\\n69    struct vmem_disk_dev *dev = q->queuedata;\\r\\n70    int status;\\r\\n71\\r\\n72    status = vmem_disk_xfer_bio(dev, bio);\\r\\n73    bio_endio(bio, status);\\r\\n74}\\r\\n```\\r\\n\\r\\n\u7b2c4\u884c\u7684vmem_disk_transfer\uff08\uff09\u5b8c\u6210\u771f\u5b9e\u7684\u786c\u4ef6I/O\u64cd\u4f5c\uff08\u5bf9\u4e8e\u672c\u4f8b\u800c\u8a00\uff0c\u5c31\u662f\u4e00\u4e2amemcpy\uff09\uff0c\u7b2c23\u884c\u7684vmem_disk_xfer_bio\uff08\uff09\u51fd\u6570\u8c03\u7528\u5b83\u6765\u5b8c\u6210\u4e00\u4e2a\u4e0ebio\u5bf9\u5e94\u7684\u786c\u4ef6\u64cd\u4f5c\uff0c\u5728\u5b8c\u6210\u7684\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u7b2c29\u884c\u7684bio_for_each_segment\uff08\uff09\u5c55\u5f00\u4e86\u8be5bio\u4e2d\u7684\u6bcf\u4e2asegment\u3002\\r\\n\\r\\nvmem_disk_make_request\uff08\uff09\u76f4\u63a5\u8c03\u7528vmem_disk_xfer_bio\uff08\uff09\u6765\u5b8c\u6210\u4e00\u4e2abio\u64cd\u4f5c\uff0c\u800cvmem_disk_request\uff08\uff09\u5219\u901a\u8fc7\u7b2c47\u884c\u7684blk_peek_request\uff08\uff09\u5148\u4ecerequest_queue\u62ff\u51fa\u4e00\u4e2a\u8bf7\u6c42\uff0c\u518d\u901a\u8fc7\u7b2c57\u884c\u7684__rq_for_each_bio\uff08\uff09\u4ece\u8be5\u8bf7\u6c42\u4e2d\u53d6\u51fa\u4e00\u4e2abio\uff0c\u4e4b\u540e\u8c03\u7528vmem_disk_xfer_bio\uff08\uff09\u6765\u5b8c\u6210\u8be5I/O\u8bf7\u6c42\uff0c\u56fe13.4\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u3002\\r\\n\\r\\n![1744814119520](G:\\\\typora\u6587\u6863\\\\linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3\\\\1744814119520.png)\\r\\n\\r\\n\u56fe13.4\u3000vmem_disk\u7684I/O\u5904\u7406\u8fc7\u7a0b"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8","description":"Regulator\u662fLinux\u7cfb\u7edf\u4e2d\u7535\u6e90\u7ba1\u7406\u7684\u57fa\u7840\u8bbe\u65bd\u4e4b\u4e00\uff0c\u7528\u4e8e\u7a33\u538b\u7535\u6e90\u7684\u7ba1\u7406\uff0c\u662f\u5404\u79cd\u9a71\u52a8\u5b50\u7cfb\u7edf\u4e2d\u8bbe\u7f6e\u7535\u538b\u7684\u6807\u51c6\u63a5\u53e3\u3002\u524d\u9762\u4ecb\u7ecd\u7684CPUFreq\u9a71\u52a8\u5c31\u7ecf\u5e38\u4f7f\u7528\u5b83\u6765\u8bbe\u5b9a\u7535\u538b\uff0c\u6bd4\u5982\u4ee3\u7801\u6e05\u535519.2\u7684\u7b2c57~59\u884c\u3002","date":"2025-09-15T14:44:15.081Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.35,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"13.7.1\u3000vmem_disk\u7684\u786c\u4ef6\u539f\u7406","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.7\u3000\u5b9e\u4f8b\uff1avmem_disk\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04"}},"content":"Regulator\u662fLinux\u7cfb\u7edf\u4e2d\u7535\u6e90\u7ba1\u7406\u7684\u57fa\u7840\u8bbe\u65bd\u4e4b\u4e00\uff0c\u7528\u4e8e\u7a33\u538b\u7535\u6e90\u7684\u7ba1\u7406\uff0c\u662f\u5404\u79cd\u9a71\u52a8\u5b50\u7cfb\u7edf\u4e2d\u8bbe\u7f6e\u7535\u538b\u7684\u6807\u51c6\u63a5\u53e3\u3002\u524d\u9762\u4ecb\u7ecd\u7684CPUFreq\u9a71\u52a8\u5c31\u7ecf\u5e38\u4f7f\u7528\u5b83\u6765\u8bbe\u5b9a\u7535\u538b\uff0c\u6bd4\u5982\u4ee3\u7801\u6e05\u535519.2\u7684\u7b2c57~59\u884c\u3002\\r\\n\\r\\n\u800cRegulator\u5219\u53ef\u4ee5\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7684\u4f9b\u7535\u5355\u5143\uff0c\u5373\u7a33\u538b\u5668\uff08Low Dropout Regulator\uff0cLDO\uff0c\u5373\u4f4e\u538b\u5dee\u7ebf\u6027\u7a33\u538b\u5668\uff09\uff0c\u5e76\u63d0\u4f9b\u83b7\u53d6\u548c\u8bbe\u7f6e\u8fd9\u4e9b\u4f9b\u7535\u5355\u5143\u7535\u538b\u7684\u63a5\u53e3\u3002\u4e00\u822c\u5728ARM\u7535\u8def\u677f\u4e0a\uff0c\u5404\u4e2a\u7a33\u538b\u5668\u548c\u8bbe\u5907\u4f1a\u5f62\u6210\u4e00\u4e2aRegulator\u6811\u5f62\u7ed3\u6784\uff0c\u5982\u56fe19.6\u6240\u793a\u3002\\r\\n\\r\\nLinux\u7684Regulator\u5b50\u7cfb\u7edf\u63d0\u4f9b\u5982\u4e0bAPI\u4ee5\u7528\u4e8e\u6ce8\u518c/\u6ce8\u9500\u4e00\u4e2a\u7a33\u538b\u5668\uff1a\\r\\n\\r\\n```\\r\\nstructregulator_dev     *        regulator_register(conststructregulator_desc\\r\\n*regulator_desc, conststructregulator_config *config);\\r\\nvoidregulator_unregister(structregulator_dev *rdev);\\r\\n```\\r\\n\\r\\nregulator_register\uff08\uff09\u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u662fregulator_desc\u7ed3\u6784\u4f53\u548cregulator_config\u7ed3\u6784\u4f53\u7684\u6307\u9488\u3002\\r\\n\\r\\n![image-20250430225501894](./figure/image-20250430225501894.png)\\r\\n\\r\\n\u56fe19.6\u3000Regulator\u6811\u5f62\u7ed3\u6784\\r\\n\\r\\nregulator_desc\u7ed3\u6784\u4f53\u662f\u5bf9\u8fd9\u4e2a\u7a33\u538b\u5668\u5c5e\u6027\u548c\u64cd\u4f5c\u7684\u5c01\u88c5\uff0c\u5982\u4ee3\u7801\u6e05\u535519.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.7\u3000regulator_desc\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct regulator_desc {\\r\\n 2       const char *name;                /* Regulator\u7684\u540d\u5b57*/\\r\\n 3       const char *supply_name;         /* Regulator Supply\u7684\u540d\u5b57*/\\r\\n 4       int id;\\r\\n 5       unsigned n_voltages;\\r\\n 6       struct regulator_ops *ops;\\r\\n 7       int irq;\\r\\n 8       enum regulator_type type;        /* \u662f\u7535\u538b\u8fd8\u662f\u7535\u6d41Regulator */\\r\\n 9       struct module *owner;\\r\\n10\\r\\n11       unsigned int min_uV;             /* \u5728\u7ebf\u6027\u6620\u5c04\u60c5\u51b5\u4e0b\u6700\u4f4e\u7684Selector\u7684\u7535\u538b*/\\r\\n12       unsigned int uV_step;            /* \u5728\u7ebf\u6027\u6620\u5c04\u60c5\u51b5\u4e0b\u6bcf\u6b65\u589e\u52a0/\u51cf\u5c0f\u7684\u7535\u538b*/\\r\\n13       unsigned int ramp_delay;         /* \u7535\u538b\u6539\u53d8\u540e\u7a33\u5b9a\u4e0b\u6765\u6240\u9700\u65f6\u95f4*/\\r\\n14\\r\\n15       const unsigned int *volt_table;    /* \u57fa\u4e8e\u8868\u6620\u5c04\u60c5\u51b5\u4e0b\u7684\u7535\u538b\u6620\u5c04\u8868 */\\r\\n16\\r\\n17       unsigned int vsel_reg;\\r\\n18       unsigned int vsel_mask;\\r\\n19       unsigned int enable_reg;\\r\\n20       unsigned int enable_mask;\\r\\n21       unsigned int bypass_reg;\\r\\n22       unsigned int bypass_mask;\\r\\n23\\r\\n24       unsigned int enable_time;\\r\\n25};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u7ed3\u6784\u4f53\u4e2d\u7684regulator_ops\u6307\u9488ops\u662f\u5bf9\u8fd9\u4e2a\u7a33\u538b\u5668\u786c\u4ef6\u64cd\u4f5c\u7684\u5c01\u88c5\uff0c\u5176\u4e2d\u5305\u542b\u83b7\u53d6\u3001\u8bbe\u7f6e\u7535\u538b\u7b49\u7684\u6210\u5458\u51fd\u6570\uff0c\u5982\u4ee3\u7801\u6e05\u535519.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.8\u3000regulator_ops\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct regulator_ops {\\r\\n 2      /* enumerate supported voltages */\\r\\n 3      int (*list_voltage) (struct regulator_dev *, unsigned selector);\\r\\n 4\\r\\n 5      /* get/set regulator voltage */\\r\\n 6      int (*set_voltage) (struct regulator_dev *, int min_uV, int max_uV,\\r\\n 7                       unsigned *selector);\\r\\n 8      int (*map_voltage)(struct regulator_dev *, int min_uV, int max_uV);\\r\\n 9      int (*set_voltage_sel) (struct regulator_dev *, unsigned selector);\\r\\n10      int (*get_voltage) (struct regulator_dev *);\\r\\n11      int (*get_voltage_sel) (struct regulator_dev *);\\r\\n12\\r\\n13      /* get/set regulator current  */\\r\\n14      int (*set_current_limit) (struct regulator_dev *,\\r\\n15                           int min_uA, int max_uA);\\r\\n16      int (*get_current_limit) (struct regulator_dev *);\\r\\n17\\r\\n18      /* enable/disable regulator */\\r\\n19      int (*enable) (struct regulator_dev *);\\r\\n20      int (*disable) (struct regulator_dev *);\\r\\n21      int (*is_enabled) (struct regulator_dev *);\\r\\n22\\r\\n23      \u2026\\r\\n24};\\r\\n```\\r\\n\\r\\n\u5728drivers/regulator\u76ee\u5f55\u4e0b\uff0c\u5305\u542b\u5927\u91cf\u7684\u4e0e\u7535\u6e90\u82af\u7247\u5bf9\u5e94\u7684Regulator\u9a71\u52a8\uff0c\u5982Dialog\u7684DA9052\u3001Intersil\u7684ISL6271A\u3001ST-Ericsson\u7684TPS61050/61052\u3001Wolfon\u7684WM831x\u7cfb\u5217\u7b49\uff0c\u5b83\u540c\u65f6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u865a\u62df\u7684Regulator\u9a71\u52a8\u4f5c\u4e3a\u53c2\u8003\uff0c\u5982\u4ee3\u7801\u6e05\u535519.9\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.9\u3000\u865a\u62df\u7684Regulator\u9a71\u52a8\\r\\n\\r\\n```\\r\\n 1struct regulator_dev *dummy_regulator_rdev;\\r\\n 2static struct regulator_init_data dummy_initdata;\\r\\n 3static struct regulator_ops dummy_ops;\\r\\n 4static struct regulator_desc dummy_desc = {\\r\\n 5       .name = \\"regulator-dummy\\",\\r\\n 6       .id = -1,\\r\\n 7       .type = REGULATOR_VOLTAGE,\\r\\n 8       .owner = THIS_MODULE,\\r\\n 9       .ops = &dummy_ops,\\r\\n10};\\r\\n11\\r\\n12static int __devinit dummy_regulator_probe(struct platform_device *pdev)\\r\\n13{\\r\\n14       struct regulator_config config = { };\\r\\n15       int ret;\\r\\n16\\r\\n17       config.dev = &pdev->dev;\\r\\n18       config.init_data = &dummy_initdata;\\r\\n19\\r\\n20       dummy_regulator_rdev = regulator_register(&dummy_desc, &config);\\r\\n21       if (IS_ERR(dummy_regulator_rdev)) {\\r\\n22              ret = PTR_ERR(dummy_regulator_rdev);\\r\\n23              pr_err(\\"Failed to register regulator: %d\\\\n\\", ret);\\r\\n24              return ret;\\r\\n25       }\\r\\n26\\r\\n27       return 0;\\r\\n28}\\r\\n```\\r\\n\\r\\nLinux\u7684Regulator\u5b50\u7cfb\u7edf\u63d0\u4f9b\u6d88\u8d39\u8005\uff08Consumer\uff09API\u4ee5\u4fbf\u8ba9\u5176\u4ed6\u7684\u9a71\u52a8\u83b7\u53d6\u3001\u8bbe\u7f6e\u3001\u5173\u95ed\u548c\u4f7f\u80fd\u7a33\u538b\u5668\uff1a\\r\\n\\r\\n```\\r\\nstructregulator * regulator_get(structdevice *dev, const char *id);\\r\\nstructregulator * devm_regulator_get(structdevice *dev, const char *id);\\r\\nstructregulator * regulator_get_exclusive(structdevice *dev, const char *id);\\r\\nvoidregulator_put(structregulator *regulator);\\r\\nvoiddevm_regulator_put(structregulator *regulator);\\r\\nintregulator_enable(structregulator *regulator);\\r\\nintregulator_disable(structregulator *regulator);\\r\\nintregulator_set_voltage(structregulator *regulator, intmin_uV, intmax_uV);\\r\\nintregulator_get_voltage(structregulator *regulator);\\r\\n```\\r\\n\\r\\n\u8fd9\u4e9b\u6d88\u8d39\u8005API\u7684\u5730\u4f4d\u5927\u81f4\u4e0eGPIO\u5b50\u7cfb\u7edf\u7684gpio_request\uff08\uff09\u3001\u65f6\u949f\u5b50\u7cfb\u7edf\u7684clk_get\uff08\uff09\u3001dmaengine\u5b50\u7cfb\u7edf\u7684dmaengine_submit\uff08\uff09\u7b49\u76f8\u5f53\uff0c\u5c5e\u4e8e\u57fa\u7840\u8bbe\u65bd\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04","description":"\u5728\u5c06Linux\u79fb\u690d\u5230\u76ee\u6807\u7535\u8def\u677f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u5f97\u4f1a\u5efa\u7acb\u5916\u8bbeI/O\u5185\u5b58\u7269\u7406\u5730\u5740\u5230\u865a\u62df\u5730\u5740\u7684\u9759\u6001\u6620\u5c04\uff0c\u8fd9\u4e2a\u6620\u5c04\u901a\u8fc7\u5728\u4e0e\u7535\u8def\u677f\u5bf9\u5e94\u7684mapdesc\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2d\u6dfb\u52a0\u65b0\u7684\u6210\u5458\u6765\u5b8c\u6210\uff0cmapdesc\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535511.10\u6240\u793a\u3002","date":"2025-09-15T14:44:15.069Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.15,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8"},"nextItem":{"title":"6.1.1\u3000cdev\u7ed3\u6784\u4f53","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.1\u3000Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784"}},"content":"\u5728\u5c06Linux\u79fb\u690d\u5230\u76ee\u6807\u7535\u8def\u677f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6709\u5f97\u4f1a\u5efa\u7acb\u5916\u8bbeI/O\u5185\u5b58\u7269\u7406\u5730\u5740\u5230\u865a\u62df\u5730\u5740\u7684\u9759\u6001\u6620\u5c04\uff0c\u8fd9\u4e2a\u6620\u5c04\u901a\u8fc7\u5728\u4e0e\u7535\u8def\u677f\u5bf9\u5e94\u7684map_desc\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2d\u6dfb\u52a0\u65b0\u7684\u6210\u5458\u6765\u5b8c\u6210\uff0cmap_desc\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535511.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.10\u3000map_desc\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n1struct map_desc {\\r\\n2  unsigned long virtual;        /* \u865a\u62df\u5730\u5740*/\\r\\n3  unsigned long pfn ;           /* __phys_to_pfn(phy_addr) */\\r\\n4  unsigned long length;         /* \u5927\u5c0f*/\\r\\n5  unsigned int type;            /* \u7c7b\u578b*/\\r\\n6};\\r\\n```\\r\\n\\r\\n\u4f8b\u5982\uff0c\u5728\u5185\u6838arch/arm/mach-ixp2000/ixdp2x01.c\u6587\u4ef6\u5bf9\u5e94\u7684Intel IXDP2401\u548cIXDP2801\u5e73\u53f0\u4e0a\u5305\u542b\u4e00\u4e2aCPLD\uff0c\u8be5\u6587\u4ef6\u4e2d\u5c31\u8fdb\u884c\u4e86CPLD\u7269\u7406\u5730\u5740\u5230\u865a\u62df\u5730\u5740\u7684\u9759\u6001\u6620\u5c04\uff0c\u5982\u4ee3\u7801\u6e05\u535511.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.11\u3000\u5728\u7535\u8def\u677f\u6587\u4ef6\u4e2d\u589e\u52a0\u7269\u7406\u5730\u5740\u5230\u865a\u62df\u5730\u5740\u7684\u9759\u6001\u6620\u5c04\\r\\n\\r\\n```\\r\\n 1static struct map_desc ixdp2x01_io_desc _ _initdata = {\\r\\n 2       .virtual        = IXDP2X01_VIRT_CPLD_BASE,\\r\\n 3       .pfn            = _ _phys_to_pfn(IXDP2X01_PHYS_CPLD_BASE),\\r\\n 4       .length         = IXDP2X01_CPLD_REGION_SIZE,\\r\\n 5       .type           = MT_DEVICE\\r\\n 6};\\r\\n 7\\r\\n 8static void _ _init ixdp2x01_map_io(void)\\r\\n 9{\\r\\n10       ixp2000_map_io();\\r\\n11       iotable_init(&ixdp2x01_io_desc, 1);\\r\\n12}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.11\u4e2d\u7684\u7b2c11\u884ciotable_init\uff08\uff09\u662f\u6700\u7ec8\u5efa\u7acb\u9875\u6620\u5c04\u7684\u51fd\u6570\uff0c\u5b83\u901a\u8fc7MACHINE_START\u3001MACHINE_END\u5b8f\u8d4b\u503c\u7ed9\u7535\u8def\u677f\u7684map_io\uff08\uff09\u51fd\u6570\u3002\u5c06Linux\u64cd\u4f5c\u7cfb\u7edf\u79fb\u690d\u5230\u7279\u5b9a\u5e73\u53f0\u4e0a\uff0cMACHINE_START\uff08\u6216\u8005DT_MACHINE_START\uff09\u3001MACHINE_END\u5b8f\u4e4b\u95f4\u7684\u5b9a\u4e49\u9488\u5bf9\u7279\u5b9a\u7535\u8def\u677f\u800c\u8bbe\u8ba1\uff0c\u5176\u4e2d\u7684map_io\uff08\uff09\u6210\u5458\u51fd\u6570\u5b8c\u6210I/O\u5185\u5b58\u7684\u9759\u6001\u6620\u5c04\u3002\\r\\n\\r\\n\u5728\u4e00\u4e2a\u5df2\u7ecf\u79fb\u690d\u597d\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u6838\u4e2d\uff0c\u9a71\u52a8\u5de5\u7a0b\u5e08\u53ef\u4ee5\u5bf9\u975e\u5e38\u89c4\u5185\u5b58\u533a\u57df\u7684I/O\u5185\u5b58\uff08\u5916\u8bbe\u63a7\u5236\u5668\u5bc4\u5b58\u5668\u3001MCU\u5185\u90e8\u96c6\u6210\u7684\u5916\u8bbe\u63a7\u5236\u5668\u5bc4\u5b58\u5668\u7b49\uff09\u4f9d\u7167\u7535\u8def\u677f\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u6dfb\u52a0\u5230map_desc\u6570\u7ec4\u4e2d\uff0c\u4f46\u662f\u76ee\u524d\u8be5\u65b9\u6cd5\u5df2\u7ecf\u4e0d\u503c\u5f97\u63a8\u8350\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.1\u3000Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.1\u3000Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.1\u3000Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.1\u3000Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784.md","title":"6.1.1\u3000cdev\u7ed3\u6784\u4f53","description":"\u5728Linux\u5185\u6838\u4e2d\uff0c\u4f7f\u7528cdev\u7ed3\u6784\u4f53\u63cf\u8ff0\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\uff0ccdev\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u53556.1\u3002","date":"2025-09-15T14:44:15.057Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":16.875,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.5\u3000IO\u5185\u5b58\u9759\u6001\u6620\u5c04"},"nextItem":{"title":"12.3.1\u3000\u8bbe\u5907\u9a71\u52a8\u6838\u5fc3\u5c42\u548c\u4f8b\u5316","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.3\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u5206\u5c42\u601d\u60f3"}},"content":"\u5728Linux\u5185\u6838\u4e2d\uff0c\u4f7f\u7528cdev\u7ed3\u6784\u4f53\u63cf\u8ff0\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\uff0ccdev\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u53556.1\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.1\u3000cdev\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n1struct cdev {\\r\\n2  struct kobject kobj;             /* \u5185\u5d4c\u7684kobject\u5bf9\u8c61*/\\r\\n3  struct module *owner;            /* \u6240\u5c5e\u6a21\u5757*/\\r\\n4  struct file_operations *ops;     /* \u6587\u4ef6\u64cd\u4f5c\u7ed3\u6784\u4f53*/\\r\\n5  struct list_head list;\\r\\n6  dev_t dev;                       /* \u8bbe\u5907\u53f7*/\\r\\n7  unsigned int count;\\r\\n8};\\r\\n```\\r\\n\\r\\ncdev\u7ed3\u6784\u4f53\u7684dev_t\u6210\u5458\u5b9a\u4e49\u4e86\u8bbe\u5907\u53f7\uff0c\u4e3a32\u4f4d\uff0c\u5176\u4e2d12\u4f4d\u4e3a\u4e3b\u8bbe\u5907\u53f7\uff0c20\u4f4d\u4e3a\u6b21\u8bbe\u5907\u53f7\u3002\u4f7f\u7528\u4e0b\u5217\u5b8f\u53ef\u4ee5\u4ecedev_t\u83b7\u5f97\u4e3b\u8bbe\u5907\u53f7\u548c\u6b21\u8bbe\u5907\u53f7\uff1a\\r\\n\\r\\n```\\r\\nMAJOR(dev_t dev)\\r\\nMINOR(dev_t dev)\\r\\n```\\r\\n\\r\\n\u800c\u4f7f\u7528\u4e0b\u5217\u5b8f\u5219\u53ef\u4ee5\u901a\u8fc7\u4e3b\u8bbe\u5907\u53f7\u548c\u6b21\u8bbe\u5907\u53f7\u751f\u6210dev_t\uff1a\\r\\n\\r\\n```\\r\\nMKDEV(int major, int minor)\\r\\n```\\r\\n\\r\\ncdev\u7ed3\u6784\u4f53\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u6210\u5458file_operations\u5b9a\u4e49\u4e86\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u7ed9\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u7684\u63a5\u53e3\u51fd\u6570\u3002\\r\\n\\r\\nLinux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7ec4\u51fd\u6570\u4ee5\u7528\u4e8e\u64cd\u4f5ccdev\u7ed3\u6784\u4f53\uff1a\\r\\n\\r\\n```\\r\\nvoid cdev_init(struct cdev *, struct file_operations *);\\r\\nstruct cdev *cdev_alloc(void);\\r\\nvoid cdev_put(struct cdev *p);\\r\\nint cdev_add(struct cdev *, dev_t, unsigned);\\r\\nvoid cdev_del(struct cdev *);\\r\\n```\\r\\n\\r\\ncdev_init\uff08\uff09\u51fd\u6570\u7528\u4e8e\u521d\u59cb\u5316cdev\u7684\u6210\u5458\uff0c\u5e76\u5efa\u7acbcdev\u548cfile_operations\u4e4b\u95f4\u7684\u8fde\u63a5\uff0c\u5176\u6e90\u4ee3\u7801\u5982\u4ee3\u7801\u6e05\u53556.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.2\u3000cdev_init\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n1void cdev_init(struct cdev *cdev, struct file_operations *fops)\\r\\n2{\\r\\n3    memset(cdev, 0, sizeof *cdev);\\r\\n4    INIT_LIST_HEAD(&cdev->list);\\r\\n5    kobject_init(&cdev->kobj, &ktype_cdev_default);\\r\\n6    cdev->ops = fops; /* \u5c06\u4f20\u5165\u7684\u6587\u4ef6\u64cd\u4f5c\u7ed3\u6784\u4f53\u6307\u9488\u8d4b\u503c\u7ed9cdev\u7684ops*/\\r\\n7}\\r\\n```\\r\\n\\r\\ncdev_alloc\uff08\uff09\u51fd\u6570\u7528\u4e8e\u52a8\u6001\u7533\u8bf7\u4e00\u4e2acdev\u5185\u5b58\uff0c\u5176\u6e90\u4ee3\u7801\u5982\u4ee3\u7801\u6e05\u53556.3\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.3\u3000cdev_alloc\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n1struct cdev *cdev_alloc(void)\\r\\n2{\\r\\n3        struct cdev *p = kzalloc(sizeof(struct cdev), GFP_KERNEL);\\r\\n4        if (p) {\\r\\n5            INIT_LIST_HEAD(&p->list);\\r\\n6            kobject_init(&p->kobj, &ktype_cdev_dynamic);\\r\\n7        }\\r\\n8        return p;\\r\\n9}\\r\\n```\\r\\n\\r\\ncdev_add\uff08\uff09\u51fd\u6570\u548ccdev_del\uff08\uff09\u51fd\u6570\u5206\u522b\u5411\u7cfb\u7edf\u6dfb\u52a0\u548c\u5220\u9664\u4e00\u4e2acdev\uff0c\u5b8c\u6210\u5b57\u7b26\u8bbe\u5907\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u3002\u5bf9cdev_add\uff08\uff09\u7684\u8c03\u7528\u901a\u5e38\u53d1\u751f\u5728\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\uff0c\u800c\u5bf9cdev_del\uff08\uff09\u51fd\u6570\u7684\u8c03\u7528\u5219\u901a\u5e38\u53d1\u751f\u5728\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u4e2d\u3002\\r\\n\\r\\n# 6.1.2\u3000\u5206\u914d\u548c\u91ca\u653e\u8bbe\u5907\u53f7\\r\\n\\r\\n\u5728\u8c03\u7528cdev_add\uff08\uff09\u51fd\u6570\u5411\u7cfb\u7edf\u6ce8\u518c\u5b57\u7b26\u8bbe\u5907\u4e4b\u524d\uff0c\u5e94\u9996\u5148\u8c03\u7528register_chrdev_region\uff08\uff09\u6216alloc_chrdev_region\uff08\uff09\u51fd\u6570\u5411\u7cfb\u7edf\u7533\u8bf7\u8bbe\u5907\u53f7\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint register_chrdev_region(dev_t from, unsigned count, const char *name);\\r\\nint alloc_chrdev_region(dev_t *dev, unsigned baseminor, unsigned count,\\r\\n              const char *name);\\r\\n```\\r\\n\\r\\nregister_chrdev_region\uff08\uff09\u51fd\u6570\u7528\u4e8e\u5df2\u77e5\u8d77\u59cb\u8bbe\u5907\u7684\u8bbe\u5907\u53f7\u7684\u60c5\u51b5\uff0c\u800calloc_chrdev_region\uff08\uff09\u7528\u4e8e\u8bbe\u5907\u53f7\u672a\u77e5\uff0c\u5411\u7cfb\u7edf\u52a8\u6001\u7533\u8bf7\u672a\u88ab\u5360\u7528\u7684\u8bbe\u5907\u53f7\u7684\u60c5\u51b5\uff0c\u51fd\u6570\u8c03\u7528\u6210\u529f\u4e4b\u540e\uff0c\u4f1a\u628a\u5f97\u5230\u7684\u8bbe\u5907\u53f7\u653e\u5165\u7b2c\u4e00\u4e2a\u53c2\u6570dev\u4e2d\u3002alloc_chrdev_region\uff08\uff09\u76f8\u6bd4\u4e8eregister_chrdev_region\uff08\uff09\u7684\u4f18\u70b9\u5728\u4e8e\u5b83\u4f1a\u81ea\u52a8\u907f\u5f00\u8bbe\u5907\u53f7\u91cd\u590d\u7684\u51b2\u7a81\u3002\\r\\n\\r\\n\u76f8\u5e94\u5730\uff0c\u5728\u8c03\u7528cdev_del\uff08\uff09\u51fd\u6570\u4ece\u7cfb\u7edf\u6ce8\u9500\u5b57\u7b26\u8bbe\u5907\u4e4b\u540e\uff0cunregister_chrdev_region\uff08\uff09\u5e94\u8be5\u88ab\u8c03\u7528\u4ee5\u91ca\u653e\u539f\u5148\u7533\u8bf7\u7684\u8bbe\u5907\u53f7\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid unregister_chrdev_region(dev_t from, unsigned count);\\r\\n```\\r\\n\\r\\n# 6.1.3\u3000file_operations\u7ed3\u6784\u4f53\\r\\n\\r\\nfile_operations\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u51fd\u6570\u662f\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e3b\u4f53\u5185\u5bb9\uff0c\u8fd9\u4e9b\u51fd\u6570\u5b9e\u9645\u4f1a\u5728\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884cLinux\u7684open\uff08\uff09\u3001write\uff08\uff09\u3001read\uff08\uff09\u3001close\uff08\uff09\u7b49\u7cfb\u7edf\u8c03\u7528\u65f6\u6700\u7ec8\u88ab\u5185\u6838\u8c03\u7528\u3002file_operations\u7ed3\u6784\u4f53\u76ee\u524d\u5df2\u7ecf\u6bd4\u8f83\u5e9e\u5927\uff0c\u5b83\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u53556.4\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.4\u3000file_operations\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\nstruct file_operations {\\r\\n\\tstruct module *owner;\\r\\n\\tloff_t (*llseek) (struct file *, loff_t, int);\\r\\n\\tssize_t (*read) (struct file *, char __user *, size_t, loff_t *);\\r\\n\\tssize_t (*write) (struct file *, const char __user *, size_t, loff_t *);\\r\\n\\tssize_t (*read_iter) (struct kiocb *, struct iov_iter *);\\r\\n\\tssize_t (*write_iter) (struct kiocb *, struct iov_iter *);\\r\\n\\tint (*iterate) (struct file *, struct dir_context *);\\r\\n\\tint (*iterate_shared) (struct file *, struct dir_context *);\\r\\n\\t__poll_t (*poll) (struct file *, struct poll_table_struct *);\\r\\n\\tlong (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);\\r\\n\\tlong (*compat_ioctl) (struct file *, unsigned int, unsigned long);\\r\\n\\tint (*mmap) (struct file *, struct vm_area_struct *);\\r\\n\\tunsigned long mmap_supported_flags;\\r\\n\\tint (*open) (struct inode *, struct file *);\\r\\n\\tint (*flush) (struct file *, fl_owner_t id);\\r\\n\\tint (*release) (struct inode *, struct file *);\\r\\n\\tint (*fsync) (struct file *, loff_t, loff_t, int datasync);\\r\\n\\tint (*fasync) (int, struct file *, int);\\r\\n\\tint (*lock) (struct file *, int, struct file_lock *);\\r\\n\\tssize_t (*sendpage) (struct file *, struct page *, int, size_t, loff_t *, int);\\r\\n\\tunsigned long (*get_unmapped_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);\\r\\n\\tint (*check_flags)(int);\\r\\n\\tint (*flock) (struct file *, int, struct file_lock *);\\r\\n\\tssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int);\\r\\n\\tssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);\\r\\n\\tint (*setlease)(struct file *, long, struct file_lock **, void **);\\r\\n\\tlong (*fallocate)(struct file *file, int mode, loff_t offset,\\r\\n\\t\\t\\t  loff_t len);\\r\\n\\tvoid (*show_fdinfo)(struct seq_file *m, struct file *f);\\r\\n#ifndef CONFIG_MMU\\r\\n\\tunsigned (*mmap_capabilities)(struct file *);\\r\\n#endif\\r\\n\\tssize_t (*copy_file_range)(struct file *, loff_t, struct file *,\\r\\n\\t\\t\\tloff_t, size_t, unsigned int);\\r\\n\\tloff_t (*remap_file_range)(struct file *file_in, loff_t pos_in,\\r\\n\\t\\t\\t\\t   struct file *file_out, loff_t pos_out,\\r\\n\\t\\t\\t\\t   loff_t len, unsigned int remap_flags);\\r\\n\\tint (*fadvise)(struct file *, loff_t, loff_t, int);\\r\\n} __randomize_layout;\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u6211\u4eec\u5bf9file_operations\u7ed3\u6784\u4f53\u4e2d\u7684\u4e3b\u8981\u6210\u5458\u8fdb\u884c\u5206\u6790\u3002\\r\\n\\r\\nllseek\uff08\uff09\u51fd\u6570\u7528\u6765\u4fee\u6539\u4e00\u4e2a\u6587\u4ef6\u7684\u5f53\u524d\u8bfb\u5199\u4f4d\u7f6e\uff0c\u5e76\u5c06\u65b0\u4f4d\u7f6e\u8fd4\u56de\uff0c\u5728\u51fa\u9519\u65f6\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u8d1f\u503c\u3002\\r\\n\\r\\nread\uff08\uff09\u51fd\u6570\u7528\u6765\u4ece\u8bbe\u5907\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u6210\u529f\u65f6\u51fd\u6570\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0c\u51fa\u9519\u65f6\u8fd4\u56de\u4e00\u4e2a\u8d1f\u503c\u3002\u5b83\u4e0e\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684ssize_t read\uff08int fd\uff0cvoid*buf\uff0csize_t count\uff09\u548csize_t fread\uff08void*ptr\uff0csize_t size\uff0csize_t nmemb\uff0cFILE*stream\uff09\u5bf9\u5e94\u3002\\r\\n\\r\\nwrite\uff08\uff09\u51fd\u6570\u5411\u8bbe\u5907\u53d1\u9001\u6570\u636e\uff0c\u6210\u529f\u65f6\u8be5\u51fd\u6570\u8fd4\u56de\u5199\u5165\u7684\u5b57\u8282\u6570\u3002\u5982\u679c\u6b64\u51fd\u6570\u672a\u88ab\u5b9e\u73b0\uff0c\u5f53\u7528\u6237\u8fdb\u884cwrite\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u5c06\u5f97\u5230-EINVAL\u8fd4\u56de\u503c\u3002\u5b83\u4e0e\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684ssize_t write\uff08int fd\uff0cconst void*buf\uff0csize_t count\uff09\u548csize_t fwrite\uff08const void*ptr\uff0csize_t size\uff0csize_t nmemb\uff0cFILE*stream\uff09\u5bf9\u5e94\u3002\\r\\n\\r\\nread\uff08\uff09\u548cwrite\uff08\uff09\u5982\u679c\u8fd4\u56de0\uff0c\u5219\u6697\u793aend-of-file\uff08EOF\uff09\u3002\\r\\n\\r\\nunlocked_ioctl\uff08\uff09\u63d0\u4f9b\u8bbe\u5907\u76f8\u5173\u63a7\u5236\u547d\u4ee4\u7684\u5b9e\u73b0\uff08\u65e2\u4e0d\u662f\u8bfb\u64cd\u4f5c\uff0c\u4e5f\u4e0d\u662f\u5199\u64cd\u4f5c\uff09\uff0c\u5f53\u8c03\u7528\u6210\u529f\u65f6\uff0c\u8fd4\u56de\u7ed9\u8c03\u7528\u7a0b\u5e8f\u4e00\u4e2a\u975e\u8d1f\u503c\u3002\u5b83\u4e0e\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528\u7684int fcntl\uff08int fd\uff0cint cmd\uff0c.../*arg*/\uff09\u548cint ioctl\uff08int d\uff0cint request\uff0c...\uff09\u5bf9\u5e94\u3002\\r\\n\\r\\nmmap\uff08\uff09\u51fd\u6570\u5c06\u8bbe\u5907\u5185\u5b58\u6620\u5c04\u5230\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\uff0c\u5982\u679c\u8bbe\u5907\u9a71\u52a8\u672a\u5b9e\u73b0\u6b64\u51fd\u6570\uff0c\u7528\u6237\u8fdb\u884cmmap\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u65f6\u5c06\u83b7\u5f97-ENODEV\u8fd4\u56de\u503c\u3002\u8fd9\u4e2a\u51fd\u6570\u5bf9\u4e8e\u5e27\u7f13\u51b2\u7b49\u8bbe\u5907\u7279\u522b\u6709\u610f\u4e49\uff0c\u5e27\u7f13\u51b2\u88ab\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5b83\u800c\u65e0\u987b\u5728\u5185\u6838\u548c\u5e94\u7528\u95f4\u8fdb\u884c\u5185\u5b58\u590d\u5236\u3002\u5b83\u4e0e\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684void*mmap\uff08void*addr\uff0csize_t length\uff0cint prot\uff0cint flags\uff0cint fd\uff0coff_t offset\uff09\u51fd\u6570\u5bf9\u5e94\u3002\\r\\n\\r\\n\u5f53\u7528\u6237\u7a7a\u95f4\u8c03\u7528Linux API\u51fd\u6570open\uff08\uff09\u6253\u5f00\u8bbe\u5907\u6587\u4ef6\u65f6\uff0c\u8bbe\u5907\u9a71\u52a8\u7684open\uff08\uff09\u51fd\u6570\u6700\u7ec8\u88ab\u8c03\u7528\u3002\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u5b9e\u73b0\u8fd9\u4e2a\u51fd\u6570\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5907\u7684\u6253\u5f00\u64cd\u4f5c\u6c38\u8fdc\u6210\u529f\u3002\u4e0eopen\uff08\uff09\u51fd\u6570\u5bf9\u5e94\u7684\u662frelease\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\npoll\uff08\uff09\u51fd\u6570\u4e00\u822c\u7528\u4e8e\u8be2\u95ee\u8bbe\u5907\u662f\u5426\u53ef\u88ab\u975e\u963b\u585e\u5730\u7acb\u5373\u8bfb\u5199\u3002\u5f53\u8be2\u95ee\u7684\u6761\u4ef6\u672a\u89e6\u53d1\u65f6\uff0c\u7528\u6237\u7a7a\u95f4\u8fdb\u884cselect\uff08\uff09\u548cpoll\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u5c06\u5f15\u8d77\u8fdb\u7a0b\u7684\u963b\u585e\u3002\\r\\n\\r\\naio_read\uff08\uff09\u548caio_write\uff08\uff09\u51fd\u6570\u5206\u522b\u5bf9\u4e0e\u6587\u4ef6\u63cf\u8ff0\u7b26\u5bf9\u5e94\u7684\u8bbe\u5907\u8fdb\u884c\u5f02\u6b65\u8bfb\u3001\u5199\u64cd\u4f5c\u3002\u8bbe\u5907\u5b9e\u73b0\u8fd9\u4e24\u4e2a\u51fd\u6570\u540e\uff0c\u7528\u6237\u7a7a\u95f4\u53ef\u4ee5\u5bf9\u8be5\u8bbe\u5907\u6587\u4ef6\u63cf\u8ff0\u7b26\u6267\u884cSYS_io_setup\u3001SYS_io_submit\u3001SYS_io_getevents\u3001SYS_io_destroy\u7b49\u7cfb\u7edf\u8c03\u7528\u8fdb\u884c\u8bfb\u5199\u3002\\r\\n\\r\\n# 6.1.4\u3000Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u7ec4\u6210\\r\\n\\r\\n\u5728Linux\u4e2d\uff0c\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7531\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\u3002\\r\\n\\r\\n## 1.\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\\r\\n\\r\\n\u5728\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\u5e94\u8be5\u5b9e\u73b0\u8bbe\u5907\u53f7\u7684\u7533\u8bf7\u548ccdev\u7684\u6ce8\u518c\uff0c\u800c\u5728\u5378\u8f7d\u51fd\u6570\u4e2d\u5e94\u5b9e\u73b0\u8bbe\u5907\u53f7\u7684\u91ca\u653e\u548ccdev\u7684\u6ce8\u9500\u3002\\r\\n\\r\\nLinux\u5185\u6838\u7684\u7f16\u7801\u4e60\u60ef\u662f\u4e3a\u8bbe\u5907\u5b9a\u4e49\u4e00\u4e2a\u8bbe\u5907\u76f8\u5173\u7684\u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u5305\u542b\u8bbe\u5907\u6240\u6d89\u53ca\u7684cdev\u3001\u79c1\u6709\u6570\u636e\u53ca\u9501\u7b49\u4fe1\u606f\u3002\u5e38\u89c1\u7684\u8bbe\u5907\u7ed3\u6784\u4f53\u3001\u6a21\u5757\u52a0\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u5f62\u5f0f\u5982\u4ee3\u7801\u6e05\u53556.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.5\u3000\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1/* \u8bbe\u5907\u7ed3\u6784\u4f53\\r\\n 2struct xxx_dev_t {\\r\\n 3    struct cdev cdev;\\r\\n 4  ...\\r\\n 5} xxx_dev;\\r\\n 6/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\\r\\n 7static int _ _init xxx_init(void)\\r\\n 8{\\r\\n 9  ...\\r\\n10  cdev_init(&xxx_dev.cdev, &xxx_fops);         /* \u521d\u59cb\u5316cdev */\\r\\n11  xxx_dev.cdev.owner = THIS_MODULE;\\r\\n12  /* \u83b7\u53d6\u5b57\u7b26\u8bbe\u5907\u53f7*/\\r\\n13  if (xxx_major) {\\r\\n14      register_chrdev_region(xxx_dev_no, 1, DEV_NAME);\\r\\n15  } else {\\r\\n16      alloc_chrdev_region(&xxx_dev_no, 0, 1, DEV_NAME);\\r\\n17  }\\r\\n18\\r\\n19  ret = cdev_add(&xxx_dev.cdev, xxx_dev_no, 1);  /* \u6ce8\u518c\u8bbe\u5907*/\\r\\n20  ...\\r\\n21}\\r\\n22/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u5378\u8f7d\u51fd\u6570*/\\r\\n23static void _ _exit xxx_exit(void)\\r\\n24{\\r\\n25   unregister_chrdev_region(xxx_dev_no, 1);      /* \u91ca\u653e\u5360\u7528\u7684\u8bbe\u5907\u53f7*/\\r\\n26   cdev_del(&xxx_dev.cdev);                      /* \u6ce8\u9500\u8bbe\u5907*/\\r\\n27  ...\\r\\n28}\\r\\n```\\r\\n\\r\\n## 2.\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684file_operations\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u51fd\u6570\\r\\n\\r\\nfile_operations\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u51fd\u6570\u662f\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u5185\u6838\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u7684\u63a5\u53e3\uff0c\u662f\u7528\u6237\u7a7a\u95f4\u5bf9Linux\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u6700\u7ec8\u7684\u843d\u5b9e\u8005\u3002\u5927\u591a\u6570\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4f1a\u5b9e\u73b0read\uff08\uff09\u3001write\uff08\uff09\u548cioctl\uff08\uff09\u51fd\u6570\uff0c\u5e38\u89c1\u7684\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u8fd93\u4e2a\u51fd\u6570\u7684\u5f62\u5f0f\u5982\u4ee3\u7801\u6e05\u53556.6\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.6\u3000\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u8bfb\u3001\u5199\u3001I/O\u63a7\u5236\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1 /* \u8bfb\u8bbe\u5907*/\\r\\n 2 ssize_t xxx_read(struct file *filp, char __user *buf, size_t count,\\r\\n 3    loff_t*f_pos)\\r\\n 4 {\\r\\n 5    ...\\r\\n 6    copy_to_user(buf, ..., ...);\\r\\n 7    ...\\r\\n 8 }\\r\\n 9 /* \u5199\u8bbe\u5907*/\\r\\n10 ssize_t xxx_write(struct file *filp, const char __user *buf, size_t count,\\r\\n11    loff_t *f_pos)\\r\\n12 {\\r\\n13    ...\\r\\n14    copy_from_user(..., buf, ...);\\r\\n15    ...\\r\\n16 }\\r\\n17 /* ioctl\u51fd\u6570*/\\r\\n18 long xxx_ioctl(struct file *filp, unsigned int cmd,\\r\\n19    unsigned long arg)\\r\\n20 {\\r\\n21    ...\\r\\n22    switch (cmd) {\\r\\n23    case XXX_CMD1:\\r\\n24         ...\\r\\n25         break;\\r\\n26    case XXX_CMD2:\\r\\n27         ...\\r\\n28         break;\\r\\n29    default:\\r\\n30         /* \u4e0d\u80fd\u652f\u6301\u7684\u547d\u4ee4*/\\r\\n31         return  - ENOTTY;\\r\\n32    }\\r\\n33    return 0;\\r\\n34 }\\r\\n```\\r\\n\\r\\n\u8bbe\u5907\u9a71\u52a8\u7684\u8bfb\u51fd\u6570\u4e2d\uff0cfilp\u662f\u6587\u4ef6\u7ed3\u6784\u4f53\u6307\u9488\uff0cbuf\u662f\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u7684\u5730\u5740\uff0c\u8be5\u5730\u5740\u5728\u5185\u6838\u7a7a\u95f4\u4e0d\u5b9c\u76f4\u63a5\u8bfb\u5199\uff0ccount\u662f\u8981\u8bfb\u7684\u5b57\u8282\u6570\uff0cf_pos\u662f\u8bfb\u7684\u4f4d\u7f6e\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u3002\\r\\n\\r\\n\u8bbe\u5907\u9a71\u52a8\u7684\u5199\u51fd\u6570\u4e2d\uff0cfilp\u662f\u6587\u4ef6\u7ed3\u6784\u4f53\u6307\u9488\uff0cbuf\u662f\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u7684\u5730\u5740\uff0c\u8be5\u5730\u5740\u5728\u5185\u6838\u7a7a\u95f4\u4e0d\u5b9c\u76f4\u63a5\u8bfb\u5199\uff0ccount\u662f\u8981\u5199\u7684\u5b57\u8282\u6570\uff0cf_pos\u662f\u5199\u7684\u4f4d\u7f6e\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u3002\\r\\n\\r\\n\u7531\u4e8e\u7528\u6237\u7a7a\u95f4\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5185\u6838\u7a7a\u95f4\u7684\u5185\u5b58\uff0c\u56e0\u6b64\u501f\u52a9\u4e86\u51fd\u6570copy_from_user\uff08\uff09\u5b8c\u6210\u7528\u6237\u7a7a\u95f4\u7f13\u51b2\u533a\u5230\u5185\u6838\u7a7a\u95f4\u7684\u590d\u5236\uff0c\u4ee5\u53cacopy_to_user\uff08\uff09\u5b8c\u6210\u5185\u6838\u7a7a\u95f4\u5230\u7528\u6237\u7a7a\u95f4\u7f13\u51b2\u533a\u7684\u590d\u5236\uff0c\u89c1\u4ee3\u7801\u7b2c6\u884c\u548c\u7b2c14\u884c\u3002\\r\\n\\r\\n\u5b8c\u6210\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u590d\u5236\u7684copy_from_user\uff08\uff09\u548ccopy_to_user\uff08\uff09\u7684\u539f\u578b\u5206\u522b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nunsigned long copy_from_user(void *to, const void _ _user *from, unsigned long count);\\r\\nunsigned long copy_to_user(void _ _user *to, const void *from, unsigned long count);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u5747\u8fd4\u56de\u4e0d\u80fd\u88ab\u590d\u5236\u7684\u5b57\u8282\u6570\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u5b8c\u5168\u590d\u5236\u6210\u529f\uff0c\u8fd4\u56de\u503c\u4e3a0\u3002\u5982\u679c\u590d\u5236\u5931\u8d25\uff0c\u5219\u8fd4\u56de\u8d1f\u503c\u3002\\r\\n\\r\\n\u5982\u679c\u8981\u590d\u5236\u7684\u5185\u5b58\u662f\u7b80\u5355\u7c7b\u578b\uff0c\u5982char\u3001int\u3001long\u7b49\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u7b80\u5355\u7684put_user\uff08\uff09\u548cget_user\uff08\uff09\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nint val;                         /* \u5185\u6838\u7a7a\u95f4\u6574\u578b\u53d8\u91cf\\r\\n...\\r\\nget_user(val, (int *) arg);      /* \u7528\u6237\u2192\u5185\u6838\uff0carg\u662f\u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740 */\\r\\n...\\r\\nput_user(val, (int *) arg);      /* \u5185\u6838\u2192\u7528\u6237\uff0carg\u662f\u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740 */\\r\\n```\\r\\n\\r\\n\u8bfb\u548c\u5199\u51fd\u6570\u4e2d\u7684_user\u662f\u4e00\u4e2a\u5b8f\uff0c\u8868\u660e\u5176\u540e\u7684\u6307\u9488\u6307\u5411\u7528\u6237\u7a7a\u95f4\uff0c\u5b9e\u9645\u4e0a\u66f4\u591a\u5730\u5145\u5f53\u4e86\u4ee3\u7801\u81ea\u6ce8\u91ca\u7684\u529f\u80fd\u3002\u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#ifdef _ _CHECKER_ _\\r\\n# define _ _user      _ _attribute_ _((noderef, address_space(1)))\\r\\n#else\\r\\n# define _ _user\\r\\n#endif\\r\\n```\\r\\n\\r\\n\u5185\u6838\u7a7a\u95f4\u867d\u7136\u53ef\u4ee5\u8bbf\u95ee\u7528\u6237\u7a7a\u95f4\u7684\u7f13\u51b2\u533a\uff0c\u4f46\u662f\u5728\u8bbf\u95ee\u4e4b\u524d\uff0c\u4e00\u822c\u9700\u8981\u5148\u68c0\u67e5\u5176\u5408\u6cd5\u6027\uff0c\u901a\u8fc7access_ok\uff08type\uff0caddr\uff0csize\uff09\u8fdb\u884c\u5224\u65ad\uff0c\u4ee5\u786e\u5b9a\u4f20\u5165\u7684\u7f13\u51b2\u533a\u7684\u786e\u5c5e\u4e8e\u7528\u6237\u7a7a\u95f4\uff0c\u4f8b\u5982\\r\\n\\r\\n```\\r\\nstatic ssize_t read_port(struct file *file, char __user *buf,\\r\\n                         size_t count, loff_t *ppos)\\r\\n{\\r\\n        unsigned long i = *ppos;\\r\\n        char __user *tmp = buf;\\r\\n        if (!access_ok(VERIFY_WRITE, buf, count))\\r\\n                return -EFAULT;\\r\\n        while (count-- > 0 && i < 65536) {\\r\\n                if (__put_user(inb(i), tmp) < 0)\\r\\n                        return -EFAULT;\\r\\n                i++;\\r\\n                tmp++;\\r\\n        }\\r\\n        *ppos = i;\\r\\n        return tmp-buf;\\r\\n}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u5f15\u7528\u7684__put_user\uff08\uff09\u4e0e\u524d\u6587\u8bb2\u89e3\u7684put_user\uff08\uff09\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u4e0d\u8fdb\u884c\u7c7b\u4f3caccess_ok\uff08\uff09\u7684\u68c0\u67e5\uff0c\u800c\u540e\u8005\u4f1a\u8fdb\u884c\u8fd9\u4e00\u68c0\u67e5\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u4e0d\u4f7f\u7528put_user\uff08\uff09\u800c\u4f7f\u7528__put_user\uff08\uff09\u7684\u539f\u56e0\u662f\u5728__put_user\uff08\uff09\u8c03\u7528\u4e4b\u524d\uff0c\u5df2\u7ecf\u624b\u52a8\u68c0\u67e5\u4e86\u7528\u6237\u7a7a\u95f4\u7f13\u51b2\u533a\uff08buf\u6307\u5411\u7684\u5927\u5c0f\u4e3acount\u7684\u5185\u5b58\uff09\u7684\u5408\u6cd5\u6027\u3002get_user\uff08\uff09\u548c__get_user\uff08\uff09\u7684\u533a\u522b\u4e5f\u76f8\u4f3c\u3002\\r\\n\\r\\n\u7279\u522b\u8981\u63d0\u9192\u8bfb\u8005\u6ce8\u610f\u7684\u662f\uff1a\u5728\u5185\u6838\u7a7a\u95f4\u4e0e\u7528\u6237\u7a7a\u95f4\u7684\u754c\u9762\u5904\uff0c\u5185\u6838\u68c0\u67e5\u7528\u6237\u7a7a\u95f4\u7f13\u51b2\u533a\u7684\u5408\u6cd5\u6027\u663e\u5f97\u5c24\u5176\u5fc5\u8981\uff0cLinux\u5185\u6838\u7684\u8bb8\u591a\u5b89\u5168\u6f0f\u6d1e\u90fd\u662f\u56e0\u4e3a\u9057\u5fd8\u4e86\u8fd9\u4e00\u68c0\u67e5\u9020\u6210\u7684\uff0c\u975e\u6cd5\u4fb5\u5165\u8005\u53ef\u4ee5\u4f2a\u9020\u4e00\u7247\u5185\u6838\u7a7a\u95f4\u7684\u7f13\u51b2\u533a\u5730\u5740\u4f20\u5165\u7cfb\u7edf\u8c03\u7528\u7684\u63a5\u53e3\uff0c\u8ba9\u5185\u6838\u5bf9\u8fd9\u4e2aevil\u6307\u9488\u6307\u5411\u7684\u5185\u6838\u7a7a\u95f4\u586b\u5145\u6570\u636e\u3002\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u4ecehttp://www.cvedetails.com/ \u7f51\u7ad9\u67e5\u9605Linux CVE\uff08Common Vulnerabilities and Exposures\uff09\u5217\u8868\u3002\\r\\n\\r\\n\u5176\u5b9ecopy_from_user\uff08\uff09\u3001copy_to_user\uff08\uff09\u5185\u90e8\u4e5f\u8fdb\u884c\u4e86\u8fd9\u6837\u7684\u68c0\u67e5\uff1a\\r\\n\\r\\n```\\r\\nstatic inline unsigned long __must_check copy_from_user(void *to, const void __user\\r\\n    *from, unsigned long n)\\r\\n{\\r\\n        if (access_ok(VERIFY_READ, from, n))\\r\\n                n = __copy_from_user(to, from, n);\\r\\n        else /* security hole - plug it */\\r\\n                memset(to, 0, n);\\r\\n        return n;\\r\\n}\\r\\nstatic inline unsigned long __must_check copy_to_user(void __user *to, const void\\r\\n    *from, unsigned long n)\\r\\n{\\r\\n        if (access_ok(VERIFY_WRITE, to, n))\\r\\n                n = __copy_to_user(to, from, n);\\r\\n        return n;\\r\\n}\\r\\n```\\r\\n\\r\\nI/O\u63a7\u5236\u51fd\u6570\u7684cmd\u53c2\u6570\u4e3a\u4e8b\u5148\u5b9a\u4e49\u7684I/O\u63a7\u5236\u547d\u4ee4\uff0c\u800carg\u4e3a\u5bf9\u5e94\u4e8e\u8be5\u547d\u4ee4\u7684\u53c2\u6570\u3002\u4f8b\u5982\u5bf9\u4e8e\u4e32\u884c\u8bbe\u5907\uff0c\u5982\u679cSET_BAUDRATE\u662f\u4e00\u9053\u8bbe\u7f6e\u6ce2\u7279\u7387\u7684\u547d\u4ee4\uff0c\u90a3\u540e\u9762\u7684arg\u5c31\u5e94\u8be5\u662f\u6ce2\u7279\u7387\u503c\u3002\\r\\n\\r\\n\u5728\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u9700\u8981\u5b9a\u4e49\u4e00\u4e2afile_operations\u7684\u5b9e\u4f8b\uff0c\u5e76\u5c06\u5177\u4f53\u8bbe\u5907\u9a71\u52a8\u7684\u51fd\u6570\u8d4b\u503c\u7ed9file_operations\u7684\u6210\u5458\uff0c\u5982\u4ee3\u7801\u6e05\u53556.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.7\u3000\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6587\u4ef6\u64cd\u4f5c\u7ed3\u6784\u4f53\u6a21\u677f\\r\\n\\r\\n```\\r\\n1struct file_operations xxx_fops = {\\r\\n2     .owner = THIS_MODULE,\\r\\n3     .read = xxx_read,\\r\\n4     .write = xxx_write,\\r\\n5     .unlocked_ioctl= xxx_ioctl,\\r\\n6     ...\\r\\n7};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0xxx_fops\u5728\u4ee3\u7801\u6e05\u53556.5\u7b2c10\u884c\u7684cdev_init\uff08&xxx_dev.cdev\uff0c&xxx_fops\uff09\u7684\u8bed\u53e5\u4e2d\u5efa\u7acb\u4e0ecdev\u7684\u8fde\u63a5\u3002\\r\\n\\r\\n\u56fe6.1\u6240\u793a\u4e3a\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784\u3001\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u5b57\u7b26\u8bbe\u5907\u4ee5\u53ca\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u7528\u6237\u7a7a\u95f4\u8bbf\u95ee\u8be5\u8bbe\u5907\u7684\u7a0b\u5e8f\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\\r\\n\\r\\n![1742913494444](./figure/1742913494444.png)\\r\\n\\r\\n\u56fe6.1\u3000\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.3\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u5206\u5c42\u601d\u60f3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.3\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u5206\u5c42\u601d\u60f3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.3\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u5206\u5c42\u601d\u60f3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.3\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u5206\u5c42\u601d\u60f3.md","title":"12.3.1\u3000\u8bbe\u5907\u9a71\u52a8\u6838\u5fc3\u5c42\u548c\u4f8b\u5316","description":"\u572812.1\u8282\uff0c\u6211\u4eec\u5df2\u7ecf\u4ece\u611f\u6027\u4e0a\u8ba4\u8bc6\u4e86Linux\u9a71\u52a8\u8f6f\u4ef6\u5206\u5c42\u7684\u610f\u4e49\u3002\u5176\u5b9e\uff0c\u5728\u5206\u5c42\u8bbe\u8ba1\u7684\u65f6\u5019\uff0cLinux\u5185\u6838\u5927\u91cf\u4f7f\u7528\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u601d\u60f3\u3002","date":"2025-09-15T14:44:15.041Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":34.545,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"6.1.1\u3000cdev\u7ed3\u6784\u4f53","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.1\u3000Linux\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528"}},"content":"\u572812.1\u8282\uff0c\u6211\u4eec\u5df2\u7ecf\u4ece\u611f\u6027\u4e0a\u8ba4\u8bc6\u4e86Linux\u9a71\u52a8\u8f6f\u4ef6\u5206\u5c42\u7684\u610f\u4e49\u3002\u5176\u5b9e\uff0c\u5728\u5206\u5c42\u8bbe\u8ba1\u7684\u65f6\u5019\uff0cLinux\u5185\u6838\u5927\u91cf\u4f7f\u7528\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u601d\u60f3\u3002\\r\\n\\r\\n\u5728\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u53ef\u4ee5\u4e3a\u67d0\u4e00\u7c7b\u76f8\u4f3c\u7684\u4e8b\u7269\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7c7b\uff0c\u800c\u5177\u4f53\u7684\u4e8b\u7269\u53ef\u4ee5\u7ee7\u627f\u8fd9\u4e2a\u57fa\u7c7b\u4e2d\u7684\u51fd\u6570\u3002\u5982\u679c\u5bf9\u4e8e\u7ee7\u627f\u7684\u8fd9\u4e2a\u4e8b\u7269\u800c\u8a00\uff0c\u67d0\u6210\u5458\u51fd\u6570\u7684\u5b9e\u73b0\u4e0e\u57fa\u7c7b\u4e00\u81f4\uff0c\u90a3\u5b83\u5c31\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\u57fa\u7c7b\u7684\u51fd\u6570\uff1b\u76f8\u53cd\uff0c\u5b83\u4e5f\u53ef\u4ee5\u91cd\u5199\uff08Overriding\uff09\uff0c\u5bf9\u7236\u7c7b\u7684\u51fd\u6570\u8fdb\u884c\u91cd\u65b0\u5b9a\u4e49\u3002\u82e5\u5b50\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4e0e\u7236\u7c7b\u4e2d\u7684\u67d0\u65b9\u6cd5\u5177\u6709\u76f8\u540c\u7684\u65b9\u6cd5\u540d\u3001\u8fd4\u56de\u7c7b\u578b\u548c\u53c2\u6570\u8868\uff0c\u5219\u65b0\u65b9\u6cd5\u5c06\u8986\u76d6\u539f\u6709\u7684\u65b9\u6cd5\u3002\u8fd9\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u201c\u591a\u6001\u201d\u8bbe\u8ba1\u601d\u60f3\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u91cd\u7528\u80fd\u529b\uff0c\u662f\u5bf9\u73b0\u5b9e\u4e16\u754c\u4e2d\u4e8b\u7269\u4e4b\u95f4\u5173\u7cfb\u7684\u4e00\u79cd\u826f\u597d\u5448\u73b0\u3002\\r\\n\\r\\nLinux\u5185\u6838\u5b8c\u5168\u662f\u7531C\u8bed\u8a00\u548c\u6c47\u7f16\u8bed\u8a00\u5199\u6210\uff0c\u4f46\u662f\u5374\u9891\u7e41\u5730\u7528\u5230\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u601d\u60f3\u3002\u5728\u8bbe\u5907\u9a71\u52a8\u65b9\u9762\uff0c\u5f80\u5f80\u4e3a\u540c\u7c7b\u7684\u8bbe\u5907\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u6846\u67b6\uff0c\u800c\u6846\u67b6\u4e2d\u7684\u6838\u5fc3\u5c42\u5219\u5b9e\u73b0\u4e86\u8be5\u8bbe\u5907\u901a\u7528\u7684\u4e00\u4e9b\u529f\u80fd\u3002\u540c\u6837\u7684\uff0c\u5982\u679c\u5177\u4f53\u7684\u8bbe\u5907\u4e0d\u60f3\u4f7f\u7528\u6838\u5fc3\u5c42\u7684\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u91cd\u5199\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\\r\\n\\r\\n```\\r\\nreturn_type core_funca(xxx_device * bottom_dev, param1_type param1, param1_type param2)\\r\\n{\\r\\n    if (bottom_dev->funca)\\r\\n        return bottom_dev->funca(param1, param2);\\r\\n    /* \u6838\u5fc3\u5c42\u901a\u7528\u7684funca\u4ee3\u7801*/\\r\\n    ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u4e0a\u8ff0core_funca\u7684\u5b9e\u73b0\u4e2d\uff0c\u4f1a\u68c0\u67e5\u5e95\u5c42\u8bbe\u5907\u662f\u5426\u91cd\u5199\u4e86funca\uff08\uff09\uff0c\u5982\u679c\u91cd\u5199\u4e86\uff0c\u5c31\u8c03\u7528\u5e95\u5c42\u7684\u4ee3\u7801\uff0c\u5426\u5219\uff0c\u76f4\u63a5\u4f7f\u7528\u901a\u7528\u5c42\u7684\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u6838\u5fc3\u5c42\u7684\u4ee3\u7801\u53ef\u4ee5\u5904\u7406\u7edd\u5927\u591a\u6570\u4e0e\u8be5\u7c7b\u8bbe\u5907\u7684funca\uff08\uff09\u5bf9\u5e94\u7684\u529f\u80fd\uff0c\u53ea\u6709\u5c11\u6570\u7279\u6b8a\u8bbe\u5907\u9700\u8981\u91cd\u65b0\u5b9e\u73b0funca\uff08\uff09\u3002\\r\\n\\r\\n\u518d\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a\\r\\n\\r\\n```\\r\\nreturn_type core_funca(xxx_device * bottom_dev, param1_type param1, param1_type param2)\\r\\n{\\r\\n     /*\u901a\u7528\u7684\u6b65\u9aa4\u4ee3\u7801A */\\r\\n     typea_dev_commonA();\\r\\n     ...\\r\\n     /* \u5e95\u5c42\u64cd\u4f5cops1 */\\r\\n     bottom_dev->funca_ops1();\\r\\n     /*\u901a\u7528\u7684\u6b65\u9aa4\u4ee3\u7801B */\\r\\n     typea_dev_commonB();\\r\\n     ...\\r\\n     /* \u5e95\u5c42\u64cd\u4f5cops2 */\\r\\n     bottom_dev->funca_ops2();\\r\\n     /*\u901a\u7528\u7684\u6b65\u9aa4\u4ee3\u7801C */\\r\\n     typea_dev_commonB();\\r\\n     ...\\r\\n     /** \u5e95\u5c42\u64cd\u4f5cops3*/\\r\\n     bottom_dev->funca_ops3();\\r\\n}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u5047\u5b9a\u4e3a\u4e86\u5b9e\u73b0funca\uff08\uff09\uff0c\u5bf9\u4e8e\u540c\u7c7b\u8bbe\u5907\u800c\u8a00\uff0c\u64cd\u4f5c\u6d41\u7a0b\u4e00\u81f4\uff0c\u90fd\u8981\u7ecf\u8fc7\u201c\u901a\u7528\u4ee3\u7801A\u3001\u5e95\u5c42ops1\u3001\u901a\u7528\u4ee3\u7801B\u3001\u5e95\u5c42ops2\u3001\u901a\u7528\u4ee3\u7801C\u3001\u5e95\u5c42ops3\u201d\u8fd9\u51e0\u6b65\uff0c\u5206\u5c42\u8bbe\u8ba1\u5e26\u6765\u7684\u660e\u663e\u597d\u5904\u662f\uff0c\u5bf9\u4e8e\u901a\u7528\u4ee3\u7801A\u3001B\u3001C\uff0c\u5177\u4f53\u7684\u5e95\u5c42\u9a71\u52a8\u4e0d\u9700\u8981\u518d\u5b9e\u73b0\uff0c\u800c\u4ec5\u4ec5\u53ea\u8981\u5173\u5fc3\u5176\u5e95\u5c42\u7684\u64cd\u4f5cops1\u3001ops2\u3001ops3\u5219\u53ef\u3002\\r\\n\\r\\n\u56fe12.5\u660e\u786e\u53cd\u6620\u4e86\u8bbe\u5907\u9a71\u52a8\u7684\u6838\u5fc3\u5c42\u4e0e\u5177\u4f53\u8bbe\u5907\u9a71\u52a8\u7684\u5173\u7cfb\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u79cd\u5206\u5c42\u53ef\u80fd\u53ea\u6709\u4e24\u5c42\uff08\u89c1\u56fe12.5a\uff09\uff0c\u4e5f\u53ef\u80fd\u662f\u591a\u5c42\u7684\uff08\u56fe12.5b\uff09\u3002\\r\\n\\r\\n![1743910600543](./figure/1743910600543.png)\\r\\n\\r\\n\u56fe12.5\u3000Linux\u8bbe\u5907\u9a71\u52a8\u7684\u5206\u5c42\\r\\n\\r\\n\u8fd9\u6837\u7684\u5206\u5c42\u5316\u8bbe\u8ba1\u5728Linux\u7684input\u3001RTC\u3001MTD\u3001I2 C\u3001SPI\u3001tty\u3001USB\u7b49\u8bf8\u591a\u7c7b\u578b\u8bbe\u5907\u9a71\u52a8\u4e2d\u5c61\u89c1\u4e0d\u9c9c\u3002\u4e0b\u9762\u7684\u51e0\u5c0f\u8282\u4ee5input\u3001RTC\u3001Framebuffer\u7b49\u4e3a\u4f8b\u5148\u8fdb\u884c\u4e00\u756a\u8bb2\u89e3\uff0c\u5f53\u7136\uff0c\u540e\u7eed\u7684\u7ae0\u8282\u4f1a\u5bf9\u4e0e\u51e0\u4e2a\u5927\u7684\u8bbe\u5907\u7c7b\u578b\u5bf9\u5e94\u7684\u9a71\u52a8\u5c42\u6b21\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u5206\u6790\u3002\\r\\n\\r\\n# 12.3.2\u3000\u8f93\u5165\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n\u8f93\u5165\u8bbe\u5907\uff08\u5982\u6309\u952e\u3001\u952e\u76d8\u3001\u89e6\u6478\u5c4f\u3001\u9f20\u6807\u7b49\uff09\u662f\u5178\u578b\u7684\u5b57\u7b26\u8bbe\u5907\uff0c\u5176\u4e00\u822c\u7684\u5de5\u4f5c\u673a\u7406\u662f\u5e95\u5c42\u5728\u6309\u952e\u3001\u89e6\u6478\u7b49\u52a8\u4f5c\u53d1\u9001\u65f6\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\uff08\u6216\u9a71\u52a8\u901a\u8fc7Timer\u5b9a\u65f6\u67e5\u8be2\uff09\uff0c\u7136\u540eCPU\u901a\u8fc7SPI\u3001I2 C\u6216\u5916\u90e8\u5b58\u50a8\u5668\u603b\u7ebf\u8bfb\u53d6\u952e\u503c\u3001\u5750\u6807\u7b49\u6570\u636e\uff0c\u5e76\u5c06\u5b83\u4eec\u653e\u5165\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ba1\u7406\u8be5\u7f13\u51b2\u533a\uff0c\u800c\u9a71\u52a8\u7684read\uff08\uff09\u63a5\u53e3\u8ba9\u7528\u6237\u53ef\u4ee5\u8bfb\u53d6\u952e\u503c\u3001\u5750\u6807\u7b49\u6570\u636e\u3002\\r\\n\\r\\n\u663e\u7136\uff0c\u5728\u8fd9\u4e9b\u5de5\u4f5c\u4e2d\uff0c\u53ea\u662f\u4e2d\u65ad\u3001\u8bfb\u952e\u503c/\u5750\u6807\u503c\u662f\u4e0e\u8bbe\u5907\u76f8\u5173\u7684\uff0c\u800c\u8f93\u5165\u4e8b\u4ef6\u7684\u7f13\u51b2\u533a\u7ba1\u7406\u4ee5\u53ca\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684file_operations\u63a5\u53e3\u5219\u5bf9\u8f93\u5165\u8bbe\u5907\u662f\u901a\u7528\u7684\u3002\u57fa\u4e8e\u6b64\uff0c\u5185\u6838\u8bbe\u8ba1\u4e86\u8f93\u5165\u5b50\u7cfb\u7edf\uff0c\u7531\u6838\u5fc3\u5c42\u5904\u7406\u516c\u5171\u7684\u5de5\u4f5c\u3002Linux\u5185\u6838\u8f93\u5165\u5b50\u7cfb\u7edf\u7684\u6846\u67b6\u5982\u56fe12.6\u6240\u793a\u3002\\r\\n\\r\\n![1743911207521](./figure/1743911207521.png)\\r\\n\\r\\n\u56fe12.6\u3000Linux\u5185\u6838\u8f93\u5165\u5b50\u7cfb\u7edf\u7684\u6846\u67b6\\r\\n\\r\\n\u8f93\u5165\u6838\u5fc3\u63d0\u4f9b\u4e86\u5e95\u5c42\u8f93\u5165\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u6240\u9700\u7684API\uff0c\u5982\u5206\u914d/\u91ca\u653e\u4e00\u4e2a\u8f93\u5165\u8bbe\u5907\uff1a\\r\\n\\r\\n```\\r\\nstruct input_dev *input_allocate_device(void);\\r\\nvoid input_free_device(struct input_dev *dev);\\r\\n```\\r\\n\\r\\ninput_allocate_device\uff08\uff09\u8fd4\u56de\u7684\u662f1\u4e2ainput_dev\u7684\u7ed3\u6784\u4f53\uff0c\u6b64\u7ed3\u6784\u4f53\u7528\u4e8e\u8868\u5f811\u4e2a\u8f93\u5165\u8bbe\u5907\u3002\\r\\n\\r\\n\u6ce8\u518c/\u6ce8\u9500\u8f93\u5165\u8bbe\u5907\u7528\u7684\u63a5\u53e3\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint __must_check input_register_device(struct input_dev *);\\r\\nvoid input_unregister_device(struct input_dev *);\\r\\n```\\r\\n\\r\\n\u62a5\u544a\u8f93\u5165\u4e8b\u4ef6\u7528\u7684\u63a5\u53e3\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n/* \u62a5\u544a\u6307\u5b9atype\u3001code\u7684\u8f93\u5165\u4e8b\u4ef6*/\\r\\nvoid input_event(struct input_dev *dev, unsigned int type, unsigned int code, int value);\\r\\n/* \u62a5\u544a\u952e\u503c*/\\r\\nvoid input_report_key(struct input_dev *dev, unsigned int code, int value);\\r\\n/* \u62a5\u544a\u76f8\u5bf9\u5750\u6807*/\\r\\nvoid input_report_rel(struct input_dev *dev, unsigned int code, int value);\\r\\n/* \u62a5\u544a\u7edd\u5bf9\u5750\u6807 */\\r\\nvoid input_report_abs(struct input_dev *dev, unsigned int code, int value);\\r\\n/* \u62a5\u544a\u540c\u6b65\u4e8b\u4ef6 */\\r\\nvoid input_sync(struct input_dev *dev);\\r\\n```\\r\\n\\r\\n\u800c\u5bf9\u4e8e\u6240\u6709\u7684\u8f93\u5165\u4e8b\u4ef6\uff0c\u5185\u6838\u90fd\u7528\u7edf\u4e00\u7684\u6570\u636e\u7ed3\u6784\u6765\u63cf\u8ff0\uff0c\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u662finput_event\uff0c\u5982\u4ee3\u7801\u6e05\u535512.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.10\u3000input_event\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n1struct input_event {\\r\\n2   struct timeval time;\\r\\n3   __u16type;\\r\\n4   __u16code;\\r\\n5   __s32value;\\r\\n6};\\r\\n```\\r\\n\\r\\ndrivers/input/keyboard/gpio_keys.c\u57fa\u4e8einput\u67b6\u6784\u5b9e\u73b0\u4e86\u4e00\u4e2a\u901a\u7528\u7684GPIO\u6309\u952e\u9a71\u52a8\u3002\u8be5\u9a71\u52a8\u662f\u57fa\u4e8eplatform_driver\u67b6\u6784\u7684\uff0c\u540d\u4e3a\u201cgpio-keys\u201d\u3002\u5b83\u5c06\u4e0e\u786c\u4ef6\u76f8\u5173\u7684\u4fe1\u606f\uff08\u5982\u4f7f\u7528\u7684GPIO\u53f7\uff0c\u6309\u4e0b\u548c\u62ac\u8d77\u65f6\u7684\u7535\u5e73\u7b49\uff09\u5c4f\u853d\u5728\u677f\u6587\u4ef6platform_device\u7684platform_data\u4e2d\uff0c\u56e0\u6b64\u8be5\u9a71\u52a8\u53ef\u5e94\u7528\u4e8e\u5404\u4e2a\u5904\u7406\u5668\uff0c\u5177\u6709\u826f\u597d\u7684\u8de8\u5e73\u53f0\u6027\u3002\u4ee3\u7801\u6e05\u535512.11\u5217\u51fa\u4e86\u8be5\u9a71\u52a8\u7684probe\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.11\u3000GPIO\u6309\u952e\u9a71\u52a8\u7684probe\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int gpio_keys_probe(struct platform_device *pdev)\\r\\n 2{\\r\\n 3 struct device *dev = &pdev->dev;\\r\\n 4 const struct gpio_keys_platform_data *pdata = dev_get_platdata(dev);\\r\\n 5 struct gpio_keys_drvdata *ddata;\\r\\n 6 struct input_dev *input;\\r\\n 7 size_t size;\\r\\n 8 int i, error;\\r\\n 9 int wakeup = 0;\\r\\n10\\r\\n11 if (!pdata) {\\r\\n12     pdata = gpio_keys_get_devtree_pdata(dev);\\r\\n13     if (IS_ERR(pdata))\\r\\n14         return PTR_ERR(pdata);\\r\\n15 }\\r\\n16\\r\\n17 size = sizeof(struct gpio_keys_drvdata) +\\r\\n18         pdata->nbuttons * sizeof(struct gpio_button_data);\\r\\n19 ddata = devm_kzalloc(dev, size, GFP_KERNEL);\\r\\n20 if (!ddata) {\\r\\n21     dev_err(dev, \\"failed to allocate state\\\\n\\");\\r\\n22     return -ENOMEM;\\r\\n23 }\\r\\n24\\r\\n25 input = devm_input_allocate_device(dev);\\r\\n26 if (!input) {\\r\\n27     dev_err(dev, \\"failed to allocate input device\\\\n\\");\\r\\n28     return -ENOMEM;\\r\\n29 }\\r\\n30\\r\\n31 ddata->pdata = pdata;\\r\\n32 ddata->input = input;\\r\\n33 mutex_init(&ddata->disable_lock);\\r\\n34\\r\\n35 platform_set_drvdata(pdev, ddata);\\r\\n36 input_set_drvdata(input, ddata);\\r\\n37\\r\\n38 input->name = pdata->name   : pdev->name;\\r\\n39 input->phys = \\"gpio-keys/input0\\";\\r\\n40 input->dev.parent = &pdev->dev;\\r\\n41 input->open = gpio_keys_open;\\r\\n42 input->close = gpio_keys_close;\\r\\n43\\r\\n44 input->id.bustype = BUS_HOST;\\r\\n45 input->id.vendor = 0x0001;\\r\\n46 input->id.product = 0x0001;\\r\\n47 input->id.version = 0x0100;\\r\\n48\\r\\n49 /* Enable auto repeat feature of Linux input subsystem */\\r\\n50 if (pdata->rep)\\r\\n51     __set_bit(EV_REP, input->evbit);\\r\\n52\\r\\n53 for (i = 0; i < pdata->nbuttons; i++) {\\r\\n54     const struct gpio_keys_button *button = &pdata->buttons[i];\\r\\n55     struct gpio_button_data *bdata = &ddata->data[i];\\r\\n56\\r\\n57     error = gpio_keys_setup_key(pdev, input, bdata, button);\\r\\n58     if (error)\\r\\n59         return error;\\r\\n60\\r\\n61     if (button->wakeup)\\r\\n62         wakeup = 1;\\r\\n63 }\\r\\n64\\r\\n65 error = sysfs_create_group(&pdev->dev.kobj, &gpio_keys_attr_group);\\r\\n66 ...\\r\\n67 error = input_register_device(input);\\r\\n68 ...\\r\\n69}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7684\u7b2c25\u884c\u5206\u914d\u4e861\u4e2a\u8f93\u5165\u8bbe\u5907\uff0c\u7b2c31~47\u884c\u521d\u59cb\u5316\u4e86\u8be5input_dev\u7684\u4e00\u4e9b\u5c5e\u6027\uff0c\u7b2c58\u884c\u6ce8\u518c\u4e86\u8fd9\u4e2a\u8f93\u5165\u8bbe\u5907\u3002\u7b2c53~63\u884c\u5219\u521d\u59cb\u5316\u4e86\u6240\u7528\u5230\u7684GPIO\uff0c\u7b2c67\u884c\u5b8c\u6210\u4e86\u8fd9\u4e2a\u8f93\u5165\u8bbe\u5907\u7684\u6ce8\u518c\u3002\\r\\n\\r\\n\u5728\u6ce8\u518c\u8f93\u5165\u8bbe\u5907\u540e\uff0c\u5e95\u5c42\u8f93\u5165\u8bbe\u5907\u9a71\u52a8\u7684\u6838\u5fc3\u5de5\u4f5c\u53ea\u5269\u4e0b\u5728\u6309\u952e\u3001\u89e6\u6478\u7b49\u4eba\u4e3a\u52a8\u4f5c\u53d1\u751f\u65f6\u62a5\u544a\u4e8b\u4ef6\u3002\u4ee3\u7801\u6e05\u535512.12\u5217\u51fa\u4e86GPIO\u6309\u952e\u4e2d\u65ad\u53d1\u751f\u65f6\u7684\u4e8b\u4ef6\u62a5\u544a\u4ee3\u7801\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.12\u3000GPIO\u6309\u952e\u4e2d\u65ad\u53d1\u751f\u65f6\u7684\u4e8b\u4ef6\u62a5\u544a\\r\\n\\r\\n```\\r\\n 1static irqreturn_t gpio_keys_irq_isr(int irq, void *dev_id)\\r\\n 2{\\r\\n 3 struct gpio_button_data *bdata = dev_id;\\r\\n 4 const struct gpio_keys_button *button = bdata->button;\\r\\n 5 struct input_dev *input = bdata->input;\\r\\n 6 unsigned long flags;\\r\\n 7\\r\\n 8 BUG_ON(irq != bdata->irq);\\r\\n 9\\r\\n10 spin_lock_irqsave(&bdata->lock, flags);\\r\\n11\\r\\n12 if (!bdata->key_pressed) {\\r\\n13     if (bdata->button->wakeup)\\r\\n14         pm_wakeup_event(bdata->input->dev.parent, 0);\\r\\n15\\r\\n16     input_event(input, EV_KEY, button->code, 1);\\r\\n17     input_sync(input);\\r\\n18\\r\\n19     if (!bdata->timer_debounce) {\\r\\n20         input_event(input, EV_KEY, button->code, 0);\\r\\n21         input_sync(input);\\r\\n22         goto out;\\r\\n23     }\\r\\n24\\r\\n25     bdata->key_pressed = true;\\r\\n26 }\\r\\n27\\r\\n28 if (bdata->timer_debounce)\\r\\n29     mod_timer(&bdata->timer,\\r\\n30         jiffies + msecs_to_jiffies(bdata->timer_debounce));\\r\\n31out:\\r\\n32 spin_unlock_irqrestore(&bdata->lock, flags);\\r\\n33 return IRQ_HANDLED;\\r\\n34}\\r\\n```\\r\\n\\r\\nGPIO\u6309\u952e\u9a71\u52a8\u901a\u8fc7input_event\uff08\uff09\u3001input_sync\uff08\uff09\u8fd9\u6837\u7684\u51fd\u6570\u6765\u6c47\u62a5\u6309\u952e\u4e8b\u4ef6\u4ee5\u53ca\u540c\u6b65\u4e8b\u4ef6\u3002\u4ece\u5e95\u5c42\u7684GPIO\u6309\u952e\u9a71\u52a8\u53ef\u4ee5\u770b\u51fa\uff0c\u8be5\u9a71\u52a8\u4e2d\u6ca1\u6709\u4efb\u4f55file_operations\u7684\u52a8\u4f5c\uff0c\u4e5f\u6ca1\u6709\u5404\u79cdI/O\u6a21\u578b\uff0c\u6ce8\u518c\u8fdb\u5165\u7cfb\u7edf\u4e5f\u7528\u7684\u662finput_register_device\uff08\uff09\u8fd9\u6837\u7684\u4e0einput\u76f8\u5173\u7684API\u3002\u8fd9\u662f\u7531\u4e8e\u4e0eLinux VFS\u63a5\u53e3\u7684\u8fd9\u4e00\u90e8\u5206\u4ee3\u7801\u5168\u90e8\u90fd\u5728drivers/input/evdev.c\u4e2d\u5b9e\u73b0\u4e86\uff0c\u4ee3\u7801\u6e05\u535512.13\u6458\u53d6\u4e86\u90e8\u5206\u5173\u952e\u4ee3\u7801\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.13\u3000input\u6838\u5fc3\u5c42\u7684file_operations\u548cread\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static ssize_t evdev_read(struct file *file, char __user *buffer,\\r\\n 2            size_t count, loff_t *ppos)\\r\\n 3{\\r\\n 4 struct evdev_client *client = file->private_data;\\r\\n 5 struct evdev *evdev = client->evdev;\\r\\n 6 struct input_event event;\\r\\n 7 size_t read = 0;\\r\\n 8 int error;\\r\\n 9\\r\\n10 if (count != 0&& count < input_event_size())\\r\\n11     return -EINVAL;\\r\\n12\\r\\n13 for (;;) {\\r\\n14     if (!evdev->exist || client->revoked)\\r\\n15         return -ENODEV;\\r\\n16\\r\\n17     if (client->packet_head == client->tail &&\\r\\n18         (file->f_flags & O_NONBLOCK))\\r\\n19         return -EAGAIN;\\r\\n20\\r\\n21     /*\\r\\n22      * count == 0is special - no IO is done but we check\\r\\n23      * for error conditions (see above).\\r\\n24      */\\r\\n25     if (count == 0)\\r\\n26         break;\\r\\n27\\r\\n28     while (read + input_event_size() <= count &&\\r\\n29            evdev_fetch_next_event(client, &event)) {\\r\\n30\\r\\n31         if (input_event_to_user(buffer + read, &event))\\r\\n32             return -EFAULT;\\r\\n33\\r\\n34         read += input_event_size();\\r\\n35     }\\r\\n36\\r\\n37     if (read)\\r\\n38         break;\\r\\n39\\r\\n40     if (!(file->f_flags & O_NONBLOCK)) {\\r\\n41         error = wait_event_interruptible(evdev->wait,\\r\\n42                 client->packet_head != client->tail ||\\r\\n43                 !evdev->exist || client->revoked);\\r\\n44         if (error)\\r\\n45             return error;\\r\\n46     }\\r\\n47 }\\r\\n48\\r\\n49 return read;\\r\\n50}\\r\\n51\\r\\n52static const struct file_operations evdev_fops = {\\r\\n53 .owner        = THIS_MODULE,\\r\\n54 .read         = evdev_read,\\r\\n55 .write        = evdev_write,\\r\\n56 .pol          = evdev_poll,\\r\\n57 .open         = evdev_open,\\r\\n58 .release      = evdev_release,\\r\\n59 .unlocked_ioct= evdev_ioctl,\\r\\n60#ifdef CONFIG_COMPAT\\r\\n61 .compat_ioct= evdev_ioctl_compat,\\r\\n62#endif\\r\\n63 .fasync        = evdev_fasync,\\r\\n64 .flush         = evdev_flush,\\r\\n65 .llseek        = no_llseek,\\r\\n66};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u768417~19\u884c\u5728\u68c0\u67e5\u51fa\u662f\u975e\u963b\u585e\u8bbf\u95ee\u540e\uff0c\u7acb\u5373\u8fd4\u56deEAGAIN\u9519\u8bef\uff0c\u800c\u7b2c29\u884c\u548c\u7b2c41~43\u884c\u7684\u4ee3\u7801\u5219\u5904\u7406\u4e86\u963b\u585e\u7684\u7761\u7720\u60c5\u51b5\u3002\u56de\u8fc7\u5934\u6765\u60f3\uff0c\u5176\u5b9egpio_keys\u9a71\u52a8\u91cc\u9762\u8c03\u7528\u7684input_event\uff08\uff09\u3001input_sync\uff08\uff09\u6709\u95f4\u63a5\u5524\u9192\u8fd9\u4e2a\u7b49\u5f85\u961f\u5217evdev->wait\u7684\u529f\u80fd\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e9b\u4ee3\u7801\u90fd\u9690\u85cf\u5728\u5176\u5185\u90e8\u5b9e\u73b0\u91cc\u4e86\u3002\\r\\n\\r\\n# 12.3.3\u3000RTC\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\nRTC\uff08\u5b9e\u65f6\u949f\uff09\u501f\u52a9\u7535\u6c60\u4f9b\u7535\uff0c\u5728\u7cfb\u7edf\u6389\u7535\u7684\u60c5\u51b5\u4e0b\u4f9d\u7136\u53ef\u4ee5\u6b63\u5e38\u8ba1\u65f6\u3002\u5b83\u901a\u5e38\u8fd8\u5177\u6709\u4ea7\u751f\u5468\u671f\u6027\u4e2d\u65ad\u4ee5\u53ca\u95f9\u949f\uff08Alarm\uff09\u4e2d\u65ad\u7684\u80fd\u529b\uff0c\u662f\u4e00\u79cd\u5178\u578b\u7684\u5b57\u7b26\u8bbe\u5907\u3002\u4f5c\u4e3a\u4e00\u79cd\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\uff0cRTC\u9700\u8981\u6709file_operations\u4e2d\u63a5\u53e3\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u5982open\uff08\uff09\u3001release\uff08\uff09\u3001read\uff08\uff09\u3001poll\uff08\uff09\u3001ioctl\uff08\uff09\u7b49\uff0c\u800c\u5178\u578b\u7684IOCTL\u5305\u62ecRTC_SET_TIME\u3001RTC_ALM_READ\u3001RTC_ALM_SET\u3001RTC_IRQP_SET\u3001RTC_IRQP_READ\u7b49\uff0c\u8fd9\u4e9b\u5bf9\u4e8e\u6240\u6709\u7684RTC\u662f\u901a\u7528\u7684\uff0c\u53ea\u6709\u5e95\u5c42\u7684\u5177\u4f53\u5b9e\u73b0\u662f\u4e0e\u8bbe\u5907\u76f8\u5173\u7684\u3002\\r\\n\\r\\n\u56e0\u6b64\uff0cdrivers/rtc/rtc-dev.c\u5b9e\u73b0\u4e86RTC\u9a71\u52a8\u901a\u7528\u7684\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u5c42\uff0c\u5b83\u5b9e\u73b0\u4e86file_opearations\u7684\u6210\u5458\u51fd\u6570\u4ee5\u53ca\u4e00\u4e9b\u901a\u7528\u7684\u5173\u4e8eRTC\u7684\u63a7\u5236\u4ee3\u7801\uff0c\u5e76\u5411\u5e95\u5c42\u5bfc\u51fartc_device_register\uff08\uff09\u3001rtc_device_unregister\uff08\uff09\u4ee5\u6ce8\u518c\u548c\u6ce8\u9500RTC\uff1b\u5bfc\u51fartc_class_ops\u7ed3\u6784\u4f53\u4ee5\u63cf\u8ff0\u5e95\u5c42\u7684RTC\u786c\u4ef6\u64cd\u4f5c\u3002\u8fd9\u4e2aRTC\u901a\u7528\u5c42\u5b9e\u73b0\u7684\u7ed3\u679c\u662f\uff0c\u5e95\u5c42\u7684RTC\u9a71\u52a8\u4e0d\u518d\u9700\u8981\u5173\u5fc3RTC\u4f5c\u4e3a\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4e5f\u65e0\u9700\u5173\u5fc3\u4e00\u4e9b\u901a\u7528\u7684RTC\u63a7\u5236\u903b\u8f91\uff0c\u56fe12.7\u8868\u660e\u4e86\u8fd9\u79cd\u5173\u7cfb\u3002\\r\\n\\r\\n![1743911539487](./figure/1743911539487.png)\\r\\n\\r\\n\u56fe12.7\u3000Linux RTC\u8bbe\u5907\u9a71\u52a8\u7684\u5206\u5c42\\r\\n\\r\\ndrivers/rtc/rtc-s3c.c\u5b9e\u73b0\u4e86S3C6410\u7684RTC\u9a71\u52a8\uff0c\u5176\u6ce8\u518cRTC\u4ee5\u53ca\u7ed1\u5b9artc_class_ops\u7684\u4ee3\u7801\u5982\u4ee3\u7801\u6e05\u535512.14\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.14\u3000S3C6410RTC\u9a71\u52a8\u7684rtc_class_ops\u5b9e\u4f8b\u4e0eRTC\u6ce8\u518c\\r\\n\\r\\n```\\r\\n 1static const struct rtc_class_ops s3c_rtcops = {\\r\\n 2 .read_time     = s3c_rtc_gettime,\\r\\n 3 .set_time      = s3c_rtc_settime,\\r\\n 4 .read_alarm    = s3c_rtc_getalarm,\\r\\n 5 .set_alarm     = s3c_rtc_setalarm,\\r\\n 6 .proc          = s3c_rtc_proc,\\r\\n 7 .alarm_irq_enable = s3c_rtc_setaie,\\r\\n 8};\\r\\n 9\\r\\n10static int s3c_rtc_probe(struct platform_device *pdev)\\r\\n11{\\r\\n12 ...\\r\\n13 rtc = devm_rtc_device_register(&pdev->dev, \\"s3c\\", &s3c_rtcops,\\r\\n14               THIS_MODULE);\\r\\n15 ...\\r\\n16}\\r\\n```\\r\\n\\r\\ndrivers/rtc/rtc-dev.c\u4ee5\u53ca\u5176\u8c03\u7528\u7684drivers/rtc/interface.c\u7b49RTC\u6838\u5fc3\u5c42\u76f8\u5f53\u4e8e\u628afile_operations\u4e2d\u7684open\uff08\uff09\u3001release\uff08\uff09\u3001\u8bfb\u53d6\u548c\u8bbe\u7f6e\u65f6\u95f4\u7b49\u90fd\u95f4\u63a5\u201c\u8f6c\u53d1\u201d\u7ed9\u4e86\u5e95\u5c42\u7684\u5b9e\u4f8b\uff0c\u4ee3\u7801\u6e05\u535512.15\u6458\u53d6\u4e86\u90e8\u5206RTC\u6838\u5fc3\u5c42\u8c03\u7528\u5177\u4f53\u5e95\u5c42\u9a71\u52a8callback\u7684\u8fc7\u7a0b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.15\u3000RTC\u6838\u5fc3\u5c42\u201c\u8f6c\u53d1\u201d\u5230\u5e95\u5c42RTC\u9a71\u52a8callback\\r\\n\\r\\n```\\r\\n 1static int rtc_dev_open(struct inode *inode, struct file *file)\\r\\n 2{\\r\\n 3 ...\\r\\n 4 err = ops->open   ops->open(rtc->dev.parent) : 0;\\r\\n 5 ...\\r\\n 6}\\r\\n 7\\r\\n 8static int __rtc_read_time(struct rtc_device *rtc, struct rtc_time *tm)\\r\\n 9{\\r\\n10 int err;\\r\\n11 if (!rtc->ops)\\r\\n12     err = -ENODEV;\\r\\n13 else if (!rtc->ops->read_time)\\r\\n14      err = -EINVAL;\\r\\n15 ...\\r\\n16 return err;\\r\\n17}\\r\\n18\\r\\n19int rtc_read_time(struct rtc_device *rtc, struct rtc_time *tm)\\r\\n20{\\r\\n21 int err;\\r\\n22\\r\\n23 err = mutex_lock_interruptible(&rtc->ops_lock);\\r\\n24 if (err)\\r\\n25     return err;\\r\\n26\\r\\n27 err = __rtc_read_time(rtc, tm);\\r\\n28 mutex_unlock(&rtc->ops_lock);\\r\\n29 return err;\\r\\n30}\\r\\n31\\r\\n32int rtc_set_time(struct rtc_device *rtc, struct rtc_time *tm)\\r\\n33{\\r\\n34 ...\\r\\n35\\r\\n36 if (!rtc->ops)\\r\\n37     err = -ENODEV;\\r\\n38 else if (rtc->ops->set_time)\\r\\n39     err = rtc->ops->set_time(rtc->dev.parent, tm);\\r\\n40 ...\\r\\n41 return err;\\r\\n42}\\r\\n43\\r\\n44static long rtc_dev_ioctl(struct file *file,\\r\\n45     unsigned int cmd, unsigned long arg)\\r\\n46{\\r\\n47 ...\\r\\n48\\r\\n49 case RTC_RD_TIME:\\r\\n50     mutex_unlock(&rtc->ops_lock);\\r\\n51\\r\\n52     err = rtc_read_time(rtc, &tm);\\r\\n53     if (err < 0)\\r\\n54         return err;\\r\\n55\\r\\n56     if (copy_to_user(uarg, &tm, sizeof(tm)))\\r\\n57         err = -EFAULT;\\r\\n58     return err;\\r\\n59\\r\\n60 case RTC_SET_TIME:\\r\\n61     mutex_unlock(&rtc->ops_lock);\\r\\n62\\r\\n63     if (copy_from_user(&tm, uarg, sizeof(tm)))\\r\\n64         return -EFAULT;\\r\\n65\\r\\n66     return rtc_set_time(rtc, &tm);\\r\\n67 ...\\r\\n68}\\r\\n```\\r\\n\\r\\n# 12.3.4\u3000Framebuffer\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\nFramebuffer\uff08\u5e27\u7f13\u51b2\uff09\u662fLinux\u7cfb\u7edf\u4e3a\u663e\u793a\u8bbe\u5907\u63d0\u4f9b\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b83\u5c06\u663e\u793a\u7f13\u51b2\u533a\u62bd\u8c61\uff0c\u5c4f\u853d\u56fe\u50cf\u786c\u4ef6\u7684\u5e95\u5c42\u5dee\u5f02\uff0c\u5141\u8bb8\u4e0a\u5c42\u5e94\u7528\u7a0b\u5e8f\u5728\u56fe\u5f62\u6a21\u5f0f\u4e0b\u76f4\u63a5\u5bf9\u663e\u793a\u7f13\u51b2\u533a\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002\u5bf9\u4e8e\u5e27\u7f13\u51b2\u8bbe\u5907\u800c\u8a00\uff0c\u53ea\u8981\u5728\u663e\u793a\u7f13\u51b2\u533a\u4e2d\u4e0e\u663e\u793a\u70b9\u5bf9\u5e94\u7684\u533a\u57df\u5185\u5199\u5165\u989c\u8272\u503c\uff0c\u5bf9\u5e94\u7684\u989c\u8272\u4f1a\u81ea\u52a8\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u3002\\r\\n\\r\\n\u56fe12.8\u6240\u793a\u4e3aLinux\u5e27\u7f13\u51b2\u8bbe\u5907\u9a71\u52a8\u7684\u4e3b\u8981\u7ed3\u6784\uff0c\u5e27\u7f13\u51b2\u8bbe\u5907\u63d0\u4f9b\u7ed9\u7528\u6237\u7a7a\u95f4\u7684file_operations\u7ed3\u6784\u4f53\u7531drivers/video/fbdev/core/fbmem.c\u4e2d\u7684file_operations\u63d0\u4f9b\uff0c\u800c\u7279\u5b9a\u5e27\u7f13\u51b2\u8bbe\u5907fb_info\u7ed3\u6784\u4f53\u7684\u6ce8\u518c\u3001\u6ce8\u9500\u4ee5\u53ca\u5176\u4e2d\u6210\u5458\u7684\u7ef4\u62a4\uff0c\u5c24\u5176\u662ffb_ops\u4e2d\u6210\u5458\u51fd\u6570\u7684\u5b9e\u73b0\u5219\u7531\u5bf9\u5e94\u7684xxxfb.c\u6587\u4ef6\u5b9e\u73b0\uff0cfb_ops\u4e2d\u7684\u6210\u5458\u51fd\u6570\u6700\u7ec8\u4f1a\u64cd\u4f5cLCD\u63a7\u5236\u5176\u786c\u4ef6\u5bc4\u5b58\u5668\u3002\\r\\n\\r\\n![1743912007495](./figure/1743912007495.png)\\r\\n\\r\\n\u56fe12.8\u3000Linux\u5e27\u7f13\u51b2\u8bbe\u5907\u9a71\u52a8\u7684\u7a0b\u5e8f\u7ed3\u6784\\r\\n\\r\\n\u591a\u6570\u663e\u5b58\u7684\u64cd\u4f5c\u65b9\u6cd5\u90fd\u662f\u89c4\u8303\u7684\uff0c\u53ef\u4ee5\u6309\u7167\u50cf\u7d20\u70b9\u683c\u5f0f\u7684\u8981\u6c42\u987a\u5e8f\u5199\u5e27\u7f13\u51b2\u533a\u3002\u4f46\u662f\u6709\u5c11\u91cfLCD\u7684\u663e\u5b58\u5199\u6cd5\u53ef\u80fd\u6bd4\u8f83\u7279\u6b8a\uff0c\u8fd9\u65f6\u5019\uff0c\u5728\u6838\u5fc3\u5c42drivers/video/fbdev/core/fbmem.c\u5b9e\u73b0\u7684fb_write\uff08\uff09\u4e2d\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7ed9\u5e95\u5c42\u63d0\u4f9b\u4e00\u4e2a\u91cd\u5199\u81ea\u5df1\u7684\u673a\u4f1a\uff0c\u5982\u4ee3\u7801\u6e05\u535512.16\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.16\u3000LCD\u7684framebuffer write\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static ssize_t\\r\\n 2fb_write(struct file *file, const char __user *buf, size_t count, loff_t *ppos)\\r\\n 3{\\r\\n 4 unsigned long p = *ppos;\\r\\n 5 struct fb_info *info = file_fb_info(file);\\r\\n 6 u8*buffer, *src;\\r\\n 7 u8__iomem *dst;\\r\\n 8 int c, cnt = 0, err = 0;\\r\\n 9 unsigned long total_size;\\r\\n10\\r\\n11 if (!info || !info->screen_base)\\r\\n12     return -ENODEV;\\r\\n13\\r\\n14 if (info->state != FBINFO_STATE_RUNNING)\\r\\n15     return -EPERM;\\r\\n16\\r\\n17 if (info->fbops->fb_write)\\r\\n18     return info->fbops->fb_write(info, buf, count, ppos);\\r\\n19\\r\\n20 total_size = info->screen_size;\\r\\n21\\r\\n22 if (total_size == 0)\\r\\n23     total_size = info->fix.smem_len;\\r\\n24\\r\\n25 if (p > total_size)\\r\\n26     return -EFBIG;\\r\\n27\\r\\n28 if (count > total_size) {\\r\\n29     err = -EFBIG;\\r\\n30     count = total_size;\\r\\n31 }\\r\\n32\\r\\n33 if (count + p > total_size) {\\r\\n34     if (!err)\\r\\n35         err = -ENOSPC;\\r\\n36\\r\\n37     count = total_size - p;\\r\\n38 }\\r\\n39\\r\\n40 buffer = kmalloc((count > PAGE_SIZE)   PAGE_SIZE : count,\\r\\n41          GFP_KERNEL);\\r\\n42 if (!buffer)\\r\\n43     return -ENOMEM;\\r\\n44\\r\\n45 dst = (u8__iomem *) (info->screen_base + p);\\r\\n46\\r\\n47 if (info->fbops->fb_sync)\\r\\n48     info->fbops->fb_sync(info);\\r\\n49\\r\\n50 while (count) {\\r\\n51     c = (count > PAGE_SIZE)   PAGE_SIZE : count;\\r\\n52     src = buffer;\\r\\n53\\r\\n54     if (copy_from_user(src, buf, c)) {\\r\\n55         err = -EFAULT;\\r\\n56         break;\\r\\n57     }\\r\\n58\\r\\n59     fb_memcpy_tofb(dst, src, c);\\r\\n60     dst += c;\\r\\n61     src += c;\\r\\n62     *ppos += c;\\r\\n63     buf += c;\\r\\n64     cnt += c;\\r\\n65     count -= c;\\r\\n66 }\\r\\n67\\r\\n68 kfree(buffer);\\r\\n69\\r\\n70 return (cnt)   cnt : err;\\r\\n71}\\r\\n```\\r\\n\\r\\n\u7b2c17~18\u884c\u662f\u4e00\u4e2a\u68c0\u67e5\u5e95\u5c42LCD\u6709\u6ca1\u6709\u5b9e\u73b0\u81ea\u5df1\u7279\u6b8a\u663e\u5b58\u5199\u6cd5\u7684\u4ee3\u7801\uff0c\u5982\u679c\u6709\uff0c\u76f4\u63a5\u8c03\u5e95\u5c42\u7684\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u7528\u4e2d\u95f4\u5c42\u6807\u51c6\u7684\u663e\u5b58\u5199\u6cd5\u5c31\u641e\u5b9a\u4e86\u5e95\u5c42\u7684\u90a3\u4e2a\u4e0d\u7279\u6b8a\u7684LCD\u3002\\r\\n\\r\\n# 12.3.5\u3000\u7ec8\u7aef\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u7ec8\u7aef\u662f\u4e00\u79cd\u5b57\u7b26\u578b\u8bbe\u5907\uff0c\u5b83\u6709\u591a\u79cd\u7c7b\u578b\uff0c\u901a\u5e38\u4f7f\u7528tty\uff08Teletype\uff09\u6765\u7b80\u79f0\u5404\u79cd\u7c7b\u578b\u7684\u7ec8\u7aef\u8bbe\u5907\u3002\u5bf9\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u800c\u8a00\uff0c\u6700\u666e\u904d\u91c7\u7528\u7684\u662fUART\uff08Universal Asynchronous Receiver/Transmitter\uff09\u4e32\u884c\u7aef\u53e3\uff0c\u65e5\u5e38\u751f\u6d3b\u4e2d\u7b80\u79f0\u4e32\u53e3\u3002\\r\\n\\r\\nLinux\u5185\u6838\u4e2dtty\u7684\u5c42\u6b21\u7ed3\u6784\u5982\u56fe12.9\u6240\u793a\uff0c\u5b83\u5305\u542btty\u6838\u5fc3tty_io.c\u3001tty\u7ebf\u8def\u89c4\u7a0bn_tty.c\uff08\u5b9e\u73b0N_TTY\u7ebf\u8def\u89c4\u7a0b\uff09\u548ctty\u9a71\u52a8\u5b9e\u4f8bxxx_tty.c\uff0ctty\u7ebf\u8def\u89c4\u7a0b\u7684\u5de5\u4f5c\u662f\u4ee5\u7279\u6b8a\u7684\u65b9\u5f0f\u683c\u5f0f\u5316\u4ece\u4e00\u4e2a\u7528\u6237\u6216\u8005\u786c\u4ef6\u6536\u5230\u7684\u6570\u636e\uff0c\u8fd9\u79cd\u683c\u5f0f\u5316\u5e38\u5e38\u91c7\u7528\u4e00\u4e2a\u534f\u8bae\u8f6c\u6362\u7684\u5f62\u5f0f\u3002\\r\\n\\r\\ntty_io.c\u672c\u8eab\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\uff0c\u5b83\u5bf9\u4e0a\u6709\u5b57\u7b26\u8bbe\u5907\u7684\u804c\u8d23\uff0c\u5b9e\u73b0file_operations\u6210\u5458\u51fd\u6570\u3002\u4f46\u662ftty\u6838\u5fc3\u5c42\u5bf9\u4e0b\u53c8\u5b9a\u4e49\u4e86tty_driver\u7684\u67b6\u6784\uff0c\u8fd9\u6837tty\u8bbe\u5907\u9a71\u52a8\u7684\u4e3b\u4f53\u5de5\u4f5c\u5c31\u53d8\u6210\u4e86\u586b\u5145tty_driver\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\uff0c\u5b9e\u73b0\u5176\u4e2d\u7684tty_operations\u7684\u6210\u5458\u51fd\u6570\uff0c\u800c\u4e0d\u518d\u662f\u53bb\u5b9e\u73b0file_operations\u8fd9\u4e00\u7ea7\u7684\u5de5\u4f5c\u3002tty_driver\u7ed3\u6784\u4f53\u548ctty_operations\u7684\u5b9a\u4e49\u5206\u522b\u5982\u4ee3\u7801\u6e05\u535512.17\u548c12.18\u6240\u793a\u3002\\r\\n\\r\\n![1743912094969](./figure/1743912094969.png)\\r\\n\\r\\n\u56fe12.9\u3000Linux\u5185\u6838\u4e2dtty\u7684\u5c42\u6b21\u7ed3\u6784\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.17\u3000tty_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct tty_driver {\\r\\n 2      int     magic;                  /* magic number for this structure */\\r\\n 3      struct kref kref;               /* Reference management */\\r\\n 4      struct cdev *cdevs;\\r\\n 5      struct module   *owner;\\r\\n 6      const char      *driver_name;\\r\\n 7      const char      *name;\\r\\n 8      int     name_base;              /* offset of printed name */\\r\\n 9      int     major;                  /* major device number */\\r\\n10      int     minor_start;            /* start of minor device number */\\r\\n11      unsigned int    num;            /* number of devices allocated */\\r\\n12      short   type;                   /* type of tty driver */\\r\\n13      short   subtype;                /* subtype of tty driver */\\r\\n14      struct ktermios init_termios;   /* Initial termios */\\r\\n15      unsigned long   flags;          /* tty driver flags */\\r\\n16      struct proc_dir_entry *proc_entry;   /* /proc fs entry */\\r\\n17      struct tty_driver *other;       /* only used for the PTY driver */\\r\\n18\\r\\n19      /*\\r\\n20       * Pointer to the tty data structures\\r\\n21       */\\r\\n22      struct tty_struct **ttys;\\r\\n23      struct tty_port **ports;\\r\\n24      struct ktermios **termios;\\r\\n25      void *driver_state;\\r\\n26\\r\\n27      /*\\r\\n28       * Driver methods\\r\\n29       */\\r\\n30\\r\\n31      const struct tty_operations *ops;\\r\\n32      struct list_head tty_drivers;\\r\\n33};\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.18\u3000tty_operations\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct tty_operations {\\r\\n 2 struct tty_struct * (*lookup)(struct tty_driver *driver,\\r\\n 3          struct inode *inode, int idx);\\r\\n 4 int  (*install)(struct tty_driver *driver, struct tty_struct *tty);\\r\\n 5 void (*remove)(struct tty_driver *driver, struct tty_struct *tty);\\r\\n 6 int  (*open)(struct tty_struct * tty, struct file * filp);\\r\\n 7 void (*close)(struct tty_struct * tty, struct file * filp);\\r\\n 8 void (*shutdown)(struct tty_struct *tty);\\r\\n 9 void (*cleanup)(struct tty_struct *tty);\\r\\n10 int  (*write)(struct tty_struct * tty,\\r\\n11           const unsigned char *buf, int count);\\r\\n12 int  (*put_char)(struct tty_struct *tty, unsigned char ch);\\r\\n13 void (*flush_chars)(struct tty_struct *tty);\\r\\n14 int  (*write_room)(struct tty_struct *tty);\\r\\n15 int  (*chars_in_buffer)(struct tty_struct *tty);\\r\\n16 int  (*ioctl)(struct tty_struct *tty,\\r\\n17         unsigned int cmd, unsigned long arg);\\r\\n18 long (*compat_ioctl)(struct tty_struct *tty,\\r\\n19                 unsigned int cmd, unsigned long arg);\\r\\n20 void (*set_termios)(struct tty_struct *tty, struct ktermios * old);\\r\\n21 void (*throttle)(struct tty_struct * tty);\\r\\n22 void (*unthrottle)(struct tty_struct * tty);\\r\\n23 void (*stop)(struct tty_struct *tty);\\r\\n24 void (*start)(struct tty_struct *tty);\\r\\n25 void (*hangup)(struct tty_struct *tty);\\r\\n26 int (*break_ctl)(struct tty_struct *tty, int state);\\r\\n27 void (*flush_buffer)(struct tty_struct *tty);\\r\\n28 void (*set_ldisc)(struct tty_struct *tty);\\r\\n29 void (*wait_until_sent)(struct tty_struct *tty, int timeout);\\r\\n30 void (*send_xchar)(struct tty_struct *tty, char ch);\\r\\n31 int (*tiocmget)(struct tty_struct *tty);\\r\\n32 int (*tiocmset)(struct tty_struct *tty,\\r\\n33         unsigned int set, unsigned int clear);\\r\\n34 int (*resize)(struct tty_struct *tty, struct winsize *ws);\\r\\n35 int (*set_termiox)(struct tty_struct *tty, struct termiox *tnew);\\r\\n36 int (*get_icount)(struct tty_struct *tty,\\r\\n37             struct serial_icounter_struct *icount);\\r\\n38#ifdef CONFIG_CONSOLE_POLL\\r\\n39 int (*poll_init)(struct tty_driver *driver, int line, char *options);\\r\\n40 int (*poll_get_char)(struct tty_driver *driver, int line);\\r\\n41 void (*poll_put_char)(struct tty_driver *driver, int line, char ch);\\r\\n42#endif\\r\\n43 const struct file_operations *proc_fops;\\r\\n44};\\r\\n```\\r\\n\\r\\n\u5982\u56fe12.10\u6240\u793a\uff0ctty\u8bbe\u5907\u53d1\u9001\u6570\u636e\u7684\u6d41\u7a0b\u4e3a\uff1atty\u6838\u5fc3\u4ece\u4e00\u4e2a\u7528\u6237\u83b7\u53d6\u5c06\u8981\u53d1\u9001\u7ed9\u4e00\u4e2atty\u8bbe\u5907\u7684\u6570\u636e\uff0ctty\u6838\u5fc3\u5c06\u6570\u636e\u4f20\u9012\u7ed9tty\u7ebf\u8def\u89c4\u7a0b\u9a71\u52a8\uff0c\u63a5\u7740\u6570\u636e\u88ab\u4f20\u9012\u5230tty\u9a71\u52a8\uff0ctty\u9a71\u52a8\u5c06\u6570\u636e\u8f6c\u6362\u4e3a\u53ef\u4ee5\u53d1\u9001\u7ed9\u786c\u4ef6\u7684\u683c\u5f0f\u3002\u63a5\u6536\u6570\u636e\u7684\u6d41\u7a0b\u4e3a\uff1a\u4ecetty\u786c\u4ef6\u63a5\u6536\u5230\u7684\u6570\u636e\u5411\u4e0a\u4ea4\u7ed9tty\u9a71\u52a8\uff0c\u63a5\u7740\u8fdb\u5165tty\u7ebf\u8def\u89c4\u7a0b\u9a71\u52a8\uff0c\u518d\u8fdb\u5165tty\u6838\u5fc3\uff0c\u5728\u8fd9\u91cc\u5b83\u88ab\u4e00\u4e2a\u7528\u6237\u83b7\u53d6\u3002\\r\\n\\r\\n![1743949417804](./figure/1743949417804.png)\\r\\n\\r\\n\u56fe12.10\u3000tty\u8bbe\u5907\u53d1\u9001\u3001\u63a5\u6536\u6570\u636e\u6d41\u7684\u6d41\u7a0b\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.18\u4e2d\u7b2c10\u884c\u7684tty_driver\u64cd\u4f5c\u96c6tty_operations\u7684\u6210\u5458\u51fd\u6570write\uff08\uff09\u51fd\u6570\u63a5\u65363\u4e2a\u53c2\u6570\uff1atty_struct\u3001\u53d1\u9001\u6570\u636e\u6307\u9488\u53ca\u8981\u53d1\u9001\u7684\u5b57\u8282\u6570\u3002\u8be5\u51fd\u6570\u662f\u88abfile_operations\u7684write\uff08\uff09\u6210\u5458\u51fd\u6570\u95f4\u63a5\u89e6\u53d1\u8c03\u7528\u7684\u3002\u4ece\u63a5\u6536\u89d2\u5ea6\u770b\uff0ctty\u9a71\u52a8\u4e00\u822c\u6536\u5230\u5b57\u7b26\u540e\u4f1a\u901a\u8fc7tty_flip_buffer_push\uff08\uff09\u5c06\u63a5\u6536\u7f13\u51b2\u533a\u63a8\u5230\u7ebf\u8def\u89c4\u7a0b\u3002\\r\\n\\r\\n\u5c3d\u7ba1\u4e00\u4e2a\u7279\u5b9a\u7684\u5e95\u5c42UART\u8bbe\u5907\u9a71\u52a8\u5b8c\u5168\u53ef\u4ee5\u9075\u5faa\u4e0a\u8ff0tty_driver\u7684\u65b9\u6cd5\u6765\u8bbe\u8ba1\uff0c\u5373\u5b9a\u4e49tty_driver\u5e76\u5b9e\u73b0tty_operations\u4e2d\u7684\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u9274\u4e8e\u4e32\u53e3\u4e4b\u95f4\u7684\u5171\u6027\uff0cLinux\u8003\u8651\u5728\u6587\u4ef6drivers/tty/serial/serial_core.c\u4e2d\u5b9e\u73b0\u4e86UART\u8bbe\u5907\u7684\u901a\u7528tty\u9a71\u52a8\u5c42\uff08\u6211\u4eec\u53ef\u4ee5\u79f0\u5176\u4e3a\u4e32\u53e3\u6838\u5fc3\u5c42\uff09\u3002\u8fd9\u6837\uff0cUART\u9a71\u52a8\u7684\u4e3b\u8981\u4efb\u52a1\u5c31\u8fdb\u4e00\u6b65\u6f14\u53d8\u6210\u4e86\u5b9e\u73b0serial-core.c\u4e2d\u5b9a\u4e49\u7684\u4e00\u7ec4uart_xxx\u63a5\u53e3\u800c\u4e0d\u662ftty_xxx\u63a5\u53e3\uff0c\u5982\u56fe12.11\u6240\u793a\u3002\u56e0\u6b64\uff0c\u6309\u7167\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\uff0c\u53ef\u4ee5\u8ba4\u4e3atty_driver\u662f\u5b57\u7b26\u8bbe\u5907\u7684\u6cdb\u5316\u3001serial-core\u662ftty_driver\u7684\u6cdb\u5316\uff0c\u800c\u5177\u4f53\u7684\u4e32\u53e3\u9a71\u52a8\u53c8\u662fserial-core\u7684\u6cdb\u5316\u3002\\r\\n\\r\\n![1743949470945](./figure/1743949470945.png)\\r\\n\\r\\n\u56fe12.11\u3000\u4e32\u53e3\u6838\u5fc3\u5c42\\r\\n\\r\\n\u4e32\u53e3\u6838\u5fc3\u5c42\u53c8\u5b9a\u4e49\u4e86\u65b0\u7684uart_driver\u7ed3\u6784\u4f53\u548c\u5176\u64cd\u4f5c\u96c6uart_ops\u3002\u4e00\u4e2a\u5e95\u5c42\u7684UART\u9a71\u52a8\u9700\u8981\u521b\u5efa\u548c\u901a\u8fc7uart_register_driver\uff08\uff09\u6ce8\u518c\u4e00\u4e2auart_driver\u800c\u4e0d\u662ftty_driver\uff0c\u4ee3\u7801\u6e05\u535512.19\u7ed9\u51fa\u4e86uart_driver\u7684\u5b9a\u4e49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.19\u3000uart_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct uart_driver {\\r\\n 2      struct module           *owner;\\r\\n 3      const char              *driver_name;\\r\\n 4      const char              *dev_name;\\r\\n 5      int                      major;\\r\\n 6      int                      minor;\\r\\n 7      int                      nr;\\r\\n 8      struct console          *cons;\\r\\n 9\\r\\n10      /*\\r\\n11       * these are private; the low level driver should not\\r\\n12       * touch these; they should be initialised to NULL\\r\\n13       */\\r\\n14      struct uart_state       *state;\\r\\n15      struct tty_driver       *tty_driver;\\r\\n16};\\r\\n```\\r\\n\\r\\nuart_driver\u7ed3\u6784\u4f53\u5728\u672c\u8d28\u4e0a\u662f\u6d3e\u751f\u81eauart_driver\u7ed3\u6784\u4f53\uff0c\u56e0\u6b64\uff0c\u5b83\u7684\u7b2c15\u884c\u4e5f\u5305\u542b\u4e86\u4e00\u4e2atty_driver\u7ed3\u6784\u4f53\u6210\u5458\u3002tty_operations\u5728UART\u8fd9\u4e2a\u5c42\u9762\u4e0a\u4e5f\u88ab\u8fdb\u4e00\u6b65\u6cdb\u5316\u4e3a\u4e86uart_ops\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535512.20\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.20\u3000uart_ops\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct uart_ops {\\r\\n 2 unsigned int    (*tx_empty)(struct uart_port *);\\r\\n 3 void        (*set_mctrl)(struct uart_port *, unsigned int mctrl);\\r\\n 4 unsigned int    (*get_mctrl)(struct uart_port *);\\r\\n 5 void        (*stop_tx)(struct uart_port *);\\r\\n 6 void        (*start_tx)(struct uart_port *);\\r\\n 7 void        (*throttle)(struct uart_port *);\\r\\n 8 void        (*unthrottle)(struct uart_port *);\\r\\n 9 void        (*send_xchar)(struct uart_port *, char ch);\\r\\n10 void        (*stop_rx)(struct uart_port *);\\r\\n11 void        (*enable_ms)(struct uart_port *);\\r\\n12 void        (*break_ctl)(struct uart_port *, int ctl);\\r\\n13 int         (*startup)(struct uart_port *);\\r\\n14 void        (*shutdown)(struct uart_port *);\\r\\n15 void        (*flush_buffer)(struct uart_port *);\\r\\n16 void        (*set_termios)(struct uart_port *, struct ktermios *new,\\r\\n17                    struct ktermios *old);\\r\\n18 void        (*set_ldisc)(struct uart_port *, struct ktermios *);\\r\\n19 void        (*pm)(struct uart_port *, unsigned int state,\\r\\n20               unsigned int oldstate);\\r\\n21\\r\\n22 const char    *(*type)(struct uart_port *);\\r\\n23\\r\\n24 void        (*release_port)(struct uart_port *);\\r\\n25\\r\\n26 int         (*request_port)(struct uart_port *);\\r\\n27 void        (*config_port)(struct uart_port *, int);\\r\\n28 int         (*verify_port)(struct uart_port *, struct serial_struct *);\\r\\n29 int         (*ioctl)(struct uart_port *, unsigned int, unsigned long);\\r\\n30#ifdef CONFIG_CONSOLE_POLL\\r\\n31 int         (*poll_init)(struct uart_port *);\\r\\n32 void        (*poll_put_char)(struct uart_port *, unsigned char);\\r\\n33 int         (*poll_get_char)(struct uart_port *);\\r\\n34#endif\\r\\n35};\\r\\n```\\r\\n\\r\\n\u7531\u4e8edrivers/tty/serial/serial_core.c\u662f\u4e00\u4e2atty_driver\uff0c\u56e0\u6b64\u5728serial_core.c\u4e2d\uff0c\u5b58\u5728\u4e00\u4e2atty_operations\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u6210\u5458\u51fd\u6570\u4f1a\u8fdb\u4e00\u6b65\u8c03\u7528struct uart_ops\u7684\u6210\u5458\u51fd\u6570\uff0c\u8fd9\u6837\u5c31\u628afile_operations\u91cc\u7684\u6210\u5458\u51fd\u6570\u3001tty_operations\u7684\u6210\u5458\u51fd\u6570\u548cuart_ops\u7684\u6210\u5458\u51fd\u6570\u4e32\u8d77\u6765\u4e86\u3002\\r\\n\\r\\n# 12.3.6\u3000misc\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n\u7531\u4e8eLinux\u9a71\u52a8\u503e\u5411\u4e8e\u5206\u5c42\u8bbe\u8ba1\uff0c\u6240\u4ee5\u5404\u4e2a\u5177\u4f53\u7684\u8bbe\u5907\u90fd\u53ef\u4ee5\u627e\u5230\u5b83\u5f52\u5c5e\u7684\u7c7b\u578b\uff0c\u4ece\u800c\u5957\u5230\u5b83\u76f8\u5e94\u7684\u67b6\u6784\u91cc\u9762\u53bb\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u5b9e\u73b0\u6700\u5e95\u5c42\u7684\u90a3\u4e00\u90e8\u5206\u3002\u4f46\u662f\uff0c\u4e5f\u6709\u90e8\u5206\u7c7b\u4f3cglobalmem\u3001globalfifo\u7684\u5b57\u7b26\u8bbe\u5907\uff0c\u786e\u5b9e\u4e0d\u77e5\u9053\u5b83\u5c5e\u4e8e\u4ec0\u4e48\u7c7b\u578b\uff0c\u6211\u4eec\u4e00\u822c\u63a8\u8350\u5927\u5bb6\u91c7\u7528miscdevice\u6846\u67b6\u7ed3\u6784\u3002miscdevice\u672c\u8d28\u4e0a\u4e5f\u662f\u5b57\u7b26\u8bbe\u5907\uff0c\u53ea\u662f\u5728miscdevice\u6838\u5fc3\u5c42\u7684misc_init\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u901a\u8fc7register_chrdev\uff08MISC_MAJOR\uff0c\\"misc\\"\uff0c&misc_fops\uff09\u6ce8\u518c\u4e86\u5b57\u7b26\u8bbe\u5907\uff0c\u800c\u5177\u4f53miscdevice\u5b9e\u4f8b\u8c03\u7528misc_register\uff08\uff09\u7684\u65f6\u5019\u53c8\u81ea\u52a8\u5b8c\u6210\u4e86device_create\uff08\uff09\u3001\u83b7\u53d6\u52a8\u6001\u6b21\u8bbe\u5907\u53f7\u7684\u52a8\u4f5c\u3002\\r\\n\\r\\nmiscdevice\u7684\u4e3b\u8bbe\u5907\u53f7\u662f\u56fa\u5b9a\u7684\uff0cMISC_MAJOR\u5b9a\u4e49\u4e3a10\uff0c\u5728Linux\u5185\u6838\u4e2d\uff0c\u5927\u6982\u53ef\u4ee5\u627e\u5230200\u591a\u5904\u4f7f\u7528miscdevice\u6846\u67b6\u7ed3\u6784\u7684\u9a71\u52a8\u3002\\r\\n\\r\\nmiscdevice\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535512.21\u6240\u793a\uff0c\u5728\u5b83\u7684\u7b2c4\u884c\uff0c\u6307\u5411\u4e86\u4e00\u4e2afile_operations\u7684\u7ed3\u6784\u4f53\u3002miscdevice\u7ed3\u6784\u4f53\u5185file_operations\u4e2d\u7684\u6210\u5458\u51fd\u6570\u5b9e\u9645\u4e0a\u662f\u7531drivers/char/misc.c\u4e2dmisc\u9a71\u52a8\u6838\u5fc3\u5c42\u7684misc_fops\u6210\u5458\u51fd\u6570\u95f4\u63a5\u8c03\u7528\u7684\uff0c\u6bd4\u5982misc_open\uff08\uff09\u5c31\u4f1a\u95f4\u63a5\u8c03\u7528\u5e95\u5c42\u6ce8\u518c\u7684miscdevice\u7684fops->open\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.21\u3000miscdevice\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct miscdevice  {\\r\\n 2      int minor;\\r\\n 3      const char *name;\\r\\n 4      const struct file_operations *fops;\\r\\n 5      struct list_head list;\\r\\n 6      struct device *parent;\\r\\n 7      struct device *this_device;\\r\\n 8      const char *nodename;\\r\\n 9      umode_t mode;\\r\\n10};\\r\\n```\\r\\n\\r\\n\u5982\u679c\u4e0a\u8ff0\u4ee3\u7801\u7b2c2\u884c\u7684minor\u4e3aMISC_DYNAMIC_MINOR\uff0cmiscdevice\u6838\u5fc3\u5c42\u4f1a\u81ea\u52a8\u627e\u4e00\u4e2a\u7a7a\u95f2\u7684\u6b21\u8bbe\u5907\u53f7\uff0c\u5426\u5219\u7528minor\u6307\u5b9a\u7684\u6b21\u8bbe\u5907\u53f7\u3002\u7b2c3\u884c\u7684name\u662f\u8bbe\u5907\u7684\u540d\u79f0\u3002\\r\\n\\r\\nmiscdevice\u9a71\u52a8\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u5206\u522b\u7528\u4e0b\u9762\u4e24\u4e2aAPI\\r\\n\\r\\n```\\r\\nint misc_register(struct miscdevice * misc);\\r\\nint misc_deregister(struct miscdevice *misc);\\r\\n```\\r\\n\\r\\n\u56e0\u6b64miscdevice\u9a71\u52a8\u7684\u4e00\u822c\u7ed3\u6784\u5f62\u5982\uff1a\\r\\n\\r\\n```\\r\\nstatic const struct file_operations xxx_fops = {\\r\\n       .unlocked_ioctl = xxx_ioctl,\\r\\n       .mmap           = xxx_mmap,\\r\\n            \u2026\\r\\n};\\r\\nstatic struct miscdevice xxx_dev = {\\r\\n       .minor  = MISC_DYNAMIC_MINOR,\\r\\n       .name   = \\"xxx\\",\\r\\n       .fops   = &xxx_fops\\r\\n};\\r\\nstatic int __init xxx_init(void)\\r\\n{\\r\\n       pr_info(\\"ARC Hostlink driver mmap at 0x%p\\\\n\\", __HOSTLINK__);\\r\\n       return misc_register(&xxx_dev);\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u8c03\u7528misc_register\uff08&xxx_dev\uff09\u65f6\uff0c\u8be5\u51fd\u6570\u5185\u90e8\u4f1a\u81ea\u52a8\u8c03\u7528device_create\uff08\uff09\uff0c\u800cdevice_create\uff08\uff09\u4f1a\u4ee5xxx_dev\u4f5c\u4e3adrvdata\u53c2\u6570\u3002\u5176\u6b21\uff0c\u5728miscdevice\u6838\u5fc3\u5c42misc_open\uff08\uff09\u51fd\u6570\u7684\u5e2e\u52a9\u4e0b\uff0c\u5728file_operations\u7684\u6210\u5458\u51fd\u6570\u4e2d\uff0cxxx_dev\u4f1a\u81ea\u52a8\u6210\u4e3afile\u7684private_data\uff08misc_open\u4f1a\u5b8c\u6210file->private_data\u7684\u8d4b\u503c\u64cd\u4f5c\uff09\u3002\\r\\n\\r\\n\u5982\u679c\u6211\u4eec\u7528\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u601d\u60f3\u628a\u4e00\u4e2a\u8bbe\u5907\u7684\u5c5e\u6027\u3001\u81ea\u65cb\u9501\u3001\u4e92\u65a5\u4f53\u3001\u7b49\u5f85\u961f\u5217\u3001miscdevice\u7b49\u5c01\u88c5\u5728\u4e00\u4e2a\u7ed3\u6784\u4f53\u91cc\u9762\uff1a\\r\\n\\r\\n```\\r\\nstruct xxx_dev {\\r\\n     unsigned int version;\\r\\n     unsigned int size;\\r\\n     spinlock_t lock;\\r\\n    ...\\r\\n    struct miscdevice miscdev;\\r\\n};\\r\\n```\\r\\n\\r\\n\u5728file_operations\u7684\u6210\u5458\u51fd\u6570\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7container_of\uff08\uff09\u548cfile->private_data\u53cd\u63a8\u51faxxx_dev\u7684\u5b9e\u4f8b\u3002\\r\\n\\r\\n```\\r\\nstatic long xxx_ioctl(struct file *file, unsigned int cmd, unsigned long arg)\\r\\n {\\r\\n    struct xxx_dev *xxx = container_of(file->private_data,\\r\\n                struct xxx_dev, miscdev);\\r\\n    ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u6211\u4eec\u628aglobalfifo\u9a71\u52a8\u6539\u9020\u6210\u57fa\u4e8eplatform_driver\u4e14\u91c7\u7528miscdevice\u6846\u67b6\u7684\u7ed3\u6784\u4f53\u3002\u9996\u5148\u8fd9\u4e2a\u65b0\u7684\u9a71\u52a8\u53d8\u6210\u4e86\u8981\u901a\u8fc7platform_driver\u7684probe\uff08\uff09\u51fd\u6570\u6765\u521d\u59cb\u5316\uff0c\u5176\u6b21\u4e0d\u518d\u76f4\u63a5\u91c7\u7528register_chrdev\uff08\uff09\u3001cdev_add\uff08\uff09\u4e4b\u7c7b\u7684\u539f\u59cbAPI\uff0c\u800c\u91c7\u7528miscdevice\u7684\u6ce8\u518c\u65b9\u6cd5\u3002\u4ee3\u7801\u6e05\u535512.22\u5217\u51fa\u4e86\u65b0\u7684globalfifo\u9a71\u52a8\u76f8\u5bf9\u4e8e\u7b2c9\u7ae0globalfifo\u9a71\u52a8\u53d8\u5316\u7684\u90e8\u5206\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.22\u3000\u65b0\u7684globalfifo\u9a71\u52a8\u76f8\u5bf9\u4e8e\u7b2c9\u7ae0globalfifo\u9a71\u52a8\u53d8\u5316\u7684\u90e8\u5206\\r\\n\\r\\n```\\r\\n 1struct globalfifo_dev {\\r\\n 2    ...\\r\\n 3    struct miscdevice miscdev;\\r\\n 4};\\r\\n 5\\r\\n 6static int globalfifo_fasync(int fd, struct file *filp, int mode)\\r\\n 7{\\r\\n 8    struct globalfifo_dev *dev = container_of(filp->private_data,\\r\\n 9        struct globalfifo_dev, miscdev);\\r\\n10    ...\\r\\n11}\\r\\n12\\r\\n13static long globalfifo_ioctl(struct file *filp, unsigned int cmd,\\r\\n14                 unsigned long arg)\\r\\n15{\\r\\n16    struct globalfifo_dev *dev = container_of(filp->private_data,\\r\\n17        struct globalfifo_dev, miscdev);\\r\\n18    ...\\r\\n19}\\r\\n20\\r\\n21static unsigned int globalfifo_poll(struct file *filp, poll_table * wait)\\r\\n22{\\r\\n23    struct globalfifo_dev *dev = container_of(filp->private_data,\\r\\n24        struct globalfifo_dev, miscdev);\\r\\n25    ...\\r\\n26}\\r\\n27\\r\\n28static ssize_t globalfifo_read(struct file *filp, char __user *buf,\\r\\n29                   size_t count, loff_t *ppos)\\r\\n30{\\r\\n31    struct globalfifo_dev *dev = container_of(filp->private_data,\\r\\n32        struct globalfifo_dev, miscdev);\\r\\n33    ...\\r\\n34}\\r\\n35\\r\\n36static ssize_t globalfifo_write(struct file *filp, const char __user *buf,\\r\\n37                size_t count, loff_t *ppos)\\r\\n38{\\r\\n39    struct globalfifo_dev *dev = container_of(filp->private_data,\\r\\n40        struct globalfifo_dev, miscdev);\\r\\n41    ...\\r\\n42}\\r\\n43\\r\\n44static int globalfifo_probe(struct platform_device *pdev)\\r\\n45{\\r\\n46    struct globalfifo_dev *gl;\\r\\n47    int ret;\\r\\n48\\r\\n49    gl = devm_kzalloc(&pdev->dev, sizeof(*gl), GFP_KERNEL);\\r\\n50    if (!gl)\\r\\n51        return -ENOMEM;\\r\\n52    gl->miscdev.minor = MISC_DYNAMIC_MINOR;\\r\\n53    gl->miscdev.name = \\"globalfifo\\";\\r\\n54    gl->miscdev.fops = &globalfifo_fops;\\r\\n55\\r\\n56    mutex_init(&gl->mutex);\\r\\n57    init_waitqueue_head(&gl->r_wait);\\r\\n58    init_waitqueue_head(&gl->w_wait);\\r\\n59    platform_set_drvdata(pdev, gl);\\r\\n60\\r\\n61    ret = misc_register(&gl->miscdev);\\r\\n62    if (ret < 0)\\r\\n63        goto err;\\r\\n64    ...\\r\\n65    return 0;\\r\\n66err:\\r\\n67    return ret;\\r\\n68}\\r\\n69\\r\\n70static int globalfifo_remove(struct platform_device *pdev)\\r\\n71{\\r\\n72    struct globalfifo_dev *gl = platform_get_drvdata(pdev);\\r\\n73    misc_deregister(&gl->miscdev);\\r\\n74    return 0;\\r\\n75}\\r\\n76\\r\\n77static struct platform_driver globalfifo_driver = {\\r\\n78    .driver = {\\r\\n79        .name = \\"globalfifo\\",\\r\\n80        .owner = THIS_MODULE,\\r\\n81    },\\r\\n82    .probe = globalfifo_probe,\\r\\n83    .remove = globalfifo_remove,\\r\\n84};\\r\\n85module_platform_driver(globalfifo_driver);\\r\\n```\\r\\n\\r\\n\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0cfile_operations\u7684\u5404\u4e2a\u6210\u5458\u51fd\u6570\u90fd\u4f7f\u7528container_of\uff08\uff09\u53cd\u5411\u6c42\u51faprivate_data\uff0c\u7b2c61\u884c\u5728platform_driver\u7684probe\uff08\uff09\u51fd\u6570\u4e2d\u5b8c\u6210\u4e86miscdev\u7684\u6ce8\u518c\uff0c\u800c\u5728remove\uff08\uff09\u51fd\u6570\u4e2d\u4f7f\u7528misc_deregister\uff08\uff09\u5b8c\u6210\u4e86miscdev\u7684\u6ce8\u9500\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e5f\u6539\u7528\u4e86platform_device\u548cplatform_driver\u7684\u4f53\u7cfb\u7ed3\u6784\u3002\u6211\u4eec\u589e\u52a0\u4e86\u4e00\u4e2a\u6a21\u5757\u6765\u5b8c\u6210platform_device\u7684\u6ce8\u518c\uff0c\u5728\u6a21\u5757\u521d\u59cb\u5316\u7684\u65f6\u5019\u901a\u8fc7platform_device_alloc\uff08\uff09\u548cplatform_device_add\uff08\uff09\u5206\u914d\u5e76\u6dfb\u52a0platform_device\uff0c\u800c\u5728\u6a21\u5757\u5378\u8f7d\u7684\u65f6\u5019\u5219\u901a\u8fc7platform_device_unregister\uff08\uff09\u6ce8\u9500platform_device\uff0c\u5982\u4ee3\u7801\u6e05\u535512.23\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.23\u3000\u4e0eglobalfifo\u5bf9\u5e94\u7684platform_device\u7684\u6ce8\u518c\u548c\u6ce8\u9500\\r\\n\\r\\n```\\r\\n 1static struct platform_device *globalfifo_pdev;\\r\\n 2\\r\\n 3static int __init globalfifodev_init(void)\\r\\n 4{\\r\\n 5        int ret;\\r\\n 6\\r\\n 7        globalfifo_pdev = platform_device_alloc(\\"globalfifo\\", -1);\\r\\n 8        if (!globalfifo_pdev)\\r\\n 9                return -ENOMEM;\\r\\n10\\r\\n11        ret = platform_device_add(globalfifo_pdev);\\r\\n12        if (ret) {\\r\\n13                platform_device_put(globalfifo_pdev);\\r\\n14                return ret;\\r\\n15        }\\r\\n16\\r\\n17        return 0;\\r\\n18\\r\\n19}\\r\\n20module_init(globalfifodev_init);\\r\\n21\\r\\n22static void __exit globalfifodev_exit(void)\\r\\n23{\\r\\n24        platform_device_unregister(globalfifo_pdev);\\r\\n25}\\r\\n26module_exit(globalfifodev_exit);\\r\\n```\\r\\n\\r\\n\u672c\u4e66\u914d\u5957\u4ee3\u7801/home/baohua/develop/training/kernel/drivers/globalfifo/ch12\u4e2d\u5305\u542b\u4e86globalfifo driver\u548cdevice\u7aef\u7684\u4e24\u4e2a\u6a21\u5757\u3002\u5728\u8be5\u76ee\u5f55\u8fd0\u884cmake\uff0c\u4f1a\u751f\u6210\u4e24\u4e2a\u6a21\u5757\uff1aglobalfifo.ko\u548cglobalfifo-dev.ko\uff0c\u628aglobalfifo.ko\u548cglobalfifo-dev.ko\u5148\u540einsmod\uff0c\u4f1a\u5bfc\u81f4platform_driver\u548cplatform_device\u7684\u5339\u914d\uff0cglobalfifo_probe\uff08\uff09\u4f1a\u6267\u884c\uff0c/dev/globalfifo\u8282\u70b9\u4f1a\u81ea\u52a8\u751f\u6210\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u9700\u8981root\u6743\u9650\u6765\u8bbf\u95ee/dev/globalfifo\u3002\\r\\n\\r\\n\u5982\u679c\u6b64\u540e\u6211\u4eecrmmod globalfifo-dev.ko\uff0c\u5219\u4f1a\u5bfc\u81f4platform_driver\u7684remove\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u5373globalfifo_remove\uff08\uff09\u51fd\u6570\u88ab\u6267\u884c\uff0c/dev/globalfifo\u8282\u70b9\u4f1a\u81ea\u52a8\u6d88\u5931\u3002\\r\\n\\r\\n# 12.3.7\u3000\u9a71\u52a8\u6838\u5fc3\u5c42\\r\\n\\r\\n\u5206\u6790\u4e86\u4e0a\u8ff0\u591a\u4e2a\u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5f52\u7eb3\u51fa\u6838\u5fc3\u5c42\u80a9\u8d1f\u76843\u5927\u804c\u8d23\uff1a\\r\\n\\r\\n1\uff09\u5bf9\u4e0a\u63d0\u4f9b\u63a5\u53e3\u3002file_operations\u7684\u8bfb\u3001\u5199\u3001ioctl\u90fd\u88ab\u4e2d\u95f4\u5c42\u641e\u5b9a\uff0c\u5404\u79cdI/O\u6a21\u578b\u4e5f\u88ab\u5904\u7406\u6389\u4e86\u3002\\r\\n\\r\\n2\uff09\u4e2d\u95f4\u5c42\u5b9e\u73b0\u901a\u7528\u903b\u8f91\u3002\u53ef\u4ee5\u88ab\u5e95\u5c42\u5404\u79cd\u5b9e\u4f8b\u5171\u4eab\u7684\u4ee3\u7801\u90fd\u88ab\u4e2d\u95f4\u5c42\u641e\u5b9a\uff0c\u907f\u514d\u5e95\u5c42\u91cd\u590d\u5b9e\u73b0\u3002\\r\\n\\r\\n3\uff09\u5bf9\u4e0b\u5b9a\u4e49\u6846\u67b6\u3002\u5e95\u5c42\u7684\u9a71\u52a8\u4e0d\u518d\u9700\u8981\u5173\u5fc3Linux\u5185\u6838VFS\u7684\u63a5\u53e3\u548c\u5404\u79cd\u53ef\u80fd\u7684I/O\u6a21\u578b\uff0c\u800c\u53ea\u9700\u5904\u7406\u4e0e\u5177\u4f53\u786c\u4ef6\u76f8\u5173\u7684\u8bbf\u95ee\u3002\\r\\n\\r\\n\u8fd9\u79cd\u5206\u5c42\u6709\u65f6\u5019\u8fd8\u4e0d\u662f\u4e24\u5c42\uff0c\u53ef\u4ee5\u6709\u66f4\u591a\u5c42\uff0c\u5728\u8f6f\u4ef6\u4e0a\u5448\u73b0\u4e3a\u9762\u5411\u5bf9\u8c61\u91cc\u7c7b\u7ee7\u627f\u548c\u591a\u6001\u7684\u72b6\u6001\u3002\u4e0a\u4e00\u8282\u4ecb\u7ecd\u7684\u7ec8\u7aef\u8bbe\u5907\u9a71\u52a8\uff0c\u5728\u8f6f\u4ef6\u5c42\u6b21\u4e0a\u7c7b\u4f3c\u56fe12.12\u7684\u6548\u679c\u3002\\r\\n\\r\\n![1743949827184](./figure/1743949827184.png)\\r\\n\\r\\n\u56fe12.12\u3000tty\u9a71\u52a8\u5404\u5c42\u6cdb\u5316"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528","description":"\u963b\u585e\u4e0e\u975e\u963b\u585e\u8bbf\u95ee\u3001poll\uff08\uff09\u51fd\u6570\u63d0\u4f9b\u4e86\u8f83\u597d\u7684\u89e3\u51b3\u8bbe\u5907\u8bbf\u95ee\u7684\u673a\u5236\uff0c\u4f46\u662f\u5982\u679c\u6709\u4e86\u5f02\u6b65\u901a\u77e5\uff0c\u6574\u5957\u673a\u5236\u5219\u66f4\u52a0\u5b8c\u6574\u4e86\u3002","date":"2025-09-15T14:44:15.041Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.005,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"12.3.1\u3000\u8bbe\u5907\u9a71\u52a8\u6838\u5fc3\u5c42\u548c\u4f8b\u5316","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.3\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u5206\u5c42\u601d\u60f3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f"}},"content":"\u963b\u585e\u4e0e\u975e\u963b\u585e\u8bbf\u95ee\u3001poll\uff08\uff09\u51fd\u6570\u63d0\u4f9b\u4e86\u8f83\u597d\u7684\u89e3\u51b3\u8bbe\u5907\u8bbf\u95ee\u7684\u673a\u5236\uff0c\u4f46\u662f\u5982\u679c\u6709\u4e86\u5f02\u6b65\u901a\u77e5\uff0c\u6574\u5957\u673a\u5236\u5219\u66f4\u52a0\u5b8c\u6574\u4e86\u3002\\r\\n\\r\\n\u5f02\u6b65\u901a\u77e5\u7684\u610f\u601d\u662f\uff1a\u4e00\u65e6\u8bbe\u5907\u5c31\u7eea\uff0c\u5219\u4e3b\u52a8\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u6839\u672c\u5c31\u4e0d\u9700\u8981\u67e5\u8be2\u8bbe\u5907\u72b6\u6001\uff0c\u8fd9\u4e00\u70b9\u975e\u5e38\u7c7b\u4f3c\u4e8e\u786c\u4ef6\u4e0a\u201c\u4e2d\u65ad\u201d\u7684\u6982\u5ff5\uff0c\u6bd4\u8f83\u51c6\u786e\u7684\u79f0\u8c13\u662f\u201c\u4fe1\u53f7\u9a71\u52a8\u7684\u5f02\u6b65I/O\u201d\u3002\u4fe1\u53f7\u662f\u5728\u8f6f\u4ef6\u5c42\u6b21\u4e0a\u5bf9\u4e2d\u65ad\u673a\u5236\u7684\u4e00\u79cd\u6a21\u62df\uff0c\u5728\u539f\u7406\u4e0a\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u6536\u5230\u4e00\u4e2a\u4fe1\u53f7\u4e0e\u5904\u7406\u5668\u6536\u5230\u4e00\u4e2a\u4e2d\u65ad\u8bf7\u6c42\u53ef\u4ee5\u8bf4\u662f\u4e00\u6837\u7684\u3002\u4fe1\u53f7\u662f\u5f02\u6b65\u7684\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u4e0d\u5fc5\u901a\u8fc7\u4efb\u4f55\u64cd\u4f5c\u6765\u7b49\u5f85\u4fe1\u53f7\u7684\u5230\u8fbe\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fdb\u7a0b\u4e5f\u4e0d\u77e5\u9053\u4fe1\u53f7\u5230\u5e95\u4ec0\u4e48\u65f6\u5019\u5230\u8fbe\u3002\\r\\n\\r\\n\u963b\u585eI/O\u610f\u5473\u7740\u4e00\u76f4\u7b49\u5f85\u8bbe\u5907\u53ef\u8bbf\u95ee\u540e\u518d\u8bbf\u95ee\uff0c\u975e\u963b\u585eI/O\u4e2d\u4f7f\u7528poll\uff08\uff09\u610f\u5473\u7740\u67e5\u8be2\u8bbe\u5907\u662f\u5426\u53ef\u8bbf\u95ee\uff0c\u800c\u5f02\u6b65\u901a\u77e5\u5219\u610f\u5473\u7740\u8bbe\u5907\u901a\u77e5\u7528\u6237\u81ea\u8eab\u53ef\u8bbf\u95ee\uff0c\u4e4b\u540e\u7528\u6237\u518d\u8fdb\u884cI/O\u5904\u7406\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u8fd9\u51e0\u79cdI/O\u65b9\u5f0f\u53ef\u4ee5\u76f8\u4e92\u8865\u5145\u3002\\r\\n\\r\\n\u56fe9.1\u5448\u73b0\u4e86\u963b\u585eI/O\uff0c\u7ed3\u5408\u8f6e\u8be2\u7684\u975e\u963b\u585eI/O\u53ca\u57fa\u4e8eSIGIO\u7684\u5f02\u6b65\u901a\u77e5\u5728\u65f6\u95f4\u5148\u540e\u987a\u5e8f\u4e0a\u7684\u4e0d\u540c\u3002\\r\\n\\r\\n![image-20250329150836338](./figure/image-20250329150836338.png)\\r\\n\\r\\n\u56fe9.1\u3000\u963b\u585e\u3001\u7ed3\u5408\u8f6e\u8be2\u7684\u975e\u963b\u585eI/O\u548c\u5f02\u6b65\u901a\u77e5\u7684\u533a\u522b\\r\\n\\r\\n\u8fd9\u91cc\u8981\u5f3a\u8c03\u7684\u662f\uff1a\u963b\u585e\u3001\u975e\u963b\u585eI/O\u3001\u5f02\u6b65\u901a\u77e5\u672c\u8eab\u6ca1\u6709\u4f18\u52a3\uff0c\u5e94\u8be5\u6839\u636e\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u5408\u7406\u9009\u62e9\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f","description":"\u7406\u89e3Linux\u5185\u6838\u7684\u9501\u673a\u5236\uff0c\u8fd8\u9700\u8981\u7406\u89e3\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u7684\u7279\u70b9\u3002\u6bd4\u5982\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\uff0c\u5199\u7aef\u7533\u8bf7\u4e00\u4e2a\u65b0\u7684struct foo\u7ed3\u6784\u4f53\u5e76\u521d\u59cb\u5316\u5176\u4e2d\u7684a\u3001b\u3001c\uff0c\u4e4b\u540e\u628a\u7ed3\u6784\u4f53\u5730\u5740\u8d4b\u503c\u7ed9\u5168\u5c40gp\u6307\u9488\uff1a","date":"2025-09-15T14:44:15.029Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":12.495,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.1\u3000\u5f02\u6b65\u901a\u77e5\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53"}},"content":"\u7406\u89e3Linux\u5185\u6838\u7684\u9501\u673a\u5236\uff0c\u8fd8\u9700\u8981\u7406\u89e3\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u7684\u7279\u70b9\u3002\u6bd4\u5982\u4e0b\u9762\u4e00\u6bb5\u4ee3\u7801\uff0c\u5199\u7aef\u7533\u8bf7\u4e00\u4e2a\u65b0\u7684struct foo\u7ed3\u6784\u4f53\u5e76\u521d\u59cb\u5316\u5176\u4e2d\u7684a\u3001b\u3001c\uff0c\u4e4b\u540e\u628a\u7ed3\u6784\u4f53\u5730\u5740\u8d4b\u503c\u7ed9\u5168\u5c40gp\u6307\u9488\uff1a\\r\\n\\r\\n```\\r\\nstruct foo {\\r\\n  int a;\\r\\n  int b;\\r\\n  int c;\\r\\n};\\r\\nstruct foo *gp = NULL;\\r\\n/* . . . */\\r\\np = kmalloc(sizeof(*p), GFP_KERNEL);\\r\\np->a = 1;\\r\\np->b = 2;\\r\\np->c = 3;\\r\\ngp = p;\\r\\n```\\r\\n\\r\\n\u800c\u8bfb\u7aef\u5982\u679c\u7b80\u5355\u505a\u5982\u4e0b\u5904\u7406\uff0c\u5219\u7a0b\u5e8f\u7684\u8fd0\u884c\u53ef\u80fd\u662f\u4e0d\u7b26\u5408\u9884\u671f\u7684\uff1a\\r\\n\\r\\n```\\r\\np = gp;\\r\\nif (p != NULL) {\\r\\n  do_something_with(p->a, p->b, p->c);\\r\\n}\\r\\n```\\r\\n\\r\\n\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u539f\u56e0\u4f1a\u9020\u6210\u7a0b\u5e8f\u51fa\u9519\uff0c\u4e00\u79cd\u53ef\u80fd\u6027\u662f\u7f16\u8bd1\u4e71\u5e8f\uff0c\u53e6\u5916\u4e00\u79cd\u53ef\u80fd\u6027\u662f\u6267\u884c\u4e71\u5e8f\u3002\\r\\n\\r\\n\u5173\u4e8e\u7f16\u8bd1\u65b9\u9762\uff0cC\u8bed\u8a00\u987a\u5e8f\u7684\u201cp->a=1\uff1bp->b=2\uff1bp->c=3\uff1bgp=p\uff1b\u201d\u7684\u7f16\u8bd1\u7ed3\u679c\u7684\u6307\u4ee4\u987a\u5e8f\u53ef\u80fd\u662fgp\u7684\u8d4b\u503c\u6307\u4ee4\u53d1\u751f\u5728a\u3001b\u3001c\u7684\u8d4b\u503c\u4e4b\u524d\u3002\u73b0\u4ee3\u7684\u9ad8\u6027\u80fd\u7f16\u8bd1\u5668\u5728\u76ee\u6807\u7801\u4f18\u5316\u4e0a\u90fd\u5177\u5907\u5bf9\u6307\u4ee4\u8fdb\u884c\u4e71\u5e8f\u4f18\u5316\u7684\u80fd\u529b\u3002\u7f16\u8bd1\u5668\u53ef\u4ee5\u5bf9\u8bbf\u5b58\u7684\u6307\u4ee4\u8fdb\u884c\u4e71\u5e8f\uff0c\u51cf\u5c11\u903b\u8f91\u4e0a\u4e0d\u5fc5\u8981\u7684\u8bbf\u5b58\uff0c\u4ee5\u53ca\u5c3d\u91cf\u63d0\u9ad8Cache\u547d\u4e2d\u7387\u548cCPU\u7684Load/Store\u5355\u5143\u7684\u5de5\u4f5c\u6548\u7387\u3002\u56e0\u6b64\u5728\u6253\u5f00\u7f16\u8bd1\u5668\u4f18\u5316\u4ee5\u540e\uff0c\u770b\u5230\u751f\u6210\u7684\u6c47\u7f16\u7801\u5e76\u6ca1\u6709\u4e25\u683c\u6309\u7167\u4ee3\u7801\u7684\u903b\u8f91\u987a\u5e8f\uff0c\u8fd9\u662f\u6b63\u5e38\u7684\u3002\\r\\n\\r\\n\u89e3\u51b3\u7f16\u8bd1\u4e71\u5e8f\u95ee\u9898\uff0c\u9700\u8981\u901a\u8fc7barrier\uff08\uff09\u7f16\u8bd1\u5c4f\u969c\u8fdb\u884c\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6ebarrier\uff08\uff09\u5c4f\u969c\uff0c\u8fd9\u4e2a\u5c4f\u969c\u53ef\u4ee5\u963b\u6321\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u3002\u5bf9\u4e8e\u7f16\u8bd1\u5668\u6765\u8bf4\uff0c\u8bbe\u7f6e\u7f16\u8bd1\u5c4f\u969c\u53ef\u4ee5\u4fdd\u8bc1\u5c4f\u969c\u524d\u7684\u8bed\u53e5\u548c\u5c4f\u969c\u540e\u7684\u8bed\u53e5\u4e0d\u4e71\u201c\u4e32\u95e8\u201d\u3002\\r\\n\\r\\n\u6bd4\u5982\uff0c\u4e0b\u9762\u7684\u4e00\u6bb5\u4ee3\u7801\u5728e=d[4095]\u4e0eb=a\u3001c=a\u4e4b\u95f4\u6ca1\u6709\u7f16\u8bd1\u5c4f\u969c\uff1a\\r\\n\\r\\n```\\r\\nint main(int argc, char *argv[])\\r\\n{\\r\\n    int a = 0, b, c, d[4096], e;\\r\\n    e = d[4095];\\r\\n    b = a;\\r\\n    c = a;\\r\\n    printf(\\"a:%d b:%d c:%d e:%d\\\\n\\", a, b, c, e);\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n\u7528\u201carm-linux-gnueabihf-gcc-O2\u201d\u4f18\u5316\u7f16\u8bd1\uff0c\u53cd\u6c47\u7f16\u7ed3\u679c\u662f\uff1a\\r\\n\\r\\n```\\r\\nint main(int argc, char *argv[])\\r\\n{\\r\\n   831c: b530         push  {r4, r5, lr}\\r\\n   831e: f5ad 4d80    sub.w   sp, sp, #16384   ; 0x4000\\r\\n   8322: b083         sub   sp, #12\\r\\n   8324: 2100         movs  r1, #0\\r\\n   8326: f50d 4580    add.w   r5, sp, #16384   ; 0x4000\\r\\n   832a: f248 4018    movw r0, #33816  ; 0x8418\\r\\n   832e: 3504         adds r5, #4\\r\\n   8330: 460a         mov  r2, r1         -> b= a;\\r\\n   8332: 460b         mov  r3, r1         -> c= a;\\r\\n   8334: f2c0 0000    movt r0, #0\\r\\n   8338: 682c         ldr  r4, [r5, #0]\\r\\n   833a: 9400         str  r4, [sp, #0]      -> e = d[4095];\\r\\n   833c: f7ff efd4    blx  82e8 <_init+0x20>\\r\\n}\\r\\n```\\r\\n\\r\\n\u663e\u7136\uff0c\u5c3d\u7ba1\u6e90\u4ee3\u7801\u7ea7\u522bb=a\u3001c=a\u53d1\u751f\u5728e=d[4095]\u4e4b\u540e\uff0c\u4f46\u662f\u76ee\u6807\u4ee3\u7801\u7684b=a\u3001c=a\u6307\u4ee4\u53d1\u751f\u5728e=d[4095]\u4e4b\u524d\u3002\\r\\n\\r\\n\u5047\u8bbe\u6211\u4eec\u91cd\u65b0\u7f16\u5199\u4ee3\u7801\uff0c\u5728e=d[4095]\u4e0eb=a\u3001c=a\u4e4b\u95f4\u52a0\u4e0a\u7f16\u8bd1\u5c4f\u969c\uff1a\\r\\n\\r\\n```\\r\\n#define barrier() __asm__ __volatile__(\\"\\": : :\\"memory\\")\\r\\nint main(int argc, char *argv[])\\r\\n{\\r\\n    int a = 0, b, c, d[4096], e;\\r\\n    e = d[4095];\\r\\n    barrier();\\r\\n    b = a;\\r\\n    c = a;\\r\\n    printf(\\"a:%d b:%d c:%d e:%d\\\\n\\", a, b, c, e);\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n\u518d\u6b21\u7528\u201carm-linux-gnueabihf-gcc-O2\u201d\u4f18\u5316\u7f16\u8bd1\uff0c\u53cd\u6c47\u7f16\u7ed3\u679c\u662f\uff1a\\r\\n\\r\\n```\\r\\nint main(int argc, char *argv[])\\r\\n{\\r\\n   831c: b510         push {r4, lr}\\r\\n   831e: f5ad 4d80    sub.w    sp, sp, #16384   ; 0x4000\\r\\n   8322: b082         sub  sp, #8\\r\\n   8324: f50d 4380    add.w     r3, sp, #16384   ; 0x4000\\r\\n   8328: 3304         adds r3, #4\\r\\n   832a: 681c         ldr  r4, [r3, #0]\\r\\n   832c: 2100         movs r1, #0\\r\\n   832e: f248 4018    movw r0, #33816   ; 0x8418\\r\\n   8332: f2c0 0000    movt r0, #0\\r\\n   8336: 9400         str  r4, [sp, #0]        -> e = d[4095];\\r\\n   8338: 460a         mov  r2, r1            -> b= a;\\r\\n   833a: 460b         mov  r3, r1            -> c= a;\\r\\n   833c: f7ff efd4    blx  82e8 <_init+0x20>\\r\\n}\\r\\n```\\r\\n\\r\\n\u56e0\u4e3a\u201c__asm____volatile__\uff08\\"\\"\uff1a\uff1a\uff1a\\"memory\\"\uff09\u201d\u8fd9\u4e2a\u7f16\u8bd1\u5c4f\u969c\u7684\u5b58\u5728\uff0c\u539f\u6765\u76843\u6761\u6307\u4ee4\u7684\u987a\u5e8f\u201c\u62e8\u4e71\u53cd\u6b63\u201d\u4e86\u3002\\r\\n\\r\\n\u5173\u4e8e\u89e3\u51b3\u7f16\u8bd1\u4e71\u5e8f\u7684\u95ee\u9898\uff0cC\u8bed\u8a00volatile\u5173\u952e\u5b57\u7684\u4f5c\u7528\u8f83\u5f31\uff0c\u5b83\u66f4\u591a\u7684\u53ea\u662f\u907f\u514d\u5185\u5b58\u8bbf\u95ee\u884c\u4e3a\u7684\u5408\u5e76\uff0c\u5bf9C\u7f16\u8bd1\u5668\u800c\u8a00\uff0cvolatile\u662f\u6697\u793a\u9664\u4e86\u5f53\u524d\u7684\u6267\u884c\u7ebf\u7d22\u4ee5\u5916\uff0c\u5176\u4ed6\u7684\u6267\u884c\u7ebf\u7d22\u4e5f\u53ef\u80fd\u6539\u53d8\u67d0\u5185\u5b58\uff0c\u6240\u4ee5\u5b83\u7684\u542b\u4e49\u662f\u201c\u6613\u53d8\u7684\u201d\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5982\u679c\u7ebf\u7a0bA\u8bfb\u53d6var\u8fd9\u4e2a\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u4e24\u6b21\u800c\u6ca1\u6709\u4fee\u6539var\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u89c9\u5f97\u8bfb\u4e00\u6b21\u5c31\u884c\u4e86\uff0c\u7b2c2\u6b21\u76f4\u63a5\u53d6\u7b2c1\u6b21\u7684\u7ed3\u679c\u3002\u4f46\u662f\u5982\u679c\u52a0\u4e86volatile\u5173\u952e\u5b57\u6765\u5f62\u5bb9var\uff0c\u5219\u5c31\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u7ebf\u7a0bB\u3001\u7ebf\u7a0bC\u6216\u8005\u5176\u4ed6\u6267\u884c\u5b9e\u4f53\u53ef\u80fd\u628avar\u6539\u6389\u4e86\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5c31\u4e0d\u4f1a\u518d\u628a\u7ebf\u7a0bA\u4ee3\u7801\u7684\u7b2c2\u6b21\u5185\u5b58\u8bfb\u53d6\u4f18\u5316\u6389\u4e86\u3002\u53e6\u5916\uff0cvolatile\u4e5f\u4e0d\u5177\u5907\u4fdd\u62a4\u4e34\u754c\u8d44\u6e90\u7684\u4f5c\u7528\u3002\u603b\u4e4b\uff0cLinux\u5185\u6838\u660e\u663e\u4e0d\u592a\u559c\u6b22volatile\uff0c\u8fd9\u53ef\u53c2\u8003\u5185\u6838\u6e90\u4ee3\u7801\u4e0b\u7684\u6587\u6863Documentation/volatile-considered-harmful.txt\u3002\\r\\n\\r\\n\u7f16\u8bd1\u4e71\u5e8f\u662f\u7f16\u8bd1\u5668\u7684\u884c\u4e3a\uff0c\u800c\u6267\u884c\u4e71\u5e8f\u5219\u662f\u5904\u7406\u5668\u8fd0\u884c\u65f6\u7684\u884c\u4e3a\u3002\u6267\u884c\u4e71\u5e8f\u662f\u6307\u5373\u4fbf\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6307\u4ee4\u7684\u987a\u5e8f\u6309\u7167\u201cp->a=1\uff1bp->b=2\uff1bp->c=3\uff1bgp=p\uff1b\u201d\u6392\u653e\uff0c\u5728\u5904\u7406\u5668\u4e0a\u6267\u884c\u65f6\uff0c\u540e\u53d1\u5c04\u7684\u6307\u4ee4\u8fd8\u662f\u53ef\u80fd\u5148\u6267\u884c\u5b8c\uff0c\u8fd9\u662f\u5904\u7406\u5668\u7684\u201c\u4e71\u5e8f\u6267\u884c\uff08Out-of-Order Execution\uff09\u201d\u7b56\u7565\u3002\u9ad8\u7ea7\u7684CPU\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7f13\u5b58\u7684\u7ec4\u7ec7\u7279\u6027\uff0c\u5c06\u8bbf\u5b58\u6307\u4ee4\u91cd\u65b0\u6392\u5e8f\u6267\u884c\u3002\u8fde\u7eed\u5730\u5740\u7684\u8bbf\u95ee\u53ef\u80fd\u4f1a\u5148\u6267\u884c\uff0c\u56e0\u4e3a\u8fd9\u6837\u7f13\u5b58\u547d\u4e2d\u7387\u9ad8\u3002\u6709\u7684\u8fd8\u5141\u8bb8\u8bbf\u5b58\u7684\u975e\u963b\u585e\uff0c\u5373\u5982\u679c\u524d\u9762\u4e00\u6761\u8bbf\u5b58\u6307\u4ee4\u56e0\u4e3a\u7f13\u5b58\u4e0d\u547d\u4e2d\uff0c\u9020\u6210\u957f\u5ef6\u65f6\u7684\u5b58\u50a8\u8bbf\u95ee\u65f6\uff0c\u540e\u9762\u7684\u8bbf\u5b58\u6307\u4ee4\u53ef\u4ee5\u5148\u6267\u884c\uff0c\u4ee5\u4fbf\u4ece\u7f13\u5b58\u4e2d\u53d6\u6570\u3002\u56e0\u6b64\uff0c\u5373\u4f7f\u662f\u4ece\u6c47\u7f16\u4e0a\u770b\u987a\u5e8f\u6b63\u786e\u7684\u6307\u4ee4\uff0c\u5176\u6267\u884c\u7684\u987a\u5e8f\u4e5f\u662f\u4e0d\u53ef\u9884\u77e5\u7684\u3002\\r\\n\\r\\n\u4e3e\u4e2a\u4f8b\u5b50\uff0cARM v6/v7\u7684\u5904\u7406\u5668\u4f1a\u5bf9\u4ee5\u4e0b\u6307\u4ee4\u987a\u5e8f\u8fdb\u884c\u4f18\u5316\u3002\\r\\n\\r\\n```\\r\\nLDR r0\uff0c[r1] ;\\r\\nSTR r2\uff0c[r3] ;\\r\\n```\\r\\n\\r\\n\u5047\u8bbe\u7b2c\u4e00\u6761LDR\u6307\u4ee4\u5bfc\u81f4\u7f13\u5b58\u672a\u547d\u4e2d\uff0c\u8fd9\u6837\u7f13\u5b58\u5c31\u4f1a\u586b\u5145\u884c\uff0c\u5e76\u9700\u8981\u8f83\u591a\u7684\u65f6\u949f\u5468\u671f\u624d\u80fd\u5b8c\u6210\u3002\u8001\u7684ARM\u5904\u7406\u5668\uff0c\u6bd4\u5982ARM926EJ-S\u4f1a\u7b49\u5f85\u8fd9\u4e2a\u52a8\u4f5c\u5b8c\u6210\uff0c\u518d\u6267\u884c\u4e0b\u4e00\u6761STR\u6307\u4ee4\u3002\u800cARM v6/v7\u5904\u7406\u5668\u4f1a\u8bc6\u522b\u51fa\u4e0b\u4e00\u6761\u6307\u4ee4\uff08STR\uff09\u4e14\u4e0d\u9700\u8981\u7b49\u5f85\u7b2c\u4e00\u6761\u6307\u4ee4\uff08LDR\uff09\u5b8c\u6210\uff08\u5e76\u4e0d\u4f9d\u8d56\u4e8er0\u7684\u503c\uff09\uff0c\u5373\u4f1a\u5148\u6267\u884cSTR\u6307\u4ee4\uff0c\u800c\u4e0d\u662f\u7b49\u5f85LDR\u6307\u4ee4\u5b8c\u6210\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u5927\u591a\u6570\u4f53\u7cfb\u7ed3\u6784\u800c\u8a00\uff0c\u5c3d\u7ba1\u6bcf\u4e2aCPU\u90fd\u662f\u4e71\u5e8f\u6267\u884c\uff0c\u4f46\u662f\u8fd9\u4e00\u4e71\u5e8f\u5bf9\u4e8e\u5355\u6838\u7684\u7a0b\u5e8f\u6267\u884c\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u56e0\u4e3a\u5355\u4e2aCPU\u5728\u78b0\u5230\u4f9d\u8d56\u70b9\uff08\u540e\u9762\u7684\u6307\u4ee4\u4f9d\u8d56\u4e8e\u524d\u9762\u6307\u4ee4\u7684\u6267\u884c\u7ed3\u679c\uff09\u7684\u65f6\u5019\u4f1a\u7b49\u5f85\uff0c\u6240\u4ee5\u7a0b\u5e8f\u5458\u53ef\u80fd\u611f\u89c9\u4e0d\u5230\u8fd9\u4e2a\u4e71\u5e8f\u8fc7\u7a0b\u3002\u4f46\u662f\u8fd9\u4e2a\u4f9d\u8d56\u70b9\u7b49\u5f85\u7684\u8fc7\u7a0b\uff0c\u5728SMP\u5904\u7406\u5668\u91cc\u9762\u5bf9\u4e8e\u5176\u4ed6\u6838\u662f\u4e0d\u53ef\u89c1\u7684\u3002\u6bd4\u5982\u82e5\u5728CPU0\u4e0a\u6267\u884c\uff1a\\r\\n\\r\\n```\\r\\nwhile (f == 0);\\r\\nprint x;\\r\\n```\\r\\n\\r\\nCPU1\u4e0a\u6267\u884c\uff1a\\r\\n\\r\\n```\\r\\nx = 42;\\r\\nf = 1;\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u4e0d\u80fd\u6b66\u65ad\u5730\u8ba4\u4e3aCPU0\u4e0a\u6253\u5370\u7684x\u4e00\u5b9a\u7b49\u4e8e42\uff0c\u56e0\u4e3aCPU1\u4e0a\u5373\u4fbf\u201cf=1\u201d\u7f16\u8bd1\u5728\u201cx=42\u201d\u540e\u9762\uff0c\u6267\u884c\u65f6\u4ecd\u7136\u53ef\u80fd\u5148\u4e8e\u201cx=42\u201d\u5b8c\u6210\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019CPU0\u4e0a\u6253\u5370\u7684x\u4e0d\u4e00\u5b9a\u5c31\u662f42\\r\\n\\r\\n\u5904\u7406\u5668\u4e3a\u4e86\u89e3\u51b3\u591a\u6838\u95f4\u4e00\u4e2a\u6838\u7684\u5185\u5b58\u884c\u4e3a\u5bf9\u53e6\u5916\u4e00\u4e2a\u6838\u53ef\u89c1\u7684\u95ee\u9898\uff0c\u5f15\u5165\u4e86\u4e00\u4e9b\u5185\u5b58\u5c4f\u969c\u7684\u6307\u4ee4\u3002\u8b6c\u5982\uff0cARM\u5904\u7406\u5668\u7684\u5c4f\u969c\u6307\u4ee4\u5305\u62ec\uff1a\\r\\n\\r\\n- DMB\uff08\u6570\u636e\u5185\u5b58\u5c4f\u969c\uff09\uff1a\u5728DMB\u4e4b\u540e\u7684\u663e\u5f0f\u5185\u5b58\u8bbf\u95ee\u6267\u884c\u524d\uff0c\u4fdd\u8bc1\u6240\u6709\u5728DMB\u6307\u4ee4\u4e4b\u524d\u7684\u5185\u5b58\u8bbf\u95ee\u5b8c\u6210\uff1b\\r\\n- DSB\uff08\u6570\u636e\u540c\u6b65\u5c4f\u969c\uff09\uff1a\u7b49\u5f85\u6240\u6709\u5728DSB\u6307\u4ee4\u4e4b\u524d\u7684\u6307\u4ee4\u5b8c\u6210\uff08\u4f4d\u4e8e\u6b64\u6307\u4ee4\u524d\u7684\u6240\u6709\u663e\u5f0f\u5185\u5b58\u8bbf\u95ee\u5747\u5b8c\u6210\uff0c\u4f4d\u4e8e\u6b64\u6307\u4ee4\u524d\u7684\u6240\u6709\u7f13\u5b58\u3001\u8df3\u8f6c\u9884\u6d4b\u548cTLB\u7ef4\u62a4\u64cd\u4f5c\u5168\u90e8\u5b8c\u6210\uff09\uff1b\\r\\n- ISB\uff08\u6307\u4ee4\u540c\u6b65\u5c4f\u969c\uff09\uff1aFlush\u6d41\u6c34\u7ebf\uff0c\u4f7f\u5f97\u6240\u6709ISB\u4e4b\u540e\u6267\u884c\u7684\u6307\u4ee4\u90fd\u662f\u4ece\u7f13\u5b58\u6216\u5185\u5b58\u4e2d\u83b7\u5f97\u7684\u3002\\r\\n\\r\\nLinux\u5185\u6838\u7684\u81ea\u65cb\u9501\u3001\u4e92\u65a5\u4f53\u7b49\u4e92\u65a5\u903b\u8f91\uff0c\u9700\u8981\u7528\u5230\u4e0a\u8ff0\u6307\u4ee4\uff1a\u5728\u8bf7\u6c42\u83b7\u5f97\u9501\u65f6\uff0c\u8c03\u7528\u5c4f\u969c\u6307\u4ee4\uff1b\u5728\u89e3\u9501\u65f6\uff0c\u4e5f\u9700\u8981\u8c03\u7528\u5c4f\u969c\u6307\u4ee4\u3002\u4ee3\u7801\u6e05\u53557.1\u7684\u6c47\u7f16\u4ee3\u7801\u63cf\u7ed8\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u4e92\u65a5\u903b\u8f91\uff0c\u7559\u610f\u5176\u4e2d\u7684\u7b2c14\u884c\u548c22\u884c\u3002\u5173\u4e8eldrex\u548cstrex\u6307\u4ee4\u7684\u4f5c\u7528\uff0c\u4f1a\u57287.3\u8282\u8be6\u8ff0\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53557.1\u3000\u57fa\u4e8e\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u7684\u4e92\u65a5\u903b\u8f91\\r\\n\\r\\n```\\r\\n 1LOCKED   EQU 1\\r\\n 2UNLOCKED EQU 0\\r\\n 3lock_mutex\\r\\n 4     ; \u4e92\u65a5\u91cf\u662f\u5426\u9501\u5b9a?\\r\\n 5     LDREX r1, [r0]         ; \u68c0\u67e5\u662f\u5426\u9501\u5b9a\\r\\n 6     CMP r1, #LOCKED        ; \u548c\\"locked\\"\u6bd4\u8f83\\r\\n 7     WFEEQ                  ; \u4e92\u65a5\u91cf\u5df2\u7ecf\u9501\u5b9a\uff0c\u8fdb\u5165\u4f11\u7720\\r\\n 8     BEQ lock_mutex         ; \u88ab\u5524\u9192\uff0c\u91cd\u65b0\u68c0\u67e5\u4e92\u65a5\u91cf\u662f\u5426\u9501\u5b9a\\r\\n 9     ; \u5c1d\u8bd5\u9501\u5b9a\u4e92\u65a5\u91cf\\r\\n10     MOV r1, #LOCKED\\r\\n11     STREX r2, r1, [r0]     ; \u5c1d\u8bd5\u9501\u5b9a\\r\\n12     CMP r2, #0x0           ; \u68c0\u67e5STR\u6307\u4ee4\u662f\u5426\u5b8c\u6210\\r\\n13     BNE lock_mutex         ; \u5982\u679c\u5931\u8d25\uff0c\u91cd\u8bd5\\r\\n14     DMB                    ; \u8fdb\u5165\u88ab\u4fdd\u62a4\u7684\u8d44\u6e90\u524d\u9700\u8981\u9694\u79bb\uff0c\u4fdd\u8bc1\u4e92\u65a5\u91cf\u5df2\u7ecf\u88ab\u66f4\u65b0\\r\\n15     BX lr\\r\\n16\\r\\n17unlock_mutex\\r\\n18     DMB                    ; \u4fdd\u8bc1\u8d44\u6e90\u7684\u8bbf\u95ee\u5df2\u7ecf\u7ed3\u675f\\r\\n19     MOV r1, #UNLOCKED      ; \u5411\u9501\u5b9a\u57df\u5199\\"unlocked\\"\\r\\n20     STR r1, [r0]\\r\\n21\\r\\n22     DSB                    ; \u4fdd\u8bc1\u5728CPU\u5524\u9192\u524d\u5b8c\u6210\u4e92\u65a5\u91cf\u72b6\u6001\u66f4\u65b0\\r\\n23     SEV                    ; \u50cf\u5176\u4ed6CPU\u53d1\u9001\u4e8b\u4ef6\uff0c\u5524\u9192\u4efb\u4f55\u7b49\u5f85\u4e8b\u4ef6\u7684CPU\\r\\n24\\r\\n25     BX lr\\r\\n```\\r\\n\\r\\n\u524d\u9762\u63d0\u5230\u6bcf\u4e2aCPU\u90fd\u662f\u4e71\u5e8f\u6267\u884c\uff0c\u4f46\u662f\u5355\u4e2aCPU\u5728\u78b0\u5230\u4f9d\u8d56\u70b9\u7684\u65f6\u5019\u4f1a\u7b49\u5f85\uff0c\u6240\u4ee5\u6267\u884c\u4e71\u5e8f\u5bf9\u5355\u6838\u4e0d\u4e00\u5b9a\u53ef\u89c1\u3002\u4f46\u662f\uff0c\u5f53\u7a0b\u5e8f\u5728\u8bbf\u95ee\u5916\u8bbe\u7684\u5bc4\u5b58\u5668\u65f6\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u7684\u8bbf\u95ee\u987a\u5e8f\u5728CPU\u7684\u903b\u8f91\u4e0a\u6784\u4e0d\u6210\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f46\u662f\u4ece\u5916\u8bbe\u7684\u903b\u8f91\u89d2\u5ea6\u6765\u8bb2\uff0c\u53ef\u80fd\u9700\u8981\u56fa\u5b9a\u7684\u5bc4\u5b58\u5668\u8bfb\u5199\u987a\u5e8f\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u4e5f\u9700\u8981\u4f7f\u7528CPU\u7684\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u3002\u5185\u6838\u6587\u6863Documentation/memory-barriers.txt\u548cDocumentation/io_ordering.txt\u5bf9\u6b64\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u5b9a\u4e49\u4e86\u8bfb\u5199\u5c4f\u969cmb\uff08\uff09\u3001\u8bfb\u5c4f\u969crmb\uff08\uff09\u3001\u5199\u5c4f\u969cwmb\uff08\uff09\u3001\u4ee5\u53ca\u4f5c\u7528\u4e8e\u5bc4\u5b58\u5668\u8bfb\u5199\u7684__iormb\uff08\uff09\u3001__iowmb\uff08\uff09\u8fd9\u6837\u7684\u5c4f\u969cAPI\u3002\u8bfb\u5199\u5bc4\u5b58\u5668\u7684readl_relaxed\uff08\uff09\u548creadl\uff08\uff09\u3001writel_relaxed\uff08\uff09\u548cwritel\uff08\uff09API\u7684\u533a\u522b\u5c31\u4f53\u73b0\u5728\u6709\u65e0\u5c4f\u969c\u65b9\u9762\u3002\\r\\n\\r\\n```\\r\\n#define readb(c)                ({ u8  __v = readb_relaxed(c); __iormb(); __v; })\\r\\n#define readw(c)                ({ u16 __v = readw_relaxed(c); __iormb(); __v; })\\r\\n#define readl(c)                ({ u32 __v = readl_relaxed(c); __iormb(); __v; })\\r\\n#define writeb(v,c)             ({ __iowmb(); writeb_relaxed(v,c); })\\r\\n#define writew(v,c)             ({ __iowmb(); writew_relaxed(v,c); })\\r\\n#define writel(v,c)             ({ __iowmb(); writel_relaxed(v,c); })\\r\\n```\\r\\n\\r\\n\u6bd4\u5982\u6211\u4eec\u901a\u8fc7writel_relaxed\uff08\uff09\u5199\u5b8cDMA\u7684\u5f00\u59cb\u5730\u5740\u3001\u7ed3\u675f\u5730\u5740\u3001\u5927\u5c0f\u4e4b\u540e\uff0c\u6211\u4eec\u4e00\u5b9a\u8981\u8c03\u7528writel\uff08\uff09\u6765\u542f\u52a8DMA\u3002\\r\\n\\r\\n```\\r\\nwritel_relaxed(DMA_SRC_REG, src_addr);\\r\\nwritel_relaxed(DMA_DST_REG, dst_addr);\\r\\nwritel_relaxed(DMA_SIZE_REG, size);\\r\\nwritel (DMA_ENABLE, 1);\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53","description":"\u5c3d\u7ba1\u4fe1\u53f7\u91cf\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u4e92\u65a5\u7684\u529f\u80fd\uff0c\u4f46\u662f\u201c\u6b63\u5b97\u201d\u7684mutex\u5728Linux\u5185\u6838\u4e2d\u8fd8\u662f\u771f\u5b9e\u5730\u5b58\u5728\u7740\u3002","date":"2025-09-15T14:44:15.017Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.325,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.2\u3000\u7f16\u8bd1\u4e71\u5e8f\u548c\u6267\u884c\u4e71\u5e8f"},"nextItem":{"title":"2.1.1\u3000\u901a\u7528\u5904\u7406\u5668","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.1\u3000\u5904\u7406\u5668"}},"content":"\u5c3d\u7ba1\u4fe1\u53f7\u91cf\u5df2\u7ecf\u53ef\u4ee5\u5b9e\u73b0\u4e92\u65a5\u7684\u529f\u80fd\uff0c\u4f46\u662f\u201c\u6b63\u5b97\u201d\u7684mutex\u5728Linux\u5185\u6838\u4e2d\u8fd8\u662f\u771f\u5b9e\u5730\u5b58\u5728\u7740\u3002\\r\\n\\r\\n\u4e0b\u9762\u4ee3\u7801\u5b9a\u4e49\u4e86\u540d\u4e3amy_mutex\u7684\u4e92\u65a5\u4f53\u5e76\u521d\u59cb\u5316\u5b83\uff1a\\r\\n\\r\\n```\\r\\nstruct mutex my_mutex;\\r\\nmutex_init(&my_mutex);\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u7684\u4e24\u4e2a\u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u4e92\u65a5\u4f53\uff1a\\r\\n\\r\\n```\\r\\nvoid mutex_lock(struct mutex *lock);\\r\\nint mutex_lock_interruptible(struct mutex *lock);\\r\\nint mutex_trylock(struct mutex *lock);\\r\\n```\\r\\n\\r\\nmutex_lock\uff08\uff09\u4e0emutex_lock_interruptible\uff08\uff09\u7684\u533a\u522b\u548cdown\uff08\uff09\u4e0edown_trylock\uff08\uff09\u7684\u533a\u522b\u5b8c\u5168\u4e00\u81f4\uff0c\u524d\u8005\u5f15\u8d77\u7684\u7761\u7720\u4e0d\u80fd\u88ab\u4fe1\u53f7\u6253\u65ad\uff0c\u800c\u540e\u8005\u53ef\u4ee5\u3002mutex_trylock\uff08\uff09\u7528\u4e8e\u5c1d\u8bd5\u83b7\u5f97mutex\uff0c\u83b7\u53d6\u4e0d\u5230mutex\u65f6\u4e0d\u4f1a\u5f15\u8d77\u8fdb\u7a0b\u7761\u7720\u3002\\r\\n\\r\\n\u4e0b\u5217\u51fd\u6570\u7528\u4e8e\u91ca\u653e\u4e92\u65a5\u4f53\uff1a\\r\\n\\r\\n```\\r\\nvoid mutex_unlock(struct mutex *lock);\\r\\n```\\r\\n\\r\\nmutex\u7684\u4f7f\u7528\u65b9\u6cd5\u548c\u4fe1\u53f7\u91cf\u7528\u4e8e\u4e92\u65a5\u7684\u573a\u5408\u5b8c\u5168\u4e00\u6837\uff1a\\r\\n\\r\\n```\\r\\nstruct mutex my_mutex;      /* \u5b9a\u4e49mutex */\\r\\nmutex_init(&my_mutex);      /* \u521d\u59cb\u5316mutex */\\r\\nmutex_lock(&my_mutex);      /* \u83b7\u53d6mutex */\\r\\n...                         /* \u4e34\u754c\u8d44\u6e90*/\\r\\nmutex_unlock(&my_mutex);    /* \u91ca\u653emutex */\\r\\n```\\r\\n\\r\\n\u81ea\u65cb\u9501\u548c\u4e92\u65a5\u4f53\u90fd\u662f\u89e3\u51b3\u4e92\u65a5\u95ee\u9898\u7684\u57fa\u672c\u624b\u6bb5\uff0c\u9762\u5bf9\u7279\u5b9a\u7684\u60c5\u51b5\uff0c\u5e94\u8be5\u5982\u4f55\u53d6\u820d\u8fd9\u4e24\u79cd\u624b\u6bb5\u5462\uff1f\u9009\u62e9\u7684\u4f9d\u636e\u662f\u4e34\u754c\u533a\u7684\u6027\u8d28\u548c\u7cfb\u7edf\u7684\u7279\u70b9\u3002\\r\\n\\r\\n\u4ece\u4e25\u683c\u610f\u4e49\u4e0a\u8bf4\uff0c\u4e92\u65a5\u4f53\u548c\u81ea\u65cb\u9501\u5c5e\u4e8e\u4e0d\u540c\u5c42\u6b21\u7684\u4e92\u65a5\u624b\u6bb5\uff0c\u524d\u8005\u7684\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u540e\u8005\u3002\u5728\u4e92\u65a5\u4f53\u672c\u8eab\u7684\u5b9e\u73b0\u4e0a\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e92\u65a5\u4f53\u7ed3\u6784\u5b58\u53d6\u7684\u539f\u5b50\u6027\uff0c\u9700\u8981\u81ea\u65cb\u9501\u6765\u4e92\u65a5\u3002\u6240\u4ee5\u81ea\u65cb\u9501\u5c5e\u4e8e\u66f4\u5e95\u5c42\u7684\u624b\u6bb5\u3002\\r\\n\\r\\n\u4e92\u65a5\u4f53\u662f\u8fdb\u7a0b\u7ea7\u7684\uff0c\u7528\u4e8e\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5bf9\u8d44\u6e90\u7684\u4e92\u65a5\uff0c\u867d\u7136\u4e5f\u662f\u5728\u5185\u6838\u4e2d\uff0c\u4f46\u662f\u8be5\u5185\u6838\u6267\u884c\u8def\u5f84\u662f\u4ee5\u8fdb\u7a0b\u7684\u8eab\u4efd\uff0c\u4ee3\u8868\u8fdb\u7a0b\u6765\u4e89\u593a\u8d44\u6e90\u7684\u3002\u5982\u679c\u7ade\u4e89\u5931\u8d25\uff0c\u4f1a\u53d1\u751f\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5f53\u524d\u8fdb\u7a0b\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff0cCPU\u5c06\u8fd0\u884c\u5176\u4ed6\u8fdb\u7a0b\u3002\u9274\u4e8e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\u4e5f\u5f88\u5927\uff0c\u56e0\u6b64\uff0c\u53ea\u6709\u5f53\u8fdb\u7a0b\u5360\u7528\u8d44\u6e90\u65f6\u95f4\u8f83\u957f\u65f6\uff0c\u7528\u4e92\u65a5\u4f53\u624d\u662f\u8f83\u597d\u7684\u9009\u62e9\u3002\\r\\n\\r\\n\u5f53\u6240\u8981\u4fdd\u62a4\u7684\u4e34\u754c\u533a\u8bbf\u95ee\u65f6\u95f4\u6bd4\u8f83\u77ed\u65f6\uff0c\u7528\u81ea\u65cb\u9501\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff0c\u56e0\u4e3a\u5b83\u53ef\u8282\u7701\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u65f6\u95f4\u3002\u4f46\u662fCPU\u5f97\u4e0d\u5230\u81ea\u65cb\u9501\u4f1a\u5728\u90a3\u91cc\u7a7a\u8f6c\u76f4\u5230\u5176\u4ed6\u6267\u884c\u5355\u5143\u89e3\u9501\u4e3a\u6b62\uff0c\u6240\u4ee5\u8981\u6c42\u9501\u4e0d\u80fd\u5728\u4e34\u754c\u533a\u91cc\u957f\u65f6\u95f4\u505c\u7559\uff0c\u5426\u5219\u4f1a\u964d\u4f4e\u7cfb\u7edf\u7684\u6548\u7387\u3002\\r\\n\\r\\n\u7531\u6b64\uff0c\u53ef\u4ee5\u603b\u7ed3\u51fa\u81ea\u65cb\u9501\u548c\u4e92\u65a5\u4f53\u9009\u7528\u76843\u9879\u539f\u5219\u3002\\r\\n\\r\\n1\uff09\u5f53\u9501\u4e0d\u80fd\u88ab\u83b7\u53d6\u5230\u65f6\uff0c\u4f7f\u7528\u4e92\u65a5\u4f53\u7684\u5f00\u9500\u662f\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u65f6\u95f4\uff0c\u4f7f\u7528\u81ea\u65cb\u9501\u7684\u5f00\u9500\u662f\u7b49\u5f85\u83b7\u53d6\u81ea\u65cb\u9501\uff08\u7531\u4e34\u754c\u533a\u6267\u884c\u65f6\u95f4\u51b3\u5b9a\uff09\u3002\u82e5\u4e34\u754c\u533a\u6bd4\u8f83\u5c0f\uff0c\u5b9c\u4f7f\u7528\u81ea\u65cb\u9501\uff0c\u82e5\u4e34\u754c\u533a\u5f88\u5927\uff0c\u5e94\u4f7f\u7528\u4e92\u65a5\u4f53\u3002\\r\\n\\r\\n2\uff09\u4e92\u65a5\u4f53\u6240\u4fdd\u62a4\u7684\u4e34\u754c\u533a\u53ef\u5305\u542b\u53ef\u80fd\u5f15\u8d77\u963b\u585e\u7684\u4ee3\u7801\uff0c\u800c\u81ea\u65cb\u9501\u5219\u7edd\u5bf9\u8981\u907f\u514d\u7528\u6765\u4fdd\u62a4\u5305\u542b\u8fd9\u6837\u4ee3\u7801\u7684\u4e34\u754c\u533a\u3002\u56e0\u4e3a\u963b\u585e\u610f\u5473\u7740\u8981\u8fdb\u884c\u8fdb\u7a0b\u7684\u5207\u6362\uff0c\u5982\u679c\u8fdb\u7a0b\u88ab\u5207\u6362\u51fa\u53bb\u540e\uff0c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4f01\u56fe\u83b7\u53d6\u672c\u81ea\u65cb\u9501\uff0c\u6b7b\u9501\u5c31\u4f1a\u53d1\u751f\u3002\\r\\n\\r\\n3\uff09\u4e92\u65a5\u4f53\u5b58\u5728\u4e8e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u88ab\u4fdd\u62a4\u7684\u5171\u4eab\u8d44\u6e90\u9700\u8981\u5728\u4e2d\u65ad\u6216\u8f6f\u4e2d\u65ad\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5219\u5728\u4e92\u65a5\u4f53\u548c\u81ea\u65cb\u9501\u4e4b\u95f4\u53ea\u80fd\u9009\u62e9\u81ea\u65cb\u9501\u3002\u5f53\u7136\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u4f7f\u7528\u4e92\u65a5\u4f53\uff0c\u5219\u53ea\u80fd\u901a\u8fc7mutex_trylock\uff08\uff09\u65b9\u5f0f\u8fdb\u884c\uff0c\u4e0d\u80fd\u83b7\u53d6\u5c31\u7acb\u5373\u8fd4\u56de\u4ee5\u907f\u514d\u963b\u585e\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.1\u3000\u5904\u7406\u5668","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.1\u3000\u5904\u7406\u5668","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.1\u3000\u5904\u7406\u5668.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.1\u3000\u5904\u7406\u5668.md","title":"2.1.1\u3000\u901a\u7528\u5904\u7406\u5668","description":"\u76ee\u524d\u4e3b\u6d41\u7684\u901a\u7528\u5904\u7406\u5668\uff08GPP\uff09\u591a\u91c7\u7528SoC\uff08\u7247\u4e0a\u7cfb\u7edf\uff09\u7684\u82af\u7247\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u96c6\u6210\u4e86\u5404\u79cd\u529f\u80fd\u6a21\u5757\uff0c\u6bcf\u4e00\u79cd\u529f\u80fd\u90fd\u662f\u7531\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\u8bbe\u8ba1\u7a0b\u5e8f\uff0c\u7136\u540e\u5728SoC\u5185\u7531\u7535\u8def\u5b9e\u73b0\u7684\u3002\u5728SoC\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u6a21\u5757\u4e0d\u662f\u4e00\u4e2a\u5df2\u7ecf\u8bbe\u8ba1\u6210\u719f\u7684ASIC\u5668\u4ef6\uff0c\u800c\u662f\u5229\u7528\u82af\u7247\u7684\u4e00\u90e8\u5206\u8d44\u6e90\u53bb\u5b9e\u73b0\u67d0\u79cd\u4f20\u7edf\u7684\u529f\u80fd\uff0c\u5c06\u5404\u79cd\u7ec4\u4ef6\u91c7\u7528\u7c7b\u4f3c\u642d\u79ef\u6728\u7684\u65b9\u6cd5\u7ec4\u5408\u5728\u4e00\u8d77\u3002","date":"2025-09-15T14:44:15.013Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":10.065,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.7\u3000\u4e92\u65a5\u4f53"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784"}},"content":"\u76ee\u524d\u4e3b\u6d41\u7684\u901a\u7528\u5904\u7406\u5668\uff08GPP\uff09\u591a\u91c7\u7528SoC\uff08\u7247\u4e0a\u7cfb\u7edf\uff09\u7684\u82af\u7247\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u96c6\u6210\u4e86\u5404\u79cd\u529f\u80fd\u6a21\u5757\uff0c\u6bcf\u4e00\u79cd\u529f\u80fd\u90fd\u662f\u7531\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\u8bbe\u8ba1\u7a0b\u5e8f\uff0c\u7136\u540e\u5728SoC\u5185\u7531\u7535\u8def\u5b9e\u73b0\u7684\u3002\u5728SoC\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u6a21\u5757\u4e0d\u662f\u4e00\u4e2a\u5df2\u7ecf\u8bbe\u8ba1\u6210\u719f\u7684ASIC\u5668\u4ef6\uff0c\u800c\u662f\u5229\u7528\u82af\u7247\u7684\u4e00\u90e8\u5206\u8d44\u6e90\u53bb\u5b9e\u73b0\u67d0\u79cd\u4f20\u7edf\u7684\u529f\u80fd\uff0c\u5c06\u5404\u79cd\u7ec4\u4ef6\u91c7\u7528\u7c7b\u4f3c\u642d\u79ef\u6728\u7684\u65b9\u6cd5\u7ec4\u5408\u5728\u4e00\u8d77\u3002\\r\\n\\r\\nARM\u5185\u6838\u7684\u8bbe\u8ba1\u6280\u672f\u88ab\u6388\u6743\u7ed9\u6570\u767e\u5bb6\u534a\u5bfc\u4f53\u5382\u5546\uff0c\u505a\u6210\u4e0d\u540c\u7684SoC\u82af\u7247\u3002ARM\u7684\u529f\u8017\u5f88\u4f4e\uff0c\u5728\u5f53\u4eca\u6700\u6d3b\u8dc3\u7684\u65e0\u7ebf\u5c40\u57df\u7f51\u30013G\u3001\u624b\u673a\u7ec8\u7aef\u3001\u624b\u6301\u8bbe\u5907\u3001\u6709\u7ebf\u7f51\u7edc\u901a\u4fe1\u8bbe\u5907\u7b49\u4e2d\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\u3002\u81f3\u672c\u4e66\u7f16\u5199\u65f6\uff0c\u5e02\u9762\u4e0a\u7edd\u5927\u591a\u6570\u667a\u80fd\u624b\u673a\u3001\u5e73\u677f\u7535\u8111\u90fd\u4f7f\u7528ARM SoC\u4f5c\u4e3a\u4e3b\u63a7\u82af\u7247\u3002\u5f88\u591aARM\u4e3b\u63a7\u82af\u7247\u7684\u96c6\u6210\u5ea6\u975e\u5e38\u9ad8\uff0c\u9664\u4e86\u96c6\u6210\u591a\u6838ARM\u4ee5\u5916\uff0c\u8fd8\u53ef\u80fd\u96c6\u6210\u56fe\u5f62\u5904\u7406\u5668\u3001\u89c6\u9891\u7f16\u89e3\u7801\u5668\u3001\u6d6e\u70b9\u534f\u5904\u7406\u5668\u3001GPS\u3001WiFi\u3001\u84dd\u7259\u3001\u57fa\u5e26\u3001Camera\u7b49\u4e00\u7cfb\u5217\u529f\u80fd\u3002\u6bd4\u5982\uff0c\u9ad8\u901a\u7684Snapdragon 810\u5c31\u96c6\u6210\u4e86\u5982\u56fe2.1\u6240\u793a\u7684\u5404\u79cd\\r\\n\\r\\n![image-20250320230850657](./figure/image-20250320230850657.png)\\r\\n\\r\\n\u56fe2.1\u3000ARM SoC\u8303\u4f8b\uff1aSnapdragon 810\\r\\n\\r\\n\u4e3b\u6d41\u7684ARM\u79fb\u52a8\u5904\u7406\u82af\u7247\u4f9b\u5e94\u5546\u5305\u62ec\u9ad8\u901a\uff08Qualcomm\uff09\u3001\u4e09\u661f\uff08Samsung\uff09\u3001\u82f1\u4f1f\u8fbe\uff08Nvidia\uff09\u3001\u7f8e\u6ee1\uff08Marvell\uff09\u3001\u8054\u53d1\u79d1\uff08MTK\uff09\u3001\u6d77\u601d\uff08HiSilicon\uff09\u3001\u5c55\u8baf\uff08Spreadtrum\uff09\u7b49\u3002\u5fb7\u5dde\u4eea\u5668\uff08TI\uff09\u3001\u535a\u901a\uff08Broadcom\uff09\u5219\u5df2\u6de1\u51fa\u624b\u673a\u82af\u7247\u4e1a\u52a1\u3002\\r\\n\\r\\n\u4e2d\u592e\u5904\u7406\u5668\u7684\u4f53\u7cfb\u7ed3\u6784\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e00\u7c7b\u4e3a\u51af\xb7\u8bfa\u4f9d\u66fc\u7ed3\u6784\uff0c\u53e6\u4e00\u7c7b\u4e3a\u54c8\u4f5b\u7ed3\u6784\u3002Intel\u516c\u53f8\u7684\u4e2d\u592e\u5904\u7406\u5668\u3001ARM\u7684ARM7\u3001MIPS\u516c\u53f8\u7684MIPS\u5904\u7406\u5668\u91c7\u7528\u4e86\u51af\xb7\u8bfa\u4f9d\u66fc\u7ed3\u6784\uff1b\u800cAVR\u3001ARM9\u3001ARM10\u3001ARM11\u4ee5\u53caCortex A\u7cfb\u5217\u7b49\u5219\u91c7\u7528\u4e86\u54c8\u4f5b\u7ed3\u6784\u3002\\r\\n\\r\\n\u51af\xb7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u4e5f\u79f0\u666e\u6797\u65af\u987f\u7ed3\u6784\uff0c\u662f\u4e00\u79cd\u5c06\u7a0b\u5e8f\u6307\u4ee4\u5b58\u50a8\u5668\u548c\u6570\u636e\u5b58\u50a8\u5668\u5408\u5e76\u5728\u4e00\u8d77\u7684\u5b58\u50a8\u5668\u7ed3\u6784\u3002\u7a0b\u5e8f\u6307\u4ee4\u5b58\u50a8\u5730\u5740\u548c\u6570\u636e\u5b58\u50a8\u5730\u5740\u6307\u5411\u540c\u4e00\u4e2a\u5b58\u50a8\u5668\u7684\u4e0d\u540c\u7269\u7406\u4f4d\u7f6e\uff0c\u56e0\u6b64\u7a0b\u5e8f\u6307\u4ee4\u548c\u6570\u636e\u7684\u5bbd\u5ea6\u76f8\u540c\u3002\u800c\u54c8\u4f5b\u7ed3\u6784\u5c06\u7a0b\u5e8f\u6307\u4ee4\u548c\u6570\u636e\u5206\u5f00\u5b58\u50a8\uff0c\u6307\u4ee4\u548c\u6570\u636e\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u6570\u636e\u5bbd\u5ea6\u3002\u6b64\u5916\uff0c\u54c8\u4f5b\u7ed3\u6784\u8fd8\u91c7\u7528\u4e86\u72ec\u7acb\u7684\u7a0b\u5e8f\u603b\u7ebf\u548c\u6570\u636e\u603b\u7ebf\uff0c\u5206\u522b\u4f5c\u4e3aCPU\u4e0e\u6bcf\u4e2a\u5b58\u50a8\u5668\u4e4b\u95f4\u7684\u4e13\u7528\u901a\u4fe1\u8def\u5f84\uff0c\u5177\u6709\u8f83\u9ad8\u7684\u6267\u884c\u6548\u7387\u3002\u56fe2.2\u63cf\u8ff0\u4e86\u51af\xb7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u548c\u54c8\u4f5b\u7ed3\u6784\u7684\u533a\u522b\u3002\\r\\n\\r\\n![1742483372115](./figure/1742483372115.png)\\r\\n\\r\\n\u56fe2.2\u3000\u51af\xb7\u8bfa\u4f9d\u66fc\u7ed3\u6784\u4e0e\u54c8\u4f5b\u7ed3\u6784\\r\\n\\r\\n\u8bb8\u591a\u82af\u7247\u91c7\u7528\u7684\u662f\u5982\u56fe2.3\u6240\u793a\u7684\u6539\u8fdb\u7684\u54c8\u4f5b\u67b6\u6784\uff0c\u5b83\u5177\u6709\u72ec\u7acb\u7684\u5730\u5740\u603b\u7ebf\u548c\u6570\u636e\u603b\u7ebf\uff0c\u4e24\u6761\u603b\u7ebf\u7531\u7a0b\u5e8f\u5b58\u50a8\u5668\u548c\u6570\u636e\u5b58\u50a8\u5668\u5206\u65f6\u5171\u7528\u3002\u56e0\u6b64\uff0c\u6539\u8fdb\u7684\u54c8\u4f5b\u7ed3\u6784\u9488\u5bf9\u7a0b\u5e8f\u548c\u6570\u636e\uff0c\u5176\u5b9e\u6ca1\u6709\u72ec\u7acb\u7684\u603b\u7ebf\uff0c\u800c\u662f\u4f7f\u7528\u516c\u7528\u6570\u636e\u603b\u7ebf\u6765\u5b8c\u6210\u7a0b\u5e8f\u5b58\u50a8\u6a21\u5757\u6216\u6570\u636e\u5b58\u50a8\u6a21\u5757\u4e0eCPU\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\uff0c\u516c\u7528\u7684\u5730\u5740\u603b\u7ebf\u6765\u5bfb\u5740\u7a0b\u5e8f\u548c\u6570\u636e\\r\\n\\r\\n![1742483397283](./figure/1742483397283.png)\\r\\n\\r\\n\u56fe2.3\u3000\u6539\u8fdb\u7684\u54c8\u4f5b\u7ed3\u6784\\r\\n\\r\\n\u4ece\u6307\u4ee4\u96c6\u7684\u89d2\u5ea6\u6765\u8bb2\uff0c\u4e2d\u592e\u5904\u7406\u5668\u4e5f\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff0c\u5373RISC\uff08\u7cbe\u7b80\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a\uff09\u548cCISC\uff08\u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a\uff09\u3002CSIC\u5f3a\u8c03\u589e\u5f3a\u6307\u4ee4\u7684\u80fd\u529b\u3001\u51cf\u5c11\u76ee\u6807\u4ee3\u7801\u7684\u6570\u91cf\uff0c\u4f46\u662f\u6307\u4ee4\u590d\u6742\uff0c\u6307\u4ee4\u5468\u671f\u957f\uff1b\u800cRISC\u5f3a\u8c03\u5c3d\u91cf\u51cf\u5c11\u6307\u4ee4\u96c6\u3001\u6307\u4ee4\u5355\u5468\u671f\u6267\u884c\uff0c\u4f46\u662f\u76ee\u6807\u4ee3\u7801\u4f1a\u66f4\u5927\u3002ARM\u3001MIPS\u3001PowerPC\u7b49CPU\u5185\u6838\u90fd\u91c7\u7528\u4e86RISC\u6307\u4ee4\u96c6\u3002\u76ee\u524d\uff0cRISC\u548cCSIC\u4e24\u8005\u7684\u878d\u5408\u975e\u5e38\u660e\u663e\u3002\\r\\n\\r\\n# 2.1.2\u3000\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\\r\\n\\r\\n\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\uff08DSP\uff09\u9488\u5bf9\u901a\u4fe1\u3001\u56fe\u50cf\u3001\u8bed\u97f3\u548c\u89c6\u9891\u5904\u7406\u7b49\u9886\u57df\u7684\u7b97\u6cd5\u800c\u8bbe\u8ba1\u3002\u5b83\u5305\u542b\u72ec\u7acb\u7684\u786c\u4ef6\u4e58\u6cd5\u5668\u3002DSP\u7684\u4e58\u6cd5\u6307\u4ee4\u4e00\u822c\u5728\u5355\u5468\u671f\u5185\u5b8c\u6210\uff0c\u4e14\u4f18\u5316\u4e86\u5377\u79ef\u3001\u6570\u5b57\u6ee4\u6ce2\u3001FFT\uff08\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362\uff09\u3001\u76f8\u5173\u77e9\u9635\u8fd0\u7b97\u7b49\u7b97\u6cd5\u4e2d\u7684\u5927\u91cf\u91cd\u590d\u4e58\u6cd5\u3002\\r\\n\\r\\nDSP\u5206\u4e3a\u4e24\u7c7b\uff0c\u4e00\u7c7b\u662f\u5b9a\u70b9DSP\uff0c\u53e6\u4e00\u7c7b\u662f\u6d6e\u70b9DSP\u3002\u6d6e\u70b9DSP\u7684\u6d6e\u70b9\u8fd0\u7b97\u7528\u786c\u4ef6\u6765\u5b9e\u73b0\uff0c\u53ef\u4ee5\u5728\u5355\u5468\u671f\u5185\u5b8c\u6210\uff0c\u56e0\u800c\u5176\u6d6e\u70b9\u8fd0\u7b97\u5904\u7406\u901f\u5ea6\u9ad8\u4e8e\u5b9a\u70b9DSP\u3002\u800c\u5b9a\u70b9DSP\u53ea\u80fd\u7528\u5b9a\u70b9\u8fd0\u7b97\u6a21\u62df\u6d6e\u70b9\u8fd0\u7b97\u3002\\r\\n\\r\\n\u5fb7\u5dde\u4eea\u5668\uff08TI\uff09\u3001\u7f8e\u56fd\u6a21\u62df\u5668\u4ef6\u516c\u53f8\uff08ADI\uff09\u662f\u5168\u7403DSP\u7684\u4e24\u5927\u4e3b\u8981\u5382\u5546\u3002\\r\\n\\r\\nTI\u7684TMS320 TM DSP\u5e73\u53f0\u5305\u542b\u4e86\u529f\u80fd\u4e0d\u540c\u7684\u591a\u4e2a\u7cfb\u5217\uff0c\u59822000\u7cfb\u5217\u30013000\u7cfb\u5217\u30014000\u7cfb\u5217\u30015000\u7cfb\u5217\u30016000\u7cfb\u5217\uff0c\u5de5\u7a0b\u5e08\u4e5f\u4e60\u60ef\u79f0\u5176\u4e3a2x\u30013x\u30014x\u30015x\u30016x\u30022010\u5e745\u6708\uff0cTI\u5df2\u7ecf\u5ba3\u5e03\u4e3a\u5176C64x\u7cfb\u5217\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\u4e0e\u591a\u6838\u7247\u4e0a\u7cfb\u7edf\u63d0\u4f9bLinux\u5185\u6838\u652f\u6301\uff0c\u4ee5\u5145\u5206\u6ee1\u8db3\u901a\u4fe1\u4e0e\u5173\u952e\u4efb\u52a1\u57fa\u7840\u8bbe\u65bd\u3001\u533b\u7597\u8bca\u65ad\u4ee5\u53ca\u9ad8\u6027\u80fd\u6d4b\u91cf\u6d4b\u8bd5\u7b49\u5e94\u7528\u9700\u6c42\u3002TI\u4e5f\u63a8\u51fa\u4e86\u8f6f\u4ef6\u53ef\u7f16\u7a0b\u591a\u6838ARM+DSP SoC\uff0c\u5373KeyStone\u591a\u6838ARM+DSP\u5904\u7406\u5668\uff0c\u4ee5\u6ee1\u8db3\u533b\u7597\u6210\u50cf\u5e94\u7528\u3001\u4efb\u52a1\u5173\u952e\u5e94\u7528\u3001\u6d4b\u8bd5\u548c\u81ea\u52a8\u5316\u5e94\u7528\u7684\u9700\u6c42\\r\\n\\r\\nADI\u4e3b\u8981\u670916\u4f4d\u5b9a\u70b9\u768421xx\u7cfb\u5217\u300132\u4f4d\u6d6e\u70b9\u7684SHARC\u7cfb\u5217\u3001\u4eceSHARC\u7cfb\u5217\u53d1\u5c55\u800c\u6765\u7684TigerSHARC\u7cfb\u5217\uff0c\u4ee5\u53ca\u9ad8\u6027\u80fd16\u4f4dDSP\u4fe1\u53f7\u5904\u7406\u80fd\u529b\u4e0e\u901a\u7528\u5fae\u63a7\u5236\u5668\u65b9\u4fbf\u6027\u76f8\u7ed3\u5408\u7684blackfin\u7cfb\u5217\u7b49\u3002ADI\u7684blackfin\u4e0d\u542bMMU\uff0c\u5b8c\u6574\u652f\u6301Linux\uff0c\u662f\u6ca1\u6709MMU\u60c5\u51b5\u4e0bLinux\u7684\u5178\u578b\u6848\u4f8b\uff0c\u5176\u5b98\u65b9\u7f51\u7ad9\u4e3ahttp://blackfin.uclinux.org \uff0c\u76ee\u524dblackfin\u7684Linux\u5f00\u53d1\u4fdd\u6301\u4e86\u4e0eLinux mainline\u7684\u540c\u6b65\u3002\\r\\n\\r\\n\u901a\u7528\u5904\u7406\u5668\u548c\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\u4e5f\u6709\u76f8\u4e92\u878d\u5408\u4ee5\u53d6\u957f\u8865\u77ed\u7684\u8d8b\u52bf\uff0c\u5982\u6570\u5b57\u4fe1\u53f7\u63a7\u5236\u5668\uff08DSC\uff09\u5373\u4e3aMCU+DSP\uff0cADI\u7684blackfin\u7cfb\u5217\u5c31\u5c5e\u4e8eDSC\u3002\u76ee\u524d\uff0c\u82af\u7247\u5382\u5546\u4e5f\u63a8\u51fa\u4e86\u8bb8\u591aARM+DSP\u7684\u53cc\u6838\u4ee5\u53ca\u591a\u6838\u5904\u7406\u5668\uff0c\u5982TI\u516c\u53f8\u7684OMAP 4\u5e73\u53f0\u5c31\u5305\u62ec4\u4e2a\u4e3b\u8981\u5904\u7406\u5f15\u64ce\uff1aARM Cortex-A9MPCore\u3001PowerVR SGX 540GPU\uff08Graphic Processing Unit\uff09\u3001C64x DSP\u548cISP\uff08Image Signal Processor\uff09\u3002\\r\\n\\r\\n\u9664\u4e86\u4e0a\u9762\u8bb2\u8ff0\u7684\u901a\u7528\u5fae\u63a7\u5236\u5668\u548c\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u9488\u5bf9\u7279\u5b9a\u9886\u57df\u800c\u8bbe\u8ba1\u7684\u4e13\u7528\u5904\u7406\u5668\uff08ASP\uff09\uff0c\u5b83\u4eec\u90fd\u662f\u9488\u5bf9\u4e00\u4e9b\u7279\u5b9a\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\uff0c\u5982\u7528\u4e8eHDTV\u3001ADSL\u3001Cable Modem\u7b49\u7684\u4e13\u7528\u5904\u7406\u5668\u3002\\r\\n\\r\\n\u7f51\u7edc\u5904\u7406\u5668\u662f\u4e00\u79cd\u53ef\u7f16\u7a0b\u5668\u4ef6\uff0c\u5b83\u5e94\u7528\u4e8e\u7535\u4fe1\u9886\u57df\u7684\u5404\u79cd\u4efb\u52a1\uff0c\u5982\u5305\u5904\u7406\u3001\u534f\u8bae\u5206\u6790\u3001\u8def\u7531\u67e5\u627e\u3001\u58f0\u97f3/\u6570\u636e\u7684\u6c47\u805a\u3001\u9632\u706b\u5899\u3001QoS\u7b49\u3002\u7f51\u7edc\u5904\u7406\u5668\u5668\u4ef6\u5185\u90e8\u901a\u5e38\u7531\u82e5\u5e72\u4e2a\u5fae\u7801\u5904\u7406\u5668\u548c\u82e5\u5e72\u786c\u4ef6\u534f\u5904\u7406\u5668\u7ec4\u6210\uff0c\u591a\u4e2a\u5fae\u7801\u5904\u7406\u5668\u5728\u7f51\u7edc\u5904\u7406\u5668\u5185\u90e8\u5e76\u884c\u5904\u7406\uff0c\u901a\u8fc7\u9884\u5148\u7f16\u5236\u7684\u5fae\u7801\u6765\u63a7\u5236\u5904\u7406\u6d41\u7a0b\u3002\u800c\u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u7684\u6807\u51c6\u64cd\u4f5c\uff08\u5982\u5185\u5b58\u64cd\u4f5c\u3001\u8def\u7531\u8868\u67e5\u627e\u7b97\u6cd5\u3001QoS\u7684\u62e5\u585e\u63a7\u5236\u7b97\u6cd5\u3001\u6d41\u91cf\u8c03\u5ea6\u7b97\u6cd5\u7b49\uff09\uff0c\u5219\u91c7\u7528\u786c\u4ef6\u534f\u5904\u7406\u5668\u6765\u8fdb\u4e00\u6b65\u63d0\u9ad8\u5904\u7406\u6027\u80fd\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u4e1a\u52a1\u7075\u6d3b\u6027\u548c\u9ad8\u6027\u80fd\u7684\u6709\u673a\u7ed3\u5408\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u67d0\u4e9b\u5e94\u7528\u573a\u5408\uff0c\u4f7f\u7528ASIC\uff08\u4e13\u7528\u96c6\u6210\u7535\u8def\uff09\u5f80\u5f80\u662f\u4f4e\u6210\u672c\u4e14\u9ad8\u6027\u80fd\u7684\u65b9\u6848\u3002ASIC\u4e13\u95e8\u9488\u5bf9\u7279\u5b9a\u5e94\u7528\u800c\u8bbe\u8ba1\uff0c\u4e0d\u5177\u5907\u4e5f\u4e0d\u9700\u8981\u7075\u6d3b\u7684\u7f16\u7a0b\u80fd\u529b\u3002\u4f7f\u7528ASIC\u5b8c\u6210\u540c\u6837\u7684\u529f\u80fd\u5f80\u5f80\u6bd4\u76f4\u63a5\u4f7f\u7528CPU\u8d44\u6e90\u6216CPLD\uff08\u590d\u6742\u53ef\u7f16\u7a0b\u903b\u8f91\u5668\u4ef6\uff09/FPGA\uff08\u73b0\u573a\u53ef\u7f16\u7a0b\u95e8\u9635\u5217\uff09\u6765\u5f97\u66f4\u5ec9\u4ef7\u4e14\u9ad8\u6548\\r\\n\\r\\n![image-20250323160936379](./figure/image-20250323160936379.png)\\r\\n\\r\\n\u56fe2.4\u3000\u5904\u7406\u5668\u5206\u7c7b\\r\\n\\r\\n\u5728\u5b9e\u9645\u9879\u76ee\u7684\u786c\u4ef6\u65b9\u6848\u4e2d\uff0c\u5f80\u5f80\u4f1a\u6839\u636e\u5e94\u7528\u7684\u9700\u6c42\u9009\u62e9\u901a\u7528\u5904\u7406\u5668\u3001\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5668\u3001\u7279\u5b9a\u9886\u57df\u5904\u7406\u5668\u3001CPLD/FPGA\u6216ASIC\u4e4b\u4e00\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5728\u590d\u6742\u7684\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4e9b\u82af\u7247\u53ef\u80fd\u4f1a\u540c\u65f6\u5b58\u5728\uff0c\u534f\u540c\u5408\u4f5c\uff0c\u5404\u81ea\u53d1\u6325\u81ea\u5df1\u7684\u957f\u5904\u3002\u5982\u5728\u4e00\u6b3e\u667a\u80fd\u624b\u673a\u4e2d\uff0c\u53ef\u4f7f\u7528MCU\u5904\u7406\u56fe\u5f62\u7528\u6237\u754c\u9762\u548c\u7528\u6237\u7684\u6309\u952e\u8f93\u5165\u5e76\u8fd0\u884c\u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f7f\u7528DSP\u8fdb\u884c\u97f3\u89c6\u9891\u7f16\u89e3\u7801\uff0c\u800c\u5728\u5c04\u9891\u65b9\u9762\u5219\u91c7\u7528ASIC\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784","description":"\u4e00\u4e2aLinux\u5185\u6838\u6a21\u5757\u4e3b\u8981\u7531\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\u3002","date":"2025-09-15T14:44:15.013Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.84,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"2.1.1\u3000\u901a\u7528\u5904\u7406\u5668","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.1\u3000\u5904\u7406\u5668"},"nextItem":{"title":"9.2.1\u3000Linux\u4fe1\u53f7","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.2\u3000Linux\u5f02\u6b65\u901a\u77e5\u7f16\u7a0b"}},"content":"\u4e00\u4e2aLinux\u5185\u6838\u6a21\u5757\u4e3b\u8981\u7531\u5982\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\u3002\\r\\n\\r\\n\uff081\uff09\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\\r\\n\\r\\n\u5f53\u901a\u8fc7insmod\u6216modprobe\u547d\u4ee4\u52a0\u8f7d\u5185\u6838\u6a21\u5757\u65f6\uff0c\u6a21\u5757\u7684\u52a0\u8f7d\u51fd\u6570\u4f1a\u81ea\u52a8\u88ab\u5185\u6838\u6267\u884c\uff0c\u5b8c\u6210\u672c\u6a21\u5757\u7684\u76f8\u5173\u521d\u59cb\u5316\u5de5\u4f5c\u3002\\r\\n\\r\\n\uff082\uff09\u6a21\u5757\u5378\u8f7d\u51fd\u6570\\r\\n\\r\\n\u5f53\u901a\u8fc7rmmod\u547d\u4ee4\u5378\u8f7d\u67d0\u6a21\u5757\u65f6\uff0c\u6a21\u5757\u7684\u5378\u8f7d\u51fd\u6570\u4f1a\u81ea\u52a8\u88ab\u5185\u6838\u6267\u884c\uff0c\u5b8c\u6210\u4e0e\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u76f8\u53cd\u7684\u529f\u80fd\u3002\\r\\n\\r\\n\uff083\uff09\u6a21\u5757\u8bb8\u53ef\u8bc1\u58f0\u660e\\r\\n\\r\\n\u8bb8\u53ef\u8bc1\uff08LICENSE\uff09\u58f0\u660e\u63cf\u8ff0\u5185\u6838\u6a21\u5757\u7684\u8bb8\u53ef\u6743\u9650\uff0c\u5982\u679c\u4e0d\u58f0\u660eLICENSE\uff0c\u6a21\u5757\u88ab\u52a0\u8f7d\u65f6\uff0c\u5c06\u6536\u5230\u5185\u6838\u88ab\u6c61\u67d3\uff08Kernel Tainted\uff09\u7684\u8b66\u544a\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u6a21\u5757\u9886\u57df\uff0c\u53ef\u63a5\u53d7\u7684LICENSE\u5305\u62ec\u201cGPL\u201d\u3001\u201cGPL v2\u201d\u3001\u201cGPL and additional rights\u201d\u3001\u201cDual BSD/GPL\u201d\u3001\u201cDual MPL/GPL\u201d\u548c\u201cProprietary\u201d\uff08\u5173\u4e8e\u6a21\u5757\u662f\u5426\u53ef\u4ee5\u91c7\u7528\u975eGPL\u8bb8\u53ef\u6743\uff0c\u5982\u201cProprietary\u201d\uff0c\u8fd9\u4e2a\u5728\u5b66\u672f\u754c\u548c\u6cd5\u5f8b\u754c\u90fd\u6709\u4e89\u8bae\uff09\u3002\\r\\n\\r\\n\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u6a21\u5757\u5e94\u9075\u5faaGPL\u517c\u5bb9\u8bb8\u53ef\u6743\u3002Linux\u5185\u6838\u6a21\u5757\u6700\u5e38\u89c1\u7684\u662f\u4ee5MODULE_LICENSE\uff08\u201cGPL v2\u201d\uff09\u8bed\u53e5\u58f0\u660e\u6a21\u5757\u91c7\u7528GPL v2\u3002\\r\\n\\r\\n\uff084\uff09\u6a21\u5757\u53c2\u6570\uff08\u53ef\u9009\uff09\\r\\n\\r\\n\u6a21\u5757\u53c2\u6570\u662f\u6a21\u5757\u88ab\u52a0\u8f7d\u7684\u65f6\u5019\u53ef\u4ee5\u4f20\u9012\u7ed9\u5b83\u7684\u503c\uff0c\u5b83\u672c\u8eab\u5bf9\u5e94\u6a21\u5757\u5185\u90e8\u7684\u5168\u5c40\u53d8\u91cf\u3002\\r\\n\\r\\n\uff085\uff09\u6a21\u5757\u5bfc\u51fa\u7b26\u53f7\uff08\u53ef\u9009\\r\\n\\r\\n\u5185\u6838\u6a21\u5757\u53ef\u4ee5\u5bfc\u51fa\u7684\u7b26\u53f7\uff08symbol\uff0c\u5bf9\u5e94\u4e8e\u51fd\u6570\u6216\u53d8\u91cf\uff09\uff0c\u82e5\u5bfc\u51fa\uff0c\u5176\u4ed6\u6a21\u5757\u5219\u53ef\u4ee5\u4f7f\u7528\u672c\u6a21\u5757\u4e2d\u7684\u53d8\u91cf\u6216\u51fd\u6570\u3002\\r\\n\\r\\n\uff086\uff09\u6a21\u5757\u4f5c\u8005\u7b49\u4fe1\u606f\u58f0\u660e\uff08\u53ef\u9009\uff09"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.2\u3000Linux\u5f02\u6b65\u901a\u77e5\u7f16\u7a0b","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.2\u3000Linux\u5f02\u6b65\u901a\u77e5\u7f16\u7a0b","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.2\u3000Linux\u5f02\u6b65\u901a\u77e5\u7f16\u7a0b.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.2\u3000Linux\u5f02\u6b65\u901a\u77e5\u7f16\u7a0b.md","title":"9.2.1\u3000Linux\u4fe1\u53f7","description":"\u4f7f\u7528\u4fe1\u53f7\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u662fUNIX\u4e2d\u7684\u4e00\u79cd\u4f20\u7edf\u673a\u5236\uff0cLinux\u4e5f\u652f\u6301\u8fd9\u79cd\u673a\u5236\u3002\u5728Linux\u4e2d\uff0c\u5f02\u6b65\u901a\u77e5\u4f7f\u7528\u4fe1\u53f7\u6765\u5b9e\u73b0\uff0cLinux\u4e2d\u53ef\u7528\u7684\u4fe1\u53f7\u53ca\u5176\u5b9a\u4e49\u5982\u88689.1\u6240\u793a\u3002","date":"2025-09-15T14:44:15.013Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":10.215,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.2\u3000Linux\u5185\u6838\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3"}},"content":"\u4f7f\u7528\u4fe1\u53f7\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u662fUNIX\u4e2d\u7684\u4e00\u79cd\u4f20\u7edf\u673a\u5236\uff0cLinux\u4e5f\u652f\u6301\u8fd9\u79cd\u673a\u5236\u3002\u5728Linux\u4e2d\uff0c\u5f02\u6b65\u901a\u77e5\u4f7f\u7528\u4fe1\u53f7\u6765\u5b9e\u73b0\uff0cLinux\u4e2d\u53ef\u7528\u7684\u4fe1\u53f7\u53ca\u5176\u5b9a\u4e49\u5982\u88689.1\u6240\u793a\u3002\\r\\n\\r\\n\u88689.1\u3000Linux\u4fe1\u53f7\u53ca\u5176\u5b9a\u4e49\\r\\n\\r\\n![image-20250329151020572](./figure/image-20250329151020572.png)\\r\\n\\r\\n![image-20250329151038482](./figure/image-20250329151038482.png)\\r\\n\\r\\n\u9664\u4e86SIGSTOP\u548cSIGKILL\u4e24\u4e2a\u4fe1\u53f7\u5916\uff0c\u8fdb\u7a0b\u80fd\u591f\u5ffd\u7565\u6216\u6355\u83b7\u5176\u4ed6\u7684\u5168\u90e8\u4fe1\u53f7\u3002\u4e00\u4e2a\u4fe1\u53f7\u88ab\u6355\u83b7\u7684\u610f\u601d\u662f\u5f53\u4e00\u4e2a\u4fe1\u53f7\u5230\u8fbe\u65f6\u6709\u76f8\u5e94\u7684\u4ee3\u7801\u5904\u7406\u5b83\u3002\u5982\u679c\u4e00\u4e2a\u4fe1\u53f7\u6ca1\u6709\u88ab\u8fd9\u4e2a\u8fdb\u7a0b\u6240\u6355\u83b7\uff0c\u5185\u6838\u5c06\u91c7\u7528\u9ed8\u8ba4\u884c\u4e3a\u5904\u7406\u3002\\r\\n\\r\\n# 9.2.2\u3000\u4fe1\u53f7\u7684\u63a5\u6536\\r\\n\\r\\n\u5728\u7528\u6237\u7a0b\u5e8f\u4e2d\uff0c\u4e3a\u4e86\u6355\u83b7\u4fe1\u53f7\uff0c\u53ef\u4ee5\u4f7f\u7528signal\uff08\uff09\u51fd\u6570\u6765\u8bbe\u7f6e\u5bf9\u5e94\u4fe1\u53f7\u7684\u5904\u7406\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nvoid (*signal(int signum, void (*handler))(int)))(int);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u539f\u578b\u8f83\u96be\u7406\u89e3\uff0c\u5b83\u53ef\u4ee5\u5206\u89e3\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ntypedef void (*sighandler_t)(int);\\r\\nsighandler_t signal(int signum, sighandler_t handler));\\r\\n```\\r\\n\\r\\n\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u4fe1\u53f7\u7684\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u9488\u5bf9\u524d\u9762\u4fe1\u53f7\u503c\u7684\u5904\u7406\u51fd\u6570\uff0c\u82e5\u4e3aSIG_IGN\uff0c\u8868\u793a\u5ffd\u7565\u8be5\u4fe1\u53f7\uff1b\u82e5\u4e3aSIG_DFL\uff0c\u8868\u793a\u91c7\u7528\u7cfb\u7edf\u9ed8\u8ba4\u65b9\u5f0f\u5904\u7406\u4fe1\u53f7\uff1b\u82e5\u4e3a\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u5219\u4fe1\u53f7\u88ab\u6355\u83b7\u5230\u540e\uff0c\u8be5\u51fd\u6570\u5c06\u88ab\u6267\u884c\u3002\\r\\n\\r\\n\u5982\u679csignal\uff08\uff09\u8c03\u7528\u6210\u529f\uff0c\u5b83\u8fd4\u56de\u6700\u540e\u4e00\u6b21\u4e3a\u4fe1\u53f7signum\u7ed1\u5b9a\u7684\u5904\u7406\u51fd\u6570\u7684handler\u503c\uff0c\u5931\u8d25\u5219\u8fd4\u56deSIG_ERR\u3002\\r\\n\\r\\n\u5728\u8fdb\u7a0b\u6267\u884c\u65f6\uff0c\u6309\u4e0b\u201cCtrl+C\u201d\u5c06\u5411\u5176\u53d1\u51faSIGINT\u4fe1\u53f7\uff0c\u6b63\u5728\u8fd0\u884ckill\u7684\u8fdb\u7a0b\u5c06\u5411\u5176\u53d1\u51faSIGTERM\u4fe1\u53f7\uff0c\u4ee3\u7801\u6e05\u53559.1\u7684\u8fdb\u7a0b\u53ef\u6355\u83b7\u8fd9\u4e24\u4e2a\u4fe1\u53f7\u5e76\u8f93\u51fa\u4fe1\u53f7\u503c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.1\u3000signal\uff08\uff09\u6355\u83b7\u4fe1\u53f7\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1void sigterm_handler(int signo)\\r\\n 2{\\r\\n 3  printf(\\"Have caught sig N.O. %d\\\\n\\", signo);\\r\\n 4  exit(0);\\r\\n 5}\\r\\n 6\\r\\n 7int main(void)\\r\\n 8{\\r\\n 9  signal(SIGINT, sigterm_handler);\\r\\n10  signal(SIGTERM, sigterm_handler);\\r\\n11  while(1);\\r\\n12\\r\\n13  return 0;\\r\\n14}\\r\\n```\\r\\n\\r\\n\u9664\u4e86signal\uff08\uff09\u51fd\u6570\u5916\uff0csigaction\uff08\uff09\u51fd\u6570\u53ef\u7528\u4e8e\u6539\u53d8\u8fdb\u7a0b\u63a5\u6536\u5230\u7279\u5b9a\u4fe1\u53f7\u540e\u7684\u884c\u4e3a\uff0c\u5b83\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint sigaction(int signum,const struct sigaction *act,struct sigaction *oldact));\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u4fe1\u53f7\u7684\u503c\uff0c\u53ef\u4ee5\u662f\u9664SIGKILL\u53caSIGSTOP\u5916\u7684\u4efb\u4f55\u4e00\u4e2a\u7279\u5b9a\u6709\u6548\u7684\u4fe1\u53f7\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6307\u5411\u7ed3\u6784\u4f53sigaction\u7684\u4e00\u4e2a\u5b9e\u4f8b\u7684\u6307\u9488\uff0c\u5728\u7ed3\u6784\u4f53sigaction\u7684\u5b9e\u4f8b\u4e2d\uff0c\u6307\u5b9a\u4e86\u5bf9\u7279\u5b9a\u4fe1\u53f7\u7684\u5904\u7406\u51fd\u6570\uff0c\u82e5\u4e3a\u7a7a\uff0c\u5219\u8fdb\u7a0b\u4f1a\u4ee5\u7f3a\u7701\u65b9\u5f0f\u5bf9\u4fe1\u53f7\u5904\u7406\uff1b\u7b2c\u4e09\u4e2a\u53c2\u6570oldact\u6307\u5411\u7684\u5bf9\u8c61\u7528\u6765\u4fdd\u5b58\u539f\u6765\u5bf9\u76f8\u5e94\u4fe1\u53f7\u7684\u5904\u7406\u51fd\u6570\uff0c\u53ef\u6307\u5b9aoldact\u4e3aNULL\u3002\u5982\u679c\u628a\u7b2c\u4e8c\u3001\u7b2c\u4e09\u4e2a\u53c2\u6570\u90fd\u8bbe\u4e3aNULL\uff0c\u90a3\u4e48\u8be5\u51fd\u6570\u53ef\u7528\u4e8e\u68c0\u67e5\u4fe1\u53f7\u7684\u6709\u6548\u6027\u3002\\r\\n\\r\\n\u5148\u6765\u770b\u4e00\u4e2a\u4f7f\u7528\u4fe1\u53f7\u5b9e\u73b0\u5f02\u6b65\u901a\u77e5\u7684\u4f8b\u5b50\uff0c\u5b83\u901a\u8fc7signal\uff08SIGIO\uff0cinput_handler\uff09\u5bf9\u6807\u51c6\u8f93\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26STDIN_FILENO\u542f\u52a8\u4fe1\u53f7\u673a\u5236\u3002\u7528\u6237\u8f93\u5165\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u63a5\u6536\u5230SIGIO\u4fe1\u53f7\uff0c\u5176\u5904\u7406\u51fd\u6570input_handler\uff08\uff09\u5c06\u88ab\u8c03\u7528\uff0c\u5982\u4ee3\u7801\u6e05\u53559.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.2\u3000\u4f7f\u7528\u4fe1\u53f7\u5b9e\u73b0\u5f02\u6b65\u901a\u77e5\u7684\u5e94\u7528\u7a0b\u5e8f\u5b9e\u4f8b\\r\\n\\r\\n```\\r\\n 1#include <sys/types.h>\\r\\n 2#include <sys/stat.h>\\r\\n 3#include <stdio.h>\\r\\n 4#include <fcntl.h>\\r\\n 5#include <signal.h>\\r\\n 6#include <unistd.h>\\r\\n 7#define MAX_LEN 100\\r\\n 8void input_handler(int num)\\r\\n 9{\\r\\n10  char data[MAX_LEN];\\r\\n11  int len;\\r\\n12\\r\\n13  /* \u8bfb\u53d6\u5e76\u8f93\u51faSTDIN_FILENO\u4e0a\u7684\u8f93\u5165 */\\r\\n14  len = read(STDIN_FILENO, &data, MAX_LEN);\\r\\n15  data[len] = 0;\\r\\n16  printf(\\"input available:%s\\\\n\\", data);\\r\\n17}\\r\\n18\\r\\n19main()\\r\\n20{\\r\\n21  int oflags;\\r\\n22\\r\\n23  /* \u542f\u52a8\u4fe1\u53f7\u9a71\u52a8\u673a\u5236*/\\r\\n24  signal(SIGIO, input_handler);\\r\\n25  fcntl(STDIN_FILENO, F_SETOWN, getpid());\\r\\n26  oflags = fcntl(STDIN_FILENO, F_GETFL);\\r\\n27  fcntl(STDIN_FILENO, F_SETFL, oflags | FASYNC);\\r\\n28\\r\\n29 /* \u6700\u540e\u8fdb\u5165\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0c\u4ec5\u4e3a\u4fdd\u6301\u8fdb\u7a0b\u4e0d\u7ec8\u6b62\uff0c\u5982\u679c\u7a0b\u5e8f\u4e2d\\r\\n30 \u6ca1\u6709\u8fd9\u4e2a\u6b7b\u5faa\u4f1a\u7acb\u5373\u6267\u884c\u5b8c\u6bd5*/\\r\\n31 while (1);\\r\\n32}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u780124\u884c\u4e3aSIGIO\u4fe1\u53f7\u5b89\u88c5input_handler\uff08\uff09\u4f5c\u4e3a\u5904\u7406\u51fd\u6570\uff0c\u7b2c25\u884c\u8bbe\u7f6e\u672c\u8fdb\u7a0b\u4e3aSTDIN_FILENO\u6587\u4ef6\u7684\u62e5\u6709\u8005\uff0c\u6ca1\u6709\u8fd9\u4e00\u6b65\uff0c\u5185\u6838\u4e0d\u4f1a\u77e5\u9053\u5e94\u8be5\u5c06\u4fe1\u53f7\u53d1\u7ed9\u54ea\u4e2a\u8fdb\u7a0b\u3002\u800c\u4e3a\u4e86\u542f\u7528\u5f02\u6b65\u901a\u77e5\u673a\u5236\uff0c\u8fd8\u9700\u5bf9\u8bbe\u5907\u8bbe\u7f6eFASYNC\u6807\u5fd7\uff0c\u7b2c26\u884c\u300127\u884c\u4ee3\u7801\u53ef\u5b9e\u73b0\u6b64\u76ee\u7684\u3002\u6574\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u679c\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n[root@localhost driver_study]# ./signal_test\\r\\nI am Chinese.                            -> \u7528\u6237\u8f93\u5165\\r\\ninput available: I am Chinese.            -> signal_test\u7a0b\u5e8f\u6253\u5370\\r\\nI love Linux driver.                      -> \u7528\u6237\u8f93\u5165\\r\\ninput available: I love Linux driver.    -> signal_test\u7a0b\u5e8f\u6253\u5370\\r\\n\\r\\n```\\r\\n\\r\\n\u4ece\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u7528\u6237\u8f93\u5165\u4e00\u4e32\u5b57\u7b26\u540e\uff0c\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u91ca\u653eSIGIO\u4fe1\u53f7\uff0c\u8fd9\u4e2a\u4fe1\u53f7\u201c\u4e2d\u65ad\u201d\u4e0e\u9a71\u4f7f\u5bf9\u5e94\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684input_handler\uff08\uff09\u5f97\u4ee5\u6267\u884c\uff0c\u5e76\u5c06\u7528\u6237\u8f93\u5165\u663e\u793a\u51fa\u6765\u3002\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0c\u4e3a\u4e86\u80fd\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u5904\u7406\u4e00\u4e2a\u8bbe\u5907\u91ca\u653e\u7684\u4fe1\u53f7\uff0c\u5b83\u5fc5\u987b\u5b8c\u62103\u9879\u5de5\u4f5c\u3002\\r\\n\\r\\n1\uff09\u901a\u8fc7F_SETOWN IO\u63a7\u5236\u547d\u4ee4\u8bbe\u7f6e\u8bbe\u5907\u6587\u4ef6\u7684\u62e5\u6709\u8005\u4e3a\u672c\u8fdb\u7a0b\uff0c\u8fd9\u6837\u4ece\u8bbe\u5907\u9a71\u52a8\u53d1\u51fa\u7684\u4fe1\u53f7\u624d\u80fd\u88ab\u672c\u8fdb\u7a0b\u63a5\u6536\u5230\u3002\\r\\n\\r\\n2\uff09\u901a\u8fc7F_SETFL IO\u63a7\u5236\u547d\u4ee4\u8bbe\u7f6e\u8bbe\u5907\u6587\u4ef6\u4ee5\u652f\u6301FASYNC\uff0c\u5373\u5f02\u6b65\u901a\u77e5\u6a21\u5f0f\u3002\\r\\n\\r\\n3\uff09\u901a\u8fc7signal\uff08\uff09\u51fd\u6570\u8fde\u63a5\u4fe1\u53f7\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\\r\\n\\r\\n# 9.2.3\u3000\u4fe1\u53f7\u7684\u91ca\u653e\\r\\n\\r\\n\u5728\u8bbe\u5907\u9a71\u52a8\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5f02\u6b65\u901a\u77e5\u4ea4\u4e92\u4e2d\uff0c\u4ec5\u4ec5\u5728\u5e94\u7528\u7a0b\u5e8f\u7aef\u6355\u83b7\u4fe1\u53f7\u662f\u4e0d\u591f\u7684\uff0c\u56e0\u4e3a\u4fe1\u53f7\u7684\u6e90\u5934\u5728\u8bbe\u5907\u9a71\u52a8\u7aef\u3002\u56e0\u6b64\uff0c\u5e94\u8be5\u5728\u5408\u9002\u7684\u65f6\u673a\u8ba9\u8bbe\u5907\u9a71\u52a8\u91ca\u653e\u4fe1\u53f7\uff0c\u5728\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u589e\u52a0\u4fe1\u53f7\u91ca\u653e\u7684\u76f8\u5173\u4ee3\u7801\u3002\\r\\n\\r\\n\u4e3a\u4e86\u4f7f\u8bbe\u5907\u652f\u6301\u5f02\u6b65\u901a\u77e5\u673a\u5236\uff0c\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u6d89\u53ca3\u9879\u5de5\u4f5c\u3002\\r\\n\\r\\n1\uff09\u652f\u6301F_SETOWN\u547d\u4ee4\uff0c\u80fd\u5728\u8fd9\u4e2a\u63a7\u5236\u547d\u4ee4\u5904\u7406\u4e2d\u8bbe\u7f6efilp->f_owner\u4e3a\u5bf9\u5e94\u8fdb\u7a0bID\u3002\u4e0d\u8fc7\u6b64\u9879\u5de5\u4f5c\u5df2\u7531\u5185\u6838\u5b8c\u6210\uff0c\u8bbe\u5907\u9a71\u52a8\u65e0\u987b\u5904\u7406\u3002\\r\\n\\r\\n2\uff09\u652f\u6301F_SETFL\u547d\u4ee4\u7684\u5904\u7406\uff0c\u6bcf\u5f53FASYNC\u6807\u5fd7\u6539\u53d8\u65f6\uff0c\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684fasync\uff08\uff09\u51fd\u6570\u5c06\u5f97\u4ee5\u6267\u884c\u3002\u56e0\u6b64\uff0c\u9a71\u52a8\u4e2d\u5e94\u8be5\u5b9e\u73b0fasync\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n3\uff09\u5728\u8bbe\u5907\u8d44\u6e90\u53ef\u83b7\u5f97\u65f6\uff0c\u8c03\u7528kill_fasync\uff08\uff09\u51fd\u6570\u6fc0\u53d1\u76f8\u5e94\u7684\u4fe1\u53f7\u3002\\r\\n\\r\\n\u9a71\u52a8\u4e2d\u7684\u4e0a\u8ff03\u9879\u5de5\u4f5c\u548c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u76843\u9879\u5de5\u4f5c\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u56fe9.2\u6240\u793a\u4e3a\u5f02\u6b65\u901a\u77e5\u5904\u7406\u8fc7\u7a0b\u4e2d\u7528\u6237\u7a7a\u95f4\u548c\u8bbe\u5907\u9a71\u52a8\u7684\u4ea4\u4e92\u3002\\r\\n\\r\\n![image-20250329161212970](./figure/image-20250329161212970.png)\\r\\n\\r\\n\u56fe9.2\u3000\u5f02\u6b65\u901a\u77e5\u4e2d\u8bbe\u5907\u9a71\u52a8\u548c\u5f02\u6b65\u901a\u77e5\u7684\u4ea4\u4e92\\r\\n\\r\\n\u8bbe\u5907\u9a71\u52a8\u4e2d\u5f02\u6b65\u901a\u77e5\u7f16\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c\u4e3b\u8981\u7528\u5230\u4e00\u9879\u6570\u636e\u7ed3\u6784\u548c\u4e24\u4e2a\u51fd\u6570\u3002\u6570\u636e\u7ed3\u6784\u662ffasync_struct\u7ed3\u6784\u4f53\uff0c\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u662f\uff1a\\r\\n\\r\\n1\uff09\u5904\u7406FASYNC\u6807\u5fd7\u53d8\u66f4\u7684\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\nint fasync_helper(int fd, struct file *filp, int mode, struct fasync_struct **fa);\\r\\n```\\r\\n\\r\\n2\uff09\u91ca\u653e\u4fe1\u53f7\u7528\u7684\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\nvoid kill_fasync(struct fasync_struct **fa, int sig, int band);\\r\\n```\\r\\n\\r\\n\u548c\u5176\u4ed6\u7684\u8bbe\u5907\u9a71\u52a8\u4e00\u6837\uff0c\u5c06fasync_struct\u7ed3\u6784\u4f53\u6307\u9488\u653e\u5728\u8bbe\u5907\u7ed3\u6784\u4f53\u4e2d\u4ecd\u7136\u662f\u6700\u4f73\u9009\u62e9\uff0c\u4ee3\u7801\u6e05\u53559.3\u7ed9\u51fa\u4e86\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684\u8bbe\u5907\u7ed3\u6784\u4f53\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.3\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684\u8bbe\u5907\u7ed3\u6784\u4f53\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1struct xxx_dev {\\r\\n 2   struct cdev cdev;                    /* cdev\u7ed3\u6784\u4f53*/\\r\\n 3   ...\\r\\n 4   struct fasync_struct *async_queue;   /* \u5f02\u6b65\u7ed3\u6784\u4f53\u6307\u9488 */\\r\\n 5};\\r\\n```\\r\\n\\r\\n\u5728\u8bbe\u5907\u9a71\u52a8\u7684fasync\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u53ea\u9700\u8981\u7b80\u5355\u5730\u5c06\u8be5\u51fd\u6570\u76843\u4e2a\u53c2\u6570\u4ee5\u53cafasync_struct\u7ed3\u6784\u4f53\u6307\u9488\u7684\u6307\u9488\u4f5c\u4e3a\u7b2c4\u4e2a\u53c2\u6570\u4f20\u5165fasync_helper\uff08\uff09\u51fd\u6570\u5373\u53ef\u3002\u4ee3\u7801\u6e05\u53559.4\u7ed9\u51fa\u4e86\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8ffasync\uff08\uff09\u51fd\u6570\u7684\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.4\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684\u8bbe\u5907\u9a71\u52a8fasync\uff08\uff09\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static int xxx_fasync(int fd, struct file *filp, int mode)\\r\\n 2{\\r\\n 3  struct xxx_dev *dev = filp->private_data;\\r\\n 4  return fasync_helper(fd, filp, mode, &dev->async_queue);\\r\\n 5}\\r\\n```\\r\\n\\r\\n\u5728\u8bbe\u5907\u8d44\u6e90\u53ef\u4ee5\u83b7\u5f97\u65f6\uff0c\u5e94\u8be5\u8c03\u7528kill_fasync\uff08\uff09\u91ca\u653eSIGIO\u4fe1\u53f7\u3002\u5728\u53ef\u8bfb\u65f6\uff0c\u7b2c3\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3aPOLL_IN\uff0c\u5728\u53ef\u5199\u65f6\uff0c\u7b2c3\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3aPOLL_OUT\u3002\u4ee3\u7801\u6e05\u53559.5\u7ed9\u51fa\u4e86\u91ca\u653e\u4fe1\u53f7\u7684\u8303\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.5\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684\u8bbe\u5907\u9a71\u52a8\u4fe1\u53f7\u91ca\u653e\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1static ssize_t xxx_write(struct file *filp, const char __user *buf, size_t count,\\r\\n 2                      loff_t *f_pos)\\r\\n 3{\\r\\n 4     struct xxx_dev *dev = filp->private_data;\\r\\n 5     ...\\r\\n 6     /* \u4ea7\u751f\u5f02\u6b65\u8bfb\u4fe1\u53f7 */\\r\\n 7     if (dev->async_queue)\\r\\n 8          kill_fasync(&dev->async_queue, SIGIO, POLL_IN);\\r\\n 9...\\r\\n10}\\r\\n```\\r\\n\\r\\n\u6700\u540e\uff0c\u5728\u6587\u4ef6\u5173\u95ed\u65f6\uff0c\u5373\u5728\u8bbe\u5907\u9a71\u52a8\u7684release\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u5e94\u8c03\u7528\u8bbe\u5907\u9a71\u52a8\u7684fasync\uff08\uff09\u51fd\u6570\u5c06\u6587\u4ef6\u4ece\u5f02\u6b65\u901a\u77e5\u7684\u5217\u8868\u4e2d\u5220\u9664\u3002\u4ee3\u7801\u6e05\u53559.5\u7ed9\u51fa\u4e86\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684\u8bbe\u5907\u9a71\u52a8release\uff08\uff09\u51fd\u6570\u7684\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.6\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684\u8bbe\u5907\u9a71\u52a8release\uff08\uff09\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static int xxx_release(struct inode *inode, struct file *filp)\\r\\n 2{\\r\\n 3   /* \u5c06\u6587\u4ef6\u4ece\u5f02\u6b65\u901a\u77e5\u5217\u8868\u4e2d\u5220\u9664*/\\r\\n 4   xxx_fasync(-1, filp, 0);\\r\\n 5   ...\\r\\n 6   return 0;\\r\\n 7}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3","description":"\u5bf9Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4f53\u7cfb\u7ed3\u6784\u7684\u5c42\u6b21\u5316\u8bbe\u8ba1\u5b9e\u73b0\u4e86\u5bf9\u4e0a\u5c42\u534f\u8bae\u63a5\u53e3\u7684\u7edf\u4e00\u548c\u786c\u4ef6\u9a71\u52a8\u5bf9\u4e0b\u5c42\u591a\u6837\u5316\u786c\u4ef6\u8bbe\u5907\u7684\u53ef\u9002\u5e94\u3002\u7a0b\u5e8f\u5458\u9700\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\uff0c\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42netdevice\u7ed3\u6784\u4f53\u7684\u5b58\u5728\u5c06\u5343\u53d8\u4e07\u5316\u7684\u7f51\u7edc\u8bbe\u5907\u8fdb\u884c\u62bd\u8c61\uff0c\u4f7f\u5f97\u8bbe\u5907\u529f\u80fd\u5c42\u4e2d\u9664\u6570\u636e\u5305\u63a5\u6536\u4ee5\u5916\u7684\u4e3b\u4f53\u5de5\u4f5c\u90fd\u7531\u586b\u5145netdevice\u7684\u5c5e\u6027\u548c\u51fd\u6570\u6307\u9488\u5b8c\u6210\u3002","date":"2025-09-15T14:44:15.009Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.64,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"9.2.1\u3000Linux\u4fe1\u53f7","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.2\u3000Linux\u5f02\u6b65\u901a\u77e5\u7f16\u7a0b"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784"}},"content":"\u5bf9Linux\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4f53\u7cfb\u7ed3\u6784\u7684\u5c42\u6b21\u5316\u8bbe\u8ba1\u5b9e\u73b0\u4e86\u5bf9\u4e0a\u5c42\u534f\u8bae\u63a5\u53e3\u7684\u7edf\u4e00\u548c\u786c\u4ef6\u9a71\u52a8\u5bf9\u4e0b\u5c42\u591a\u6837\u5316\u786c\u4ef6\u8bbe\u5907\u7684\u53ef\u9002\u5e94\u3002\u7a0b\u5e8f\u5458\u9700\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\uff0c\u7f51\u7edc\u8bbe\u5907\u63a5\u53e3\u5c42net_device\u7ed3\u6784\u4f53\u7684\u5b58\u5728\u5c06\u5343\u53d8\u4e07\u5316\u7684\u7f51\u7edc\u8bbe\u5907\u8fdb\u884c\u62bd\u8c61\uff0c\u4f7f\u5f97\u8bbe\u5907\u529f\u80fd\u5c42\u4e2d\u9664\u6570\u636e\u5305\u63a5\u6536\u4ee5\u5916\u7684\u4e3b\u4f53\u5de5\u4f5c\u90fd\u7531\u586b\u5145net_device\u7684\u5c5e\u6027\u548c\u51fd\u6570\u6307\u9488\u5b8c\u6210\u3002\\r\\n\\r\\n\u5728\u5206\u6790net_device\u6570\u636e\u7ed3\u6784\u7684\u57fa\u7840\u4e0a\uff0c\u672c\u7ae0\u7ed9\u51fa\u4e86\u8bbe\u5907\u9a71\u52a8\u529f\u80fd\u5c42\u8bbe\u5907\u521d\u59cb\u5316\u3001\u6570\u636e\u5305\u6536\u53d1\u3001\u6253\u5f00\u548c\u91ca\u653e\u7b49\u51fd\u6570\u7684\u8bbe\u8ba1\u6a21\u677f\uff0c\u8fd9\u4e9b\u6a21\u677f\u5bf9\u5b9e\u9645\u8bbe\u5907\u9a71\u52a8\u7684\u5f00\u53d1\u5177\u6709\u76f4\u63a5\u6307\u5bfc\u610f\u4e49\u3002\u6709\u4e86\u8fd9\u4e9b\u6a21\u677f\uff0c\u6211\u4eec\u5728\u8bbe\u8ba1\u5177\u4f53\u8bbe\u5907\u7684\u9a71\u52a8\u65f6\uff0c\u4e0d\u518d\u9700\u8981\u5173\u5fc3\u7a0b\u5e8f\u7684\u4f53\u7cfb\uff0c\u800c\u53ef\u4ee5\u5c06\u7cbe\u529b\u96c6\u4e2d\u4e8e\u786c\u4ef6\u64cd\u4f5c\u672c\u8eab\\r\\n\\r\\n\u5728Linux\u7f51\u7edc\u5b50\u7cfb\u7edf\u548c\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u5957\u63a5\u5b57\u7f13\u51b2\u533ask_buff\u53d1\u6325\u7740\u5de8\u5927\u7684\u4f5c\u7528\uff0c\u5b83\u662f\u6240\u6709\u6570\u636e\u6d41\u52a8\u7684\u8f7d\u4f53\u3002\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u548c\u4e0a\u5c42\u534f\u8bae\u4e4b\u95f4\u4e5f\u57fa\u4e8e\u6b64\u7ed3\u6784\u8fdb\u884c\u6570\u636e\u5305\u4ea4\u4e92\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u7279\u522b\u7262\u8bb0\u5b83\u7684\u64cd\u4f5c\u65b9\u6cd5\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784","description":"Linux\u7535\u6e90\u7ba1\u7406\u975e\u5e38\u590d\u6742\uff0c\u7275\u626f\u5230\u7cfb\u7edf\u7ea7\u7684\u5f85\u673a\u3001\u9891\u7387\u7535\u538b\u53d8\u6362\u3001\u7cfb\u7edf\u7a7a\u95f2\u65f6\u7684\u5904\u7406\u4ee5\u53ca\u6bcf\u4e2a\u8bbe\u5907\u9a71\u52a8\u5bf9\u7cfb\u7edf\u5f85\u673a\u7684\u652f\u6301\u548c\u6bcf\u4e2a\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\uff08Runtime\uff09\u7535\u6e90\u7ba1\u7406\uff0c\u53ef\u4ee5\u8bf4\u5b83\u548c\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u8bbe\u5907\u9a71\u52a8\u90fd\u606f\u606f\u76f8\u5173\u3002","date":"2025-09-15T14:44:15.009Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.765,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.10\u3000\u603b\u7ed3"},"nextItem":{"title":"11.3.1\u3000\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u52a8\u6001\u7533\u8bf7","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.3\u3000\u5185\u5b58\u5b58\u53d6"}},"content":"Linux\u7535\u6e90\u7ba1\u7406\u975e\u5e38\u590d\u6742\uff0c\u7275\u626f\u5230\u7cfb\u7edf\u7ea7\u7684\u5f85\u673a\u3001\u9891\u7387\u7535\u538b\u53d8\u6362\u3001\u7cfb\u7edf\u7a7a\u95f2\u65f6\u7684\u5904\u7406\u4ee5\u53ca\u6bcf\u4e2a\u8bbe\u5907\u9a71\u52a8\u5bf9\u7cfb\u7edf\u5f85\u673a\u7684\u652f\u6301\u548c\u6bcf\u4e2a\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\uff08Runtime\uff09\u7535\u6e90\u7ba1\u7406\uff0c\u53ef\u4ee5\u8bf4\u5b83\u548c\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u8bbe\u5907\u9a71\u52a8\u90fd\u606f\u606f\u76f8\u5173\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u6d88\u8d39\u7535\u5b50\u4ea7\u54c1\u6765\u8bf4\uff0c\u7535\u6e90\u7ba1\u7406\u76f8\u5f53\u91cd\u8981\u3002\u56e0\u6b64\uff0c\u8fd9\u90e8\u5206\u5de5\u4f5c\u5f80\u5f80\u5728\u5f00\u53d1\u5468\u671f\u4e2d\u5360\u636e\u76f8\u5f53\u5927\u7684\u6bd4\u91cd\uff0c\u56fe19.1\u5448\u73b0\u4e86Linux\u5185\u6838\u7535\u6e90\u7ba1\u7406\u7684\u6574\u4f53\u67b6\u6784\u3002\u5927\u4f53\u53ef\u4ee5\u5f52\u7eb3\u4e3a\u5982\u4e0b\u51e0\u7c7b\uff1a\\r\\n\\r\\n1\uff09CPU\u5728\u8fd0\u884c\u65f6\u6839\u636e\u7cfb\u7edf\u8d1f\u8f7d\u8fdb\u884c\u52a8\u6001\u7535\u538b\u548c\u9891\u7387\u53d8\u6362\u7684CPUFreq\u3002\\r\\n\\r\\n2\uff09CPU\u5728\u7cfb\u7edf\u7a7a\u95f2\u65f6\u6839\u636e\u7a7a\u95f2\u7684\u60c5\u51b5\u8fdb\u884c\u4f4e\u529f\u8017\u6a21\u5f0f\u7684CPUIdle\u3002\\r\\n\\r\\n3\uff09\u591a\u6838\u7cfb\u7edf\u4e0bCPU\u7684\u70ed\u63d2\u62d4\u652f\u6301\u3002\\r\\n\\r\\n4\uff09\u7cfb\u7edf\u548c\u8bbe\u5907\u9488\u5bf9\u5ef6\u8fdf\u7684\u7279\u522b\u9700\u6c42\u800c\u63d0\u51fa\u7533\u8bf7\u7684PM QoS\uff0c\u5b83\u4f1a\u4f5c\u7528\u4e8eCPUIdle\u7684\u5177\u4f53\u7b56\u7565\u3002\\r\\n\\r\\n5\uff09\u8bbe\u5907\u9a71\u52a8\u9488\u5bf9\u7cfb\u7edf\u6302\u8d77\u5230RAM/\u786c\u76d8\u7684\u4e00\u7cfb\u5217\u5165\u53e3\u51fd\u6570\u3002\\r\\n\\r\\n6\uff09SoC\u8fdb\u5165\u6302\u8d77\u72b6\u6001\u3001SDRAM\u81ea\u5237\u65b0\u7684\u5165\u53e3\u3002\\r\\n\\r\\n7\uff09\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u52a8\u6001\u7535\u6e90\u7ba1\u7406\uff0c\u6839\u636e\u4f7f\u7528\u60c5\u51b5\u52a8\u6001\u5f00\u5173\u8bbe\u5907\u3002\\r\\n\\r\\n8\uff09\u5e95\u5c42\u7684\u65f6\u949f\u3001\u7a33\u538b\u5668\u3001\u9891\u7387/\u7535\u538b\u8868\uff08OPP\u6a21\u5757\u5b8c\u6210\uff09\u652f\u6491\uff0c\u5404\u9a71\u52a8\u5b50\u7cfb\u7edf\u90fd\u53ef\u80fd\u7528\u5230\u3002\\r\\n\\r\\n![1746004625831](./figure/1746004625831.png)\\r\\n\\r\\n\u56fe19.1\u3000Linux\u5185\u6838\u7535\u6e90\u7ba1\u7406\u7684\u6574\u4f53\u67b6\u6784"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.3\u3000\u5185\u5b58\u5b58\u53d6","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.3\u3000\u5185\u5b58\u5b58\u53d6","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.3\u3000\u5185\u5b58\u5b58\u53d6.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.3\u3000\u5185\u5b58\u5b58\u53d6.md","title":"11.3.1\u3000\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u52a8\u6001\u7533\u8bf7","description":"\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7684\u51fd\u6570\u4e3amalloc\uff08\uff09\uff0c\u8fd9\u4e2a\u51fd\u6570\u5728\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4f7f\u7528\u90fd\u662f\u4e00\u81f4\u7684\uff0cmalloc\uff08\uff09\u7533\u8bf7\u7684\u5185\u5b58\u7684\u91ca\u653e\u51fd\u6570\u4e3afree\uff08\uff09\u3002\u5bf9\u4e8eLinux\u800c\u8a00\uff0cC\u5e93\u7684malloc\uff08\uff09\u51fd\u6570\u4e00\u822c\u901a\u8fc7brk\uff08\uff09\u548cmmap\uff08\uff09\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\u4ece\u5185\u6838\u7533\u8bf7\u5185\u5b58\u3002","date":"2025-09-15T14:44:15.001Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":14.155,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.1\u3000Linux\u7535\u6e90\u7ba1\u7406\u7684\u5168\u5c40\u67b6\u6784"},"nextItem":{"title":"2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5"}},"content":"\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7684\u51fd\u6570\u4e3amalloc\uff08\uff09\uff0c\u8fd9\u4e2a\u51fd\u6570\u5728\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4f7f\u7528\u90fd\u662f\u4e00\u81f4\u7684\uff0cmalloc\uff08\uff09\u7533\u8bf7\u7684\u5185\u5b58\u7684\u91ca\u653e\u51fd\u6570\u4e3afree\uff08\uff09\u3002\u5bf9\u4e8eLinux\u800c\u8a00\uff0cC\u5e93\u7684malloc\uff08\uff09\u51fd\u6570\u4e00\u822c\u901a\u8fc7brk\uff08\uff09\u548cmmap\uff08\uff09\u4e24\u4e2a\u7cfb\u7edf\u8c03\u7528\u4ece\u5185\u6838\u7533\u8bf7\u5185\u5b58\u3002\\r\\n\\r\\n\u7531\u4e8e\u7528\u6237\u7a7a\u95f4C\u5e93\u7684malloc\u7b97\u6cd5\u5b9e\u9645\u4e0a\u5177\u5907\u4e00\u4e2a\u4e8c\u6b21\u7ba1\u7406\u80fd\u529b\uff0c\u6240\u4ee5\u5e76\u4e0d\u662f\u6bcf\u6b21\u7533\u8bf7\u548c\u91ca\u653e\u5185\u5b58\u90fd\u4e00\u5b9a\u4f34\u968f\u7740\u5bf9\u5185\u6838\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u6bd4\u5982\uff0c\u4ee3\u7801\u6e05\u535511.2\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4ece\u5185\u6838\u62ff\u5230\u5185\u5b58\u540e\uff0c\u7acb\u5373\u8c03\u7528free\uff08\uff09\uff0c\u7531\u4e8efree\uff08\uff09\u4e4b\u524d\u8c03\u7528\u4e86mallopt\uff08M_TRIM_THRESHOLD\uff0c\uff0d1\uff09\u548cmallopt\uff08M_MMAP_MAX\uff0c0\uff09\uff0c\u8fd9\u4e2afree\uff08\uff09\u5e76\u4e0d\u4f1a\u628a\u5185\u5b58\u8fd8\u7ed9\u5185\u6838\uff0c\u800c\u53ea\u662f\u8fd8\u7ed9\u4e86C\u5e93\u7684\u5206\u914d\u7b97\u6cd5\uff08\u5185\u5b58\u4ecd\u7136\u5c5e\u4e8e\u8fd9\u4e2a\u8fdb\u7a0b\uff09\uff0c\u56e0\u6b64\u4e4b\u540e\u6240\u6709\u7684\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u90fd\u5728\u7528\u6237\u6001\u4e0b\u8fdb\u884c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.2\u3000\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u7533\u8bf7\u4ee5\u53camallopt\\r\\n\\r\\n```\\r\\n 1#include <malloc.h>\\r\\n 2#include <sys/mman.h>\\r\\n 3\\r\\n 4#define SOMESIZE (100*1024*1024)      // 100MB\\r\\n 5\\r\\n 6int main(int argc, char *argv[])\\r\\n 7{\\r\\n 8 unsigned char *buffer;\\r\\n 9 int i;\\r\\n10\\r\\n11 if (mlockall(MCL_CURRENT | MCL_FUTURE))\\r\\n12     mallopt(M_TRIM_THRESHOLD, -1);\\r\\n13 mallopt(M_MMAP_MAX, 0);\\r\\n14\\r\\n15 buffer = malloc(SOMESIZE);\\r\\n16 if (!buffer)\\r\\n17     exit(-1);\\r\\n18\\r\\n19 /*\\r\\n20  * Touch each page in this piece of memory to get it\\r\\n21  * mapped into RAM\\r\\n22  */\\r\\n23 for (i = 0; i < SOMESIZE; i += page_size)\\r\\n24     buffer[i] = 0;\\r\\n25 free(buffer);\\r\\n26 /* <do your RT-thing> */\\r\\n27\\r\\n28 return 0;\\r\\n29}\\r\\n```\\r\\n\\r\\n\u53e6\u5916\uff0cLinux\u5185\u6838\u603b\u662f\u91c7\u7528\u6309\u9700\u8c03\u9875\uff08Demand Paging\uff09\uff0c\u56e0\u6b64\u5f53malloc\uff08\uff09\u8fd4\u56de\u7684\u65f6\u5019\uff0c\u867d\u7136\u662f\u6210\u529f\u8fd4\u56de\uff0c\u4f46\u662f\u5185\u6838\u5e76\u6ca1\u6709\u771f\u6b63\u7ed9\u8fd9\u4e2a\u8fdb\u7a0b\u5185\u5b58\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u53bb\u8bfb\u7533\u8bf7\u7684\u5185\u5b58\uff0c\u5185\u5bb9\u5168\u90e8\u662f0\uff0c\u8fd9\u4e2a\u9875\u9762\u7684\u6620\u5c04\u662f\u53ea\u8bfb\u7684\u3002\u53ea\u6709\u5f53\u5199\u5230\u67d0\u4e2a\u9875\u9762\u7684\u65f6\u5019\uff0c\u5185\u6838\u624d\u5728\u9875\u9519\u8bef\u540e\uff0c\u771f\u6b63\u628a\u8fd9\u4e2a\u9875\u9762\u7ed9\u8fd9\u4e2a\u8fdb\u7a0b\u3002\\r\\n\\r\\n# 11.3.2\u3000\u5185\u6838\u7a7a\u95f4\u5185\u5b58\u52a8\u6001\u7533\u8bf7\\r\\n\\r\\n\u5728Linux\u5185\u6838\u7a7a\u95f4\u4e2d\u7533\u8bf7\u5185\u5b58\u6d89\u53ca\u7684\u51fd\u6570\u4e3b\u8981\u5305\u62eckmalloc\uff08\uff09\u3001__get_free_pages\uff08\uff09\u548cvmalloc\uff08\uff09\u7b49\u3002kmalloc\uff08\uff09\u548c__get_free_pages\uff08\uff09\uff08\u53ca\u5176\u7c7b\u4f3c\u51fd\u6570\uff09\u7533\u8bf7\u7684\u5185\u5b58\u4f4d\u4e8eDMA\u548c\u5e38\u89c4\u533a\u57df\u7684\u6620\u5c04\u533a\uff0c\u800c\u4e14\u5728\u7269\u7406\u4e0a\u4e5f\u662f\u8fde\u7eed\u7684\uff0c\u5b83\u4eec\u4e0e\u771f\u5b9e\u7684\u7269\u7406\u5730\u5740\u53ea\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u504f\u79fb\uff0c\u56e0\u6b64\u5b58\u5728\u8f83\u7b80\u5355\u7684\u8f6c\u6362\u5173\u7cfb\u3002\u800cvmalloc\uff08\uff09\u5728\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u7ed9\u51fa\u4e00\u5757\u8fde\u7eed\u7684\u5185\u5b58\u533a\uff0c\u5b9e\u8d28\u4e0a\uff0c\u8fd9\u7247\u8fde\u7eed\u7684\u865a\u62df\u5185\u5b58\u5728\u7269\u7406\u5185\u5b58\u4e2d\u5e76\u4e0d\u4e00\u5b9a\u8fde\u7eed\uff0c\u800cvmalloc\uff08\uff09\u7533\u8bf7\u7684\u865a\u62df\u5185\u5b58\u548c\u7269\u7406\u5185\u5b58\u4e4b\u95f4\u4e5f\u6ca1\u6709\u7b80\u5355\u7684\u6362\u7b97\u5173\u7cfb\u3002\\r\\n\\r\\n## 1.kmalloc\uff08\uff09\\r\\n\\r\\n```\\r\\nvoid *kmalloc(size_t size, int flags);\\r\\n```\\r\\n\\r\\n\u7ed9kmalloc\uff08\uff09\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u5206\u914d\u7684\u5757\u7684\u5927\u5c0f\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u5206\u914d\u6807\u5fd7\uff0c\u7528\u4e8e\u63a7\u5236kmalloc\uff08\uff09\u7684\u884c\u4e3a\u3002\\r\\n\\r\\n\u6700\u5e38\u7528\u7684\u5206\u914d\u6807\u5fd7\u662fGFP_KERNEL\uff0c\u5176\u542b\u4e49\u662f\u5728\u5185\u6838\u7a7a\u95f4\u7684\u8fdb\u7a0b\u4e2d\u7533\u8bf7\u5185\u5b58\u3002kmalloc\uff08\uff09\u7684\u5e95\u5c42\u4f9d\u8d56\u4e8e__get_free_pages\uff08\uff09\u6765\u5b9e\u73b0\uff0c\u5206\u914d\u6807\u5fd7\u7684\u524d\u7f00GFP\u6b63\u597d\u662f\u8fd9\u4e2a\u5e95\u5c42\u51fd\u6570\u7684\u7f29\u5199\u3002\u4f7f\u7528GFP_KERNEL\u6807\u5fd7\u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u82e5\u6682\u65f6\u4e0d\u80fd\u6ee1\u8db3\uff0c\u5219\u8fdb\u7a0b\u4f1a\u7761\u7720\u7b49\u5f85\u9875\uff0c\u5373\u4f1a\u5f15\u8d77\u963b\u585e\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u6216\u6301\u6709\u81ea\u65cb\u9501\u7684\u65f6\u5019\u4f7f\u7528GFP_KERNE\u7533\u8bf7\u5185\u5b58\u3002\\r\\n\\r\\n\u7531\u4e8e\u5728\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u3001tasklet\u548c\u5185\u6838\u5b9a\u65f6\u5668\u7b49\u975e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u80fd\u963b\u585e\uff0c\u6240\u4ee5\u6b64\u65f6\u9a71\u52a8\u5e94\u5f53\u4f7f\u7528GFP_ATOMIC\u6807\u5fd7\u6765\u7533\u8bf7\u5185\u5b58\u3002\u5f53\u4f7f\u7528GFP_ATOMIC\u6807\u5fd7\u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u82e5\u4e0d\u5b58\u5728\u7a7a\u95f2\u9875\uff0c\u5219\u4e0d\u7b49\u5f85\uff0c\u76f4\u63a5\u8fd4\u56de\u3002\\r\\n\\r\\n\u5176\u4ed6\u7684\u7533\u8bf7\u6807\u5fd7\u8fd8\u5305\u62ecGFP_USER\uff08\u7528\u6765\u4e3a\u7528\u6237\u7a7a\u95f4\u9875\u5206\u914d\u5185\u5b58\uff0c\u53ef\u80fd\u963b\u585e\uff09\u3001GFP_HIGHUSER\uff08\u7c7b\u4f3cGFP_USER\uff0c\u4f46\u662f\u5b83\u4ece\u9ad8\u7aef\u5185\u5b58\u5206\u914d\uff09\u3001GFP_DMA\uff08\u4eceDMA\u533a\u57df\u5206\u914d\u5185\u5b58\uff09\u3001GFP_NOIO\uff08\u4e0d\u5141\u8bb8\u4efb\u4f55I/O\u521d\u59cb\u5316\uff09\u3001GFP_NOFS\uff08\u4e0d\u5141\u8bb8\u8fdb\u884c\u4efb\u4f55\u6587\u4ef6\u7cfb\u7edf\u8c03\u7528\uff09\u3001__GFP_HIGHMEM\uff08\u6307\u793a\u5206\u914d\u7684\u5185\u5b58\u53ef\u4ee5\u4f4d\u4e8e\u9ad8\u7aef\u5185\u5b58\uff09\u3001__GFP_COLD\uff08\u8bf7\u6c42\u4e00\u4e2a\u8f83\u957f\u65f6\u95f4\u4e0d\u8bbf\u95ee\u7684\u9875\uff09\u3001__GFP_NOWARN\uff08\u5f53\u4e00\u4e2a\u5206\u914d\u65e0\u6cd5\u6ee1\u8db3\u65f6\uff0c\u963b\u6b62\u5185\u6838\u53d1\u51fa\u8b66\u544a\uff09\u3001__GFP_HIGH\uff08\u9ad8\u4f18\u5148\u7ea7\u8bf7\u6c42\uff0c\u5141\u8bb8\u83b7\u5f97\u88ab\u5185\u6838\u4fdd\u7559\u7ed9\u7d27\u6025\u72b6\u51b5\u4f7f\u7528\u7684\u6700\u540e\u7684\u5185\u5b58\u9875\uff09\u3001__GFP_REPEAT\uff08\u5206\u914d\u5931\u8d25\uff0c\u5219\u5c3d\u529b\u91cd\u590d\u5c1d\u8bd5\uff09\u3001__GFP_NOFAIL\uff08\u6807\u5fd7\u53ea\u8bb8\u7533\u8bf7\u6210\u529f\uff0c\u4e0d\u63a8\u8350\uff09\u548c__GFP_NORETRY\uff08\u82e5\u7533\u8bf7\u4e0d\u5230\uff0c\u5219\u7acb\u5373\u653e\u5f03\uff09\u7b49\u3002\\r\\n\\r\\n\u4f7f\u7528kmalloc\uff08\uff09\u7533\u8bf7\u7684\u5185\u5b58\u5e94\u4f7f\u7528kfree\uff08\uff09\u91ca\u653e\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u7528\u6cd5\u548c\u7528\u6237\u7a7a\u95f4\u7684free\uff08\uff09\u7c7b\u4f3c\u3002\\r\\n\\r\\n## 2.__get_free_pages\uff08\uff09\\r\\n\\r\\n__get_free_pages\uff08\uff09\u7cfb\u5217\u51fd\u6570/\u5b8f\u672c\u8d28\u4e0a\u662fLinux\u5185\u6838\u6700\u5e95\u5c42\u7528\u4e8e\u83b7\u53d6\u7a7a\u95f2\u5185\u5b58\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5e95\u5c42\u7684buddy\u7b97\u6cd5\u4ee52n\u9875\u4e3a\u5355\u4f4d\u7ba1\u7406\u7a7a\u95f2\u5185\u5b58\uff0c\u6240\u4ee5\u6700\u5e95\u5c42\u7684\u5185\u5b58\u7533\u8bf7\u603b\u662f\u4ee52n\u9875\u4e3a\u5355\u4f4d\u7684\u3002\\r\\n\\r\\n__get_free_pages\uff08\uff09\u7cfb\u5217\u51fd\u6570/\u5b8f\u5305\u62ecget_zeroed_page\uff08\uff09\u3001__get_free_page\uff08\uff09\u548c__get_free_pages\uff08\uff09\u3002\\r\\n\\r\\n```\\r\\nget_zeroed_page(unsigned int flags);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u65b0\u9875\u7684\u6307\u9488\u5e76\u4e14\u5c06\u8be5\u9875\u6e05\u96f6\u3002\\r\\n\\r\\n```\\r\\n_ _get_free_page(unsigned int flags);\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u65b0\u9875\u7684\u6307\u9488\u4f46\u662f\u8be5\u9875\u4e0d\u6e05\u96f6\uff0c\u5b83\u5b9e\u9645\u4e0a\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define _ _get_free_page(gfp_mask) \\\\\\r\\n        _ _get_free_pages((gfp_mask),0)\\r\\n```\\r\\n\\r\\n\u5c31\u662f\u8c03\u7528\u4e86\u4e0b\u9762\u7684__get_free_pages\uff08\uff09\u7533\u8bf71\u9875\u3002\\r\\n\\r\\n```\\r\\n_ _get_free_pages(unsigned int flags, unsigned int order);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u53ef\u5206\u914d\u591a\u4e2a\u9875\u5e76\u8fd4\u56de\u5206\u914d\u5185\u5b58\u7684\u9996\u5730\u5740\uff0c\u5206\u914d\u7684\u9875\u6570\u4e3a2order\uff0c\u5206\u914d\u7684\u9875\u4e5f\u4e0d\u6e05\u96f6\u3002order\u5141\u8bb8\u7684\u6700\u5927\u503c\u662f10\uff08\u53731024\u9875\uff09\u6216\u800511\uff08\u53732048\u9875\uff09\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u786c\u4ef6\u5e73\u53f0\u3002\\r\\n\\r\\n__get_free_pages\uff08\uff09\u548cget_zeroed_page\uff08\uff09\u5728\u5b9e\u73b0\u4e2d\u8c03\u7528\u4e86alloc_pages\uff08\uff09\u51fd\u6570\uff0calloc_pages\uff08\uff09\u65e2\u53ef\u4ee5\u5728\u5185\u6838\u7a7a\u95f4\u5206\u914d\uff0c\u4e5f\u53ef\u4ee5\u5728\u7528\u6237\u7a7a\u95f4\u5206\u914d\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstruct page * alloc_pages(int gfp_mask, unsigned long order);\\r\\n```\\r\\n\\r\\n\u53c2\u6570\u542b\u4e49\u4e0e__get_free_pages\uff08\uff09\u7c7b\u4f3c\uff0c\u4f46\u5b83\u8fd4\u56de\u5206\u914d\u7684\u7b2c\u4e00\u4e2a\u9875\u7684\u63cf\u8ff0\u7b26\u800c\u975e\u9996\u5730\u5740\u3002\\r\\n\\r\\n\u4f7f\u7528__get_free_pages\uff08\uff09\u7cfb\u5217\u51fd\u6570/\u5b8f\u7533\u8bf7\u7684\u5185\u5b58\u5e94\u4f7f\u7528\u4e0b\u5217\u51fd\u6570\u91ca\u653e\uff1a\\r\\n\\r\\n```\\r\\nvoid free_page(unsigned long addr);\\r\\nvoid free_pages(unsigned long addr, unsigned long order);\\r\\n```\\r\\n\\r\\n__get_free_pages\u7b49\u51fd\u6570\u5728\u4f7f\u7528\u65f6\uff0c\u5176\u7533\u8bf7\u6807\u5fd7\u7684\u503c\u4e0ekmalloc\uff08\uff09\u5b8c\u5168\u4e00\u6837\uff0c\u5404\u6807\u5fd7\u7684\u542b\u4e49\u4e5f\u4e0ekmalloc\uff08\uff09\u5b8c\u5168\u4e00\u81f4\uff0c\u6700\u5e38\u7528\u7684\u662fGFP_KERNEL\u548cGFP_ATOMIC\u3002\\r\\n\\r\\n## 3.vmalloc\uff08\uff09\\r\\n\\r\\nvmalloc\uff08\uff09\u4e00\u822c\u53ea\u4e3a\u5b58\u5728\u4e8e\u8f6f\u4ef6\u4e2d\uff08\u6ca1\u6709\u5bf9\u5e94\u7684\u786c\u4ef6\u610f\u4e49\uff09\u7684\u8f83\u5927\u7684\u987a\u5e8f\u7f13\u51b2\u533a\u5206\u914d\u5185\u5b58\uff0cvmalloc\uff08\uff09\u8fdc\u5927\u4e8e__get_free_pages\uff08\uff09\u7684\u5f00\u9500\uff0c\u4e3a\u4e86\u5b8c\u6210vmalloc\uff08\uff09\uff0c\u65b0\u7684\u9875\u8868\u9879\u9700\u8981\u88ab\u5efa\u7acb\u3002\u56e0\u6b64\uff0c\u53ea\u662f\u8c03\u7528vmalloc\uff08\uff09\u6765\u5206\u914d\u5c11\u91cf\u7684\u5185\u5b58\uff08\u59821\u9875\u4ee5\u5185\u7684\u5185\u5b58\uff09\u662f\u4e0d\u59a5\u7684\u3002\\r\\n\\r\\nvmalloc\uff08\uff09\u7533\u8bf7\u7684\u5185\u5b58\u5e94\u4f7f\u7528vfree\uff08\uff09\u91ca\u653e\uff0cvmalloc\uff08\uff09\u548cvfree\uff08\uff09\u7684\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nvoid *vmalloc(unsigned long size);\\r\\nvoid vfree(void * addr);\\r\\n```\\r\\n\\r\\nvmalloc\uff08\uff09\u4e0d\u80fd\u7528\u5728\u539f\u5b50\u4e0a\u4e0b\u6587\u4e2d\uff0c\u56e0\u4e3a\u5b83\u7684\u5185\u90e8\u5b9e\u73b0\u4f7f\u7528\u4e86\u6807\u5fd7\u4e3aGFP_KERNEL\u7684kmalloc\uff08\uff09\u3002\\r\\n\\r\\n\u4f7f\u7528vmalloc\uff08\uff09\u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\u51fd\u6570\u662fcreate_module\uff08\uff09\u7cfb\u7edf\u8c03\u7528\uff0c\u5b83\u5229\u7528vmalloc\uff08\uff09\u51fd\u6570\u6765\u83b7\u53d6\u88ab\u521b\u5efa\u6a21\u5757\u9700\u8981\u7684\u5185\u5b58\u7a7a\u95f4\u3002\\r\\n\\r\\nvmalloc\uff08\uff09\u5728\u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u4f1a\u8fdb\u884c\u5185\u5b58\u7684\u6620\u5c04\uff0c\u6539\u53d8\u9875\u8868\u9879\uff0c\u4e0d\u50cfkmalloc\uff08\uff09\u5b9e\u9645\u7528\u7684\u662f\u5f00\u673a\u8fc7\u7a0b\u4e2d\u5c31\u6620\u5c04\u597d\u7684DMA\u548c\u5e38\u89c4\u533a\u57df\u7684\u9875\u8868\u9879\u3002\u56e0\u6b64vmalloc\uff08\uff09\u7684\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u4e0d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u6620\u5c04\u3002\\r\\n\\r\\n## 4.slab\u4e0e\u5185\u5b58\u6c60\\r\\n\\r\\n\u4e00\u65b9\u9762\uff0c\u5b8c\u5168\u4f7f\u7528\u9875\u4e3a\u5355\u5143\u7533\u8bf7\u548c\u91ca\u653e\u5185\u5b58\u5bb9\u6613\u5bfc\u81f4\u6d6a\u8d39\uff08\u5982\u679c\u8981\u7533\u8bf7\u5c11\u91cf\u5b57\u8282\uff0c\u4e5f\u9700\u8981\u75281\u9875\uff09\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u6d89\u53ca\u5927\u91cf\u5bf9\u8c61\u7684\u91cd\u590d\u751f\u6210\u3001\u4f7f\u7528\u548c\u91ca\u653e\u5185\u5b58\u95ee\u9898\u3002\u5728Linux\u7cfb\u7edf\u4e2d\u6240\u7528\u5230\u7684\u5bf9\u8c61\uff0c\u6bd4\u8f83\u5178\u578b\u7684\u4f8b\u5b50\u662finode\u3001task_struct\u7b49\u3002\u5982\u679c\u6211\u4eec\u80fd\u591f\u7528\u5408\u9002\u7684\u65b9\u6cd5\u4f7f\u5f97\u5bf9\u8c61\u5728\u524d\u540e\u4e24\u6b21\u88ab\u4f7f\u7528\u65f6\u5206\u914d\u5728\u540c\u4e00\u5757\u5185\u5b58\u6216\u540c\u4e00\u7c7b\u5185\u5b58\u7a7a\u95f4\u4e14\u4fdd\u7559\u4e86\u57fa\u672c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u6548\u7387\u3002slab\u7b97\u6cd5\u5c31\u662f\u9488\u5bf9\u4e0a\u8ff0\u7279\u70b9\u8bbe\u8ba1\u7684\u3002\u5b9e\u9645\u4e0akmalloc\uff08\uff09\u5c31\u662f\u4f7f\u7528slab\u673a\u5236\u5b9e\u73b0\u7684\u3002\\r\\n\\r\\nslab\u662f\u5efa\u7acb\u5728buddy\u7b97\u6cd5\u4e4b\u4e0a\u7684\uff0c\u5b83\u4ecebuddy\u7b97\u6cd5\u62ff\u52302n\u9875\u9762\u540e\u518d\u6b21\u8fdb\u884c\u4e8c\u6b21\u7ba1\u7406\uff0c\u8fd9\u4e00\u70b9\u548c\u7528\u6237\u7a7a\u95f4\u7684C\u5e93\u5f88\u50cf\u3002slab\u7533\u8bf7\u7684\u5185\u5b58\u4ee5\u53ca\u57fa\u4e8eslab\u7684kmalloc\uff08\uff09\u7533\u8bf7\u7684\u5185\u5b58\uff0c\u4e0e\u7269\u7406\u5185\u5b58\u4e4b\u95f4\u4e5f\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6027\u504f\u79fb\u3002\\r\\n\\r\\n\uff081\uff09\u521b\u5efaslab\u7f13\u5b58\\r\\n\\r\\n```\\r\\nstruct kmem_cache *kmem_cache_create(const char *name, size_t size,\\r\\n    size_t align, unsigned long flags,\\r\\n    void (*ctor)(void*, struct kmem_cache *, unsigned long),\\r\\n    void (*dtor)(void*, struct kmem_cache *, unsigned long));\\r\\n```\\r\\n\\r\\nkmem_cache_create\uff08\uff09\u7528\u4e8e\u521b\u5efa\u4e00\u4e2aslab\u7f13\u5b58\uff0c\u5b83\u662f\u4e00\u4e2a\u53ef\u4ee5\u4fdd\u7559\u4efb\u610f\u6570\u76ee\u4e14\u5168\u90e8\u540c\u6837\u5927\u5c0f\u7684\u540e\u5907\u7f13\u5b58\u3002\u53c2\u6570size\u662f\u8981\u5206\u914d\u7684\u6bcf\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u5927\u5c0f\uff0c\u53c2\u6570flags\u662f\u63a7\u5236\u5982\u4f55\u8fdb\u884c\u5206\u914d\u7684\u4f4d\u63a9\u7801\uff0c\u5305\u62ecSLAB_HWCACHE_ALIGN\uff08\u6bcf\u4e2a\u6570\u636e\u5bf9\u8c61\u88ab\u5bf9\u9f50\u5230\u4e00\u4e2a\u7f13\u5b58\u884c\uff09\u3001SLAB_CACHE_DMA\uff08\u8981\u6c42\u6570\u636e\u5bf9\u8c61\u5728DMA\u533a\u57df\u4e2d\u5206\u914d\uff09\u7b49\u3002\\r\\n\\r\\n\uff082\uff09\u5206\u914dslab\u7f13\u5b58\\r\\n\\r\\n```\\r\\nvoid *kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u5728kmem_cache_create\uff08\uff09\u521b\u5efa\u7684slab\u540e\u5907\u7f13\u5b58\u4e2d\u5206\u914d\u4e00\u5757\u5e76\u8fd4\u56de\u9996\u5730\u5740\u6307\u9488\u3002\\r\\n\\r\\n\uff083\uff09\u91ca\u653eslab\u7f13\u5b58\\r\\n\\r\\n```\\r\\nvoid kmem_cache_free(struct kmem_cache *cachep, void *objp);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u91ca\u653e\u7531kmem_cache_alloc\uff08\uff09\u5206\u914d\u7684\u7f13\u5b58\\r\\n\\r\\n\uff084\uff09\u6536\u56deslab\u7f13\u5b58\\r\\n\\r\\n```\\r\\nint kmem_cache_destroy(struct kmem_cache *cachep);\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.3\u7ed9\u51fa\u4e86slab\u7f13\u5b58\u7684\u4f7f\u7528\u8303\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.3\u3000slab\u7f13\u5b58\u4f7f\u7528\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1/* \u521b\u5efaslab\u7f13\u5b58*/\\r\\n 2static kmem_cache_t    *xxx_cachep;\\r\\n 3xxx_cachep = kmem_cache_create(\\"xxx\\", sizeof(struct xxx),\\r\\n 4                0, SLAB_HWCACHE_ALIGN|SLAB_PANIC, NULL, NULL);\\r\\n 5/* \u5206\u914dslab\u7f13\u5b58*/\\r\\n 6struct xxx *ctx;\\r\\n 7ctx = kmem_cache_alloc(xxx_cachep, GFP_KERNEL);\\r\\n 8.../* \u4f7f\u7528slab\u7f13\u5b58*/\\r\\n 9/* \u91ca\u653eslab\u7f13\u5b58*/\\r\\n10kmem_cache_free(xxx_cachep, ctx);\\r\\n11kmem_cache_destroy(xxx_cachep);\\r\\n```\\r\\n\\r\\n\u5728\u7cfb\u7edf\u4e2d\u901a\u8fc7/proc/slabinfo\u8282\u70b9\u53ef\u4ee5\u83b7\u77e5\u5f53\u524dslab\u7684\u5206\u914d\u548c\u4f7f\u7528\u60c5\u51b5\uff0c\u8fd0\u884ccat /proc/slabinfo\uff1a\\r\\n\\r\\n```\\r\\n# cat /proc/slabinfo\\r\\nslabinfo - version: 2.1\\r\\n# name            <active_objs> <num_objs> <objsize> <objperslab> <pagesperslab> :\\r\\n    tunables <limit> <batchcount> <sharedfactor> : slabdata <active_slabs>\\r\\n    <num_slabs> <sharedavail>\\r\\nisofs_inode_cache     66     66    360   22    2 : tunables    0    0    0 :\\r\\n    slabdata      3      3      0\\r\\next4_groupinfo_4k    156    156    104   39    1 : tunables    0    0    0 :\\r\\n    slabdata      4      4      0\\r\\nUDPLITEv6              0      0    768   21    4 : tunables    0    0    0 :\\r\\n    slabdata      0      0      0\\r\\nUDPv6                 84     84    768   21    4 : tunables    0    0    0 :\\r\\n    slabdata      4      4      0\\r\\ntw_sock_TCPv6          0      0    192   21    1 : tunables    0    0    0 :\\r\\n    slabdata      0      0      0\\r\\nTCPv6                 88     88   1472   22    8 : tunables    0    0    0 :\\r\\n    slabdata      4      4      0\\r\\nzcache_objnode         0      0    272   30    2 : tunables    0    0    0 :\\r\\n    slabdata      0      0      0\\r\\nkcopyd_job             0      0   2344   13    8 : tunables    0    0    0 :\\r\\n    slabdata      0      0      0\\r\\ndm_uevent              0      0   2464   13    8 : tunables    0    0    0 :\\r\\n    slabdata      0      0      0\u2026\\r\\n\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\u6ce8\u610f\uff1a slab\u4e0d\u662f\u8981\u4ee3\u66ff__get_free_pages\uff08\uff09\uff0c\u5176\u5728\u6700\u5e95\u5c42\u4ecd\u7136\u4f9d\u8d56\u4e8e__get_free_pages\uff08\uff09\uff0cslab\u5728\u5e95\u5c42\u6bcf\u6b21\u7533\u8bf71\u9875\u6216\u591a\u9875\uff0c\u4e4b\u540e\u518d\u5206\u9694\u8fd9\u4e9b\u9875\u4e3a\u66f4\u5c0f\u7684\u5355\u5143\u8fdb\u884c\u7ba1\u7406\uff0c\u4ece\u800c\u8282\u7701\u4e86\u5185\u5b58\uff0c\u4e5f\u63d0\u9ad8\u4e86slab\u7f13\u51b2\u5bf9\u8c61\u7684\u8bbf\u95ee\u6548\u7387\u3002\\r\\n\\r\\n\u9664\u4e86slab\u4ee5\u5916\uff0c\u5728Linux\u5185\u6838\u4e2d\u8fd8\u5305\u542b\u5bf9\u5185\u5b58\u6c60\u7684\u652f\u6301\uff0c\u5185\u5b58\u6c60\u6280\u672f\u4e5f\u662f\u4e00\u79cd\u975e\u5e38\u7ecf\u5178\u7684\u7528\u4e8e\u5206\u914d\u5927\u91cf\u5c0f\u5bf9\u8c61\u7684\u540e\u5907\u7f13\u5b58\u6280\u672f\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u4e0e\u5185\u5b58\u6c60\u76f8\u5173\u7684\u64cd\u4f5c\u5305\u62ec\u5982\u4e0b\u51e0\u79cd\u3002\\r\\n\\r\\n\uff081\uff09\u521b\u5efa\u5185\u5b58\u6c60\\r\\n\\r\\n```\\r\\nmempool_t *mempool_create(int min_nr, mempool_alloc_t *alloc_fn,\\r\\n      mempool_free_t *free_fn, void *pool_data);\\r\\n```\\r\\n\\r\\nmempool_create\uff08\uff09\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5185\u5b58\u6c60\uff0cmin_nr\u53c2\u6570\u662f\u9700\u8981\u9884\u5206\u914d\u5bf9\u8c61\u7684\u6570\u76ee\uff0calloc_fn\u548cfree_fn\u662f\u6307\u5411\u5185\u5b58\u6c60\u673a\u5236\u63d0\u4f9b\u7684\u6807\u51c6\u5bf9\u8c61\u5206\u914d\u548c\u56de\u6536\u51fd\u6570\u7684\u6307\u9488\uff0c\u5176\u539f\u578b\u5206\u522b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ntypedef void *(mempool_alloc_t)(int gfp_mask, void *pool_data);\\r\\n```\\r\\n\\r\\n\u548c\\r\\n\\r\\n```\\r\\ntypedef void (mempool_free_t)(void *element, void *pool_data);\\r\\n```\\r\\n\\r\\npool_data\u662f\u5206\u914d\u548c\u56de\u6536\u51fd\u6570\u7528\u5230\u7684\u6307\u9488\uff0cgfp_mask\u662f\u5206\u914d\u6807\u8bb0\u3002\u53ea\u6709\u5f53__GFP_WAIT\u6807\u8bb0\u88ab\u6307\u5b9a\u65f6\uff0c\u5206\u914d\u51fd\u6570\u624d\u4f1a\u4f11\u7720\u3002\\r\\n\\r\\n\uff082\uff09\u5206\u914d\u548c\u56de\u6536\u5bf9\u8c61\\r\\n\\r\\n\u5728\u5185\u5b58\u6c60\u4e2d\u5206\u914d\u548c\u56de\u6536\u5bf9\u8c61\u9700\u7531\u4ee5\u4e0b\u51fd\u6570\u6765\u5b8c\u6210\uff1a\\r\\n\\r\\n```\\r\\nvoid *mempool_alloc(mempool_t *pool, int gfp_mask);\\r\\nvoid mempool_free(void *element, mempool_t *pool);\\r\\n```\\r\\n\\r\\nmempool_alloc\uff08\uff09\u7528\u6765\u5206\u914d\u5bf9\u8c61\uff0c\u5982\u679c\u5185\u5b58\u6c60\u5206\u914d\u5668\u65e0\u6cd5\u63d0\u4f9b\u5185\u5b58\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u9884\u5206\u914d\u7684\u6c60\u3002\\r\\n\\r\\n\uff083\uff09\u56de\u6536\u5185\u5b58\u6c60\\r\\n\\r\\n```\\r\\nvoid mempool_destroy(mempool_t *pool);\\r\\n```\\r\\n\\r\\n\u7531mempool_create\uff08\uff09\u51fd\u6570\u521b\u5efa\u7684\u5185\u5b58\u6c60\u9700\u7531mempool_destroy\uff08\uff09\u6765\u56de\u6536\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5.md","title":"2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5","description":"\u82af\u7247\u6570\u636e\u624b\u518c\u5f80\u5f80\u957f\u8fbe\u6570\u767e\u9875\uff0c\u751a\u81f3\u4e0a\u5343\u9875\uff0c\u800c\u4e14\u5168\u90e8\u662f\u82f1\u6587\uff0c\u4ece\u5934\u5230\u5c3e\u4e0d\u52a0\u533a\u5206\u5730\u9605\u8bfb\u9700\u8981\u82b1\u8d39\u975e\u5e38\u957f\u7684\u65f6\u95f4\uff0c\u800c\u4e14\u4e0d\u4e00\u5b9a\u80fd\u83b7\u53d6\u5bf9\u8bbe\u8ba1\u8bbe\u5907\u9a71\u52a8\u6709\u5e2e\u52a9\u7684\u4fe1\u606f\u3002\u82af\u7247\u6570\u636e\u624b\u518c\u7684\u6b63\u786e\u9605\u8bfb\u65b9\u6cd5\u662f\u5feb\u901f\u800c\u51c6\u786e\u5730\u5b9a\u4f4d\u6709\u7528\u4fe1\u606f\uff0c\u91cd\u70b9\u9605\u8bfb\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5ffd\u7565\u65e0\u5173\u5185\u5bb9\u3002\u4e0b\u9762\u4ee5S3C6410A\u7684\u6570\u636e\u624b\u518c\u4e3a\u4f8b\u6765\u5206\u6790\u9605\u8bfb\u65b9\u6cd5\uff0c\u4e3a\u4e86\u76f4\u89c2\u5730\u53cd\u6620\u9605\u8bfb\u8fc7\u7a0b\uff0c\u672c\u8282\u7684\u56fe\u90fd\u662f\u76f4\u63a5\u4ece\u6570\u636e\u624b\u518c\u4e2d\u6293\u5c4f\u800c\u5f97\u5230\u7684\u3002","date":"2025-09-15T14:44:14.985Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.67,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"11.3.1\u3000\u7528\u6237\u7a7a\u95f4\u5185\u5b58\u52a8\u6001\u7533\u8bf7","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.3\u3000\u5185\u5b58\u5b58\u53d6"},"nextItem":{"title":"7.5.1\u3000\u81ea\u65cb\u9501\u7684\u4f7f\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.5\u3000\u81ea\u65cb\u9501"}},"content":"\u82af\u7247\u6570\u636e\u624b\u518c\u5f80\u5f80\u957f\u8fbe\u6570\u767e\u9875\uff0c\u751a\u81f3\u4e0a\u5343\u9875\uff0c\u800c\u4e14\u5168\u90e8\u662f\u82f1\u6587\uff0c\u4ece\u5934\u5230\u5c3e\u4e0d\u52a0\u533a\u5206\u5730\u9605\u8bfb\u9700\u8981\u82b1\u8d39\u975e\u5e38\u957f\u7684\u65f6\u95f4\uff0c\u800c\u4e14\u4e0d\u4e00\u5b9a\u80fd\u83b7\u53d6\u5bf9\u8bbe\u8ba1\u8bbe\u5907\u9a71\u52a8\u6709\u5e2e\u52a9\u7684\u4fe1\u606f\u3002\u82af\u7247\u6570\u636e\u624b\u518c\u7684\u6b63\u786e\u9605\u8bfb\u65b9\u6cd5\u662f\u5feb\u901f\u800c\u51c6\u786e\u5730\u5b9a\u4f4d\u6709\u7528\u4fe1\u606f\uff0c\u91cd\u70b9\u9605\u8bfb\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5ffd\u7565\u65e0\u5173\u5185\u5bb9\u3002\u4e0b\u9762\u4ee5S3C6410A\u7684\u6570\u636e\u624b\u518c\u4e3a\u4f8b\u6765\u5206\u6790\u9605\u8bfb\u65b9\u6cd5\uff0c\u4e3a\u4e86\u76f4\u89c2\u5730\u53cd\u6620\u9605\u8bfb\u8fc7\u7a0b\uff0c\u672c\u8282\u7684\u56fe\u90fd\u662f\u76f4\u63a5\u4ece\u6570\u636e\u624b\u518c\u4e2d\u6293\u5c4f\u800c\u5f97\u5230\u7684\u3002\\r\\n\\r\\n\u6253\u5f00S3C6410A\u7684\u6570\u636e\u624b\u518c\uff0c\u53d1\u73b0\u9875\u6570\u4e3a1378\u9875\uff0c\u4ece\u5934\u8bfb\u5230\u5c3e\u662f\u4e0d\u73b0\u5b9e\u7684\u3002\\r\\n\\r\\nS3C6410A\u6570\u636e\u624b\u518c\u7684\u7b2c1\u7ae0\u201cPRODUCT OVERVIEW\u201d\uff08\u4ea7\u54c1\u7efc\u8ff0\uff09\u662f\u5fc5\u8bfb\u7684\uff0c\u901a\u8fc7\u9605\u8bfb\u8fd9\u4e00\u90e8\u5206\u53ef\u4ee5\u83b7\u77e5\u6574\u4e2a\u82af\u7247\u7684\u7ec4\u6210\u3002\u8fd9\u4e00\u7ae0\u5f80\u5f80\u4f1a\u7ed9\u51fa\u4e00\u4e2a\u82af\u7247\u7684\u6574\u4f53\u7ed3\u6784\u56fe\uff0c\u5e76\u5bf9\u82af\u7247\u5185\u7684\u4e3b\u8981\u6a21\u5757\u8fdb\u884c\u4e00\u4e2a\u7b80\u6d01\u7684\u63cf\u8ff0\u3002S3C6410A\u7684\u6574\u4f53\u7ed3\u6784\u56fe\u5982\u56fe2.27\u6240\u793a\uff08\u89c1\u6570\u636e\u624b\u518c\u7b2c61\u9875\uff09\u3002\\r\\n\\r\\n![1742736130773](./figure/1742736130773.png)\\r\\n\\r\\n\u56fe2.27\u3000S3C6410A\u6570\u636e\u624b\u518c\u4e2d\u7684\u82af\u7247\u7ed3\u6784\u56fe\\r\\n\\r\\n\u7b2c2~43\u7ae0\u4e2d\u7684\u6bcf\u4e00\u7ae0\u90fd\u5bf9\u5e94S3C6410A\u6574\u4f53\u7ed3\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u56fe2.28\u4e3a\u4eceAdobe Acrobat\u4e2d\u76f4\u63a5\u6293\u53d6\u7684S3C6410A\u6570\u636e\u624b\u518c\u7684\u76ee\u5f55\u7ed3\u6784\u56fe\u3002\\r\\n\\r\\n![1742736164630](./figure/1742736164630.png)\\r\\n\\r\\n\u56fe2.28\u3000S3C6410A\u6570\u636e\u624b\u518c\u7684\u76ee\u5f55\u7ed3\u6784\\r\\n\\r\\n\u7b2c2\u7ae0\u201cMemoryMap\u201d\uff08\u5185\u5b58\u6620\u5c04\uff09\u6bd4\u8f83\u5173\u952e\uff0c\u5bf9\u4e8e\u5b9a\u4f4d\u5b58\u50a8\u5668\u548c\u5916\u8bbe\u6240\u5bf9\u5e94\u7684\u57fa\u5740\u6709\u76f4\u63a5\u6307\u5bfc\u610f\u4e49\uff0c\u8fd9\u4e00\u90e8\u5206\u5e94\u8be5\u7ec6\u770b\u3002\\r\\n\\r\\n\u7b2c3~34\u7ae0\u5bf9\u5e94\u4e8eCPU\u5185\u90e8\u96c6\u6210\u7684\u5916\u8bbe\u6216\u603b\u7ebf\u63a7\u5236\u5668\uff0c\u5f53\u5177\u4f53\u7f16\u5199\u67d0\u63a5\u53e3\u7684\u9a71\u52a8\u65f6\uff0c\u5e94\u8be5\u8be6\u7ec6\u9605\u8bfb\uff0c\u4e3b\u8981\u662f\u5206\u6790\u6570\u636e\u3001\u63a7\u5236\u3001\u5730\u5740\u5bc4\u5b58\u5668\uff08\u6570\u636e\u624b\u518c\u4e2d\u4e00\u822c\u4f1a\u4ee5\u8868\u683c\u5217\u51fa\uff09\u7684\u8bbf\u95ee\u63a7\u5236\u548c\u5177\u4f53\u8bbe\u5907\u7684\u64cd\u4f5c\u6d41\u7a0b\uff08\u6570\u636e\u624b\u518c\u4e2d\u4f1a\u7ed9\u51fa\u6b65\u9aa4\uff0c\u6709\u7684\u8fd8\u4f1a\u7ed9\u51fa\u6d41\u7a0b\u56fe\uff09\u3002\u8b6c\u5982\u4e3a\u4e86\u7f16\u5199S3C6410A\u7684I2 C\u63a7\u5236\u5668\u9a71\u52a8\uff0c\u6211\u4eec\u9700\u8981\u8be6\u7ec6\u9605\u8bfb\u7c7b\u4f3c\u56fe2.29\u7684\u5bc4\u5b58\u5668\u5b9a\u4e49\u8868\u683c\u548c\u56fe2.30\u7684\u64cd\u4f5c\u6d41\u7a0b\u56fe\u3002\\r\\n\\r\\n\u7b2c44\u7ae0\u201cELECTRICAL DATA\u201d\uff08\u5bf9\u4e8e\u7535\u6c14\u6570\u636e\uff0c\u5728\u56fe2.28\u4e2d\u672a\u753b\u51fa\uff09\uff0c\u63cf\u8ff0\u82af\u7247\u7684\u7535\u6c14\u7279\u6027\uff0c\u5982\u7535\u538b\u3001\u7535\u6d41\u548c\u5404\u79cd\u5de5\u4f5c\u6a21\u5f0f\u4e0b\u7684\u65f6\u5e8f\u3001\u5efa\u7acb\u65f6\u95f4\u548c\u4fdd\u6301\u65f6\u95f4\u7684\u8981\u6c42\u3002\u6240\u6709\u7684\u6570\u636e\u624b\u518c\u90fd\u4f1a\u5305\u542b\u7c7b\u4f3c\u7ae0\u8282\uff0c\u8fd9\u4e00\u7ae0\u5bf9\u4e8e\u786c\u4ef6\u5de5\u7a0b\u5e08\u6bd4\u8f83\u5173\u952e\uff0c\u4f46\u662f\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u9a71\u52a8\u5de5\u7a0b\u5e08\u5e76\u4e0d\u9700\u8981\u9605\u8bfb\u3002\\r\\n\\r\\n\u7b2c45\u7ae0\u201cMECHANICAL DATA\u201d\uff08\u673a\u68b0\u6570\u636e\uff09\u63cf\u8ff0\u82af\u7247\u7684\u7269\u7406\u7279\u6027\u3001\u5c3a\u5bf8\u548c\u5c01\u88c5\uff0c\u786c\u4ef6\u5de5\u7a0b\u5e08\u4f1a\u4f9d\u636e\u8fd9\u4e00\u7ae0\u7ed8\u5236\u82af\u7247\u7684\u5c01\u88c5\uff08Footprint\uff09\uff0c\u4f46\u662f\uff0c\u9a71\u52a8\u5de5\u7a0b\u5e08\u65e0\u987b\u9605\u8bfb\u3002\\r\\n\\r\\n![1742736259414](./figure/1742736259414.png)\\r\\n\\r\\n\u56fe2.29\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u4e2d\u4ee5\u8868\u683c\u5f62\u5f0f\u5217\u51fa\u7684\u5bc4\u5b58\u5668\u5b9a\u4e49\\r\\n\\r\\n![1742736278530](./figure/1742736278530.png)\\r\\n\\r\\n\u56fe2.30\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u4e2d\u7ed9\u51fa\u7684\u5916\u8bbe\u63a7\u5236\u5668\u7684\u64cd\u4f5c\u6d41\u7a0b"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.5\u3000\u81ea\u65cb\u9501","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.5\u3000\u81ea\u65cb\u9501","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.5\u3000\u81ea\u65cb\u9501.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.5\u3000\u81ea\u65cb\u9501.md","title":"7.5.1\u3000\u81ea\u65cb\u9501\u7684\u4f7f\u7528","description":"\u81ea\u65cb\u9501\uff08Spin Lock\uff09\u662f\u4e00\u79cd\u5178\u578b\u7684\u5bf9\u4e34\u754c\u8d44\u6e90\u8fdb\u884c\u4e92\u65a5\u8bbf\u95ee\u7684\u624b\u6bb5\uff0c\u5176\u540d\u79f0\u6765\u6e90\u4e8e\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u4e3a\u4e86\u83b7\u5f97\u4e00\u4e2a\u81ea\u65cb\u9501\uff0c\u5728\u67d0CPU\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u9700\u5148\u6267\u884c\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u6d4b\u8bd5\u5e76\u8bbe\u7f6e\uff08Test-And-Set\uff09\u67d0\u4e2a\u5185\u5b58\u53d8\u91cf\u3002\u7531\u4e8e\u5b83\u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u8be5\u64cd\u4f5c\u5b8c\u6210\u4e4b\u524d\u5176\u4ed6\u6267\u884c\u5355\u5143\u4e0d\u53ef\u80fd\u8bbf\u95ee\u8fd9\u4e2a\u5185\u5b58\u53d8\u91cf\u3002\u5982\u679c\u6d4b\u8bd5\u7ed3\u679c\u8868\u660e\u9501\u5df2\u7ecf\u7a7a\u95f2\uff0c\u5219\u7a0b\u5e8f\u83b7\u5f97\u8fd9\u4e2a\u81ea\u65cb\u9501\u5e76\u7ee7\u7eed\u6267\u884c\uff1b\u5982\u679c\u6d4b\u8bd5\u7ed3\u679c\u8868\u660e\u9501\u4ecd\u88ab\u5360\u7528\uff0c\u7a0b\u5e8f\u5c06\u5728\u4e00\u4e2a\u5c0f\u7684\u5faa\u73af\u5185\u91cd\u590d\u8fd9\u4e2a\u201c\u6d4b\u8bd5\u5e76\u8bbe\u7f6e\u201d\u64cd\u4f5c\uff0c\u5373\u8fdb\u884c\u6240\u8c13\u7684\u201c\u81ea\u65cb\u201d\uff0c\u901a\u4fd7\u5730\u8bf4\u5c31\u662f\u201c\u5728\u539f\u5730\u6253\u8f6c\u201d\uff0c\u5982\u56fe7.7\u6240\u793a\u3002\u5f53\u81ea\u65cb\u9501\u7684\u6301\u6709\u8005\u901a\u8fc7\u91cd\u7f6e\u8be5\u53d8\u91cf\u91ca\u653e\u8fd9\u4e2a\u81ea\u65cb\u9501\u540e\uff0c\u67d0\u4e2a\u7b49\u5f85\u7684\u201c\u6d4b\u8bd5\u5e76\u8bbe\u7f6e\u201d\u64cd\u4f5c\u5411\u5176\u8c03\u7528\u8005\u62a5\u544a\u9501\u5df2\u91ca\u653e\u3002","date":"2025-09-15T14:44:14.985Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":25.255,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.7\u3000\u82af\u7247\u6570\u636e\u624b\u518c\u9605\u8bfb\u65b9\u6cd5"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3"}},"content":"\u81ea\u65cb\u9501\uff08Spin Lock\uff09\u662f\u4e00\u79cd\u5178\u578b\u7684\u5bf9\u4e34\u754c\u8d44\u6e90\u8fdb\u884c\u4e92\u65a5\u8bbf\u95ee\u7684\u624b\u6bb5\uff0c\u5176\u540d\u79f0\u6765\u6e90\u4e8e\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u4e3a\u4e86\u83b7\u5f97\u4e00\u4e2a\u81ea\u65cb\u9501\uff0c\u5728\u67d0CPU\u4e0a\u8fd0\u884c\u7684\u4ee3\u7801\u9700\u5148\u6267\u884c\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\uff0c\u8be5\u64cd\u4f5c\u6d4b\u8bd5\u5e76\u8bbe\u7f6e\uff08Test-And-Set\uff09\u67d0\u4e2a\u5185\u5b58\u53d8\u91cf\u3002\u7531\u4e8e\u5b83\u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u8be5\u64cd\u4f5c\u5b8c\u6210\u4e4b\u524d\u5176\u4ed6\u6267\u884c\u5355\u5143\u4e0d\u53ef\u80fd\u8bbf\u95ee\u8fd9\u4e2a\u5185\u5b58\u53d8\u91cf\u3002\u5982\u679c\u6d4b\u8bd5\u7ed3\u679c\u8868\u660e\u9501\u5df2\u7ecf\u7a7a\u95f2\uff0c\u5219\u7a0b\u5e8f\u83b7\u5f97\u8fd9\u4e2a\u81ea\u65cb\u9501\u5e76\u7ee7\u7eed\u6267\u884c\uff1b\u5982\u679c\u6d4b\u8bd5\u7ed3\u679c\u8868\u660e\u9501\u4ecd\u88ab\u5360\u7528\uff0c\u7a0b\u5e8f\u5c06\u5728\u4e00\u4e2a\u5c0f\u7684\u5faa\u73af\u5185\u91cd\u590d\u8fd9\u4e2a\u201c\u6d4b\u8bd5\u5e76\u8bbe\u7f6e\u201d\u64cd\u4f5c\uff0c\u5373\u8fdb\u884c\u6240\u8c13\u7684\u201c\u81ea\u65cb\u201d\uff0c\u901a\u4fd7\u5730\u8bf4\u5c31\u662f\u201c\u5728\u539f\u5730\u6253\u8f6c\u201d\uff0c\u5982\u56fe7.7\u6240\u793a\u3002\u5f53\u81ea\u65cb\u9501\u7684\u6301\u6709\u8005\u901a\u8fc7\u91cd\u7f6e\u8be5\u53d8\u91cf\u91ca\u653e\u8fd9\u4e2a\u81ea\u65cb\u9501\u540e\uff0c\u67d0\u4e2a\u7b49\u5f85\u7684\u201c\u6d4b\u8bd5\u5e76\u8bbe\u7f6e\u201d\u64cd\u4f5c\u5411\u5176\u8c03\u7528\u8005\u62a5\u544a\u9501\u5df2\u91ca\u653e\u3002\\r\\n\\r\\n\u7406\u89e3\u81ea\u65cb\u9501\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u628a\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u53d8\u91cf\u770b\u5f85\uff0c\u8be5\u53d8\u91cf\u628a\u4e00\u4e2a\u4e34\u754c\u533a\u6807\u8bb0\u4e3a\u201c\u6211\u5f53\u524d\u5728\u8fd0\u884c\uff0c\u8bf7\u7a0d\u7b49\u4e00\u4f1a\u201d\u6216\u8005\u6807\u8bb0\u4e3a\u201c\u6211\u5f53\u524d\u4e0d\u5728\u8fd0\u884c\uff0c\u53ef\u4ee5\u88ab\u4f7f\u7528\u201d\u3002\u5982\u679cA\u6267\u884c\u5355\u5143\u9996\u5148\u8fdb\u5165\u4f8b\u7a0b\uff0c\u5b83\u5c06\u6301\u6709\u81ea\u65cb\u9501\uff1b\u5f53B\u6267\u884c\u5355\u5143\u8bd5\u56fe\u8fdb\u5165\u540c\u4e00\u4e2a\u4f8b\u7a0b\u65f6\uff0c\u5c06\u83b7\u77e5\u81ea\u65cb\u9501\u5df2\u88ab\u6301\u6709\uff0c\u9700\u7b49\u5230A\u6267\u884c\u5355\u5143\u91ca\u653e\u540e\u624d\u80fd\u8fdb\u5165\\r\\n\\r\\n![1743077176273](./figure/1743077176273.png)\\r\\n\\r\\n\u56fe7.7\u3000\u81ea\u65cb\\r\\n\\r\\n\u5728ARM\u4f53\u7cfb\u7ed3\u6784\u4e0b\uff0c\u81ea\u65cb\u9501\u7684\u5b9e\u73b0\u501f\u7528\u4e86ldrex\u6307\u4ee4\u3001strex\u6307\u4ee4\u3001ARM\u5904\u7406\u5668\u5185\u5b58\u5c4f\u969c\u6307\u4ee4dmb\u548cdsb\u3001wfe\u6307\u4ee4\u548csev\u6307\u4ee4\uff0c\u8fd9\u7c7b\u4f3c\u4e8e\u4ee3\u7801\u6e05\u53557.1\u7684\u903b\u8f91\u3002\u53ef\u4ee5\u8bf4\u65e2\u8981\u4fdd\u8bc1\u6392\u4ed6\u6027\uff0c\u4e5f\u8981\u5904\u7406\u597d\u5185\u5b58\u5c4f\u969c\u3002\\r\\n\\r\\nLinux\u4e2d\u4e0e\u81ea\u65cb\u9501\u76f8\u5173\u7684\u64cd\u4f5c\u4e3b\u8981\u6709\u4ee5\u4e0b4\u79cd\u3002\\r\\n\\r\\n1.\u5b9a\u4e49\u81ea\u65cb\u9501\\r\\n\\r\\n```\\r\\nspinlock_t lock;\\r\\n```\\r\\n\\r\\n2.\u521d\u59cb\u5316\u81ea\u65cb\u9501\\r\\n\\r\\n```\\r\\nspin_lock_init(lock)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u7528\u4e8e\u52a8\u6001\u521d\u59cb\u5316\u81ea\u65cb\u9501lock\u3002\\r\\n\\r\\n3.\u83b7\u5f97\u81ea\u65cb\u9501\\r\\n\\r\\n```\\r\\nspin_lock(lock)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u7528\u4e8e\u83b7\u5f97\u81ea\u65cb\u9501lock\uff0c\u5982\u679c\u80fd\u591f\u7acb\u5373\u83b7\u5f97\u9501\uff0c\u5b83\u5c31\u9a6c\u4e0a\u8fd4\u56de\uff0c\u5426\u5219\uff0c\u5b83\u5c06\u5728\u90a3\u91cc\u81ea\u65cb\uff0c\u76f4\u5230\u8be5\u81ea\u65cb\u9501\u7684\u4fdd\u6301\u8005\u91ca\u653e\u3002\\r\\n\\r\\n```\\r\\nspin_trylock(lock)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u5c1d\u8bd5\u83b7\u5f97\u81ea\u65cb\u9501lock\uff0c\u5982\u679c\u80fd\u7acb\u5373\u83b7\u5f97\u9501\uff0c\u5b83\u83b7\u5f97\u9501\u5e76\u8fd4\u56detrue\uff0c\u5426\u5219\u7acb\u5373\u8fd4\u56defalse\uff0c\u5b9e\u9645\u4e0a\u4e0d\u518d\u201c\u5728\u539f\u5730\u6253\u8f6c\u201d\u3002\\r\\n\\r\\n4.\u91ca\u653e\u81ea\u65cb\u9501\\r\\n\\r\\n```\\r\\nspin_unlock(lock)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u91ca\u653e\u81ea\u65cb\u9501lock\uff0c\u5b83\u4e0espin_trylock\u6216spin_lock\u914d\u5bf9\u4f7f\u7528\u3002\\r\\n\\r\\n\u81ea\u65cb\u9501\u4e00\u822c\u8fd9\u6837\u88ab\u4f7f\u7528\uff1a\\r\\n\\r\\n```\\r\\n/* \u5b9a\u4e49\u4e00\u4e2a\u81ea\u65cb\u9501*/\\r\\nspinlock_t lock;\\r\\nspin_lock_init(&lock);\\r\\nspin_lock (&lock) ;    /* \u83b7\u53d6\u81ea\u65cb\u9501\uff0c\u4fdd\u62a4\u4e34\u754c\u533a*/\\r\\n. . ./* \u4e34\u754c\u533a*/\\r\\nspin_unlock (&lock) ;  /* \u89e3\u9501*/\\r\\n```\\r\\n\\r\\n\u81ea\u65cb\u9501\u4e3b\u8981\u9488\u5bf9SMP\u6216\u5355CPU\u4f46\u5185\u6838\u53ef\u62a2\u5360\u7684\u60c5\u51b5\uff0c\u5bf9\u4e8e\u5355CPU\u548c\u5185\u6838\u4e0d\u652f\u6301\u62a2\u5360\u7684\u7cfb\u7edf\uff0c\u81ea\u65cb\u9501\u9000\u5316\u4e3a\u7a7a\u64cd\u4f5c\u3002\u5728\u5355CPU\u548c\u5185\u6838\u53ef\u62a2\u5360\u7684\u7cfb\u7edf\u4e2d\uff0c\u81ea\u65cb\u9501\u6301\u6709\u671f\u95f4\u4e2d\u5185\u6838\u7684\u62a2\u5360\u5c06\u88ab\u7981\u6b62\u3002\u7531\u4e8e\u5185\u6838\u53ef\u62a2\u5360\u7684\u5355CPU\u7cfb\u7edf\u7684\u884c\u4e3a\u5b9e\u9645\u4e0a\u5f88\u7c7b\u4f3c\u4e8eSMP\u7cfb\u7edf\uff0c\u56e0\u6b64\uff0c\u5728\u8fd9\u6837\u7684\u5355CPU\u7cfb\u7edf\u4e2d\u4f7f\u7528\u81ea\u65cb\u9501\u4ecd\u5341\u5206\u5fc5\u8981\u3002\u53e6\u5916\uff0c\u5728\u591a\u6838SMP\u7684\u60c5\u51b5\u4e0b\uff0c\u4efb\u4f55\u4e00\u4e2a\u6838\u62ff\u5230\u4e86\u81ea\u65cb\u9501\uff0c\u8be5\u6838\u4e0a\u7684\u62a2\u5360\u8c03\u5ea6\u4e5f\u6682\u65f6\u7981\u6b62\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u7981\u6b62\u53e6\u5916\u4e00\u4e2a\u6838\u7684\u62a2\u5360\u8c03\u5ea6\u3002\\r\\n\\r\\n\u5c3d\u7ba1\u7528\u4e86\u81ea\u65cb\u9501\u53ef\u4ee5\u4fdd\u8bc1\u4e34\u754c\u533a\u4e0d\u53d7\u522b\u7684CPU\u548c\u672cCPU\u5185\u7684\u62a2\u5360\u8fdb\u7a0b\u6253\u6270\uff0c\u4f46\u662f\u5f97\u5230\u9501\u7684\u4ee3\u7801\u8def\u5f84\u5728\u6267\u884c\u4e34\u754c\u533a\u7684\u65f6\u5019\uff0c\u8fd8\u53ef\u80fd\u53d7\u5230\u4e2d\u65ad\u548c\u5e95\u534a\u90e8\uff08BH\uff0c\u7a0d\u540e\u7684\u7ae0\u8282\u4f1a\u4ecb\u7ecd\uff09\u7684\u5f71\u54cd\u3002\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u5f71\u54cd\uff0c\u5c31\u9700\u8981\u7528\u5230\u81ea\u65cb\u9501\u7684\u884d\u751f\u3002spin_lock\uff08\uff09/spin_unlock\uff08\uff09\u662f\u81ea\u65cb\u9501\u673a\u5236\u7684\u57fa\u7840\uff0c\u5b83\u4eec\u548c\u5173\u4e2d\u65adlocal_irq_disable\uff08\uff09/\u5f00\u4e2d\u65adlocal_irq_enable\uff08\uff09\u3001\u5173\u5e95\u534a\u90e8local_bh_disable\uff08\uff09/\u5f00\u5e95\u534a\u90e8local_bh_enable\uff08\uff09\u3001\u5173\u4e2d\u65ad\u5e76\u4fdd\u5b58\u72b6\u6001\u5b57local_irq_save\uff08\uff09/\u5f00\u4e2d\u65ad\u5e76\u6062\u590d\u72b6\u6001\u5b57local_irq_restore\uff08\uff09\u7ed3\u5408\u5c31\u5f62\u6210\u4e86\u6574\u5957\u81ea\u65cb\u9501\u673a\u5236\uff0c\u5173\u7cfb\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nspin_lock_irq() = spin_lock() + local_irq_disable()\\r\\nspin_unlock_irq() = spin_unlock() + local_irq_enable()\\r\\nspin_lock_irqsave() = spin_lock() + local_irq_save()\\r\\nspin_unlock_irqrestore() = spin_unlock() + local_irq_restore()\\r\\nspin_lock_bh() = spin_lock() + local_bh_disable()\\r\\nspin_unlock_bh() = spin_unlock() + local_bh_enable()\\r\\n```\\r\\n\\r\\nspin_lock_irq\uff08\uff09\u3001spin_lock_irqsave\uff08\uff09\u3001spin_lock_bh\uff08\uff09\u7c7b\u4f3c\u51fd\u6570\u4f1a\u4e3a\u81ea\u65cb\u9501\u7684\u4f7f\u7528\u7cfb\u597d\u201c\u5b89\u5168\u5e26\u201d\u4ee5\u907f\u514d\u7a81\u5982\u5176\u6765\u7684\u4e2d\u65ad\u9a76\u5165\u5bf9\u7cfb\u7edf\u9020\u6210\u7684\u4f24\u5bb3\u3002\\r\\n\\r\\n\u5728\u591a\u6838\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fdb\u7a0b\u548c\u4e2d\u65ad\u53ef\u80fd\u8bbf\u95ee\u540c\u4e00\u7247\u4e34\u754c\u8d44\u6e90\uff0c\u6211\u4eec\u4e00\u822c\u9700\u8981\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528spin_lock_irqsave\uff08\uff09/spin_unlock_irqrestore\uff08\uff09\uff0c\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528spin_lock\uff08\uff09/spin_unlock\uff08\uff09\uff0c\u5982\u56fe7.8\u6240\u793a\u3002\u8fd9\u6837\uff0c\u5728CPU0\u4e0a\uff0c\u65e0\u8bba\u662f\u8fdb\u7a0b\u4e0a\u4e0b\u6587\uff0c\u8fd8\u662f\u4e2d\u65ad\u4e0a\u4e0b\u6587\u83b7\u5f97\u4e86\u81ea\u65cb\u9501\uff0c\u6b64\u540e\uff0c\u5982\u679cCPU1\u65e0\u8bba\u662f\u8fdb\u7a0b\u4e0a\u4e0b\u6587\uff0c\u8fd8\u662f\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u60f3\u83b7\u5f97\u540c\u4e00\u81ea\u65cb\u9501\uff0c\u90fd\u5fc5\u987b\u5fd9\u7b49\u5f85\uff0c\u8fd9\u907f\u514d\u4e00\u5207\u6838\u95f4\u5e76\u53d1\u7684\u53ef\u80fd\u6027\u3002\u540c\u65f6\uff0c\u7531\u4e8e\u6bcf\u4e2a\u6838\u7684\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u6301\u6709\u9501\u7684\u65f6\u5019\u7528\u7684\u662fspin_lock_irqsave\uff08\uff09\uff0c\u6240\u4ee5\u8be5\u6838\u4e0a\u7684\u4e2d\u65ad\u662f\u4e0d\u53ef\u80fd\u8fdb\u5165\u7684\uff0c\u8fd9\u907f\u514d\u4e86\u6838\u5185\u5e76\u53d1\u7684\u53ef\u80fd\u6027\u3002\\r\\n\\r\\n![image-20250327201019711](./figure/image-20250327201019711.png)\\r\\n\\r\\n\u56fe7.8\u3000\u81ea\u65cb\u9501\u7684\u4f7f\u7528\u5b9e\u4f8b\\r\\n\\r\\n\u9a71\u52a8\u5de5\u7a0b\u5e08\u5e94\u8c28\u614e\u4f7f\u7528\u81ea\u65cb\u9501\uff0c\u800c\u4e14\u5728\u4f7f\u7528\u4e2d\u8fd8\u8981\u7279\u522b\u6ce8\u610f\u5982\u4e0b\u51e0\u4e2a\u95ee\u9898\u3002\\r\\n\\r\\n1\uff09\u81ea\u65cb\u9501\u5b9e\u9645\u4e0a\u662f\u5fd9\u7b49\u9501\uff0c\u5f53\u9501\u4e0d\u53ef\u7528\u65f6\uff0cCPU\u4e00\u76f4\u5faa\u73af\u6267\u884c\u201c\u6d4b\u8bd5\u5e76\u8bbe\u7f6e\u201d\u8be5\u9501\u76f4\u5230\u53ef\u7528\u800c\u53d6\u5f97\u8be5\u9501\uff0cCPU\u5728\u7b49\u5f85\u81ea\u65cb\u9501\u65f6\u4e0d\u505a\u4efb\u4f55\u6709\u7528\u7684\u5de5\u4f5c\uff0c\u4ec5\u4ec5\u662f\u7b49\u5f85\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u5728\u5360\u7528\u9501\u7684\u65f6\u95f4\u6781\u77ed\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u81ea\u65cb\u9501\u624d\u662f\u5408\u7406\u7684\u3002\u5f53\u4e34\u754c\u533a\u5f88\u5927\uff0c\u6216\u6709\u5171\u4eab\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u9700\u8981\u8f83\u957f\u65f6\u95f4\u5360\u7528\u9501\uff0c\u4f7f\u7528\u81ea\u65cb\u9501\u4f1a\u964d\u4f4e\u7cfb\u7edf\u7684\u6027\u80fd\u3002\\r\\n\\r\\n2\uff09\u81ea\u65cb\u9501\u53ef\u80fd\u5bfc\u81f4\u7cfb\u7edf\u6b7b\u9501\u3002\u5f15\u53d1\u8fd9\u4e2a\u95ee\u9898\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u9012\u5f52\u4f7f\u7528\u4e00\u4e2a\u81ea\u65cb\u9501\uff0c\u5373\u5982\u679c\u4e00\u4e2a\u5df2\u7ecf\u62e5\u6709\u67d0\u4e2a\u81ea\u65cb\u9501\u7684CPU\u60f3\u7b2c\u4e8c\u6b21\u83b7\u5f97\u8fd9\u4e2a\u81ea\u65cb\u9501\uff0c\u5219\u8be5CPU\u5c06\u6b7b\u9501\u3002\\r\\n\\r\\n3\uff09\u5728\u81ea\u65cb\u9501\u9501\u5b9a\u671f\u95f4\u4e0d\u80fd\u8c03\u7528\u53ef\u80fd\u5f15\u8d77\u8fdb\u7a0b\u8c03\u5ea6\u7684\u51fd\u6570\u3002\u5982\u679c\u8fdb\u7a0b\u83b7\u5f97\u81ea\u65cb\u9501\u4e4b\u540e\u518d\u963b\u585e\uff0c\u5982\u8c03\u7528copy_from_user\uff08\uff09\u3001copy_to_user\uff08\uff09\u3001kmalloc\uff08\uff09\u548cmsleep\uff08\uff09\u7b49\u51fd\u6570\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u5185\u6838\u7684\u5d29\u6e83\u3002\\r\\n\\r\\n4\uff09\u5728\u5355\u6838\u60c5\u51b5\u4e0b\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u4e5f\u5e94\u8be5\u8ba4\u4e3a\u81ea\u5df1\u7684CPU\u662f\u591a\u6838\u7684\uff0c\u9a71\u52a8\u7279\u522b\u5f3a\u8c03\u8de8\u5e73\u53f0\u7684\u6982\u5ff5\u3002\u6bd4\u5982\uff0c\u5728\u5355CPU\u7684\u60c5\u51b5\u4e0b\uff0c\u82e5\u4e2d\u65ad\u548c\u8fdb\u7a0b\u53ef\u80fd\u8bbf\u95ee\u540c\u4e00\u4e34\u754c\u533a\uff0c\u8fdb\u7a0b\u91cc\u8c03\u7528spin_lock_irqsave\uff08\uff09\u662f\u5b89\u5168\u7684\uff0c\u5728\u4e2d\u65ad\u91cc\u5176\u5b9e\u4e0d\u8c03\u7528spin_lock\uff08\uff09\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u56e0\u4e3aspin_lock_irqsave\uff08\uff09\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e2aCPU\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e0d\u53ef\u80fd\u6267\u884c\u3002\u4f46\u662f\uff0c\u82e5CPU\u53d8\u6210\u591a\u6838\uff0cspin_lock_irqsave\uff08\uff09\u4e0d\u80fd\u5c4f\u853d\u53e6\u5916\u4e00\u4e2a\u6838\u7684\u4e2d\u65ad\uff0c\u6240\u4ee5\u53e6\u5916\u4e00\u4e2a\u6838\u5c31\u53ef\u80fd\u9020\u6210\u5e76\u53d1\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u6211\u4eec\u5728\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u91cc\u4e5f\u5e94\u8be5\u8c03\u7528spin_lock\uff08\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53557.3\u7ed9\u51fa\u4e86\u81ea\u65cb\u9501\u7684\u4f7f\u7528\u4f8b\u5b50\uff0c\u5b83\u88ab\u7528\u4e8e\u5b9e\u73b0\u4f7f\u5f97\u8bbe\u5907\u53ea\u80fd\u88ab\u6700\u591a1\u4e2a\u8fdb\u7a0b\u6253\u5f00\uff0c\u529f\u80fd\u548c\u4ee3\u7801\u6e05\u5355\u4e0e7.2\u7c7b\u4f3c\u3002\\r\\n\\r\\n```\\r\\n 1 int xxx_count = 0;/* \u5b9a\u4e49\u6587\u4ef6\u6253\u5f00\u6b21\u6570\u8ba1\u6570*/\\r\\n 2\\r\\n 3 static int xxx_open(struct inode *inode, struct file *filp)\\r\\n 4 {\\r\\n 5   ...\\r\\n 6   spinlock(&xxx_lock);\\r\\n 7   if (xxx_count) {/* \u5df2\u7ecf\u6253\u5f00*/\\r\\n 8       spin_unlock(&xxx_lock);\\r\\n 9       return  -EBUSY;\\r\\n10   }\\r\\n11   xxx_count++;/* \u589e\u52a0\u4f7f\u7528\u8ba1\u6570*/\\r\\n12   spin_unlock(&xxx_lock);\\r\\n13   ...\\r\\n14   return 0;/* \u6210\u529f*/\\r\\n15}\\r\\n16\\r\\n17static int xxx_release(struct inode *inode, struct file *filp)\\r\\n18{\\r\\n19   ...\\r\\n20   spinlock(&xxx_lock);\\r\\n21   xxx_count--;/* \u51cf\u5c11\u4f7f\u7528\u8ba1\u6570*/\\r\\n22   spin_unlock(&xxx_lock);\\r\\n23\\r\\n24   return 0;\\r\\n25}\\r\\n```\\r\\n\\r\\n# 7.5.2\u3000\u8bfb\u5199\u81ea\u65cb\u9501\\r\\n\\r\\n\u81ea\u65cb\u9501\u4e0d\u5173\u5fc3\u9501\u5b9a\u7684\u4e34\u754c\u533a\u7a76\u7adf\u5728\u8fdb\u884c\u4ec0\u4e48\u64cd\u4f5c\uff0c\u4e0d\u7ba1\u662f\u8bfb\u8fd8\u662f\u5199\uff0c\u5b83\u90fd\u4e00\u89c6\u540c\u4ec1\u3002\u5373\u4fbf\u591a\u4e2a\u6267\u884c\u5355\u5143\u540c\u65f6\u8bfb\u53d6\u4e34\u754c\u8d44\u6e90\u4e5f\u4f1a\u88ab\u9501\u4f4f\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9\u5171\u4eab\u8d44\u6e90\u5e76\u53d1\u8bbf\u95ee\u65f6\uff0c\u591a\u4e2a\u6267\u884c\u5355\u5143\u540c\u65f6\u8bfb\u53d6\u5b83\u662f\u4e0d\u4f1a\u6709\u95ee\u9898\u7684\uff0c\u81ea\u65cb\u9501\u7684\u884d\u751f\u9501\u8bfb\u5199\u81ea\u65cb\u9501\uff08rwlock\uff09\u53ef\u5141\u8bb8\u8bfb\u7684\u5e76\u53d1\u3002\u8bfb\u5199\u81ea\u65cb\u9501\u662f\u4e00\u79cd\u6bd4\u81ea\u65cb\u9501\u7c92\u5ea6\u66f4\u5c0f\u7684\u9501\u673a\u5236\uff0c\u5b83\u4fdd\u7559\u4e86\u201c\u81ea\u65cb\u201d\u7684\u6982\u5ff5\uff0c\u4f46\u662f\u5728\u5199\u64cd\u4f5c\u65b9\u9762\uff0c\u53ea\u80fd\u6700\u591a\u67091\u4e2a\u5199\u8fdb\u7a0b\uff0c\u5728\u8bfb\u64cd\u4f5c\u65b9\u9762\uff0c\u540c\u65f6\u53ef\u4ee5\u6709\u591a\u4e2a\u8bfb\u6267\u884c\u5355\u5143\u3002\u5f53\u7136\uff0c\u8bfb\u548c\u5199\u4e5f\u4e0d\u80fd\u540c\u65f6\u8fdb\u884c\u3002\\r\\n\\r\\n\u8bfb\u5199\u81ea\u65cb\u9501\u6d89\u53ca\u7684\u64cd\u4f5c\u5982\u4e0b\u3002\\r\\n\\r\\n1.\u5b9a\u4e49\u548c\u521d\u59cb\u5316\u8bfb\u5199\u81ea\u65cb\u9501\\r\\n\\r\\n```\\r\\nrwlock_t my_rwlock;\\r\\nrwlock_init(&my_rwlock);       /* \u52a8\u6001\u521d\u59cb\u5316 */\\r\\n```\\r\\n\\r\\n2.\u8bfb\u9501\u5b9a\\r\\n\\r\\n```\\r\\nvoid read_lock(rwlock_t *lock);\\r\\nvoid read_lock_irqsave(rwlock_t *lock, unsigned long flags);\\r\\nvoid read_lock_irq(rwlock_t *lock);\\r\\nvoid read_lock_bh(rwlock_t *lock);\\r\\n```\\r\\n\\r\\n3.\u8bfb\u89e3\u9501\\r\\n\\r\\n```\\r\\nvoid read_unlock(rwlock_t *lock);\\r\\nvoid read_unlock_irqrestore(rwlock_t *lock, unsigned long flags);\\r\\nvoid read_unlock_irq(rwlock_t *lock);\\r\\nvoid read_unlock_bh(rwlock_t *lock);\\r\\n```\\r\\n\\r\\n\u5728\u5bf9\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u8bfb\u53d6\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u8c03\u7528\u8bfb\u9501\u5b9a\u51fd\u6570\uff0c\u5b8c\u6210\u4e4b\u540e\u5e94\u8c03\u7528\u8bfb\u89e3\u9501\u51fd\u6570\u3002\\r\\n\\r\\nread_lock_irqsave\uff08\uff09\u3001read_lock_irq\uff08\uff09\u548cread_lock_bh\uff08\uff09\u4e5f\u5206\u522b\u662fread_lock\uff08\uff09\u5206\u522b\u4e0elocal_irq_save\uff08\uff09\u3001local_irq_disable\uff08\uff09\u548clocal_bh_disable\uff08\uff09\u7684\u7ec4\u5408\uff0c\u8bfb\u89e3\u9501\u51fd\u6570read_unlock_irqrestore\uff08\uff09\u3001read_unlock_irq\uff08\uff09\u3001read_unlock_bh\uff08\uff09\u7684\u60c5\u51b5\u4e0e\u6b64\u7c7b\u4f3c\u3002\\r\\n\\r\\n4.\u5199\u9501\u5b9a\\r\\n\\r\\n```\\r\\nvoid write_lock(rwlock_t *lock);\\r\\nvoid write_lock_irqsave(rwlock_t *lock, unsigned long flags);\\r\\nvoid write_lock_irq(rwlock_t *lock);\\r\\nvoid write_lock_bh(rwlock_t *lock);\\r\\nint write_trylock(rwlock_t *lock);\\r\\n```\\r\\n\\r\\n5.\u5199\u89e3\u9501\\r\\n\\r\\n```\\r\\nvoid write_unlock(rwlock_t *lock);\\r\\nvoid write_unlock_irqrestore(rwlock_t *lock, unsigned long flags);\\r\\nvoid write_unlock_irq(rwlock_t *lock);\\r\\nvoid write_unlock_bh(rwlock_t *lock);\\r\\n```\\r\\n\\r\\nwrite_lock_irqsave\uff08\uff09\u3001write_lock_irq\uff08\uff09\u3001write_lock_bh\uff08\uff09\u5206\u522b\u662fwrite_lock\uff08\uff09\u4e0elocal_irq_save\uff08\uff09\u3001local_irq_disable\uff08\uff09\u548clocal_bh_disable\uff08\uff09\u7684\u7ec4\u5408\uff0c\u5199\u89e3\u9501\u51fd\u6570write_unlock_irqrestore\uff08\uff09\u3001write_unlock_irq\uff08\uff09\u3001write_unlock_bh\uff08\uff09\u7684\u60c5\u51b5\u4e0e\u6b64\u7c7b\u4f3c\u3002\\r\\n\\r\\n\u5728\u5bf9\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u5199\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u8c03\u7528\u5199\u9501\u5b9a\u51fd\u6570\uff0c\u5b8c\u6210\u4e4b\u540e\u5e94\u8c03\u7528\u5199\u89e3\u9501\u51fd\u6570\u3002\u548cspin_trylock\uff08\uff09\u4e00\u6837\uff0cwrite_trylock\uff08\uff09\u4e5f\u53ea\u662f\u5c1d\u8bd5\u83b7\u53d6\u8bfb\u5199\u81ea\u65cb\u9501\uff0c\u4e0d\u7ba1\u6210\u529f\u5931\u8d25\uff0c\u90fd\u4f1a\u7acb\u5373\u8fd4\u56de\u3002\\r\\n\\r\\n\u8bfb\u5199\u81ea\u65cb\u9501\u4e00\u822c\u8fd9\u6837\u88ab\u4f7f\u7528\uff1a\\r\\n\\r\\n```\\r\\nrwlock_t lock;                  /* \u5b9a\u4e49rwlock */\\r\\nrwlock_init(&lock);             /* \u521d\u59cb\u5316rwlock */\\r\\n/* \u8bfb\u65f6\u83b7\u53d6\u9501*/\\r\\nread_lock(&lock);\\r\\n...                             /* \u4e34\u754c\u8d44\u6e90 */\\r\\nread_unlock(&lock);\\r\\n/* \u5199\u65f6\u83b7\u53d6\u9501*/\\r\\nwrite_lock_irqsave(&lock, flags);\\r\\n...                             /* \u4e34\u754c\u8d44\u6e90*/\\r\\nwrite_unlock_irqrestore(&lock, flags);\\r\\n```\\r\\n\\r\\n# 7.5.3\u3000\u987a\u5e8f\u9501\\r\\n\\r\\n\u987a\u5e8f\u9501\uff08seqlock\uff09\u662f\u5bf9\u8bfb\u5199\u9501\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u82e5\u4f7f\u7528\u987a\u5e8f\u9501\uff0c\u8bfb\u6267\u884c\u5355\u5143\u4e0d\u4f1a\u88ab\u5199\u6267\u884c\u5355\u5143\u963b\u585e\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bfb\u6267\u884c\u5355\u5143\u5728\u5199\u6267\u884c\u5355\u5143\u5bf9\u88ab\u987a\u5e8f\u9501\u4fdd\u62a4\u7684\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u5199\u64cd\u4f5c\u65f6\u4ecd\u7136\u53ef\u4ee5\u7ee7\u7eed\u8bfb\uff0c\u800c\u4e0d\u5fc5\u7b49\u5f85\u5199\u6267\u884c\u5355\u5143\u5b8c\u6210\u5199\u64cd\u4f5c\uff0c\u5199\u6267\u884c\u5355\u5143\u4e5f\u4e0d\u9700\u8981\u7b49\u5f85\u6240\u6709\u8bfb\u6267\u884c\u5355\u5143\u5b8c\u6210\u8bfb\u64cd\u4f5c\u624d\u53bb\u8fdb\u884c\u5199\u64cd\u4f5c\u3002\u4f46\u662f\uff0c\u5199\u6267\u884c\u5355\u5143\u4e0e\u5199\u6267\u884c\u5355\u5143\u4e4b\u95f4\u4ecd\u7136\u662f\u4e92\u65a5\u7684\uff0c\u5373\u5982\u679c\u6709\u5199\u6267\u884c\u5355\u5143\u5728\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5176\u4ed6\u5199\u6267\u884c\u5355\u5143\u5fc5\u987b\u81ea\u65cb\u5728\u90a3\u91cc\uff0c\u76f4\u5230\u5199\u6267\u884c\u5355\u5143\u91ca\u653e\u4e86\u987a\u5e8f\u9501\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u987a\u5e8f\u9501\u800c\u8a00\uff0c\u5c3d\u7ba1\u8bfb\u5199\u4e4b\u95f4\u4e0d\u4e92\u76f8\u6392\u65a5\uff0c\u4f46\u662f\u5982\u679c\u8bfb\u6267\u884c\u5355\u5143\u5728\u8bfb\u64cd\u4f5c\u671f\u95f4\uff0c\u5199\u6267\u884c\u5355\u5143\u5df2\u7ecf\u53d1\u751f\u4e86\u5199\u64cd\u4f5c\uff0c\u90a3\u4e48\uff0c\u8bfb\u6267\u884c\u5355\u5143\u5fc5\u987b\u91cd\u65b0\u8bfb\u53d6\u6570\u636e\uff0c\u4ee5\u4fbf\u786e\u4fdd\u5f97\u5230\u7684\u6570\u636e\u662f\u5b8c\u6574\u7684\u3002\u6240\u4ee5\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bfb\u7aef\u53ef\u80fd\u53cd\u590d\u8bfb\u591a\u6b21\u540c\u6837\u7684\u533a\u57df\u624d\u80fd\u8bfb\u5230\u6709\u6548\u7684\u6570\u636e\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u5199\u6267\u884c\u5355\u5143\u6d89\u53ca\u7684\u987a\u5e8f\u9501\u64cd\u4f5c\u5982\u4e0b\u3002\\r\\n\\r\\n1.\u83b7\u5f97\u987a\u5e8f\u9501\\r\\n\\r\\n```\\r\\nvoid write_seqlock(seqlock_t *sl);\\r\\nint write_tryseqlock(seqlock_t *sl);\\r\\nwrite_seqlock_irqsave(lock, flags)\\r\\nwrite_seqlock_irq(lock)\\r\\nwrite_seqlock_bh(lock)\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0c\\r\\n\\r\\n```\\r\\nwrite_seqlock_irqsave() = loal_irq_save() + write_seqlock()\\r\\nwrite_seqlock_irq() = local_irq_disable() + write_seqlock()\\r\\nwrite_seqlock_bh() = local_bh_disable() + write_seqlock()\\r\\n```\\r\\n\\r\\n2.\u91ca\u653e\u987a\u5e8f\u9501\\r\\n\\r\\n```\\r\\nvoid write_sequnlock(seqlock_t *sl);\\r\\nwrite_sequnlock_irqrestore(lock, flags)\\r\\nwrite_sequnlock_irq(lock)\\r\\nwrite_sequnlock_bh(lock)\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0c\\r\\n\\r\\n```\\r\\nwrite_sequnlock_irqrestore() = write_sequnlock() + local_irq_restore()\\r\\nwrite_sequnlock_irq() = write_sequnlock() + local_irq_enable()\\r\\nwrite_sequnlock_bh() = write_sequnlock() + local_bh_enable()\\r\\n```\\r\\n\\r\\n\u5199\u6267\u884c\u5355\u5143\u4f7f\u7528\u987a\u5e8f\u9501\u7684\u6a21\u5f0f\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nwrite_seqlock(&seqlock_a);\\r\\n.../* \u5199\u64cd\u4f5c\u4ee3\u7801\u5757*/\\r\\nwrite_sequnlock(&seqlock_a);\\r\\n```\\r\\n\\r\\n\u56e0\u6b64\uff0c\u5bf9\u5199\u6267\u884c\u5355\u5143\u800c\u8a00\uff0c\u5b83\u7684\u4f7f\u7528\u4e0e\u81ea\u65cb\u9501\u76f8\u540c\u3002\\r\\n\\r\\n\u8bfb\u6267\u884c\u5355\u5143\u6d89\u53ca\u7684\u987a\u5e8f\u9501\u64cd\u4f5c\u5982\u4e0b\u3002\\r\\n\\r\\n1.\u8bfb\u5f00\u59cb\\r\\n\\r\\n```\\r\\nunsigned read_seqbegin(const seqlock_t *sl);\\r\\nread_seqbegin_irqsave(lock, flags)\\r\\n```\\r\\n\\r\\n\u8bfb\u6267\u884c\u5355\u5143\u5728\u5bf9\u88ab\u987a\u5e8f\u9501s1\u4fdd\u62a4\u7684\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u8bbf\u95ee\u524d\u9700\u8981\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u987a\u5e8f\u9501s1\u7684\u5f53\u524d\u987a\u5e8f\u53f7\u3002\u5176\u4e2d\uff0c\\r\\n\\r\\n```\\r\\nread_seqbegin_irqsave() = local_irq_save() + read_seqbegin()\\r\\n```\\r\\n\\r\\n2.\u91cd\u8bfb\\r\\n\\r\\n```\\r\\nint read_seqretry(const seqlock_t *sl, unsigned iv);\\r\\nread_seqretry_irqrestore(lock, iv, flags)\\r\\n```\\r\\n\\r\\n\u8bfb\u6267\u884c\u5355\u5143\u5728\u8bbf\u95ee\u5b8c\u88ab\u987a\u5e8f\u9501s1\u4fdd\u62a4\u7684\u5171\u4eab\u8d44\u6e90\u540e\u9700\u8981\u8c03\u7528\u8be5\u51fd\u6570\u6765\u68c0\u67e5\uff0c\u5728\u8bfb\u8bbf\u95ee\u671f\u95f4\u662f\u5426\u6709\u5199\u64cd\u4f5c\u3002\u5982\u679c\u6709\u5199\u64cd\u4f5c\uff0c\u8bfb\u6267\u884c\u5355\u5143\u5c31\u9700\u8981\u91cd\u65b0\u8fdb\u884c\u8bfb\u64cd\u4f5c\u3002\u5176\u4e2d\uff0c\\r\\n\\r\\n```\\r\\nread_seqretry_irqrestore() = read_seqretry() + local_irq_restore()\\r\\n```\\r\\n\\r\\n\u8bfb\u6267\u884c\u5355\u5143\u4f7f\u7528\u987a\u5e8f\u9501\u7684\u6a21\u5f0f\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\ndo {\\r\\n    seqnum = read_seqbegin(&seqlock_a);\\r\\n    /* \u8bfb\u64cd\u4f5c\u4ee3\u7801\u5757*/\\r\\n    ...\\r\\n} while (read_seqretry(&seqlock_a, seqnum));\\r\\n```\\r\\n\\r\\n# 7.5.4\u3000\u8bfb-\u590d\u5236-\u66f4\u65b0\\r\\n\\r\\nRCU\uff08Read-Copy-Update\uff0c\u8bfb-\u590d\u5236-\u66f4\u65b0\uff09\uff0c\u5b83\u662f\u57fa\u4e8e\u5176\u539f\u7406\u547d\u540d\u7684\u3002RCU\u5e76\u4e0d\u662f\u65b0\u7684\u9501\u673a\u5236\uff0c\u65e9\u572820\u4e16\u7eaa80\u5e74\u4ee3\u5c31\u6709\u4e86\u8fd9\u79cd\u673a\u5236\uff0c\u800c\u5728Linux\u4e2d\u662f\u5728\u5f00\u53d1\u5185\u68382.5.43\u65f6\u5f15\u5165\u8be5\u6280\u672f\u7684\uff0c\u5e76\u6b63\u5f0f\u5305\u542b\u57282.6\u5185\u6838\u4e2d\u3002\\r\\n\\r\\nLinux\u793e\u533a\u5173\u4e8eRCU\u7684\u7ecf\u5178\u6587\u6863\u4f4d\u4e8ehttps://www.kernel.org/doc/ols/2001/read-copy.pdf \uff0cLinux\u5185\u6838\u6e90\u4ee3\u7801Documentation/RCU/\u4e5f\u5305\u542b\u4e86RCU\u7684\u4e00\u4e9b\u8bb2\u89e3\u3002\\r\\n\\r\\n\u4e0d\u540c\u4e8e\u81ea\u65cb\u9501\uff0c\u4f7f\u7528RCU\u7684\u8bfb\u7aef\u6ca1\u6709\u9501\u3001\u5185\u5b58\u5c4f\u969c\u3001\u539f\u5b50\u6307\u4ee4\u7c7b\u7684\u5f00\u9500\uff0c\u51e0\u4e4e\u53ef\u4ee5\u8ba4\u4e3a\u662f\u76f4\u63a5\u8bfb\uff08\u53ea\u662f\u7b80\u5355\u5730\u6807\u660e\u8bfb\u5f00\u59cb\u548c\u8bfb\u7ed3\u675f\uff09\uff0c\u800cRCU\u7684\u5199\u6267\u884c\u5355\u5143\u5728\u8bbf\u95ee\u5b83\u7684\u5171\u4eab\u8d44\u6e90\u524d\u9996\u5148\u590d\u5236\u4e00\u4e2a\u526f\u672c\uff0c\u7136\u540e\u5bf9\u526f\u672c\u8fdb\u884c\u4fee\u6539\uff0c\u6700\u540e\u4f7f\u7528\u4e00\u4e2a\u56de\u8c03\u673a\u5236\u5728\u9002\u5f53\u7684\u65f6\u673a\u628a\u6307\u5411\u539f\u6765\u6570\u636e\u7684\u6307\u9488\u91cd\u65b0\u6307\u5411\u65b0\u7684\u88ab\u4fee\u6539\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u65f6\u673a\u5c31\u662f\u6240\u6709\u5f15\u7528\u8be5\u6570\u636e\u7684CPU\u90fd\u9000\u51fa\u5bf9\u5171\u4eab\u6570\u636e\u8bfb\u64cd\u4f5c\u7684\u65f6\u5019\u3002\u7b49\u5f85\u9002\u5f53\u65f6\u673a\u7684\u8fd9\u4e00\u65f6\u671f\u79f0\u4e3a\u5bbd\u9650\u671f\uff08Grace Period\uff09\u3002\\r\\n\\r\\n\u6bd4\u5982\uff0c\u6709\u4e0b\u9762\u7684\u4e00\u4e2a\u7531struct foo\u7ed3\u6784\u4f53\u7ec4\u6210\u7684\u94fe\u8868\uff1a\\r\\n\\r\\n```\\r\\nstruct foo {\\r\\n  struct list_head list;\\r\\n  int a;\\r\\n  int b;\\r\\n  int c;\\r\\n };\\r\\n```\\r\\n\\r\\n\u5047\u8bbe\u8fdb\u7a0bA\u8981\u4fee\u6539\u94fe\u8868\u4e2d\u67d0\u4e2a\u8282\u70b9N\u7684\u6210\u5458a\u3001b\u3002\u81ea\u65cb\u9501\u7684\u601d\u8def\u662f\u6392\u4ed6\u6027\u5730\u8bbf\u95ee\u8fd9\u4e2a\u94fe\u8868\uff0c\u7b49\u6240\u6709\u5176\u4ed6\u6301\u6709\u81ea\u65cb\u9501\u7684\u8fdb\u7a0b\u6216\u8005\u4e2d\u65ad\u628a\u81ea\u65cb\u9501\u91ca\u653e\u540e\uff0c\u8fdb\u7a0bA\u518d\u62ff\u5230\u81ea\u65cb\u9501\u8bbf\u95ee\u94fe\u8868\u5e76\u627e\u5230N\u8282\u70b9\uff0c\u4e4b\u540e\u4fee\u6539\u5b83\u7684a\u3001b\u4e24\u4e2a\u6210\u5458\uff0c\u5b8c\u6210\u540e\u89e3\u9501\u3002\u800cRCU\u7684\u601d\u8def\u5219\u4e0d\u540c\uff0c\u5b83\u76f4\u63a5\u5236\u9020\u4e00\u4e2a\u65b0\u7684\u8282\u70b9M\uff0c\u628aN\u7684\u5185\u5bb9\u590d\u5236\u7ed9M\uff0c\u4e4b\u540e\u5728M\u4e0a\u4fee\u6539a\u3001b\uff0c\u5e76\u7528M\u6765\u4ee3\u66ffN\u539f\u672c\u5728\u94fe\u8868\u7684\u4f4d\u7f6e\u3002\u4e4b\u540e\u8fdb\u7a0bA\u7b49\u5f85\u5728\u94fe\u8868\u524d\u671f\u5df2\u7ecf\u5b58\u5728\u7684\u6240\u6709\u8bfb\u7aef\u7ed3\u675f\u540e\uff08\u5373\u5bbd\u9650\u671f\uff0c\u901a\u8fc7\u4e0b\u6587\u8bf4\u7684synchronize_rcu\uff08\uff09API\u5b8c\u6210\uff09\uff0c\u518d\u91ca\u653e\u539f\u6765\u7684N\u3002\u7528\u4ee3\u7801\u6765\u63cf\u8ff0\u8fd9\u4e2a\u903b\u8f91\u5c31\u662f\uff1a\\r\\n\\r\\n```\\r\\nstruct foo {\\r\\n  struct list_head list;\\r\\n  int a;\\r\\n  int b;\\r\\n  int c;\\r\\n};\\r\\nLIST_HEAD(head);\\r\\n/* . . . */\\r\\np = search(head, key);\\r\\nif (p == NULL) {\\r\\n  /* Take appropriate action, unlock, and return. */\\r\\n}\\r\\nq = kmalloc(sizeof(*p), GFP_KERNEL);\\r\\n*q = *p;\\r\\nq->b = 2;\\r\\nq->c = 3;\\r\\nlist_replace_rcu(&p->list, &q->list);\\r\\nsynchronize_rcu();\\r\\nkfree(p);\\r\\n```\\r\\n\\r\\nRCU\u53ef\u4ee5\u770b\u4f5c\u8bfb\u5199\u9501\u7684\u9ad8\u6027\u80fd\u7248\u672c\uff0c\u76f8\u6bd4\u8bfb\u5199\u9501\uff0cRCU\u7684\u4f18\u70b9\u5728\u4e8e\u65e2\u5141\u8bb8\u591a\u4e2a\u8bfb\u6267\u884c\u5355\u5143\u540c\u65f6\u8bbf\u95ee\u88ab\u4fdd\u62a4\u7684\u6570\u636e\uff0c\u53c8\u5141\u8bb8\u591a\u4e2a\u8bfb\u6267\u884c\u5355\u5143\u548c\u591a\u4e2a\u5199\u6267\u884c\u5355\u5143\u540c\u65f6\u8bbf\u95ee\u88ab\u4fdd\u62a4\u7684\u6570\u636e\u3002\u4f46\u662f\uff0cRCU\u4e0d\u80fd\u66ff\u4ee3\u8bfb\u5199\u9501\uff0c\u56e0\u4e3a\u5982\u679c\u5199\u6bd4\u8f83\u591a\u65f6\uff0c\u5bf9\u8bfb\u6267\u884c\u5355\u5143\u7684\u6027\u80fd\u63d0\u9ad8\u4e0d\u80fd\u5f25\u8865\u5199\u6267\u884c\u5355\u5143\u540c\u6b65\u5bfc\u81f4\u7684\u635f\u5931\u3002\u56e0\u4e3a\u4f7f\u7528RCU\u65f6\uff0c\u5199\u6267\u884c\u5355\u5143\u4e4b\u95f4\u7684\u540c\u6b65\u5f00\u9500\u4f1a\u6bd4\u8f83\u5927\uff0c\u5b83\u9700\u8981\u5ef6\u8fdf\u6570\u636e\u7ed3\u6784\u7684\u91ca\u653e\uff0c\u590d\u5236\u88ab\u4fee\u6539\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u4e5f\u5fc5\u987b\u4f7f\u7528\u67d0\u79cd\u9501\u673a\u5236\u6765\u540c\u6b65\u5e76\u53d1\u7684\u5176\u4ed6\u5199\u6267\u884c\u5355\u5143\u7684\u4fee\u6539\u64cd\u4f5c\u3002\\r\\n\\r\\nLinux\u4e2d\u63d0\u4f9b\u7684RCU\u64cd\u4f5c\u5305\u62ec\u5982\u4e0b4\u79cd\u3002\\r\\n\\r\\n1.\u8bfb\u9501\u5b9a\\r\\n\\r\\n```\\r\\nrcu_read_lock()\\r\\nrcu_read_lock_bh()\\r\\n```\\r\\n\\r\\n2.\u8bfb\u89e3\u9501\\r\\n\\r\\n```\\r\\nrcu_read_unlock()\\r\\nrcu_read_unlock_bh()\\r\\n```\\r\\n\\r\\n\u4f7f\u7528RCU\u8fdb\u884c\u8bfb\u7684\u6a21\u5f0f\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nrcu_read_lock()\\r\\n.../* \u8bfb\u4e34\u754c\u533a*/\\r\\nrcu_read_unlock()\\r\\n```\\r\\n\\r\\n3.\u540c\u6b65RCU\\r\\n\\r\\n```\\r\\nsynchronize_rcu()\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7531RCU\u5199\u6267\u884c\u5355\u5143\u8c03\u7528\uff0c\u5b83\u5c06\u963b\u585e\u5199\u6267\u884c\u5355\u5143\uff0c\u76f4\u5230\u5f53\u524dCPU\u4e0a\u6240\u6709\u7684\u5df2\u7ecf\u5b58\u5728\uff08Ongoing\uff09\u7684\u8bfb\u6267\u884c\u5355\u5143\u5b8c\u6210\u8bfb\u4e34\u754c\u533a\uff0c\u5199\u6267\u884c\u5355\u5143\u624d\u53ef\u4ee5\u7ee7\u7eed\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002synchronize_rcu\uff08\uff09\u5e76\u4e0d\u9700\u8981\u7b49\u5f85\u540e\u7eed\uff08Subsequent\uff09\u8bfb\u4e34\u754c\u533a\u7684\u5b8c\u6210\uff0c\u5982\u56fe7.9\u6240\u793a\u3002\\r\\n\\r\\n![1743086450837](./figure/1743086450837.png)\\r\\n\\r\\n\u56fe7.9\u3000synchronize_rcu\\r\\n\\r\\n\u63a2\u6d4b\u6240\u6709\u7684rcu_read_lock\uff08\uff09\u88abrcu_read_unlock\uff08\uff09\u7ed3\u675f\u7684\u8fc7\u7a0b\u5f88\u7c7b\u4f3cJava\u8bed\u8a00\u5783\u573e\u56de\u6536\u7684\u5de5\u4f5c\u3002\\r\\n\\r\\n4.\u6302\u63a5\u56de\u8c03\\r\\n\\r\\n```\\r\\nvoid call_rcu(struct rcu_head *head,\\r\\n                    void (*func)(struct rcu_head *rcu));\\r\\n```\\r\\n\\r\\n\u51fd\u6570call_rcu\uff08\uff09\u4e5f\u7531RCU\u5199\u6267\u884c\u5355\u5143\u8c03\u7528\uff0c\u4e0esynchronize_rcu\uff08\uff09\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4e0d\u4f1a\u4f7f\u5199\u6267\u884c\u5355\u5143\u963b\u585e\uff0c\u56e0\u800c\u53ef\u4ee5\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u6216\u8f6f\u4e2d\u65ad\u4e2d\u4f7f\u7528\u3002\u8be5\u51fd\u6570\u628a\u51fd\u6570func\u6302\u63a5\u5230RCU\u56de\u8c03\u51fd\u6570\u94fe\u4e0a\uff0c\u7136\u540e\u7acb\u5373\u8fd4\u56de\u3002\u6302\u63a5\u7684\u56de\u8c03\u51fd\u6570\u4f1a\u5728\u4e00\u4e2a\u5bbd\u9650\u671f\u7ed3\u675f\uff08\u5373\u6240\u6709\u5df2\u7ecf\u5b58\u5728\u7684RCU\u8bfb\u4e34\u754c\u533a\u5b8c\u6210\uff09\u540e\u88ab\u6267\u884c\u3002\\r\\n\\r\\n```\\r\\nrcu_assign_pointer(p, v)\\r\\n```\\r\\n\\r\\n\u7ed9RCU\u4fdd\u62a4\u7684\u6307\u9488\u8d4b\u4e00\u4e2a\u65b0\u7684\u503c\u3002\\r\\n\\r\\n```\\r\\nrcu_dereference(p)\\r\\n```\\r\\n\\r\\n\u8bfb\u7aef\u4f7f\u7528rcu_dereference\uff08\uff09\u83b7\u53d6\u4e00\u4e2aRCU\u4fdd\u62a4\u7684\u6307\u9488\uff0c\u4e4b\u540e\u65e2\u53ef\u4ee5\u5b89\u5168\u5730\u5f15\u7528\u5b83\uff08\u8bbf\u95ee\u5b83\u6307\u5411\u7684\u533a\u57df\uff09\u3002\u4e00\u822c\u9700\u8981\u5728rcu_read_lock\uff08\uff09/rcu_read_unlock\uff08\uff09\u4fdd\u62a4\u7684\u533a\u95f4\u5f15\u7528\u8fd9\u4e2a\u6307\u9488\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nrcu_read_lock();\\r\\nirq_rt = rcu_dereference(kvm->irq_routing);\\r\\nif (irq < irq_rt->nr_rt_entries)\\r\\n        hlist_for_each_entry(e, &irq_rt->map[irq], link) {\\r\\n                if (likely(e->type == KVM_IRQ_ROUTING_MSI))\\r\\n                        ret = kvm_set_msi_inatomic(e, kvm);\\r\\n                else\\r\\n                        ret = -EWOULDBLOCK;\\r\\n                break;\\r\\n        }\\r\\nrcu_read_unlock();\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u53d6\u81eavirt/kvm/irq_comm.c\u7684kvm_set_irq_inatomic\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\nrcu_access_pointer(p)\\r\\n```\\r\\n\\r\\n\u8bfb\u7aef\u4f7f\u7528rcu_access_pointer\uff08\uff09\u83b7\u53d6\u4e00\u4e2aRCU\u4fdd\u62a4\u7684\u6307\u9488\uff0c\u4e4b\u540e\u5e76\u4e0d\u5f15\u7528\u5b83\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u5173\u5fc3\u6307\u9488\u672c\u8eab\u7684\u503c\uff0c\u800c\u4e0d\u5173\u5fc3\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u3002\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8be5API\u6765\u5224\u65ad\u6307\u9488\u662f\u5426\u4e3aNULL\u3002\\r\\n\\r\\n\u628arcu_assign_pointer\uff08\uff09\u548crcu_dereference\uff08\uff09\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\uff0c\u5199\u7aef\u5206\u914d\u4e00\u4e2a\u65b0\u7684struct foo\u5185\u5b58\uff0c\u5e76\u521d\u59cb\u5316\u5176\u4e2d\u7684\u6210\u5458\uff0c\u4e4b\u540e\u628a\u8be5\u7ed3\u6784\u4f53\u7684\u5730\u5740\u8d4b\u503c\u7ed9\u5168\u5c40\u7684gp\u6307\u9488\uff1a\\r\\n\\r\\n```\\r\\nstruct foo {\\r\\n  int a;\\r\\n  int b;\\r\\n  int c;\\r\\n};\\r\\nstruct foo *gp = NULL;\\r\\n/* . . . */\\r\\np = kmalloc(sizeof(*p), GFP_KERNEL);\\r\\np->a = 1;\\r\\np->b = 2;\\r\\np->c = 3;\\r\\nrcu_assign_pointer(gp, p);\\r\\n```\\r\\n\\r\\n\u8bfb\u7aef\u8bbf\u95ee\u8be5\u7247\u533a\u57df\uff1a\\r\\n\\r\\n```\\r\\nrcu_read_lock();\\r\\np = rcu_dereference(gp);\\r\\nif (p != NULL) {\\r\\n  do_something_with(p->a, p->b, p->c);\\r\\n}\\r\\nrcu_read_unlock();\\r\\n```\\r\\n\\r\\n\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5199\u7aefrcu_assign_pointer\uff08\uff09\u770b\u6210\u53d1\u5e03\uff08Publish\uff09\u4e86gp\uff0c\u800c\u8bfb\u7aefrcu_dereference\uff08\uff09\u770b\u6210\u8ba2\u9605\uff08Subscribe\uff09\u4e86gp\u3002\u5b83\u4fdd\u8bc1\u8bfb\u7aef\u53ef\u4ee5\u770b\u5230rcu_assign_pointer\uff08\uff09\u4e4b\u524d\u6240\u6709\u5185\u5b58\u88ab\u8bbe\u7f6e\u7684\u60c5\u51b5\uff08\u5373gp->a\uff0cgp->b\uff0cgp->c\u7b49\u4e8e1\u30012\u30013\u5bf9\u4e8e\u8bfb\u7aef\u53ef\u89c1\uff09\u3002\u7531\u6b64\u53ef\u89c1\uff0c\u4e0eRCU\u76f8\u5173\u7684\u539f\u8bed\u5df2\u7ecf\u5185\u5d4c\u4e86\u76f8\u5173\u7684\u7f16\u8bd1\u5c4f\u969c\u6216\u5185\u5b58\u5c4f\u969c\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u94fe\u8868\u6570\u636e\u7ed3\u6784\u800c\u8a00\uff0cLinux\u5185\u6838\u589e\u52a0\u4e86\u4e13\u95e8\u7684RCU\u4fdd\u62a4\u7684\u94fe\u8868\u64cd\u4f5cAPI\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void list_add_rcu(struct list_head *new, struct list_head *head);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u628a\u94fe\u8868\u5143\u7d20new\u63d2\u5165RCU\u4fdd\u62a4\u7684\u94fe\u8868head\u7684\u5f00\u5934\u3002\\r\\n\\r\\n```\\r\\nstatic inline void list_add_tail_rcu(struct list_head *new,\\r\\n    struct list_head *head);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7c7b\u4f3c\u4e8elist_add_rcu\uff08\uff09\uff0c\u5b83\u5c06\u628a\u65b0\u7684\u94fe\u8868\u5143\u7d20new\u6dfb\u52a0\u5230\u88abRCU\u4fdd\u62a4\u7684\u94fe\u8868\u7684\u672b\u5c3e\u3002\\r\\n\\r\\n```\\r\\nstatic inline void list_del_rcu(struct list_head *entry);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u4eceRCU\u4fdd\u62a4\u7684\u94fe\u8868\u4e2d\u5220\u9664\u6307\u5b9a\u7684\u94fe\u8868\u5143\u7d20entry\u3002\\r\\n\\r\\n```\\r\\nstatic inline void list_replace_rcu(struct list_head *old, struct list_head *new);\\r\\n```\\r\\n\\r\\n\u5b83\u4f7f\u7528\u65b0\u7684\u94fe\u8868\u5143\u7d20new\u53d6\u4ee3\u65e7\u7684\u94fe\u8868\u5143\u7d20old\u3002\\r\\n\\r\\n```\\r\\nlist_for_each_entry_rcu(pos, head)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u7528\u4e8e\u904d\u5386\u7531RCU\u4fdd\u62a4\u7684\u94fe\u8868head\uff0c\u53ea\u8981\u5728\u8bfb\u6267\u884c\u5355\u5143\u4e34\u754c\u533a\u4f7f\u7528\u8be5\u51fd\u6570\uff0c\u5b83\u5c31\u53ef\u4ee5\u5b89\u5168\u5730\u548c\u5176\u4ed6RCU\u4fdd\u62a4\u7684\u94fe\u8868\u64cd\u4f5c\u51fd\u6570\uff08\u5982list_add_rcu\uff08\uff09\uff09\u5e76\u53d1\u8fd0\u884c\u3002\\r\\n\\r\\n\u94fe\u8868\u7684\u5199\u7aef\u4ee3\u7801\u6a21\u578b\u5982\u4e0b\\r\\n\\r\\n```\\r\\nstruct foo {\\r\\n  struct list_head list;\\r\\n  int a;\\r\\n  int b;\\r\\n  int c;\\r\\n};\\r\\nLIST_HEAD(head);\\r\\n/* . . . */\\r\\np = kmalloc(sizeof(*p), GFP_KERNEL);\\r\\np->a = 1;\\r\\np->b = 2;\\r\\np->c = 3;\\r\\nlist_add_rcu(&p->list, &head);\\r\\n```\\r\\n\\r\\n\u94fe\u8868\u7684\u8bfb\u7aef\u4ee3\u7801\u5219\u5f62\u5982\uff1a\\r\\n\\r\\n```\\r\\nrcu_read_lock();\\r\\nlist_for_each_entry_rcu(p, head, list) {\\r\\n  do_something_with(p->a, p->b, p->c);\\r\\n}\\r\\nrcu_read_unlock();\\r\\n```\\r\\n\\r\\n\u524d\u9762\u5df2\u7ecf\u770b\u5230\u4e86\u5bf9RCU\u4fdd\u62a4\u94fe\u8868\u4e2d\u8282\u70b9\u8fdb\u884c\u4fee\u6539\u4ee5\u53ca\u6dfb\u52a0\u65b0\u8282\u70b9\u7684\u52a8\u4f5c\uff0c\u4e0b\u9762\u6211\u4eec\u770b\u4e00\u4e0bRCU\u4fdd\u62a4\u7684\u94fe\u8868\u5220\u9664\u8282\u70b9N\u7684\u5de5\u4f5c\u3002\u5199\u7aef\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff0c\u7b2c1\u6b65\u662f\u4ece\u94fe\u8868\u4e2d\u5220\u9664N\uff0c\u4e4b\u540e\u7b49\u4e00\u4e2a\u5bbd\u9650\u671f\u7ed3\u675f\uff0c\u518d\u91ca\u653eN\u7684\u5185\u5b58\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5206\u522b\u7528\u8bfb\u5199\u9501\u548cRCU\u4e24\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u6765\u63cf\u8ff0\u8fd9\u4e00\u8fc7\u7a0b\uff1a\\r\\n\\r\\n```\\r\\n 1 struct el {                           1struct el {\\r\\n 2 struct list_head lp;                2  struct list_head lp;\\r\\n 3 long key;                           3  long key;\\r\\n 4 spinlock_t mutex;                   4  spinlock_t mutex;\\r\\n 5 int data;                           5  int data;\\r\\n 6 /* Other data fields */             6  /* Other data fields */\\r\\n 7};                                   7};\\r\\n 8DEFINE_RWLOCK(listmutex);            8DEFINE_SPINLOCK(listmutex);\\r\\n 9LIST_HEAD(head);                     9LIST_HEAD(head);\\r\\n 1int search(long key, int *result)    1int search(long key, int *result)\\r\\n 2{                                    2{\\r\\n 3 struct el *p;                       3  struct el *p;\\r\\n 4                                     4\\r\\n 5 read_lock(&listmutex);              5  rcu_read_lock();\\r\\n 6 list_for_each_entry(p, &head, lp) { 6  list_for_each_entry_rcu(p, &head, lp) {\\r\\n 7   if (p->key == key) {              7   if (p->key == key) {\\r\\n 8     *result = p->data;              8     *result = p->data;\\r\\n 9     read_unlock(&listmutex);        9     rcu_read_unlock();\\r\\n10     return 1;                      10      return 1;\\r\\n11   }                                11    }\\r\\n12 }                                  12  }\\r\\n13 read_unlock(&listmutex);           13  rcu_read_unlock();\\r\\n14 return 0;                          14  return 0;\\r\\n15}                                   15 }\\r\\n 1int delete(long key)                 1int delete(long key)\\r\\n 2{                                    2{\\r\\n 3 struct el *p;                       3  struct el *p;\\r\\n 4                                     4\\r\\n 5 write_lock(&listmutex);             5  spin_lock(&listmutex);\\r\\n 6 list_for_each_entry(p, &head, lp) { 6  list_for_each_entry(p, &head, lp) {\\r\\n 7   if (p->key == key) {              7    if (p->key == key) {\\r\\n 8     list_del(&p->lp);               8      list_del_rcu(&p->lp);\\r\\n 9     write_unlock(&listmutex);       9      spin_unlock(&listmutex);\\r\\n                                        10      synchronize_rcu();\\r\\n10      kfree(p);                     11      kfree(p);\\r\\n11      return 1;                     12      return 1;\\r\\n12    }                               13    }\\r\\n13  }                                 14  }\\r\\n14  write_unlock(&listmutex);         15  spin_unlock(&listmutex);\\r\\n15  return 0;                         16  return 0;\\r\\n16}                                   17}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3","description":"Linux\u7684I2 C\u9a71\u52a8\u4f53\u7cfb\u7ed3\u6784\u76f8\u5f53\u590d\u6742\uff0c\u5b83\u4e3b\u8981\u75313\u90e8\u5206\u7ec4\u6210\uff0c\u5373I2 C\u6838\u5fc3\u3001I2 C\u603b\u7ebf\u9a71\u52a8\u548cI2 C\u8bbe\u5907\u9a71\u52a8\u3002I2 C\u6838\u5fc3\u662fI2 C\u603b\u7ebf\u9a71\u52a8\u548cI2 C\u8bbe\u5907\u9a71\u52a8\u7684\u4e2d\u95f4\u67a2\u7ebd\uff0c\u5b83\u4ee5\u901a\u7528\u7684\u3001\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\u63a5\u53e3\u5b9e\u73b0\u4e86I2 C\u4e2d\u8bbe\u5907\u4e0e\u9002\u914d\u5668\u7684\u6c9f\u901a\u3002I2 C\u603b\u7ebf\u9a71\u52a8\u586b\u5145i2cadapter\u548ci2calgorithm\u7ed3\u6784\u4f53\uff0cI2 C\u8bbe\u5907\u9a71\u52a8\u586b\u5145i2c_driver\u7ed3\u6784\u4f53\u5e76\u5b9e\u73b0\u5176\u672c\u8eab\u6240\u5bf9\u5e94\u8bbe\u5907\u7c7b\u578b\u7684\u9a71\u52a8\u3002","date":"2025-09-15T14:44:14.969Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.055,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"7.5.1\u3000\u81ea\u65cb\u9501\u7684\u4f7f\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.5\u3000\u81ea\u65cb\u9501"},"nextItem":{"title":"13.6.1\u3000\u4f7f\u7528\u8bf7\u6c42\u961f\u5217","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.6\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684IO\u8bf7\u6c42\u5904\u7406"}},"content":"Linux\u7684I2 C\u9a71\u52a8\u4f53\u7cfb\u7ed3\u6784\u76f8\u5f53\u590d\u6742\uff0c\u5b83\u4e3b\u8981\u75313\u90e8\u5206\u7ec4\u6210\uff0c\u5373I2 C\u6838\u5fc3\u3001I2 C\u603b\u7ebf\u9a71\u52a8\u548cI2 C\u8bbe\u5907\u9a71\u52a8\u3002I2 C\u6838\u5fc3\u662fI2 C\u603b\u7ebf\u9a71\u52a8\u548cI2 C\u8bbe\u5907\u9a71\u52a8\u7684\u4e2d\u95f4\u67a2\u7ebd\uff0c\u5b83\u4ee5\u901a\u7528\u7684\u3001\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\u63a5\u53e3\u5b9e\u73b0\u4e86I2 C\u4e2d\u8bbe\u5907\u4e0e\u9002\u914d\u5668\u7684\u6c9f\u901a\u3002I2 C\u603b\u7ebf\u9a71\u52a8\u586b\u5145i2c_adapter\u548ci2c_algorithm\u7ed3\u6784\u4f53\uff0cI2 C\u8bbe\u5907\u9a71\u52a8\u586b\u5145i2c_driver\u7ed3\u6784\u4f53\u5e76\u5b9e\u73b0\u5176\u672c\u8eab\u6240\u5bf9\u5e94\u8bbe\u5907\u7c7b\u578b\u7684\u9a71\u52a8\u3002\\r\\n\\r\\n\u53e6\u5916\uff0c\u7cfb\u7edf\u4e2di2c-dev.c\u6587\u4ef6\u5b9a\u4e49\u7684\u4e3b\u8bbe\u5907\u53f7\u4e3a89\u7684\u8bbe\u5907\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ed9\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u8bfb\u5199I2 C\u8bbe\u5907\u5bc4\u5b58\u5668\u7684\u80fd\u529b\uff0c\u4f7f\u5f97\u5de5\u7a0b\u5e08\u5728\u5927\u591a\u6570\u65f6\u5019\u5e76\u4e0d\u9700\u8981\u4e3a\u5177\u4f53\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9a\u4e49\u6587\u4ef6\u64cd\u4f5c\u63a5\u53e3\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.6\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684IO\u8bf7\u6c42\u5904\u7406","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.6\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684IO\u8bf7\u6c42\u5904\u7406","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.6\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684IO\u8bf7\u6c42\u5904\u7406.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.6\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684IO\u8bf7\u6c42\u5904\u7406.md","title":"13.6.1\u3000\u4f7f\u7528\u8bf7\u6c42\u961f\u5217","description":"\u5757\u8bbe\u5907\u9a71\u52a8\u5728\u4f7f\u7528\u8bf7\u6c42\u961f\u5217\u7684\u573a\u666f\u4e0b\uff0c\u4f1a\u7528blkinitqueue\uff08\uff09\u521d\u59cb\u5316requestqueue\uff0c\u800c\u8be5\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u7684\u6307\u9488\u3002requestqueue\u4f1a\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u6211\u4eec\u5728\u8c03\u7528blkinitqueue\uff08\uff09\u65f6\u6307\u5b9a\u7684\u8bf7\u6c42\u5904\u7406\u51fd\u6570\uff0c\u5757\u8bbe\u5907\u9a71\u52a8\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a","date":"2025-09-15T14:44:14.953Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":8.57,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.7\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace"}},"content":"\u5757\u8bbe\u5907\u9a71\u52a8\u5728\u4f7f\u7528\u8bf7\u6c42\u961f\u5217\u7684\u573a\u666f\u4e0b\uff0c\u4f1a\u7528blk_init_queue\uff08\uff09\u521d\u59cb\u5316request_queue\uff0c\u800c\u8be5\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u7684\u6307\u9488\u3002request_queue\u4f1a\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u6211\u4eec\u5728\u8c03\u7528blk_init_queue\uff08\uff09\u65f6\u6307\u5b9a\u7684\u8bf7\u6c42\u5904\u7406\u51fd\u6570\uff0c\u5757\u8bbe\u5907\u9a71\u52a8\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstatic void xxx_req(struct request_queue *q)\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u51fd\u6570\u4e0d\u80fd\u7531\u9a71\u52a8\u81ea\u5df1\u8c03\u7528\uff0c\u53ea\u6709\u5f53\u5185\u6838\u8ba4\u4e3a\u662f\u65f6\u5019\u8ba9\u9a71\u52a8\u5904\u7406\u5bf9\u8bbe\u5907\u7684\u8bfb\u5199\u7b49\u64cd\u4f5c\u65f6\uff0c\u5b83\u624d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u8be5\u51fd\u6570\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u53d1\u8d77\u4e0erequest\u5bf9\u5e94\u7684\u5757\u8bbe\u5907I/O\u52a8\u4f5c\uff08\u4f46\u662f\u5177\u4f53\u7684I/O\u5de5\u4f5c\u4e0d\u4e00\u5b9a\u8981\u5728\u8be5\u51fd\u6570\u5185\u540c\u6b65\u5b8c\u6210\uff09\u3002\u4ee3\u7801\u6e05\u535513.9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u7684\u4f8b\u5b50\uff0c\u5b83\u6765\u6e90\u4e8edrivers/memstick/core/ms_block.c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.9\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u8bf7\u6c42\u51fd\u6570\u4f8b\u7a0b\\r\\n\\r\\n```\\r\\n 1static void msb_submit_req(struct request_queue *q)\\r\\n 2{\\r\\n 3       struct memstick_dev *card = q->queuedata;\\r\\n 4       struct msb_data *msb = memstick_get_drvdata(card);\\r\\n 5       struct request *req = NULL;\\r\\n 6\\r\\n 7       dbg_verbose(\\"Submit request\\");\\r\\n 8\\r\\n 9       if (msb->card_dead) {\\r\\n10              dbg(\\"Refusing requests on removed card\\");\\r\\n11\\r\\n12              WARN_ON(!msb->io_queue_stopped);\\r\\n13\\r\\n14              while ((req = blk_fetch_request(q)) != NULL)\\r\\n15                      __blk_end_request_all(req, -ENODEV);\\r\\n16              return;\\r\\n17       }\\r\\n18\\r\\n19       if (msb->req)\\r\\n20               return;\\r\\n21\\r\\n22       if (!msb->io_queue_stopped)\\r\\n23              queue_work(msb->io_queue, &msb->io_work);\\r\\n24}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c14\u884c\u4f7f\u7528blk_fetch_request\uff08\uff09\u83b7\u5f97\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u672a\u5b8c\u6210\u7684\u8bf7\u6c42\uff0c\u7531\u4e8emsb->card_dead\u6210\u7acb\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u5904\u7406\u4e0d\u4e86\u8be5\u8bf7\u6c42\uff0c\u6240\u4ee5\u5c31\u76f4\u63a5\u901a\u8fc7__blk_end_request_all\uff08req\uff0c-ENODEV\uff09\u8fd4\u56de\u9519\u8bef\u4e86\\r\\n\\r\\n\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7queue_work\uff08msb->io_queue\uff0c&msb->io_work\uff09\u542f\u52a8\u5de5\u4f5c\u961f\u5217\u6267\u884cmsb_io_work\uff08struct work_struct*work\uff09\u8fd9\u4e2a\u51fd\u6570\uff0c\u5b83\u7684\u539f\u578b\u5982\u4ee3\u7801\u6e05\u535513.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.10\u3000msb_io_work\uff08\uff09\u5b8c\u6210\u8bf7\u6c42\u5904\u7406\\r\\n\\r\\n```\\r\\n 1static void msb_io_work(struct work_struct *work)\\r\\n 2{\\r\\n 3       struct msb_data *msb = container_of(work, struct msb_data, io_work);\\r\\n 4       int page, error, len;\\r\\n 5       sector_t lba;\\r\\n 6       unsigned long flags;\\r\\n 7       struct scatterlist *sg = msb->prealloc_sg;\\r\\n 8\\r\\n 9       dbg_verbose(\\"IO: work started\\");\\r\\n10\\r\\n11       while (1) {\\r\\n12               spin_lock_irqsave(&msb->q_lock, flags);\\r\\n13\\r\\n14               if (msb->need_flush_cache) {\\r\\n15                     msb->need_flush_cache = false;\\r\\n16                     spin_unlock_irqrestore(&msb->q_lock, flags);\\r\\n17                     msb_cache_flush(msb);\\r\\n18                     continue;\\r\\n19               }\\r\\n20\\r\\n21               if (!msb->req) {\\r\\n22                     msb->req = blk_fetch_request(msb->queue);\\r\\n23                     if (!msb->req) {\\r\\n24                             dbg_verbose(\\"IO: no more requests exiting\\");\\r\\n25                             spin_unlock_irqrestore(&msb->q_lock, flags);\\r\\n26                             return;\\r\\n27                     }\\r\\n28               }\\r\\n29\\r\\n30               spin_unlock_irqrestore(&msb->q_lock, flags);\\r\\n31\\r\\n32               /* If card was removed meanwhile */\\r\\n33               if (!msb->req)\\r\\n34                     return;\\r\\n35\\r\\n36               /* process the request */\\r\\n37               dbg_verbose(\\"IO: processing new request\\");\\r\\n38               blk_rq_map_sg(msb->queue, msb->req, sg);\\r\\n39\\r\\n40               lba = blk_rq_pos(msb->req);\\r\\n41\\r\\n42               sector_div(lba, msb->page_size / 512);\\r\\n43               page = do_div(lba, msb->pages_in_block);\\r\\n44\\r\\n45               if (rq_data_dir(msb->req) == READ)\\r\\n46                       error = msb_do_read_request(msb, lba, page, sg,\\r\\n47                               blk_rq_bytes(msb->req), &len);\\r\\n48               else\\r\\n49                       error = msb_do_write_request(msb, lba, page, sg,\\r\\n50                               blk_rq_bytes(msb->req), &len);\\r\\n51\\r\\n52               spin_lock_irqsave(&msb->q_lock, flags);\\r\\n53\\r\\n54               if (len)\\r\\n55                       if (!__blk_end_request(msb->req, 0, len))\\r\\n56                               msb->req = NULL;\\r\\n57\\r\\n58               if (error && msb->req) {\\r\\n59                     dbg_verbose(\\"IO: ending one sector of the request with error\\");\\r\\n60                     if (!__blk_end_request(msb->req, error, msb->page_size))\\r\\n61                             msb->req = NULL;\\r\\n62               }\\r\\n63\\r\\n64               if (msb->req)\\r\\n65                     dbg_verbose(\\"IO: request still pending\\");\\r\\n66\\r\\n67               spin_unlock_irqrestore(&msb->q_lock, flags);\\r\\n68       }\\r\\n69}\\r\\n```\\r\\n\\r\\n\u5728\u8bfb\u5199\u65e0\u9519\u7684\u60c5\u51b5\u4e0b\uff0c\u7b2c55\u884c\u8c03\u7528\u7684__blk_end_request\uff08msb->req\uff0c0\uff0clen\uff09\u5b9e\u9645\u4e0a\u544a\u8bc9\u4e86\u4e0a\u5c42\u8be5\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u3002\u5982\u679c\u8bfb\u5199\u6709\u9519\uff0c\u5219\u8c03\u7528__blk_end_request\uff08msb->req\uff0cerror\uff0cmsb->page_size\uff09\uff0c\u628a\u51fa\u9519\u539f\u56e0\u4f5c\u4e3a\u7b2c2\u4e2a\u53c2\u6570\u4f20\u5165\u4e0a\u5c42\u3002\\r\\n\\r\\n\u7b2c38\u884c\u8c03\u7528\u7684blk_rq_map_sg\uff08\uff09\u51fd\u6570\u5b9e\u73b0\u4e8eblock/blk-merge.c\u6587\u4ef6\u3002\u4ee3\u7801\u6e05\u535513.11\u5217\u51fa\u4e86\u8be5\u51fd\u6570\u7684\u5b9e\u73b0\u4e2d\u6bd4\u8f83\u7cbe\u534e\u7684\u90e8\u5206\uff0c\u5b83\u901a\u8fc7rq_for_each_bio\uff08\uff09\u3001bio_for_each_segment\uff08\uff09\u6765\u904d\u5386\u6240\u6709\u7684bio\uff0c\u4ee5\u53ca\u6240\u6709\u7684\u7247\u6bb5\uff0c\u5c06\u6240\u6709\u4e0e\u67d0\u8bf7\u6c42\u76f8\u5173\u7684\u9875\u7ec4\u6210\u4e00\u4e2ascatter/gather\u7684\u5217\u8868\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.11\u3000blk_rq_map_sg\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1int blk_rq_map_sg(struct request_queue *q, struct request *rq,\\r\\n 2                  struct scatterlist *sglist)\\r\\n 3{\\r\\n 4      struct scatterlist *sg = NULL;\\r\\n 5      int nsegs = 0;\\r\\n 6\\r\\n 7      if (rq->bio)\\r\\n 8              nsegs = __blk_bios_map_sg(q, rq->bio, sglist, &sg);\\r\\n 9      ...\\r\\n10}\\r\\n11\\r\\n12static int __blk_bios_map_sg(struct request_queue *q, struct bio *bio,\\r\\n13                             struct scatterlist *sglist,\\r\\n14                             struct scatterlist **sg)\\r\\n15{\\r\\n16        struct bio_vec bvec, bvprv = { NULL };\\r\\n17        struct bvec_iter iter;\\r\\n18        int nsegs, cluster;\\r\\n19\\r\\n20      nsegs = 0;\\r\\n21      cluster = blk_queue_cluster(q);\\r\\n22      ...\\r\\n23      for_each_bio(bio)\\r\\n24              bio_for_each_segment(bvec, bio, iter)\\r\\n25                      __blk_segment_map_sg(q, &bvec, sglist, &bvprv, sg,\\r\\n26                                           &nsegs, &cluster);\\r\\n27\\r\\n28      return nsegs;\\r\\n29}\\r\\n30\\r\\n31static inline void\\r\\n32__blk_segment_map_sg(struct request_queue *q, struct bio_vec *bvec,\\r\\n33                     struct scatterlist *sglist, struct bio_vec *bvprv,\\r\\n34                     struct scatterlist **sg, int *nsegs, int *cluster)\\r\\n35{\\r\\n36\\r\\n37      int nbytes = bvec->bv_len;\\r\\n38\\r\\n39      if (*sg && *cluster) {\\r\\n40              if ((*sg)->length + nbytes > queue_max_segment_size(q))\\r\\n41                      goto new_segment;\\r\\n42\\r\\n43              if (!BIOVEC_PHYS_MERGEABLE(bvprv, bvec))\\r\\n44                      goto new_segment;\\r\\n45              if (!BIOVEC_SEG_BOUNDARY(q, bvprv, bvec))\\r\\n46                      goto new_segment;\\r\\n47\\r\\n48              (*sg)->length += nbytes;\\r\\n49      } else {\\r\\n50new_segment:\\r\\n51                if (!*sg)\\r\\n52                      *sg = sglist;\\r\\n53                else {\\r\\n54                      /*\\r\\n55                       * If the driver previously mapped a shorter\\r\\n56                       * list, we could see a termination bit\\r\\n57                       * prematurely unless it fully inits the sg\\r\\n58                       * table on each mapping. We KNOW that there\\r\\n59                       * must be more entries here or the driver\\r\\n60                       * would be buggy, so force clear the\\r\\n61                       * termination bit to avoid doing a full\\r\\n62                       * sg_init_table() in drivers for each command.\\r\\n63                       */\\r\\n64                      sg_unmark_end(*sg);\\r\\n65                      *sg = sg_next(*sg);\\r\\n66                }\\r\\n67\\r\\n68                sg_set_page(*sg, bvec->bv_page, nbytes, bvec->bv_offset);\\r\\n69                (*nsegs)++;\\r\\n70        }\\r\\n71        *bvprv = *bvec;\\r\\n```\\r\\n\\r\\n\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u82e5\u5916\u8bbe\u652f\u6301scatter/gather\u6a21\u5f0f\u7684DMA\u64cd\u4f5c\uff0c\u7d27\u63a5\u7740\uff0c\u5b83\u5c31\u4f1a\u6267\u884cpci_map_sg\uff08\uff09\u6216\u8005dma_map_sg\uff08\uff09\u6765\u8fdb\u884c\u4e0a\u8ff0scatter/gather\u5217\u8868\u7684DMA\u6620\u5c04\u4e86\uff0c\u4e4b\u540e\u8fdb\u884c\u786c\u4ef6\u7684\u8bbf\u95ee\u3002\\r\\n\\r\\n# 13.6.2\u3000\u4e0d\u4f7f\u7528\u8bf7\u6c42\u961f\u5217\\r\\n\\r\\n\u4f7f\u7528\u8bf7\u6c42\u961f\u5217\u5bf9\u4e8e\u4e00\u4e2a\u673a\u68b0\u78c1\u76d8\u8bbe\u5907\u800c\u8a00\u7684\u786e\u6709\u52a9\u4e8e\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u4f46\u662f\u5bf9\u4e8eRAMDISK\u3001ZRAM\uff08Compressed RAM Block Device\uff09\u7b49\u5b8c\u5168\u53ef\u771f\u6b63\u968f\u673a\u8bbf\u95ee\u7684\u8bbe\u5907\u800c\u8a00\uff0c\u65e0\u6cd5\u4ece\u9ad8\u7ea7\u7684\u8bf7\u6c42\u961f\u5217\u903b\u8f91\u4e2d\u83b7\u76ca\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u8bbe\u5907\uff0c\u5757\u5c42\u652f\u6301\u201c\u65e0\u961f\u5217\u201d\u7684\u64cd\u4f5c\u6a21\u5f0f\uff0c\u4e3a\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5f0f\uff0c\u9a71\u52a8\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u201c\u5236\u9020\u8bf7\u6c42\u201d\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u8bf7\u6c42\u5904\u7406\u51fd\u6570\uff0c\u201c\u5236\u9020\u8bf7\u6c42\u201d\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstatic void xxx_make_request(struct request_queue *queue, struct bio *bio);\\r\\n```\\r\\n\\r\\n\u5757\u8bbe\u5907\u9a71\u52a8\u521d\u59cb\u5316\u7684\u65f6\u5019\u4e0d\u518d\u8c03\u7528blk_init_queue\uff08\uff09\uff0c\u800c\u662f\u8c03\u7528blk_alloc_queue\uff08\uff09\u548cblk_queue_make_request\uff08\uff09\uff0cxxx_make_request\u5219\u4f1a\u6210\u4e3ablk_queue_make_request\uff08\uff09\u7684\u7b2c2\u4e2a\u53c2\u6570\u3002\\r\\n\\r\\nxxx_make_request\uff08\uff09\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ecd\u7136\u662f\u201c\u8bf7\u6c42\u961f\u5217\u201d\uff0c\u4f46\u662f\u8fd9\u4e2a\u201c\u8bf7\u6c42\u961f\u5217\u201d\u5b9e\u9645\u4e0d\u5305\u542b\u4efb\u4f55\u8bf7\u6c42\uff0c\u56e0\u4e3a\u5757\u5c42\u6ca1\u6709\u5fc5\u8981\u5c06bio\u8c03\u6574\u4e3a\u8bf7\u6c42\u3002\u56e0\u6b64\uff0c\u201c\u5236\u9020\u8bf7\u6c42\u201d\u51fd\u6570\u7684\u4e3b\u8981\u53c2\u6570\u662fbio\u7ed3\u6784\u4f53\u3002\u4ee3\u7801\u6e05\u535513.12\u6240\u793a\u4e3a\u4e00\u4e2a\u201c\u5236\u9020\u8bf7\u6c42\u201d\u51fd\u6570\u7684\u4f8b\u5b50\uff0c\u5b83\u53d6\u6750\u4e8edrivers/block/zram/zram_drv.c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.12\u3000\u201c\u5236\u9020\u8bf7\u6c42\u201d\u51fd\u6570\u4f8b\u7a0b\\r\\n\\r\\n```\\r\\n 1static void zram_make_request(struct request_queue *queue, struct bio *bio)\\r\\n 2{\\r\\n 3        ...\\r\\n 4        __zram_make_request(zram, bio);\\r\\n 5        ...\\r\\n 6}\\r\\n 7\\r\\n 8static void __zram_make_request(struct zram *zram, struct bio *bio)\\r\\n 9{\\r\\n10        int offset;\\r\\n11        u32index;\\r\\n12        struct bio_vec bvec;\\r\\n13        struct bvec_iter iter;\\r\\n14\\r\\n15        index = bio->bi_iter.bi_sector >> SECTORS_PER_PAGE_SHIFT;\\r\\n16        offset = (bio->bi_iter.bi_sector &\\r\\n17                  (SECTORS_PER_PAGE - 1)) << SECTOR_SHIFT;\\r\\n18\\r\\n19        if (unlikely(bio->bi_rw & REQ_DISCARD)) {\\r\\n20                zram_bio_discard(zram, index, offset, bio);\\r\\n21                bio_endio(bio, 0);\\r\\n22                return;\\r\\n23        }\\r\\n24\\r\\n25        bio_for_each_segment(bvec, bio, iter) {\\r\\n26                int max_transfer_size = PAGE_SIZE - offset;\\r\\n27\\r\\n28                if (bvec.bv_len > max_transfer_size) {\\r\\n29                        /*\\r\\n30                         * zram_bvec_rw() can only make operation on a single\\r\\n31                         * zram page. Split the bio vector.\\r\\n32                         */\\r\\n33                        struct bio_vec bv;\\r\\n34\\r\\n35                        bv.bv_page = bvec.bv_page;\\r\\n36                        bv.bv_len = max_transfer_size;\\r\\n37                        bv.bv_offset = bvec.bv_offset;\\r\\n38\\r\\n39                        if (zram_bvec_rw(zram, &bv, index, offset, bio) < 0)\\r\\n40                                goto out;\\r\\n41\\r\\n42                        bv.bv_len = bvec.bv_len - max_transfer_size;\\r\\n43                        bv.bv_offset += max_transfer_size;\\r\\n44                        if (zram_bvec_rw(zram, &bv, index + 1, 0, bio) < 0)\\r\\n45                                goto out;\\r\\n46                } else\\r\\n47                        if (zram_bvec_rw(zram, &bvec, index, offset, bio) < 0)\\r\\n48                                goto out;\\r\\n49\\r\\n50                update_position(&index, &offset, &bvec);\\r\\n51        }\\r\\n52\\r\\n53        set_bit(BIO_UPTODATE, &bio->bi_flags);\\r\\n54        bio_endio(bio, 0);\\r\\n55        return;\\r\\n56\\r\\n57out:\\r\\n58        bio_io_error(bio);\\r\\n59}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u901a\u8fc7bio_for_each_segment\uff08\uff09\u8fed\u4ee3bio\u4e2d\u7684\u6bcf\u4e2asegement\uff0c\u6700\u7ec8\u8c03\u7528zram_bvec_rw\uff08\uff09\u5b8c\u6210\u5185\u5b58\u7684\u538b\u7f29\u3001\u89e3\u538b\u3001\u8bfb\u53d6\u548c\u5199\u5165\u3002\\r\\n\\r\\nZRAM\u662fLinux\u7684\u4e00\u79cd\u5185\u5b58\u4f18\u5316\u6280\u672f\uff0c\u5b83\u5212\u5b9a\u4e00\u7247\u5185\u5b58\u533a\u57df\u4f5c\u4e3aSWAP\u7684\u4ea4\u6362\u5206\u533a\uff0c\u4f46\u662f\u5b83\u672c\u8eab\u5177\u5907\u81ea\u52a8\u538b\u7f29\u529f\u80fd\uff0c\u4ece\u800c\u53ef\u4ee5\u8fbe\u5230\u8f85\u52a9Linux\u533f\u540d\u9875\u7684\u4ea4\u6362\u6548\u679c\uff0c\u53d8\u76f8\u201c\u589e\u5927\u201d\u4e86\u5185\u5b58\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace","description":"\u5728Linux\u7cfb\u7edf\u4e2d\uff0cstrace\u662f\u4e00\u79cd\u76f8\u5f53\u6709\u6548\u7684\u8ddf\u8e2a\u5de5\u5177\uff0c\u5b83\u7684\u4e3b\u8981\u7279\u70b9\u662f\u53ef\u4ee5\u88ab\u7528\u6765\u76d1\u89c6\u7cfb\u7edf\u8c03\u7528\u3002\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u7528strace\u8c03\u8bd5\u4e00\u4e2a\u65b0\u5f00\u59cb\u7684\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u8c03\u8bd5\u4e00\u4e2a\u5df2\u7ecf\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u8fd9\u610f\u5473\u7740\u628astrace\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5df2\u6709\u7684PID\u4e0a\uff09\u3002\u5bf9\u4e8e\u7b2c6\u7ae0\u7684globalmem\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\uff0c\u4ee5strace\u65b9\u5f0f\u8fd0\u884c\u5982\u4ee3\u7801\u6e05\u535521.8\u6240\u793a\u7684\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8fglobalmem_test\uff0c\u8fd0\u884c\u7684\u7ed3\u679c\u5982\u4e0b\uff1a","date":"2025-09-15T14:44:14.953Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.625,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"13.6.1\u3000\u4f7f\u7528\u8bf7\u6c42\u961f\u5217","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.6\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684IO\u8bf7\u6c42\u5904\u7406"},"nextItem":{"title":"8.3.1\u3000\u5728globalfifo\u9a71\u52a8\u4e2d\u589e\u52a0\u8f6e\u8be2\u64cd\u4f5c","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.3\u3000\u652f\u6301\u8f6e\u8be2\u64cd\u4f5c\u7684globalfifo\u9a71\u52a8"}},"content":"\u5728Linux\u7cfb\u7edf\u4e2d\uff0cstrace\u662f\u4e00\u79cd\u76f8\u5f53\u6709\u6548\u7684\u8ddf\u8e2a\u5de5\u5177\uff0c\u5b83\u7684\u4e3b\u8981\u7279\u70b9\u662f\u53ef\u4ee5\u88ab\u7528\u6765\u76d1\u89c6\u7cfb\u7edf\u8c03\u7528\u3002\u6211\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u7528strace\u8c03\u8bd5\u4e00\u4e2a\u65b0\u5f00\u59cb\u7684\u7a0b\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u8c03\u8bd5\u4e00\u4e2a\u5df2\u7ecf\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u8fd9\u610f\u5473\u7740\u628astrace\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5df2\u6709\u7684PID\u4e0a\uff09\u3002\u5bf9\u4e8e\u7b2c6\u7ae0\u7684globalmem\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\uff0c\u4ee5strace\u65b9\u5f0f\u8fd0\u884c\u5982\u4ee3\u7801\u6e05\u535521.8\u6240\u793a\u7684\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8fglobalmem_test\uff0c\u8fd0\u884c\u7684\u7ed3\u679c\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nexecve(\\"./globalmem_test\\", [\\"./globalmem_test\\"], [/* 24 vars */]) = 0\\r\\n...\\r\\nopen(\\"/dev/globalmem\\", O_RDWR)        = 3   /* \u6253\u5f00\u7684/dev/globalmem\u7684fd\u662f3 */\\r\\nioctl(3, FIBMAP, 0)                  = 0\\r\\nread(3, 0xbff17920, 200)           = -1 ENXIO (No such device or address)/* \u8bfb\u53d6\u5931\u8d25*/\\r\\nfstat64(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0\\r\\nmmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f04000\\r\\nwrite(1, \\"-1 bytes read from globalmem\\\\n\\", 29-1 bytes read from globalmem\\r\\n) = 29                           /* \u5411\u6807\u51c6\u8f93\u51fa\u8bbe\u5907(fd\u4e3a1)\u5199\u5165printf\u4e2d\u7684\u5b57\u7b26\u4e32*/\\r\\nwrite(3, \\"This is a test of globalmem\\", 27) = 27\\r\\nwrite(1, \\"27 bytes written into globalmem\\\\n\\", 3227 bytes written into globalmem\\r\\n) = 32\\r\\n...\\r\\n```\\r\\n\\r\\n\u8f93\u51fa\u7684\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e00\u6b21Linux\u7cfb\u7edf\u8c03\u7528\uff0c\u5176\u683c\u5f0f\u4e3a\u201c\u5de6\u8fb9=\u53f3\u8fb9\u201d\uff0c\u7b49\u53f7\u5de6\u8fb9\u662f\u7cfb\u7edf\u8c03\u7528\u7684\u51fd\u6570\u540d\u53ca\u5176\u53c2\u6570\uff0c\u53f3\u8fb9\u662f\u8be5\u8c03\u7528\u7684\u8fd4\u56de\u503c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.8\u3000\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8fglobalmem_test\\r\\n\\r\\n```\\r\\n 1#include ...\\r\\n 2\\r\\n 3#define MEM_CLEAR 0x1\\r\\n 4main()\\r\\n 5{\\r\\n 6 int fd, num, pos;\\r\\n 7 char wr_ch[200] = \\"This is a test of globalmem\\";\\r\\n 8 char rd_ch[200];\\r\\n 9 /* \u6253\u5f00/dev/globalmem */\\r\\n10 fd = open(\\"/dev/globalmem\\", O_RDWR, S_IRUSR | S_IWUSR);\\r\\n11 if (fd != -1 ) { /* \u6e05\u9664globalmem */\\r\\n12     if(ioctl(fd, MEM_CLEAR, 0) < 0)\\r\\n13          printf(\\"ioctl command failed\\\\n\\");\\r\\n14     /* \u8bfbglobalmem */\\r\\n15     num = read(fd, rd_ch, 200);\\r\\n16     printf(\\"%d bytes read from globalmem\\\\n\\",num);\\r\\n17\\r\\n18   /* \u5199globalmem */\\r\\n19   num = write(fd, wr_ch, strlen(wr_ch));\\r\\n20   printf(\\"%d bytes written into globalmem\\\\n\\",num);\\r\\n21   ...\\r\\n22   close(fd);\\r\\n23 }\\r\\n24}\\r\\n```\\r\\n\\r\\n\u4f7f\u7528strace\u867d\u7136\u65e0\u6cd5\u76f4\u63a5\u8ffd\u8e2a\u5230\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684\u51fd\u6570\uff0c\u4f46\u662f\u8db3\u4ee5\u5e2e\u52a9\u5de5\u7a0b\u5e08\u8fdb\u884c\u63a8\u6f14\uff0c\u5982\u4eceopen\uff08\u201c/dev/globalmem\u201d\uff0cO_RDWR\uff09=3\u7684\u8fd4\u56de\u7ed3\u679c\u77e5\u9053/dev/globalmem\u7684fd\u4e3a3\uff0c\u4e4b\u540e\u5bf9fd\u4e3a3\u7684\u6587\u4ef6\u8fdb\u884cread\uff08\uff09\u3001write\uff08\uff09\u548cioctl\uff08\uff09\u7cfb\u7edf\u8c03\u7528\uff0c\u6700\u7ec8\u4f1a\u4f7fglobalmem\u91ccfile_operations\u4e2d\u7684\u76f8\u5e94\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u7684\u7ed3\u679c\u5c31\u53ef\u4ee5\u77e5\u9053\u9a71\u52a8\u4e2dglobalmem_read\uff08\uff09\u3001globalmem_write\uff08\uff09\u548cglobalmem_ioctl\uff08\uff09\u7684\u8fd0\u884c\u7ed3\u679c\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.3\u3000\u652f\u6301\u8f6e\u8be2\u64cd\u4f5c\u7684globalfifo\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.3\u3000\u652f\u6301\u8f6e\u8be2\u64cd\u4f5c\u7684globalfifo\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.3\u3000\u652f\u6301\u8f6e\u8be2\u64cd\u4f5c\u7684globalfifo\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.3\u3000\u652f\u6301\u8f6e\u8be2\u64cd\u4f5c\u7684globalfifo\u9a71\u52a8.md","title":"8.3.1\u3000\u5728globalfifo\u9a71\u52a8\u4e2d\u589e\u52a0\u8f6e\u8be2\u64cd\u4f5c","description":"\u5728globalfifo\u7684poll\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u5c06\u8bbe\u5907\u7ed3\u6784\u4f53\u4e2d\u7684rwait\u548cwwait\u7b49\u5f85\u961f\u5217\u5934\u90e8\u6dfb\u52a0\u5230\u7b49\u5f85\u5217\u8868\u4e2d\uff08\u610f\u5473\u7740\u56e0\u8c03\u7528select\u800c\u963b\u585e\u7684\u8fdb\u7a0b\u53ef\u4ee5\u88abrwait\u548cwwait\u5524\u9192\uff09\uff0c\u7136\u540e\u901a\u8fc7\u5224\u65addev->currentlen\u662f\u5426\u7b49\u4e8e0\u6765\u83b7\u5f97\u8bbe\u5907\u7684\u53ef\u8bfb\u72b6\u6001\uff0c\u901a\u8fc7\u5224\u65addev->currentlen\u662f\u5426\u7b49\u4e8eGLOBALFIFO_SIZE\u6765\u83b7\u5f97\u8bbe\u5907\u7684\u53ef\u5199\u72b6\u6001\uff0c\u5982\u4ee3\u7801\u6e05\u53558.9\u6240\u793a\u3002","date":"2025-09-15T14:44:14.953Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.175,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.8\u3000strace"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d"}},"content":"\u5728globalfifo\u7684poll\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u9996\u5148\u5c06\u8bbe\u5907\u7ed3\u6784\u4f53\u4e2d\u7684r_wait\u548cw_wait\u7b49\u5f85\u961f\u5217\u5934\u90e8\u6dfb\u52a0\u5230\u7b49\u5f85\u5217\u8868\u4e2d\uff08\u610f\u5473\u7740\u56e0\u8c03\u7528select\u800c\u963b\u585e\u7684\u8fdb\u7a0b\u53ef\u4ee5\u88abr_wait\u548cw_wait\u5524\u9192\uff09\uff0c\u7136\u540e\u901a\u8fc7\u5224\u65addev->current_len\u662f\u5426\u7b49\u4e8e0\u6765\u83b7\u5f97\u8bbe\u5907\u7684\u53ef\u8bfb\u72b6\u6001\uff0c\u901a\u8fc7\u5224\u65addev->current_len\u662f\u5426\u7b49\u4e8eGLOBALFIFO_SIZE\u6765\u83b7\u5f97\u8bbe\u5907\u7684\u53ef\u5199\u72b6\u6001\uff0c\u5982\u4ee3\u7801\u6e05\u53558.9\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.9\u3000globalfifo\u8bbe\u5907\u9a71\u52a8\u7684poll\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static unsigned int globalfifo_poll(struct file *filp, poll_table * wait)\\r\\n 2{\\r\\n 3  unsigned int mask = 0;\\r\\n 4  struct globalfifo_dev *dev = filp->private_data;\\r\\n 5\\r\\n 6  mutex_lock(&dev->mutex);;\\r\\n 7\\r\\n 8  poll_wait(filp, &dev->r_wait, wait);\\r\\n 9  poll_wait(filp, &dev->w_wait, wait);\\r\\n10\\r\\n11  if (dev->current_len != 0) {\\r\\n12       mask |= POLLIN | POLLRDNORM;\\r\\n13  }\\r\\n14\\r\\n15  if (dev->current_len != GLOBALFIFO_SIZE) {\\r\\n16       mask |= POLLOUT | POLLWRNORM;\\r\\n17  }\\r\\n18\\r\\n19  mutex_unlock(&dev->mutex);;\\r\\n20  return mask;\\r\\n21}\\r\\n```\\r\\n\\r\\n\u6ce8\u610f\uff0c\u8981\u628aglobalfifo_poll\u8d4b\u7ed9globalfifo_fops\u7684poll\u6210\u5458\uff1a\\r\\n\\r\\n```\\r\\nstatic const struct file_operations globalfifo_fops = {\\r\\n   ...\\r\\n   .poll = globalfifo_poll,\\r\\n   ...\\r\\n};\\r\\n```\\r\\n\\r\\n# 8.3.2\u3000\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u9a8c\u8bc1globalfifo\u8bbe\u5907\u7684\u8f6e\u8be2\\r\\n\\r\\n\u7f16\u5199\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8fglobalfifo_poll.c\uff0c\u4ee5\u7528select\uff08\uff09\u76d1\u63a7globalfifo\u7684\u53ef\u8bfb\u5199\u72b6\u6001\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u5982\u4ee3\u7801\u6e05\u53558.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.10\u3000\u4f7f\u7528select\u76d1\u63a7globalfifo\u662f\u5426\u53ef\u975e\u963b\u585e\u8bfb\u3001\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\\r\\n\\r\\n```\\r\\n 1#define FIFO_CLEAR 0x1\\r\\n 2#define BUFFER_LEN 20\\r\\n 3void main(void)\\r\\n 4{\\r\\n 5  int fd, num;\\r\\n 6  char rd_ch[BUFFER_LEN];\\r\\n 7  fd_set rfds, wfds; /* \u8bfb/\u5199\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6 */\\r\\n 8\\r\\n 9  /* \u4ee5\u975e\u963b\u585e\u65b9\u5f0f\u6253\u5f00/dev/globalfifo\u8bbe\u5907\u6587\u4ef6 */\\r\\n10  fd = open(\\"/dev/globalfifo\\", O_RDONLY | O_NONBLOCK);\\r\\n11  if (fd != -1) {\\r\\n12       /* FIFO\u6e050 */\\r\\n13       if (ioctl(fd, FIFO_CLEAR, 0) < 0)\\r\\n14            printf(\\"ioctl command failed\\\\n\\");\\r\\n15\\r\\n16       while (1) {\\r\\n17            FD_ZERO(&rfds);\\r\\n18            FD_ZERO(&wfds);\\r\\n19            FD_SET(fd, &rfds);\\r\\n20            FD_SET(fd, &wfds);\\r\\n21\\r\\n22            select(fd + 1, &rfds, &wfds, NULL, NULL);\\r\\n23            /* \u6570\u636e\u53ef\u83b7\u5f97*/\\r\\n24            if (FD_ISSET(fd, &rfds))\\r\\n25                 printf(\\"Poll monitor:can be read\\\\n\\");\\r\\n26            /* \u6570\u636e\u53ef\u5199\u5165*/\\r\\n27            if (FD_ISSET(fd, &wfds))\\r\\n28                 printf(\\"Poll monitor:can be written\\\\n\\");\\r\\n29       }\\r\\n30  } else {\\r\\n31       printf(\\"Device open failure\\\\n\\");\\r\\n32  }\\r\\n33}\\r\\n```\\r\\n\\r\\n\u5728\u8fd0\u884c\u65f6\u53ef\u770b\u5230\uff0c\u5f53\u6ca1\u6709\u4efb\u4f55\u8f93\u5165\uff0c\u5373FIFO\u4e3a\u7a7a\u65f6\uff0c\u7a0b\u5e8f\u4e0d\u65ad\u5730\u8f93\u51faPoll monitor\uff1acan be written\uff0c\u5f53\u901a\u8fc7echo\u5411/dev/globalfifo\u5199\u5165\u4e00\u4e9b\u6570\u636e\u540e\uff0c\u5c06\u8f93\u51faPoll monitor\uff1acan be read\u548cPoll monitor\uff1acan be written\uff0c\u5982\u679c\u4e0d\u65ad\u5730\u901a\u8fc7echo\u5411/dev/globalfifo\u5199\u5165\u6570\u636e\u76f4\u81f3\u5199\u6ee1FIFO\uff0c\u5219\u53d1\u73b0pollmonitor\u7a0b\u5e8f\u5c06\u53ea\u8f93\u51faPoll monitor\uff1acan be read\u3002\u5bf9\u4e8eglobalfifo\u800c\u8a00\uff0c\u4e0d\u4f1a\u51fa\u73b0\u65e2\u4e0d\u80fd\u8bfb\uff0c\u53c8\u4e0d\u80fd\u5199\u7684\u60c5\u51b5\u3002\\r\\n\\r\\n\u7f16\u5199\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8fglobalfifo_epoll.c\uff0c\u4ee5\u7528epoll\u76d1\u63a7globalfifo\u7684\u53ef\u8bfb\u72b6\u6001\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u5982\u4ee3\u7801\u6e05\u53558.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.11\u3000\u4f7f\u7528epoll\u76d1\u63a7globalfifo\u662f\u5426\u53ef\u975e\u963b\u585e\u8bfb\u7684\u5e94\u7528\u7a0b\u5e8f\\r\\n\\r\\n```\\r\\n 1#define FIFO_CLEAR 0x1\\r\\n 2#define BUFFER_LEN 20\\r\\n 3void main(void)\\r\\n 4{\\r\\n 5  int fd;\\r\\n 6\\r\\n 7  fd = open(\\"/dev/globalfifo\\", O_RDONLY | O_NONBLOCK);\\r\\n 8  if (fd != -1) {\\r\\n 9       struct epoll_event ev_globalfifo;\\r\\n10       int err;\\r\\n11       int epfd;\\r\\n12\\r\\n13       if (ioctl(fd, FIFO_CLEAR, 0) < 0)\\r\\n14            printf(\\"ioctl command failed\\\\n\\");\\r\\n15\\r\\n16       epfd = epoll_create(1);\\r\\n17       if (epfd < 0) {\\r\\n18            perror(\\"epoll_create()\\");\\r\\n19            return;\\r\\n20       }\\r\\n21\\r\\n22       bzero(&ev_globalfifo, sizeof(struct epoll_event));\\r\\n23       ev_globalfifo.events = EPOLLIN | EPOLLPRI;\\r\\n24\\r\\n25       err = epoll_ctl(epfd, EPOLL_CTL_ADD, fd, &ev_globalfifo);\\r\\n26       if (err < 0) {\\r\\n27            perror(\\"epoll_ctl()\\");\\r\\n28            return;\\r\\n29       }\\r\\n30       err = epoll_wait(epfd, &ev_globalfifo, 1, 15000);\\r\\n31       if (err < 0) {\\r\\n32            perror(\\"epoll_wait()\\");\\r\\n33       } else if (err == 0) {\\r\\n34            printf(\\"No data input in FIFO within 15 seconds.\\\\n\\");\\r\\n35       } else {\\r\\n36            printf(\\"FIFO is not empty\\\\n\\");\\r\\n37       }\\r\\n38       err = epoll_ctl(epfd, EPOLL_CTL_DEL, fd, &ev_globalfifo);\\r\\n39       if (err < 0)\\r\\n40            perror(\\"epoll_ctl()\\");\\r\\n41  } else {\\r\\n42       printf(\\"Device open failure\\\\n\\");\\r\\n43  }\\r\\n44}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u7a0b\u5e8f\u7b2c25\u884cepoll_ctl\uff08epfd\uff0cEPOLL_CTL_ADD\uff0cfd\uff0c&ev_globalfifo\uff09\u5c06globalfifo\u5bf9\u5e94\u7684fd\u52a0\u5165\u5230\u4e86\u4fa6\u542c\u7684\u884c\u5217\uff0c\u7b2c23\u884c\u8bbe\u7f6e\u4fa6\u542c\u8bfb\u4e8b\u4ef6\uff0c\u7b2c30\u884c\u8fdb\u884c\u7b49\u5f85\uff0c\u82e515\u79d2\u5185\u6ca1\u6709\u4eba\u5199/dev/globalfifo\uff0c\u8be5\u7a0b\u5e8f\u4f1a\u6253\u5370No data input in FIFO within 15seconds\uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u6253\u5370FIFO is not empty\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d","description":"\u5728\u5355CPU\u8303\u56f4\u5185\u907f\u514d\u7ade\u6001\u7684\u4e00\u79cd\u7b80\u5355\u800c\u6709\u6548\u7684\u65b9\u6cd5\u662f\u5728\u8fdb\u5165\u4e34\u754c\u533a\u4e4b\u524d\u5c4f\u853d\u7cfb\u7edf\u7684\u4e2d\u65ad\uff0c\u4f46\u662f\u5728\u9a71\u52a8\u7f16\u7a0b\u4e2d\u4e0d\u503c\u5f97\u63a8\u8350\uff0c\u9a71\u52a8\u901a\u5e38\u9700\u8981\u8003\u8651\u8de8\u5e73\u53f0\u7279\u70b9\u800c\u4e0d\u5047\u5b9a\u81ea\u5df1\u5728\u5355\u6838\u4e0a\u8fd0\u884c\u3002CPU\u4e00\u822c\u90fd\u5177\u5907\u5c4f\u853d\u4e2d\u65ad\u548c\u6253\u5f00\u4e2d\u65ad\u7684\u529f\u80fd\uff0c\u8fd9\u9879\u529f\u80fd\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u5728\u6267\u884c\u7684\u5185\u6838\u6267\u884c\u8def\u5f84\u4e0d\u88ab\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6240\u62a2\u5360\uff0c\u9632\u6b62\u67d0\u4e9b\u7ade\u6001\u6761\u4ef6\u7684\u53d1\u751f\u3002\u5177\u4f53\u800c\u8a00\uff0c\u4e2d\u65ad\u5c4f\u853d\u5c06\u4f7f\u5f97\u4e2d\u65ad\u4e0e\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5e76\u53d1\u4e0d\u518d\u53d1\u751f\uff0c\u800c\u4e14\uff0c\u7531\u4e8eLinux\u5185\u6838\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b49\u64cd\u4f5c\u90fd\u4f9d\u8d56\u4e2d\u65ad\u6765\u5b9e\u73b0\uff0c\u5185\u6838\u62a2\u5360\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5e76\u53d1\u4e5f\u5f97\u4ee5\u907f\u514d\u4e86\u3002","date":"2025-09-15T14:44:14.949Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.005,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"8.3.1\u3000\u5728globalfifo\u9a71\u52a8\u4e2d\u589e\u52a0\u8f6e\u8be2\u64cd\u4f5c","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.3\u3000\u652f\u6301\u8f6e\u8be2\u64cd\u4f5c\u7684globalfifo\u9a71\u52a8"},"nextItem":{"title":"1.6.1\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684LED\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.6\u3000\u8bbe\u5907\u9a71\u52a8Hello World\uff1aLED\u9a71\u52a8"}},"content":"\u5728\u5355CPU\u8303\u56f4\u5185\u907f\u514d\u7ade\u6001\u7684\u4e00\u79cd\u7b80\u5355\u800c\u6709\u6548\u7684\u65b9\u6cd5\u662f\u5728\u8fdb\u5165\u4e34\u754c\u533a\u4e4b\u524d\u5c4f\u853d\u7cfb\u7edf\u7684\u4e2d\u65ad\uff0c\u4f46\u662f\u5728\u9a71\u52a8\u7f16\u7a0b\u4e2d\u4e0d\u503c\u5f97\u63a8\u8350\uff0c\u9a71\u52a8\u901a\u5e38\u9700\u8981\u8003\u8651\u8de8\u5e73\u53f0\u7279\u70b9\u800c\u4e0d\u5047\u5b9a\u81ea\u5df1\u5728\u5355\u6838\u4e0a\u8fd0\u884c\u3002CPU\u4e00\u822c\u90fd\u5177\u5907\u5c4f\u853d\u4e2d\u65ad\u548c\u6253\u5f00\u4e2d\u65ad\u7684\u529f\u80fd\uff0c\u8fd9\u9879\u529f\u80fd\u53ef\u4ee5\u4fdd\u8bc1\u6b63\u5728\u6267\u884c\u7684\u5185\u6838\u6267\u884c\u8def\u5f84\u4e0d\u88ab\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6240\u62a2\u5360\uff0c\u9632\u6b62\u67d0\u4e9b\u7ade\u6001\u6761\u4ef6\u7684\u53d1\u751f\u3002\u5177\u4f53\u800c\u8a00\uff0c\u4e2d\u65ad\u5c4f\u853d\u5c06\u4f7f\u5f97\u4e2d\u65ad\u4e0e\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5e76\u53d1\u4e0d\u518d\u53d1\u751f\uff0c\u800c\u4e14\uff0c\u7531\u4e8eLinux\u5185\u6838\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b49\u64cd\u4f5c\u90fd\u4f9d\u8d56\u4e2d\u65ad\u6765\u5b9e\u73b0\uff0c\u5185\u6838\u62a2\u5360\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5e76\u53d1\u4e5f\u5f97\u4ee5\u907f\u514d\u4e86\u3002\\r\\n\\r\\n\u4e2d\u65ad\u5c4f\u853d\u7684\u4f7f\u7528\u65b9\u6cd5\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nlocal_irq_disable()       /* \u5c4f\u853d\u4e2d\u65ad */\\r\\n. . .\\r\\ncritical section          /* \u4e34\u754c\u533a*/\\r\\n. . .\\r\\nlocal_irq_enable()        /* \u5f00\u4e2d\u65ad*/\\r\\n```\\r\\n\\r\\n\u5176\u5e95\u5c42\u7684\u5b9e\u73b0\u539f\u7406\u662f\u8ba9CPU\u672c\u8eab\u4e0d\u54cd\u5e94\u4e2d\u65ad\uff0c\u6bd4\u5982\uff0c\u5bf9\u4e8eARM\u5904\u7406\u5668\u800c\u8a00\uff0c\u5176\u5e95\u5c42\u7684\u5b9e\u73b0\u662f\u5c4f\u853dARM CPSR\u7684I\u4f4d\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void arch_local_irq_disable(void)\\r\\n{\\r\\n        asm volatile(\\r\\n                \\"       cpsid i                 @ arch_local_irq_disable\\"\\r\\n                :\\r\\n                :\\r\\n                : \\"memory\\", \\"cc\\");\\r\\n}\\r\\n```\\r\\n\\r\\n\u7531\u4e8eLinux\u7684\u5f02\u6b65I/O\u3001\u8fdb\u7a0b\u8c03\u5ea6\u7b49\u5f88\u591a\u91cd\u8981\u64cd\u4f5c\u90fd\u4f9d\u8d56\u4e8e\u4e2d\u65ad\uff0c\u4e2d\u65ad\u5bf9\u4e8e\u5185\u6838\u7684\u8fd0\u884c\u975e\u5e38\u91cd\u8981\uff0c\u5728\u5c4f\u853d\u4e2d\u65ad\u671f\u95f4\u6240\u6709\u7684\u4e2d\u65ad\u90fd\u65e0\u6cd5\u5f97\u5230\u5904\u7406\uff0c\u56e0\u6b64\u957f\u65f6\u95f4\u5c4f\u853d\u4e2d\u65ad\u662f\u5f88\u5371\u9669\u7684\uff0c\u8fd9\u6709\u53ef\u80fd\u9020\u6210\u6570\u636e\u4e22\u5931\u4e43\u81f3\u7cfb\u7edf\u5d29\u6e83\u7b49\u540e\u679c\u3002\u8fd9\u5c31\u8981\u6c42\u5728\u5c4f\u853d\u4e86\u4e2d\u65ad\u4e4b\u540e\uff0c\u5f53\u524d\u7684\u5185\u6838\u6267\u884c\u8def\u5f84\u5e94\u5f53\u5c3d\u5feb\u5730\u6267\u884c\u5b8c\u4e34\u754c\u533a\u7684\u4ee3\u7801\u3002\\r\\n\\r\\nlocal_irq_disable\uff08\uff09\u548clocal_irq_enable\uff08\uff09\u90fd\u53ea\u80fd\u7981\u6b62\u548c\u4f7f\u80fd\u672cCPU\u5185\u7684\u4e2d\u65ad\uff0c\u56e0\u6b64\uff0c\u5e76\u4e0d\u80fd\u89e3\u51b3SMP\u591aCPU\u5f15\u53d1\u7684\u7ade\u6001\u3002\u56e0\u6b64\uff0c\u5355\u72ec\u4f7f\u7528\u4e2d\u65ad\u5c4f\u853d\u901a\u5e38\u4e0d\u662f\u4e00\u79cd\u503c\u5f97\u63a8\u8350\u7684\u907f\u514d\u7ade\u6001\u7684\u65b9\u6cd5\uff08\u6362\u53e5\u8bdd\u8bf4\uff0c\u9a71\u52a8\u4e2d\u4f7f\u7528local_irq_disable/enable\uff08\uff09\u901a\u5e38\u610f\u5473\u7740\u4e00\u4e2abug\uff09\uff0c\u5b83\u9002\u5408\u4e0e\u4e0b\u6587\u5c06\u8981\u4ecb\u7ecd\u7684\u81ea\u65cb\u9501\u8054\u5408\u4f7f\u7528\u3002\\r\\n\\r\\n\u4e0elocal_irq_disable\uff08\uff09\u4e0d\u540c\u7684\u662f\uff0clocal_irq_save\uff08flags\uff09\u9664\u4e86\u8fdb\u884c\u7981\u6b62\u4e2d\u65ad\u7684\u64cd\u4f5c\u4ee5\u5916\uff0c\u8fd8\u4fdd\u5b58\u76ee\u524dCPU\u7684\u4e2d\u65ad\u4f4d\u4fe1\u606f\uff0clocal_irq_restore\uff08flags\uff09\u8fdb\u884c\u7684\u662f\u4e0elocal_irq_save\uff08flags\uff09\u76f8\u53cd\u7684\u64cd\u4f5c\u3002\u5bf9\u4e8eARM\u5904\u7406\u5668\u800c\u8a00\uff0c\u5176\u5b9e\u5c31\u662f\u4fdd\u5b58\u548c\u6062\u590dCPSR\u3002\\r\\n\\r\\n\u5982\u679c\u53ea\u662f\u60f3\u7981\u6b62\u4e2d\u65ad\u7684\u5e95\u534a\u90e8\uff0c\u5e94\u4f7f\u7528local_bh_disable\uff08\uff09\uff0c\u4f7f\u80fd\u88ablocal_bh_disable\uff08\uff09\u7981\u6b62\u7684\u5e95\u534a\u90e8\u5e94\u8be5\u8c03\u7528local_bh_enable\uff08\uff09\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.6\u3000\u8bbe\u5907\u9a71\u52a8Hello World\uff1aLED\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.6\u3000\u8bbe\u5907\u9a71\u52a8Hello World\uff1aLED\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.6\u3000\u8bbe\u5907\u9a71\u52a8Hello World\uff1aLED\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.6\u3000\u8bbe\u5907\u9a71\u52a8Hello World\uff1aLED\u9a71\u52a8.md","title":"1.6.1\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684LED\u9a71\u52a8","description":"\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e2d\uff0cLED\u4e00\u822c\u76f4\u63a5\u7531CPU\u7684GPIO\uff08\u901a\u7528\u53ef\u7f16\u7a0bI/O\uff09\u53e3\u63a7\u5236\u3002GPIO\u4e00\u822c\u7531\u4e24\u7ec4\u5bc4\u5b58\u5668\u63a7\u5236\uff0c\u5373\u4e00\u7ec4\u63a7\u5236\u5bc4\u5b58\u5668\u548c\u4e00\u7ec4\u6570\u636e\u5bc4\u5b58\u5668\u3002\u63a7\u5236\u5bc4\u5b58\u5668\u53ef\u8bbe\u7f6eGPIO\u53e3\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e3a\u8f93\u5165\u6216\u8005\u8f93\u51fa\u3002\u5f53\u5f15\u811a\u88ab\u8bbe\u7f6e\u4e3a\u8f93\u51fa\u65f6\uff0c\u5411\u6570\u636e\u5bc4\u5b58\u5668\u7684\u5bf9\u5e94\u4f4d\u5199\u51651\u548c0\u4f1a\u5206\u522b\u5728\u5f15\u811a\u4e0a\u4ea7\u751f\u9ad8\u7535\u5e73\u548c\u4f4e\u7535\u5e73\uff1b\u5f53\u5f15\u811a\u8bbe\u7f6e\u4e3a\u8f93\u5165\u65f6\uff0c\u8bfb\u53d6\u6570\u636e\u5bc4\u5b58\u5668\u7684\u5bf9\u5e94\u4f4d\u53ef\u83b7\u5f97\u5f15\u811a\u4e0a\u7684\u7535\u5e73\u4e3a\u9ad8\u6216\u4f4e\u3002","date":"2025-09-15T14:44:14.933Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":7.13,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.3\u3000\u4e2d\u65ad\u5c4f\u853d"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90"}},"content":"\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e2d\uff0cLED\u4e00\u822c\u76f4\u63a5\u7531CPU\u7684GPIO\uff08\u901a\u7528\u53ef\u7f16\u7a0bI/O\uff09\u53e3\u63a7\u5236\u3002GPIO\u4e00\u822c\u7531\u4e24\u7ec4\u5bc4\u5b58\u5668\u63a7\u5236\uff0c\u5373\u4e00\u7ec4\u63a7\u5236\u5bc4\u5b58\u5668\u548c\u4e00\u7ec4\u6570\u636e\u5bc4\u5b58\u5668\u3002\u63a7\u5236\u5bc4\u5b58\u5668\u53ef\u8bbe\u7f6eGPIO\u53e3\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e3a\u8f93\u5165\u6216\u8005\u8f93\u51fa\u3002\u5f53\u5f15\u811a\u88ab\u8bbe\u7f6e\u4e3a\u8f93\u51fa\u65f6\uff0c\u5411\u6570\u636e\u5bc4\u5b58\u5668\u7684\u5bf9\u5e94\u4f4d\u5199\u51651\u548c0\u4f1a\u5206\u522b\u5728\u5f15\u811a\u4e0a\u4ea7\u751f\u9ad8\u7535\u5e73\u548c\u4f4e\u7535\u5e73\uff1b\u5f53\u5f15\u811a\u8bbe\u7f6e\u4e3a\u8f93\u5165\u65f6\uff0c\u8bfb\u53d6\u6570\u636e\u5bc4\u5b58\u5668\u7684\u5bf9\u5e94\u4f4d\u53ef\u83b7\u5f97\u5f15\u811a\u4e0a\u7684\u7535\u5e73\u4e3a\u9ad8\u6216\u4f4e\u3002\\r\\n\\r\\n\u5728\u672c\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c4f\u853d\u5177\u4f53CPU\u7684\u5dee\u5f02\uff0c\u5047\u8bbe\u5728GPIO_REG_CTRL\u7269\u7406\u5730\u5740\u4e2d\u63a7\u5236\u5bc4\u5b58\u5668\u5904\u7684\u7b2cn\u4f4d\u5199\u51651\u53ef\u8bbe\u7f6eGPIO\u53e3\u4e3a\u8f93\u51fa\uff0c\u5728\u5730\u5740GPIO_REG_DATA\u7269\u7406\u5730\u5740\u4e2d\u6570\u636e\u5bc4\u5b58\u5668\u7684\u7b2cn\u4f4d\u5199\u51651\u62160\u53ef\u5728\u5f15\u811a\u4e0a\u4ea7\u751f\u9ad8\u6216\u4f4e\u7535\u5e73\uff0c\u5219\u5728\u65e0\u64cd\u4f5c\u7cfb\u7edf\u7684\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5907\u9a71\u52a8\u89c1\u4ee3\u7801\u6e05\u53551.3\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53551.3\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684LED\u9a71\u52a8\\r\\n\\r\\n```\\r\\n 1 #define reg_gpio_ctrl *(volatile int *)(ToVirtual(GPIO_REG_CTRL))\\r\\n 2 #define reg_gpio_data *(volatile int *)(ToVirtual(GPIO_REG_DATA))\\r\\n 3 /* \u521d\u59cb\u5316\\r\\n\\r\\n\\r\\nLED */\\r\\n 4 void LightInit(void)\\r\\n 5 {\\r\\n 6   reg_gpio_ctrl |= (1 << n); /* \u8bbe\u7f6e\\r\\n\\r\\n\\r\\nGPIO\u4e3a\u8f93\u51fa\\r\\n\\r\\n\\r\\n */\\r\\n 7 }\\r\\n 8\\r\\n 9 /* \u70b9\u4eae\\r\\n\\r\\n\\r\\nLED */\\r\\n10 void LightOn(void)\\r\\n11 {\\r\\n12   reg_gpio_data |= (1 << n); /* \u5728\\r\\n\\r\\n\\r\\nGPIO\u4e0a\u8f93\u51fa\u9ad8\u7535\u5e73\\r\\n\\r\\n\\r\\n */\\r\\n13 }\\r\\n14\\r\\n15 /* \u7184\u706d\\r\\n\\r\\n\\r\\nLED */\\r\\n16 void LightOff(void)\\r\\n17 {\\r\\n18   reg_gpio_data &= ~\\r\\n\\r\\n\\r\\n(1 << n); /* \u5728\\r\\n\\r\\n\\r\\nGPIO\u4e0a\u8f93\u51fa\u4f4e\u7535\u5e73\\r\\n\\r\\n\\r\\n */\\r\\n19 }\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u7a0b\u5e8f\u4e2d\u7684LightInit\uff08\uff09\u3001LightOn\uff08\uff09\u3001LightOff\uff08\uff09\u90fd\u76f4\u63a5\u4f5c\u4e3a\u9a71\u52a8\u63d0\u4f9b\u7ed9\u5e94\u7528\u7a0b\u5e8f\u7684\u5916\u90e8\u63a5\u53e3\u51fd\u6570\u3002\u7a0b\u5e8f\u4e2dToVirtual\uff08\uff09\u7684\u4f5c\u7528\u662f\u5f53\u7cfb\u7edf\u542f\u52a8\u4e86\u786c\u4ef6MMU\u4e4b\u540e\uff0c\u6839\u636e\u7269\u7406\u5730\u5740\u548c\u865a\u62df\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5c06\u5bc4\u5b58\u5668\u7684\u7269\u7406\u5730\u5740\u8f6c\u5316\u4e3a\u865a\u62df\u5730\u5740\u3002\\r\\n\\r\\n# 1.6.2\u3000Linux\u4e0b\u7684LED\u9a71\u52a8\\r\\n\\r\\n\u5728Linux\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u6846\u67b6\u6765\u7f16\u5199\u5bf9\u5e94\u4e8e\u4ee3\u7801\u6e05\u53551.3\u7684LED\u8bbe\u5907\u9a71\u52a8\uff08\u8fd9\u91cc\u4ec5\u4ec5\u662f\u4e3a\u4e86\u65b9\u4fbf\u8bb2\u89e3\uff0c\u5185\u6838\u4e2d\u5b9e\u9645\u5b9e\u73b0\u4e86\u4e00\u4e2a\u63d0\u4f9bsysfs\u8282\u70b9\u7684GPIO LED\u9a71\u52a8\uff0c\u4f4d\u4e8edrivers/leds/leds-gpio.c\u4e2d\uff09\uff0c\u64cd\u4f5c\u786c\u4ef6\u7684LightInit\uff08\uff09\u3001LightOn\uff08\uff09\u3001LightOff\uff08\uff09\u51fd\u6570\u4ecd\u7136\u9700\u8981\uff0c\u4f46\u662f\uff0c\u9075\u5faaLinux\u7f16\u7a0b\u7684\u547d\u540d\u4e60\u60ef\uff0c\u91cd\u65b0\u5c06\u5176\u547d\u540d\u4e3alight_init\uff08\uff09\u3001light_on\uff08\uff09\u3001light_off\uff08\uff09\u3002\u8fd9\u4e9b\u51fd\u6570\u5c06\u88abLED\u8bbe\u5907\u9a71\u52a8\u4e2d\u72ec\u7acb\u4e8e\u8bbe\u5907\u5e76\u9488\u5bf9\u5185\u6838\u7684\u63a5\u53e3\u8fdb\u884c\u8c03\u7528\uff0c\u4ee3\u7801\u6e05\u53551.4\u7ed9\u51fa\u4e86Linux\u4e0b\u7684LED\u9a71\u52a8\uff0c\u6b64\u65f6\u8bfb\u8005\u5e76\u4e0d\u9700\u8981\u80fd\u8bfb\u61c2\u8fd9\u4e9b\u4ee3\u7801\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53551.4\u3000Linux\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684LED\u9a71\u52a8\\r\\n\\r\\n```\\r\\n  1 #include .../* \u5305\u542b\u5185\u6838\u4e2d\u7684\u591a\u4e2a\u5934\u6587\u4ef6\\r\\n\\r\\n\\r\\n */\\r\\n  2 /* \u8bbe\u5907\u7ed3\u6784\u4f53\\r\\n\\r\\n\\r\\n */\\r\\n  3 struct light_dev {\\r\\n  4     struct cdev cdev;      /* \u5b57\u7b26\u8bbe\u5907\\r\\n\\r\\n\\r\\ncdev\u7ed3\u6784\u4f53\\r\\n\\r\\n\\r\\n */\\r\\n  5     unsigned char vaule;   /* LED\u4eae\u65f6\u4e3a\\r\\n\\r\\n\\r\\n1\uff0c\u7184\u706d\u65f6\u4e3a\\r\\n\\r\\n\\r\\n0\uff0c\u7528\u6237\u53ef\u8bfb\u5199\u6b64\u503c\\r\\n\\r\\n\\r\\n */\\r\\n  6 };\\r\\n  7 struct light_dev *light_devp;\\r\\n  8 int light_major = LIGHT_MAJOR;\\r\\n  9 MODULE_AUTHOR(\\"Barry Song <21cnbao@gmail.com>\\");\\r\\n 10 MODULE_LICENSE(\\"Dual BSD/GPL\\");\\r\\n 11 /* \u6253\u5f00\u548c\u5173\u95ed\u51fd\u6570\\r\\n\\r\\n\\r\\n */\\r\\n 12 int light_open(struct inode *inode, struct file *filp)\\r\\n 13 {\\r\\n 14     struct light_dev *dev;\\r\\n 15     /* \u83b7\u5f97\u8bbe\u5907\u7ed3\u6784\u4f53\u6307\u9488\\r\\n\\r\\n\\r\\n */\\r\\n 16     dev = container_of(inode->i_cdev, struct light_dev, cdev);\\r\\n 17     /* \u8ba9\u8bbe\u5907\u7ed3\u6784\u4f53\u4f5c\u4e3a\u8bbe\u5907\u7684\u79c1\u6709\u4fe1\u606f\\r\\n\\r\\n\\r\\n */\\r\\n 18     filp->private_data = dev;\\r\\n 19     return 0;\\r\\n 20 }\\r\\n 21 int light_release(struct inode *inode, struct file *filp)\\r\\n 22 {\\r\\n 23     return 0;\\r\\n 24 }\\r\\n 25 /* \u8bfb\u5199\u8bbe\u5907\\r\\n\\r\\n\\r\\n:\u53ef\u4ee5\u4e0d\u9700\u8981\\r\\n\\r\\n\\r\\n */\\r\\n 26 ssize_t light_read(struct file *filp, char __user *buf, size_t count,\\r\\n 27     loff_t *f_pos)\\r\\n 28 {\\r\\n 29     struct light_dev *dev = filp->private_data; /* \u83b7\u5f97\u8bbe\u5907\u7ed3\u6784\u4f53\\r\\n\\r\\n\\r\\n */\\r\\n 30     if (copy_to_user(buf, &(dev->value), 1))\\r\\n 31         return  -EFAULT;\\r\\n 32     return 1;\\r\\n 33 }\\r\\n 34 ssize_t light_write(struct file *filp, const char __user *buf, size_t count,\\r\\n 35     loff_t *f_pos)\\r\\n 36 {\\r\\n 37     struct light_dev *dev = filp->private_data;\\r\\n 38     if (copy_from_user(&(dev->value), buf, 1))\\r\\n 39         return  -EFAULT;\\r\\n 40     /* \u6839\u636e\u5199\u5165\u7684\u503c\u70b9\u4eae\u548c\u7184\u706d\\r\\n\\r\\n\\r\\nLED */\\r\\n 41      if (dev->value == 1)\\r\\n 42          light_on();\\r\\n 43      else\\r\\n 44          light_off();\\r\\n 45      return 1;\\r\\n 46 }\\r\\n 47 /* ioctl\u51fd\u6570\\r\\n\\r\\n\\r\\n */\\r\\n 48 int light_ioctl(struct inode *inode, struct file *filp, unsigned int cmd,\\r\\n 49     unsigned long arg)\\r\\n 50 {\\r\\n 51     struct light_dev *dev = filp->private_data;\\r\\n 52     switch (cmd) {\\r\\n 53     case LIGHT_ON:\\r\\n 54         dev->value = 1;\\r\\n 55         light_on();\\r\\n 56         break;\\r\\n 57     case LIGHT_OFF:\\r\\n 58         dev->value = 0;\\r\\n 59         light_off();\\r\\n 60         break;\\r\\n 61     default:\\r\\n 62         /* \u4e0d\u80fd\u652f\u6301\u7684\u547d\u4ee4\\r\\n\\r\\n\\r\\n */\\r\\n 63         return  -ENOTTY;\\r\\n 64     }\\r\\n 65     return 0;\\r\\n 66 }\\r\\n 67 struct file_operations light_fops = {\\r\\n 68     .owner = THIS_MODULE,\\r\\n 69     .read = light_read,\\r\\n 70     .write = light_write,\\r\\n 71     .ioctl = light_ioctl,\\r\\n 72     .open = light_open,\\r\\n 73     .release = light_release,\\r\\n 74 };\\r\\n 75 /* \u8bbe\u7f6e\u5b57\u7b26\u8bbe\u5907\\r\\n\\r\\n\\r\\ncdev\u7ed3\u6784\u4f53\\r\\n\\r\\n\\r\\n */\\r\\n 76 static void light_setup_cdev(struct light_dev *dev, int index)\\r\\n 77 {\\r\\n 78     int err, devno = MKDEV(light_major, index);\\r\\n 79     cdev_init(&dev->cdev, &light_fops);\\r\\n 80     dev->cdev.owner = THIS_MODULE;\\r\\n 81     dev->cdev.ops = &light_fops;\\r\\n 82     err = cdev_add(&dev->cdev, devno, 1);\\r\\n 83     if (err)\\r\\n 84         printk(KERN_NOTICE \\"Error %d adding LED%d\\", err, index);\\r\\n 85 }\\r\\n 86 /* \u6a21\u5757\u52a0\u8f7d\u51fd\u6570\\r\\n\\r\\n\\r\\n */\\r\\n 87 int light_init(void)\\r\\n 88 {\\r\\n 89     int result;\\r\\n 90     dev_t dev = MKDEV(light_major, 0);\\r\\n 91     /* \u7533\u8bf7\u5b57\u7b26\u8bbe\u5907\u53f7\\r\\n\\r\\n\\r\\n */\\r\\n 92     if (light_major)\\r\\n 93         result = register_chrdev_region(dev, 1, \\"LED\\");\\r\\n 94     else {\\r\\n 95         result = alloc_chrdev_region(&dev, 0, 1, \\"LED\\");\\r\\n 96         light_major = MAJOR(dev);\\r\\n 97     }\\r\\n 98     if (result < 0)\\r\\n 99         return result;\\r\\n100     /* \u5206\u914d\u8bbe\u5907\u7ed3\u6784\u4f53\u7684\u5185\u5b58\\r\\n\\r\\n\\r\\n */\\r\\n101     light_devp = kmalloc(sizeof(struct light_dev), GFP_KERNEL);\\r\\n102     if (!light_devp) {\\r\\n103         result =  -ENOMEM;\\r\\n104         goto fail_malloc;\\r\\n105     }\\r\\n106     memset(light_devp, 0, sizeof(struct light_dev));\\r\\n107     light_setup_cdev(light_devp, 0);\\r\\n108     light_gpio_init();\\r\\n109     return 0;\\r\\n110 fail_malloc:\\r\\n111     unregister_chrdev_region(dev, light_devp);\\r\\n112     return result;\\r\\n113 }\\r\\n114 /* \u6a21\u5757\u5378\u8f7d\u51fd\u6570\\r\\n\\r\\n\\r\\n */\\r\\n115 void light_cleanup(void)\\r\\n116 {\\r\\n117     cdev_del(&light_devp->cdev);  /* \u5220\u9664\u5b57\u7b26\u8bbe\u5907\u7ed3\u6784\u4f53\\r\\n\\r\\n\\r\\n */\\r\\n118     kfree(light_devp);            /* \u91ca\u653e\u5728\\r\\n\\r\\n\\r\\nlight_init\u4e2d\u5206\u914d\u7684\u5185\u5b58\\r\\n\\r\\n\\r\\n */\\r\\n119     unregister_chrdev_region(MKDEV(light_major, 0), 1); /* \u5220\u9664\u5b57\u7b26\u8bbe\u5907\\r\\n\\r\\n\\r\\n */\\r\\n120 }\\r\\n121 module_init(light_init);\\r\\n122 module_exit(light_cleanup);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7684\u884c\u6570\u4e0e\u4ee3\u7801\u6e05\u53551.3\u5df2\u7ecf\u4e0d\u80fd\u76f8\u6bd4\u4e86\uff0c\u9664\u4e86\u4ee3\u7801\u6e05\u53551.3\u4e2d\u7684\u786c\u4ef6\u64cd\u4f5c\u51fd\u6570\u4ecd\u7136\u9700\u8981\u5916\uff0c\u4ee3\u7801\u6e05\u53551.4\u4e2d\u8fd8\u5305\u542b\u4e86\u5927\u91cf\u6682\u65f6\u964c\u751f\u7684\u5143\u7d20\uff0c\u5982\u7ed3\u6784\u4f53file_operations\u3001cdev\uff0cLinux\u5185\u6838\u6a21\u5757\u58f0\u660e\u7528\u7684MODULE_AUTHOR\u3001MODULE_LICENSE\u3001module_init\u3001module_exit\uff0c\u4ee5\u53ca\u7528\u4e8e\u5b57\u7b26\u8bbe\u5907\u6ce8\u518c\u3001\u5206\u914d\u548c\u6ce8\u9500\u7684\u51fd\u6570register_chrdev_region\uff08\uff09\u3001alloc_chrdev_region\uff08\uff09\u3001unregister_chrdev_region\uff08\uff09\u7b49\u3002\u6211\u4eec\u4e5f\u4e0d\u80fd\u7406\u89e3\u4e3a\u4ec0\u4e48\u9a71\u52a8\u4e2d\u8981\u5305\u542blight_init\uff08\uff09\u3001light_cleanup\uff08\uff09\u3001light_read\uff08\uff09\u3001light_write\uff08\uff09\u7b49\u51fd\u6570\\r\\n\\r\\n\u6b64\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6709\u4e00\u4e2a\u611f\u6027\u8ba4\u8bc6\uff0c\u90a3\u5c31\u662f\uff0c\u4e0a\u8ff0\u6682\u65f6\u964c\u751f\u7684\u5143\u7d20\u90fd\u662fLinux\u5185\u6838\u4e3a\u5b57\u7b26\u8bbe\u5907\u5b9a\u4e49\u7684\uff0c\u4ee5\u5b9e\u73b0\u9a71\u52a8\u4e0e\u5185\u6838\u63a5\u53e3\u800c\u5b9a\u4e49\u7684\u3002Linux\u5bf9\u5404\u7c7b\u8bbe\u5907\u7684\u9a71\u52a8\u90fd\u5b9a\u4e49\u4e86\u7c7b\u4f3c\u7684\u6570\u636e\u7ed3\u6784\u548c\u51fd\u6570"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90","description":"\u5728\u8fc7\u53bb\u7684ARM Linux\u4e2d\uff0carch/arm/plat-xxx\u548carch/arm/mach-xxx\u4e2d\u5145\u65a5\u7740\u5927\u91cf\u7684\u5783\u573e\u4ee3\u7801\uff0c\u5f88\u591a\u4ee3\u7801\u53ea\u662f\u5728\u63cf\u8ff0\u677f\u7ea7\u7ec6\u8282\uff0c\u800c\u8fd9\u4e9b\u677f\u7ea7\u7ec6\u8282\u5bf9\u4e8e\u5185\u6838\u6765\u8bb2\uff0c\u4e0d\u8fc7\u662f\u5783\u573e\uff0c\u5982\u677f\u4e0a\u7684platform\u8bbe\u5907\u3001resource\u3001i2cboardinfo\u3001spiboardinfo\u4ee5\u53ca\u5404\u79cd\u786c\u4ef6\u7684platform_data\u3002\u8bfb\u8005\u82e5\u6709\u5174\u8da3\uff0c\u53ef\u4ee5\u7edf\u8ba1\u4e00\u4e0b\u5e38\u89c1\u7684s3c2410\u3001s3c6410\u7b49\u677f\u7ea7\u76ee\u5f55\uff0c\u4ee3\u7801\u91cf\u5728\u6570\u4e07\u884c\u3002","date":"2025-09-15T14:44:14.933Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.12,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"1.6.1\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684LED\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.6\u3000\u8bbe\u5907\u9a71\u52a8Hello World\uff1aLED\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5"}},"content":"\u5728\u8fc7\u53bb\u7684ARM Linux\u4e2d\uff0carch/arm/plat-xxx\u548carch/arm/mach-xxx\u4e2d\u5145\u65a5\u7740\u5927\u91cf\u7684\u5783\u573e\u4ee3\u7801\uff0c\u5f88\u591a\u4ee3\u7801\u53ea\u662f\u5728\u63cf\u8ff0\u677f\u7ea7\u7ec6\u8282\uff0c\u800c\u8fd9\u4e9b\u677f\u7ea7\u7ec6\u8282\u5bf9\u4e8e\u5185\u6838\u6765\u8bb2\uff0c\u4e0d\u8fc7\u662f\u5783\u573e\uff0c\u5982\u677f\u4e0a\u7684platform\u8bbe\u5907\u3001resource\u3001i2c_board_info\u3001spi_board_info\u4ee5\u53ca\u5404\u79cd\u786c\u4ef6\u7684platform_data\u3002\u8bfb\u8005\u82e5\u6709\u5174\u8da3\uff0c\u53ef\u4ee5\u7edf\u8ba1\u4e00\u4e0b\u5e38\u89c1\u7684s3c2410\u3001s3c6410\u7b49\u677f\u7ea7\u76ee\u5f55\uff0c\u4ee3\u7801\u91cf\u5728\u6570\u4e07\u884c\u3002\\r\\n\\r\\n\u8bbe\u5907\u6811\u662f\u4e00\u79cd\u63cf\u8ff0\u786c\u4ef6\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u8d77\u6e90\u4e8eOpenFirmware\uff08OF\uff09\u3002\u5728Linux 2.6\u4e2d\uff0cARM\u67b6\u6784\u7684\u677f\u6781\u786c\u4ef6\u7ec6\u8282\u8fc7\u591a\u5730\u88ab\u786c\u7f16\u7801\u5728arch/arm/plat-xxx\u548carch/arm/mach-xxx\u4e2d\uff0c\u91c7\u7528\u8bbe\u5907\u6811\u540e\uff0c\u8bb8\u591a\u786c\u4ef6\u7684\u7ec6\u8282\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5b83\u4f20\u9012\u7ed9Linux\uff0c\u800c\u4e0d\u518d\u9700\u8981\u5728\u5185\u6838\u4e2d\u8fdb\u884c\u5927\u91cf\u7684\u5197\u4f59\u7f16\u7801\u3002\\r\\n\\r\\n\u8bbe\u5907\u6811\u7531\u4e00\u7cfb\u5217\u88ab\u547d\u540d\u7684\u8282\u70b9\uff08Node\uff09\u548c\u5c5e\u6027\uff08Property\uff09\u7ec4\u6210\uff0c\u800c\u8282\u70b9\u672c\u8eab\u53ef\u5305\u542b\u5b50\u8282\u70b9\u3002\u6240\u8c13\u5c5e\u6027\uff0c\u5176\u5b9e\u5c31\u662f\u6210\u5bf9\u51fa\u73b0\u7684\u540d\u79f0\u548c\u503c\u3002\u5728\u8bbe\u5907\u6811\u4e2d\uff0c\u53ef\u63cf\u8ff0\u7684\u4fe1\u606f\u5305\u62ec\uff08\u539f\u5148\u8fd9\u4e9b\u4fe1\u606f\u5927\u591a\u88ab\u786c\u7f16\u7801\u5728\u5185\u6838\u4e2d\uff09\uff1a\\r\\n\\r\\n- \xb7CPU\u7684\u6570\u91cf\u548c\u7c7b\u522b\u3002\\r\\n- \xb7\u5185\u5b58\u57fa\u5730\u5740\u548c\u5927\u5c0f\u3002\\r\\n- \xb7\u603b\u7ebf\u548c\u6865\u3002\\r\\n- \xb7\u5916\u8bbe\u8fde\u63a5\u3002\\r\\n- \xb7\u4e2d\u65ad\u63a7\u5236\u5668\u548c\u4e2d\u65ad\u4f7f\u7528\u60c5\u51b5\u3002\\r\\n- \xb7GPIO\u63a7\u5236\u5668\u548cGPIO\u4f7f\u7528\u60c5\u51b5\u3002\\r\\n- \xb7\u65f6\u949f\u63a7\u5236\u5668\u548c\u65f6\u949f\u4f7f\u7528\u60c5\u51b5\u3002\\r\\n\\r\\n\u5b83\u57fa\u672c\u4e0a\u5c31\u662f\u753b\u4e00\u68f5\u7535\u8def\u677f\u4e0aCPU\u3001\u603b\u7ebf\u3001\u8bbe\u5907\u7ec4\u6210\u7684\u6811\uff0cBootloader\u4f1a\u5c06\u8fd9\u68f5\u6811\u4f20\u9012\u7ed9\u5185\u6838\uff0c\u7136\u540e\u5185\u6838\u53ef\u4ee5\u8bc6\u522b\u8fd9\u68f5\u6811\uff0c\u5e76\u6839\u636e\u5b83\u5c55\u5f00\u51faLinux\u5185\u6838\u4e2d\u7684platform_device\u3001i2c_client\u3001spi_device\u7b49\u8bbe\u5907\uff0c\u800c\u8fd9\u4e9b\u8bbe\u5907\u7528\u5230\u7684\u5185\u5b58\u3001IRQ\u7b49\u8d44\u6e90\uff0c\u4e5f\u88ab\u4f20\u9012\u7ed9\u4e86\u5185\u6838\uff0c\u5185\u6838\u4f1a\u5c06\u8fd9\u4e9b\u8d44\u6e90\u7ed1\u5b9a\u7ed9\u5c55\u5f00\u7684\u76f8\u5e94\u7684\u8bbe\u5907\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5","description":"\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u8c03\u8bd5Linux\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u5728\u76ee\u6807\u677f\u4e0a\u5148\u8fd0\u884cGDBServer\uff0c\u518d\u8ba9\u4e3b\u673a\u4e0a\u7684GDB\u4e0e\u76ee\u6807\u677f\u4e0a\u7684GDBServer\u901a\u8fc7\u7f51\u53e3\u6216\u4e32\u53e3\u901a\u4fe1\u3002","date":"2025-09-15T14:44:14.929Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.78,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.1\u3000ARM\u8bbe\u5907\u6811\u8d77\u6e90"},"nextItem":{"title":"3.5.1\u3000Linux\u7f16\u7801\u98ce\u683c","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.5\u3000Linux\u4e0b\u7684C\u7f16\u7a0b\u7279\u70b9"}},"content":"\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u8c03\u8bd5Linux\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u5728\u76ee\u6807\u677f\u4e0a\u5148\u8fd0\u884cGDBServer\uff0c\u518d\u8ba9\u4e3b\u673a\u4e0a\u7684GDB\u4e0e\u76ee\u6807\u677f\u4e0a\u7684GDBServer\u901a\u8fc7\u7f51\u53e3\u6216\u4e32\u53e3\u901a\u4fe1\u3002\\r\\n\\r\\n# 1.\u76ee\u6807\u677f\\r\\n\\r\\n\u9700\u8981\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u542f\u52a8GDBServer\uff1a\\r\\n\\r\\n```\\r\\ngdbserver <host_ip>:<port> <app>\\r\\n```\\r\\n\\r\\n<host_ip>\uff1aport\u4e3a\u4e3b\u673a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\uff0capp\u662f\u53ef\u6267\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u540d\u3002\\r\\n\\r\\n\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u7528\u7cfb\u7edf\u4e2d\u7a7a\u95f2\u7684\u4e32\u53e3\u4f5c\u4e3aGDB\u8c03\u8bd5\u5668\u548cGDBServer\u7684\u5e95\u5c42\u901a\u4fe1\u624b\u6bb5\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\ngdbserver/dev/ttyS0./tdemo\\r\\n```\\r\\n\\r\\n# 2.\u4e3b\u673a\\r\\n\\r\\n\u9700\u8981\u5148\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u542f\u52a8GDB\uff1a\\r\\n\\r\\n```\\r\\narm-eabi-gdb <app>\\r\\n```\\r\\n\\r\\napp\u4e0eGDBServer\u7684app\u53c2\u6570\u5bf9\u5e94\u3002\\r\\n\\r\\n\u4e4b\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5c31\u53ef\u4ee5\u8fde\u63a5\u76ee\u6807\u677f\uff1a\\r\\n\\r\\n```\\r\\ntarget remote <target_ip>:<port>\\r\\n```\\r\\n\\r\\n<target_ip>\uff1a< port>\u4e3a\u76ee\u6807\u673a\u7684IP\u5730\u5740\u548c\u7aef\u53e3\u3002\\r\\n\\r\\n\u5982\u679c\u76ee\u6807\u677f\u4e0a\u7684GDBServer\u4f7f\u7528\u4e32\u53e3\uff0c\u5219\u5728\u5bbf\u4e3b\u673a\u4e0aGDB\u4e5f\u5e94\u8be5\u4f7f\u7528\u4e32\u53e3\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\n(gdb)target remote/dev/ttyS1\\r\\n```\\r\\n\\r\\n\u4e4b\u540e\uff0c\u4fbf\u53ef\u4ee5\u4f7f\u7528GDB\u50cf\u8c03\u8bd5\u672c\u673a\u4e0a\u7684\u7a0b\u5e8f\u4e00\u6837\u8c03\u8bd5\u76ee\u6807\u673a\u4e0a\u7684\u7a0b\u5e8f\u3002\\r\\n\\r\\n# 3.\u901a\u8fc7GDB server\u548cARM GDB\u8c03\u8bd5\u5e94\u7528\u7a0b\u5e8f\\r\\n\\r\\n\u5728ARM\u5f00\u53d1\u677f\u4e0a\u653e\u7f6eGDB server\uff0c\u4fbf\u53ef\u4ee5\u901a\u8fc7\u76ee\u6807\u677f\u4e0e\u8c03\u8bd5PC\u4e4b\u95f4\u7684\u4ee5\u592a\u7f51\u7b49\u8c03\u8bd5\u3002\u8981\u8c03\u8bd5\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n/*\\r\\n* gdb_example.c: program to show how to use arm-linux-gdb\\r\\n*/\\r\\nvoid increase_one(int *data)\\r\\n{    *data = *data + 1;\\r\\n}\\r\\nint main(int argc, char *argv[])\\r\\n{    int dat = 0;\\r\\n     int *p = 0;\\r\\n     increase_one(&dat);\\r\\n     /* program will crash here */\\r\\n     increase_one(p);\\r\\n     return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n\u901a\u8fc7debug\u65b9\u5f0f\u7f16\u8bd1\u5b83\uff1a\\r\\n\\r\\n```\\r\\narm-linux-gnueabi-gcc -g -o gdb_example gdb_example.c\\r\\n```\\r\\n\\r\\n\u5c06\u7a0b\u5e8f\u4e0b\u8f7d\u5230\u76ee\u6807\u677f\u540e\uff0c\u5728\u76ee\u6807\u677f\u4e0a\u8fd0\u884c\uff1a\\r\\n\\r\\n```\\r\\n# gdbserver 192.168.1.20:1234 gdb_example\\r\\nProcess gdb_example created; pid = 1096\\r\\nListening on port 1234\\r\\n```\\r\\n\\r\\n\u5176\u4e2d192.168.1.20\u4e3a\u76ee\u6807\u677f\u76843IP\uff0c1234\u4e3aGDBserver\u7684\u4fa6\u542c\u7aef\u53e3\u3002\\r\\n\\r\\n\u5982\u679c\u76ee\u6807\u673a\u662fAndroid\u7cfb\u7edf\uff0c\u4e14\u6ca1\u6709\u4ee5\u592a\u7f51\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528adb forward\u529f\u80fd\uff0c\u6bd4\u5982adb forward tcp\uff1a1234tcp\uff1a1234\u662f\u628a\u76ee\u6807\u673a1234\u7aef\u53e3\u4e0e\u4e3b\u673a1234\u7aef\u53e3\u8fdb\u884c\u8f6c\u53d1\u3002\\r\\n\\r\\n\u5728\u4e3b\u673a\u4e0a\u8fd0\u884c\uff1a\\r\\n\\r\\n```\\r\\n$ arm-eabi-gdb gdb_example\u2026\\r\\n```\\r\\n\\r\\n\u4e3b\u673a\u7684GDB\u4e2d\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u4ee5\u8fde\u63a5\u76ee\u6807\u677f\uff1a\\r\\n\\r\\n```\\r\\n(gdb) target remote 192.168.1.20:1234\\r\\nRemote debugging using 192.168.1.20:1234\\r\\n...\\r\\n0x400007b0 in ??  ()\\r\\n```\\r\\n\\r\\n\u5982\u679c\u662fAndroid\u7684adb forward\uff0c\u5219\u4e0a\u8ff0target remote 192.168.1.20\uff1a1234\u4e2d\u7684IP\u5730\u5740\u53ef\u4ee5\u53bb\u6389\uff0c\u56e0\u4e3a\u5b83\u53d8\u6210\u76f4\u63a5\u8fde\u63a5\u672c\u673a\u4e86\uff0c\u53ef\u76f4\u63a5\u5199\u6210target remote\uff1a1234\u3002\\r\\n\\r\\n\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5c06\u65ad\u70b9\u8bbe\u7f6e\u5728increase_one\uff08&dat\uff09\uff1b\u8fd9\u4e00\u884c\uff1a\\r\\n\\r\\n```\\r\\n(gdb) b gdb_example.c:16\\r\\nBreakpoint 1 at 0x8390: file gdb_example.c, line 16.\\r\\n```\\r\\n\\r\\n\u901a\u8fc7c\u547d\u4ee4\u7ee7\u7eed\u8fd0\u884c\u76ee\u6807\u677f\u4e0a\u7684\u7a0b\u5e8f\uff0c\u53d1\u751f\u65ad\u70b9\uff1a\\r\\n\\r\\n```\\r\\n(gdb) c\\r\\nContinuing.\\r\\n...\\r\\nBreakpoint 1, main (argc=1, argv=0xbead4eb4) at gdb_example.c:16\\r\\n16increase_one(&dat);\\r\\n```\\r\\n\\r\\n\u8fd0\u884cn\u547d\u4ee4\u6267\u884c\u5b8cincrease_one\uff08&dat\uff09\uff1b\u518d\u67e5\u770bdat\u7684\u503c\uff1a\\r\\n\\r\\n```\\r\\n(gdb) n\\r\\n19increase_one(p); (gdb) p dat\\r\\n$1 = 1\\r\\n```\\r\\n\\r\\n\u53d1\u73b0dat\u53d8\u62101\u3002\u7ee7\u7eed\u8fd0\u884cc\u547d\u4ee4\uff0c\u7531\u4e8e\u5373\u5c06\u8bbf\u95ee\u7a7a\u6307\u9488\uff0cgdb_example\u5c06\u5d29\u6e83\uff1a\\r\\n\\r\\n```\\r\\n (gdb) c\\r\\nContinuing.\\r\\nProgram received signal SIGSEGV, Segmentation fault.\\r\\n0x0000834c in increase_one (data=0x0) at gdb_example.c:8\\r\\n8*data = *data + 1;\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u901a\u8fc7bt\u547d\u4ee4\u53ef\u4ee5\u62ff\u5230backtrace\uff1a\\r\\n\\r\\n```\\r\\n(gdb) bt\\r\\n#0  0x0000834c in increase_one (data=0x0) at gdb_example.c:8\\r\\n#1  0x000083a4 in main (argc=1, argv=0xbead4eb4) at gdb_example.c:19\\r\\n```\\r\\n\\r\\n\u901a\u8fc7info reg\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u65f6\u7684\u5bc4\u5b58\u5668\u503c\uff1a\\r\\n\\r\\n```\\r\\n(gdb) info reg\\r\\nr00x0 0\\r\\nr10xbead4eb43199028916\\r\\nr20x1 1\\r\\nr30x0 0\\r\\nr40x4001e5e01073866208\\r\\nr50x0 0\\r\\nr60x826c33388\\r\\nr70x0 0\\r\\nr80x0 0\\r\\nr90x0 0\\r\\nr10 0x400250001073893376\\r\\nr11 0xbead4d443199028548\\r\\nr12 0xbead4d483199028552\\r\\nsp 0xbead4d300xbead4d30\\r\\nlr 0x83a433700\\r\\npc 0x834c0x834c <increase_one+24>\\r\\nfps 0x0 0\\r\\ncpsr 0x600000101610612752\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.5\u3000Linux\u4e0b\u7684C\u7f16\u7a0b\u7279\u70b9","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.5\u3000Linux\u4e0b\u7684C\u7f16\u7a0b\u7279\u70b9","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.5\u3000Linux\u4e0b\u7684C\u7f16\u7a0b\u7279\u70b9.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.5\u3000Linux\u4e0b\u7684C\u7f16\u7a0b\u7279\u70b9.md","title":"3.5.1\u3000Linux\u7f16\u7801\u98ce\u683c","description":"Linux\u6709\u72ec\u7279\u7684\u7f16\u7801\u98ce\u683c\uff0c\u5728\u5185\u6838\u6e90\u4ee3\u7801\u4e0b\u5b58\u5728\u4e00\u4e2a\u6587\u4ef6Documentation/CodingStyle\uff0c\u8fdb\u884c\u4e86\u6bd4\u8f83\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002","date":"2025-09-15T14:44:14.917Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":18.55,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.11\u3000\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668"}},"content":"Linux\u6709\u72ec\u7279\u7684\u7f16\u7801\u98ce\u683c\uff0c\u5728\u5185\u6838\u6e90\u4ee3\u7801\u4e0b\u5b58\u5728\u4e00\u4e2a\u6587\u4ef6Documentation/CodingStyle\uff0c\u8fdb\u884c\u4e86\u6bd4\u8f83\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002\\r\\n\\r\\nLinux\u7a0b\u5e8f\u7684\u547d\u540d\u4e60\u60ef\u548cWindows\u7a0b\u5e8f\u7684\u547d\u540d\u4e60\u60ef\u53ca\u8457\u540d\u7684\u5308\u7259\u5229\u547d\u540d\u6cd5\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002\\r\\n\\r\\n\u5728Windows\u7a0b\u5e8f\u4e2d\uff0c\u4e60\u60ef\u4ee5\u5982\u4e0b\u65b9\u5f0f\u547d\u540d\u5b8f\u3001\u53d8\u91cf\u548c\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\n#define PI 3.1415926     /* \u7528\u5927\u5199\u5b57\u6bcd\u4ee3\u8868\u5b8f\\r\\n\\r\\n\\r\\n */\\r\\nint minValue, maxValue;  /* \u53d8\u91cf\uff1a\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5168\u5c0f\u5199\uff0c\u5176\u540e\u5355\u8bcd\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u5927\u5199\\r\\n\\r\\n\\r\\n */\\r\\nvoid SendData(void);     /* \u51fd\u6570\uff1a\u6240\u6709\u5355\u8bcd\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u90fd\u5927\u5199\\r\\n\\r\\n\\r\\n */\\r\\n```\\r\\n\\r\\n\u8fd9\u79cd\u547d\u540d\u65b9\u5f0f\u5728\u7a0b\u5e8f\u5458\u4e2d\u975e\u5e38\u76db\u884c\uff0c\u610f\u601d\u8868\u8fbe\u6e05\u6670\u4e14\u907f\u514d\u4e86\u5308\u7259\u5229\u6cd5\u7684\u81c3\u80bf\uff0c\u5355\u8bcd\u4e4b\u95f4\u901a\u8fc7\u9996\u5b57\u6bcd\u5927\u5199\u6765\u533a\u5206\u3002\u901a\u8fc7\u7b2c1\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u662f\u5426\u5927\u5199\u53ef\u4ee5\u533a\u5206\u540d\u79f0\u5c5e\u4e8e\u53d8\u91cf\u8fd8\u662f\u5c5e\u4e8e\u51fd\u6570\uff0c\u800c\u770b\u5230\u6574\u4e32\u7684\u5927\u5199\u5b57\u6bcd\u53ef\u4ee5\u65ad\u5b9a\u4e3a\u5b8f\u3002\u5b9e\u9645\u4e0a\uff0cWindows\u7684\u547d\u540d\u4e60\u60ef\u5e76\u975e\u4ec5\u9650\u4e8eWindows\u7f16\u7a0b\uff0c\u8bb8\u591a\u9886\u57df\u7684\u7a0b\u5e8f\u5f00\u53d1\u90fd\u9075\u7167\u6b64\u4e60\u60ef\u3002\\r\\n\\r\\n\u4f46\u662fLinux\u4e0d\u4ee5\u8fd9\u79cd\u4e60\u60ef\u547d\u540d\uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4e00\u6bb5\u7a0b\u5e8f\uff0c\u5728Linux\u4e2d\u5b83\u4f1a\u88ab\u547d\u540d\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define PI 3.1415926\\r\\nint min_value, max_value;\\r\\nvoid send_data(void);\\r\\n```\\r\\n\\r\\n\u5728\u4e0a\u8ff0\u547d\u540d\u65b9\u5f0f\u4e2d\uff0c\u4e0b\u5212\u7ebf\u5927\u884c\u5176\u9053\uff0c\u4e0d\u6309\u7167Windows\u6240\u91c7\u7528\u7684\u7528\u9996\u5b57\u6bcd\u5927\u5199\u6765\u533a\u5206\u5355\u8bcd\u7684\u65b9\u5f0f\u3002Linux\u7684\u547d\u540d\u4e60\u60ef\u4e0eWindows\u547d\u540d\u4e60\u60ef\u5404\u6709\u5343\u79cb\uff0c\u4f46\u662f\u65e2\u7136\u672c\u4e66\u548c\u672c\u4e66\u7684\u8bfb\u8005\u7acb\u8db3\u4e8e\u7f16\u5199Linux\u7a0b\u5e8f\uff0c\u4ee3\u7801\u98ce\u683c\u7406\u5e94\u4e0eLinux\u5f00\u53d1\u793e\u533a\u4fdd\u6301\u4e00\u81f4\u3002\\r\\n\\r\\nLinux\u7684\u4ee3\u7801\u7f29\u8fdb\u4f7f\u7528\u201cTAB\u201d\u3002\\r\\n\\r\\nLinux\u4e2d\u4ee3\u7801\u62ec\u53f7\u201c{\u201d\u548c\u201c}\u201d\u7684\u4f7f\u7528\u539f\u5219\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u5bf9\u4e8e\u7ed3\u6784\u4f53\u3001if/for/while/switch\u8bed\u53e5\uff0c\u201c{\u201d\u4e0d\u53e6\u8d77\u4e00\u884c\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nstruct var_data {\\r\\n   int len;\\r\\n   char data[0];\\r\\n};\\r\\nif (a == b) {\\r\\n     a = c;\\r\\n     d = a;\\r\\n}\\r\\nfor (i = 0; i < 10; i++) {\\r\\n     a = c;\\r\\n     d = a;\\r\\n}\\r\\n```\\r\\n\\r\\n2\uff09\u5982\u679cif\u3001for\u5faa\u73af\u540e\u53ea\u67091\u884c\uff0c\u4e0d\u8981\u52a0\u201c{\u201d\u548c\u201c}\u201d\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nfor (i = 0; i < 10; i++) {\\r\\n      a = c;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5e94\u8be5\u6539\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nfor (i = 0; i < 10; i++)\\r\\n      a = c;\\r\\n```\\r\\n\\r\\n3\uff09if\u548celse\u6df7\u7528\u7684\u60c5\u51b5\u4e0b\uff0celse\u8bed\u53e5\u4e0d\u53e6\u8d77\u4e00\u884c\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nif (x == y) {\\r\\n    ...\\r\\n} else if (x > y) {\\r\\n    ...\\r\\n} else {\\r\\n  ...\\r\\n}\\r\\n```\\r\\n\\r\\n4\uff09\u5bf9\u4e8e\u51fd\u6570\uff0c\u201c{\u201d\u53e6\u8d77\u4e00\u884c\uff0c\u8b6c\u5982\uff1a\\r\\n\\r\\n```\\r\\nint add(int a, int b)\\r\\n{\\r\\n     return a + b;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728switch/case\u8bed\u53e5\u65b9\u9762\uff0cLinux\u5efa\u8baeswitch\u548ccase\u5bf9\u9f50\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nswitch (suffix) {\\r\\ncase \'G\':\\r\\ncase \'g\':\\r\\n      mem <<= 30;\\r\\n      break;\\r\\ncase \'M\':\\r\\ncase \'m\':\\r\\n      mem <<= 20;\\r\\n      break;\\r\\ncase \'K\':\\r\\ncase \'k\':\\r\\n      mem <<= 10;\\r\\n      /* fall through */\\r\\ndefault:\\r\\n      break;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5185\u6838\u4e0b\u7684Documentation/CodingStyle\u63cf\u8ff0\u4e86Linux\u5185\u6838\u5bf9\u7f16\u7801\u98ce\u683c\u7684\u8981\u6c42\uff0c\u5185\u6838\u4e0b\u7684scripts/checkpatch.pl\u63d0\u4f9b\u4e861\u4e2a\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\u7684\u811a\u672c\u3002\u5982\u679c\u4f7f\u7528scripts/checkpatch.pl\u68c0\u67e5\u5305\u542b\u5982\u4e0b\u4ee3\u7801\u5757\u7684\u6e90\u7a0b\u5e8f\uff1a\\r\\n\\r\\n```\\r\\nfor (i = 0; i < 10; i++) {\\r\\n      a = c;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5c31\u4f1a\u4ea7\u751f\u201cWARNING\uff1abraces{}are not necessary for single statement blocks\u201d\u7684\u8b66\u544a\u3002\\r\\n\\r\\n\u5728\u5de5\u7a0b\u9636\u6bb5\uff0c\u4e00\u822c\u53ef\u4ee5\u5728SCM\u8f6f\u4ef6\u7684\u670d\u52a1\u5668\u7aef\u4f7f\u80fdpre-commit hook\uff0c\u81ea\u52a8\u68c0\u67e5\u5de5\u7a0b\u5e08\u63d0\u4ea4\u7684\u4ee3\u7801\u662f\u5426\u7b26\u5408Linux\u7684\u7f16\u7801\u98ce\u683c\uff0c\u5982\u679c\u4e0d\u7b26\u5408\uff0c\u5219\u81ea\u52a8\u62e6\u622a\u3002git\u7684pre-commit hook\u53ef\u4ee5\u8fd0\u884c\u5728\u672c\u5730\u4ee3\u7801\u4ed3\u5e93\u4e2d\uff0c\u5982Ben Dooks\u5b8c\u6210\u7684\u4e00\u4e2a\u7248\u672c\uff1a\\r\\n\\r\\n```\\r\\n#!/bin/sh\\r\\n#\\r\\n# pre-commit hook to run check-patch on the output and stop any commits\\r\\n# that do not pass. Note, only for git-commit, and not for any of the\\r\\n# other scenarios\\r\\n#\\r\\n# Copyright 2010 Ben Dooks, <ben-linux@fluff.org>\\r\\nif git rev-parse --verify HEAD 2>/dev/null >/dev/null\\r\\nthen\\r\\n    against=HEAD\\r\\nelse\\r\\n    # Initial commit: diff against an empty tree object\\r\\n    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904\\r\\nfi\\r\\ngit diff --cached $against -- | ./scripts/checkpatch.pl --no-signoff -\\r\\n```\\r\\n\\r\\n# 3.5.2\u3000GNU C\u4e0eANSI C\\r\\n\\r\\nLinux\u4e0a\u53ef\u7528\u7684C\u7f16\u8bd1\u5668\u662fGNU C\u7f16\u8bd1\u5668\uff0c\u5b83\u5efa\u7acb\u5728\u81ea\u7531\u8f6f\u4ef6\u57fa\u91d1\u4f1a\u7684\u7f16\u7a0b\u8bb8\u53ef\u8bc1\u7684\u57fa\u7840\u4e0a\uff0c\u56e0\u6b64\u53ef\u4ee5\u81ea\u7531\u53d1\u5e03\u3002GNU C\u5bf9\u6807\u51c6C\u8fdb\u884c\u4e00\u7cfb\u5217\u6269\u5c55\uff0c\u4ee5\u589e\u5f3a\u6807\u51c6C\u7684\u529f\u80fd\u3002\\r\\n\\r\\n## 1.\u96f6\u957f\u5ea6\u548c\u53d8\u91cf\u957f\u5ea6\u6570\u7ec4\\r\\n\\r\\nGNU C\u5141\u8bb8\u4f7f\u7528\u96f6\u957f\u5ea6\u6570\u7ec4\uff0c\u5728\u5b9a\u4e49\u53d8\u957f\u5bf9\u8c61\u7684\u5934\u7ed3\u6784\u65f6\uff0c\u8fd9\u4e2a\u7279\u6027\u975e\u5e38\u6709\u7528\u3002\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nstruct var_data {\\r\\n   int len;\\r\\n   char data[0];\\r\\n};\\r\\n```\\r\\n\\r\\nchar data[0]\u4ec5\u4ec5\u610f\u5473\u7740\u7a0b\u5e8f\u4e2d\u901a\u8fc7var_data\u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684data[index]\u6210\u5458\u53ef\u4ee5\u8bbf\u95eelen\u4e4b\u540e\u7684\u7b2cindex\u4e2a\u5730\u5740\uff0c\u5b83\u5e76\u6ca1\u6709\u4e3adata[]\u6570\u7ec4\u5206\u914d\u5185\u5b58\uff0c\u56e0\u6b64sizeof\uff08struct var_data\uff09=sizeof\uff08int\uff09\u3002\\r\\n\\r\\n\u5047\u8bbestruct var_data\u7684\u6570\u636e\u57df\u5c31\u4fdd\u5b58\u5728struct var_data\u7d27\u63a5\u7740\u7684\u5185\u5b58\u533a\u57df\u4e2d\uff0c\u5219\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u53ef\u4ee5\u904d\u5386\u8fd9\u4e9b\u6570\u636e\uff1a\\r\\n\\r\\n```\\r\\nstruct var_data s;\\r\\n...\\r\\nfor (i = 0; i < s.len; i++)\\r\\n    printf(\\"%02x\\", s.data[i]);\\r\\n```\\r\\n\\r\\nGNU C\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u75281\u4e2a\u53d8\u91cf\u5b9a\u4e49\u6570\u7ec4\uff0c\u4f8b\u5982\u5982\u4e0b\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u201cdouble x[n]\u201d\uff1a\\r\\n\\r\\n```\\r\\nint main (int argc, char *argv[])\\r\\n{\\r\\n    int i, n = argc;\\r\\n    double x[n];\\r\\n    for (i = 0; i < n; i++)\\r\\n       x[i] = i;\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n## 2.case\u8303\u56f4\\r\\n\\r\\nGNU C\u652f\u6301case x\u2026y\u8fd9\u6837\u7684\u8bed\u6cd5\uff0c\u533a\u95f4[x\uff0cy]\u4e2d\u7684\u6570\u90fd\u4f1a\u6ee1\u8db3\u8fd9\u4e2acase\u7684\u6761\u4ef6\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nswitch (ch) {\\r\\ncase \'0\'... \'9\': c -= \'0\';\\r\\n   break;\\r\\ncase \'a\'... \'f\': c -= \'a\' - 10;\\r\\n   break;\\r\\ncase \'A\'... \'F\': c -= \'A\' - 10;\\r\\n   break;\\r\\n}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u4e2d\u7684case\'0\'...\'9\'\u7b49\u4ef7\u4e8e\u6807\u51c6C\u4e2d\u7684\uff1a\\r\\n\\r\\n```\\r\\ncase \'0\': case \'1\': case \'2\': case \'3\': case \'4\':\\r\\ncase \'5\': case \'6\': case \'7\': case \'8\': case \'9\':\\r\\n```\\r\\n\\r\\n## 3.\u8bed\u53e5\u8868\u8fbe\u5f0f\\r\\n\\r\\nGNU C\u628a\u5305\u542b\u5728\u62ec\u53f7\u4e2d\u7684\u590d\u5408\u8bed\u53e5\u770b\u6210\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a\u8bed\u53e5\u8868\u8fbe\u5f0f\uff0c\u5b83\u53ef\u4ee5\u51fa\u73b0\u5728\u4efb\u4f55\u5141\u8bb8\u8868\u8fbe\u5f0f\u7684\u5730\u65b9\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8bed\u53e5\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u539f\u672c\u53ea\u80fd\u5728\u590d\u5408\u8bed\u53e5\u4e2d\u4f7f\u7528\u7684\u5faa\u73af\u3001\u5c40\u90e8\u53d8\u91cf\u7b49\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\n#define min_t(type,x,y) \\\\\\r\\n(\uff5b\\r\\n\\r\\n\\r\\ntype _ _x =(x);type _ _y = (y); _ _x<_ _y  _ _x: _ _y; })\\r\\nint ia, ib, mini;\\r\\nfloat fa, fb, minf;\\r\\nmini = min_t(int, ia, ib);\\r\\nminf = min_t(float, fa, fb);\\r\\n```\\r\\n\\r\\n\u56e0\u4e3a\u91cd\u65b0\u5b9a\u4e49\u4e86__xx\u548c__y\u8fd9\u4e24\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u6240\u4ee5\u7528\u4e0a\u8ff0\u65b9\u5f0f\u5b9a\u4e49\u7684\u5b8f\u5c06\u4e0d\u4f1a\u6709\u526f\u4f5c\u7528\u3002\u5728\u6807\u51c6C\u4e2d\uff0c\u5bf9\u5e94\u7684\u5982\u4e0b\u5b8f\u5219\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\uff1a\\r\\n\\r\\n```\\r\\n#define min(x,y) ((x) < (y)   (x) : (y))\\r\\n```\\r\\n\\r\\n\u4ee3\u7801min\uff08++ia\uff0c++ib\uff09\u4f1a\u5c55\u5f00\u4e3a\uff08\uff08++ia\uff09<\uff08++ib\uff09\uff08++ia\uff09\uff1a\uff08++ib\uff09\uff09\uff0c\u4f20\u5165\u5b8f\u7684\u201c\u53c2\u6570\u201d\u589e\u52a0\u4e24\u6b21\u3002\\r\\n\\r\\n## 4.typeof\u5173\u952e\u5b57\\r\\n\\r\\ntypeof\uff08x\uff09\u8bed\u53e5\u53ef\u4ee5\u83b7\u5f97x\u7684\u7c7b\u578b\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u501f\u52a9typeof\u91cd\u65b0\u5b9a\u4e49min\u8fd9\u4e2a\u5b8f\\r\\n\\r\\n```\\r\\n#define min(x,y) ({         \\\\\\r\\n const typeof(x) _x = (x);  \\\\\\r\\n const typeof(y) _y = (y);  \\\\\\r\\n (void) (&_x == &_y);       \\\\\\r\\n _x < _y   _x : _y; })\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u4e0d\u9700\u8981\u50cfmin_t\uff08type\uff0cx\uff0cy\uff09\u90a3\u4e2a\u5b8f\u90a3\u6837\u628atype\u4f20\u5165\uff0c\u56e0\u4e3a\u901a\u8fc7typeof\uff08x\uff09\u3001typeof\uff08y\uff09\u53ef\u4ee5\u83b7\u5f97type\u3002\u4ee3\u7801\u884c\uff08void\uff09\uff08&_x==&_y\uff09\u7684\u4f5c\u7528\u662f\u68c0\u67e5_x\u548c_y\u7684\u7c7b\u578b\u662f\u5426\u4e00\u81f4\u3002\\r\\n\\r\\n## 5.\u53ef\u53d8\u53c2\u6570\u5b8f\\r\\n\\r\\n\u6807\u51c6C\u5c31\u652f\u6301\u53ef\u53d8\u53c2\u6570\u51fd\u6570\uff0c\u610f\u5473\u7740\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e0d\u56fa\u5b9a\u7684\uff0c\u4f8b\u5982printf\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint printf( const char *format [, argument]... );\\r\\n```\\r\\n\\r\\n\u800c\u5728GNU C\u4e2d\uff0c\u5b8f\u4e5f\u53ef\u4ee5\u63a5\u53d7\u53ef\u53d8\u6570\u76ee\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\n#define pr_debug(fmt,arg...) \\\\\\r\\n             printk(fmt,##arg)\\r\\n```\\r\\n\\r\\n\u8fd9\u91ccarg\u8868\u793a\u5176\u4f59\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u4ee5\u53ca\u53c2\u6570\u4e4b\u95f4\u7684\u9017\u53f7\u6784\u6210arg\u7684\u503c\uff0c\u5728\u5b8f\u6269\u5c55\u65f6\u66ff\u6362arg\uff0c\u5982\u4e0b\u5217\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\npr_debug(\\"%s:%d\\",filename,line)\\r\\n```\\r\\n\\r\\n\u4f1a\u88ab\u6269\u5c55\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nprintk(\\"%s:%d\\", filename, line)\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u201c##\u201d\u662f\u4e3a\u4e86\u5904\u7406arg\u4e0d\u4ee3\u8868\u4efb\u4f55\u53c2\u6570\u7684\u60c5\u51b5\uff0c\u8fd9\u65f6\u5019\uff0c\u524d\u9762\u7684\u9017\u53f7\u5c31\u53d8\u5f97\u591a\u4f59\u4e86\u3002\u4f7f\u7528\u201c##\u201d\u4e4b\u540e\uff0cGNU C\u9884\u5904\u7406\u5668\u4f1a\u4e22\u5f03\u524d\u9762\u7684\u9017\u53f7\uff0c\u8fd9\u6837\uff0c\u4e0b\u5217\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\npr_debug(\\"success!\\\\n\\")\\r\\n```\\r\\n\\r\\n\u4f1a\u88ab\u6b63\u786e\u5730\u6269\u5c55\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nprintk(\\"success!\\\\n\\")\\r\\n```\\r\\n\\r\\n\u800c\u4e0d\u662f\uff1a\\r\\n\\r\\n```\\r\\nprintk(\\"success!\\\\n\\",)\\r\\n```\\r\\n\\r\\n## 6.\u6807\u53f7\u5143\u7d20\\r\\n\\r\\n\u6807\u51c6C\u8981\u6c42\u6570\u7ec4\u6216\u7ed3\u6784\u4f53\u7684\u521d\u59cb\u5316\u503c\u5fc5\u987b\u4ee5\u56fa\u5b9a\u7684\u987a\u5e8f\u51fa\u73b0\uff0c\u5728GNU C\u4e2d\uff0c\u901a\u8fc7\u6307\u5b9a\u7d22\u5f15\u6216\u7ed3\u6784\u4f53\u6210\u5458\u540d\uff0c\u5141\u8bb8\u521d\u59cb\u5316\u503c\u4ee5\u4efb\u610f\u987a\u5e8f\u51fa\u73b0\u3002\\r\\n\\r\\n\u6307\u5b9a\u6570\u7ec4\u7d22\u5f15\u7684\u65b9\u6cd5\u662f\u5728\u521d\u59cb\u5316\u503c\u524d\u6dfb\u52a0\u201c[INDEX]=\u201d\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u201c[FIRST...LAST]=\u201d\u7684\u5f62\u5f0f\u6307\u5b9a\u4e00\u4e2a\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u5e76\u628a\u5176\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8d4b\u503c\u4e3a0\uff1a\\r\\n\\r\\n```\\r\\nunsigned char data[MAX] = { [0 ... MAX-1] = 0 };\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u7684\u4ee3\u7801\u501f\u52a9\u7ed3\u6784\u4f53\u6210\u5458\u540d\u521d\u59cb\u5316\u7ed3\u6784\u4f53\uff1a\\r\\n\\r\\n```\\r\\nstruct file_operations ext2_file_operations = {\\r\\n   llseek: generic_file_llseek,\\r\\n   read: generic_file_read,\\r\\n   write: generic_file_write,\\r\\n   ioctl: ext2_ioctl,\\r\\n   mmap: generic_file_mmap,\\r\\n   open: generic_file_open,\\r\\n   release: ext2_release_file,\\r\\n   fsync: ext2_sync_file,\\r\\n};\\r\\n```\\r\\n\\r\\n\u4f46\u662f\uff0cLinux 2.6\u63a8\u8350\u7c7b\u4f3c\u7684\u4ee3\u7801\u5e94\u8be5\u5c3d\u91cf\u91c7\u7528\u6807\u51c6C\u7684\u65b9\u5f0f\\r\\n\\r\\n```\\r\\nstruct file_operations ext2_file_operations = {\\r\\n     .llseek      = generic_file_llseek,\\r\\n     .read        = generic_file_read,\\r\\n     .write       = generic_file_write,\\r\\n     .aio_read    = generic_file_aio_read,\\r\\n     .aio_write   = generic_file_aio_write,\\r\\n     .ioct        = ext2_ioctl,\\r\\n     .mmap        = generic_file_mmap,\\r\\n     .open        = generic_file_open,\\r\\n     .release = ext2_release_file,\\r\\n     .fsync       = ext2_sync_file,\\r\\n     .readv       = generic_file_readv,\\r\\n     .writev      = generic_file_writev,\\r\\n     .sendfile    = generic_file_sendfile,\\r\\n};\\r\\n```\\r\\n\\r\\n## 7.\u5f53\u524d\u51fd\u6570\u540d\\r\\n\\r\\nGNU C\u9884\u5b9a\u4e49\u4e86\u4e24\u4e2a\u6807\u8bc6\u7b26\u4fdd\u5b58\u5f53\u524d\u51fd\u6570\u7684\u540d\u5b57\uff0c__FUNCTION__\u4fdd\u5b58\u51fd\u6570\u5728\u6e90\u7801\u4e2d\u7684\u540d\u5b57\uff0c__PRETTY_FUNCTION__\u4fdd\u5b58\u5e26\u8bed\u8a00\u7279\u8272\u7684\u540d\u5b57\u3002\u5728C\u51fd\u6570\u4e2d\uff0c\u8fd9\u4e24\u4e2a\u540d\u5b57\u662f\u76f8\u540c\u7684\u3002\\r\\n\\r\\n```\\r\\nvoid example()\\r\\n{\\r\\n   printf(\\"This is function:%s\\", __FUNCTION__);\\r\\n}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u4e2d\u7684__FUNCTION__\u610f\u5473\u7740\u5b57\u7b26\u4e32\u201cexample\u201d\u3002C99\u5df2\u7ecf\u652f\u6301__func__\u5b8f\uff0c\u56e0\u6b64\u5efa\u8bae\u5728Linux\u7f16\u7a0b\u4e2d\u4e0d\u518d\u4f7f\u7528__FUNCTION__\uff0c\u800c\u8f6c\u800c\u4f7f\u7528__func__\uff1a\\r\\n\\r\\n```\\r\\nvoid example(void)\\r\\n{\\r\\n   printf(\\"This is function:%s\\", __func__);\\r\\n}\\r\\n```\\r\\n\\r\\n## 8.\u7279\u6b8a\u5c5e\u6027\u58f0\u660e\\r\\n\\r\\nGNU C\u5141\u8bb8\u58f0\u660e\u51fd\u6570\u3001\u53d8\u91cf\u548c\u7c7b\u578b\u7684\u7279\u6b8a\u5c5e\u6027\uff0c\u4ee5\u4fbf\u624b\u52a8\u4f18\u5316\u4ee3\u7801\u548c\u5b9a\u5236\u4ee3\u7801\u68c0\u67e5\u7684\u65b9\u6cd5\u3002\u8981\u6307\u5b9a\u4e00\u4e2a\u58f0\u660e\u7684\u5c5e\u6027\uff0c\u53ea\u9700\u8981\u5728\u58f0\u660e\u540e\u6dfb\u52a0__attribute__\uff08\uff08ATTRIBUTE\uff09\uff09\u3002\u5176\u4e2dATTRIBUTE\u4e3a\u5c5e\u6027\u8bf4\u660e\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u5c5e\u6027\uff0c\u5219\u4ee5\u9017\u53f7\u5206\u9694\u3002GNU C\u652f\u6301noreturn\u3001format\u3001section\u3001aligned\u3001packed\u7b49\u5341\u591a\u4e2a\u5c5e\u6027\\r\\n\\r\\nnoreturn\u5c5e\u6027\u4f5c\u7528\u4e8e\u51fd\u6570\uff0c\u8868\u793a\u8be5\u51fd\u6570\u4ece\u4e0d\u8fd4\u56de\u3002\u8fd9\u4f1a\u8ba9\u7f16\u8bd1\u5668\u4f18\u5316\u4ee3\u7801\uff0c\u5e76\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u8b66\u544a\u4fe1\u606f\u3002\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\n# define ATTRIB_NORET  __attribute__((noreturn)) ....\\r\\nasmlinkage NORET_TYPE void do_exit(long error_code) ATTRIB_NORET;\\r\\n```\\r\\n\\r\\nformat\u5c5e\u6027\u4e5f\u7528\u4e8e\u51fd\u6570\uff0c\u8868\u793a\u8be5\u51fd\u6570\u4f7f\u7528printf\u3001scanf\u6216strftime\u98ce\u683c\u7684\u53c2\u6570\uff0c\u6307\u5b9aformat\u5c5e\u6027\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u6839\u636e\u683c\u5f0f\u4e32\u68c0\u67e5\u53c2\u6570\u7c7b\u578b\u3002\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nasmlinkage int printk(const char * fmt, ...) __attribute__ ((format (printf, 1, 2)));\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684\u7b2c1\u4e2a\u53c2\u6570\u662f\u683c\u5f0f\u4e32\uff0c\u4ece\u7b2c2\u4e2a\u53c2\u6570\u5f00\u59cb\u90fd\u4f1a\u6839\u636eprintf\uff08\uff09\u51fd\u6570\u7684\u683c\u5f0f\u4e32\u89c4\u5219\u68c0\u67e5\u53c2\u6570\u3002\\r\\n\\r\\nunused\u5c5e\u6027\u4f5c\u7528\u4e8e\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u8868\u793a\u8be5\u51fd\u6570\u6216\u53d8\u91cf\u53ef\u80fd\u4e0d\u4f1a\u7528\u5230\uff0c\u8fd9\u4e2a\u5c5e\u6027\u53ef\u4ee5\u907f\u514d\u7f16\u8bd1\u5668\u4ea7\u751f\u8b66\u544a\u4fe1\u606f\u3002\\r\\n\\r\\naligned\u5c5e\u6027\u7528\u4e8e\u53d8\u91cf\u3001\u7ed3\u6784\u4f53\u6216\u8054\u5408\u4f53\uff0c\u6307\u5b9a\u53d8\u91cf\u3001\u7ed3\u6784\u4f53\u6216\u8054\u5408\u4f53\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nstruct example_struct {\\r\\n    char a;\\r\\n    int b;\\r\\n    long c;\\r\\n} __attribute__((aligned(4)));\\r\\n```\\r\\n\\r\\n\u8868\u793a\u8be5\u7ed3\u6784\u7c7b\u578b\u7684\u53d8\u91cf\u4ee54\u5b57\u8282\u5bf9\u9f50\u3002\\r\\n\\r\\npacked\u5c5e\u6027\u4f5c\u7528\u4e8e\u53d8\u91cf\u548c\u7c7b\u578b\uff0c\u7528\u4e8e\u53d8\u91cf\u6216\u7ed3\u6784\u4f53\u6210\u5458\u65f6\u8868\u793a\u4f7f\u7528\u6700\u5c0f\u53ef\u80fd\u7684\u5bf9\u9f50\uff0c\u7528\u4e8e\u679a\u4e3e\u3001\u7ed3\u6784\u4f53\u6216\u8054\u5408\u4f53\u7c7b\u578b\u65f6\u8868\u793a\u8be5\u7c7b\u578b\u4f7f\u7528\u6700\u5c0f\u7684\u5185\u5b58\u3002\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nstruct example_struct {\\r\\n    char a;\\r\\n    int b;\\r\\n    long c  __attribute__((packed));\\r\\n}; \\r\\n```\\r\\n\\r\\n\u7f16\u8bd1\u5668\u5bf9\u7ed3\u6784\u4f53\u6210\u5458\u53ca\u53d8\u91cf\u5bf9\u9f50\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u66f4\u5feb\u5730\u8bbf\u95ee\u7ed3\u6784\u4f53\u6210\u5458\u53ca\u53d8\u91cf\u5360\u636e\u7684\u5185\u5b58\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e00\u4e2a32\u4f4d\u7684\u6574\u578b\u53d8\u91cf\uff0c\u82e5\u4ee54\u5b57\u8282\u65b9\u5f0f\u5b58\u653e\uff08\u5373\u4f4e\u4e24\u4f4d\u5730\u5740\u4e3a00\uff09\uff0c\u5219CPU\u5728\u4e00\u4e2a\u603b\u7ebf\u5468\u671f\u5185\u5c31\u53ef\u4ee5\u8bfb\u53d632\u4f4d\uff1b\u5426\u5219\uff0cCPU\u9700\u8981\u4e24\u4e2a\u603b\u7ebf\u5468\u671f\u624d\u80fd\u8bfb\u53d632\u4f4d\\r\\n\\r\\n## 9.\u5185\u5efa\u51fd\u6570\\r\\n\\r\\nGNU C\u63d0\u4f9b\u4e86\u5927\u91cf\u5185\u5efa\u51fd\u6570\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u662f\u6807\u51c6C\u5e93\u51fd\u6570\u7684GNU C\u7f16\u8bd1\u5668\u5185\u5efa\u7248\u672c\uff0c\u4f8b\u5982memcpy\uff08\uff09\u7b49\uff0c\u5b83\u4eec\u4e0e\u5bf9\u5e94\u7684\u6807\u51c6C\u5e93\u51fd\u6570\u529f\u80fd\u76f8\u540c\u3002\\r\\n\\r\\n\u4e0d\u5c5e\u4e8e\u5e93\u51fd\u6570\u7684\u5176\u4ed6\u5185\u5efa\u51fd\u6570\u7684\u547d\u540d\u901a\u5e38\u4ee5__builtin\u5f00\u59cb\uff0c\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\n\xb7\u5185\u5efa\u51fd\u6570__builtin_return_address\uff08LEVEL\uff09\u8fd4\u56de\u5f53\u524d\u51fd\u6570\u6216\u5176\u8c03\u7528\u8005\u7684\u8fd4\u56de\u5730\u5740\uff0c\u53c2\u6570LEVEL\u6307\u5b9a\u8c03\u7528\u6808\u7684\u7ea7\u6570\uff0c\u59820\u8868\u793a\u5f53\u524d\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\uff0c1\u8868\u793a\u5f53\u524d\u51fd\u6570\u7684\u8c03\u7528\u8005\u7684\u8fd4\u56de\u5730\u5740\u3002\\r\\n\\r\\n\xb7\u5185\u5efa\u51fd\u6570__builtin_constant_p\uff08EXP\uff09\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u503c\u662f\u5426\u4e3a\u7f16\u8bd1\u65f6\u5e38\u6570\uff0c\u5982\u679c\u53c2\u6570EXP\u7684\u503c\u662f\u5e38\u6570\uff0c\u51fd\u6570\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\\r\\n\\r\\n\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u68c0\u6d4b\u7b2c1\u4e2a\u53c2\u6570\u662f\u5426\u4e3a\u7f16\u8bd1\u65f6\u5e38\u6570\u4ee5\u786e\u5b9a\u91c7\u7528\u53c2\u6570\u7248\u672c\u8fd8\u662f\u975e\u53c2\u6570\u7248\u672c\\r\\n\\r\\n```\\r\\n#define test_bit(nr,addr) \\\\\\r\\n(__builtin_constant_p(nr)  \\\\\\r\\nconstant_test_bit((nr),(addr)) : \\\\\\r\\nvariable_test_bit((nr),(addr)))\\r\\n```\\r\\n\\r\\n\xb7\u5185\u5efa\u51fd\u6570__builtin_expect\uff08EXP\uff0cC\uff09\u7528\u4e8e\u4e3a\u7f16\u8bd1\u5668\u63d0\u4f9b\u5206\u652f\u9884\u6d4b\u4fe1\u606f\uff0c\u5176\u8fd4\u56de\u503c\u662f\u6574\u6570\u8868\u8fbe\u5f0fEXP\u7684\u503c\uff0cC\u7684\u503c\u5fc5\u987b\u662f\u7f16\u8bd1\u65f6\u5e38\u6570\u3002\\r\\n\\r\\nLinux\u5185\u6838\u7f16\u7a0b\u65f6\u5e38\u7528\u7684likely\uff08\uff09\u548cunlikely\uff08\uff09\u5e95\u5c42\u8c03\u7528\u7684likely_notrace\uff08\uff09\u3001unlikely_notrace\uff08\uff09\u5c31\u662f\u57fa\u4e8e__builtin_expect\uff08EXP\uff0cC\uff09\u5b9e\u73b0\u7684\\r\\n\\r\\n```\\r\\n#define likely_notrace(x)       __builtin_expect(!!(x), 1)\\r\\n#define unlikely_notrace(x)     __builtin_expect(!!(x), 0)\\r\\n```\\r\\n\\r\\n\u82e5\u4ee3\u7801\u4e2d\u51fa\u73b0\u5206\u652f\uff0c\u5219\u5373\u53ef\u80fd\u4e2d\u65ad\u6d41\u6c34\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7likely\uff08\uff09\u548cunlikely\uff08\uff09\u6697\u793a\u5206\u652f\u5bb9\u6613\u6210\u7acb\u8fd8\u662f\u4e0d\u5bb9\u6613\u6210\u7acb\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nif (likely(!IN_DEV_ROUTE_LOCALNET(in_dev)))\\r\\n    if (ipv4_is_loopback(saddr))\\r\\n        goto e_inval;\\r\\n```\\r\\n\\r\\n\u5728\u4f7f\u7528gcc\u7f16\u8bd1C\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5982\u679c\u4f7f\u7528\u201c-ansi\u2013pedantic\u201d\u7f16\u8bd1\u9009\u9879\uff0c\u5219\u4f1a\u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u4f7f\u7528GNU\u6269\u5c55\u8bed\u6cd5\u3002\u4f8b\u5982\u5bf9\u4e8e\u5982\u4e0bC\u7a0b\u5e8ftest.c\uff1a\\r\\n\\r\\n```\\r\\nstruct var_data {\\r\\n   int len;\\r\\n   char data[0];\\r\\n};\\r\\nstruct var_data a;\\r\\n```\\r\\n\\r\\n\u76f4\u63a5\u7f16\u8bd1\u53ef\u4ee5\u901a\u8fc7\uff1a\\r\\n\\r\\n```\\r\\ngcc -c test.c\\r\\n```\\r\\n\\r\\n\u5982\u679c\u4f7f\u7528\u201c-ansi\u2013pedantic\u201d\u7f16\u8bd1\u9009\u9879\uff0c\u7f16\u8bd1\u4f1a\u62a5\u8b66\uff1a\\r\\n\\r\\n```\\r\\ngcc -ansi -pedantic -c test.c\\r\\ntest.c:3: warning: ISO C forbids zero-size array \'data\'\\r\\n```\\r\\n\\r\\n# 3.5.3\u3000do{}while\uff080\uff09\u8bed\u53e5\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u770b\u5230do{}while\uff080\uff09\u8fd9\u6837\u7684\u8bed\u53e5\uff0c\u8bb8\u591a\u4eba\u5f00\u59cb\u90fd\u4f1a\u7591\u60d1\uff0c\u8ba4\u4e3ado{}while\uff080\uff09\u6beb\u65e0\u610f\u4e49\uff0c\u56e0\u4e3a\u5b83\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\uff0c\u52a0\u4e0d\u52a0do{}while\uff080\uff09\u6548\u679c\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u5176\u5b9edo{}while\uff080\uff09\u7684\u7528\u6cd5\u4e3b\u8981\u7528\u4e8e\u5b8f\u5b9a\u4e49\u4e2d\u3002\\r\\n\\r\\n\u8fd9\u91cc\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u5b8f\u6765\u6f14\u793a\uff1a\u3002\\r\\n\\r\\n```\\r\\n#define SAFE_FREE(p) do{ free(p); p = NULL;} while(0)\\r\\n```\\r\\n\\r\\n\u5047\u8bbe\u8fd9\u91cc\u53bb\u6389do...while\uff080\uff09\uff0c\u5373\u5b9a\u4e49SAFE_DELETE\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define SAFE_FREE(p) free(p); p = NULL;\\r\\n```\\r\\n\\r\\n\u90a3\u4e48\u4ee5\u4e0b\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nif(NULL != p)\\r\\n   SAFE_DELETE(p)\\r\\nelse\\r\\n   .../* do something */\\r\\n```\\r\\n\\r\\n\u4f1a\u88ab\u5c55\u5f00\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nif(NULL != p)\\r\\n   free(p); p = NULL;\\r\\nelse\\r\\n   .../* do something */\\r\\n```\\r\\n\\r\\n\u5c55\u5f00\u7684\u4ee3\u7801\u4e2d\u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a\\r\\n\\r\\n1\uff09\u56e0\u4e3aif\u5206\u652f\u540e\u6709\u4e24\u4e2a\u8bed\u53e5\uff0c\u5bfc\u81f4else\u5206\u652f\u6ca1\u6709\u5bf9\u5e94\u7684if\uff0c\u7f16\u8bd1\u5931\u8d25\u3002\\r\\n\\r\\n2\uff09\u5047\u8bbe\u6ca1\u6709else\u5206\u652f\uff0c\u5219SAFE_FREE\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u8bed\u53e5\u65e0\u8bbaif\u6d4b\u8bd5\u662f\u5426\u901a\u8fc7\uff0c\u90fd\u4f1a\u6267\u884c\u3002\\r\\n\\r\\n\u7684\u786e\uff0c\u5c06SAFE_FREE\u7684\u5b9a\u4e49\u52a0\u4e0a{}\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u4e86\uff0c\u5373\uff1a\\r\\n\\r\\n```\\r\\n#define SAFE_FREE(p) { free(p); p = NULL;}\\r\\n```\\r\\n\\r\\n\u8fd9\u6837\uff0c\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nif(NULL != p)\\r\\n   { free(p); p = NULL; }\\r\\nelse\\r\\n    ... /* do something */\\r\\n```\\r\\n\\r\\n\u4f46\u662f\uff0c\u5728C\u7a0b\u5e8f\u4e2d\uff0c\u5728\u6bcf\u4e2a\u8bed\u53e5\u540e\u9762\u52a0\u5206\u53f7\u662f\u4e00\u79cd\u7ea6\u5b9a\u4fd7\u6210\u7684\u4e60\u60ef\uff0c\u90a3\u4e48\uff0c\u5982\u4e0b\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nif(NULL != p)\\r\\n    SAFE_DELETE(p);\\r\\nelse\\r\\n    ... /* do something */\\r\\n```\\r\\n\\r\\n\u5c06\u88ab\u6269\u5c55\u4e3a\\r\\n\\r\\n```\\r\\nif(NULL != p)\\r\\n   { free(p); p = NULL; };\\r\\nelse\\r\\n   ... /* do something */\\r\\n```\\r\\n\\r\\n\u8fd9\u6837\uff0celse\u5206\u652f\u5c31\u53c8\u6ca1\u6709\u5bf9\u5e94\u7684if\u4e86\uff0c\u7f16\u8bd1\u5c06\u65e0\u6cd5\u901a\u8fc7\u3002\u5047\u8bbe\u7528\u4e86do{}while\uff080\uff09\u8bed\u53e5\uff0c\u60c5\u51b5\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u540c\u6837\u7684\u4ee3\u7801\u4f1a\u88ab\u5c55\u5f00\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nif(NULL != p)\\r\\n    do{ free(p); p = NULL;} while(0);\\r\\nelse\\r\\n    ... /* do something */\\r\\n```\\r\\n\\r\\n\u800c\u4e0d\u4f1a\u518d\u51fa\u73b0\u7f16\u8bd1\u95ee\u9898\u3002do{}while\uff080\uff09\u7684\u4f7f\u7528\u5b8c\u5168\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5b8f\u5b9a\u4e49\u7684\u4f7f\u7528\u8005\u80fd\u65e0\u7f16\u8bd1\u9519\u8bef\u5730\u4f7f\u7528\u5b8f\uff0c\u5b83\u4e0d\u5bf9\u5176\u4f7f\u7528\u8005\u505a\u4efb\u4f55\u5047\u8bbe\u3002\\r\\n\\r\\n# 3.5.4\u3000goto\u8bed\u53e5\\r\\n\\r\\n\u7528\u4e0d\u7528goto\u4e00\u76f4\u662f\u4e00\u4e2a\u8457\u540d\u7684\u4e89\u8bae\u8bdd\u9898\uff0cLinux\u5185\u6838\u6e90\u4ee3\u7801\u4e2d\u5bf9goto\u7684\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u4f46\u662f\u4e00\u822c\u53ea\u9650\u4e8e\u9519\u8bef\u5904\u7406\u4e2d\uff0c\u5176\u7ed3\u6784\u5982\uff1a\\r\\n\\r\\n```\\r\\nif(register_a()!=0)\\r\\n     goto err;\\r\\nif(register_b()!=0)\\r\\n     goto err1;\\r\\nif(register_c()!=0)\\r\\n     goto err2;\\r\\nif(register_d()!=0)\\r\\n     goto err3;\\r\\n...\\r\\nerr3:\\r\\n    unregister_c();\\r\\nerr2:\\r\\n    unregister_b();\\r\\nerr1:\\r\\n    unregister_a();\\r\\nerr:\\r\\n    return ret;\\r\\n```\\r\\n\\r\\n\u8fd9\u79cd\u5c06goto\u7528\u4e8e\u9519\u8bef\u5904\u7406\u7684\u7528\u6cd5\u5b9e\u5728\u662f\u7b80\u5355\u800c\u9ad8\u6548\uff0c\u53ea\u9700\u4fdd\u8bc1\u5728\u9519\u8bef\u5904\u7406\u65f6\u6ce8\u9500\u3001\u8d44\u6e90\u91ca\u653e\u7b49\uff0c\u4e0e\u6b63\u5e38\u7684\u6ce8\u518c\u3001\u8d44\u6e90\u7533\u8bf7\u987a\u5e8f\u76f8\u53cd\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668","description":"\u6240\u8c13\u4e2d\u65ad\u662f\u6307CPU\u5728\u6267\u884c\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u4e86\u67d0\u4e9b\u7a81\u53d1\u4e8b\u4ef6\u6025\u5f85\u5904\u7406\uff0cCPU\u5fc5\u987b\u6682\u505c\u5f53\u524d\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u8f6c\u53bb\u5904\u7406\u7a81\u53d1\u4e8b\u4ef6\uff0c\u5904\u7406\u5b8c\u6bd5\u540e\u53c8\u8fd4\u56de\u539f\u7a0b\u5e8f\u88ab\u4e2d\u65ad\u7684\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002","date":"2025-09-15T14:44:14.897Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":5.11,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"3.5.1\u3000Linux\u7f16\u7801\u98ce\u683c","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.5\u3000Linux\u4e0b\u7684C\u7f16\u7a0b\u7279\u70b9"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570"}},"content":"\u6240\u8c13\u4e2d\u65ad\u662f\u6307CPU\u5728\u6267\u884c\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u4e86\u67d0\u4e9b\u7a81\u53d1\u4e8b\u4ef6\u6025\u5f85\u5904\u7406\uff0cCPU\u5fc5\u987b\u6682\u505c\u5f53\u524d\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u8f6c\u53bb\u5904\u7406\u7a81\u53d1\u4e8b\u4ef6\uff0c\u5904\u7406\u5b8c\u6bd5\u540e\u53c8\u8fd4\u56de\u539f\u7a0b\u5e8f\u88ab\u4e2d\u65ad\u7684\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002\\r\\n\\r\\n\u6839\u636e\u4e2d\u65ad\u7684\u6765\u6e90\uff0c\u4e2d\u65ad\u53ef\u5206\u4e3a\u5185\u90e8\u4e2d\u65ad\u548c\u5916\u90e8\u4e2d\u65ad\uff0c\u5185\u90e8\u4e2d\u65ad\u7684\u4e2d\u65ad\u6e90\u6765\u81eaCPU\u5185\u90e8\uff08\u8f6f\u4ef6\u4e2d\u65ad\u6307\u4ee4\u3001\u6ea2\u51fa\u3001\u9664\u6cd5\u9519\u8bef\u7b49\uff0c\u4f8b\u5982\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ece\u7528\u6237\u6001\u5207\u6362\u5230\u5185\u6838\u6001\u9700\u501f\u52a9CPU\u5185\u90e8\u7684\u8f6f\u4ef6\u4e2d\u65ad\uff09\uff0c\u5916\u90e8\u4e2d\u65ad\u7684\u4e2d\u65ad\u6e90\u6765\u81eaCPU\u5916\u90e8\uff0c\u7531\u5916\u8bbe\u63d0\u51fa\u8bf7\u6c42\u3002\\r\\n\\r\\n\u6839\u636e\u4e2d\u65ad\u662f\u5426\u53ef\u4ee5\u5c4f\u853d\uff0c\u4e2d\u65ad\u53ef\u5206\u4e3a\u53ef\u5c4f\u853d\u4e2d\u65ad\u4e0e\u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad\uff08NMI\uff09\uff0c\u53ef\u5c4f\u853d\u4e2d\u65ad\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e2d\u65ad\u63a7\u5236\u5668\u5bc4\u5b58\u5668\u7b49\u65b9\u6cd5\u88ab\u5c4f\u853d\uff0c\u5c4f\u853d\u540e\uff0c\u8be5\u4e2d\u65ad\u4e0d\u518d\u5f97\u5230\u54cd\u5e94\uff0c\u800c\u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad\u4e0d\u80fd\u88ab\u5c4f\u853d\u3002\\r\\n\\r\\n\u6839\u636e\u4e2d\u65ad\u5165\u53e3\u8df3\u8f6c\u65b9\u6cd5\u7684\u4e0d\u540c\uff0c\u4e2d\u65ad\u53ef\u5206\u4e3a\u5411\u91cf\u4e2d\u65ad\u548c\u975e\u5411\u91cf\u4e2d\u65ad\u3002\u91c7\u7528\u5411\u91cf\u4e2d\u65ad\u7684CPU\u901a\u5e38\u4e3a\u4e0d\u540c\u7684\u4e2d\u65ad\u5206\u914d\u4e0d\u540c\u7684\u4e2d\u65ad\u53f7\uff0c\u5f53\u68c0\u6d4b\u5230\u67d0\u4e2d\u65ad\u53f7\u7684\u4e2d\u65ad\u5230\u6765\u540e\uff0c\u5c31\u81ea\u52a8\u8df3\u8f6c\u5230\u4e0e\u8be5\u4e2d\u65ad\u53f7\u5bf9\u5e94\u7684\u5730\u5740\u6267\u884c\u3002\u4e0d\u540c\u4e2d\u65ad\u53f7\u7684\u4e2d\u65ad\u6709\u4e0d\u540c\u7684\u5165\u53e3\u5730\u5740\u3002\u975e\u5411\u91cf\u4e2d\u65ad\u7684\u591a\u4e2a\u4e2d\u65ad\u5171\u4eab\u4e00\u4e2a\u5165\u53e3\u5730\u5740\uff0c\u8fdb\u5165\u8be5\u5165\u53e3\u5730\u5740\u540e\uff0c\u518d\u901a\u8fc7\u8f6f\u4ef6\u5224\u65ad\u4e2d\u65ad\u6807\u5fd7\u6765\u8bc6\u522b\u5177\u4f53\u662f\u54ea\u4e2a\u4e2d\u65ad\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5411\u91cf\u4e2d\u65ad\u7531\u786c\u4ef6\u63d0\u4f9b\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\uff0c\u975e\u5411\u91cf\u4e2d\u65ad\u7531\u8f6f\u4ef6\u63d0\u4f9b\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\u3002\\r\\n\\r\\n\u4e00\u4e2a\u5178\u578b\u7684\u975e\u5411\u91cf\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5982\u4ee3\u7801\u6e05\u535510.1\u6240\u793a\uff0c\u5b83\u5148\u5224\u65ad\u4e2d\u65ad\u6e90\uff0c\u7136\u540e\u8c03\u7528\u4e0d\u540c\u4e2d\u65ad\u6e90\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.1\u3000\u975e\u5411\u91cf\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u5178\u578b\u7ed3\u6784\\r\\n\\r\\n```\\r\\n 1 irq_handler()\\r\\n 2 {\\r\\n 3   ...\\r\\n 4   int int_src = read_int_status();  /* \u8bfb\u786c\u4ef6\u7684\u4e2d\u65ad\u76f8\u5173\u5bc4\u5b58\u5668*/\\r\\n 5   switch (int_src)  {               /* \u5224\u65ad\u4e2d\u65ad\u6e90*/\\r\\n 6   case DEV_A:\\r\\n 7        dev_a_handler();\\r\\n 8        break;\\r\\n 9   case DEV_B:\\r\\n10        dev_b_handler();\\r\\n11        break;\\r\\n12  ...\\r\\n13  default:\\r\\n14       break;\\r\\n15  }\\r\\n16  ...\\r\\n17}\\r\\n```\\r\\n\\r\\n\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4ee5\u53cax86PC\u4e2d\u5927\u591a\u5305\u542b\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\uff08PIC\uff09\uff0c\u8bb8\u591aMCU\u5185\u90e8\u5c31\u96c6\u6210\u4e86PIC\u3002\u5982\u572880386\u4e2d\uff0cPIC\u662f\u4e24\u7247i8259A\u82af\u7247\u7684\u7ea7\u8054\u3002\u901a\u8fc7\u8bfb\u5199PIC\u7684\u5bc4\u5b58\u5668\uff0c\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5c4f\u853d/\u4f7f\u80fd\u67d0\u4e2d\u65ad\u53ca\u83b7\u5f97\u4e2d\u65ad\u72b6\u6001\uff0c\u524d\u8005\u4e00\u822c\u901a\u8fc7\u4e2d\u65adMASK\u5bc4\u5b58\u5668\u5b8c\u6210\uff0c\u540e\u8005\u4e00\u822c\u901a\u8fc7\u4e2d\u65adPEND\u5bc4\u5b58\u5668\u5b8c\u6210\u3002\\r\\n\\r\\n\u5b9a\u65f6\u5668\u5728\u786c\u4ef6\u4e0a\u4e5f\u4f9d\u8d56\u4e2d\u65ad\u6765\u5b9e\u73b0\uff0c\u56fe10.1\u6240\u793a\u4e3a\u5178\u578b\u7684\u5d4c\u5165\u5f0f\u5fae\u5904\u7406\u5668\u5185\u53ef\u7f16\u7a0b\u95f4\u9694\u5b9a\u65f6\u5668\uff08PIT\uff09\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u5b83\u63a5\u6536\u4e00\u4e2a\u65f6\u949f\u8f93\u5165\uff0c\u5f53\u65f6\u949f\u8109\u51b2\u5230\u6765\u65f6\uff0c\u5c06\u76ee\u524d\u8ba1\u6570\u503c\u589e1\u5e76\u4e0e\u9884\u5148\u8bbe\u7f6e\u7684\u8ba1\u6570\u503c\uff08\u8ba1\u6570\u76ee\u6807\uff09\u6bd4\u8f83\uff0c\u82e5\u76f8\u7b49\uff0c\u8bc1\u660e\u8ba1\u6570\u5468\u671f\u6ee1\uff0c\u5e76\u4ea7\u751f\u5b9a\u65f6\u5668\u4e2d\u65ad\u4e14\u590d\u4f4d\u76ee\u524d\u8ba1\u6570\u503c\u3002\\r\\n\\r\\n![1743240131470](./figure/1743240131470.png)\\r\\n\\r\\n\u56fe10.1\u3000PIT\u5b9a\u65f6\u5668\u7684\u5de5\u4f5c\u539f\u7406\\r\\n\\r\\n\u5728ARM\u591a\u6838\u5904\u7406\u5668\u91cc\u6700\u5e38\u7528\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u662fGIC\uff08Generic Interrupt Controller\uff09\uff0c\u5982\u56fe10.2\u6240\u793a\uff0c\u5b83\u652f\u63013\u79cd\u7c7b\u578b\u7684\u4e2d\u65ad\u3002\\r\\n\\r\\n![9736fe53-3dd9-4bdc-bec7-faa9dcf18dba](./figure/9736fe53-3dd9-4bdc-bec7-faa9dcf18dba.png)\\r\\n\\r\\n\u56fe10.2\u3000ARM\u591a\u6838\u5904\u7406\u5668\u91cc\u7684GIC\\r\\n\\r\\nSGI\uff08Software Generated Interrupt\uff09\uff1a\u8f6f\u4ef6\u4ea7\u751f\u7684\u4e2d\u65ad\uff0c\u53ef\u4ee5\u7528\u4e8e\u591a\u6838\u7684\u6838\u95f4\u901a\u4fe1\uff0c\u4e00\u4e2aCPU\u53ef\u4ee5\u901a\u8fc7\u5199GIC\u7684\u5bc4\u5b58\u5668\u7ed9\u53e6\u5916\u4e00\u4e2aCPU\u4ea7\u751f\u4e2d\u65ad\u3002\u591a\u6838\u8c03\u5ea6\u7528\u7684IPI_WAKEUP\u3001IPI_TIMER\u3001IPI_RESCHEDULE\u3001IPI_CALL_FUNC\u3001IPI_CALL_FUNC_SINGLE\u3001IPI_CPU_STOP\u3001IPI_IRQ_WORK\u3001IPI_COMPLETION\u90fd\u662f\u7531SGI\u4ea7\u751f\u7684\u3002\\r\\n\\r\\nPPI\uff08Private Peripheral Interrupt\uff09\uff1a\u67d0\u4e2aCPU\u79c1\u6709\u5916\u8bbe\u7684\u4e2d\u65ad\uff0c\u8fd9\u7c7b\u5916\u8bbe\u7684\u4e2d\u65ad\u53ea\u80fd\u53d1\u7ed9\u7ed1\u5b9a\u7684\u90a3\u4e2aCPU\u3002\\r\\n\\r\\nSPI\uff08Shared Peripheral Interrupt\uff09\uff1a\u5171\u4eab\u5916\u8bbe\u7684\u4e2d\u65ad\uff0c\u8fd9\u7c7b\u5916\u8bbe\u7684\u4e2d\u65ad\u53ef\u4ee5\u8def\u7531\u5230\u4efb\u4f55\u4e00\u4e2aCPU\u3002\\r\\n\\r\\n\u5bf9\u4e8eSPI\u7c7b\u578b\u7684\u4e2d\u65ad\uff0c\u5185\u6838\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0bAPI\u8bbe\u5b9a\u4e2d\u65ad\u89e6\u53d1\u7684CPU\u6838\uff1a\\r\\n\\r\\n```\\r\\nextern int irq_set_affinity (unsigned int irq, const struct cpumask *m);\\r\\n```\\r\\n\\r\\n\u5728ARM Linux\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e2d\u65ad\u90fd\u662f\u5728CPU0\u4e0a\u4ea7\u751f\u7684\uff0c\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u628a\u4e2d\u65adirq\u8bbe\u5b9a\u5230CPU i\u4e0a\u53bb\uff1a\\r\\n\\r\\n```\\r\\nirq_set_affinity(irq, cpumask_of(i));\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570","description":"\u4e0e\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e00\u6837\uff0c\u5757\u8bbe\u5907\u53ef\u4ee5\u5305\u542b\u4e00\u4e2aioctl\uff08\uff09\u51fd\u6570\u4ee5\u63d0\u4f9b\u5bf9\u8bbe\u5907\u7684I/O\u63a7\u5236\u80fd\u529b\u3002\u5b9e\u9645\u4e0a\uff0c\u9ad8\u5c42\u7684\u5757\u8bbe\u5907\u5c42\u4ee3\u7801\u5904\u7406\u4e86\u7edd\u5927\u591a\u6570I/O\u63a7\u5236\uff0c\u5982BLKFLSBUF\u3001BLKROSET\u3001BLKDISCARD\u3001HDIO_GETGEO\u3001BLKROGET\u548cBLKSECTGET\u7b49\uff0c\u56e0\u6b64\uff0c\u5728\u5177\u4f53\u7684\u5757\u8bbe\u5907\u9a71\u52a8\u4e2d\u901a\u5e38\u53ea\u9700\u8981\u5b9e\u73b0\u4e0e\u8bbe\u5907\u76f8\u5173\u7684\u7279\u5b9aioctl\u547d\u4ee4\u3002\u4f8b\u5982\uff0c\u6e90\u4ee3\u7801\u6587\u4ef6\u4e3adrivers/block/floppy.c\u5b9e\u73b0\u4e86\u4e0e\u8f6f\u9a71\u76f8\u5173\u7684\u547d\u4ee4\uff08\u5982FDEJECT\u3001FDSETPRM\u3001FDFMTTRK\u7b49\uff09\u3002","date":"2025-09-15T14:44:14.897Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.975,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.1\u3000\u4e2d\u65ad\u4e0e\u5b9a\u65f6\u5668"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b"}},"content":"\u4e0e\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e00\u6837\uff0c\u5757\u8bbe\u5907\u53ef\u4ee5\u5305\u542b\u4e00\u4e2aioctl\uff08\uff09\u51fd\u6570\u4ee5\u63d0\u4f9b\u5bf9\u8bbe\u5907\u7684I/O\u63a7\u5236\u80fd\u529b\u3002\u5b9e\u9645\u4e0a\uff0c\u9ad8\u5c42\u7684\u5757\u8bbe\u5907\u5c42\u4ee3\u7801\u5904\u7406\u4e86\u7edd\u5927\u591a\u6570I/O\u63a7\u5236\uff0c\u5982BLKFLSBUF\u3001BLKROSET\u3001BLKDISCARD\u3001HDIO_GETGEO\u3001BLKROGET\u548cBLKSECTGET\u7b49\uff0c\u56e0\u6b64\uff0c\u5728\u5177\u4f53\u7684\u5757\u8bbe\u5907\u9a71\u52a8\u4e2d\u901a\u5e38\u53ea\u9700\u8981\u5b9e\u73b0\u4e0e\u8bbe\u5907\u76f8\u5173\u7684\u7279\u5b9aioctl\u547d\u4ee4\u3002\u4f8b\u5982\uff0c\u6e90\u4ee3\u7801\u6587\u4ef6\u4e3adrivers/block/floppy.c\u5b9e\u73b0\u4e86\u4e0e\u8f6f\u9a71\u76f8\u5173\u7684\u547d\u4ee4\uff08\u5982FDEJECT\u3001FDSETPRM\u3001FDFMTTRK\u7b49\uff09\u3002\\r\\n\\r\\nLinux MMC\u5b50\u7cfb\u7edf\u652f\u6301\u4e00\u4e2aIOCTL\u547d\u4ee4MMC_IOC_CMD\uff0cdrivers/mmc/card/block.c\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u547d\u4ee4\u7684\u5904\u7406\uff0c\u5982\u4ee3\u7801\u6e05\u535513.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.8\u3000Linux MMC\u5757\u8bbe\u5907\u7684ioctl\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n1static int mmc_blk_ioctl(struct block_device *bdev, fmode_t mode,\\r\\n2        unsigned int cmd, unsigned long arg)\\r\\n3{\\r\\n4        int ret = -EINVAL;\\r\\n5        if (cmd == MMC_IOC_CMD)\\r\\n6                ret = mmc_blk_ioctl_cmd(bdev, (struct mmc_ioc_cmd __user *)arg);\\r\\n7        return ret;\\r\\n8}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b","description":"NVIDIA Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u4f4d\u4e8edrivers/i2c/busses/i2c-tegra.c\u4e0b\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u5177\u4f53\u7814\u7a76\u5b83\u7684\u786c\u4ef6\u7ec6\u8282\uff0c\u53ea\u770b\u4e00\u4e0b\u9a71\u52a8\u7684\u6846\u67b6\u548c\u6d41\u7a0b\u3002","date":"2025-09-15T14:44:14.893Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":6.82,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.5\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\u51fd\u6570"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8"}},"content":"NVIDIA Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u4f4d\u4e8edrivers/i2c/busses/i2c-tegra.c\u4e0b\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u5177\u4f53\u7814\u7a76\u5b83\u7684\u786c\u4ef6\u7ec6\u8282\uff0c\u53ea\u770b\u4e00\u4e0b\u9a71\u52a8\u7684\u6846\u67b6\u548c\u6d41\u7a0b\u3002\\r\\n\\r\\nI2 C\u603b\u7ebf\u9a71\u52a8\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u9a71\u52a8\uff0c\u5728\u6a21\u5757\u7684\u52a0\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u4e2d\uff0c\u53ea\u9700\u6ce8\u518c\u548c\u6ce8\u9500\u4e00\u4e2aplatform_driver\u7ed3\u6784\u4f53\uff0c\u5982\u4ee3\u7801\u6e05\u535515.18\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.18\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\\r\\n\\r\\n```\\r\\n 1/* Match table for of_platform binding */\\r\\n 2static const struct of_device_id tegra_i2c_of_match[] = {\\r\\n 3    { .compatible = \\"nvidia,tegra114-i2c\\", .data = &tegra114_i2c_hw, },\\r\\n 4    { .compatible = \\"nvidia,tegra30-i2c\\", .data = &tegra30_i2c_hw, },\\r\\n 5    { .compatible = \\"nvidia,tegra20-i2c\\", .data = &tegra20_i2c_hw, },\\r\\n 6    { .compatible = \\"nvidia,tegra20-i2c-dvc\\", .data = &tegra20_i2c_hw, },\\r\\n 7    {},\\r\\n 8};\\r\\n 9MODULE_DEVICE_TABLE(of, tegra_i2c_of_match);\\r\\n10\\r\\n11static struct platform_driver tegra_i2c_driver = {\\r\\n12    .probe   = tegra_i2c_probe,\\r\\n13    .remove  = tegra_i2c_remove,\\r\\n14    .driver  = {\\r\\n15        .name  = \\"tegra-i2c\\",\\r\\n16        .owner = THIS_MODULE,\\r\\n17        .of_match_table = tegra_i2c_of_match,\\r\\n18        .pm    = TEGRA_I2C_PM,\\r\\n19    },\\r\\n20};\\r\\n21\\r\\n22static int __init tegra_i2c_init_driver(void)\\r\\n23{\\r\\n24    return platform_driver_register(&tegra_i2c_driver);\\r\\n25}\\r\\n26\\r\\n27static void __exit tegra_i2c_exit_driver(void)\\r\\n28{\\r\\n29    platform_driver_unregister(&tegra_i2c_driver);\\r\\n30}\\r\\n31\\r\\n32subsys_initcall(tegra_i2c_init_driver);\\r\\n33module_exit(tegra_i2c_exit_driver);\\r\\n```\\r\\n\\r\\n\u5f53\u5728arch/arm/mach-tegra\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u4e3ategra-i2c\u7684\u540c\u540dplatform_device\uff0c\u6216\u8005\u5728tegra\u7684\u8bbe\u5907\u6811\u4e2d\u6dfb\u52a0\u4e86tegra_i2c_of_match\u5339\u914d\u8868\u517c\u5bb9\u7684\u8282\u70b9\u540e\uff0c\u4e0a\u8ff0platform_driver\u4e2d\u7684probe\uff08\uff09\u51fd\u6570\u4f1a\u6267\u884c\u3002\\r\\n\\r\\n\u5f53\u5728arch/arm/mach-tegra\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u4e3ategra-i2c\u7684\u540c\u540dplatform_device\uff0c\u6216\u8005\u5728tegra\u7684\u8bbe\u5907\u6811\u4e2d\u6dfb\u52a0\u4e86tegra_i2c_of_match\u5339\u914d\u8868\u517c\u5bb9\u7684\u8282\u70b9\u540e\uff0c\u4e0a\u8ff0platform_driver\u4e2d\u7684probe\uff08\uff09\u51fd\u6570\u4f1a\u6267\u884c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.19\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u4e2d\u7684tegra_i2c_probe\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int tegra_i2c_probe(struct platform_device *pdev)\\r\\n 2{\\r\\n 3    struct tegra_i2c_dev *i2c_dev;\\r\\n 4    struct resource *res;\\r\\n 5    struct clk *div_clk;\\r\\n 6    struct clk *fast_clk;\\r\\n 7    void __iomem *base;\\r\\n 8    int irq;\\r\\n 9    int ret = 0;\\r\\n10\\r\\n11    res = platform_get_resource(pdev, IORESOURCE_MEM, 0);\\r\\n12    base = devm_ioremap_resource(&pdev->dev, res);\\r\\n13    ...\\r\\n14    res = platform_get_resource(pdev, IORESOURCE_IRQ, 0);\\r\\n15    ...\\r\\n16    irq = res->start;\\r\\n17\\r\\n18    div_clk = devm_clk_get(&pdev->dev, \\"div-clk\\");\\r\\n19    ...\\r\\n20\\r\\n21    i2c_dev = devm_kzalloc(&pdev->dev, sizeof(*i2c_dev), GFP_KERNEL);\\r\\n22    ...\\r\\n23\\r\\n24    i2c_dev->base = base;\\r\\n25    i2c_dev->div_clk = div_clk;\\r\\n26    i2c_dev->adapter.algo = &tegra_i2c_algo;\\r\\n27    i2c_dev->irq = irq;\\r\\n28    i2c_dev->cont_id = pdev->id;\\r\\n29    i2c_dev->dev = &pdev->dev;\\r\\n30\\r\\n31    i2c_dev->rst = devm_reset_control_get(&pdev->dev, \\"i2c\\");\\r\\n32    ...\\r\\n33\\r\\n34    ret = of_property_read_u32(i2c_dev->dev->of_node, \\"clock-frequency\\",\\r\\n35                         &i2c_dev->bus_clk_rate);\\r\\n36    if (ret)\\r\\n37    i2c_dev->bus_clk_rate = 100000; /* default clock rate */\\r\\n38\\r\\n39    i2c_dev->hw = &tegra20_i2c_hw;\\r\\n40\\r\\n41    ...\\r\\n42    init_completion(&i2c_dev->msg_complete);\\r\\n43\\r\\n44    ...\\r\\n45\\r\\n46    platform_set_drvdata(pdev, i2c_dev);\\r\\n47\\r\\n48    ret = tegra_i2c_init(i2c_dev);\\r\\n49    ...\\r\\n50\\r\\n51    ret = devm_request_irq(&pdev->dev, i2c_dev->irq,\\r\\n52                      tegra_i2c_isr, 0, dev_name(&pdev->dev), i2c_dev);\\r\\n53    ...\\r\\n54\\r\\n55    i2c_set_adapdata(&i2c_dev->adapter, i2c_dev);\\r\\n56    i2c_dev->adapter.owner = THIS_MODULE;\\r\\n57    i2c_dev->adapter.class = I2C_CLASS_DEPRECATED;\\r\\n58    strlcpy(i2c_dev->adapter.name, \\"Tegra I2C adapter\\",\\r\\n59         sizeof(i2c_dev->adapter.name));\\r\\n60    i2c_dev->adapter.algo = &tegra_i2c_algo;\\r\\n61    i2c_dev->adapter.dev.parent = &pdev->dev;\\r\\n62    i2c_dev->adapter.nr = pdev->id;\\r\\n63    i2c_dev->adapter.dev.of_node = pdev->dev.of_node;\\r\\n64\\r\\n65    ret = i2c_add_numbered_adapter(&i2c_dev->adapter);\\r\\n66    ...\\r\\n67\\r\\n68    return 0;\\r\\n69}\\r\\n```\\r\\n\\r\\n\u6709\u4e0etegra_i2c_probe\uff08\uff09\u51fd\u6570\u76f8\u53cd\u529f\u80fd\u7684\u51fd\u6570\u662ftegra_i2c_remove\uff08\uff09\u51fd\u6570\uff0c\u5b83\u5728\u9002\u914d\u5668\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u8c03\u7528platform_driver_unregister\uff08\uff09\u51fd\u6570\u65f6\u901a\u8fc7platform_driver\u7684remove\u6307\u9488\u65b9\u5f0f\u88ab\u8c03\u7528\u3002tegra_i2c_remove\uff08\uff09\u7684\u4ee3\u7801\u5982\u6e05\u535515.20\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.20\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u4e2d\u7684tegra_i2c_remove\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int tegra_i2c_remove(struct platform_device *pdev)\\r\\n 2{\\r\\n 3     struct tegra_i2c_dev *i2c_dev = platform_get_drvdata(pdev);\\r\\n 4     i2c_del_adapter(&i2c_dev->adapter);\\r\\n 5     return 0;\\r\\n 6}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.19\u548c\u4ee3\u7801\u6e05\u535515.20\u4e2d\u7684tegra_i2c_dev\u7ed3\u6784\u4f53\u53ef\u8fdb\u884c\u9002\u914d\u5668\u6240\u6709\u4fe1\u606f\u7684\u5c01\u88c5\uff0c\u7c7b\u4f3c\u4e8e\u79c1\u6709\u4fe1\u606f\u7ed3\u6784\u4f53\uff0c\u4ee3\u7801\u6e05\u535515.21\u6240\u793a\u4e3ategra_i2c_dev\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u3002\u6211\u4eec\u5728\u7f16\u7a0b\u4e2d\u8981\u65f6\u523b\u7262\u8bb0Linux\u8fd9\u4e2a\u7f16\u7a0b\u4e60\u60ef\uff0c\u8fd9\u5b9e\u9645\u4e0a\u4e5f\u662f\u9762\u5411\u5bf9\u8c61\u7684\u4e00\u79cd\u4f53\u73b0\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.21\u3000tegra_i2c_dev\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct tegra_i2c_dev {\\r\\n 2    struct device *dev;\\r\\n 3    const struct tegra_i2c_hw_feature *hw;\\r\\n 4    struct i2c_adapter adapter;\\r\\n 5    struct clk *div_clk;\\r\\n 6    struct clk *fast_clk;\\r\\n 7    struct reset_control *rst;\\r\\n 8    void __iomem *base;\\r\\n 9    int cont_id;\\r\\n10    int irq;\\r\\n11    bool irq_disabled;\\r\\n12    int is_dvc;\\r\\n13    struct completion msg_complete;\\r\\n14    int msg_err;\\r\\n15    u8 *msg_buf;\\r\\n16    size_t msg_buf_remaining;\\r\\n17    int msg_read;\\r\\n18    u32 bus_clk_rate;\\r\\n19    bool is_suspended;\\r\\n20};\\r\\n```\\r\\n\\r\\ntegra_i2c_probe\uff08\uff09\u51fd\u6570\u4e2d\u7684platform_set_drvdata\uff08pdev\uff0ci2c_dev\uff09\u548ci2c_set_adapdata\uff08&i2c_dev->adapter\uff0ci2c_dev\uff09\u5df2\u7ecf\u628a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\u4f9d\u9644\u5230\u4e86platform_device\u548ci2c_adapter\u7684\u79c1\u6709\u6570\u636e\u4e0a\u4e86\uff0c\u5728\u5176\u4ed6\u5730\u65b9\u53ea\u8981\u7528\u76f8\u5e94\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\u53d6\u51fa\u6765\u3002\\r\\n\\r\\n\u7531\u4ee3\u7801\u6e05\u535515.19\u7684\u7b2c60\u884c\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0eI2 C\u9002\u914d\u5668\u5bf9\u5e94\u7684i2c_algorithm\u7ed3\u6784\u4f53\u5b9e\u4f8b\u4e3ategra_i2c_algo\uff0c\u4ee3\u7801\u6e05\u535515.22\u7ed9\u51fa\u4e3ategra_i2c_algo\u7684\u5b9a\u4e49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.22\u3000tegra_i2c_algo\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1static const struct i2c_algorithm tegra_i2c_algo = {\\r\\n 2    .master_xfer      = tegra_i2c_xfer,\\r\\n 3    .functionality    = tegra_i2c_func,\\r\\n 4};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c\u4e00\u884c\u6307\u5b9a\u4e86Tegra I2 C\u603b\u7ebf\u901a\u4fe1\u4f20\u8f93\u51fd\u6570tegra_i2c_xfer\uff08\uff09\uff0c\u8fd9\u4e2a\u51fd\u6570\u975e\u5e38\u5173\u952e\uff0c\u6240\u6709\u5728I2 C\u603b\u7ebf\u4e0a\u5bf9\u8bbe\u5907\u7684\u8bbf\u95ee\u6700\u7ec8\u5e94\u8be5\u7531\u5b83\u6765\u5b8c\u6210\uff0c\u4ee3\u7801\u6e05\u535515.23\u6240\u793a\u4e3a\u8fd9\u4e2a\u91cd\u8981\u51fd\u6570\u4ee5\u53ca\u5176\u4f9d\u8d56\u7684tegra_i2c_xfer_msg\uff08\uff09\u51fd\u6570\u7684\u6e90\u4ee3\u7801\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.23\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u7684tegra_i2c_xfer\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int tegra_i2c_xfer_msg(struct tegra_i2c_dev *i2c_dev,\\r\\n 2    struct i2c_msg *msg, enum msg_end_type end_state)\\r\\n 3{\\r\\n 4    ...\\r\\n 5    i2c_dev->msg_buf = msg->buf;\\r\\n 6    i2c_dev->msg_buf_remaining = msg->len;\\r\\n 7    i2c_dev->msg_err = I2C_ERR_NONE;\\r\\n 8    i2c_dev->msg_read = (msg->flags & I2C_M_RD);\\r\\n 9    reinit_completion(&i2c_dev->msg_complete);\\r\\n10\\r\\n11    packet_header = (0 << PACKET_HEADER0_HEADER_SIZE_SHIFT) |\\r\\n12              PACKET_HEADER0_PROTOCOL_I2C |\\r\\n13              (i2c_dev->cont_id << PACKET_HEADER0_CONT_ID_SHIFT) |\\r\\n14              (1 << PACKET_HEADER0_PACKET_ID_SHIFT);\\r\\n15    i2c_writel(i2c_dev, packet_header, I2C_TX_FIFO);\\r\\n16\\r\\n17    packet_header = msg->len - 1;\\r\\n18    i2c_writel(i2c_dev, packet_header, I2C_TX_FIFO);\\r\\n19\\r\\n20    ...\\r\\n21\\r\\n22    ret = wait_for_completion_timeout(&i2c_dev->msg_complete, TEGRA_I2C_TIMEOUT);\\r\\n23    ...\\r\\n24}\\r\\n25\\r\\n26static int tegra_i2c_xfer(struct i2c_adapter *adap, struct i2c_msg msgs[],\\r\\n27    int num)\\r\\n28{\\r\\n29    struct tegra_i2c_dev *i2c_dev = i2c_get_adapdata(adap);\\r\\n30    int i;\\r\\n31    int ret = 0;\\r\\n32\\r\\n33    ...\\r\\n34\\r\\n35    for (i = 0; i < num; i++) {\\r\\n36         enum msg_end_type end_type = MSG_END_STOP;\\r\\n37         if (i < (num - 1)) {\\r\\n38              if (msgs[i + 1].flags & I2C_M_NOSTART)\\r\\n39                   end_type = MSG_END_CONTINUE;\\r\\n40              else\\r\\n41                   end_type = MSG_END_REPEAT_START;\\r\\n42         }\\r\\n43         ret = tegra_i2c_xfer_msg(i2c_dev, &msgs[i], end_type);\\r\\n44         if (ret)\\r\\n45              break;\\r\\n46    }\\r\\n47    tegra_i2c_clock_disable(i2c_dev);\\r\\n48    return ret  : i;\\r\\n49}\\r\\n```\\r\\n\\r\\n\u4ece\u4ee3\u7801\u5c42\u9762\u4e0a\u770b\uff0c\u7b2c35\u884c\u7684for\u5faa\u73af\u904d\u5386\u6240\u6709\u7684i2c_msg\uff0c\u800c\u6bcf\u4e2ai2c_msg\u5219\u7531tegra_i2c_xfer_msg\uff08\uff09\u51fd\u6570\u5904\u7406\uff0c\u5b83\u6bcf\u6b21\u53d1\u8d77\u786c\u4ef6\u64cd\u4f5c\u540e\uff0c\u5b9e\u9645\u4e0a\u9700\u8981\u901a\u8fc7wait_for_completion_timeout\uff08\uff09\u7b49\u5f85\u4f20\u8f93\u7684\u5b8c\u6210\uff0c\u56e0\u6b64\u8fd9\u91cc\u9762\u5c31\u4f1a\u6709\u4e00\u4e2a\u88ab\u8c03\u5ea6\u51fa\u53bb\u7684\u8fc7\u7a0b\u3002\u4e2d\u65ad\u5230\u6765\u4e14I2 C\u7684\u5305\u4f20\u8f93\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u5c31\u662f\u5524\u9192\u8fd9\u4e2a\u7761\u7720\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5982\u4ee3\u7801\u6e05\u535515.24\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.24\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\\r\\n\\r\\n```\\r\\n 1static irqreturn_t tegra_i2c_isr(int irq, void *dev_id)\\r\\n 2{\\r\\n 3    ...\\r\\n 4\\r\\n 5    if (status & I2C_INT_PACKET_XFER_COMPLETE) {\\r\\n 6         BUG_ON(i2c_dev->msg_buf_remaining);\\r\\n 7         complete(&i2c_dev->msg_complete);\\r\\n 8    }\\r\\n 9    return IRQ_HANDLED;\\r\\n10    ...\\r\\n11}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8","description":"Linux\u64cd\u4f5c\u7cfb\u7edf\u662fUNIX\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u79cd\u514b\u9686\u7cfb\u7edf\uff0c\u662f\u4e00\u79cd\u7c7bUNIX\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8bde\u751f\u4e8e1991\u5e7410\u67085\u65e5\uff08\u7b2c\u4e00\u6b21\u6b63\u5f0f\u5411\u5916\u516c\u5e03\u7684\u65f6\u95f4\uff09\uff0c\u8d77\u521d\u7684\u4f5c\u8005\u662fLinus Torvalds\u3002Linux\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bde\u751f\u3001\u53d1\u5c55\u548c\u6210\u957f\u8fc7\u7a0b\u4f9d\u8d56\u77405\u4e2a\u91cd\u8981\u652f\u67f1\uff1aUNIX\u64cd\u4f5c\u7cfb\u7edf\u3001Minix\u64cd\u4f5c\u7cfb\u7edf\u3001GNU\u8ba1\u5212\u3001POSIX\u6807\u51c6\u548cInternet\u3002","date":"2025-09-15T14:44:14.893Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":9.415,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.5\u3000Tegra I2 C\u603b\u7ebf\u9a71\u52a8\u5b9e\u4f8b"},"nextItem":{"title":"16.1.1\u3000\u4e3b\u673a\u4fa7\u4e0e\u8bbe\u5907\u4fa7USB\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.1\u3000Linux USB\u9a71\u52a8\u5c42\u6b21"}},"content":"Linux\u64cd\u4f5c\u7cfb\u7edf\u662fUNIX\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u79cd\u514b\u9686\u7cfb\u7edf\uff0c\u662f\u4e00\u79cd\u7c7bUNIX\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8bde\u751f\u4e8e1991\u5e7410\u67085\u65e5\uff08\u7b2c\u4e00\u6b21\u6b63\u5f0f\u5411\u5916\u516c\u5e03\u7684\u65f6\u95f4\uff09\uff0c\u8d77\u521d\u7684\u4f5c\u8005\u662fLinus Torvalds\u3002Linux\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bde\u751f\u3001\u53d1\u5c55\u548c\u6210\u957f\u8fc7\u7a0b\u4f9d\u8d56\u77405\u4e2a\u91cd\u8981\u652f\u67f1\uff1aUNIX\u64cd\u4f5c\u7cfb\u7edf\u3001Minix\u64cd\u4f5c\u7cfb\u7edf\u3001GNU\u8ba1\u5212\u3001POSIX\u6807\u51c6\u548cInternet\u3002\\r\\n\\r\\n# 1.UNIX\u64cd\u4f5c\u7cfb\u7edf\\r\\n\\r\\nUNIX\u64cd\u4f5c\u7cfb\u7edf\u662f\u7f8e\u56fd\u8d1d\u5c14\u5b9e\u9a8c\u5ba4\u7684Ken.Thompson\u548cDennis Ritchie\u4e8e1969\u5e74\u590f\u5728DEC PDP-7\u5c0f\u578b\u8ba1\u7b97\u673a\u4e0a\u5f00\u53d1\u7684\u4e00\u4e2a\u5206\u65f6\u64cd\u4f5c\u7cfb\u7edf\u3002Linux\u64cd\u4f5c\u7cfb\u7edf\u53ef\u770b\u4f5cUNIX\u64cd\u4f5c\u7cfb\u7edf\u7684\u4e00\u4e2a\u514b\u9686\u7248\u672c\u3002\\r\\n\\r\\n# 2.Minix\u64cd\u4f5c\u7cfb\u7edf\\r\\n\\r\\nMinix\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u662fUNIX\u7684\u4e00\u79cd\u514b\u9686\u7cfb\u7edf\uff0c\u5b83\u4e8e1987\u5e74\u7531\u8457\u540d\u8ba1\u7b97\u673a\u6559\u6388Andrew S.Tanenbaum\u5f00\u53d1\u5b8c\u6210\u3002\u6709\u5f00\u653e\u6e90\u4ee3\u7801\u7684Minix\u7cfb\u7edf\u7684\u51fa\u73b0\u5728\u5168\u4e16\u754c\u7684\u5927\u5b66\u4e2d\u522e\u8d77\u4e86\u5b66\u4e60UNIX\u7cfb\u7edf\u7684\u65cb\u98ce\u3002Linux\u521a\u5f00\u59cb\u5c31\u662f\u53c2\u7167Minix\u7cfb\u7edf\u4e8e1991\u5e74\u5f00\u53d1\u7684\u3002\\r\\n\\r\\n# 3.GNU\u8ba1\u5212\\r\\n\\r\\nGNU\u8ba1\u5212\u548c\u81ea\u7531\u8f6f\u4ef6\u57fa\u91d1\u4f1a\uff08FSF\uff09\u662f\u7531Richard M.Stallman\u4e8e1984\u5e74\u521b\u529e\u7684\uff0cGNU\u662f\u201cGNU\'s Not UNIX\u201d\u7684\u7f29\u5199\u3002\u523020\u4e16\u7eaa90\u5e74\u4ee3\u521d\uff0cGNU\u9879\u76ee\u5df2\u7ecf\u5f00\u53d1\u51fa\u8bb8\u591a\u9ad8\u8d28\u91cf\u7684\u514d\u8d39\u8f6f\u4ef6\uff0c\u5176\u4e2d\u5305\u62ecemacs\u7f16\u8f91\u7cfb\u7edf\u3001bash shell\u7a0b\u5e8f\u3001gcc\u7cfb\u5217\u7f16\u8bd1\u7a0b\u5e8f\u3001GDB\u8c03\u8bd5\u7a0b\u5e8f\u7b49\u3002\u8fd9\u4e9b\u8f6f\u4ef6\u4e3aLinux\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f00\u53d1\u521b\u9020\u4e86\u4e00\u4e2a\u5408\u9002\u7684\u73af\u5883\uff0c\u662fLinux\u8bde\u751f\u7684\u57fa\u7840\u4e4b\u4e00\u3002\u6ca1\u6709GNU\u8f6f\u4ef6\u73af\u5883\uff0cLinux\u5c06\u5bf8\u6b65\u96be\u884c\u3002\u56e0\u6b64\uff0c\u4e25\u683c\u6765\u8bf4\uff0c\u201cLinux\u201d\u5e94\u8be5\u79f0\u4e3a\u201cGNU/Linux\u201d\u7cfb\u7edf\\r\\n\\r\\n\u4e0b\u9762\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u4e3a\u524d\u6587\u6240\u63d0\u5230\u76845\u4f4d\u5927\u5e08Linus Torvalds\u3001Dennis Ritchie\u3001Ken.Thompson\u3001Andrew S.Tanenbaum\u3001Richard M.Stallman\u3002\u4f46\u613f\u6211\u4eec\u80fd\u591f\u8ffd\u968f\u5927\u5e08\u7684\u8db3\u8ff9\uff0c\u8ba9\u81ea\u5df1\u4e0d\u65ad\u5730\u6210\u957f\u4e0e\u8fdb\u6b65\u3002Linus Torvalds\u7684\u4e00\u756a\u8bdd\u751a\u4e3a\u6709\u9053\u7406\uff1a\u201cMost good programmers do programming not because they expect to get paid or get adulation by the public\uff0cbut because it is fun to program.\u201d\u6280\u672f\u6210\u957f\u7684\u6e90\u52a8\u529b\u5e94\u8be5\u662f\u5174\u8da3\u800c\u975e\u5176\u4ed6\uff0c\u53ea\u6709\u5174\u8da3\u624d\u53ef\u4ee5\u652f\u6491\u4e00\u4e2a\u4eba\u6301\u7eed\u4e0d\u65ad\u5730\u5341\u5e74\u5982\u4e00\u65e5\u5730\u52aa\u529b\u4e0e\u5b66\u4e60\u3002Linus Torvalds\u672c\u4eba\uff0c\u867d\u7136\u5df2\u7ecf\u662f\u4e00\u4ee3\u5927\u5e08\uff0c\u4ecd\u7136\u5728\u4e0d\u65ad\u5730\u7ba1\u7406\u548c\u5408\u5e76Linux\u5185\u6838\u7684\u4ee3\u7801\u3002\u8fd9\u70b9\uff0c\u5728\u56fd\u5185\u6d6e\u8e81\u7684\u5b66\u672f\u6c1b\u56f4\u4e4b\u4e0b\uff0c\u51e0\u4e4e\u662f\u4e0d\u53ef\u601d\u8bae\u7684\u3002\u6211\u60f3\uff0c\u4e2d\u56fd\u68a6\u81f3\u5c11\u5305\u542b\u6bcf\u4e2a\u7801\u519c\u90fd\u53ef\u4ee5\u56e0\u4e3a\u6280\u672f\u6210\u957f\u800c\u5f97\u5230\u4eba\u751f\u51fa\u5f69\u7684\u673a\u4f1a\u3002\\r\\n\\r\\n![1742736775006](./figure/1742736775006.png)\\r\\n\\r\\n# 4.POSIX\u6807\u51c6\\r\\n\\r\\nPOSIX\uff08Portable Operating System Interface\uff0c\u53ef\u79fb\u690d\u7684\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\uff09\u662f\u7531IEEE\u548cISO/IEC\u5f00\u53d1\u7684\u4e00\u7ec4\u6807\u51c6\u3002\u8be5\u6807\u51c6\u57fa\u4e8e\u73b0\u6709\u7684UNIX\u5b9e\u8df5\u548c\u7ecf\u9a8c\u5b8c\u6210\uff0c\u63cf\u8ff0\u4e86\u64cd\u4f5c\u7cfb\u7edf\u7684\u8c03\u7528\u670d\u52a1\u63a5\u53e3\uff0c\u7528\u4e8e\u4fdd\u8bc1\u7f16\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u6e90\u4ee3\u7801\u7ea7\u4e0a\u5728\u591a\u79cd\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u79fb\u690d\u3002\u8be5\u6807\u51c6\u5728\u63a8\u52a8Linux\u64cd\u4f5c\u7cfb\u7edf\u671d\u7740\u6b63\u89c4\u5316\u53d1\u5c55\uff0c\u662fLinux\u524d\u8fdb\u7684\u706f\u5854\u3002\\r\\n\\r\\n# 5.\u4e92\u8054\u7f51\\r\\n\\r\\n\u5982\u679c\u6ca1\u6709\u4e92\u8054\u7f51\uff0c\u6ca1\u6709\u904d\u5e03\u5168\u4e16\u754c\u7684\u65e0\u6570\u8ba1\u7b97\u673a\u9a87\u5ba2\u7684\u65e0\u79c1\u5949\u732e\uff0c\u90a3\u4e48Linux\u6700\u591a\u53ea\u80fd\u53d1\u5c55\u5230Linux 0.13\uff080.95\uff09\u7248\u672c\u7684\u6c34\u5e73\u3002\u4eceLinux 0.95\u7248\u5f00\u59cb\uff0c\u5bf9\u5185\u6838\u7684\u8bb8\u591a\u6539\u8fdb\u548c\u6269\u5145\u5747\u4ee5\u5176\u4ed6\u4eba\u4e3a\u4e3b\u4e86\uff0c\u800cLinus\u4ee5\u53ca\u5176\u4ed6\u7ef4\u62a4\u8005\u7684\u4e3b\u8981\u4efb\u52a1\u5f00\u59cb\u53d8\u6210\u5bf9\u5185\u6838\u7684\u7ef4\u62a4\u548c\u51b3\u5b9a\u662f\u5426\u91c7\u7528\u67d0\u4e2a\u8865\u4e01\u7a0b\u5e8f\u3002\\r\\n\\r\\n\u88683.1\u63cf\u8ff0\u4e86Linux\u64cd\u4f5c\u7cfb\u7edf\u91cd\u8981\u7248\u672c\u7684\u53d8\u8fc1\u5386\u53f2\u53ca\u5404\u7248\u672c\u7684\u4e3b\u8981\u7279\u70b9\\r\\n\\r\\n![image-20250323213354384](./figure/image-20250323213354384.png)\\r\\n\\r\\nLinux\u5185\u6838\u901a\u5e38\u4ee52~3\u4e2a\u6708\u4e3a\u5468\u671f\u66f4\u65b0\u4e00\u6b21\u5927\u7684\u7248\u672c\u53f7\uff0c\u5982Linux 2.6.34\u662f\u57282010\u5e745\u6708\u53d1\u5e03\u7684\uff0cLinux 2.6.35\u7684\u53d1\u5e03\u65f6\u95f4\u5219\u4e3a2010\u5e748\u6708\u3002Linux 2.6\u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c\u662fLinux 2.6.39\uff0c\u4e4b\u540eLinux\u5185\u6838\u8fc7\u6e21\u5230Linux 3.0\u7248\u672c\uff0c\u540c\u6837\u4ee52~3\u4e2a\u6708\u4e3a\u5468\u671f\u66f4\u65b0\u5c0f\u6570\u70b9\u540e\u7b2c\u4e00\u4f4d\u3002\u56e0\u6b64\uff0c\u5185\u6838Linux 3.x\u65f6\u4ee3\uff0cLinux 3\u548cLinux 2.6\u7684\u5730\u4f4d\u5bf9\u7b49\uff0c\u56e0\u6b64\uff0cLinux 2.6\u65f6\u4ee3\u7684\u7248\u672c\u53d8\u66f4\u662fLinux 2.6.N~2.6.N+1\u4ee52~3\u4e2a\u6708\u4e3a\u5468\u671f\u9012\u8fdb\uff0c\u800cLinux 3.x\u65f6\u4ee3\u540e\uff0c\u5219\u662fLinux 3.N~3.N+1\u4ee52~3\u4e2a\u6708\u4e3a\u5468\u671f\u9012\u8fdb\u3002Linux 3.x\u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c\u662fLinux 3.19\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u7248\u672c\u53d1\u5e03\u540e\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4e00\u4e2a\u4fee\u590dbug\u6216\u8005\u5c11\u91cf\u7279\u6027\u7684\u53cd\u5411\u79fb\u690d\uff08Backport\uff0c\u5373\u628a\u65b0\u7248\u672c\u4e2d\u624d\u6709\u7684\u8865\u4e01\u79fb\u690d\u5230\u5df2\u7ecf\u53d1\u5e03\u7684\u8001\u7248\u672c\u4e2d\uff09\u7684\u5de5\u4f5c\uff0c\u8fd9\u6837\u7684\u7248\u672c\u4ee5\u5c0f\u6570\u70b9\u540e\u6700\u540e\u4e00\u4f4d\u7684\u5f62\u5f0f\u53d1\u5e03\uff0c\u5982Linux 2.6.35.1\u3001Linux 2.6.35.2\u3001Linux 3.10.1\u548cLinux 3.10.2\u7b49\u3002\u6b64\u7c7b\u5df2\u7ecf\u53d1\u5e03\u7684\u7248\u672c\u7684\u7ef4\u62a4\u7248\u672c\u901a\u5e38\u662f\u7531Greg Kroah-Hartman\u7b49\u4eba\u8fdb\u884c\u7ba1\u7406\u7684\u3002Greg Kroah-Hartman\u662f\u540d\u8457LDD3\uff08\u300aLinux\u8bbe\u5907\u9a71\u52a8\uff08\u7b2c3\u7248\uff09\u300b\u7684\u4f5c\u8005\u4e4b\u4e00\u3002\\r\\n\\r\\n\u5173\u4e8eLinux\u5185\u6838\u4eceLinux 2.6.39\u53d8\u66f4\u4e3aLinux 3.0\u7684\u53d8\u5316\uff0c\u6309\u7167Linus Torvalds\u7684\u89e3\u91ca\uff0c\u5e76\u6ca1\u6709\u4ec0\u4e48\u5927\u7684\u6539\u53d8\uff1a\u201cNOTHING.Absolutely nothing.Sure\uff0cwe have the usual two thirds driver changes\uff0cand a lot of random fixes\uff0cbut the point is that 3.0is*just*about renumbering\uff0cwe are very much*not*doing a KDE-4or a Gnome-3here.No breakage\uff0cno special scary new features\uff0cnothing at all like that.\u201d\u56e0\u6b64\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u7248\u672c\u53f7\u53d8\u66f4\u4e3a\u201c3.x\u201d\u7684\u539f\u56e0\u5c31\u662f\u201c\u6211\u559c\u6b22\u201d\u3002\\r\\n\\r\\n\u5173\u4e8eLinux\u5185\u6838\u6bcf\u4e00\u4e2a\u7248\u672c\u5177\u4f53\u7684\u53d8\u66f4\uff0c\u53ef\u4ee5\u53c2\u8003\u7f51\u9875http://kernelnewbies.org/LinuxVersions \uff0c\u6bd4\u5982Linux 3.15\u9488\u5bf9Linux 3.14\u7684\u53d8\u66f4\u5f52\u7eb3\u5728\uff1ahttp://kernelnewbies.org/Linux_3.15 \u3002\\r\\n\\r\\n\u5c31\u5728\u672c\u4e66\u5199\u4f5c\u7684\u8fc7\u7a0b\u4e2d\uff0c2015\u5e742\u670823\u65e5\uff0c\u4e5f\u8fce\u6765\u4e86Linux 4.0-rc1\u7684\u8bde\u751f\uff0c\u800c\u7406\u7531\u4ecd\u7136\u662f\u90a3\u4e48\u201c\u65e0\u5398\u5934\u201d\uff1a\\r\\n\\r\\n```\\r\\n..after extensive statistical analysis of my G+ polling\uff0cI\'ve come to the inescapable conclusion that internet polls are bad.\\r\\nBig surprise.\\r\\nBut\\"Hurr durr I\'ma sheep\\"trounced\\"I like online polls\\"by a 62-to-38%margin\uff0cin a poll that people weren\'t even supposed to participate in.\\r\\nWho can argue with solid numbers like that 5796 votes from people who can\'t even follow the most basic directions\\r\\nIn contrast\uff0c\\"v4.0\\"beat out\\"v3.20\\"by a slimmer margin of 56-to-44%\uff0cbut with a total of 29110 votes right now.\\r\\nNow\uff0carguably\uff0cthat vote spread is only about 3200 votes\uff0cwhich is less than the almost six thousand votes that the\\"please ignore\\"poll got\uff0cso it could be considered noise.\\r\\nBut hey\uff0cI asked\uff0cso I\'ll honor the votes.\\r\\n```\\r\\n\\r\\n\u4ece\u88683.1\u53ef\u4ee5\u770b\u51fa\uff0cLinux\u7684\u5f00\u53d1\u4e00\u76f4\u671d\u7740\u652f\u6301\u66f4\u591a\u7684CPU\u3001\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u548c\u5916\u90e8\u8bbe\u5907\uff0c\u652f\u6301\u66f4\u5e7f\u6cdb\u9886\u57df\u7684\u5e94\u7528\uff0c\u63d0\u4f9b\u66f4\u597d\u7684\u6027\u80fd\u8fd93\u4e2a\u65b9\u5411\u53d1\u5c55\u3002\u6309\u7167\u73b0\u5728\u7684\u72b6\u51b5\uff0cLinux\u5185\u6838\u672c\u8eab\u57fa\u672c\u6ca1\u6709\u5927\u7684\u8def\u7ebf\u56fe\uff0c\u5b8c\u5168\u662f\u6839\u636e\u4f7f\u7528Linux\u5185\u6838\u7684\u4f01\u4e1a\u548c\u4e2a\u4eba\u7684\u9700\u6c42\uff0c\u88ab\u76f8\u5e94\u7684\u4f01\u4e1a\u548c\u4e2a\u4eba\u5f00\u53d1\u51fa\u6765\u5e76\u8d21\u732e\u7ed9Linux\u4ea7\u54c1\u7ebf\u7684\u3002\u7b80\u5355\u5730\u8bf4\uff0cLinux\u5185\u6838\u662f\u4e00\u4e2a\u6f14\u53d8\u800c\u4e0d\u662f\u4e00\u4e2a\u8bbe\u8ba1\u3002\u5173\u4e8eLinux\u7684\u8fd1\u671f\u70ed\u70b9\u548c\u8d70\u5411\uff0c\u53ef\u4ee5\u53c2\u8003\u4f4d\u4e8ehttp://www.linuxfoundation.org/news-media/lwf \u7684\u300aLinux Weather \\r\\n\\r\\n\u9664\u4e86Linux\u5185\u6838\u672c\u8eab\u53ef\u63d0\u4f9b\u514d\u8d39\u4e0b\u8f7d\u4ee5\u5916\uff0c\u4e00\u4e9b\u5382\u5546\u5c01\u88c5\u4e86Linux\u5185\u6838\u548c\u5927\u91cf\u6709\u7528\u7684\u8f6f\u4ef6\u5305\u3001\u4e2d\u95f4\u4ef6\u3001\u684c\u9762\u73af\u5883\u548c\u5e94\u7528\u7a0b\u5e8f\uff0c\u5236\u5b9a\u4e86\u9488\u5bf9\u684c\u9762PC\u548c\u670d\u52a1\u5668\u7684Linux\u53d1\u884c\u7248\uff08Distro\uff09\uff0c\u5982Ubuntu\u3001Red Hat\u3001Fedora\u3001Debian\u3001SuSe\u3001Gentoo\u7b49\uff0c\u56fd\u5185\u7684\u7ea2\u65d7Linux\u5f00\u53d1\u5546\u4e2d\u79d1\u7ea2\u65d7\u5219\u5df2\u7ecf\u5ba3\u5e03\u5012\u95ed\u3002\\r\\n\\r\\n\u518d\u8005\uff0c\u9488\u5bf9\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u5e94\u7528\uff0c\u4e00\u4e9b\u96c6\u6210\u548c\u4f18\u5316\u5185\u6838\u3001\u5f00\u53d1\u5de5\u5177\u3001\u4e2d\u95f4\u4ef6\u548cUI\u6846\u67b6\u7684\u5d4c\u5165\u5f0fLinux\u88ab\u5f00\u53d1\u51fa\u6765\u4e86\uff0c\u4f8b\u5982MontaVista Linux\u3001Mentor Embedded Linux\u3001MeeGo\u3001Tizen\u3001Firefox OS\u7b49\u3002\\r\\n\\r\\nAndroid\u91c7\u7528Linux\u5185\u6838\uff0c\u4f46\u662f\u5728\u5185\u6838\u91cc\u52a0\u5165\u4e86\u4e00\u7cfb\u5217\u8865\u4e01\uff0c\u5982Binder\u3001ashmem\u3001wakelock\u3001low memory killer\u3001RAM_CONSOLE\u7b49\uff0c\u76ee\u524d\uff0c\u8fd9\u4e9b\u8865\u4e01\u4e2d\u7684\u7edd\u5927\u591a\u6570\u5df2\u7ecf\u8fdb\u5165Linux\u7684\u4ea7\u54c1\u7ebf\u3002\\r\\n\\r\\n\u56fe3.1\u663e\u793a\u4e86Linux 2.6.13\u4ee5\u6765\u6bcf\u4e2a\u5185\u6838\u7248\u672c\u53c2\u4e0e\u7684\u4eba\u3001\u7ec4\u7ec7\u7684\u60c5\u51b5\u4ee5\u53ca\u6bcf\u6b21\u7248\u672c\u6f14\u8fdb\u7684\u65f6\u5019\u88ab\u6539\u53d8\u7684\u4ee3\u7801\u884c\u6570\u548c\u8865\u4e01\u7684\u6570\u91cf\u3002\u76ee\u524d\u6bcf\u6b21\u7248\u672c\u5347\u7ea7\uff0c\u90fd\u6709\u5206\u5e03\u4e8e200\u591a\u4e2a\u7ec4\u7ec7\u8d85\u8fc71000\u4eba\u63d0\u4ea4\u4ee3\u7801\uff0c\u88ab\u6539\u53d8\u7684\u4ee3\u7801\u884c\u6570\u8d85\u8fc7100\u4e07\u884c\uff0c\u8865\u4e01\u6570\u91cf\u8fbe1\u4e07\u4e2a\u3002\\r\\n\\r\\n![1742737052939](./figure/1742737052939.png)\\r\\n\\r\\n\u56fe3.1\u3000Linux\u5185\u6838\u5f00\u53d1\u4eba\u5458\u548c\u8865\u4e01\u60c5\u51b5"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.1\u3000Linux USB\u9a71\u52a8\u5c42\u6b21","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.1\u3000Linux USB\u9a71\u52a8\u5c42\u6b21","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.1\u3000Linux USB\u9a71\u52a8\u5c42\u6b21.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.1\u3000Linux USB\u9a71\u52a8\u5c42\u6b21.md","title":"16.1.1\u3000\u4e3b\u673a\u4fa7\u4e0e\u8bbe\u5907\u4fa7USB\u9a71\u52a8","description":"USB\u91c7\u7528\u6811\u5f62\u62d3\u6251\u7ed3\u6784\uff0c\u4e3b\u673a\u4fa7\u548c\u8bbe\u5907\u4fa7\u7684USB\u63a7\u5236\u5668\u5206\u522b\u79f0\u4e3a\u4e3b\u673a\u63a7\u5236\u5668\uff08Host Controller\uff09\u548cUSB\u8bbe\u5907\u63a7\u5236\u5668\uff08UDC\uff09\uff0c\u6bcf\u6761\u603b\u7ebf\u4e0a\u53ea\u6709\u4e00\u4e2a\u4e3b\u673a\u63a7\u5236\u5668\uff0c\u8d1f\u8d23\u534f\u8c03\u4e3b\u673a\u548c\u8bbe\u5907\u95f4\u7684\u901a\u4fe1\uff0c\u800c\u8bbe\u5907\u4e0d\u80fd\u4e3b\u52a8\u5411\u4e3b\u673a\u53d1\u9001\u4efb\u4f55\u6d88\u606f\u3002\u5982\u56fe16.1\u6240\u793a\uff0c\u5728Linux\u7cfb\u7edf\u4e2d\uff0cUSB\u9a71\u52a8\u53ef\u4ee5\u4ece\u4e24\u4e2a\u89d2\u5ea6\u53bb\u89c2\u5bdf\uff0c\u4e00\u4e2a\u89d2\u5ea6\u662f\u4e3b\u673a\u4fa7\uff0c\u4e00\u4e2a\u89d2\u5ea6\u662f\u8bbe\u5907\u4fa7\u3002","date":"2025-09-15T14:44:14.885Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":12.985,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.1\u3000Linux\u5185\u6838\u7684\u53d1\u5c55\u4e0e\u6f14\u53d8"},"nextItem":{"title":"11.1.1\u3000\u5185\u5b58\u7a7a\u95f4\u4e0eI/O\u7a7a\u95f4","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.1\u3000CPU\u4e0e\u5185\u5b58\u3001IO"}},"content":"USB\u91c7\u7528\u6811\u5f62\u62d3\u6251\u7ed3\u6784\uff0c\u4e3b\u673a\u4fa7\u548c\u8bbe\u5907\u4fa7\u7684USB\u63a7\u5236\u5668\u5206\u522b\u79f0\u4e3a\u4e3b\u673a\u63a7\u5236\u5668\uff08Host Controller\uff09\u548cUSB\u8bbe\u5907\u63a7\u5236\u5668\uff08UDC\uff09\uff0c\u6bcf\u6761\u603b\u7ebf\u4e0a\u53ea\u6709\u4e00\u4e2a\u4e3b\u673a\u63a7\u5236\u5668\uff0c\u8d1f\u8d23\u534f\u8c03\u4e3b\u673a\u548c\u8bbe\u5907\u95f4\u7684\u901a\u4fe1\uff0c\u800c\u8bbe\u5907\u4e0d\u80fd\u4e3b\u52a8\u5411\u4e3b\u673a\u53d1\u9001\u4efb\u4f55\u6d88\u606f\u3002\u5982\u56fe16.1\u6240\u793a\uff0c\u5728Linux\u7cfb\u7edf\u4e2d\uff0cUSB\u9a71\u52a8\u53ef\u4ee5\u4ece\u4e24\u4e2a\u89d2\u5ea6\u53bb\u89c2\u5bdf\uff0c\u4e00\u4e2a\u89d2\u5ea6\u662f\u4e3b\u673a\u4fa7\uff0c\u4e00\u4e2a\u89d2\u5ea6\u662f\u8bbe\u5907\u4fa7\u3002\\r\\n\\r\\n\u5982\u56fe16.1\u7684\u5de6\u4fa7\u6240\u793a\uff0c\u4ece\u4e3b\u673a\u4fa7\u53bb\u770b\uff0c\u5728Linux\u9a71\u52a8\u4e2d\uff0c\u5904\u4e8eUSB\u9a71\u52a8\u6700\u5e95\u5c42\u7684\u662fUSB\u4e3b\u673a\u63a7\u5236\u5668\u786c\u4ef6\uff0c\u5728\u5176\u4e0a\u8fd0\u884c\u7684\u662fUSB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\uff0c\u5728\u4e3b\u673a\u63a7\u5236\u5668\u4e0a\u7684\u4e3aUSB\u6838\u5fc3\u5c42\uff0c\u518d\u4e0a\u5c42\u4e3aUSB\u8bbe\u5907\u9a71\u52a8\u5c42\uff08\u63d2\u5165\u4e3b\u673a\u4e0a\u7684U\u76d8\u3001\u9f20\u6807\u3001USB\u8f6c\u4e32\u53e3\u7b49\u8bbe\u5907\u9a71\u52a8\uff09\u3002\u56e0\u6b64\uff0c\u5728\u4e3b\u673a\u4fa7\u7684\u5c42\u6b21\u7ed3\u6784\u4e2d\uff0c\u8981\u5b9e\u73b0\u7684USB\u9a71\u52a8\u5305\u62ec\u4e24\u7c7b\uff1aUSB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u548cUSB\u8bbe\u5907\u9a71\u52a8\uff0c\u524d\u8005\u63a7\u5236\u63d2\u5165\u5176\u4e2d\u7684USB\u8bbe\u5907\uff0c\u540e\u8005\u63a7\u5236USB\u8bbe\u5907\u5982\u4f55\u4e0e\u4e3b\u673a\u901a\u4fe1\u3002Linux\u5185\u6838\u4e2d\u7684USB\u6838\u5fc3\u8d1f\u8d23USB\u9a71\u52a8\u7ba1\u7406\u548c\u534f\u8bae\u5904\u7406\u7684\u4e3b\u8981\u5de5\u4f5c\u3002\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u548c\u8bbe\u5907\u9a71\u52a8\u4e4b\u95f4\u7684USB\u6838\u5fc3\u975e\u5e38\u91cd\u8981\uff0c\u5176\u529f\u80fd\u5305\u62ec\uff1a\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e9b\u6570\u636e\u7ed3\u6784\u3001\u5b8f\u548c\u529f\u80fd\u51fd\u6570\uff0c\u5411\u4e0a\u4e3a\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u7f16\u7a0b\u63a5\u53e3\uff0c\u5411\u4e0b\u4e3aUSB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u63d0\u4f9b\u7f16\u7a0b\u63a5\u53e3\uff1b\u7ef4\u62a4\u6574\u4e2a\u7cfb\u7edf\u7684USB\u8bbe\u5907\u4fe1\u606f\uff1b\u5b8c\u6210\u8bbe\u5907\u70ed\u63d2\u62d4\u63a7\u5236\u3001\u603b\u7ebf\u6570\u636e\u4f20\u8f93\u63a7\u5236\u7b49\u3002\\r\\n\\r\\n![image-20250421222438443](./figure/image-20250421222438443.png)\\r\\n\\r\\n\u56fe16.1\u3000Linux USB\u9a71\u52a8\u603b\u4f53\u7ed3\u6784\\r\\n\\r\\n\u5982\u56fe16.1\u7684\u53f3\u4fa7\u6240\u793a\uff0cLinux\u5185\u6838\u4e2dUSB\u8bbe\u5907\u4fa7\u9a71\u52a8\u7a0b\u5e8f\u5206\u4e3a3\u4e2a\u5c42\u6b21\uff1aUDC\u9a71\u52a8\u7a0b\u5e8f\u3001Gadget Function API\u548cGadget Function\u9a71\u52a8\u7a0b\u5e8f\u3002UDC\u9a71\u52a8\u7a0b\u5e8f\u76f4\u63a5\u8bbf\u95ee\u786c\u4ef6\uff0c\u63a7\u5236USB\u8bbe\u5907\u548c\u4e3b\u673a\u95f4\u7684\u5e95\u5c42\u901a\u4fe1\uff0c\u5411\u4e0a\u5c42\u63d0\u4f9b\u4e0e\u786c\u4ef6\u76f8\u5173\u64cd\u4f5c\u7684\u56de\u8c03\u51fd\u6570\u3002\u5f53\u524dGadget Function API\u662fUDC\u9a71\u52a8\u7a0b\u5e8f\u56de\u8c03\u51fd\u6570\u7684\u7b80\u5355\u5305\u88c5\u3002Gadget Function\u9a71\u52a8\u7a0b\u5e8f\u5177\u4f53\u63a7\u5236USB\u8bbe\u5907\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u4f7f\u8bbe\u5907\u8868\u73b0\u51fa\u201c\u7f51\u7edc\u8fde\u63a5\u201d\u3001\u201c\u6253\u5370\u673a\u201d\u6216\u201cUSB Mass Storage\u201d\u7b49\u7279\u6027\uff0c\u5b83\u4f7f\u7528Gadget Function API\u63a7\u5236UDC\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd\u3002Gadget Function API\u628a\u4e0b\u5c42\u7684UDC\u9a71\u52a8\u7a0b\u5e8f\u548c\u4e0a\u5c42\u7684Gadget Function\u9a71\u52a8\u7a0b\u5e8f\u9694\u79bb\u5f00\uff0c\u4f7f\u5f97\u5728Linux\u7cfb\u7edf\u4e2d\u7f16\u5199USB\u8bbe\u5907\u4fa7\u9a71\u52a8\u7a0b\u5e8f\u65f6\u80fd\u591f\u628a\u529f\u80fd\u7684\u5b9e\u73b0\u548c\u5e95\u5c42\u901a\u4fe1\u5206\u79bb\u3002\\r\\n\\r\\n# 16.1.2\u3000\u8bbe\u5907\u3001\u914d\u7f6e\u3001\u63a5\u53e3\u3001\u7aef\u70b9\\r\\n\\r\\n\u5728USB\u8bbe\u5907\u7684\u903b\u8f91\u7ec4\u7ec7\u4e2d\uff0c\u5305\u542b\u8bbe\u5907\u3001\u914d\u7f6e\u3001\u63a5\u53e3\u548c\u7aef\u70b94\u4e2a\u5c42\u6b21\u3002\\r\\n\\r\\n\u6bcf\u4e2aUSB\u8bbe\u5907\u90fd\u63d0\u4f9b\u4e0d\u540c\u7ea7\u522b\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u914d\u7f6e\uff0c\u4e0d\u540c\u7684\u914d\u7f6e\u4f7f\u8bbe\u5907\u8868\u73b0\u51fa\u4e0d\u540c\u7684\u529f\u80fd\u7ec4\u5408\uff08\u5728\u63a2\u6d4b/\u8fde\u63a5\u671f\u95f4\u9700\u4ece\u5176\u4e2d\u9009\u5b9a\u4e00\u4e2a\uff09\uff0c\u914d\u7f6e\u7531\u591a\u4e2a\u63a5\u53e3\u7ec4\u6210\u3002\\r\\n\\r\\n\u5728USB\u534f\u8bae\u4e2d\uff0c\u63a5\u53e3\u7531\u591a\u4e2a\u7aef\u70b9\u7ec4\u6210\uff0c\u4ee3\u8868\u4e00\u4e2a\u57fa\u672c\u7684\u529f\u80fd\uff0c\u662fUSB\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u63a7\u5236\u7684\u5bf9\u8c61\uff0c\u4e00\u4e2a\u529f\u80fd\u590d\u6742\u7684USB\u8bbe\u5907\u53ef\u4ee5\u5177\u6709\u591a\u4e2a\u63a5\u53e3\u3002\u6bcf\u4e2a\u914d\u7f6e\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a\u63a5\u53e3\uff0c\u800c\u8bbe\u5907\u63a5\u53e3\u662f\u7aef\u70b9\u7684\u6c47\u96c6\uff08Collection\uff09\u3002\u4f8b\u5982\uff0cUSB\u626c\u58f0\u5668\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u97f3\u9891\u63a5\u53e3\u4ee5\u53ca\u5bf9\u65cb\u94ae\u548c\u6309\u94ae\u7684\u63a5\u53e3\u3002\u4e00\u4e2a\u914d\u7f6e\u4e2d\u7684\u6240\u6709\u63a5\u53e3\u53ef\u4ee5\u540c\u65f6\u6709\u6548\uff0c\u5e76\u53ef\u88ab\u4e0d\u540c\u7684\u9a71\u52a8\u7a0b\u5e8f\u8fde\u63a5\u3002\u6bcf\u4e2a\u63a5\u53e3\u53ef\u4ee5\u6709\u5907\u7528\u63a5\u53e3\uff0c\u4ee5\u63d0\u4f9b\u4e0d\u540c\u8d28\u91cf\u7684\u670d\u52a1\u53c2\u6570\u3002\\r\\n\\r\\n\u7aef\u70b9\u662fUSB\u901a\u4fe1\u7684\u6700\u57fa\u672c\u5f62\u5f0f\uff0c\u6bcf\u4e00\u4e2aUSB\u8bbe\u5907\u63a5\u53e3\u5728\u4e3b\u673a\u770b\u6765\u5c31\u662f\u4e00\u4e2a\u7aef\u70b9\u7684\u96c6\u5408\u3002\u4e3b\u673a\u53ea\u80fd\u901a\u8fc7\u7aef\u70b9\u4e0e\u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\uff0c\u4ee5\u4f7f\u7528\u8bbe\u5907\u7684\u529f\u80fd\u3002\u5728USB\u7cfb\u7edf\u4e2d\u6bcf\u4e00\u4e2a\u7aef\u70b9\u90fd\u6709\u552f\u4e00\u7684\u5730\u5740\uff0c\u8fd9\u662f\u7531\u8bbe\u5907\u5730\u5740\u548c\u7aef\u70b9\u53f7\u7ed9\u51fa\u7684\u3002\u6bcf\u4e2a\u7aef\u70b9\u90fd\u6709\u4e00\u5b9a\u7684\u5c5e\u6027\uff0c\u5176\u4e2d\u5305\u62ec\u4f20\u8f93\u65b9\u5f0f\u3001\u603b\u7ebf\u8bbf\u95ee\u9891\u7387\u3001\u5e26\u5bbd\u3001\u7aef\u70b9\u53f7\u548c\u6570\u636e\u5305\u7684\u6700\u5927\u5bb9\u91cf\u7b49\u3002\u4e00\u4e2aUSB\u7aef\u70b9\u53ea\u80fd\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u627f\u8f7d\u6570\u636e\uff0c\u4ece\u4e3b\u673a\u5230\u8bbe\u5907\uff08\u79f0\u4e3a\u8f93\u51fa\u7aef\u70b9\uff09\u6216\u8005\u4ece\u8bbe\u5907\u5230\u4e3b\u673a\uff08\u79f0\u4e3a\u8f93\u5165\u7aef\u70b9\uff09\uff0c\u56e0\u6b64\u7aef\u70b9\u53ef\u770b\u4f5c\u662f\u4e00\u4e2a\u5355\u5411\u7684\u7ba1\u9053\u3002\u7aef\u70b90\u901a\u5e38\u4e3a\u63a7\u5236\u7aef\u70b9\uff0c\u7528\u4e8e\u8bbe\u5907\u521d\u59cb\u5316\u53c2\u6570\u7b49\u3002\u53ea\u8981\u8bbe\u5907\u8fde\u63a5\u5230USB\u4e0a\u5e76\u4e14\u4e0a\u7535\uff0c\u7aef\u70b90\u5c31\u53ef\u4ee5\u88ab\u8bbf\u95ee\u3002\u7aef\u70b91\u30012\u7b49\u4e00\u822c\u7528\u4f5c\u6570\u636e\u7aef\u70b9\uff0c\u5b58\u653e\u4e3b\u673a\u4e0e\u8bbe\u5907\u95f4\u5f80\u6765\u7684\u6570\u636e\u3002\\r\\n\\r\\n\u603b\u4f53\u800c\u8a00\uff0cUSB\u8bbe\u5907\u975e\u5e38\u590d\u6742\uff0c\u7531\u8bb8\u591a\u4e0d\u540c\u7684\u903b\u8f91\u5355\u5143\u7ec4\u6210\uff0c\u5982\u56fe16.2\u6240\u793a\uff0c\u8fd9\u4e9b\u5355\u5143\u4e4b\u95f4\u7684\u5173\u7cfb\u5982\u4e0b\uff1a\\r\\n\\r\\n![1745245932552](./figure/1745245932552.png)\\r\\n\\r\\n\u56fe16.2\u3000USB\u8bbe\u5907\u3001\u914d\u7f6e\u3001\u63a5\u53e3\u548c\u7aef\u70b9\\r\\n\\r\\n- \xb7\u8bbe\u5907\u901a\u5e38\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u914d\u7f6e\uff1b\\r\\n- \xb7\u914d\u7f6e\u901a\u5e38\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u63a5\u53e3\uff1b\\r\\n- \xb7\u63a5\u53e3\u901a\u5e38\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u8bbe\u7f6e\uff1b\\r\\n- \xb7\u63a5\u53e3\u6709\u96f6\u4e2a\u6216\u591a\u4e2a\u7aef\u70b9\u3002\\r\\n\\r\\n\u8fd9\u79cd\u5c42\u6b21\u5316\u914d\u7f6e\u4fe1\u606f\u5728\u8bbe\u5907\u4e2d\u901a\u8fc7\u4e00\u7ec4\u6807\u51c6\u7684\u63cf\u8ff0\u7b26\u6765\u63cf\u8ff0\uff0c\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\n- \xb7\u8bbe\u5907\u63cf\u8ff0\u7b26\uff1a\u5173\u4e8e\u8bbe\u5907\u7684\u901a\u7528\u4fe1\u606f\uff0c\u5982\u4f9b\u5e94\u5546ID\u3001\u4ea7\u54c1ID\u548c\u4fee\u8ba2ID\uff0c\u652f\u6301\u7684\u8bbe\u5907\u7c7b\u3001\u5b50\u7c7b\u548c\u9002\u7528\u7684\u534f\u8bae\u4ee5\u53ca\u9ed8\u8ba4\u7aef\u70b9\u7684\u6700\u5927\u5305\u5927\u5c0f\u7b49\u3002\u5728Linux\u5185\u6838\u4e2d\uff0cUSB\u8bbe\u5907\u7528usb_device\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\uff0cUSB\u8bbe\u5907\u63cf\u8ff0\u7b26\u5b9a\u4e49\u4e3ausb_device_descriptor\u7ed3\u6784\u4f53\uff0c\u4f4d\u4e8einclude/uapi/linux/usb/ch9.h\u6587\u4ef6\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535516.1\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.1\u3000usb_device_descriptor\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_device_descriptor  {\\r\\n 2   __u8  bLength;           /* \u63cf\u8ff0\u7b26\u957f\u5ea6*/\\r\\n 3   __u8  bDescriptorType;   /* \u63cf\u8ff0\u7b26\u7c7b\u578b\u7f16\u53f7*/\\r\\n 4\\r\\n 5   __le16 bcdUSB;           /* USB\u7248\u672c\u53f7*/\\r\\n 6   __u8  bDeviceClass;      /* USB\u5206\u914d\u7684\u8bbe\u5907\u7c7bcode */\\r\\n 7   __u8  bDeviceSubClass;   /* USB\u5206\u914d\u7684\u5b50\u7c7bcode */\\r\\n 8   __u8  bDeviceProtocol;   /* USB\u5206\u914d\u7684\u534f\u8baecode */\\r\\n 9   __u8  bMaxPacketSize0;   /* endpoint0\u6700\u5927\u5305\u5927\u5c0f*/\\r\\n10   __le16 idVendor;         /* \u5382\u5546\u7f16\u53f7*/\\r\\n11   __le16 idProduct;        /* \u4ea7\u54c1\u7f16\u53f7*/\\r\\n12   __le16 bcdDevice;        /* \u8bbe\u5907\u51fa\u5382\u7f16\u53f7*/\\r\\n13   __u8  iManufacturer;     /* \u63cf\u8ff0\u5382\u5546\u5b57\u7b26\u4e32\u7684\u7d22\u5f15*/\\r\\n14   __u8  iProduct;          /* \u63cf\u8ff0\u4ea7\u54c1\u5b57\u7b26\u4e32\u7684\u7d22\u5f15*/\\r\\n15   __u8  iSerialNumber;     /* \u63cf\u8ff0\u8bbe\u5907\u5e8f\u5217\u53f7\u5b57\u7b26\u4e32\u7684\u7d22\u5f15*/\\r\\n16   __u8  bNumConfigurations;/* \u53ef\u80fd\u7684\u914d\u7f6e\u6570\u91cf*/\\r\\n17} __attribute__ ((packed));\\r\\n```\\r\\n\\r\\n- \xb7\u914d\u7f6e\u63cf\u8ff0\u7b26\uff1a\u6b64\u914d\u7f6e\u4e2d\u7684\u63a5\u53e3\u6570\u3001\u652f\u6301\u7684\u6302\u8d77\u548c\u6062\u590d\u80fd\u529b\u4ee5\u53ca\u529f\u7387\u8981\u6c42\u3002USB\u914d\u7f6e\u5728\u5185\u6838\u4e2d\u4f7f\u7528usb_host_config\u7ed3\u6784\u4f53\u63cf\u8ff0\uff0c\u800cUSB\u914d\u7f6e\u63cf\u8ff0\u7b26\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53usb_config_descriptor\uff0c\u5982\u4ee3\u7801\u6e05\u535516.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.2\u3000usb_config_descriptor\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_config_descriptor  {\\r\\n 3   __u8  bLength;               /* \u63cf\u8ff0\u7b26\u957f\u5ea6*/\\r\\n 4   __u8  bDescriptorType;       /* \u63cf\u8ff0\u7b26\u7c7b\u578b\u7f16\u53f7*/\\r\\n 5\\r\\n 6   __le16 wTotalLength;         /* \u914d\u7f6e\u6240\u8fd4\u56de\u7684\u6240\u6709\u6570\u636e\u7684\u5927\u5c0f*/\\r\\n 7   __u8  bNumInterfaces;        /* \u914d\u7f6e\u6240\u652f\u6301\u7684\u63a5\u53e3\u6570*/\\r\\n 8   __u8  bConfigurationValue;   /* Set_Configuration\u547d\u4ee4\u9700\u8981\u7684\u53c2\u6570\u503c*/\\r\\n 9   __u8  iConfiguration;        /* \u63cf\u8ff0\u8be5\u914d\u7f6e\u7684\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u503c*/\\r\\n10   __u8  bmAttributes;          /* \u4f9b\u7535\u6a21\u5f0f\u7684\u9009\u62e9*/\\r\\n11   __u8  bMaxPower;             /* \u8bbe\u5907\u4ece\u603b\u7ebf\u63d0\u53d6\u7684\u6700\u5927\u7535\u6d41 */\\r\\n12} _ attribute__ ((packed));\\r\\n```\\r\\n\\r\\n- \xb7\u63a5\u53e3\u63cf\u8ff0\u7b26\uff1a\u63a5\u53e3\u7c7b\u3001\u5b50\u7c7b\u548c\u9002\u7528\u7684\u534f\u8bae\uff0c\u63a5\u53e3\u5907\u7528\u914d\u7f6e\u7684\u6570\u76ee\u548c\u7aef\u70b9\u6570\u76ee\u3002USB\u63a5\u53e3\u5728\u5185\u6838\u4e2d\u4f7f\u7528usb_interface\u7ed3\u6784\u4f53\u63cf\u8ff0\uff0c\u800cUSB\u63a5\u53e3\u63cf\u8ff0\u7b26\u5b9a\u4e49\u4e3a\u7ed3\u6784\u4f53usb_interface_descriptor\uff0c\u5982\u4ee3\u7801\u6e05\u535516.3\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.3\u3000usb_interface_descriptor\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_interface_descriptor  {\\r\\n 3   __u8  bLength;               /* \u63cf\u8ff0\u7b26\u957f\u5ea6*/\\r\\n 4   __u8  bDescriptorType;       /* \u63cf\u8ff0\u7b26\u7c7b\u578b*/\\r\\n 5\\r\\n 6   __u8  bInterfaceNumber;      /* \u63a5\u53e3\u7684\u7f16\u53f7*/\\r\\n 7   __u8  bAlternateSetting;     /* \u5907\u7528\u7684\u63a5\u53e3\u63cf\u8ff0\u7b26\u7f16\u53f7*/\\r\\n 8   __u8  bNumEndpoints;         /* \u8be5\u63a5\u53e3\u4f7f\u7528\u7684\u7aef\u70b9\u6570\uff0c\u4e0d\u5305\u62ec\u7aef\u70b90 */\\r\\n 9   __u8  bInterfaceClass;       /* \u63a5\u53e3\u7c7b\u578b*/\\r\\n10   __u8  bInterfaceSubClass;    /* \u63a5\u53e3\u5b50\u7c7b\u578b*/\\r\\n11   __u8  bInterfaceProtocol;    /* \u63a5\u53e3\u6240\u9075\u5faa\u7684\u534f\u8bae*/\\r\\n12   __u8  iInterface;            /* \u63cf\u8ff0\u8be5\u63a5\u53e3\u7684\u5b57\u7b26\u4e32\u7d22\u5f15\u503c*/\\r\\n13} __attribute__ ((packed));\\r\\n```\\r\\n\\r\\n- \xb7\u7aef\u70b9\u63cf\u8ff0\u7b26\uff1a\u7aef\u70b9\u5730\u5740\u3001\u65b9\u5411\u548c\u7c7b\u578b\uff0c\u652f\u6301\u7684\u6700\u5927\u5305\u5927\u5c0f\uff0c\u5982\u679c\u662f\u4e2d\u65ad\u7c7b\u578b\u7684\u7aef\u70b9\u5219\u8fd8\u5305\u62ec\u8f6e\u8be2\u9891\u7387\u3002\u5728Linux\u5185\u6838\u4e2d\uff0cUSB\u7aef\u70b9\u4f7f\u7528usb_host_endpoint\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\uff0c\u800cUSB\u7aef\u70b9\u63cf\u8ff0\u7b26\u5b9a\u4e49\u4e3ausb_endpoint_descriptor\u7ed3\u6784\u4f53\uff0c\u5982\u4ee3\u7801\u6e05\u535516.4\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.4\u3000usb_endpoint_descriptor\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1  struct usb_endpoint_descriptor {\\r\\n 3   __u8  bLength;              /* \u63cf\u8ff0\u7b26\u957f\u5ea6*/\\r\\n 4   __u8  bDescriptorType;      /* \u63cf\u8ff0\u7b26\u7c7b\u578b*/\\r\\n 5   __u8  bEndpointAddress;     /* \u7aef\u70b9\u5730\u5740\uff1a0~3\u4f4d\u662f\u7aef\u70b9\u53f7\uff0c\u7b2c7\u4f4d\u662f\u65b9\u5411(0\u4e3a\u8f93\u51fa,1\u4e3a\u8f93\u5165) */\\r\\n 6   __u8  bmAttributes;         /* \u7aef\u70b9\u5c5e\u6027\uff1abit[0:1] \u7684\u503c\u4e3a00\u8868\u793a\u63a7\u5236\uff0c\u4e3a01\u8868\u793a\u540c\u6b65\uff0c\u4e3a02\u8868\u793a\u6279\u91cf\uff0c\u4e3a03\u8868\u793a\u4e2d\u65ad*/\\r\\n 7   __le16 wMaxPacketSize;      /* \u672c\u7aef\u70b9\u63a5\u6536\u6216\u53d1\u9001\u7684\u6700\u5927\u4fe1\u606f\u5305\u7684\u5927\u5c0f*/\\r\\n 8   __u8  bInterval;            /* \u8f6e\u8be2\u6570\u636e\u4f20\u9001\u7aef\u70b9\u7684\u65f6\u95f4\u95f4\u9694*/\\r\\n 9                               /* \u5bf9\u4e8e\u6279\u91cf\u4f20\u9001\u7684\u7aef\u70b9\u4ee5\u53ca\u63a7\u5236\u4f20\u9001\u7684\u7aef\u70b9\uff0c\u6b64\u57df\u5ffd\u7565*/\\r\\n10                               /* \u5bf9\u4e8e\u540c\u6b65\u4f20\u9001\u7684\u7aef\u70b9\uff0c\u6b64\u57df\u5fc5\u987b\u4e3a1 */\\r\\n11                               /* \u5bf9\u4e8e\u4e2d\u65ad\u4f20\u9001\u7684\u7aef\u70b9\uff0c\u6b64\u57df\u503c\u7684\u8303\u56f4\u4e3a1~255 */\\r\\n12   __u8  bRefresh;\\r\\n13   __u8  bSynchAddress;\\r\\n14} __attribute__ ((packed));\\r\\n```\\r\\n\\r\\n- \xb7\u5b57\u7b26\u4e32\u63cf\u8ff0\u7b26\uff1a\u5728\u5176\u4ed6\u63cf\u8ff0\u7b26\u4e2d\u4f1a\u4e3a\u67d0\u4e9b\u5b57\u6bb5\u63d0\u4f9b\u5b57\u7b26\u4e32\u7d22\u5f15\uff0c\u5b83\u4eec\u53ef\u88ab\u7528\u6765\u68c0\u7d22\u63cf\u8ff0\u6027\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4ee5\u591a\u79cd\u8bed\u8a00\u5f62\u5f0f\u63d0\u4f9b\u3002\u5b57\u7b26\u4e32\u63cf\u8ff0\u7b26\u662f\u53ef\u9009\u7684\uff0c\u6709\u7684\u8bbe\u5907\u6709\uff0c\u6709\u7684\u8bbe\u5907\u6ca1\u6709\uff0c\u5b57\u7b26\u4e32\u63cf\u8ff0\u7b26\u5bf9\u5e94\u4e8eusb_string_descriptor\u7ed3\u6784\u4f53\uff0c\u5982\u4ee3\u7801\u6e05\u535516.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.5\u3000usb_string_descriptor\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_string_descriptor {\\r\\n 3   __u8  bLength;            /* \u63cf\u8ff0\u7b26\u957f\u5ea6*/\\r\\n 4   __u8  bDescriptorType;    /* \u63cf\u8ff0\u7b26\u7c7b\u578b*/\\r\\n 5\\r\\n 6   __le16 wData[1];          /* \u4ee5UTF-16LE\u7f16\u7801*/\\r\\n 7} __attribute__ ((packed));\\r\\n```\\r\\n\\r\\n\u4f8b\u5982\uff0c\u7b14\u8005\u5728PC\u4e0a\u63d2\u5165\u4e00\u4e2aSanDisk U\u76d8\u540e\uff0c\u901a\u8fc7lsusb\u547d\u4ee4\u5f97\u5230\u4e0e\u8fd9\u4e2aU\u76d8\u76f8\u5173\u7684\u63cf\u8ff0\u7b26\uff0c\u4ece\u4e2d\u53ef\u4ee5\u663e\u793a\u8fd9\u4e2aU\u76d8\u5305\u542b\u4e86\u4e00\u4e2a\u8bbe\u5907\u63cf\u8ff0\u7b26\u3001\u4e00\u4e2a\u914d\u7f6e\u63cf\u8ff0\u7b26\u3001\u4e00\u4e2a\u63a5\u53e3\u63cf\u8ff0\u7b26\u3001\u6279\u91cf\u8f93\u5165\u548c\u6279\u91cf\u8f93\u51fa\u4e24\u4e2a\u7aef\u70b9\u63cf\u8ff0\u7b26\u3002\u5448\u73b0\u51fa\u6765\u7684\u4fe1\u606f\u5185\u5bb9\u76f4\u63a5\u5bf9\u5e94\u4e8eusb_device_descriptor\u3001usb_config_descriptor\u3001usb_interface_descriptor\u3001usb_endpoint_descriptor\u3001usb_string_descriptor\u7ed3\u6784\u4f53\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\nBus 001 Device 004: ID 0781:5151 SanDisk Corp.\\r\\nDevice Descriptor:\\r\\n bLength              18\\r\\n bDescriptorType        1\\r\\n bcdUSB             2.00\\r\\n bDeviceClass           0 Interface\\r\\n bDeviceSubClass         0\\r\\n bDeviceProtocol         0\\r\\n bMaxPacketSize0        64\\r\\n idVendor          0x0781 SanDisk Corp.\\r\\n idProduct         0x5151\\r\\n bcdDevice           0.10\\r\\n iManufacturer          1 SanDisk Corporation\\r\\n iProduct              2 Cruzer Micro\\r\\n iSerial               3 20060877500A1BE1FDE1\\r\\n bNumConfigurations      1\\r\\n Configuration Descriptor:\\r\\n  bLength                 9\\r\\n  bDescriptorType        2\\r\\n  wTotalLength          32\\r\\n  bNumInterfaces         1\\r\\n  bConfigurationValue     1\\r\\n  iConfiguration         0\\r\\n  bmAttributes        0x80\\r\\n  MaxPower            200mA\\r\\n  Interface Descriptor:\\r\\n   bLength               9\\r\\n   bDescriptorType        4\\r\\n   bInterfaceNumber       0\\r\\n   bAlternateSetting      0\\r\\n   bNumEndpoints         2\\r\\n   bInterfaceClass        8 Mass Storage\\r\\n   bInterfaceSubClass     6 SCSI\\r\\n   bInterfaceProtocol    80 Bulk (Zip)\\r\\n   iInterface           0\\r\\n   Endpoint Descriptor:\\r\\n    bLength              7\\r\\n    bDescriptorType       5\\r\\n    bEndpointAddress    0x81  EP 1 IN\\r\\n    bmAttributes          2\\r\\n     Transfer Type         Bulk\\r\\n     Synch Type           none\\r\\n    wMaxPacketSize      512\\r\\n    bInterval            0\\r\\n   Endpoint Descriptor:\\r\\n    bLength              7\\r\\n    bDescriptorType       5\\r\\n    bEndpointAddress    0x01  EP 1 OUT\\r\\n    bmAttributes          2\\r\\n     Transfer Type           Bulk\\r\\n     Synch Type             none\\r\\n    wMaxPacketSize       512\\r\\n    bInterval             1\\r\\n Language IDs: (length=4)\\r\\n   0409 English(US)\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.1\u3000CPU\u4e0e\u5185\u5b58\u3001IO","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.1\u3000CPU\u4e0e\u5185\u5b58\u3001IO","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.1\u3000CPU\u4e0e\u5185\u5b58\u3001IO.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.1\u3000CPU\u4e0e\u5185\u5b58\u3001IO.md","title":"11.1.1\u3000\u5185\u5b58\u7a7a\u95f4\u4e0eI/O\u7a7a\u95f4","description":"\u5728X86\u5904\u7406\u5668\u4e2d\u5b58\u5728\u7740I/O\u7a7a\u95f4\u7684\u6982\u5ff5\uff0cI/O\u7a7a\u95f4\u662f\u76f8\u5bf9\u4e8e\u5185\u5b58\u7a7a\u95f4\u800c\u8a00\u7684\uff0c\u5b83\u901a\u8fc7\u7279\u5b9a\u7684\u6307\u4ee4in\u3001out\u6765\u8bbf\u95ee\u3002\u7aef\u53e3\u53f7\u6807\u8bc6\u4e86\u5916\u8bbe\u7684\u5bc4\u5b58\u5668\u5730\u5740\u3002Intel\u8bed\u6cd5\u4e2d\u7684in\u3001out\u6307\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a","date":"2025-09-15T14:44:14.881Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":10.115,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"16.1.1\u3000\u4e3b\u673a\u4fa7\u4e0e\u8bbe\u5907\u4fa7USB\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.1\u3000Linux USB\u9a71\u52a8\u5c42\u6b21"},"nextItem":{"title":"15.3.1\u3000I2 C\u9002\u914d\u5668\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.3\u3000Linux I2 C\u9002\u914d\u5668\u9a71\u52a8"}},"content":"\u5728X86\u5904\u7406\u5668\u4e2d\u5b58\u5728\u7740I/O\u7a7a\u95f4\u7684\u6982\u5ff5\uff0cI/O\u7a7a\u95f4\u662f\u76f8\u5bf9\u4e8e\u5185\u5b58\u7a7a\u95f4\u800c\u8a00\u7684\uff0c\u5b83\u901a\u8fc7\u7279\u5b9a\u7684\u6307\u4ee4in\u3001out\u6765\u8bbf\u95ee\u3002\u7aef\u53e3\u53f7\u6807\u8bc6\u4e86\u5916\u8bbe\u7684\u5bc4\u5b58\u5668\u5730\u5740\u3002Intel\u8bed\u6cd5\u4e2d\u7684in\u3001out\u6307\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nIN \u7d2f\u52a0\u5668, {\u7aef\u53e3\u53f7\u2502DX}\\r\\nOUT {\u7aef\u53e3\u53f7\u2502DX},\u7d2f\u52a0\u5668\\r\\n```\\r\\n\\r\\n\u76ee\u524d\uff0c\u5927\u591a\u6570\u5d4c\u5165\u5f0f\u5fae\u63a7\u5236\u5668\uff08\u5982ARM\u3001PowerPC\u7b49\uff09\u4e2d\u5e76\u4e0d\u63d0\u4f9bI/O\u7a7a\u95f4\uff0c\u800c\u4ec5\u5b58\u5728\u5185\u5b58\u7a7a\u95f4\u3002\u5185\u5b58\u7a7a\u95f4\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u5730\u5740\u3001\u6307\u9488\u6765\u8bbf\u95ee\uff0c\u7a0b\u5e8f\u53ca\u5728\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u4f7f\u7528\u7684\u53d8\u91cf\u548c\u5176\u4ed6\u6570\u636e\u90fd\u5b58\u5728\u4e8e\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\\r\\n\\r\\n\u5185\u5b58\u5730\u5740\u53ef\u4ee5\u76f4\u63a5\u7531C\u8bed\u8a00\u6307\u9488\u64cd\u4f5c\uff0c\u4f8b\u5982\u5728186\u5904\u7406\u5668\u4e2d\u6267\u884c\u5982\u4e0b\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nunsigned char *p = (unsigned char *)0xF000FF00;\\r\\n*p=11; \\r\\n```\\r\\n\\r\\n\u4ee5\u4e0a\u7a0b\u5e8f\u7684\u610f\u4e49\u662f\u5728\u7edd\u5bf9\u5730\u57400xF0000+0xFF00\uff08186\u5904\u7406\u5668\u4f7f\u752816\u4f4d\u6bb5\u5730\u5740\u548c16\u4f4d\u504f\u79fb\u5730\u5740\uff09\u4e2d\u5199\u516511\u3002\\r\\n\\r\\n\u800c\u5728ARM\u3001PowerPC\u7b49\u672a\u91c7\u7528\u6bb5\u5730\u5740\u7684\u5904\u7406\u5668\u4e2d\uff0cp\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u5c31\u662f0xF000FF00\uff0c\u800c*p=11\u5c31\u662f\u5728\u8be5\u5730\u5740\u5199\u516511\u3002\\r\\n\\r\\n\u518d\u5982\uff0c186\u5904\u7406\u5668\u542f\u52a8\u540e\u4f1a\u5728\u7edd\u5bf9\u5730\u57400xFFFF0\uff08\u5bf9\u5e94\u7684C\u8bed\u8a00\u6307\u9488\u662f0xF000FFF0\uff0c0xF000\u4e3a\u6bb5\u5730\u5740\uff0c0xFFF0\u4e3a\u6bb5\u5185\u504f\u79fb\uff09\u4e2d\u6267\u884c\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\ntypedef void (*lpFunction) ( );    /* \u5b9a\u4e49\u4e00\u4e2a\u65e0\u53c2\u6570\u3001\u65e0\u8fd4\u56de\u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\u7c7b\u578b*/\\r\\nlpFunction lpReset = (lpFunction)0xF000FFF0; /* \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411*/\\r\\n/* CPU\u542f\u52a8\u540e\u6240\u6267\u884c\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u4f4d\u7f6e*/\\r\\nlpReset();     /* \u8c03\u7528\u51fd\u6570*/\\r\\n```\\r\\n\\r\\n\u5728\u4ee5\u4e0a\u7a0b\u5e8f\u4e2d\uff0c\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u4e00\u4e2a\u51fd\u6570\u5b9e\u4f53\uff0c\u4f46\u662f\u7a0b\u5e8f\u5374\u6267\u884c\u4e86\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\uff1alpReset\uff08\uff09\uff0c\u5b83\u5b9e\u9645\u4e0a\u8d77\u5230\u4e86\u201c\u8f6f\u91cd\u542f\u201d\u7684\u4f5c\u7528\uff0c\u8df3\u8f6c\u5230CPU\u542f\u52a8\u540e\u7b2c\u4e00\u6761\u8981\u6267\u884c\u7684\u6307\u4ee4\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u6307\u9488\u8c03\u7528\u4e00\u4e2a\u6ca1\u6709\u51fd\u6570\u4f53\u7684\u201c\u51fd\u6570\u201d\uff0c\u8fd9\u672c\u8d28\u4e0a\u53ea\u662f\u6362\u4e00\u4e2a\u5730\u5740\u5f00\u59cb\u6267\u884c\u3002\\r\\n\\r\\n\u5373\u4fbf\u662f\u5728X86\u5904\u7406\u5668\u4e2d\uff0c\u867d\u7136\u63d0\u4f9b\u4e86I/O\u7a7a\u95f4\uff0c\u5982\u679c\u7531\u6211\u4eec\u81ea\u5df1\u8bbe\u8ba1\u7535\u8def\u677f\uff0c\u5916\u8bbe\u4ecd\u7136\u53ef\u4ee5\u53ea\u6302\u63a5\u5728\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u6b64\u65f6\uff0cCPU\u53ef\u4ee5\u50cf\u8bbf\u95ee\u4e00\u4e2a\u5185\u5b58\u5355\u5143\u90a3\u6837\u8bbf\u95ee\u5916\u8bbeI/O\u7aef\u53e3\uff0c\u800c\u4e0d\u9700\u8981\u8bbe\u7acb\u4e13\u95e8\u7684I/O\u6307\u4ee4\u3002\u56e0\u6b64\uff0c\u5185\u5b58\u7a7a\u95f4\u662f\u5fc5\u9700\u7684\uff0c\u800cI/O\u7a7a\u95f4\u662f\u53ef\u9009\u7684\u3002\u56fe11.1\u7ed9\u51fa\u4e86\u5185\u5b58\u7a7a\u95f4\u548cI/O\u7a7a\u95f4\u7684\u5bf9\u6bd4\u3002\\r\\n\\r\\n![1743604691202](./figure/1743604691202.png)\\r\\n\\r\\n\u56fe11.1\u3000\u5185\u5b58\u7a7a\u95f4\u548cI/O\u7a7a\u95f4\\r\\n\\r\\n# 11.1.2\u3000\u5185\u5b58\u7ba1\u7406\u5355\u5143\\r\\n\\r\\n\u9ad8\u6027\u80fd\u5904\u7406\u5668\u4e00\u822c\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u5185\u5b58\u7ba1\u7406\u5355\u5143\uff08MMU\uff09\uff0c\u8be5\u5355\u5143\u8f85\u52a9\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u5185\u5b58\u7ba1\u7406\uff0c\u63d0\u4f9b\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u3001\u5185\u5b58\u8bbf\u95ee\u6743\u9650\u4fdd\u62a4\u548cCache\u7f13\u5b58\u63a7\u5236\u7b49\u786c\u4ef6\u652f\u6301\u3002\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u501f\u52a9MMU\u53ef\u4ee5\u8ba9\u7528\u6237\u611f\u89c9\u5230\u7a0b\u5e8f\u597d\u50cf\u53ef\u4ee5\u4f7f\u7528\u975e\u5e38\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u4ece\u800c\u4f7f\u5f97\u7f16\u7a0b\u4eba\u5458\u5728\u5199\u7a0b\u5e8f\u65f6\u4e0d\u7528\u8003\u8651\u8ba1\u7b97\u673a\u4e2d\u7269\u7406\u5185\u5b58\u7684\u5b9e\u9645\u5bb9\u91cf\u3002\\r\\n\\r\\n\u4e3a\u4e86\u7406\u89e3\u57fa\u672c\u7684MMU\u64cd\u4f5c\u539f\u7406\uff0c\u9700\u5148\u660e\u6670\u51e0\u4e2a\u6982\u5ff5\u3002\\r\\n\\r\\n1\uff09TLB\uff08Translation Lookaside Buffer\uff09\uff1a\u5373\u8f6c\u6362\u65c1\u8def\u7f13\u5b58\uff0cTLB\u662fMMU\u7684\u6838\u5fc3\u90e8\u4ef6\uff0c\u5b83\u7f13\u5b58\u5c11\u91cf\u7684\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362\u5173\u7cfb\uff0c\u662f\u8f6c\u6362\u8868\u7684Cache\uff0c\u56e0\u6b64\u4e5f\u7ecf\u5e38\u88ab\u79f0\u4e3a\u201c\u5feb\u8868\u201d\u3002\\r\\n\\r\\n2\uff09TTW\uff08Translation Table walk\uff09\uff1a\u5373\u8f6c\u6362\u8868\u6f2b\u6e38\uff0c\u5f53TLB\u4e2d\u6ca1\u6709\u7f13\u51b2\u5bf9\u5e94\u7684\u5730\u5740\u8f6c\u6362\u5173\u7cfb\u65f6\uff0c\u9700\u8981\u901a\u8fc7\u5bf9\u5185\u5b58\u4e2d\u8f6c\u6362\u8868\uff08\u5927\u591a\u6570\u5904\u7406\u5668\u7684\u8f6c\u6362\u8868\u4e3a\u591a\u7ea7\u9875\u8868\uff0c\u5982\u56fe11.2\u6240\u793a\uff09\u7684\u8bbf\u95ee\u6765\u83b7\u5f97\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u5bf9\u5e94\u5173\u7cfb\u3002TTW\u6210\u529f\u540e\uff0c\u7ed3\u679c\u5e94\u5199\u5165TLB\\r\\n\\r\\n![image-20250402223913713](./figure/image-20250402223913713.png)\\r\\n\\r\\n\u56fe11.2\u3000\u5185\u5b58\u4e2d\u7684\u8f6c\u6362\u8868\\r\\n\\r\\n\u56fe11.3\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5178\u578b\u7684ARM\u5904\u7406\u5668\u8bbf\u95ee\u5185\u5b58\u7684\u8fc7\u7a0b\uff0c\u5176\u4ed6\u5904\u7406\u5668\u4e5f\u6267\u884c\u7c7b\u4f3c\u8fc7\u7a0b\u3002\u5f53ARM\u8981\u8bbf\u95ee\u5b58\u50a8\u5668\u65f6\uff0cMMU\u5148\u67e5\u627eTLB\u4e2d\u7684\u865a\u62df\u5730\u5740\u8868\u3002\u5982\u679cARM\u7684\u7ed3\u6784\u652f\u6301\u5206\u5f00\u7684\u6570\u636eTLB\uff08DTLB\uff09\u548c\u6307\u4ee4TLB\uff08ITLB\uff09\uff0c\u5219\u9664\u4e86\u53d6\u6307\u4ee4\u4f7f\u7528ITLB\u5916\uff0c\u5176\u4ed6\u7684\u90fd\u4f7f\u7528DTLB\u3002ARM\u5904\u7406\u5668\u7684MMU\u5982\u56fe11.3\u6240\u793a\u3002\\r\\n\\r\\n![image-20250402223937691](./figure/image-20250402223937691.png)\\r\\n\\r\\n\u56fe11.3\u3000ARM\u5904\u7406\u5668\u7684MMU\\r\\n\\r\\n\u82e5TLB\u4e2d\u6ca1\u6709\u865a\u62df\u5730\u5740\u7684\u5165\u53e3\uff0c\u5219\u8f6c\u6362\u8868\u904d\u5386\u786c\u4ef6\u5e76\u4ece\u5b58\u653e\u4e8e\u4e3b\u5b58\u50a8\u5668\u5185\u7684\u8f6c\u6362\u8868\u4e2d\u83b7\u53d6\u5730\u5740\u8f6c\u6362\u4fe1\u606f\u548c\u8bbf\u95ee\u6743\u9650\uff08\u5373\u6267\u884cTTW\uff09\uff0c\u540c\u65f6\u5c06\u8fd9\u4e9b\u4fe1\u606f\u653e\u5165TLB\uff0c\u5b83\u6216\u8005\u88ab\u653e\u5728\u4e00\u4e2a\u6ca1\u6709\u4f7f\u7528\u7684\u5165\u53e3\u6216\u8005\u66ff\u6362\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5165\u53e3\u3002\u4e4b\u540e\uff0c\u5728TLB\u6761\u76ee\u4e2d\u63a7\u5236\u4fe1\u606f\u7684\u63a7\u5236\u4e0b\uff0c\u5f53\u8bbf\u95ee\u6743\u9650\u5141\u8bb8\u65f6\uff0c\u5bf9\u771f\u5b9e\u7269\u7406\u5730\u5740\u7684\u8bbf\u95ee\u5c06\u5728Cache\u6216\u8005\u5728\u5185\u5b58\u4e2d\u53d1\u751f\uff0c\u5982\u56fe11.4\u6240\u793a\u3002\\r\\n\\r\\n![image-20250402224028190](./figure/image-20250402224028190.png)\\r\\n\\r\\n\u56fe11.4\u3000ARM CPU\u8fdb\u884c\u6570\u636e\u8bbf\u95ee\u7684\u6d41\u7a0b\\r\\n\\r\\nARM\u5185TLB\u6761\u76ee\u4e2d\u7684\u63a7\u5236\u4fe1\u606f\u7528\u4e8e\u63a7\u5236\u5bf9\u5bf9\u5e94\u5730\u5740\u7684\u8bbf\u95ee\u6743\u9650\u4ee5\u53caCache\u7684\u64cd\u4f5c\u3002\\r\\n\\r\\n- \xb7C\uff08\u9ad8\u901f\u7f13\u5b58\uff09\u548cB\uff08\u7f13\u51b2\uff09\u4f4d\u88ab\u7528\u6765\u63a7\u5236\u5bf9\u5e94\u5730\u5740\u7684\u9ad8\u901f\u7f13\u5b58\u548c\u5199\u7f13\u51b2\uff0c\u5e76\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u9ad8\u901f\u7f13\u5b58\u3002\\r\\n- \xb7\u8bbf\u95ee\u6743\u9650\u548c\u57df\u4f4d\u7528\u6765\u63a7\u5236\u8bfb\u5199\u8bbf\u95ee\u662f\u5426\u88ab\u5141\u8bb8\u3002\u5982\u679c\u4e0d\u5141\u8bb8\uff0cMMU\u5219\u5411ARM\u5904\u7406\u5668\u53d1\u9001\u4e00\u4e2a\u5b58\u50a8\u5668\u5f02\u5e38\uff0c\u5426\u5219\u8bbf\u95ee\u5c06\u88ab\u5141\u8bb8\u8fdb\u884c\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u63cf\u8ff0\u7684MMU\u673a\u5236\u9488\u5bf9\u7684\u867d\u7136\u662fARM\u5904\u7406\u5668\uff0c\u4f46PowerPC\u3001MIPS\u7b49\u5176\u4ed6\u5904\u7406\u5668\u4e5f\u5747\u6709\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002\\r\\n\\r\\nMMU\u5177\u6709\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u8f6c\u6362\u3001\u5185\u5b58\u8bbf\u95ee\u6743\u9650\u4fdd\u62a4\u7b49\u529f\u80fd\uff0c\u8fd9\u5c06\u4f7f\u5f97Linux\u64cd\u4f5c\u7cfb\u7edf\u80fd\u5355\u72ec\u4e3a\u7cfb\u7edf\u7684\u6bcf\u4e2a\u7528\u6237\u8fdb\u7a0b\u5206\u914d\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\u5e76\u4fdd\u8bc1\u7528\u6237\u7a7a\u95f4\u4e0d\u80fd\u8bbf\u95ee\u5185\u6838\u7a7a\u95f4\u7684\u5730\u5740\uff0c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u865a\u62df\u5185\u5b58\u7ba1\u7406\u6a21\u5757\u63d0\u4f9b\u786c\u4ef6\u57fa\u7840\u3002\\r\\n\\r\\n\u5728Linux 2.6.11\u4e4b\u524d\uff0cLinux\u5185\u6838\u786c\u4ef6\u65e0\u5173\u5c42\u4f7f\u7528\u4e86\u4e09\u7ea7\u9875\u8868PGD\u3001PMD\u548cPTE\uff1b\u4eceLinux 2.6.11\u5f00\u59cb\uff0c\u4e3a\u4e86\u914d\u540864\u4f4dCPU\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u786c\u4ef6\u65e0\u5173\u5c42\u5219\u4f7f\u7528\u4e864\u7ea7\u9875\u8868\u76ee\u5f55\u7ba1\u7406\u7684\u65b9\u5f0f\uff0c\u5373PGD\u3001PUD\u3001PMD\u548cPTE\u3002\u6ce8\u610f\u8fd9\u4ec5\u4ec5\u662f\u4e00\u79cd\u8f6f\u4ef6\u610f\u4e49\u4e0a\u7684\u62bd\u8c61\uff0c\u5b9e\u9645\u786c\u4ef6\u7684\u9875\u8868\u7ea7\u6570\u53ef\u80fd\u5c11\u4e8e4\u3002\u4ee3\u7801\u6e05\u535511.1\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u4ece\u865a\u62df\u5730\u5740\u5f97\u5230PTE\u7684\u9875\u8868\u67e5\u8be2\uff08Page Table Walk\uff09\u8fc7\u7a0b\uff0c\u5b83\u53d6\u81eaarch/arm/lib/uaccess_with_memcpy.c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.1\u3000Linux\u7684\u56db\u7ea7\u9875\u8868\u4e0e\u9875\u8868\u67e5\u8be2\\r\\n\\r\\n```\\r\\n 1static int\\r\\n 2pin_page_for_write(const void __user *_addr, pte_t **ptep, spinlock_t **ptlp)\\r\\n 3{\\r\\n 4 unsigned long addr = (unsigned long)_addr;\\r\\n 5 pgd_t *pgd;\\r\\n 6 pmd_t *pmd;\\r\\n 7 pte_t *pte;\\r\\n 8 pud_t *pud;\\r\\n 9 spinlock_t *ptl;\\r\\n10\\r\\n11 pgd = pgd_offset(current->mm, addr);\\r\\n12 if (unlikely(pgd_none(*pgd) || pgd_bad(*pgd)))\\r\\n13     return 0;\\r\\n14\\r\\n15 pud = pud_offset(pgd, addr);\\r\\n16 if (unlikely(pud_none(*pud) || pud_bad(*pud)))\\r\\n17     return 0;\\r\\n18\\r\\n19 pmd = pmd_offset(pud, addr);\\r\\n20 if (unlikely(pmd_none(*pmd)))\\r\\n21     return 0;\\r\\n22\\r\\n23 /*\\r\\n24  * A pmd can be bad if it refers to a HugeTLB or THP page.\\r\\n25  *\\r\\n26  * Both THP and HugeTLB pages have the same pmd layout\\r\\n27  * and should not be manipulated by the pte functions.\\r\\n28  *\\r\\n29  * Lock the page table for the destination and check\\r\\n30  * to see that it\'s still huge and whether or not we will\\r\\n31  * need to fault on write, or if we have a splitting THP.\\r\\n32  */\\r\\n33 if (unlikely(pmd_thp_or_huge(*pmd))) {\\r\\n34     ptl = &current->mm->page_table_lock;\\r\\n35     spin_lock(ptl);\\r\\n36     if (unlikely(!pmd_thp_or_huge(*pmd)\\r\\n37         || pmd_hugewillfault(*pmd)\\r\\n38         || pmd_trans_splitting(*pmd))) {\\r\\n39         spin_unlock(ptl);\\r\\n40         return 0;\\r\\n41     }\\r\\n42\\r\\n43     *ptep = NULL;\\r\\n44     *ptlp = ptl;\\r\\n45     return 1;\\r\\n46 }\\r\\n47\\r\\n48 if (unlikely(pmd_bad(*pmd)))\\r\\n49     return 0;\\r\\n50\\r\\n51 pte = pte_offset_map_lock(current->mm, pmd, addr, &ptl);\\r\\n52 if (unlikely(!pte_present(*pte) || !pte_young(*pte) ||\\r\\n53     !pte_write(*pte) || !pte_dirty(*pte))) {\\r\\n54     pte_unmap_unlock(pte, ptl);\\r\\n55     return 0;\\r\\n56 }\\r\\n57\\r\\n58 *ptep = pte;\\r\\n59 *ptlp = ptl;\\r\\n60\\r\\n61 return 1;\\r\\n62}\\r\\n```\\r\\n\\r\\n\u7b2c1\u884c\u7684\u7c7b\u578b\u4e3astruct\uff0cmm_struct\u7684\u53c2\u6570mm\u7528\u4e8e\u63cf\u8ff0Linux\u8fdb\u7a0b\u6240\u5360\u6709\u7684\u5185\u5b58\u8d44\u6e90\u3002\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684pgd_offset\u3001pud_offset\u3001pmd_offset\u5206\u522b\u7528\u4e8e\u5f97\u5230\u4e00\u7ea7\u9875\u8868\u3001\u4e8c\u7ea7\u9875\u8868\u548c\u4e09\u7ea7\u9875\u8868\u7684\u5165\u53e3\uff0c\u6700\u540e\u901a\u8fc7pte_offset_map_lock\u5f97\u5230\u76ee\u6807\u9875\u8868\u9879pte\u3002\u800c\u4e14\u7b2c33\u884c\u8fd8\u901a\u8fc7pmd_thp_or_huge\uff08\uff09\u5224\u65ad\u662f\u5426\u6709\u5de8\u9875\u7684\u60c5\u51b5\uff0c\u5982\u679c\u662f\u5de8\u9875\uff0c\u5c31\u76f4\u63a5\u8bbf\u95eepmd\u3002\\r\\n\\r\\n\u4f46\u662f\uff0cMMU\u5e76\u4e0d\u662f\u5bf9\u6240\u6709\u7684\u5904\u7406\u5668\u90fd\u662f\u5fc5\u9700\u7684\uff0c\u4f8b\u5982\u5e38\u7528\u7684SAMSUNG\u57fa\u4e8eARM7TDMI\u7cfb\u5217\u7684S3C44B0X\u4e0d\u9644\u5e26MMU\uff0c\u65b0\u7248\u7684Linux 2.6\u652f\u6301\u4e0d\u5e26MMU\u7684\u5904\u7406\u5668\u3002\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4ecd\u5b58\u5728\u5927\u91cf\u65e0MMU\u7684\u5904\u7406\u5668\uff0cLinux 2.6\u4e3a\u4e86\u66f4\u5e7f\u6cdb\u5730\u5e94\u7528\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff0c\u878d\u5408\u4e86mClinux\uff0c\u4ee5\u652f\u6301\u8fd9\u4e9b\u65e0MMU\u7cfb\u7edf\uff0c\u5982Dragonball\u3001ColdFire\u3001Hitachi H8/300\u3001Blackfin\u7b49\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.3\u3000Linux I2 C\u9002\u914d\u5668\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.3\u3000Linux I2 C\u9002\u914d\u5668\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.3\u3000Linux I2 C\u9002\u914d\u5668\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.3\u3000Linux I2 C\u9002\u914d\u5668\u9a71\u52a8.md","title":"15.3.1\u3000I2 C\u9002\u914d\u5668\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500","description":"\u7531\u4e8eI2 C\u603b\u7ebf\u63a7\u5236\u5668\u901a\u5e38\u662f\u5728\u5185\u5b58\u4e0a\u7684\uff0c\u6240\u4ee5\u5b83\u672c\u8eab\u4e5f\u8fde\u63a5\u5728platform\u603b\u7ebf\u4e0a\uff0c\u8981\u901a\u8fc7platformdriver\u548cplatformdevice\u7684\u5339\u914d\u6765\u6267\u884c\u3002\u56e0\u6b64\u5c3d\u7ba1I2 C\u9002\u914d\u5668\u7ed9\u522b\u4eba\u63d0\u4f9b\u4e86\u603b\u7ebf\uff0c\u5b83\u81ea\u5df1\u4e5f\u88ab\u8ba4\u4e3a\u662f\u63a5\u5728platform\u603b\u7ebf\u4e0a\u7684\u4e00\u4e2a\u5ba2\u6237\u3002Linux\u7684\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u6a21\u578b\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u867d\u7136\u53ef\u80fd\u6210\u4e3a\u522b\u4eba\u7684\u603b\u7ebf\u63a7\u5236\u5668\uff0c\u4f46\u662f\u81ea\u5df1\u4e5f\u88ab\u8ba4\u4e3a\u662f\u4ece\u4e0a\u4e00\u7ea7\u603b\u7ebf\u679a\u4e3e\u51fa\u6765\u7684\u3002","date":"2025-09-15T14:44:14.877Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":6.19,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"11.1.1\u3000\u5185\u5b58\u7a7a\u95f4\u4e0eI/O\u7a7a\u95f4","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.1\u3000CPU\u4e0e\u5185\u5b58\u3001IO"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM"}},"content":"\u7531\u4e8eI2 C\u603b\u7ebf\u63a7\u5236\u5668\u901a\u5e38\u662f\u5728\u5185\u5b58\u4e0a\u7684\uff0c\u6240\u4ee5\u5b83\u672c\u8eab\u4e5f\u8fde\u63a5\u5728platform\u603b\u7ebf\u4e0a\uff0c\u8981\u901a\u8fc7platform_driver\u548cplatform_device\u7684\u5339\u914d\u6765\u6267\u884c\u3002\u56e0\u6b64\u5c3d\u7ba1I2 C\u9002\u914d\u5668\u7ed9\u522b\u4eba\u63d0\u4f9b\u4e86\u603b\u7ebf\uff0c\u5b83\u81ea\u5df1\u4e5f\u88ab\u8ba4\u4e3a\u662f\u63a5\u5728platform\u603b\u7ebf\u4e0a\u7684\u4e00\u4e2a\u5ba2\u6237\u3002Linux\u7684\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u6a21\u578b\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8282\u70b9\u867d\u7136\u53ef\u80fd\u6210\u4e3a\u522b\u4eba\u7684\u603b\u7ebf\u63a7\u5236\u5668\uff0c\u4f46\u662f\u81ea\u5df1\u4e5f\u88ab\u8ba4\u4e3a\u662f\u4ece\u4e0a\u4e00\u7ea7\u603b\u7ebf\u679a\u4e3e\u51fa\u6765\u7684\u3002\\r\\n\\r\\n\u901a\u5e38\u6211\u4eec\u4f1a\u5728\u4e0eI2 C\u9002\u914d\u5668\u6240\u5bf9\u5e94\u7684platform_driver\u7684probe\uff08\uff09\u51fd\u6570\u4e2d\u5b8c\u6210\u4e24\u4e2a\u5de5\u4f5c\u3002\\r\\n\\r\\n- \xb7\u521d\u59cb\u5316I2 C\u9002\u914d\u5668\u6240\u4f7f\u7528\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u5982\u7533\u8bf7I/O\u5730\u5740\u3001\u4e2d\u65ad\u53f7\u3001\u65f6\u949f\u7b49\u3002\\r\\n- \xb7\u901a\u8fc7i2c_add_adapter\uff08\uff09\u6dfb\u52a0i2c_adapter\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5f53\u7136\u8fd9\u4e2ai2c_adapter\u6570\u636e\u7ed3\u6784\u7684\u6210\u5458\u5df2\u7ecf\u88abxxx\u9002\u914d\u5668\u7684\u76f8\u5e94\u51fd\u6570\u6307\u9488\u6240\u521d\u59cb\u5316\u3002\\r\\n\\r\\n\u901a\u5e38\u6211\u4eec\u4f1a\u5728platform_driver\u7684remove\uff08\uff09\u51fd\u6570\u4e2d\u5b8c\u6210\u4e0e\u52a0\u8f7d\u51fd\u6570\u76f8\u53cd\u7684\u5de5\u4f5c\u3002\\r\\n\\r\\n- \xb7\u91ca\u653eI2 C\u9002\u914d\u5668\u6240\u4f7f\u7528\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u5982\u91ca\u653eI/O\u5730\u5740\u3001\u4e2d\u65ad\u53f7\u3001\u65f6\u949f\u7b49\u3002\\r\\n- \xb7\u901a\u8fc7i2c_del_adapter\uff08\uff09\u5220\u9664i2c_adapter\u7684\u6570\u636e\u7ed3\u6784\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.9\u6240\u793a\u4e3aI2 C\u9002\u914d\u5668\u9a71\u52a8\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.9\u3000I2 C\u9002\u914d\u7f6e\u9a71\u52a8\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static int xxx_i2c_probe(struct platform_device *pdev)\\r\\n 2{\\r\\n 3         struct i2c_adapter *adap;\\r\\n 4\\r\\n 5         ...\\r\\n 6         xxx_adpater_hw_init()\\r\\n 7         adap->dev.parent = &pdev->dev;\\r\\n 8         adap->dev.of_node = pdev->dev.of_node;\\r\\n 9\\r\\n10         rc = i2c_add_adapter(adap);\\r\\n11         ...\\r\\n12}\\r\\n13\\r\\n14static int xxx_i2c_remove(struct platform_device *pdev)\\r\\n15{\\r\\n16         ...\\r\\n17         xxx_adpater_hw_free()\\r\\n18         i2c_del_adapter(&dev->adapter);\\r\\n19\\r\\n20         return 0;\\r\\n21}\\r\\n22\\r\\n23static const struct of_device_id xxx_i2c_of_match[] = {\\r\\n24         {.compatible = \\"vendor,xxx-i2c\\",},\\r\\n25         {},\\r\\n26};\\r\\n27MODULE_DEVICE_TABLE(of, xxx_i2c_of_match);\\r\\n28\\r\\n29static struct platform_driver xxx_i2c_driver = {\\r\\n30         .driver = {\\r\\n31                   .name = \\"xxx-i2c\\",\\r\\n32                   .owner = THIS_MODULE,\\r\\n33                   .of_match_table = xxx_i2c_of_match,\\r\\n34                   },\\r\\n35         .probe = xxx_i2c_probe,\\r\\n36         .remove = xxx_i2c_remove,\\r\\n37};\\r\\n38module_platform_driver(xxx_i2c_driver);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684xxx_adpater_hw_init\uff08\uff09\u548cxxx_adpater_hw_free\uff08\uff09\u51fd\u6570\u7684\u5b9e\u73b0\u90fd\u4e0e\u5177\u4f53\u7684CPU\u548cI2 C\u9002\u914d\u5668\u786c\u4ef6\u76f4\u63a5\u76f8\u5173\u3002\\r\\n\\r\\n# 15.3.2\u3000I2 C\u603b\u7ebf\u7684\u901a\u4fe1\u65b9\u6cd5\\r\\n\\r\\n\u6211\u4eec\u9700\u8981\u4e3a\u7279\u5b9a\u7684I2 C\u9002\u914d\u5668\u5b9e\u73b0\u901a\u4fe1\u65b9\u6cd5\uff0c\u4e3b\u8981\u662f\u5b9e\u73b0i2c_algorithm\u7684functionality\uff08\uff09\u51fd\u6570\u548cmaster_xfer\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\nfunctionality\uff08\uff09\u51fd\u6570\u975e\u5e38\u7b80\u5355\uff0c\u7528\u4e8e\u8fd4\u56dealgorithm\u6240\u652f\u6301\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u5982I2C_FUNC_I2C\u3001I2C_FUNC_10BIT_ADDR\u3001I2C_FUNC_SMBUS_READ_BYTE\u3001I2C_FUNC_SMBUS_WRITE_BYTE\u7b49\u3002\\r\\n\\r\\nmaster_xfer\uff08\uff09\u51fd\u6570\u5728I2 C\u9002\u914d\u5668\u4e0a\u5b8c\u6210\u4f20\u9012\u7ed9\u5b83\u7684i2c_msg\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2aI2 C\u6d88\u606f\uff0c\u4ee3\u7801\u6e05\u535515.10\u6240\u793a\u4e3axxx\u8bbe\u5907\u7684master_xfer\uff08\uff09\u51fd\u6570\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.10\u3000master_xfer\uff08\uff09\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static int i2c_adapter_xxx_xfer(struct i2c_adapter *adap, struct i2c_msg *msgs,\\r\\n 2    int num)\\r\\n 3{\\r\\n 4    ...\\r\\n 5    for (i = 0; i < num; i++) {\\r\\n 6      i2c_adapter_xxx_start();                                          /* \u4ea7\u751f\u5f00\u59cb\u4f4d*/\\r\\n 7      /*\u662f\u8bfb\u6d88\u606f*/\\r\\n 8      if (msgs[i]->flags &I2C_M_RD) {\\r\\n 9        i2c_adapter_xxx_setaddr((msg->addr << 1) | 1);                  /* \u53d1\u9001\u4ece\u8bbe\u5907\u8bfb\u5730\u5740*/\\r\\n10        i2c_adapter_xxx_wait_ack();                                     /* \u83b7\u5f97\u4ece\u8bbe\u5907\u7684ack */\\r\\n11        i2c_adapter_xxx_readbytes(msgs[i]->buf, msgs[i]->len);          /* \u8bfb\u53d6msgs[i] ->len\\r\\n12          \u957f\u7684\u6570\u636e\u5230msgs[i]->buf */\\r\\n13      } else {                                                          /* \u662f\u5199\u6d88\u606f*/\\r\\n14        i2c_adapter_xxx_setaddr(msg->addr << 1);                        /* \u53d1\u9001\u4ece\u8bbe\u5907\u5199\u5730\u5740\\r\\n */\\r\\n15        i2c_adapter_xxx_wait_ack();                                     /* \u83b7\u5f97\u4ece\u8bbe\u5907\u7684ack */\\r\\n16        i2c_adapter_xxx_writebytes(msgs[i]->buf, msgs[i]->len);         /* \u8bfb\u53d6msgs[i]->len\\r\\n17          \u957f\u7684\u6570\u636e\u5230msgs[i]->buf */\\r\\n18      }\\r\\n19    }\\r\\n20    i2c_adapter_xxx_stop();                                             /* \u4ea7\u751f\u505c\u6b62\u4f4d*/\\r\\n21}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u5b9e\u9645\u4e0a\u7ed9\u51fa\u4e86\u4e00\u4e2amaster_xfer\uff08\uff09\u51fd\u6570\u5904\u7406I2 C\u6d88\u606f\u6570\u7ec4\u7684\u6d41\u7a0b\uff0c\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u6d88\u606f\uff0c\u5148\u5224\u65ad\u6d88\u606f\u7c7b\u578b\uff0c\u82e5\u4e3a\u8bfb\u6d88\u606f\uff0c\u5219\u8d4b\u4ece\u8bbe\u5907\u5730\u5740\u4e3a\uff08msg->addr<<1\uff09|1\uff0c\u5426\u5219\u4e3amsg->addr<<1\u3002\u5bf9\u6bcf\u4e2a\u6d88\u606f\u4ea7\u751f\u4e00\u4e2a\u5f00\u59cb\u4f4d\uff0c\u7d27\u63a5\u7740\u4f20\u9001\u4ece\u8bbe\u5907\u5730\u5740\uff0c\u7136\u540e\u5f00\u59cb\u6570\u636e\u7684\u53d1\u9001\u6216\u63a5\u6536\uff0c\u4e14\u5bf9\u6700\u540e\u7684\u6d88\u606f\u8fd8\u9700\u4ea7\u751f\u4e00\u4e2a\u505c\u6b62\u4f4d\u3002\u56fe15.3\u6240\u793a\u4e3a\u6574\u4e2amaster_xfer\uff08\uff09\u5b8c\u6210\u7684\u65f6\u5e8f\u3002\\r\\n\\r\\n![1745070496677](./figure/1745070496677.png)\\r\\n\\r\\n\u56fe15.3\u3000master_xfer\uff08\uff09\u5b8c\u6210\u7684\u65f6\u5e8f\\r\\n\\r\\nmaster_xfer\uff08\uff09\u51fd\u6570\u6a21\u677f\u4e2d\u7684i2c_adapter_xxx_start\uff08\uff09\u3001i2c_adapter_xxx_setaddr\uff08\uff09\u3001i2c_adapter_xxx_wait_ack\uff08\uff09\u3001i2c_adapter_xxx_readbytes\uff08\uff09\u3001i2c_adapter_xxx_writebytes\uff08\uff09\u548ci2c_adapter_xxx_stop\uff08\uff09\u51fd\u6570\u7528\u4e8e\u5b8c\u6210\u9002\u914d\u5668\u7684\u5e95\u5c42\u786c\u4ef6\u64cd\u4f5c\uff0c\u4e0eI2 C\u9002\u914d\u5668\u548cCPU\u7684\u5177\u4f53\u786c\u4ef6\u76f4\u63a5\u76f8\u5173\uff0c\u9700\u8981\u7531\u5de5\u7a0b\u5e08\u6839\u636e\u82af\u7247\u7684\u6570\u636e\u624b\u518c\u6765\u5b9e\u73b0\u3002\\r\\n\\r\\ni2c_adapter_xxx_readbytes\uff08\uff09\u7528\u4e8e\u4ece\u4ece\u8bbe\u5907\u4e0a\u63a5\u6536\u4e00\u4e32\u6570\u636e\uff0ci2c_adapter_xxx_writebytes\uff08\uff09\u7528\u4e8e\u5411\u4ece\u8bbe\u5907\u5199\u5165\u4e00\u4e32\u6570\u636e\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u5185\u90e8\u4e5f\u4f1a\u6d89\u53caI2 C\u603b\u7ebf\u534f\u8bae\u4e2d\u7684ACK\u5e94\u7b54\u3002\\r\\n\\r\\nmaster_xfer\uff08\uff09\u51fd\u6570\u7684\u5b9e\u73b0\u5f62\u5f0f\u4f1a\u5f88\u591a\u79cd\uff0c\u591a\u6570\u9a71\u52a8\u4ee5\u4e2d\u65ad\u65b9\u5f0f\u6765\u5b8c\u6210\u8fd9\u4e2a\u6d41\u7a0b\uff0c\u6bd4\u5982\u53d1\u8d77\u786c\u4ef6\u64cd\u4f5c\u8bf7\u6c42\u540e\uff0c\u5c06\u81ea\u5df1\u8c03\u5ea6\u51fa\u53bb\uff0c\u56e0\u6b64\u4e2d\u95f4\u4f1a\u4f34\u968f\u7740\u7761\u7720\u7684\u52a8\u4f5c\u3002\\r\\n\\r\\n\u591a\u6570I2 C\u603b\u7ebf\u9a71\u52a8\u4f1a\u5b9a\u4e49\u4e00\u4e2axxx_i2c\u7ed3\u6784\u4f53\uff0c\u4f5c\u4e3ai2c_adapter\u7684algo_data\uff08\u7c7b\u4f3c\u201c\u79c1\u6709\u6570\u636e\u201d\uff09\uff0c\u5176\u4e2d\u5305\u542bI2 C\u6d88\u606f\u6570\u7ec4\u6307\u9488\u3001\u6570\u7ec4\u7d22\u5f15\u53caI2 C\u9002\u914d\u5668Algorithm\u8bbf\u95ee\u63a7\u5236\u7528\u7684\u81ea\u65cb\u9501\u3001\u7b49\u5f85\u961f\u5217\u7b49\uff0c\u800cmaster_xfer\uff08\uff09\u51fd\u6570\u5728\u5b8c\u6210i2c_msg\u6570\u7ec4\u4e2d\u6d88\u606f\u7684\u5904\u7406\u65f6\uff0c\u4e5f\u7ecf\u5e38\u9700\u8981\u8bbf\u95eexxx_i2c\u7ed3\u6784\u4f53\u7684\u6210\u5458\u4ee5\u83b7\u53d6\u5bc4\u5b58\u5668\u57fa\u5730\u5740\u3001\u9501\u7b49\u4fe1\u606f\u3002\u4ee3\u7801\u6e05\u535515.11\u6240\u793a\u4e3a\u4e00\u4e2a\u5178\u578b\u7684xxx_i2c\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\uff0c\u4e0e\u56fe15.2\u4e2d\u7684xxx_i2c\u662f\u5bf9\u5e94\u7684\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u56e0\u786c\u4ef6\u800c\u5f02\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.11\u3000xxx_i2c\u7ed3\u6784\u4f53\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1struct xxx_i2c {\\r\\n 2   spinlock_t     lock;\\r\\n 3   wait_queue_head_t wait;\\r\\n 4   struct i2c_msg    *msg;\\r\\n 5   unsigned int      msg_num;\\r\\n 6   unsigned int      msg_idx;\\r\\n 7   unsigned int      msg_ptr;\\r\\n 8   ...\\r\\n 9   struct i2c_adapter    adap;\\r\\n10};\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM","description":"Linux\u652f\u6301STANDBY\u3001\u6302\u8d77\u5230RAM\u3001\u6302\u8d77\u5230\u786c\u76d8\u7b49\u5f62\u5f0f\u7684\u5f85\u673a\uff0c\u5982\u56fe19.9\u6240\u793a\u3002\u4e00\u822c\u7684\u5d4c\u5165\u5f0f\u4ea7\u54c1\u4ec5\u4ec5\u53ea\u5b9e\u73b0\u4e86\u6302\u8d77\u5230RAM\uff08\u4e5f\u7b80\u79f0\u4e3as2ram\uff0c\u6216\u5e38\u7b80\u79f0\u4e3aSTR\uff09\uff0c\u5373\u5c06\u7cfb\u7edf\u7684\u72b6\u6001\u4fdd\u5b58\u4e8e\u5185\u5b58\u4e2d\uff0c\u5e76\u5c06SDRAM\u7f6e\u4e8e\u81ea\u5237\u65b0\u72b6\u6001\uff0c\u5f85\u7528\u6237\u6309\u952e\u7b49\u64cd\u4f5c\u540e\u518d\u91cd\u65b0\u6062\u590d\u7cfb\u7edf\u3002\u5c11\u6570\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u4f1a\u5b9e\u73b0\u6302\u8d77\u5230\u786c\u76d8\uff08\u7b80\u79f0STD\uff09\uff0c\u5b83\u4e0e\u6302\u8d77\u5230RAM\u7684\u4e0d\u540c\u662fs2ram\u5e76\u4e0d\u5173\u673a\uff0cSTD\u5219\u628a\u7cfb\u7edf\u7684\u72b6\u6001\u4fdd\u6301\u4e8e\u78c1\u76d8\uff0c\u7136\u540e\u5173\u95ed\u6574\u4e2a\u7cfb\u7edf\u3002","date":"2025-09-15T14:44:14.865Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":9.05,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"15.3.1\u3000I2 C\u9002\u914d\u5668\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.3\u3000Linux I2 C\u9002\u914d\u5668\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784"}},"content":"Linux\u652f\u6301STANDBY\u3001\u6302\u8d77\u5230RAM\u3001\u6302\u8d77\u5230\u786c\u76d8\u7b49\u5f62\u5f0f\u7684\u5f85\u673a\uff0c\u5982\u56fe19.9\u6240\u793a\u3002\u4e00\u822c\u7684\u5d4c\u5165\u5f0f\u4ea7\u54c1\u4ec5\u4ec5\u53ea\u5b9e\u73b0\u4e86\u6302\u8d77\u5230RAM\uff08\u4e5f\u7b80\u79f0\u4e3as2ram\uff0c\u6216\u5e38\u7b80\u79f0\u4e3aSTR\uff09\uff0c\u5373\u5c06\u7cfb\u7edf\u7684\u72b6\u6001\u4fdd\u5b58\u4e8e\u5185\u5b58\u4e2d\uff0c\u5e76\u5c06SDRAM\u7f6e\u4e8e\u81ea\u5237\u65b0\u72b6\u6001\uff0c\u5f85\u7528\u6237\u6309\u952e\u7b49\u64cd\u4f5c\u540e\u518d\u91cd\u65b0\u6062\u590d\u7cfb\u7edf\u3002\u5c11\u6570\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u4f1a\u5b9e\u73b0\u6302\u8d77\u5230\u786c\u76d8\uff08\u7b80\u79f0STD\uff09\uff0c\u5b83\u4e0e\u6302\u8d77\u5230RAM\u7684\u4e0d\u540c\u662fs2ram\u5e76\u4e0d\u5173\u673a\uff0cSTD\u5219\u628a\u7cfb\u7edf\u7684\u72b6\u6001\u4fdd\u6301\u4e8e\u78c1\u76d8\uff0c\u7136\u540e\u5173\u95ed\u6574\u4e2a\u7cfb\u7edf\u3002\\r\\n\\r\\n![1747061022345](./figure/1747061022345.png)\\r\\n\\r\\n\u56fe19.9\u3000Linux\u7684\u5f85\u673a\u6a21\u5f0f\\r\\n\\r\\n\u5728Linux\u4e0b\uff0c\u8fd9\u4e9b\u884c\u4e3a\u901a\u5e38\u662f\u7531\u7528\u6237\u7a7a\u95f4\u89e6\u53d1\u7684\uff0c\u901a\u8fc7\u5411/sys/power/state\u5199\u5165mem\u53ef\u5f00\u59cb\u6302\u8d77\u5230RAM\u7684\u6d41\u7a0b\u3002\u5f53\u7136\uff0c\u8bb8\u591aLinux\u4ea7\u54c1\u4f1a\u6709\u4e00\u4e2a\u6309\u952e\uff0c\u4e00\u6309\u5c31\u8fdb\u5165\u6302\u8d77\u5230RAM\u3002\u8fd9\u901a\u5e38\u662f\u7531\u4e8e\u4e0e\u8fd9\u4e2a\u6309\u952e\u5bf9\u5e94\u7684\u8f93\u5165\u8bbe\u5907\u9a71\u52a8\u6c47\u62a5\u4e86\u4e00\u4e2a\u548c\u7535\u6e90\u76f8\u5173\u7684input_event\uff0c\u7528\u6237\u7a7a\u95f4\u7684\u7535\u6e90\u7ba1\u7406daemon\u8fdb\u7a0b\u6536\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u540e\uff0c\u518d\u89e6\u53d1s2ram\u7684\u3002\u5f53\u7136\uff0c\u5185\u6838\u4e5f\u6709\u4e00\u4e2aINPUT_APMPOWER\u9a71\u52a8\uff0c\u4f4d\u4e8edrivers/input/apm-power.c\u4e0b\uff0c\u5b83\u53ef\u4ee5\u5728\u5185\u6838\u7ea7\u522b\u4fa6\u542cEV_PWR\u7c7b\u4e8b\u4ef6\uff0c\u5e76\u901a\u8fc7apm_queue_event\uff08APM_USER_SUSPEND\uff09\u81ea\u52a8\u5f15\u53d1s2ram\uff1a\\r\\n\\r\\n```\\r\\nstatic void system_power_event(unsigned int keycode)\\r\\n{\\r\\nswitch (keycode) {\\r\\ncase KEY_SUSPEND:\\r\\n             apm_queue_event(APM_USER_SUSPEND);\\r\\n             pr_info(\\"Requesting system suspend...\\\\n\\");\\r\\nbreak;\\r\\ndefault:\\r\\nbreak;\\r\\n       }\\r\\n}\\r\\nstatic void apmpower_event(struct input_handle *handle, unsigned int type,\\r\\nunsigned int code, int value)\\r\\n{\u2026\\r\\nswitch (type) {\\r\\ncase EV_PWR:\\r\\n              system_power_event(code);\\r\\nbreak;\u2026\\r\\n     }\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u5927\u81f4\u7684\u6302\u8d77\u5230RAM\u7684\u6302\u8d77\u548c\u6062\u590d\u6d41\u7a0b\u5982\u56fe19.10\u6240\u793a\uff08\u7275\u6d89\u7684\u64cd\u4f5c\u5305\u62ec\u540c\u6b65\u6587\u4ef6\u7cfb\u7edf\u3001freeze\u8fdb\u7a0b\u3001\u8bbe\u5907\u9a71\u52a8\u6302\u8d77\u4ee5\u53ca\u7cfb\u7edf\u7684\u6302\u8d77\u5165\u53e3\u7b49\uff09\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u7684device_driver\u7ed3\u6784\u4e2d\uff0c\u542b\u6709\u4e00\u4e2apm\u6210\u5458\uff0c\u5b83\u662f\u4e00\u4e2adev_pm_ops\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u5728\u8be5\u7ed3\u6784\u4f53\u4e2d\uff0c\u5c01\u88c5\u4e86\u6302\u8d77\u5230RAM\u548c\u6302\u8d77\u5230\u786c\u76d8\u6240\u9700\u8981\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5982\u4ee3\u7801\u6e05\u535519.13\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.13\u3000dev_pm_ops\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1 struct dev_pm_ops {\\r\\n 2        int (*prepare)(struct device *dev);\\r\\n 3        void (*complete)(struct device *dev);\\r\\n 4        int (*suspend)(struct device *dev);\\r\\n 5        int (*resume)(struct device *dev);\\r\\n 6        int (*freeze)(struct device *dev);\\r\\n 7        int (*thaw)(struct device *dev);\\r\\n 8        int (*poweroff)(struct device *dev);\\r\\n 9        int (*restore)(struct device *dev);\\r\\n10        int (*suspend_late)(struct device *dev);\\r\\n11        int (*resume_early)(struct device *dev);\\r\\n12        int (*freeze_late)(struct device *dev);\\r\\n13        int (*thaw_early)(struct device *dev);\\r\\n14        int (*poweroff_late)(struct device *dev);\\r\\n15        int (*restore_early)(struct device *dev);\\r\\n16        int (*suspend_noirq)(struct device *dev);\\r\\n17        int (*resume_noirq)(struct device *dev);\\r\\n18        int (*freeze_noirq)(struct device *dev);\\r\\n19        int (*thaw_noirq)(struct device *dev);\\r\\n20        int (*poweroff_noirq)(struct device *dev);\\r\\n21        int (*restore_noirq)(struct device *dev);\\r\\n22        int (*runtime_suspend)(struct device *dev);\\r\\n23        int (*runtime_resume)(struct device *dev);\\r\\n24        int (*runtime_idle)(struct device *dev);\\r\\n25};\\r\\n```\\r\\n\\r\\n\u56fe19.10\u5b9e\u9645\u4e0a\u4e5f\u7ed9\u51fa\u4e86\u5728\u6302\u8d77\u5230RAM\u7684\u65f6\u5019\u8fd9\u4e9bPM\u56de\u8c03\u51fd\u6570\u7684\u8c03\u7528\u65f6\u673a\u3002\\r\\n\\r\\n![1747061123361](./figure/1747061123361.png)\\r\\n\\r\\n\u56fe19.10\u3000Linux\u6302\u8d77\u5230RAM\u6d41\u7a0b\\r\\n\\r\\n\u76ee\u524d\u6bd4\u8f83\u63a8\u8350\u7684\u505a\u6cd5\u662f\u5728platform_driver\u3001i2c_driver\u548cspi_driver\u7b49xxx_driver\u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684driver\u6210\u5458\u4e2d\uff0c\u4ee5\u4e0a\u8ff0\u7ed3\u6784\u4f53\u7684\u5f62\u5f0f\u5c01\u88c5PM\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u8d4b\u503c\u5230driver\u7684pm\u5b57\u6bb5\u3002\u5982\u4ee3\u7801\u6e05\u535519.14\u4e2d\u7684\u7b2c50\u884c\uff0c\u5728drivers/spi/spi-s3c64xx.c\u4e2d\uff0cplatform_driver\u4e2d\u7684pm\u6210\u5458\u88ab\u8d4b\u503c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.14\u3000\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684pm\u6210\u5458\\r\\n\\r\\n```\\r\\n 1#ifdef CONFIG_PM_SLEEP\\r\\n 2static int s3c64xx_spi_suspend(struct device *dev)\\r\\n 3{\\r\\n 4 struct spi_master *master = dev_get_drvdata(dev);\\r\\n 5 struct s3c64xx_spi_driver_data *sdd = spi_master_get_devdata(master);\\r\\n 6\\r\\n 7 int ret = spi_master_suspend(master);\\r\\n 8 if (ret)\\r\\n 9     return ret;\\r\\n10\\r\\n11 if (!pm_runtime_suspended(dev)) {\\r\\n12     clk_disable_unprepare(sdd->clk);\\r\\n13     clk_disable_unprepare(sdd->src_clk);\\r\\n14 }\\r\\n15\\r\\n16 sdd->cur_speed = 0; /* \u8f93\u51fa\u65f6\u949f\u505c\u6b62*/\\r\\n17\\r\\n18 return 0;\\r\\n19}\\r\\n20\\r\\n21static int s3c64xx_spi_resume(struct device *dev)\\r\\n22{\\r\\n23 struct spi_master *master = dev_get_drvdata(dev);\\r\\n24 struct s3c64xx_spi_driver_data *sdd = spi_master_get_devdata(master);\\r\\n25 struct s3c64xx_spi_info *sci = sdd->cntrlr_info;\\r\\n26\\r\\n27 if (sci->cfg_gpio)\\r\\n28     sci->cfg_gpio();\\r\\n29\\r\\n30 if (!pm_runtime_suspended(dev)) {\\r\\n31     clk_prepare_enable(sdd->src_clk);\\r\\n32     clk_prepare_enable(sdd->clk);\\r\\n33 }\\r\\n34\\r\\n35 s3c64xx_spi_hwinit(sdd, sdd->port_id);\\r\\n36\\r\\n37 return spi_master_resume(master);\\r\\n38}\\r\\n39#endif /* CONFIG_PM_SLEEP */\\r\\n40\\r\\n41static const struct dev_pm_ops s3c64xx_spi_pm = {\\r\\n42 SET_SYSTEM_SLEEP_PM_OPS(s3c64xx_spi_suspend, s3c64xx_spi_resume)\\r\\n43 SET_RUNTIME_PM_OPS(s3c64xx_spi_runtime_suspend,\\r\\n44            s3c64xx_spi_runtime_resume, NULL)\\r\\n45};\\r\\n46\\r\\n47static struct platform_driver s3c64xx_spi_driver = {\\r\\n48 .driver = {\\r\\n49     .name= \\"s3c64xx-spi\\",\\r\\n50     .pm = &s3c64xx_spi_pm,\\r\\n51     .of_match_table = of_match_ptr(s3c64xx_spi_dt_match),\\r\\n52 },\\r\\n53 .probe = s3c64xx_spi_probe,\\r\\n54 .remove = s3c64xx_spi_remove,\\r\\n55 .id_table = s3c64xx_spi_driver_ids,\\r\\n56};\\r\\n```\\r\\n\\r\\ns3c64xx_spi_suspend\uff08\uff09\u5b8c\u6210\u4e86\u65f6\u949f\u7684\u7981\u6b62\uff0cs3c64xx_spi_resume\uff08\uff09\u5219\u5b8c\u6210\u4e86\u786c\u4ef6\u7684\u91cd\u65b0\u521d\u59cb\u5316\u3001\u65f6\u949f\u7684\u4f7f\u80fd\u7b49\u5de5\u4f5c\u3002\u7b2c42\u884c\u7684SET_SYSTEM_SLEEP_PM_OPS\u662f\u4e00\u4e2a\u5feb\u6377\u5b8f\uff0c\u5b83\u5b8c\u6210suspend\u3001resume\u7b49\u6210\u5458\u51fd\u6570\u7684\u8d4b\u503c\uff1a\\r\\n\\r\\n```\\r\\n#define SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \\\\\\r\\n       .suspend = suspend_fn, \\\\\\r\\n       .resume = resume_fn, \\\\\\r\\n       .freeze = suspend_fn, \\\\\\r\\n       .thaw = resume_fn, \\\\\\r\\n       .poweroff = suspend_fn, \\\\\\r\\n       .restore = resume_fn,\\r\\n```\\r\\n\\r\\n\u9664\u4e86\u4e0a\u8ff0\u63a8\u884c\u7684\u505a\u6cd5\u4ee5\u5916\uff0c\u5728platform_driver\u3001i2c_driver\u3001spi_driver\u7b49xxx_driver\u7ed3\u6784\u4f53\u4e2d\u4ecd\u7136\u4fdd\u7559\u4e86\u8fc7\u65f6\uff08Legacy\uff09\u7684suspend\u3001resume\u5165\u53e3\u51fd\u6570\uff08\u76ee\u524d\u4e0d\u518d\u63a8\u8350\u4f7f\u7528\u8fc7\u65f6\u7684\u63a5\u53e3\uff0c\u800c\u662f\u63a8\u8350\u8d4b\u503cxxx_driver\u4e2d\u7684driver\u7684pm\u6210\u5458\uff09\uff0c\u8b6c\u5982\u4ee3\u7801\u6e05\u535519.15\u7ed9\u51fa\u7684platform_driver\u5c31\u5305\u542b\u4e86\u8fc7\u65f6\u7684suspend\u3001resume\u7b49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.15\u3000\u8bbe\u5907\u9a71\u52a8\u4e2d\u8fc7\u65f6\u7684PM\u6210\u5458\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1struct platform_driver {\\r\\n 2       int (*probe)(struct platform_device *);\\r\\n 3       int (*remove)(struct platform_device *);\\r\\n 4       void (*shutdown)(struct platform_device *);\\r\\n 5       int (*suspend)(struct platform_device *, pm_message_t state);\\r\\n 6       int (*resume)(struct platform_device *);\\r\\n 7       struct device_driver driver;\\r\\n 8       const struct platform_device_id *id_table;\\r\\n 9};\\r\\n```\\r\\n\\r\\n\u5728Linux\u7684\u6838\u5fc3\u5c42\u4e2d\uff0c\u5b9e\u9645\u4e0a\u662f\u4f18\u5148\u9009\u62e9\u6267\u884cxxx_driver.driver.pm.suspend\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u5728\u524d\u8005\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u8fc7\u65f6\u7684xxx_driver.suspend\uff08\uff09\uff0c\u5982platform_pm_suspend\uff08\uff09\u7684\u903b\u8f91\u5982\u4ee3\u7801\u6e05\u535519.16\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.16\u3000\u9a71\u52a8\u6838\u5fc3\u5c42\u5bfb\u627ePM\u56de\u8c03\u7684\u987a\u5e8f\\r\\n\\r\\n```\\r\\n 1int platform_pm_suspend(struct device *dev)\\r\\n 2{\\r\\n 3      struct device_driver *drv = dev->driver;\\r\\n 4      int ret = 0;\\r\\n 5\\r\\n 6      if (!drv)\\r\\n 7            return 0;\\r\\n 8\\r\\n 9      if (drv->pm) {\\r\\n10             if (drv->pm->suspend)\\r\\n11                    ret = drv->pm->suspend(dev);\\r\\n12      } else {\\r\\n13             ret = platform_legacy_suspend(dev, PMSG_SUSPEND);\\r\\n14      }\\r\\n15\\r\\n16      return ret;\\r\\n17}\\r\\n```\\r\\n\\r\\n\u4e00\u822c\u6765\u8bb2\uff0c\u5728\u8bbe\u5907\u9a71\u52a8\u7684\u6302\u8d77\u5165\u53e3\u51fd\u6570\u4e2d\uff0c\u4f1a\u5173\u95ed\u8bbe\u5907\u3001\u5173\u95ed\u8be5\u8bbe\u5907\u7684\u65f6\u949f\u8f93\u5165\uff0c\u751a\u81f3\u662f\u5173\u95ed\u8bbe\u5907\u7684\u7535\u6e90\uff0c\u5728\u6062\u590d\u65f6\u5219\u5b8c\u6210\u76f8\u53cd\u7684\u7684\u64cd\u4f5c\u3002\u5728\u6302\u8d77\u5230RAM\u7684\u6302\u8d77\u548c\u6062\u590d\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u6062\u590d\u540e\u8981\u6c42\u6240\u6709\u8bbe\u5907\u7684\u9a71\u52a8\u90fd\u5de5\u4f5c\u6b63\u5e38\u3002\u4e3a\u4e86\u8c03\u8bd5\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u80fd\u5185\u6838\u7684PM_DEBUG\u9009\u9879\uff0c\u5982\u679c\u60f3\u5728\u6302\u8d77\u548c\u6062\u590d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u770b\u5230\u5185\u6838\u7684\u6253\u5370\u4fe1\u606f\u4ee5\u5173\u6ce8\u5177\u4f53\u7684\u8be6\u7ec6\u6d41\u7a0b\uff0c\u53ef\u4ee5\u5728Bootloader\u4f20\u9012\u7ed9\u5185\u6838\u7684bootargs\u4e2d\u8bbe\u7f6e\u6807\u5fd7no_console_suspend\u3002\\r\\n\\r\\n\u5728\u5c06Linux\u79fb\u690d\u5230\u4e00\u4e2a\u65b0\u7684ARM SoC\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6700\u7ec8\u7cfb\u7edf\u6302\u8d77\u7684\u5165\u53e3\u9700\u7531\u82af\u7247\u4f9b\u5e94\u5546\u5728\u76f8\u5e94\u7684arch/arm/mach-xxx\u4e2d\u5b9e\u73b0platform_suspend_ops\u7684\u6210\u5458\u51fd\u6570\uff0c\u4e00\u822c\u4e3b\u8981\u5b9e\u73b0\u5176\u4e2d\u7684enter\u548cvalid\u6210\u5458\uff0c\u5e76\u5c06\u6574\u4e2aplatform_suspend_ops\u7ed3\u6784\u4f53\u901a\u8fc7\u5185\u6838\u901a\u7528API suspend_set_ops\uff08\uff09\u6ce8\u518c\u8fdb\u7cfb\u7edf\uff0c\u5982arch/arm/mach-prima2/pm.c\u4e2dprima2SoC\u7ea7\u6302\u8d77\u6d41\u7a0b\u7684\u903b\u8f91\u5982\u4ee3\u7801\u6e05\u535519.17\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.17\u3000\u7cfb\u7edf\u6302\u8d77\u5230RAM\u7684SoC\u7ea7\u4ee3\u7801\\r\\n\\r\\n```\\r\\n 1static int sirfsoc_pm_enter(suspend_state_t state)\\r\\n 2{\\r\\n 3      switch (state) {\\r\\n 4      case PM_SUSPEND_MEM:\\r\\n 5             sirfsoc_pre_suspend_power_off();\\r\\n 6\\r\\n 7             outer_flush_all();\\r\\n 8             outer_disable();\\r\\n 9             /* go zzz */\\r\\n10              cpu_suspend(0, sirfsoc_finish_suspend);\\r\\n11              outer_resume();\\r\\n12              break;\\r\\n13       default:\\r\\n14              return -EINVAL;\\r\\n15       }\\r\\n16       return 0;\\r\\n17 }\\r\\n18\\r\\n19 static const struct platform_suspend_ops sirfsoc_pm_ops = {\\r\\n20        .enter = sirfsoc_pm_enter,\\r\\n21        .valid = suspend_valid_only_mem,\\r\\n22 };\\r\\n23\\r\\n24 int __init sirfsoc_pm_init(void)\\r\\n25 {\\r\\n26       suspend_set_ops(&sirfsoc_pm_ops);\\r\\n27       return 0;\\r\\n28 }\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7b2c5\u884c\u7684sirfsoc_pre_suspend_power_off\uff08\uff09\u7684\u5b9e\u73b0\u5982\u4ee3\u7801\u6e05\u535519.18\u6240\u793a\uff0c\u5b83\u4f1a\u5c06\u7cfb\u7edf\u6062\u590d\u56de\u6765\u540e\u91cd\u65b0\u5f00\u59cb\u6267\u884c\u7684\u7269\u7406\u5730\u5740\u5b58\u5165\u4e0eSoC\u76f8\u5173\u7684\u5bc4\u5b58\u5668\u4e2d\u3002\u4e0e\u672c\u4f8b\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u4e3aSIRFSOC_PWRC_SCRATCH_PAD1\uff0c\u5e76\u5411\u8be5\u5bc4\u5b58\u5668\u5199\u5165\u4e86virt_to_phys\uff08cpu_resume\uff09\u3002\u5728\u7cfb\u7edf\u91cd\u65b0\u6062\u590d\u4e2d\uff0c\u4f1a\u6267\u884ccpu_resume\u8fd9\u6bb5\u6c47\u7f16\uff0c\u5e76\u8fdb\u884c\u8bbe\u7f6e\u5524\u9192\u6e90\u7b49\u64cd\u4f5c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.18\u3000SoC\u8bbe\u7f6e\u6062\u590d\u56de\u6765\u65f6\u7684\u6267\u884c\u5730\u5740\\r\\n\\r\\n```\\r\\n 1static int sirfsoc_pre_suspend_power_off(void)\\r\\n 2{\\r\\n 3      u32 wakeup_entry = virt_to_phys(cpu_resume);\\r\\n 4\\r\\n 5      sirfsoc_rtc_iobrg_writel(wakeup_entry, sirfsoc_pwrc_base +\\r\\n 6             SIRFSOC_PWRC_SCRATCH_PAD1);\\r\\n 7\\r\\n 8      sirfsoc_set_wakeup_source();\\r\\n 9\\r\\n10      sirfsoc_set_sleep_mode(SIRFSOC_DEEP_SLEEP_MODE);\\r\\n11\\r\\n12      return 0;\\r\\n13}\\r\\n```\\r\\n\\r\\n\u800ccpu_suspend\uff080\uff0csirfsoc_finish_suspend\uff09\u4ee5\u53ca\u5176\u4e2d\u8c03\u7528\u7684\u4e0eSoC\u76f8\u5173\u7684\u7528\u6c47\u7f16\u5b9e\u73b0\u7684\u51fd\u6570sirfsoc_finish_suspend\uff08\uff09\u771f\u6b63\u5b8c\u6210\u6700\u540e\u7684\u5f85\u673a\u5e76\u5c06\u7cfb\u7edf\u7f6e\u4e8e\u6df1\u5ea6\u7761\u7720\uff0c\u540c\u65f6\u7f6eSDRAM\u4e8e\u81ea\u5237\u65b0\u72b6\u6001\u7684\u8fc7\u7a0b\uff0c\u5177\u4f53\u7684\u4ee3\u7801\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u82af\u7247\uff0c\u5176\u5b9e\u73b0\u4e00\u822c\u662f\u4e00\u6bb5\u6c47\u7f16\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784","description":"\u6839\u636e\u56fe12.4\uff0cLinux\u503e\u5411\u4e8e\u5c06\u4e3b\u673a\u7aef\u7684\u9a71\u52a8\u4e0e\u5916\u8bbe\u7aef\u7684\u9a71\u52a8\u5206\u79bb\uff0c\u800c\u901a\u8fc7\u4e00\u4e2a\u6838\u5fc3\u5c42\u5c06\u67d0\u79cd\u603b\u7ebf\u7684\u534f\u8bae\u8fdb\u884c\u62bd\u8c61\uff0c\u5916\u8bbe\u7aef\u7684\u9a71\u52a8\u8c03\u7528\u6838\u5fc3\u5c42API\u95f4\u63a5\u8fc7\u6e21\u5230\u5bf9\u4e3b\u673a\u9a71\u52a8\u4f20\u8f93\u51fd\u6570\u7684\u8c03\u7528\u3002\u5bf9\u4e8eI2 C\u3001SPI\u8fd9\u7c7b\u4e0d\u5177\u5907\u70ed\u63d2\u62d4\u80fd\u529b\u7684\u603b\u7ebf\u800c\u8a00\uff0c\u4e00\u822c\u5728arch/arm/mach-xxx\u6216\u8005arch/arm/boot/dts\u4e2d\u4f1a\u6709\u76f8\u5e94\u7684\u677f\u7ea7\u63cf\u8ff0\u4fe1\u606f\uff0c\u63cf\u8ff0\u5916\u8bbe\u4e0e\u4e3b\u673a\u7684\u8fde\u63a5\u60c5\u51b5\u3002","date":"2025-09-15T14:44:14.853Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.93,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.9\u3000\u6302\u8d77\u5230RAM"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL"}},"content":"\u6839\u636e\u56fe12.4\uff0cLinux\u503e\u5411\u4e8e\u5c06\u4e3b\u673a\u7aef\u7684\u9a71\u52a8\u4e0e\u5916\u8bbe\u7aef\u7684\u9a71\u52a8\u5206\u79bb\uff0c\u800c\u901a\u8fc7\u4e00\u4e2a\u6838\u5fc3\u5c42\u5c06\u67d0\u79cd\u603b\u7ebf\u7684\u534f\u8bae\u8fdb\u884c\u62bd\u8c61\uff0c\u5916\u8bbe\u7aef\u7684\u9a71\u52a8\u8c03\u7528\u6838\u5fc3\u5c42API\u95f4\u63a5\u8fc7\u6e21\u5230\u5bf9\u4e3b\u673a\u9a71\u52a8\u4f20\u8f93\u51fd\u6570\u7684\u8c03\u7528\u3002\u5bf9\u4e8eI2 C\u3001SPI\u8fd9\u7c7b\u4e0d\u5177\u5907\u70ed\u63d2\u62d4\u80fd\u529b\u7684\u603b\u7ebf\u800c\u8a00\uff0c\u4e00\u822c\u5728arch/arm/mach-xxx\u6216\u8005arch/arm/boot/dts\u4e2d\u4f1a\u6709\u76f8\u5e94\u7684\u677f\u7ea7\u63cf\u8ff0\u4fe1\u606f\uff0c\u63cf\u8ff0\u5916\u8bbe\u4e0e\u4e3b\u673a\u7684\u8fde\u63a5\u60c5\u51b5\u3002\\r\\n\\r\\nLinux\u7684\u5404\u4e2a\u5b50\u7cfb\u7edf\u90fd\u5448\u73b0\u4e3a\u76f8\u540c\u7684\u7279\u70b9\uff0c\u886817.1\u7c7b\u6bd4\u4e86I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784\uff0c\u5176\u4ed6\u7684PCI\u7b49\u90fd\u662f\u7c7b\u4f3c\u7684\u3002\\r\\n\\r\\n\u886817.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784\u7684\u7c7b\u6bd4\\r\\n\\r\\n![1745505837492](./figure/1745505837492.png)\\r\\n\\r\\n\u5bf9\u4e8eUSB\u3001PCI\u7b49\u603b\u7ebf\u800c\u8a00\uff0c\u7531\u4e8e\u5b83\u4eec\u5177\u5907\u70ed\u63d2\u62d4\u80fd\u529b\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u4e0d\u5b58\u5728\u7c7b\u4f3cI2 C\u3001SPI\u8fd9\u6837\u7684\u677f\u7ea7\u63cf\u8ff0\u4fe1\u606f\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5373\u4fbf\u662f\u6709\u8fd9\u7c7b\u4fe1\u606f\uff0c\u5176\u5b9e\u4e5f\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u56e0\u4e3a\u5982\u679c\u5199\u4e86\u677f\u5b50\u4e0a\u6709\u4e2aU\u76d8\uff0c\u4f46\u5b9e\u9645\u4e0a\u6ca1\u6709\uff0c\u5176\u5b9e\u53cd\u800c\u662f\u5236\u9020\u4e86\u9ebb\u70e6\uff1b\u76f8\u53cd\uff0c\u5982\u679c\u6ca1\u6709\u5199\uff0cU\u76d8\u4e00\u65e6\u63d2\u5165\uff0cLinux USB\u5b50\u7cfb\u7edf\u4f1a\u81ea\u52a8\u63a2\u6d4b\u5230\u4e00\u4e2aU\u76d8\u3002\\r\\n\\r\\n\u540c\u65f6\u6211\u4eec\u6ce8\u610f\u5230\uff0cI2 C\u3001SPI\u3001USB\u63a7\u5236\u5668\u867d\u7136\u7ed9\u522b\u4eba\u63d0\u4f9b\u4e86\u603b\u7ebf\uff0c\u4f46\u662f\u5176\u5b9e\u81ea\u5df1\u4e5f\u662f\u7531\u5b83\u81ea\u8eab\u4f9d\u9644\u7684\u603b\u7ebf\u679a\u4e3e\u51fa\u6765\u7684\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8eSoC\u800c\u8a00\uff0c\u8fd9\u4e9b\u63a7\u5236\u5668\u4e00\u822c\u662f\u76f4\u63a5\u96c6\u6210\u5728\u82af\u7247\u5185\u90e8\uff0c\u901a\u8fc7\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u6765\u8bbf\u95ee\u7684\uff0c\u56e0\u6b64\u5b83\u4eec\u81ea\u8eab\u662f\u901a\u8fc7platform_driver\u3001platform_device\u8fd9\u79cd\u6a21\u578b\u679a\u4e3e\u8fdb\u6765\u7684\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL","description":"Linux\u5185\u6838\u6709\u4e24\u79cd\u5bfc\u51fa\u7b26\u53f7\u7684\u65b9\u6cd5\u7ed9\u6a21\u5757\u4f7f\u7528\uff0c\u4e00\u79cd\u65b9\u6cd5\u662fEXPORTSYMBOL\uff08\uff09\uff0c\u53e6\u5916\u4e00\u79cd\u662fEXPORTSYMBOL_GPL\uff08\uff09\u3002\u8fd9\u4e00\u70b9\u548c\u6a21\u5757A\u5bfc\u51fa\u7b26\u53f7\u7ed9\u6a21\u5757B\u7528\u662f\u4e00\u81f4\u7684\u3002","date":"2025-09-15T14:44:14.853Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.835,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.1\u3000I2 C\u3001SPI\u3001USB\u9a71\u52a8\u67b6\u6784"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570"}},"content":"Linux\u5185\u6838\u6709\u4e24\u79cd\u5bfc\u51fa\u7b26\u53f7\u7684\u65b9\u6cd5\u7ed9\u6a21\u5757\u4f7f\u7528\uff0c\u4e00\u79cd\u65b9\u6cd5\u662fEXPORT_SYMBOL\uff08\uff09\uff0c\u53e6\u5916\u4e00\u79cd\u662fEXPORT_SYMBOL_GPL\uff08\uff09\u3002\u8fd9\u4e00\u70b9\u548c\u6a21\u5757A\u5bfc\u51fa\u7b26\u53f7\u7ed9\u6a21\u5757B\u7528\u662f\u4e00\u81f4\u7684\u3002\\r\\n\\r\\n\u5185\u6838\u7684Documentation/DocBook/kernel-hacking.tmpl\u660e\u786e\u8868\u660e\u201cthe symbols exported by EXPORT_SYMBOL_GPL\uff08\uff09can only be seen by modules with a MODULE_LICENSE\uff08\uff09that specifies a GPL compatible license.\u201d\u7531\u6b64\u53ef\u89c1\u5185\u6838\u7528EXPORT_SYMBOL_GPL\uff08\uff09\u5bfc\u51fa\u7684\u7b26\u53f7\u662f\u4e0d\u53ef\u4ee5\u88ab\u975eGPL\u6a21\u5757\u5f15\u7528\u7684\u3002\\r\\n\\r\\n\u7531\u4e8e\u76f8\u5f53\u591a\u7684\u5185\u6838\u7b26\u53f7\u90fd\u662f\u4ee5EXPORT_SYMBOL_GPL\uff08\uff09\u5bfc\u51fa\u7684\uff0c\u6240\u4ee5\u5386\u53f2\u4e0a\u66fe\u7ecf\u6709\u4e00\u4e9b\u516c\u53f8\u628a\u5185\u6838\u7684EXPORT_SYMBOL_GPL\uff08\uff09\u76f4\u63a5\u6539\u4e3aEXPORT_SYMBOL\uff08\uff09\uff0c\u7136\u540e\u5c06\u4fee\u6539\u540e\u7684\u5185\u6838\u4ee5GPL\u5f62\u5f0f\u53d1\u5e03\u3002\u8fd9\u6837\u4fee\u6539\u5185\u6838\u4e4b\u540e\uff0c\u6a21\u5757\u4e0d\u518d\u4f7f\u7528\u5185\u6838\u7684EXPORT_SYMBOL_GPL\uff08\uff09\u7b26\u53f7\uff0c\u56e0\u6b64\u6a21\u5757\u4e0d\u518d\u9700\u8981GPL\u3002\u5bf9\u6b64Linus\u7684\u56de\u590d\u662f\uff1a\u201cI think both them said that anybody who were to change a xyz_GPL to the non-GPL one in order to use it with a non-GPL module would almost immediately fall under the\u201cwillful infringement\u201dthing\uff0cand that it would make it MUCH easier to get triple damages and/or injunctions\uff0csince they clearly knew about it\u201d\u3002\u56e0\u6b64\uff0c\u8fd9\u79cd\u505a\u6cd5\u53ef\u80fd\u6784\u6210\u201c\u84c4\u610f\u4fb5\u6743\uff08willful infringement\uff09\u201d\u3002\\r\\n\\r\\n\u53e6\u5916\u4e00\u79cd\u505a\u6cd5\u662f\u5199\u4e00\u4e2awrapper\u5185\u6838\u6a21\u5757\uff08\u8fd9\u4e2a\u6a21\u5757\u9075\u5faaGPL\uff09\uff0c\u628aEXPORT_SYMBOL_GPL\uff08\uff09\u5bfc\u51fa\u7684\u7b26\u53f7\u5c01\u88c5\u4e00\u6b21\u540e\u518d\u4ee5EXPORT_SYMBOL\uff08\uff09\u5f62\u5f0f\u5bfc\u51fa\uff0c\u800c\u5176\u4ed6\u7684\u6a21\u5757\u4e0d\u76f4\u63a5\u8c03\u7528\u5185\u6838\u800c\u662f\u8c03\u7528wrapper\u51fd\u6570\uff0c\u5982\u56fe4.1\u6240\u793a\u3002\u8fd9\u79cd\u505a\u6cd5\u4e5f\u5177\u6709\u4e89\u8bae\u3002\\r\\n\\r\\n![image-20250323224837473](./figure/image-20250323224837473.png)\\r\\n\\r\\n\u56fe4.1\u3000\u5c06EXPORT_SYMBOL_GPL\u91cd\u65b0\u4ee5EXPORT_SYMBOL\u5bfc\u51fa\\r\\n\\r\\n\u4e00\u822c\u8ba4\u4e3a\uff0c\u4fdd\u5b88\u7684\u505a\u6cd5\u662fLinux\u5185\u6838\u4e0d\u80fd\u4f7f\u7528\u975eGPL\u8bb8\u53ef\u6743"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570","description":"\u6211\u4eec\u53ef\u4ee5\u7528\u201cmodule_param\uff08\u53c2\u6570\u540d\uff0c\u53c2\u6570\u7c7b\u578b\uff0c\u53c2\u6570\u8bfb/\u5199\u6743\u9650\uff09\u201d\u4e3a\u6a21\u5757\u5b9a\u4e49\u4e00\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982\u4e0b\u5217\u4ee3\u7801\u5b9a\u4e49\u4e861\u4e2a\u6574\u578b\u53c2\u6570\u548c1\u4e2a\u5b57\u7b26\u6307\u9488\u53c2\u6570\uff1a","date":"2025-09-15T14:44:14.841Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.745,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.10\u3000\u4f7f\u7528\u6a21\u5757\u201c\u7ed5\u5f00\u201dGPL"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500"}},"content":"\u6211\u4eec\u53ef\u4ee5\u7528\u201cmodule_param\uff08\u53c2\u6570\u540d\uff0c\u53c2\u6570\u7c7b\u578b\uff0c\u53c2\u6570\u8bfb/\u5199\u6743\u9650\uff09\u201d\u4e3a\u6a21\u5757\u5b9a\u4e49\u4e00\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982\u4e0b\u5217\u4ee3\u7801\u5b9a\u4e49\u4e861\u4e2a\u6574\u578b\u53c2\u6570\u548c1\u4e2a\u5b57\u7b26\u6307\u9488\u53c2\u6570\uff1a\\r\\n\\r\\n```\\r\\nstatic char *book_name = \\"dissecting Linux Device Driver\\";\\r\\nmodule_param(book_name, charp, S_IRUGO);\\r\\nstatic int book_num = 4000;\\r\\nmodule_param(book_num, int, S_IRUGO);\\r\\n```\\r\\n\\r\\n\u5728\u88c5\u8f7d\u5185\u6838\u6a21\u5757\u65f6\uff0c\u7528\u6237\u53ef\u4ee5\u5411\u6a21\u5757\u4f20\u9012\u53c2\u6570\uff0c\u5f62\u5f0f\u4e3a\u201cinsmode\uff08\u6216modprobe\uff09\u6a21\u5757\u540d\u53c2\u6570\u540d=\u53c2\u6570\u503c\u201d\uff0c\u5982\u679c\u4e0d\u4f20\u9012\uff0c\u53c2\u6570\u5c06\u4f7f\u7528\u6a21\u5757\u5185\u5b9a\u4e49\u7684\u7f3a\u7701\u503c\u3002\u5982\u679c\u6a21\u5757\u88ab\u5185\u7f6e\uff0c\u5c31\u65e0\u6cd5insmod\u4e86\uff0c\u4f46\u662fbootloader\u53ef\u4ee5\u901a\u8fc7\u5728bootargs\u91cc\u8bbe\u7f6e\u201c\u6a21\u5757\u540d.\u53c2\u6570\u540d=\u503c\u201d\u7684\u5f62\u5f0f\u7ed9\u8be5\u5185\u7f6e\u7684\u6a21\u5757\u4f20\u9012\u53c2\u6570\u3002\\r\\n\\r\\n\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u662fbyte\u3001short\u3001ushort\u3001int\u3001uint\u3001long\u3001ulong\u3001charp\uff08\u5b57\u7b26\u6307\u9488\uff09\u3001bool\u6216invbool\uff08\u5e03\u5c14\u7684\u53cd\uff09\uff0c\u5728\u6a21\u5757\u88ab\u7f16\u8bd1\u65f6\u4f1a\u5c06module_param\u4e2d\u58f0\u660e\u7684\u7c7b\u578b\u4e0e\u53d8\u91cf\u5b9a\u4e49\u7684\u7c7b\u578b\u8fdb\u884c\u6bd4\u8f83\uff0c\u5224\u65ad\u662f\u5426\u4e00\u81f4\\r\\n\\r\\n\u9664\u6b64\u4e4b\u5916\uff0c\u6a21\u5757\u4e5f\u53ef\u4ee5\u62e5\u6709\u53c2\u6570\u6570\u7ec4\uff0c\u5f62\u5f0f\u4e3a\u201cmodule_param_array\uff08\u6570\u7ec4\u540d\uff0c\u6570\u7ec4\u7c7b\u578b\uff0c\u6570\u7ec4\u957f\uff0c\u53c2\u6570\u8bfb/\u5199\u6743\u9650\uff09\u201d\u3002\\r\\n\\r\\n\u6a21\u5757\u88ab\u52a0\u8f7d\u540e\uff0c\u5728/sys/module/\u76ee\u5f55\u4e0b\u5c06\u51fa\u73b0\u4ee5\u6b64\u6a21\u5757\u540d\u547d\u540d\u7684\u76ee\u5f55\u3002\u5f53\u201c\u53c2\u6570\u8bfb/\u5199\u6743\u9650\u201d\u4e3a0\u65f6\uff0c\u8868\u793a\u6b64\u53c2\u6570\u4e0d\u5b58\u5728sysfs\u6587\u4ef6\u7cfb\u7edf\u4e0b\u5bf9\u5e94\u7684\u6587\u4ef6\u8282\u70b9\uff0c\u5982\u679c\u6b64\u6a21\u5757\u5b58\u5728\u201c\u53c2\u6570\u8bfb/\u5199\u6743\u9650\u201d\u4e0d\u4e3a0\u7684\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u5728\u6b64\u6a21\u5757\u7684\u76ee\u5f55\u4e0b\u8fd8\u5c06\u51fa\u73b0parameters\u76ee\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u7cfb\u5217\u4ee5\u53c2\u6570\u540d\u547d\u540d\u7684\u6587\u4ef6\u8282\u70b9\uff0c\u8fd9\u4e9b\u6587\u4ef6\u7684\u6743\u9650\u503c\u5c31\u662f\u4f20\u5165module_param\uff08\uff09\u7684\u201c\u53c2\u6570\u8bfb/\u5199\u6743\u9650\u201d\uff0c\u800c\u6587\u4ef6\u7684\u5185\u5bb9\u4e3a\u53c2\u6570\u7684\u503c\u3002\\r\\n\\r\\n\u8fd0\u884cinsmod\u6216modprobe\u547d\u4ee4\u65f6\uff0c\u5e94\u4f7f\u7528\u9017\u53f7\u5206\u9694\u8f93\u5165\u7684\u6570\u7ec4\u5143\u7d20\u3002\\r\\n\\r\\n\u73b0\u5728\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u53c2\u6570\u7684\u6a21\u5757\uff08\u5982\u4ee3\u7801\u6e05\u53554.4\uff0c\u4f4d\u4e8e\u672c\u4e66\u914d\u5957\u6e90\u4ee3\u7801/kernel/drivers/param\u76ee\u5f55\u4e0b\uff09\uff0c\u5e76\u89c2\u5bdf\u6a21\u5757\u52a0\u8f7d\u65f6\u88ab\u4f20\u9012\u53c2\u6570\u548c\u4e0d\u4f20\u9012\u53c2\u6570\u65f6\u7684\u8f93\u51fa\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53554.4\u3000\u5e26\u53c2\u6570\u7684\u5185\u6838\u6a21\u5757\\r\\n\\r\\n```\\r\\n 1 #include <linux/init.h>\\r\\n 2 #include <linux/module.h>\\r\\n 3\\r\\n 4 static char *book_name = \\"dissecting Linux Device Driver\\";\\r\\n 5 module_param(book_name, charp, S_IRUGO);\\r\\n 6\\r\\n 7 static int book_num = 4000;\\r\\n 8 module_param(book_num, int, S_IRUGO);\\r\\n 9\\r\\n10 static int __init book_init(void)\\r\\n11 {\\r\\n12   printk(KERN_INFO \\"book name:%s\\\\n\\", book_name);\\r\\n13   printk(KERN_INFO \\"book num:%d\\\\n\\", book_num);\\r\\n14   return 0;\\r\\n15 }\\r\\n16 module_init(book_init);\\r\\n17\\r\\n18 static void __exit book_exit(void)\\r\\n19 {\\r\\n20   printk(KERN_INFO \\"book module exit\\\\n \\");\\r\\n21 }\\r\\n22 module_exit(book_exit);\\r\\n23\\r\\n24 MODULE_AUTHOR(\\"Barry Song <baohua@kernel.org>\\");\\r\\n25 MODULE_LICENSE(\\"GPL v2\\");\\r\\n26 MODULE_DESCRIPTION(\\"A simple Module for testing module params\\");\\r\\n27 MODULE_VERSION(\\"V1.0\\");\\r\\n```\\r\\n\\r\\n\u5bf9\u4e0a\u8ff0\u6a21\u5757\u8fd0\u884c\u201cinsmod book.ko\u201d\u547d\u4ee4\u52a0\u8f7d\uff0c\u76f8\u5e94\u8f93\u51fa\u90fd\u4e3a\u6a21\u5757\u5185\u7684\u9ed8\u8ba4\u503c\uff0c\u901a\u8fc7\u67e5\u770b\u201c/var/log/messages\u201d\u65e5\u5fd7\u6587\u4ef6\u53ef\u4ee5\u770b\u5230\u5185\u6838\u7684\u8f93\u51fa\\r\\n\\r\\n```\\r\\n# tail -n 2 /var/log/messages\\r\\nJul  2 01:03:10 localhost kernel:  <6> book name:dissecting Linux Device Driver\\r\\nJul  2 01:03:10 localhost kernel:  book num:4000\\r\\n```\\r\\n\\r\\n\u5f53\u7528\u6237\u8fd0\u884c\u201cinsmod book.ko book_name=\'GoodBook\'book_num=5000\u201d\u547d\u4ee4\u65f6\uff0c\u8f93\u51fa\u7684\u662f\u7528\u6237\u4f20\u9012\u7684\u53c2\u6570\uff1a\\r\\n\\r\\n```\\r\\n# tail -n 2 /var/log/messages\\r\\nJul  2 01:06:21 localhost kernel:  <6> book name:GoodBook\\r\\nJul  2 01:06:21 localhost kernel:  book num:5000\\r\\n```\\r\\n\\r\\n\u53e6\u5916\uff0c\u5728/sys\u76ee\u5f55\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u770b\u5230book\u6a21\u5757\u7684\u53c2\u6570\uff1a\\r\\n\\r\\n```\\r\\nbarry@barry-VirtualBox:/sys/module/book/parameters$ tree\\r\\n.\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n book_name\u2514\u2500\u2500\\r\\n\\r\\n\\r\\n book_num\\r\\n```\\r\\n\\r\\n\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u201ccat book_name\u201d\u548c\u201ccat book_num\u201d\u67e5\u770b\u5b83\u4eec\u7684\u503c\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500","description":"\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500\u7531registernetdev\uff08\uff09\u548cunregisternetdev\uff08\uff09\u51fd\u6570\u5b8c\u6210\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a","date":"2025-09-15T14:44:14.825Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.445,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.5\u3000\u6a21\u5757\u53c2\u6570"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3"}},"content":"\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500\u7531register_netdev\uff08\uff09\u548cunregister_netdev\uff08\uff09\u51fd\u6570\u5b8c\u6210\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint register_netdev(struct net_device *dev);\\r\\nvoid unregister_netdev(struct net_device *dev);\\r\\n```\\r\\n\\r\\n\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u63a5\u6536\u4e00\u4e2anet_device\u7ed3\u6784\u4f53\u6307\u9488\u4e3a\u53c2\u6570\uff0c\u53ef\u89c1net_device\u6570\u636e\u7ed3\u6784\u5728\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684\u6838\u5fc3\u5730\u4f4d\u3002\\r\\n\\r\\nnet_device\u7684\u751f\u6210\u548c\u6210\u5458\u7684\u8d4b\u503c\u5e76\u4e0d\u4e00\u5b9a\u8981\u7531\u5de5\u7a0b\u5e08\u4eb2\u81ea\u52a8\u624b\u9010\u4e2a\u5b8c\u6210\uff0c\u53ef\u4ee5\u5229\u7528\u4e0b\u9762\u7684\u5b8f\u5e2e\u52a9\u6211\u4eec\u586b\u5145\uff1a\\r\\n\\r\\n```\\r\\n#define alloc_netdev(sizeof_priv, name, setup) \\\\\\r\\n         alloc_netdev_mqs(sizeof_priv, name, setup, 1, 1)\\r\\n#define alloc_etherdev(sizeof_priv) alloc_etherdev_mq(sizeof_priv, 1)\\r\\n#define alloc_etherdev_mq(sizeof_priv, count) alloc_etherdev_mqs(sizeof_priv,\\r\\n    count, count)\\r\\n```\\r\\n\\r\\nalloc_netdev\u4ee5\u53caalloc_etherdev\u5b8f\u5f15\u7528\u7684alloc_netdev_mqs\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstruct net_device *alloc_netdev_mqs(int sizeof_priv, const char *name,\\r\\n                void (*setup)(struct net_device *),\\r\\n                unsigned int txqs, unsigned int rxqs);\\r\\n```\\r\\n\\r\\nalloc_netdev_mqs\uff08\uff09\u51fd\u6570\u751f\u6210\u4e00\u4e2anet_device\u7ed3\u6784\u4f53\uff0c\u5bf9\u5176\u6210\u5458\u8d4b\u503c\u5e76\u8fd4\u56de\u8be5\u7ed3\u6784\u4f53\u7684\u6307\u9488\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u8bbe\u5907\u79c1\u6709\u6210\u5458\u7684\u5927\u5c0f\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u8bbe\u5907\u540d\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3anet_device\u7684setup\uff08\uff09\u51fd\u6570\u6307\u9488\uff0c\u7b2c\u56db\u3001\u4e94\u4e2a\u53c2\u6570\u4e3a\u8981\u5206\u914d\u7684\u53d1\u9001\u548c\u63a5\u6536\u5b50\u961f\u5217\u7684\u6570\u91cf\u3002setup\uff08\uff09\u51fd\u6570\u63a5\u6536\u7684\u53c2\u6570\u4e5f\u4e3astruct net_device\u6307\u9488\uff0c\u7528\u4e8e\u9884\u7f6enet_device\u6210\u5458\u7684\u503c\u3002\\r\\n\\r\\nfree_netdev\uff08\uff09\u5b8c\u6210\u4e0ealloc_enetdev\uff08\uff09\u548calloc_etherdev\uff08\uff09\u51fd\u6570\u76f8\u53cd\u7684\u529f\u80fd\uff0c\u5373\u91ca\u653enet_device\u7ed3\u6784\u4f53\u7684\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nvoid free_netdev(struct net_device *dev);\\r\\n```\\r\\n\\r\\nnet_device\u7ed3\u6784\u4f53\u7684\u5206\u914d\u548c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u9700\u5728\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u8fdb\u884c\uff0c\u800cnet_device\u7ed3\u6784\u4f53\u7684\u91ca\u653e\u548c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u9500\u5728\u8bbe\u5907\u6216\u9a71\u52a8\u88ab\u79fb\u9664\u7684\u65f6\u5019\u6267\u884c\uff0c\u5982\u4ee3\u7801\u6e05\u535514.4\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.4\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u6ce8\u518c\u548c\u6ce8\u9500\\r\\n\\r\\n```\\r\\n 1static int xxx_register(void)\\r\\n 2{\\r\\n 3  ...\\r\\n 4  /* \u5206\u914dnet_device\u7ed3\u6784\u4f53\u5e76\u5bf9\u5176\u6210\u5458\u8d4b\u503c\\r\\n */\\r\\n 5  xxx_dev = alloc_netdev(sizeof(struct xxx_priv), \\"sn%d\\", xxx_init);\\r\\n 6  if (xxx_dev == NULL)\\r\\n 7  ... /* \u5206\u914dnet_device\u5931\u8d25*/\\r\\n 8\\r\\n 9  /* \u6ce8\u518cnet_device\u7ed3\u6784\u4f53 */\\r\\n10    if ((result = register_netdev(xxx_dev)))\\r\\n11    ...\\r\\n12}\\r\\n13\\r\\n14static void xxx_unregister(void)\\r\\n15{\\r\\n16  ...\\r\\n17  /* \u6ce8\u9500net_device\u7ed3\u6784\u4f53*/\\r\\n18  unregister_netdev(xxx_dev);\\r\\n19  /* \u91ca\u653enet_device\u7ed3\u6784\u4f53*/\\r\\n20  free_netdev(xxx_dev);\\r\\n21}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3","description":"\u5145\u65a5\u7740ARM\u793e\u533a\u7684\u5927\u91cf\u5783\u573e\u4ee3\u7801\u5bfc\u81f4Linus\u76db\u6012\uff0c\u56e0\u6b64\u8be5\u793e\u533a\u57282011~2012\u5e74\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u4fee\u6574\u5de5\u4f5c\u3002ARM Linux\u5f00\u59cb\u56f4\u7ed5\u8bbe\u5907\u6811\u5c55\u5f00\uff0c\u8bbe\u5907\u6811\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u8bed\u6cd5\uff0c\u5b83\u7684\u6e90\u6587\u4ef6\u4e3a.dts\uff0c\u7f16\u8bd1\u540e\u5f97\u5230.dtb\uff0cBootloader\u5728\u5f15\u5bfcLinux\u5185\u6838\u7684\u65f6\u5019\u4f1a\u5c06.dtb\u5730\u5740\u544a\u77e5\u5185\u6838\u3002\u4e4b\u540e\u5185\u6838\u4f1a\u5c55\u5f00\u8bbe\u5907\u6811\u5e76\u521b\u5efa\u548c\u6ce8\u518c\u76f8\u5173\u7684\u8bbe\u5907\uff0c\u56e0\u6b64arch/arm/mach-xxx\u548carch/arm/plat-xxx\u4e2d\u7684\u5927\u91cf\u7528\u4e8e\u6ce8\u518cplatform\u3001I2 C\u3001SPI\u7b49\u677f\u7ea7\u4fe1\u606f\u7684\u4ee3\u7801\u88ab\u5220\u9664\uff0c\u800c\u9a71\u52a8\u4e5f\u4ee5\u65b0\u7684\u65b9\u5f0f\u4e0e\u5728.dts\u4e2d\u5b9a\u4e49\u7684\u8bbe\u5907\u8282\u70b9\u8fdb\u884c\u5339\u914d\u3002","date":"2025-09-15T14:44:14.825Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.8,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.2\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668"}},"content":"\u5145\u65a5\u7740ARM\u793e\u533a\u7684\u5927\u91cf\u5783\u573e\u4ee3\u7801\u5bfc\u81f4Linus\u76db\u6012\uff0c\u56e0\u6b64\u8be5\u793e\u533a\u57282011~2012\u5e74\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u4fee\u6574\u5de5\u4f5c\u3002ARM Linux\u5f00\u59cb\u56f4\u7ed5\u8bbe\u5907\u6811\u5c55\u5f00\uff0c\u8bbe\u5907\u6811\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u8bed\u6cd5\uff0c\u5b83\u7684\u6e90\u6587\u4ef6\u4e3a.dts\uff0c\u7f16\u8bd1\u540e\u5f97\u5230.dtb\uff0cBootloader\u5728\u5f15\u5bfcLinux\u5185\u6838\u7684\u65f6\u5019\u4f1a\u5c06.dtb\u5730\u5740\u544a\u77e5\u5185\u6838\u3002\u4e4b\u540e\u5185\u6838\u4f1a\u5c55\u5f00\u8bbe\u5907\u6811\u5e76\u521b\u5efa\u548c\u6ce8\u518c\u76f8\u5173\u7684\u8bbe\u5907\uff0c\u56e0\u6b64arch/arm/mach-xxx\u548carch/arm/plat-xxx\u4e2d\u7684\u5927\u91cf\u7528\u4e8e\u6ce8\u518cplatform\u3001I2 C\u3001SPI\u7b49\u677f\u7ea7\u4fe1\u606f\u7684\u4ee3\u7801\u88ab\u5220\u9664\uff0c\u800c\u9a71\u52a8\u4e5f\u4ee5\u65b0\u7684\u65b9\u5f0f\u4e0e\u5728.dts\u4e2d\u5b9a\u4e49\u7684\u8bbe\u5907\u8282\u70b9\u8fdb\u884c\u5339\u914d\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668","description":"\u5b58\u50a8\u5668\u4e3b\u8981\u53ef\u5206\u7c7b\u4e3a\u53ea\u8bfb\u50a8\u5b58\u5668\uff08ROM\uff09\u3001\u95ea\u5b58\uff08Flash\uff09\u3001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff08RAM\uff09\u3001\u5149/\u78c1\u4ecb\u8d28\u50a8\u5b58\u5668\u3002","date":"2025-09-15T14:44:14.825Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":9.995,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.5\u3000\u603b\u7ed3"},"nextItem":{"title":"2.3.1\u3000\u4e32\u53e3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.3\u3000\u63a5\u53e3\u4e0e\u603b\u7ebf"}},"content":"\u5b58\u50a8\u5668\u4e3b\u8981\u53ef\u5206\u7c7b\u4e3a\u53ea\u8bfb\u50a8\u5b58\u5668\uff08ROM\uff09\u3001\u95ea\u5b58\uff08Flash\uff09\u3001\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff08RAM\uff09\u3001\u5149/\u78c1\u4ecb\u8d28\u50a8\u5b58\u5668\u3002\\r\\n\\r\\nROM\u8fd8\u53ef\u518d\u7ec6\u5206\u4e3a\u4e0d\u53ef\u7f16\u7a0bROM\u3001\u53ef\u7f16\u7a0bROM\uff08PROM\uff09\u3001\u53ef\u64e6\u9664\u53ef\u7f16\u7a0bROM\uff08EPROM\uff09\u548c\u7535\u53ef\u64e6\u9664\u53ef\u7f16\u7a0bROM\uff08E2PROM\uff09\uff0cE2PROM\u5b8c\u5168\u53ef\u4ee5\u7528\u8f6f\u4ef6\u6765\u64e6\u5199\uff0c\u5df2\u7ecf\u975e\u5e38\u65b9\u4fbf\u4e86\u3002\\r\\n\\r\\nNOR\uff08\u6216\u975e\uff09\u548cNAND\uff08\u4e0e\u975e\uff09\u662f\u5e02\u573a\u4e0a\u4e24\u79cd\u4e3b\u8981\u7684Flash\u95ea\u5b58\u6280\u672f\u3002Intel\u4e8e1988\u5e74\u9996\u5148\u5f00\u53d1\u51faNOR Flash\u6280\u672f\uff0c\u5f7b\u5e95\u6539\u53d8\u4e86\u539f\u5148\u7531EPROM\u548cEEPROM\u4e00\u7edf\u5929\u4e0b\u7684\u5c40\u9762\u3002\u7d27\u63a5\u7740\uff0c1989\u5e74\uff0c\u4e1c\u829d\u516c\u53f8\u53d1\u8868\u4e86NAND Flash\u7ed3\u6784\uff0c\u6bcf\u4f4d\u7684\u6210\u672c\u88ab\u5927\u5927\u964d\u4f4e\u3002\\r\\n\\r\\nNOR Flash\u548cCPU\u7684\u63a5\u53e3\u5c5e\u4e8e\u5178\u578b\u7684\u7c7bSRAM\u63a5\u53e3\uff08\u5982\u56fe2.5\u6240\u793a\uff09\uff0c\u4e0d\u9700\u8981\u589e\u52a0\u989d\u5916\u7684\u63a7\u5236\u7535\u8def\u3002NOR Flash\u7684\u7279\u70b9\u662f\u53ef\u82af\u7247\u5185\u6267\u884c\uff08eXecute In Place\uff0cXIP\uff09\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u5728NOR\u5185\u8fd0\u884c\u3002\u800cNAND Flash\u548cCPU\u7684\u63a5\u53e3\u5fc5\u987b\u7531\u76f8\u5e94\u7684\u63a7\u5236\u7535\u8def\u8fdb\u884c\u8f6c\u6362\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5730\u5740\u7ebf\u6216GPIO\u4ea7\u751fNAND Flash\u63a5\u53e3\u7684\u4fe1\u53f7\u3002NAND Flash\u4ee5\u5757\u65b9\u5f0f\u8fdb\u884c\u8bbf\u95ee\uff0c\u4e0d\u652f\u6301\u82af\u7247\u5185\u6267\u884c\u3002\\r\\n\\r\\n![image-20250323161236990](./figure/image-20250323161236990.png)\\r\\n\\r\\n\u56fe2.5\u3000\u5178\u578b\u7684\u7c7bSRAM\u63a5\u53e3\\r\\n\\r\\n\u516c\u5171\u95ea\u5b58\u63a5\u53e3\uff08Common Flash Interface\uff0cCFI\uff09\u662f\u4e00\u4e2a\u4eceNOR Flash\u5668\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u516c\u5f00\u3001\u6807\u51c6\u63a5\u53e3\u3002\u5b83\u53ef\u4ee5\u4f7f\u7cfb\u7edf\u8f6f\u4ef6\u67e5\u8be2\u5df2\u5b89\u88c5\u7684Flash\u5668\u4ef6\u7684\u5404\u79cd\u53c2\u6570\uff0c\u5305\u62ec\u5668\u4ef6\u9635\u5217\u7ed3\u6784\u53c2\u6570\u3001\u7535\u6c14\u548c\u65f6\u95f4\u53c2\u6570\u4ee5\u53ca\u5668\u4ef6\u652f\u6301\u7684\u529f\u80fd\u7b49\u3002\u5982\u679c\u82af\u7247\u4e0d\u652f\u6301CFI\uff0c\u5c31\u9700\u4f7f\u7528JEDEC\uff08Joint Electron Device Engineering Council\uff0c\u7535\u5b50\u7535\u5668\u8bbe\u5907\u8054\u5408\u4f1a\uff09\u4e86\u3002JEDEC\u89c4\u8303\u7684NOR\u5219\u65e0\u6cd5\u76f4\u63a5\u901a\u8fc7\u547d\u4ee4\u6765\u8bfb\u51fa\u5bb9\u91cf\u7b49\u4fe1\u606f\uff0c\u9700\u8981\u8bfb\u51fa\u5236\u9020\u5546ID\u548c\u8bbe\u5907ID\uff0c\u4ee5\u786e\u5b9aFlash\u7684\u5927\u5c0f\\r\\n\\r\\n\u4e0eNOR Flash\u7684\u7c7bSRAM\u63a5\u53e3\u4e0d\u540c\uff0c\u4e00\u4e2aNAND Flash\u7684\u63a5\u53e3\u4e3b\u8981\u5305\u542b\u5982\u4e0b\u4fe1\u53f7\u3002\\r\\n\\r\\n- \xb7I/O\u603b\u7ebf\uff1a\u5730\u5740\u3001\u6307\u4ee4\u548c\u6570\u636e\u901a\u8fc7\u8fd9\u7ec4\u603b\u7ebf\u4f20\u8f93\uff0c\u4e00\u822c\u4e3a8\u4f4d\u621616\u4f4d\u3002\\r\\n- \xb7\u82af\u7247\u542f\u52a8\uff08Chip Enable\uff0cCE#\uff09\uff1a\u5982\u679c\u6ca1\u6709\u68c0\u6d4b\u5230CE\u4fe1\u53f7\uff0cNAND\u5668\u4ef6\u5c31\u4fdd\u6301\u5f85\u673a\u6a21\u5f0f\uff0c\u4e0d\u5bf9\u4efb\u4f55\u63a7\u5236\u4fe1\u53f7\u505a\u51fa\u54cd\u5e94\u3002\\r\\n- \xb7\u5199\u4f7f\u80fd\uff08Write Enable\uff0cWE#\uff09\uff1aWE#\u8d1f\u8d23\u5c06\u6570\u636e\u3001\u5730\u5740\u6216\u6307\u4ee4\u5199\u5165NAND\u4e4b\u4e2d\u3002\\r\\n- \xb7\u8bfb\u4f7f\u80fd\uff08Read Enable\uff0cRE#\uff09\uff1aRE#\u5141\u8bb8\u6570\u636e\u8f93\u51fa\u3002\\r\\n- \xb7\u6307\u4ee4\u9501\u5b58\u4f7f\u80fd\uff08Command Latch Enable\uff0cCLE\uff09\uff1a\u5f53CLE\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u5728WE#\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\uff0c\u6307\u4ee4\u5c06\u88ab\u9501\u5b58\u5230NAND\u6307\u4ee4\u5bc4\u5b58\u5668\u4e2d\u3002\\r\\n- \xb7\u5730\u5740\u9501\u5b58\u4f7f\u80fd\uff08Address Latch Enable\uff0cALE\uff09\uff1a\u5f53ALE\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u5728WE#\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\uff0c\u5730\u5740\u5c06\u88ab\u9501\u5b58\u5230NAND\u5730\u5740\u5bc4\u5b58\u5668\u4e2d\u3002\\r\\n- \xb7\u5c31\u7eea/\u5fd9\uff08Ready/Busy\uff0cR/B#\uff09\uff1a\u5982\u679cNAND\u5668\u4ef6\u5fd9\uff0cR/B#\u4fe1\u53f7\u5c06\u53d8\u4e3a\u4f4e\u7535\u5e73\u3002\u8be5\u4fe1\u53f7\u662f\u6f0f\u6781\u5f00\u8def\uff0c\u9700\u8981\u91c7\u7528\u4e0a\u62c9\u7535\u963b\u3002\\r\\n\\r\\nNAND Flash\u8f83NOR Flash\u5bb9\u91cf\u5927\uff0c\u4ef7\u683c\u4f4e\uff1bNAND Flash\u4e2d\u6bcf\u4e2a\u5757\u7684\u6700\u5927\u64e6\u5199\u6b21\u6570\u662f100\u4e07\u6b21\uff0c\u800cNOR\u7684\u64e6\u5199\u6b21\u6570\u662f10\u4e07\u6b21\uff1bNAND Flash\u7684\u64e6\u9664\u3001\u7f16\u7a0b\u901f\u5ea6\u8fdc\u8d85\u8fc7NOR Flash\u3002\\r\\n\\r\\nFlash\u7684\u7f16\u7a0b\u539f\u7406\u90fd\u662f\u53ea\u80fd\u5c061\u5199\u4e3a0\uff0c\u800c\u4e0d\u80fd\u5c060\u5199\u4e3a1\u3002\u56e0\u6b64\u5728Flash\u7f16\u7a0b\u4e4b\u524d\uff0c\u5fc5\u987b\u5c06\u5bf9\u5e94\u7684\u5757\u64e6\u9664\uff0c\u800c\u64e6\u9664\u7684\u8fc7\u7a0b\u5c31\u662f\u628a\u6240\u6709\u4f4d\u90fd\u5199\u4e3a1\u7684\u8fc7\u7a0b\uff0c\u5757\u5185\u7684\u6240\u6709\u5b57\u8282\u53d8\u4e3a0xFF\u3002\u53e6\u5916\uff0cFlash\u8fd8\u5b58\u5728\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u7684\u95ee\u9898\uff0c\u4e0d\u80fd\u8001\u662f\u5728\u540c\u4e00\u5757\u4f4d\u7f6e\u8fdb\u884c\u64e6\u9664\u548c\u5199\u7684\u52a8\u4f5c\uff0c\u8fd9\u6837\u5bb9\u6613\u5bfc\u81f4\u574f\u5757\u3002\\r\\n\\r\\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u76ee\u524dNOR Flash\u53ef\u4ee5\u4f7f\u7528SPI\u63a5\u53e3\u8fdb\u884c\u8bbf\u95ee\u4ee5\u8282\u7701\u5f15\u811a\u3002\u76f8\u5bf9\u4e8e\u4f20\u7edf\u7684\u5e76\u884cNOR Flash\u800c\u8a00\uff0cSPI NOR Flash\u53ea\u9700\u89816\u4e2a\u5f15\u811a\u5c31\u80fd\u591f\u5b9e\u73b0\u5355I/O\u3001\u53ccI/O\u548c4\u4e2aI/O\u53e3\u7684\u63a5\u53e3\u901a\u4fe1\uff0c\u6709\u7684SPI NOR Flash\u8fd8\u652f\u6301DDR\u6a21\u5f0f\uff0c\u80fd\u8fdb\u4e00\u6b65\u63d0\u9ad8\u8bbf\u95ee\u901f\u5ea6\u523080MB/s\u3002\\r\\n\\r\\nIDE\uff08Integrated Drive Electronics\uff09\u63a5\u53e3\u53ef\u8fde\u63a5\u786c\u76d8\u63a7\u5236\u5668\u6216\u5149\u9a71\uff0cIDE\u63a5\u53e3\u7684\u4fe1\u53f7\u4e0eSRAM\u7c7b\u4f3c\u3002\u4eba\u4eec\u901a\u5e38\u4e5f\u628aIDE\u63a5\u53e3\u79f0\u4e3aATA\uff08Advanced Technology Attachment\uff09\u63a5\u53e3\uff0c\u4e0d\u8fc7\uff0c\u4ece\u6280\u672f\u89d2\u5ea6\u800c\u8a00\uff0c\u8fd9\u5e76\u4e0d\u51c6\u786e\u3002\u5176\u5b9e\uff0cATA\u63a5\u53e3\u53d1\u5c55\u81f3\u4eca\uff0c\u5df2\u7ecf\u7ecf\u5386\u4e86ATA-1\uff08IDE\uff09\u3001ATA-2\uff08Enhanced IDE/Fast ATA\uff0cEIDE\uff09\u3001ATA-3\uff08FastATA-2\uff09\u3001Ultra ATA\u3001Ultra ATA/33\u3001Ultra ATA/66\u3001Ultra ATA/100\u53caSerial ATA\uff08SATA\uff09\u7684\u53d1\u5c55\u8fc7\u7a0b\u3002\\r\\n\\r\\n\u5f88\u591aSoC\u96c6\u6210\u4e86\u4e00\u4e2aeFuse\u7535\u7f16\u7a0b\u7194\u4e1d\u4f5c\u4e3aOTP\uff08One-Time Programmable\uff0c\u4e00\u6b21\u6027\u53ef\u7f16\u7a0b\uff09\u5b58\u50a8\u5668\u3002eFuse\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u673a\u5bf9\u82af\u7247\u5185\u90e8\u7684\u53c2\u6570\u548c\u529f\u80fd\u8fdb\u884c\u914d\u7f6e\uff0c\u8fd9\u4e00\u822c\u662f\u5728\u82af\u7247\u51fa\u5382\u7684\u65f6\u5019\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\u3002\\r\\n\\r\\n\u4ee5\u4e0a\u6240\u8ff0\u7684\u5404\u79cdROM\u3001Flash\u548c\u78c1\u4ecb\u8d28\u5b58\u50a8\u5668\u90fd\u5c5e\u4e8e\u975e\u6613\u5931\u6027\u5b58\u50a8\u5668\uff08NVM\uff09\u7684\u8303\u7574\uff0c\u6389\u7535\u65f6\u4fe1\u606f\u4e0d\u4f1a\u4e22\u5931\uff0c\u800cRAM\u5219\u4e0e\u6b64\u76f8\u53cd\u3002\\r\\n\\r\\nRAM\u4e5f\u53ef\u518d\u5206\u4e3a\u9759\u6001RAM\uff08SRAM\uff09\u548c\u52a8\u6001RAM\uff08DRAM\uff09\u3002DRAM\u4ee5\u7535\u8377\u5f62\u5f0f\u8fdb\u884c\u5b58\u50a8\uff0c\u6570\u636e\u5b58\u50a8\u5728\u7535\u5bb9\u5668\u4e2d\u3002\u7531\u4e8e\u7535\u5bb9\u5668\u4f1a\u56e0\u6f0f\u7535\u800c\u51fa\u73b0\u7535\u8377\u4e22\u5931\uff0c\u6240\u4ee5DRAM\u5668\u4ef6\u9700\u8981\u5b9a\u671f\u5237\u65b0\u3002SRAM\u662f\u9759\u6001\u7684\uff0c\u53ea\u8981\u4f9b\u7535\u5b83\u5c31\u4f1a\u4fdd\u6301\u4e00\u4e2a\u503c\uff0cSRAM\u6ca1\u6709\u5237\u65b0\u5468\u671f\u3002\u6bcf\u4e2aSRAM\u5b58\u50a8\u5355\u5143\u75316\u4e2a\u6676\u4f53\u7ba1\u7ec4\u6210\uff0c\u800cDRAM\u5b58\u50a8\u5355\u5143\u75311\u4e2a\u6676\u4f53\u7ba1\u548c1\u4e2a\u7535\u5bb9\u5668\u7ec4\u6210\u3002\\r\\n\\r\\n\u901a\u5e38\u6240\u8bf4\u7684SDRAM\u3001DDR SDRAM\u7686\u5c5e\u4e8eDRAM\u7684\u8303\u7574\uff0c\u5b83\u4eec\u91c7\u7528\u4e0eCPU\u5916\u5b58\u63a7\u5236\u5668\u540c\u6b65\u7684\u65f6\u949f\u5de5\u4f5c\uff08\u6ce8\u610f\uff0c\u4e0d\u662f\u4e0eCPU\u7684\u5de5\u4f5c\u9891\u7387\u4e00\u81f4\uff09\u3002\u4e0eSDRAM\u76f8\u6bd4\uff0cDDR SDRAM\u540c\u65f6\u5229\u7528\u4e86\u65f6\u949f\u8109\u51b2\u7684\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u4f20\u8f93\u6570\u636e\uff0c\u56e0\u6b64\u5728\u65f6\u949f\u9891\u7387\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u4f20\u8f93\u9891\u7387\u52a0\u500d\u3002\u6b64\u5916\uff0c\u8fd8\u5b58\u5728\u4f7f\u7528RSL\uff08Rambus Signaling Level\uff0cRambus\u53d1\u4fe1\u7535\u5e73\uff09\u6280\u672f\u7684RDRAM\uff08Rambus DRAM\uff09\u548cDirect RDRAM\u3002\\r\\n\\r\\n\u9488\u5bf9\u8bb8\u591a\u7279\u5b9a\u573a\u5408\u7684\u5e94\u7528\uff0c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u5f80\u5f80\u8fd8\u4f7f\u7528\u4e86\u4e00\u4e9b\u7279\u5b9a\u7c7b\u578b\u7684RAM\u3002\\r\\n\\r\\n# 1.DPRAM\uff1a\u53cc\u7aef\u53e3RAM\\r\\n\\r\\nDPRAM\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u7aef\u53e3\u540c\u65f6\u8bbf\u95ee\uff0c\u5177\u6709\u4e24\u5957\u5b8c\u5168\u72ec\u7acb\u7684\u6570\u636e\u603b\u7ebf\u3001\u5730\u5740\u603b\u7ebf\u548c\u8bfb\u5199\u63a7\u5236\u7ebf\uff0c\u901a\u5e38\u7528\u4e8e\u4e24\u4e2a\u5904\u7406\u5668\u4e4b\u95f4\u4ea4\u4e92\u6570\u636e\uff0c\u5982\u56fe2.6\u6240\u793a\u3002\u5f53\u4e00\u7aef\u88ab\u5199\u5165\u6570\u636e\u540e\uff0c\u53e6\u4e00\u7aef\u53ef\u4ee5\u901a\u8fc7\u8f6e\u8be2\u6216\u4e2d\u65ad\u83b7\u77e5\uff0c\u5e76\u8bfb\u53d6\u5176\u5199\u5165\u7684\u6570\u636e\u3002\u7531\u4e8e\u53ccCPU\u540c\u65f6\u8bbf\u95eeDPRAM\u65f6\u7684\u4ef2\u88c1\u903b\u8f91\u7535\u8def\u96c6\u6210\u5728DPRAM\u5185\u90e8\uff0c\u6240\u4ee5\u9700\u8981\u786c\u4ef6\u5de5\u7a0b\u5e08\u8bbe\u8ba1\u7684\u7535\u8def\u539f\u7406\u6bd4\u8f83\u7b80\u5355\u3002\\r\\n\\r\\n![1742717776065](./figure/1742717776065.png)\\r\\n\\r\\n\u56fe2.6\u3000\u53cc\u7aef\u53e3RAM\\r\\n\\r\\nDPRAM\u7684\u4f18\u70b9\u662f\u901a\u4fe1\u901f\u5ea6\u5feb\u3001\u5b9e\u65f6\u6027\u5f3a\u3001\u63a5\u53e3\u7b80\u5355\uff0c\u800c\u4e14\u4e24\u8fb9\u5904\u7406\u5668\u90fd\u53ef\u4e3b\u52a8\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u3002\u9664\u4e86\u53cc\u7aef\u53e3RAM\u4ee5\u5916\uff0c\u76ee\u524dIDT\u7b49\u82af\u7247\u5382\u5546\u8fd8\u63a8\u51fa\u4e86\u591a\u7aef\u53e3RAM\uff0c\u53ef\u4ee5\u4f9b3\u4e2a\u4ee5\u4e0a\u7684\u5904\u7406\u5668\u4e92\u901a\u6570\u636e\\r\\n\\r\\n# 2.CAM\uff1a\u5185\u5bb9\u5bfb\u5740RAM\\r\\n\\r\\nCAM\u662f\u4ee5\u5185\u5bb9\u8fdb\u884c\u5bfb\u5740\u7684\u5b58\u50a8\u5668\uff0c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5b58\u50a8\u9635\u5217RAM\uff0c\u5b83\u7684\u4e3b\u8981\u5de5\u4f5c\u673a\u5236\u5c31\u662f\u540c\u65f6\u5c06\u4e00\u4e2a\u8f93\u5165\u6570\u636e\u9879\u4e0e\u5b58\u50a8\u5728CAM\u4e2d\u7684\u6240\u6709\u6570\u636e\u9879\u81ea\u52a8\u8fdb\u884c\u6bd4\u8f83\uff0c\u5224\u522b\u8be5\u8f93\u5165\u6570\u636e\u9879\u4e0eCAM\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u9879\u662f\u5426\u76f8\u5339\u914d\uff0c\u5e76\u8f93\u51fa\u8be5\u6570\u636e\u9879\u5bf9\u5e94\u7684\u5339\u914d\u4fe1\u606f\u3002\\r\\n\\r\\n\u5982\u56fe2.7\u6240\u793a\uff0c\u5728CAM\u4e2d\uff0c\u8f93\u5165\u7684\u662f\u6240\u8981\u67e5\u8be2\u7684\u6570\u636e\uff0c\u8f93\u51fa\u7684\u662f\u6570\u636e\u5730\u5740\u548c\u5339\u914d\u6807\u5fd7\u3002\u82e5\u5339\u914d\uff08\u5373\u641c\u5bfb\u5230\u6570\u636e\uff09\uff0c\u5219\u8f93\u51fa\u6570\u636e\u5730\u5740\u3002CAM\u7528\u4e8e\u6570\u636e\u68c0\u7d22\u7684\u4f18\u52bf\u662f\u8f6f\u4ef6\u65e0\u6cd5\u6bd4\u62df\u7684\uff0c\u5b83\u53ef\u4ee5\u6781\u5927\u5730\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\u3002\\r\\n\\r\\n![1742717832648](./figure/1742717832648.png)\\r\\n\\r\\n\u56fe2.7\u3000CAM\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\\r\\n\\r\\n# 3.FIFO\uff1a\u5148\u8fdb\u5148\u51fa\u961f\u5217\\r\\n\\r\\nFIFO\u5b58\u50a8\u5668\u7684\u7279\u70b9\u662f\u5148\u8fdb\u5148\u51fa\uff0c\u8fdb\u51fa\u6709\u5e8f\uff0cFIFO\u591a\u7528\u4e8e\u6570\u636e\u7f13\u51b2\u3002FIFO\u548cDPRAM\u7c7b\u4f3c\uff0c\u5177\u6709\u4e24\u4e2a\u8bbf\u95ee\u7aef\u53e3\uff0c\u4f46\u662fFIFO\u4e24\u8fb9\u7684\u7aef\u53e3\u5e76\u4e0d\u5bf9\u7b49\uff0c\u67d0\u4e00\u65f6\u523b\u53ea\u80fd\u8bbe\u7f6e\u4e3a\u4e00\u8fb9\u4f5c\u4e3a\u8f93\u5165\uff0c\u4e00\u8fb9\u4f5c\u4e3a\u8f93\u51fa\u3002\\r\\n\\r\\n\u5982\u679cFIFO\u7684\u533a\u57df\u5171\u6709n\u4e2a\u5b57\u8282\uff0c\u6211\u4eec\u53ea\u80fd\u901a\u8fc7\u5faa\u73afn\u6b21\u8bfb\u53d6\u540c\u4e00\u4e2a\u5730\u5740\u624d\u80fd\u5c06\u8be5\u7247\u533a\u57df\u8bfb\u51fa\uff0c\u4e0d\u80fd\u6307\u5b9a\u504f\u79fb\u5730\u5740\u3002\u5bf9\u4e8e\u6709n\u4e2a\u6570\u636e\u7684FIFO\uff0c\u5f53\u5faa\u73af\u8bfb\u53d6m\u6b21\u4e4b\u540e\uff0c\u4e0b\u4e00\u6b21\u8bfb\u65f6\u4f1a\u81ea\u52a8\u8bfb\u53d6\u5230\u7b2cm+1\u4e2a\u6570\u636e\uff0c\u8fd9\u662f\u7531FIFO\u672c\u8eab\u7684\u7279\u6027\u51b3\u5b9a\u7684\u3002\\r\\n\\r\\n\u603b\u7ed32.2\u8282\u7684\u5185\u5bb9\uff0c\u53ef\u5f97\u51fa\u5982\u56fe2.8\u6240\u793a\u7684\u5b58\u50a8\u5668\u5206\u7c7b\u3002\\r\\n\\r\\n![1742717901303](./figure/1742717901303.png)\\r\\n\\r\\n\u56fe2.8\u3000\u5b58\u50a8\u5668\u5206\u7c7b"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.3\u3000\u63a5\u53e3\u4e0e\u603b\u7ebf","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.3\u3000\u63a5\u53e3\u4e0e\u603b\u7ebf","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.3\u3000\u63a5\u53e3\u4e0e\u603b\u7ebf.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.3\u3000\u63a5\u53e3\u4e0e\u603b\u7ebf.md","title":"2.3.1\u3000\u4e32\u53e3","description":"RS-232\u3001RS-422\u4e0eRS-485\u90fd\u662f\u4e32\u884c\u6570\u636e\u63a5\u53e3\u6807\u51c6\uff0c\u6700\u521d\u90fd\u662f\u7531\u7535\u5b50\u5de5\u4e1a\u534f\u4f1a\uff08EIA\uff09\u5236\u8ba2\u5e76\u53d1\u5e03\u7684\u3002","date":"2025-09-15T14:44:14.825Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":24.855,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.2\u3000\u5b58\u50a8\u5668"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09"}},"content":"RS-232\u3001RS-422\u4e0eRS-485\u90fd\u662f\u4e32\u884c\u6570\u636e\u63a5\u53e3\u6807\u51c6\uff0c\u6700\u521d\u90fd\u662f\u7531\u7535\u5b50\u5de5\u4e1a\u534f\u4f1a\uff08EIA\uff09\u5236\u8ba2\u5e76\u53d1\u5e03\u7684\u3002\\r\\n\\r\\nRS-232\u57281962\u5e74\u53d1\u5e03\uff0c\u547d\u540d\u4e3aEIA-232-E\u3002\u4e4b\u540e\u53d1\u5e03\u7684RS-422\u5b9a\u4e49\u4e86\u4e00\u79cd\u5e73\u8861\u901a\u4fe1\u63a5\u53e3\uff0c\u5b83\u662f\u4e00\u79cd\u5355\u673a\u53d1\u9001\u3001\u591a\u673a\u63a5\u6536\u7684\u5355\u5411\u3001\u5e73\u8861\u4f20\u8f93\u89c4\u8303\uff0c\u88ab\u547d\u540d\u4e3aTIA/EIA-422-A\u6807\u51c6\u3002RS-422\u6539\u8fdb\u4e86RS-232\u901a\u4fe1\u8ddd\u79bb\u77ed\u3001\u901f\u7387\u4f4e\u7684\u7f3a\u70b9\u3002\u4e3a\u8fdb\u4e00\u6b65\u6269\u5c55\u5e94\u7528\u8303\u56f4\uff0cEIA\u53c8\u4e8e1983\u5e74\u5728RS-422\u7684\u57fa\u7840\u4e0a\u5236\u5b9a\u4e86RS-485\u6807\u51c6\uff0c\u589e\u52a0\u4e86\u591a\u70b9\u3001\u53cc\u5411\u901a\u4fe1\u80fd\u529b\uff0c\u5373\u5141\u8bb8\u591a\u4e2a\u53d1\u9001\u5668\u8fde\u63a5\u5230\u540c\u4e00\u6761\u603b\u7ebf\u4e0a\uff0c\u540c\u65f6\u589e\u52a0\u4e86\u53d1\u9001\u5668\u7684\u9a71\u52a8\u80fd\u529b\u548c\u51b2\u7a81\u4fdd\u62a4\u7279\u6027\uff0c\u5e76\u6269\u5c55\u4e86\u603b\u7ebf\u5171\u6a21\u8303\u56f4\uff0c\u88ab\u547d\u540d\u4e3aTIA/EIA-485-A\u6807\u51c6\u3002\\r\\n\\r\\n1969\u5e74\u53d1\u5e03\u7684RS-232\u4fee\u6539\u7248RS-232C\u662f\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u4e32\u884c\u63a5\u53e3\uff0c\u5b83\u4e3a\u8fde\u63a5DTE\uff08\u6570\u636e\u7ec8\u7aef\u8bbe\u5907\uff09\u4e0eDCE\uff08\u6570\u636e\u901a\u4fe1\u8bbe\u5907\uff09\u800c\u5236\u5b9a\u3002RS-232C\u6807\u51c6\u63a5\u53e3\u670925\u6761\u7ebf\uff084\u6761\u6570\u636e\u7ebf\u300111\u6761\u63a7\u5236\u7ebf\u30013\u6761\u5b9a\u65f6\u7ebf\u30017\u6761\u5907\u7528\u548c\u672a\u5b9a\u4e49\u7ebf\uff09\uff0c\u5e38\u7528\u7684\u53ea\u67099\u6839\uff0c\u5b83\u4eec\u662fRTS/CTS\uff08\u8bf7\u6c42\u53d1\u9001/\u6e05\u9664\u53d1\u9001\u6d41\u63a7\u5236\uff09\u3001RxD/TxD\uff08\u6570\u636e\u6536\u53d1\uff09\u3001DSR/DTR\uff08\u6570\u636e\u7ec8\u7aef\u5c31\u7eea/\u6570\u636e\u8bbe\u7f6e\u5c31\u7eea\u6d41\u63a7\u5236\uff09\u3001DCD\uff08\u6570\u636e\u8f7d\u6ce2\u68c0\u6d4b\uff0c\u4e5f\u79f0RLSD\uff0c\u5373\u63a5\u6536\u7ebf\u4fe1\u53f7\u68c0\u51fa\uff09\u3001Ringing-RI\uff08\u632f\u94c3\u6307\u793a\uff09\u3001SG\uff08\u4fe1\u53f7\u5730\uff09\u4fe1\u53f7\u3002RTS/CTS\u3001RxD/TxD\u3001DSR/DTR\u7b49\u4fe1\u53f7\u7684\u5b9a\u4e49\u5982\u4e0b\u3002\\r\\n\\r\\n- \xb7RTS\uff1a\u7528\u6765\u8868\u793aDTE\u8bf7\u6c42DCE\u53d1\u9001\u6570\u636e\uff0c\u5f53\u7ec8\u7aef\u8981\u53d1\u9001\u6570\u636e\u65f6\uff0c\u4f7f\u8be5\u4fe1\u53f7\u6709\u6548\u3002\\r\\n- \xb7CTS\uff1a\u7528\u6765\u8868\u793aDCE\u51c6\u5907\u597d\u63a5\u6536DTE\u53d1\u6765\u7684\u6570\u636e\uff0c\u662f\u5bf9RTS\u7684\u54cd\u5e94\u4fe1\u53f7\u3002\\r\\n- \xb7RxD\uff1aDTE\u901a\u8fc7RxD\u63a5\u6536\u4eceDCE\u53d1\u6765\u7684\u4e32\u884c\u6570\u636e\u3002\\r\\n- \xb7TxD\uff1aDTE\u901a\u8fc7TxD\u5c06\u4e32\u884c\u6570\u636e\u53d1\u9001\u5230DCE\u3002\\r\\n- \xb7DSR\uff1a\u6709\u6548\uff08ON\u72b6\u6001\uff09\u8868\u660eDCE\u53ef\u4ee5\u4f7f\u7528\u3002\\r\\n- \xb7DTR\uff1a\u6709\u6548\uff08ON\u72b6\u6001\uff09\u8868\u660eDTE\u53ef\u4ee5\u4f7f\u7528\u3002\\r\\n- \xb7DCD\uff1a\u5f53\u672c\u5730DCE\u8bbe\u5907\u6536\u5230\u5bf9\u65b9DCE\u8bbe\u5907\u9001\u6765\u7684\u8f7d\u6ce2\u4fe1\u53f7\u65f6\uff0c\u4f7fDCD\u6709\u6548\uff0c\u901a\u77e5DTE\u51c6\u5907\u63a5\u6536\uff0c\u5e76\u4e14\u7531DCE\u5c06\u63a5\u6536\u5230\u7684\u8f7d\u6ce2\u4fe1\u53f7\u89e3\u8c03\u4e3a\u6570\u5b57\u4fe1\u53f7\uff0c\u7ecfRxD\u7ebf\u9001\u7ed9DTE\u3002\\r\\n- \xb7Ringing-RI\uff1a\u5f53\u8c03\u5236\u89e3\u8c03\u5668\u6536\u5230\u4ea4\u6362\u53f0\u9001\u6765\u7684\u632f\u94c3\u547c\u53eb\u4fe1\u53f7\u65f6\uff0c\u4f7f\u8be5\u4fe1\u53f7\u6709\u6548\uff08ON\u72b6\u6001\uff09\uff0c\u901a\u77e5\u7ec8\u7aef\uff0c\u5df2\u88ab\u547c\u53eb\u3002\\r\\n\\r\\n\u6700\u7b80\u5355\u7684RS-232C\u4e32\u53e3\u53ea\u9700\u8981\u8fde\u63a5RxD\u3001TxD\u3001SG\u8fd93\u4e2a\u4fe1\u53f7\uff0c\u5e76\u4f7f\u7528XON/XOFF\u8f6f\u4ef6\u6d41\u63a7\u3002\\r\\n\\r\\n\u7ec4\u6210\u4e00\u4e2aRS-232C\u4e32\u53e3\u7684\u786c\u4ef6\u539f\u7406\u5982\u56fe2.9\u6240\u793a\uff0c\u4eceCPU\u5230\u8fde\u63a5\u5668\u4f9d\u6b21\u4e3aCPU\u3001UART\uff08\u901a\u7528\u5f02\u6b65\u63a5\u6536\u5668\u53d1\u9001\u5668\uff0c\u4f5c\u7528\u662f\u5b8c\u6210\u5e76/\u4e32\u8f6c\u6362\uff09\u3001CMOS/TTL\u7535\u5e73\u4e0eRS-232C\u7535\u5e73\u8f6c\u6362\u3001DB9/DB25\u6216\u81ea\u5b9a\u4e49\u8fde\u63a5\u5668\u3002\\r\\n\\r\\n![1742718057594](./figure/1742718057594.png)\\r\\n\\r\\n\u56fe2.9\u3000RS-232C\u4e32\u53e3\u7535\u8def\u539f\u7406\\r\\n\\r\\n# 2.3.2\u3000I2 C\\r\\n\\r\\nI2 C\uff08\u5185\u7f6e\u96c6\u6210\u7535\u8def\uff09\u603b\u7ebf\u662f\u7531Philips\u516c\u53f8\u5f00\u53d1\u7684\u4e24\u7ebf\u5f0f\u4e32\u884c\u603b\u7ebf\uff0c\u4ea7\u751f\u4e8e20\u4e16\u7eaa80\u5e74\u4ee3\uff0c\u7528\u4e8e\u8fde\u63a5\u5fae\u63a7\u5236\u5668\u53ca\u5176\u5916\u56f4\u8bbe\u5907\u3002I2 C\u603b\u7ebf\u7b80\u5355\u800c\u6709\u6548\uff0c\u5360\u7528\u7684PCB\uff08\u5370\u5236\u7535\u8def\u677f\uff09\u7a7a\u95f4\u5f88\u5c0f\uff0c\u82af\u7247\u5f15\u811a\u6570\u91cf\u5c11\uff0c\u8bbe\u8ba1\u6210\u672c\u4f4e\u3002I2 C\u603b\u7ebf\u652f\u6301\u591a\u4e3b\u63a7\uff08Multi-Mastering\uff09\u6a21\u5f0f\uff0c\u4efb\u4f55\u80fd\u591f\u8fdb\u884c\u53d1\u9001\u548c\u63a5\u6536\u7684\u8bbe\u5907\u90fd\u53ef\u4ee5\u6210\u4e3a\u4e3b\u8bbe\u5907\u3002\u4e3b\u63a7\u80fd\u591f\u63a7\u5236\u6570\u636e\u7684\u4f20\u8f93\u548c\u65f6\u949f\u9891\u7387\uff0c\u5728\u4efb\u610f\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u63a7\u3002\\r\\n\\r\\n\u7ec4\u6210I2 C\u603b\u7ebf\u7684\u4e24\u4e2a\u4fe1\u53f7\u4e3a\u6570\u636e\u7ebfSDA\u548c\u65f6\u949fSCL\u3002\u4e3a\u4e86\u907f\u514d\u603b\u7ebf\u4fe1\u53f7\u7684\u6df7\u4e71\uff0c\u8981\u6c42\u5404\u8bbe\u5907\u8fde\u63a5\u5230\u603b\u7ebf\u7684\u8f93\u51fa\u7aef\u5fc5\u987b\u662f\u5f00\u6f0f\u8f93\u51fa\u6216\u96c6\u7535\u6781\u5f00\u8def\u8f93\u51fa\u7684\u7ed3\u6784\u3002\u603b\u7ebf\u7a7a\u95f2\u65f6\uff0c\u4e0a\u62c9\u7535\u963b\u4f7fSDA\u548cSCL\u7ebf\u90fd\u4fdd\u6301\u9ad8\u7535\u5e73\u3002\u6839\u636e\u5f00\u6f0f\u8f93\u51fa\u6216\u96c6\u7535\u6781\u5f00\u8def\u8f93\u51fa\u4fe1\u53f7\u7684\u201c\u7ebf\u4e0e\u201d\u903b\u8f91\uff0cI2 C\u603b\u7ebf\u4e0a\u4efb\u610f\u5668\u4ef6\u8f93\u51fa\u4f4e\u7535\u5e73\u90fd\u4f1a\u4f7f\u76f8\u5e94\u603b\u7ebf\u4e0a\u7684\u4fe1\u53f7\u7ebf\u53d8\u4f4e\u3002\\r\\n\\r\\n\u7ebf\u4e0e\u201d\u903b\u8f91\u6307\u7684\u662f\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u8f93\u51fa\u76f4\u63a5\u4e92\u8fde\u5c31\u53ef\u4ee5\u5b9e\u73b0\u201c\u4e0e\u201d\u7684\u903b\u8f91\u529f\u80fd\uff0c\u53ea\u6709\u8f93\u51fa\u7aef\u662f\u5f00\u6f0f\uff08\u5bf9\u4e8eCMOS\u5668\u4ef6\uff09\u8f93\u51fa\u6216\u96c6\u7535\u6781\u5f00\u8def\uff08\u5bf9\u4e8eTTL\u5668\u4ef6\uff09\u8f93\u51fa\u65f6\u624d\u6ee1\u8db3\u6b64\u6761\u4ef6\u3002\u5de5\u7a0b\u5e08\u4e00\u822c\u4ee5\u201cOC\u95e8\u201d\u7b80\u79f0\u5f00\u6f0f\u6216\u96c6\u7535\u6781\u5f00\u8def\u3002\\r\\n\\r\\nI2 C\u8bbe\u5907\u4e0a\u7684\u4e32\u884c\u6570\u636e\u7ebfSDA\u63a5\u53e3\u7535\u8def\u662f\u53cc\u5411\u7684\uff0c\u8f93\u51fa\u7535\u8def\u7528\u4e8e\u5411\u603b\u7ebf\u4e0a\u53d1\u9001\u6570\u636e\uff0c\u8f93\u5165\u7535\u8def\u7528\u4e8e\u63a5\u6536\u603b\u7ebf\u4e0a\u7684\u6570\u636e\u3002\u540c\u6837\u5730\uff0c\u4e32\u884c\u65f6\u949f\u7ebfSCL\u4e5f\u662f\u53cc\u5411\u7684\uff0c\u4f5c\u4e3a\u63a7\u5236\u603b\u7ebf\u6570\u636e\u4f20\u9001\u7684\u4e3b\u673a\u8981\u901a\u8fc7SCL\u8f93\u51fa\u7535\u8def\u53d1\u9001\u65f6\u949f\u4fe1\u53f7\uff0c\u5e76\u68c0\u6d4b\u603b\u7ebf\u4e0aSCL\u4e0a\u7684\u7535\u5e73\u4ee5\u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u53d1\u4e0b\u4e00\u4e2a\u65f6\u949f\u8109\u51b2\u7535\u5e73\uff1b\u4f5c\u4e3a\u63a5\u6536\u4e3b\u673a\u547d\u4ee4\u7684\u4ece\u8bbe\u5907\u9700\u6309\u603b\u7ebf\u4e0aSCL\u7684\u4fe1\u53f7\u53d1\u9001\u6216\u63a5\u6536SDA\u4e0a\u7684\u4fe1\u53f7\uff0c\u5b83\u4e5f\u53ef\u4ee5\u5411SCL\u7ebf\u53d1\u51fa\u4f4e\u7535\u5e73\u4fe1\u53f7\u4ee5\u5ef6\u957f\u603b\u7ebf\u65f6\u949f\u4fe1\u53f7\u5468\u671f\u3002\\r\\n\\r\\n\u5f53SCL\u7a33\u5b9a\u5728\u9ad8\u7535\u5e73\u65f6\uff0cSDA\u7531\u9ad8\u5230\u4f4e\u7684\u53d8\u5316\u5c06\u4ea7\u751f\u4e00\u4e2a\u5f00\u59cb\u4f4d\uff0c\u800c\u7531\u4f4e\u5230\u9ad8\u7684\u53d8\u5316\u5219\u4ea7\u751f\u4e00\u4e2a\u505c\u6b62\u4f4d\uff0c\u5982\u56fe2.10\u6240\u793a\u3002\\r\\n\\r\\n\u5f00\u59cb\u4f4d\u548c\u505c\u6b62\u4f4d\u90fd\u7531I2 C\u4e3b\u8bbe\u5907\u4ea7\u751f\u3002\u5728\u9009\u62e9\u4ece\u8bbe\u5907\u65f6\uff0c\u5982\u679c\u4ece\u8bbe\u5907\u91c7\u75287\u4f4d\u5730\u5740\uff0c\u5219\u4e3b\u8bbe\u5907\u5728\u53d1\u8d77\u4f20\u8f93\u8fc7\u7a0b\u524d\uff0c\u9700\u5148\u53d1\u90011\u5b57\u8282\u7684\u5730\u5740\u4fe1\u606f\uff0c\u524d7\u4f4d\u4e3a\u8bbe\u5907\u5730\u5740\uff0c\u6700\u540e1\u4f4d\u4e3a\u8bfb\u5199\u6807\u5fd7\u3002\u4e4b\u540e\uff0c\u6bcf\u6b21\u4f20\u8f93\u7684\u6570\u636e\u4e5f\u662f1\u5b57\u8282\uff0c\u4eceMSB\u5f00\u59cb\u4f20\u8f93\u3002\u6bcf\u4e2a\u5b57\u8282\u4f20\u5b8c\u540e\uff0c\u5728SCL\u7684\u7b2c9\u4e2a\u4e0a\u5347\u6cbf\u5230\u6765\u4e4b\u524d\uff0c\u63a5\u6536\u65b9\u5e94\u8be5\u53d1\u51fa1\u4e2aACK\u4f4d\u3002SCL\u4e0a\u7684\u65f6\u949f\u8109\u51b2\u7531I2 C\u4e3b\u63a7\u65b9\u53d1\u51fa\uff0c\u5728\u7b2c8\u4e2a\u65f6\u949f\u5468\u671f\u4e4b\u540e\uff0c\u4e3b\u63a7\u65b9\u5e94\u8be5\u91ca\u653eSDA\uff0cI2 C\u603b\u7ebf\u7684\u65f6\u5e8f\u5982\u56fe2.11\u6240\u793a\u3002\\r\\n\\r\\n![image-20250323162212364](./figure/image-20250323162212364.png)\\r\\n\\r\\n\u56fe2.10\u3000I2 C\u603b\u7ebf\u7684\u5f00\u59cb\u4f4d\u548c\u505c\u6b62\u4f4d\\r\\n\\r\\n![image-20250323162236449](./figure/image-20250323162236449.png)\\r\\n\\r\\n\u56fe2.11\u3000I2 C\u603b\u7ebf\u7684\u65f6\u5e8f\\r\\n\\r\\n# 2.3.3\u3000SPI\\r\\n\\r\\nSPI\uff08Serial Peripheral Interface\uff0c\u4e32\u884c\u5916\u8bbe\u63a5\u53e3\uff09\u603b\u7ebf\u7cfb\u7edf\u662f\u4e00\u79cd\u540c\u6b65\u4e32\u884c\u5916\u8bbe\u63a5\u53e3\uff0c\u5b83\u53ef\u4ee5\u4f7fCPU\u4e0e\u5404\u79cd\u5916\u56f4\u8bbe\u5907\u4ee5\u4e32\u884c\u65b9\u5f0f\u8fdb\u884c\u901a\u4fe1\u4ee5\u4ea4\u6362\u4fe1\u606f\u3002\u4e00\u822c\u4e3b\u63a7SoC\u4f5c\u4e3aSPI\u7684\u201c\u4e3b\u201d\uff0c\u800c\u5916\u8bbe\u4f5c\u4e3aSPI\u7684\u201c\u4ece\u201d\u3002\\r\\n\\r\\nSPI\u63a5\u53e3\u4e00\u822c\u4f7f\u75284\u6761\u7ebf\uff1a\u4e32\u884c\u65f6\u949f\u7ebf\uff08SCLK\uff09\u3001\u4e3b\u673a\u8f93\u5165/\u4ece\u673a\u8f93\u51fa\u6570\u636e\u7ebfMISO\u3001\u4e3b\u673a\u8f93\u51fa/\u4ece\u673a\u8f93\u5165\u6570\u636e\u7ebfMOSI\u548c\u4f4e\u7535\u5e73\u6709\u6548\u7684\u4ece\u673a\u9009\u62e9\u7ebfSS\uff08\u5728\u4e0d\u540c\u7684\u6587\u732e\u91cc\uff0c\u4e5f\u5e38\u79f0\u4e3anCS\u3001CS\u3001CSB\u3001CSN\u3001nSS\u3001STE\u3001SYNC\u7b49\uff09\u3002\u56fe2.12\u6f14\u793a\u4e861\u4e2a\u4e3b\u673a\u8fde\u63a53\u4e2aSPI\u5916\u8bbe\u7684\u786c\u4ef6\u8fde\u63a5\u56fe\u3002\\r\\n\\r\\n![1742718205025](./figure/1742718205025.png)\\r\\n\\r\\n\u56fe2.12\u3000SPI\u4e3b\u3001\u4ece\u786c\u4ef6\u8fde\u63a5\u56fe\\r\\n\\r\\n\u5982\u56fe2.13\u6240\u793a\uff0c\u5728SPI\u603b\u7ebf\u7684\u4f20\u8f93\u4e2d\uff0cSS\u4fe1\u53f7\u662f\u4f4e\u7535\u5e73\u6709\u6548\u7684\uff0c\u5f53\u6211\u4eec\u8981\u4e0e\u67d0\u5916\u8bbe\u901a\u4fe1\u7684\u65f6\u5019\uff0c\u9700\u8981\u5c06\u8be5\u5916\u8bbe\u4e0a\u7684SS\u7ebf\u7f6e\u4f4e\u3002\u6b64\u5916\uff0c\u7279\u522b\u8981\u6ce8\u610fSPI\u4ece\u8bbe\u5907\u652f\u6301\u7684SPI\u603b\u7ebf\u6700\u9ad8\u65f6\u949f\u9891\u7387\uff08\u51b3\u5b9a\u4e86SCK\u7684\u9891\u7387\uff09\u4ee5\u53ca\u5916\u8bbe\u7684CPHA\u3001CPOL\u6a21\u5f0f\uff0c\u8fd9\u51b3\u5b9a\u4e86\u6570\u636e\u4e0e\u65f6\u949f\u4e4b\u95f4\u7684\u504f\u79fb\u3001\u91c7\u6837\u7684\u65f6\u523b\u4ee5\u53ca\u89e6\u53d1\u7684\u8fb9\u6cbf\u662f\u4e0a\u5347\u6cbf\u8fd8\u662f\u4e0b\u964d\u6cbf\u3002\\r\\n\\r\\n![image-20250323162353183](./figure/image-20250323162353183.png)\\r\\n\\r\\nSPI\u6a21\u5757\u4e3a\u4e86\u548c\u5916\u8bbe\u8fdb\u884c\u6570\u636e\u4ea4\u6362\uff0c\u6839\u636e\u5916\u8bbe\u5de5\u4f5c\u8981\u6c42\uff0c\u5176\u8f93\u51fa\u4e32\u884c\u540c\u6b65\u65f6\u949f\u6781\u6027\uff08CPOL\uff09\u548c\u76f8\u4f4d\uff08CPHA\uff09\u53ef\u4ee5\u8fdb\u884c\u914d\u7f6e\u3002\u5982\u679cCPOL=0\uff0c\u4e32\u884c\u540c\u6b65\u65f6\u949f\u7684\u7a7a\u95f2\u72b6\u6001\u4e3a\u4f4e\u7535\u5e73\uff1b\u5982\u679cCPOL=1\uff0c\u4e32\u884c\u540c\u6b65\u65f6\u949f\u7684\u7a7a\u95f2\u72b6\u6001\u4e3a\u9ad8\u7535\u5e73\u3002\u5982\u679cCPHA=0\uff0c\u5728\u4e32\u884c\u540c\u6b65\u65f6\u949f\u7684\u7b2c\u4e00\u4e2a\u8df3\u53d8\u6cbf\uff08\u4e0a\u5347\u6216\u4e0b\u964d\uff09\u6570\u636e\u88ab\u91c7\u6837\uff1b\u5982\u679cCPHA=1\uff0c\u5728\u4e32\u884c\u540c\u6b65\u65f6\u949f\u7684\u7b2c\u4e8c\u4e2a\u8df3\u53d8\u6cbf\uff08\u4e0a\u5347\u6216\u4e0b\u964d\uff09\u6570\u636e\u88ab\u91c7\u6837\u3002\\r\\n\\r\\n# 2.3.4\u3000USB\\r\\n\\r\\nUSB\uff08\u901a\u7528\u4e32\u884c\u603b\u7ebf\uff09\u662fIntel\u3001Microsoft\u7b49\u5382\u5546\u4e3a\u89e3\u51b3\u8ba1\u7b97\u673a\u5916\u8bbe\u79cd\u7c7b\u7684\u65e5\u76ca\u589e\u52a0\u4e0e\u6709\u9650\u7684\u4e3b\u677f\u63d2\u69fd\u548c\u7aef\u53e3\u4e4b\u95f4\u7684\u77db\u76fe\u800c\u4e8e1995\u5e74\u63d0\u51fa\u7684\uff0c\u5b83\u5177\u6709\u6570\u636e\u4f20\u8f93\u7387\u9ad8\u3001\u6613\u6269\u5c55\u3001\u652f\u6301\u5373\u63d2\u5373\u7528\u548c\u70ed\u63d2\u62d4\u7684\u4f18\u70b9\uff0c\u76ee\u524d\u5df2\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\u3002\\r\\n\\r\\nUSB 1.1\u5305\u542b\u5168\u901f\u548c\u4f4e\u901f\u4e24\u79cd\u6a21\u5f0f\uff0c\u4f4e\u901f\u65b9\u5f0f\u7684\u901f\u7387\u4e3a1.5Mbit/s\uff0c\u652f\u6301\u4e00\u4e9b\u4e0d\u9700\u8981\u5f88\u5927\u6570\u636e\u541e\u5410\u91cf\u548c\u5f88\u9ad8\u5b9e\u65f6\u6027\u7684\u8bbe\u5907\uff0c\u5982\u9f20\u6807\u7b49\u3002\u5168\u901f\u6a21\u5f0f\u4e3a12Mbit/s\uff0c\u53ef\u4ee5\u5916\u63a5\u901f\u7387\u66f4\u9ad8\u7684\u5916\u8bbe\u3002\u5728USB 2.0\u4e2d\uff0c\u589e\u52a0\u4e86\u4e00\u79cd\u9ad8\u901f\u65b9\u5f0f\uff0c\u6570\u636e\u4f20\u8f93\u7387\u8fbe\u5230480Mbit/s\uff0c\u534a\u53cc\u5de5\uff0c\u53ef\u4ee5\u6ee1\u8db3\u66f4\u9ad8\u901f\u5916\u8bbe\u7684\u9700\u8981\u3002\u800cUSB 3.0\uff08\u4e5f\u88ab\u8ba4\u4e3a\u662fSuper Speed USB\uff09\u7684\u6700\u5927\u4f20\u8f93\u5e26\u5bbd\u9ad8\u8fbe5.0Gbit/s\uff08\u5373640MB/s\uff09\uff0c\u5168\u53cc\u5de5\u3002\\r\\n\\r\\nUSB 2.0\u603b\u7ebf\u7684\u673a\u68b0\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u91c7\u75284\u82af\u7684\u5c4f\u853d\u7ebf\uff0c\u4e00\u5bf9\u5dee\u5206\u7ebf\uff08D+\u3001D-\uff09\u4f20\u9001\u4fe1\u53f7\uff0c\u53e6\u4e00\u5bf9\uff08VBUS\u3001\u7535\u6e90\u5730\uff09\u4f20\u9001+5V\u7684\u76f4\u6d41\u7535\u3002USB 3.0\u7ebf\u7f06\u5219\u8bbe\u8ba1\u4e868\u6761\u5185\u90e8\u7ebf\u8def\uff0c\u9664VBUS\u3001\u7535\u6e90\u5730\u4e4b\u5916\uff0c\u5176\u4f593\u5bf9\u5747\u4e3a\u6570\u636e\u4f20\u8f93\u7ebf\u8def\u3002\u5176\u4e2d\u4fdd\u7559\u4e86D+\u4e0eD-\u8fd9\u4e24\u6761\u517c\u5bb9USB 2.0\u7684\u7ebf\u8def\uff0c\u65b0\u589e\u4e86SSRX\u4e0eSSTX\u4e13\u4e3aUSB 3.0\u6240\u8bbe\u7684\u7ebf\u8def\u3002\\r\\n\\r\\n\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u7535\u8def\u677f\u82e5\u9700\u8981\u6302\u63a5USB\u8bbe\u5907\uff0c\u5219\u9700\u63d0\u4f9bUSB\u4e3b\u673a\uff08Host\uff09\u63a7\u5236\u5668\u548c\u8fde\u63a5\u5668\uff1b\u82e5\u7535\u8def\u677f\u9700\u8981\u4f5c\u4e3aUSB\u8bbe\u5907\uff0c\u5219\u9700\u63d0\u4f9bUSB\u8bbe\u5907\u9002\u914d\u5668\u548c\u8fde\u63a5\u5668\u3002\u76ee\u524d\uff0c\u5927\u591a\u6570SoC\u96c6\u6210\u4e86USB\u4e3b\u673a\u63a7\u5236\u5668\uff08\u4ee5\u8fde\u63a5USB\u5916\u8bbe\uff09\u548c\u8bbe\u5907\u9002\u914d\u5668\uff08\u4ee5\u5c06\u672c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4f5c\u4e3a\u5176\u4ed6\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684USB\u5916\u8bbe\uff0c\u5982\u624b\u673a\u5145\u5f53U\u76d8\uff09\u3002\u7531USB\u4e3b\u673a\u3001\u8bbe\u5907\u548cHub\u7ec4\u6210\u7684USB\u7cfb\u7edf\u7684\u7269\u7406\u62d3\u6251\u7ed3\u6784\u5982\u56fe2.14\u6240\u793a\u3002\\r\\n\\r\\n![image-20250323162522113](./figure/image-20250323162522113.png)\\r\\n\\r\\n\u56fe2.14\u3000USB\u7684\u7269\u7406\u62d3\u6251\u7ed3\u6784\\r\\n\\r\\n\u6bcf\u4e00\u4e2aUSB\u8bbe\u5907\u4f1a\u6709\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u903b\u8f91\u8fde\u63a5\u70b9\u5728\u91cc\u9762\uff0c\u6bcf\u4e2a\u8fde\u63a5\u70b9\u53eb\u7aef\u70b9\u3002USB\u63d0\u4f9b\u4e86\u591a\u79cd\u4f20\u8f93\u65b9\u5f0f\u4ee5\u9002\u5e94\u5404\u79cd\u8bbe\u5907\u7684\u9700\u8981\uff0c\u4e00\u4e2a\u7aef\u70b9\u53ef\u4ee5\u9009\u62e9\u5982\u4e0b\u4e00\u79cd\u4f20\u8f93\u65b9\u5f0f\u3002\\r\\n\\r\\n## 1.\u63a7\u5236\uff08Control\uff09\u4f20\u8f93\u65b9\u5f0f\\r\\n\\r\\n\u63a7\u5236\u4f20\u8f93\u662f\u53cc\u5411\u4f20\u8f93\uff0c\u6570\u636e\u91cf\u901a\u5e38\u8f83\u5c0f\uff0c\u4e3b\u8981\u7528\u6765\u8fdb\u884c\u67e5\u8be2\u3001\u914d\u7f6e\u548c\u7ed9USB\u8bbe\u5907\u53d1\u9001\u901a\u7528\u547d\u4ee4\u3002\u6240\u6709USB\u8bbe\u5907\u5fc5\u987b\u652f\u6301\u6807\u51c6\u8bf7\u6c42\uff08Standard Request\uff09\uff0c\u63a7\u5236\u4f20\u8f93\u65b9\u5f0f\u548c\u7aef\u70b90\u3002\\r\\n\\r\\n## 2.\u540c\u6b65\uff08Isochronous\uff09\u4f20\u8f93\u65b9\u5f0f\\r\\n\\r\\n\u540c\u6b65\u4f20\u8f93\u63d0\u4f9b\u4e86\u786e\u5b9a\u7684\u5e26\u5bbd\u548c\u95f4\u9694\u65f6\u95f4\uff0c\u5b83\u7528\u4e8e\u65f6\u95f4\u8981\u6c42\u4e25\u683c\u5e76\u5177\u6709\u8f83\u5f3a\u5bb9\u9519\u6027\u7684\u6d41\u6570\u636e\u4f20\u8f93\uff0c\u6216\u8005\u7528\u4e8e\u8981\u6c42\u6052\u5b9a\u6570\u636e\u4f20\u9001\u7387\u7684\u5373\u65f6\u5e94\u7528\u3002\u4f8b\u5982\u8fdb\u884c\u8bed\u97f3\u4e1a\u52a1\u4f20\u8f93\u65f6\uff0c\u4f7f\u7528\u540c\u6b65\u4f20\u8f93\u65b9\u5f0f\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002\u540c\u6b65\u4f20\u8f93\u4e5f\u5e38\u79f0\u4e3a\u201cStreaming Real-time\u201d\u4f20\u8f93\u3002\\r\\n\\r\\n## 3.\u4e2d\u65ad\uff08Interrupt\uff09\u4f20\u8f93\u65b9\u5f0f\\r\\n\\r\\n\u4e2d\u65ad\u65b9\u5f0f\u4f20\u9001\u662f\u5355\u5411\u7684\uff0c\u5bf9\u4e8eUSB\u4e3b\u673a\u800c\u8a00\uff0c\u53ea\u6709\u8f93\u5165\u3002\u4e2d\u65ad\u4f20\u8f93\u65b9\u5f0f\u4e3b\u8981\u7528\u4e8e\u5b9a\u65f6\u67e5\u8be2\u8bbe\u5907\u662f\u5426\u6709\u4e2d\u65ad\u6570\u636e\u8981\u4f20\u9001\uff0c\u8be5\u4f20\u8f93\u65b9\u5f0f\u5e94\u7528\u5728\u5c11\u91cf\u5206\u6563\u7684\u3001\u4e0d\u53ef\u9884\u6d4b\u7684\u6570\u636e\u4f20\u8f93\u573a\u5408\uff0c\u952e\u76d8\u3001\u6e38\u620f\u6746\u548c\u9f20\u6807\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u578b\\r\\n\\r\\n## 4.\u6279\u91cf\uff08Bulk\uff09\u4f20\u8f93\u65b9\u5f0f\\r\\n\\r\\n\u6279\u91cf\u4f20\u8f93\u4e3b\u8981\u5e94\u7528\u5728\u6ca1\u6709\u5e26\u5bbd\u3001\u95f4\u9694\u65f6\u95f4\u8981\u6c42\u7684\u6279\u91cf\u6570\u636e\u7684\u4f20\u9001\u548c\u63a5\u6536\u4e2d\uff0c\u5b83\u8981\u6c42\u4fdd\u8bc1\u4f20\u8f93\u3002\u6253\u5370\u673a\u548c\u626b\u63cf\u4eea\u5c5e\u4e8e\u8fd9\u79cd\u7c7b\u578b\u3002\\r\\n\\r\\n\u800cUSB 3.0\u5219\u589e\u52a0\u4e86\u4e00\u79cdBulk Streams\u4f20\u8f93\u6a21\u5f0f\uff0cUSB 2.0\u7684Bulk\u6a21\u5f0f\u53ea\u652f\u63011\u4e2a\u6570\u636e\u6d41\uff0c\u800cBulk Streams\u4f20\u8f93\u6a21\u5f0f\u5219\u53ef\u4ee5\u652f\u6301\u591a\u4e2a\u6570\u636e\u6d41\uff0c\u6bcf\u4e2a\u6570\u636e\u6d41\u88ab\u5206\u914d\u4e00\u4e2aStream ID\uff08SID\uff09\uff0c\u6bcf\u4e2aSID\u4e0e\u4e00\u4e2a\u4e3b\u673a\u7f13\u51b2\u533a\u5bf9\u5e94\u3002\\r\\n\\r\\n\u5728USB\u67b6\u6784\u4e2d\uff0c\u96c6\u7ebf\u5668\u8d1f\u8d23\u68c0\u6d4b\u8bbe\u5907\u7684\u8fde\u63a5\u548c\u65ad\u5f00\uff0c\u5229\u7528\u5176\u4e2d\u65adIN\u7aef\u70b9\uff08Interrupt IN Endpoint\uff09\u6765\u5411\u4e3b\u673a\u62a5\u544a\u3002\u4e00\u65e6\u83b7\u6089\u6709\u65b0\u8bbe\u5907\u8fde\u63a5\u4e0a\u6765\uff0c\u4e3b\u673a\u5c31\u4f1a\u53d1\u9001\u4e00\u7cfb\u5217\u8bf7\u6c42\u7ed9\u8bbe\u5907\u6240\u6302\u8f7d\u7684\u96c6\u7ebf\u5668\uff0c\u518d\u7531\u96c6\u7ebf\u5668\u5efa\u7acb\u8d77\u4e00\u6761\u8fde\u63a5\u4e3b\u673a\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1\u901a\u9053\u3002\u7136\u540e\u4e3b\u673a\u4ee5\u63a7\u5236\u4f20\u8f93\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u7aef\u70b90\u5bf9\u8bbe\u5907\u53d1\u9001\u5404\u79cd\u8bf7\u6c42\uff0c\u8bbe\u5907\u6536\u5230\u4e3b\u673a\u53d1\u6765\u7684\u8bf7\u6c42\u540e\u56de\u590d\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u8fdb\u884c\u679a\u4e3e\uff08Enumerate\uff09\u64cd\u4f5c\u3002\u56e0\u6b64USB\u603b\u7ebf\u5177\u5907\u70ed\u63d2\u62d4\u7684\u80fd\u529b\u3002\\r\\n\\r\\n# 2.3.5\u3000\u4ee5\u592a\u7f51\u63a5\u53e3\\r\\n\\r\\n\u4ee5\u592a\u7f51\u63a5\u53e3\u7531MAC\uff08\u4ee5\u592a\u7f51\u5a92\u4f53\u63a5\u5165\u63a7\u5236\u5668\uff09\u548cPHY\uff08\u7269\u7406\u63a5\u53e3\u6536\u53d1\u5668\uff09\u7ec4\u6210\u3002\u4ee5\u592a\u7f51MAC\u7531IEEE 802.3\u4ee5\u592a\u7f51\u6807\u51c6\u5b9a\u4e49\uff0c\u5b9e\u73b0\u4e86\u6570\u636e\u94fe\u8def\u5c42\u3002\u5e38\u7528\u7684MAC\u652f\u630110Mbit/s\u6216100Mbit/s\u4e24\u79cd\u901f\u7387\u3002\u5409\u6bd4\u7279\u4ee5\u592a\u7f51\uff08\u4e5f\u79f0\u4e3a\u5343\u5146\u4f4d\u4ee5\u592a\u7f51\uff09\u662f\u5feb\u901f\u4ee5\u592a\u7f51\u7684\u4e0b\u4e00\u4ee3\u6280\u672f\uff0c\u5c06\u7f51\u901f\u63d0\u9ad8\u5230\u4e861000Mbit/s\u3002\u5343\u5146\u4f4d\u4ee5\u592a\u7f51\u4ee5IEEE 802.3z\u548c802.3ab\u53d1\u5e03\uff0c\u4f5c\u4e3aIEEE 802.3\u6807\u51c6\u7684\u8865\u5145\u3002\\r\\n\\r\\nMAC\u548cPHY\u4e4b\u95f4\u91c7\u7528MII\uff08\u5a92\u4f53\u72ec\u7acb\u63a5\u53e3\uff09\u8fde\u63a5\uff0c\u5b83\u662fIEEE-802.3\u5b9a\u4e49\u7684\u4ee5\u592a\u7f51\u884c\u4e1a\u6807\u51c6\uff0c\u5305\u62ec1\u4e2a\u6570\u636e\u63a5\u53e3\u4e0eMAC\u548cPHY\u4e4b\u95f4\u76841\u4e2a\u7ba1\u7406\u63a5\u53e3\u3002\u6570\u636e\u63a5\u53e3\u5305\u62ec\u5206\u522b\u7528\u4e8e\u53d1\u9001\u548c\u63a5\u6536\u7684\u4e24\u6761\u72ec\u7acb\u4fe1\u9053\uff0c\u6bcf\u6761\u4fe1\u9053\u90fd\u6709\u81ea\u5df1\u7684\u6570\u636e\u3001\u65f6\u949f\u548c\u63a7\u5236\u4fe1\u53f7\uff0cMII\u6570\u636e\u63a5\u53e3\u603b\u5171\u9700\u898116\u4e2a\u4fe1\u53f7\u3002MII\u7ba1\u7406\u63a5\u53e3\u5305\u542b\u4e24\u4e2a\u4fe1\u53f7\uff0c\u4e00\u4e2a\u662f\u65f6\u949f\u4fe1\u53f7\uff0c\u53e6\u4e00\u4e2a\u662f\u6570\u636e\u4fe1\u53f7\u3002\u901a\u8fc7\u7ba1\u7406\u63a5\u53e3\uff0c\u4e0a\u5c42\u80fd\u76d1\u89c6\u548c\u63a7\u5236PHY\\r\\n\\r\\n\u4e00\u4e2a\u4ee5\u592a\u7f51\u63a5\u53e3\u7684\u786c\u4ef6\u7535\u8def\u539f\u7406\u5982\u56fe2.15\u6240\u793a\uff0c\u4eceCPU\u5230\u6700\u7ec8\u63a5\u53e3\u4f9d\u6b21\u4e3aCPU\u3001MAC\u3001PHY\u3001\u4ee5\u592a\u7f51\u9694\u79bb\u53d8\u538b\u5668\u3001RJ45\u63d2\u5ea7\u3002\u4ee5\u592a\u7f51\u9694\u79bb\u53d8\u538b\u5668\u662f\u4ee5\u592a\u7f51\u6536\u53d1\u82af\u7247\u4e0e\u8fde\u63a5\u5668\u4e4b\u95f4\u7684\u78c1\u6027\u7ec4\u4ef6\uff0c\u5728\u5176\u4e24\u8005\u4e4b\u95f4\u8d77\u7740\u4fe1\u53f7\u4f20\u8f93\u3001\u963b\u6297\u5339\u914d\u3001\u6ce2\u5f62\u4fee\u590d\u3001\u4fe1\u53f7\u6742\u6ce2\u6291\u5236\u548c\u9ad8\u7535\u538b\u9694\u79bb\u4f5c\u7528\\r\\n\\r\\n![1742719479213](./figure/1742719479213.png)\\r\\n\\r\\n\u56fe2.15\u3000\u4ee5\u592a\u7f51\u63a5\u53e3\u7684\u786c\u4ef6\u7535\u8def\u539f\u7406\\r\\n\\r\\n\u8bb8\u591a\u5904\u7406\u5668\u5185\u90e8\u96c6\u6210\u4e86MAC\u6216\u540c\u65f6\u96c6\u6210\u4e86MAC\u548cPHY\uff0c\u53e6\u6709\u8bb8\u591a\u4ee5\u592a\u7f51\u63a7\u5236\u82af\u7247\u4e5f\u96c6\u6210\u4e86MAC\u548cPHY\u3002\\r\\n\\r\\n# 2.3.6\u3000PCI\u548cPCI-E\\r\\n\\r\\nPCI\uff08\u5916\u56f4\u90e8\u4ef6\u4e92\u8fde\uff09\u662f\u7531Intel\u4e8e1991\u5e74\u63a8\u51fa\u7684\u4e00\u79cd\u5c40\u90e8\u603b\u7ebf\uff0c\u4f5c\u4e3a\u4e00\u79cd\u901a\u7528\u7684\u603b\u7ebf\u63a5\u53e3\u6807\u51c6\uff0c\u5b83\u5728\u76ee\u524d\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u5f97\u5230\u4e86\u975e\u5e38\u5e7f\u6cdb\u5e94\u7528\u3002PCI\u603b\u7ebf\u5177\u6709\u5982\u4e0b\u7279\u70b9\u3002\\r\\n\\r\\n- \xb7\u6570\u636e\u603b\u7ebf\u4e3a32\u4f4d\uff0c\u53ef\u6269\u5145\u523064\u4f4d\u3002\\r\\n- \xb7\u53ef\u8fdb\u884c\u7a81\u53d1\uff08Burst\uff09\u6a21\u5f0f\u4f20\u8f93\u3002\u7a81\u53d1\u65b9\u5f0f\u4f20\u8f93\u662f\u6307\u53d6\u5f97\u603b\u7ebf\u63a7\u5236\u6743\u540e\u8fde\u7eed\u8fdb\u884c\u591a\u4e2a\u6570\u636e\u7684\u4f20\u8f93\u3002\u7a81\u53d1\u4f20\u8f93\u65f6\uff0c\u53ea\u9700\u8981\u7ed9\u51fa\u76ee\u7684\u5730\u7684\u9996\u5730\u5740\uff0c\u8bbf\u95ee\u7b2c1\u4e2a\u6570\u636e\u540e\uff0c\u7b2c2~n\u4e2a\u6570\u636e\u4f1a\u5728\u9996\u5730\u5740\u7684\u57fa\u7840\u4e0a\u6309\u4e00\u5b9a\u89c4\u5219\u81ea\u52a8\u5bfb\u5740\u548c\u4f20\u8f93\u3002\u4e0e\u7a81\u53d1\u65b9\u5f0f\u5bf9\u5e94\u7684\u662f\u5355\u5468\u671f\u65b9\u5f0f\uff0c\u5b83\u57281\u4e2a\u603b\u7ebf\u5468\u671f\u53ea\u4f20\u90011\u4e2a\u6570\u636e\u3002\\r\\n- \xb7\u603b\u7ebf\u64cd\u4f5c\u4e0e\u5904\u7406\u5668\u2014\u5b58\u50a8\u5668\u5b50\u7cfb\u7edf\u64cd\u4f5c\u5e76\u884c\u3002\\r\\n- \xb7\u91c7\u7528\u4e2d\u592e\u96c6\u4e2d\u5f0f\u603b\u7ebf\u4ef2\u88c1\u3002\\r\\n- \xb7\u652f\u6301\u5168\u81ea\u52a8\u914d\u7f6e\u3001\u8d44\u6e90\u5206\u914d\uff0cPCI\u5361\u5185\u6709\u8bbe\u5907\u4fe1\u606f\u5bc4\u5b58\u5668\u7ec4\u4e3a\u7cfb\u7edf\u63d0\u4f9b\u5361\u7684\u4fe1\u606f\uff0c\u53ef\u5b9e\u73b0\u5373\u63d2\u5373\u7528\u3002\\r\\n- \xb7PCI\u603b\u7ebf\u89c4\u8303\u72ec\u7acb\u4e8e\u5fae\u5904\u7406\u5668\uff0c\u901a\u7528\u6027\u597d\u3002\\r\\n- \xb7PCI\u8bbe\u5907\u53ef\u4ee5\u5b8c\u5168\u4f5c\u4e3a\u4e3b\u63a7\u8bbe\u5907\u63a7\u5236\u603b\u7ebf\u3002\\r\\n\\r\\n\u56fe2.16\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u57fa\u4e8ePCI\u603b\u7ebf\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u903b\u8f91\u793a\u610f\u56fe\uff0c\u7cfb\u7edf\u7684\u5404\u4e2a\u90e8\u5206\u901a\u8fc7PCI\u603b\u7ebf\u548cPCI-PCI\u6865\u8fde\u63a5\u5728\u4e00\u8d77\u3002CPU\u548cRAM\u901a\u8fc7PCI\u6865\u8fde\u63a5\u5230PCI\u603b\u7ebf0\uff08\u5373\u4e3bPCI\u603b\u7ebf\uff09\uff0c\u800c\u5177\u6709PCI\u63a5\u53e3\u7684\u663e\u5361\u5219\u53ef\u4ee5\u76f4\u63a5\u8fde\u63a5\u5230\u4e3bPCI\u603b\u7ebf\u4e0a\u3002PCI-PCI\u6865\u662f\u4e00\u4e2a\u7279\u6b8a\u7684PCI\u8bbe\u5907\uff0c\u5b83\u8d1f\u8d23\u5c06PCI\u603b\u7ebf0\u548cPCI\u603b\u7ebf1\uff08\u5373\u4ecePCI\u4e3b\u7ebf\uff09\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u901a\u5e38PCI\u603b\u7ebf1\u79f0\u4e3aPCI-PCI\u6865\u7684\u4e0b\u6e38\uff08Downstream\uff09\uff0c\u800cPCI\u603b\u7ebf0\u5219\u79f0\u4e3aPCI-PCI\u6865\u7684\u4e0a\u6e38\uff08Upstream\uff09\u3002\u4e3a\u4e86\u517c\u5bb9\u65e7\u7684ISA\u603b\u7ebf\u6807\u51c6\uff0cPCI\u603b\u7ebf\u8fd8\u53ef\u4ee5\u901a\u8fc7PCI-ISA\u6865\u6765\u8fde\u63a5ISA\u603b\u7ebf\uff0c\u4ece\u800c\u652f\u6301\u4ee5\u524d\u7684ISA\u8bbe\u5907\u3002\\r\\n\\r\\n![image-20250323164722794](./figure/image-20250323164722794.png)\\r\\n\\r\\n\u56fe2.16\u3000\u57fa\u4e8ePCI\u603b\u7ebf\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u903b\u8f91\u793a\u610f\u56fe\\r\\n\\r\\n\u5f53PCI\u5361\u521a\u52a0\u7535\u65f6\uff0c\u5361\u4e0a\u914d\u7f6e\u7a7a\u95f4\u5373\u53ef\u4ee5\u88ab\u8bbf\u95ee\u3002PCI\u914d\u7f6e\u7a7a\u95f4\u4fdd\u5b58\u7740\u8be5\u5361\u5de5\u4f5c\u65f6\u6240\u9700\u7684\u6240\u6709\u4fe1\u606f\uff0c\u5982\u5382\u5bb6\u3001\u5361\u529f\u80fd\u3001\u8d44\u6e90\u8981\u6c42\u3001\u5904\u7406\u80fd\u529b\u3001\u529f\u80fd\u6a21\u5757\u6570\u91cf\u3001\u4e3b\u63a7\u5361\u80fd\u529b\u7b49\u3002\u901a\u8fc7\u5bf9\u8fd9\u4e2a\u7a7a\u95f4\u4fe1\u606f\u7684\u8bfb\u53d6\u4e0e\u7f16\u7a0b\uff0c\u53ef\u5b8c\u6210\u5bf9PCI\u5361\u7684\u914d\u7f6e\u3002\u5982\u56fe2.17\u6240\u793a\uff0cPCI\u914d\u7f6e\u7a7a\u95f4\u5171\u4e3a256\u5b57\u8282\uff0c\u4e3b\u8981\u5305\u62ec\u5982\u4e0b\u4fe1\u606f\u3002\\r\\n\\r\\n- \xb7\u5236\u9020\u5546\u6807\u8bc6\uff08Vendor ID\uff09\uff1a\u7531PCI\u7ec4\u7ec7\u5206\u914d\u7ed9\u5382\u5bb6\u3002\\r\\n- \xb7\u8bbe\u5907\u6807\u8bc6\uff08Device ID\uff09\uff1a\u6309\u4ea7\u54c1\u5206\u7c7b\u7ed9\u672c\u5361\u7684\u7f16\u53f7\u3002\\r\\n- \xb7\u5206\u7c7b\u7801\uff08Class Code\uff09\uff1a\u672c\u5361\u529f\u80fd\u7684\u5206\u7c7b\u7801\uff0c\u5982\u56fe\u5361\u3001\u663e\u793a\u5361\u3001\u89e3\u538b\u5361\u7b49\u3002\xb7\u7533\u8bf7\u5b58\u50a8\u5668\u7a7a\u95f4\uff1aPCI\u5361\u5185\u6709\u5b58\u50a8\u5668\u6216\u4ee5\u5b58\u50a8\u5668\u7f16\u5740\u7684\u5bc4\u5b58\u5668\u548cI/O\u7a7a\u95f4\uff0c\u4e3a\u4f7f\u9a71\u52a8\u7a0b\u5e8f\u548c\u5e94\u7528\u7a0b\u5e8f\u80fd\u8bbf\u95ee\u5b83\u4eec\uff0c\u9700\u7533\u8bf7CPU\u7684\u4e00\u6bb5\u5b58\u50a8\u533a\u57df\u4ee5\u8fdb\u884c\u5b9a\u4f4d\u3002\u914d\u7f6e\u7a7a\u95f4\u7684\u57fa\u5730\u5740\u5bc4\u5b58\u5668\u7528\u4e8e\u6b64\u76ee\u7684\u3002\\r\\n- \xb7\u7533\u8bf7I/O\u7a7a\u95f4\uff1a\u914d\u7f6e\u7a7a\u95f4\u4e2d\u7684\u57fa\u5730\u5740\u5bc4\u5b58\u5668\u7528\u6765\u8fdb\u884c\u7cfb\u7edfI/O\u7a7a\u95f4\u7684\u7533\u8bf7\u3002\\r\\n- \xb7\u4e2d\u65ad\u8d44\u6e90\u7533\u8bf7\uff1a\u914d\u7f6e\u7a7a\u95f4\u4e2d\u7684\u4e2d\u65ad\u5f15\u811a\u548c\u4e2d\u65ad\u7ebf\u7528\u6765\u5411\u7cfb\u7edf\u7533\u8bf7\u4e2d\u65ad\u8d44\u6e90\u3002\u504f\u79fb3Dh\u5904\u4e3a\u4e2d\u65ad\u5f15\u811a\u5bc4\u5b58\u5668\uff0c\u5176\u503c\u8868\u660ePCI\u8bbe\u5907\u4f7f\u7528\u4e86\u54ea\u4e00\u4e2a\u4e2d\u65ad\u5f15\u811a\uff0c\u5bf9\u5e94\u5173\u7cfb\u4e3a1\u2014INTA#\u30012\u2014INTB#\u30013\u2014INTC#\u30014\u2014INTD#\u3002\\r\\n\\r\\n![image-20250323164820583](./figure/image-20250323164820583.png)\\r\\n\\r\\n\u56fe2.17\u3000PCI\u914d\u7f6e\u7a7a\u95f4\\r\\n\\r\\nPCI-E\uff08PCI Express\uff09\u662fIntel\u516c\u53f8\u63d0\u51fa\u7684\u65b0\u4e00\u4ee3\u7684\u603b\u7ebf\u63a5\u53e3\uff0cPCI Express\u91c7\u7528\u4e86\u76ee\u524d\u4e1a\u5185\u6d41\u884c\u7684\u70b9\u5bf9\u70b9\u4e32\u884c\u8fde\u63a5\uff0c\u6bd4\u8d77PCI\u4ee5\u53ca\u66f4\u65e9\u7684\u8ba1\u7b97\u673a\u603b\u7ebf\u7684\u5171\u4eab\u5e76\u884c\u67b6\u6784\uff0c\u6bcf\u4e2a\u8bbe\u5907\u90fd\u6709\u81ea\u5df1\u7684\u4e13\u7528\u8fde\u63a5\uff0c\u91c7\u7528\u4e32\u884c\u65b9\u5f0f\u4f20\u8f93\u6570\u636e\uff0c\u4e0d\u9700\u8981\u5411\u6574\u4e2a\u603b\u7ebf\u8bf7\u6c42\u5e26\u5bbd\uff0c\u5e76\u53ef\u4ee5\u628a\u6570\u636e\u4f20\u8f93\u7387\u63d0\u9ad8\u5230\u4e00\u4e2a\u5f88\u9ad8\u7684\u9891\u7387\uff0c\u8fbe\u5230PCI\u6240\u4e0d\u80fd\u63d0\u4f9b\u7684\u9ad8\u5e26\u5bbd\u3002\\r\\n\\r\\nPCI Express\u5728\u8f6f\u4ef6\u5c42\u9762\u4e0a\u517c\u5bb9\u76ee\u524d\u7684PCI\u6280\u672f\u548c\u8bbe\u5907\uff0c\u652f\u6301PCI\u8bbe\u5907\u548c\u5185\u5b58\u6a21\u7ec4\u7684\u521d\u59cb\u5316\uff0c\u4e5f\u5c31\u662f\u8bf4\u65e0\u987b\u63a8\u5012\u76ee\u524d\u7684\u9a71\u52a8\u7a0b\u5e8f\u3001\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5c31\u53ef\u4ee5\u652f\u6301PCI Express\u8bbe\u5907\u3002\\r\\n\\r\\n# 2.3.7\u3000SD\u548cSDIO\\r\\n\\r\\nSD\uff08Secure Digital\uff09\u662f\u4e00\u79cd\u5173\u4e8eFlash\u5b58\u50a8\u5361\u7684\u6807\u51c6\uff0c\u4e5f\u5c31\u662f\u4e00\u822c\u5e38\u89c1\u7684SD\u8bb0\u5fc6\u5361\uff0c\u5728\u8bbe\u8ba1\u4e0a\u4e0eMMC\uff08Multi-Media Card\uff09\u4fdd\u6301\u4e86\u517c\u5bb9\u3002SDHC\uff08SD High Capacity\uff09\u662f\u5927\u5bb9\u91cfSD\u5361\uff0c\u652f\u6301\u7684\u6700\u5927\u5bb9\u91cf\u4e3a32GB\u30022009\u5e74\u53d1\u5e03\u7684SDXC\uff08SD eXtended Capacity\uff09\u5219\u652f\u6301\u6700\u59272TB\u5927\u5c0f\u7684\u5bb9\u91cf\\r\\n\\r\\nSDIO\uff08Secure Digital Input and Output Card\uff0c\u5b89\u5168\u6570\u5b57\u8f93\u5165\u8f93\u51fa\u5361\uff09\u5728SD\u6807\u51c6\u7684\u57fa\u7840\u4e0a\uff0c\u5b9a\u4e49\u4e86\u9664\u5b58\u50a8\u5361\u4ee5\u5916\u7684\u5916\u8bbe\u63a5\u53e3\u3002SDIO\u4e3b\u8981\u6709\u4e24\u7c7b\u5e94\u7528\u2014\u2014\u53ef\u79fb\u52a8\u548c\u4e0d\u53ef\u79fb\u52a8\u3002\u4e0d\u53ef\u79fb\u52a8\u8bbe\u5907\u9075\u5faa\u76f8\u540c\u7684\u7535\u6c14\u6807\u51c6\uff0c\u4f46\u4e0d\u8981\u6c42\u7b26\u5408\u7269\u7406\u6807\u51c6\u3002\u73b0\u5728\u5df2\u7ecf\u6709\u975e\u5e38\u591a\u7684\u624b\u673a\u6216\u8005\u624b\u6301\u88c5\u7f6e\u90fd\u652f\u6301SDIO\u7684\u529f\u80fd\uff0c\u4ee5\u8fde\u63a5WiFi\u3001\u84dd\u7259\u3001GPS\u7b49\u6a21\u5757\u3002\\r\\n\\r\\n\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u82af\u7247\u5185\u90e8\u96c6\u6210\u7684SD\u63a7\u5236\u5668\u540c\u65f6\u652f\u6301MMC\u3001SD\u5361\uff0c\u53c8\u652f\u6301SDIO\u5361\uff0c\u4f46\u662fSD\u548cSDIO\u7684\u534f\u8bae\u8fd8\u662f\u6709\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff0c\u652f\u6301\u7684\u547d\u4ee4\u4e5f\u4f1a\u6709\u4e0d\u540c\u3002\\r\\n\\r\\nSD/SDIO\u7684\u4f20\u8f93\u6a21\u5f0f\u6709\uff1a\\r\\n\\r\\n- \xb7SPI\u6a21\u5f0f\\r\\n- \xb71\u4f4d\u6a21\u5f0f\\r\\n- \xb74\u4f4d\u6a21\u5f0f\\r\\n\\r\\n\u88682.1\u663e\u793a\u4e86SDIO\u63a5\u53e3\u7684\u5f15\u811a\u5b9a\u4e49\u3002\u5176\u4e2dCLK\u4e3a\u65f6\u949f\u5f15\u811a\uff0c\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u4f20\u8f93\u4e00\u4e2a\u547d\u4ee4\u6216\u6570\u636e\u4f4d\uff1bCMD\u662f\u547d\u4ee4\u5f15\u811a\uff0c\u547d\u4ee4\u5728CMD\u7ebf\u4e0a\u4e32\u884c\u4f20\u8f93\uff0c\u662f\u53cc\u5411\u534a\u53cc\u5de5\u7684\uff08\u547d\u4ee4\u4ece\u4e3b\u673a\u5230\u4ece\u5361\uff0c\u800c\u547d\u4ee4\u7684\u54cd\u5e94\u662f\u4ece\u5361\u53d1\u9001\u5230\u4e3b\u673a\uff09\uff1bDAT[0]~DAT[3]\u4e3a\u6570\u636e\u7ebf\u5f15\u811a\uff1b\u5728SPI\u6a21\u5f0f\u4e2d\uff0c\u7b2c8\u811a\u4f4d\u88ab\u5f53\u6210\u4e2d\u65ad\u4fe1\u53f7\u3002\u56fe2.18\u7ed9\u51fa\u4e86\u4e00\u4e2aSDIO\u5355\u6a21\u5757\u8bfb\u3001\u5199\u7684\u5178\u578b\u65f6\u5e8f\u3002\\r\\n\\r\\n\u88682.1\u3000SDIO\u63a5\u53e3\u5f15\u811a\u5b9a\u4e49\\r\\n\\r\\n![1742719820380](./figure/1742719820380.png)\\r\\n\\r\\n![1742719837200](./figure/1742719837200.png)\\r\\n\\r\\n\u56fe2.18\u3000SDIO\u5355\u6a21\u5757\u8bfb\u3001\u5199\u7684\u5178\u578b\u65f6\u5e8f\\r\\n\\r\\neMMC\uff08Embedded Multi Media Card\uff09\u662f\u5f53\u524d\u79fb\u52a8\u8bbe\u5907\u672c\u5730\u5b58\u50a8\u7684\u4e3b\u6d41\u89e3\u51b3\u65b9\u6848\uff0c\u76ee\u7684\u5728\u4e8e\u7b80\u5316\u624b\u673a\u5b58\u50a8\u5668\u7684\u8bbe\u8ba1\u3002eMMC\u5c31\u662fNAND Flash\u3001\u95ea\u5b58\u63a7\u5236\u82af\u7247\u548c\u6807\u51c6\u63a5\u53e3\u5c01\u88c5\u7684\u96c6\u5408\uff0c\u5b83\u628aNAND\u548c\u63a7\u5236\u82af\u7247\u76f4\u63a5\u5c01\u88c5\u5728\u4e00\u8d77\u6210\u4e3a\u4e00\u4e2a\u591a\u82af\u7247\u5c01\u88c5\uff08Multi-Chip Package\uff0cMCP\uff09\u82af\u7247\u3002eMMC\u652f\u6301DAT[0]~DAT[7]8\u4f4d\u7684\u6570\u636e\u7ebf\u3002\u4e0a\u7535\u6216\u8005\u590d\u4f4d\u540e\uff0c\u9ed8\u8ba4\u5904\u4e8e1\u4f4d\u6a21\u5f0f\uff0c\u53ea\u4f7f\u7528DAT[0]\uff0c\u540e\u7eed\u53ef\u4ee5\u914d\u7f6e\u4e3a4\u4f4d\u6216\u80058\u4f4d\u6a21\u5f0f\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09","description":"\u5185\u6838\u4e2d\u6709\u8bb8\u591a\u5730\u65b9\u8c03\u7528\u7c7b\u4f3cBUG\uff08\uff09\u7684\u8bed\u53e5\uff0c\u5b83\u975e\u5e38\u50cf\u4e00\u4e2a\u5185\u6838\u8fd0\u884c\u65f6\u7684\u65ad\u8a00\uff0c\u610f\u5473\u7740\u672c\u6765\u4e0d\u8be5\u6267\u884c\u5230BUG\uff08\uff09\u8fd9\u6761\u8bed\u53e5\uff0c\u4e00\u65e6\u6267\u884c\u5373\u629b\u51faOops\u3002BUG\uff08\uff09\u7684\u5b9a\u4e49\u4e3a\uff1a","date":"2025-09-15T14:44:14.821Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.35,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"2.3.1\u3000\u4e32\u53e3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.3\u3000\u63a5\u53e3\u4e0e\u603b\u7ebf"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS"}},"content":"\u5185\u6838\u4e2d\u6709\u8bb8\u591a\u5730\u65b9\u8c03\u7528\u7c7b\u4f3cBUG\uff08\uff09\u7684\u8bed\u53e5\uff0c\u5b83\u975e\u5e38\u50cf\u4e00\u4e2a\u5185\u6838\u8fd0\u884c\u65f6\u7684\u65ad\u8a00\uff0c\u610f\u5473\u7740\u672c\u6765\u4e0d\u8be5\u6267\u884c\u5230BUG\uff08\uff09\u8fd9\u6761\u8bed\u53e5\uff0c\u4e00\u65e6\u6267\u884c\u5373\u629b\u51faOops\u3002BUG\uff08\uff09\u7684\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define BUG() do { \\\\\\r\\n       printk(\\"BUG: failure at %s:%d/%s()!\\\\n\\", __FILE__, __LINE__, __func__); \\\\\\r\\n       panic(\\"BUG!\\"); \\\\\\r\\n} while (0)\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684panic\uff08\uff09\u5b9a\u4e49\u5728kernel/panic.c\u4e2d\uff0c\u4f1a\u5bfc\u81f4\u5185\u6838\u5d29\u6e83\uff0c\u5e76\u6253\u5370Oops\u3002\u6bd4\u5982arch/arm/kernel/dma.c\u4e2d\u7684enable_dma\uff08\uff09\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nvoid enable_dma (unsigned int chan)\\r\\n{\\r\\n       dma_t *dma = dma_channel(chan);\\r\\n       if (!dma->lock)\\r\\n              goto free_dma;\\r\\n       if (dma->active == 0) {\\r\\n             dma->active = 1;\\r\\n             dma->d_ops->enable(chan, dma);\\r\\n       }\\r\\n       return;\\r\\nfree_dma:\\r\\n       printk(KERN_ERR \\"dma%d: trying to enable free DMA\\\\n\\", chan);\\r\\n       BUG();\\r\\n}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7684\u542b\u4e49\u662f\uff0c\u5982\u679c\u5728dma->lock\u4e0d\u6210\u7acb\u7684\u60c5\u51b5\u4e0b\uff0c\u9a71\u52a8\u76f4\u63a5\u8c03\u7528\u4e86enable_dma\uff08\uff09\uff0c\u5b9e\u9645\u4e0a\u610f\u5473\u7740\u5185\u6838\u7684\u4e00\u4e2abug\u3002\\r\\n\\r\\nBUG\uff08\uff09\u8fd8\u6709\u4e00\u4e2a\u53d8\u4f53\u53ebBUG_ON\uff08\uff09\uff0c\u5b83\u7684\u5185\u90e8\u4f1a\u5f15\u7528BUG\uff08\uff09\uff0c\u5f62\u5f0f\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define BUG_ON(condition) do { if (unlikely(condition)) BUG(); } while (0)\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8eBUG_ON\uff08\uff09\u800c\u8a00\uff0c\u53ea\u6709\u5f53\u62ec\u53f7\u5185\u7684\u6761\u4ef6\u6210\u7acb\u7684\u65f6\u5019\uff0c\u624d\u629b\u51faOops\u3002\u6bd4\u5982drivers/char/random.c\u4e2d\u7684\u7c7b\u4f3c\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nstatic void push_to_pool(struct work_struct *work)\\r\\n{\\r\\n       struct entropy_store *r = container_of(work, struct entropy_store,\\r\\n                                       push_work);\\r\\n       BUG_ON(!r);\\r\\n        _xfer_secondary_pool(r, random_read_wakeup_bits/8);\\r\\n        trace_push_to_pool(r->name, r->entropy_count >> ENTROPY_SHIFT,\\r\\n                        r->pull->entropy_count >> ENTROPY_SHIFT);\\r\\n}\\r\\n```\\r\\n\\r\\n\u9664\u4e86BUG_ON\uff08\uff09\u5916\uff0c\u5185\u6838\u6709\u4e2a\u7a0d\u5fae\u5f31\u4e00\u4e9bWARN_ON\uff08\uff09\uff0c\u5728\u62ec\u53f7\u4e2d\u7684\u6761\u4ef6\u6210\u7acb\u7684\u65f6\u5019\uff0c\u5185\u6838\u4f1a\u629b\u51fa\u6808\u56de\u6eaf\uff0c\u4f46\u662f\u4e0d\u4f1apanic\uff08\uff09\uff0c\u8fd9\u901a\u5e38\u7528\u4e8e\u5185\u6838\u629b\u51fa\u4e00\u4e2a\u8b66\u544a\uff0c\u6697\u793a\u67d0\u79cd\u4e0d\u592a\u5408\u7406\u7684\u4e8b\u60c5\u53d1\u751f\u4e86\u3002\u5982\u5728kernel/locking/mutex-debug.c\u4e2d\u7684debug_mutex_unlock\uff08\uff09\u51fd\u6570\u53d1\u73b0mutex_unlock\uff08\uff09\u7684\u8c03\u7528\u8005\u548cmutex_lock\uff08\uff09\u7684\u8c03\u7528\u8005\u4e0d\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b\u7684\u65f6\u5019\u6216\u8005mutex\u7684owner\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u4f1a\u629b\u51fa\u8b66\u544a\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\nvoid debug_mutex_unlock(struct mutex *lock)\\r\\n{\\r\\n      if (likely(debug_locks)) {\\r\\n             DEBUG_LOCKS_WARN_ON(lock->magic != lock);\\r\\n             if (!lock->owner)\\r\\n                   DEBUG_LOCKS_WARN_ON(!lock->owner);\\r\\n             else\\r\\n                   DEBUG_LOCKS_WARN_ON(lock->owner != current);\\r\\n             DEBUG_LOCKS_WARN_ON(!lock->wait_list.prev && !lock->wait_list.next);\\r\\n             mutex_clear_owner(lock);\\r\\n     }\\r\\n}\\r\\n```\\r\\n\\r\\n\u6709\u65f6\u5019\uff0cWARN_ON\uff08\uff09\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u8c03\u8bd5\u6280\u5de7\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u8fdb\u5230\u5185\u6838\u67d0\u4e2a\u51fd\u6570\u540e\uff0c\u4e0d\u77e5\u9053\u8fd9\u4e2a\u51fd\u6570\u662f\u600e\u4e48\u4e00\u7ea7\u4e00\u7ea7\u88ab\u8c03\u7528\u8fdb\u6765\u7684\uff0c\u90a3\u53ef\u4ee5\u5728\u8be5\u51fd\u6570\u4e2d\u52a0\u5165\u4e00\u4e2aWARN_ON\uff081\uff09\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS","description":"Linux\u5185\u6838\u7684PM QoS\u7cfb\u7edf\u9488\u5bf9\u5185\u6838\u548c\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u5957\u63a5\u53e3\uff0c\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u8bbe\u5b9a\u81ea\u8eab\u5bf9\u6027\u80fd\u7684\u671f\u671b\u3002\u4e00\u7c7b\u662f\u7cfb\u7edf\u7ea7\u7684\u9700\u6c42\uff0c\u901a\u8fc7cpudmalatency\u3001networklatency\u548cnetworkthroughput\u8fd9\u4e9b\u53c2\u6570\u6765\u8bbe\u5b9a\uff1b\u53e6\u4e00\u7c7b\u662f\u5355\u4e2a\u8bbe\u5907\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u7684\u6027\u80fd\u9700\u6c42\u53d1\u8d77per-device\u7684PM QoS\u8bf7\u6c42\u3002","date":"2025-09-15T14:44:14.817Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.515,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.7\u3000BUG_ON\uff08\u200b\uff09\u548cWARN_ON\uff08\u200b\uff09"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c"}},"content":"Linux\u5185\u6838\u7684PM QoS\u7cfb\u7edf\u9488\u5bf9\u5185\u6838\u548c\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u5957\u63a5\u53e3\uff0c\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u8bbe\u5b9a\u81ea\u8eab\u5bf9\u6027\u80fd\u7684\u671f\u671b\u3002\u4e00\u7c7b\u662f\u7cfb\u7edf\u7ea7\u7684\u9700\u6c42\uff0c\u901a\u8fc7cpu_dma_latency\u3001network_latency\u548cnetwork_throughput\u8fd9\u4e9b\u53c2\u6570\u6765\u8bbe\u5b9a\uff1b\u53e6\u4e00\u7c7b\u662f\u5355\u4e2a\u8bbe\u5907\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u7684\u6027\u80fd\u9700\u6c42\u53d1\u8d77per-device\u7684PM QoS\u8bf7\u6c42\u3002\\r\\n\\r\\n\u5728\u5185\u6838\u7a7a\u95f4\uff0c\u901a\u8fc7pm_qos_add_request\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u6ce8\u518cPM QoS\u8bf7\u6c42\uff1a\\r\\n\\r\\n```\\r\\nvoid pm_qos_add_request(struct pm_qos_request *req,\\r\\nint pm_qos_class, s32 value);\\r\\n```\\r\\n\\r\\n\u901a\u8fc7pm_qos_update_request\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u66f4\u65b0\u5df2\u6ce8\u518c\u7684PM QoS\u8bf7\u6c42\uff1a\\r\\n\\r\\n```\\r\\nvoid pm_qos_update_request(struct pm_qos_request *req,\\r\\n                      s32 new_value);\\r\\nvoid pm_qos_update_request_timeout(struct pm_qos_request *req, s32 new_value,\\r\\nunsigned long timeout_us);\\r\\n```\\r\\n\\r\\n\u901a\u8fc7pm_qos_remove_request\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u5220\u9664\u5df2\u6ce8\u518c\u7684PM QoS\u8bf7\u6c42\uff1a\\r\\n\\r\\n```\\r\\nvoid pm_qos_remove_request(struct pm_qos_request *req);\\r\\n```\\r\\n\\r\\n\u8b6c\u5982\u5728drivers/media/platform/via-camera.c\u8fd9\u4e2a\u6444\u50cf\u5934\u9a71\u52a8\u4e2d\uff0c\u5f53\u6444\u50cf\u5934\u5f00\u542f\u540e\uff0c\u901a\u8fc7\u5982\u4e0b\u8bed\u53e5\u53ef\u4ee5\u963b\u6b62CPU\u8fdb\u5165C3\u7ea7\u522b\u7684\u6df1\u5ea6Idle\uff1a\\r\\n\\r\\n```\\r\\nstatic int viacam_streamon(struct file *filp, void *priv, enum v4l2_buf_type t)\\r\\n{\\r\\n    \u2026\\r\\n    pm_qos_add_request(&cam->qos_request, PM_QOS_CPU_DMA_LATENCY, 50);\\r\\n    \u2026\\r\\n}\\r\\n```\\r\\n\\r\\n\u8fd9\u662f\u56e0\u4e3a\uff0c\u5728CPUIdle\u5b50\u7cfb\u7edf\u4e2d\uff0c\u4f1a\u6839\u636ePM_QOS_CPU_DMA_LATENCY\u8bf7\u6c42\u7684\u60c5\u51b5\u9009\u62e9\u5408\u9002\u7684C\u72b6\u6001\uff0c\u5982drivers/cpuidle/governors/ladder.c\u4e2d\u7684ladder_select_state\uff08\uff09\u5c31\u4f1a\u5224\u65ad\u76ee\u6807C\u72b6\u6001\u7684exit_latency\u4e0eQoS\u8981\u6c42\u7684\u5173\u7cfb\uff0c\u5982\u4ee3\u7801\u6e05\u535519.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.11\u3000CPUIdle LADDER governor\u5bf9QoS\u7684\u5224\u65ad\\r\\n\\r\\n```\\r\\n 1static int ladder_select_state(struct cpuidle_driver *drv,\\r\\n 2                          struct cpuidle_device *dev)\\r\\n 3{\\r\\n 4      \u2026\\r\\n 5      int latency_req = pm_qos_request(PM_QOS_CPU_DMA_LATENCY);\\r\\n 6\\r\\n 7      \u2026\\r\\n 8\\r\\n 9      /* consider promotion */\\r\\n10      if (last_idx < drv->state_count - 1 &&\\r\\n11         !drv->states[last_idx + 1].disabled &&\\r\\n12         !dev->states_usage[last_idx + 1].disable &&\\r\\n13         last_residency > last_state->threshold.promotion_time &&\\r\\n14         drv->states[last_idx + 1].exit_latency <= latency_req) {\\r\\n15            last_state->stats.promotion_count++;\\r\\n16            last_state->stats.demotion_count = 0;\\r\\n17            if(last_state->stats.promotion_count>=\\r\\n18             last_state->threshold.promotion_count) {\\r\\n19                  ladder_do_selection(ldev, last_idx, last_idx + 1);\\r\\n20                  return last_idx + 1;\\r\\n21            }\\r\\n22      }\\r\\n23      \u2026\\r\\n24}\\r\\n```\\r\\n\\r\\nLADDER\u5728\u9009\u62e9\u662f\u5426\u8fdb\u5165\u66f4\u6df1\u5c42\u6b21\u7684C\u72b6\u6001\u65f6\uff0c\u4f1a\u6bd4\u8f83C\u72b6\u6001\u7684exit_latency\u8981\u5c0f\u4e8e\u901a\u8fc7pm_qos_request\uff08PM_QOS_CPU_DMA_LATENCY\uff09\u5f97\u5230\u7684PM QoS\u8bf7\u6c42\u7684\u5ef6\u8fdf\uff0c\u89c1\u4ee3\u7801\u6e05\u535519.11\u7684\u7b2c14\u884c\u3002\\r\\n\\r\\n\u540c\u6837\u7684\u903b\u8f91\u4e5f\u51fa\u73b0\u4e8edrivers/cpuidle/governors/menu.c\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535519.12\u7684\u7b2c18~19\u884c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.12\u3000CPUIdle MENU governor\u5bf9QoS\u7684\u5224\u65ad\\r\\n\\r\\n```\\r\\n 1static int menu_select(struct cpuidle_driver *drv, struct cpuidle_device *dev)\\r\\n 2{\\r\\n 3       struct menu_device *data = &__get_cpu_var(menu_devices);\\r\\n 4       int latency_req = pm_qos_request(PM_QOS_CPU_DMA_LATENCY);\\r\\n 5       \u2026\\r\\n 6       /*\\r\\n 7        * Find the idle state with the lowest power while satisfying\\r\\n 8        * our constraints.\\r\\n 9        */\\r\\n10       for (i = CPUIDLE_DRIVER_STATE_START; i < drv->state_count; i++) {\\r\\n11              struct cpuidle_state *s = &drv->states[i];\\r\\n12              struct cpuidle_state_usage *su = &dev->states_usage[i];\\r\\n13\\r\\n14              if (s->disabled || su->disable)\\r\\n15                     continue;\\r\\n16              if (s->target_residency > data->predicted_us)\\r\\n17                     continue;\\r\\n18              if ( s->exit_latency > latency_req)\\r\\n19                      continue;\\r\\n20              if (s->exit_latency * multiplier > data->predicted_us)\\r\\n21                     continue;\\r\\n22\\r\\n23              if (s->power_usage < power_usage) {\\r\\n24                     power_usage = s->power_usage;\\r\\n25                     data->last_state_idx = i;\\r\\n26                     data->exit_us = s->exit_latency;\\r\\n27              }\\r\\n28       }\\r\\n29\\r\\n30       return data->last_state_idx;\\r\\n31}\\r\\n```\\r\\n\\r\\n\u8fd8\u662f\u56de\u5230drivers/media/platform/via-camera.c\u4e2d\uff0c\u5f53\u6444\u50cf\u5934\u5173\u95ed\u540e\uff0c\u5b83\u4f1a\u901a\u8fc7\u5982\u4e0b\u8bed\u53e5\u544a\u77e5\u4e0a\u8ff0\u4ee3\u7801\u5bf9PM_QOS_CPU_DMA_LATENCY\u7684\u6027\u80fd\u8981\u6c42\u53d6\u6d88\uff1a\\r\\n\\r\\n```\\r\\nstatic int viacam_streamon(struct file *filp, void *priv, enum v4l2_buf_type t)\\r\\n{\\r\\n    \u2026\\r\\n    pm_qos_remove_request(&cam->qos_request);\\r\\n    \u2026\\r\\n}\\r\\n```\\r\\n\\r\\n\u7c7b\u4f3c\u7684\u5728\u8bbe\u5907\u9a71\u52a8\u4e2d\u7533\u8bf7QoS\u7279\u6027\u7684\u4f8b\u5b50\u8fd8\u5305\u62ecdrivers/net/wireless/ipw2x00/ipw2100.c\u3001drivers/tty/serial/omap-serial.c\u3001drivers/net/ethernet/intel/e1000e/netdev.c\u7b49\u3002\\r\\n\\r\\n\u5e94\u7528\u7a0b\u5e8f\u5219\u53ef\u4ee5\u901a\u8fc7\u5411/dev/cpu_dma_latency\u548c/dev/network_latency\u8fd9\u6837\u7684\u8bbe\u5907\u8282\u70b9\u5199\u5165\u503c\u6765\u53d1\u8d77QoS\u7684\u6027\u80fd\u8bf7\u6c42\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c","description":"I2 C\u63a7\u5236\u5668\u6240\u5728\u9a71\u52a8\u7684platformdriver\u4e0earch/arm/mach-xxx\u4e2d\u7684platformdevice\uff08\u6216\u8005\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\uff09\u901a\u8fc7platform\u603b\u7ebf\u7684match\uff08\uff09\u51fd\u6570\u5339\u914d\u5bfc\u81f4platformdriver.probe\uff08\uff09\u6267\u884c\uff0c\u4ece\u800c\u5b8c\u6210I2 C\u63a7\u5236\u5668\u7684\u6ce8\u518c\uff1b\u800cI2 C\u4e0a\u9762\u6302\u7684\u89e6\u6478\u5c4f\u4f9d\u9644\u7684i2cdriver\u4e0earch/arm/mach-xxx\u4e2d\u7684i2cboardinfo\u6307\u5411\u7684\u8bbe\u5907\uff08\u6216\u8005\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\uff09\u901a\u8fc7I2 C\u603b\u7ebf\u7684match\uff08\uff09\u51fd\u6570\u5339\u914d\u5bfc\u81f4i2c_driver.probe\uff08\uff09\u6267\u884c\uff0c\u4ece\u800c\u4f7f\u89e6\u6478\u5c4f\u5c55\u5f00\u3002","date":"2025-09-15T14:44:14.805Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.955,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.7\u3000PM QoS"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9"}},"content":"I2 C\u63a7\u5236\u5668\u6240\u5728\u9a71\u52a8\u7684platform_driver\u4e0earch/arm/mach-xxx\u4e2d\u7684platform_device\uff08\u6216\u8005\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\uff09\u901a\u8fc7platform\u603b\u7ebf\u7684match\uff08\uff09\u51fd\u6570\u5339\u914d\u5bfc\u81f4platform_driver.probe\uff08\uff09\u6267\u884c\uff0c\u4ece\u800c\u5b8c\u6210I2 C\u63a7\u5236\u5668\u7684\u6ce8\u518c\uff1b\u800cI2 C\u4e0a\u9762\u6302\u7684\u89e6\u6478\u5c4f\u4f9d\u9644\u7684i2c_driver\u4e0earch/arm/mach-xxx\u4e2d\u7684i2c_board_info\u6307\u5411\u7684\u8bbe\u5907\uff08\u6216\u8005\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\uff09\u901a\u8fc7I2 C\u603b\u7ebf\u7684match\uff08\uff09\u51fd\u6570\u5339\u914d\u5bfc\u81f4i2c_driver.probe\uff08\uff09\u6267\u884c\uff0c\u4ece\u800c\u4f7f\u89e6\u6478\u5c4f\u5c55\u5f00\u3002\\r\\n\\r\\n\u56fe17.1\u865a\u7ebf\u4e0a\u65b9\u90e8\u5206\u662fi2c_adapater\u773c\u91cc\u7684Linux\u4e16\u754c\uff1b\u4e0b\u65b9\u90e8\u5206\u662fi2c_client\u773c\u91cc\u7684Linux\u4e16\u754c\u3002\u5176\u5b9e\uff0cLinux\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8bbe\u5907\u901a\u8fc7\u5b83\u4f9d\u9644\u7684\u603b\u7ebf\u88ab\u679a\u4e3e\u51fa\u6765\uff0c\u5c3d\u7ba1\u5b83\u81ea\u8eab\u53ef\u80fd\u7ed9\u522b\u4eba\u63d0\u4f9b\u603b\u7ebf\u3002\\r\\n\\r\\n![1745505905169](./figure/1745505905169.png)\\r\\n\\r\\n\u56fe17.1\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9","description":"Linux 2.6\u5185\u6838\u662fLinux\u5f00\u53d1\u8005\u7fa4\u843d\u4e00\u4e2a\u5bc4\u4e88\u539a\u671b\u7684\u7248\u672c\uff0c\u4ece2003\u5e7412\u6708\u76f4\u81f32011\u5e747\u6708\uff0c\u5185\u6838\u91cd\u65b0\u8fdb\u884c\u4e86\u7248\u672c\u7684\u7f16\u53f7\uff0c\u4ece\u800c\u8fc7\u6e21\u5230Linux 3.x\u7248\u672c\u76f4\u5230\u6210\u4e66\u65f6\u7684Linux 4.0-rc1\u3002","date":"2025-09-15T14:44:14.805Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":8.59,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/17.2\u3000I2 C\u4e3b\u673a\u548c\u5916\u8bbe\u773c\u91cc\u7684Linux\u4e16\u754c"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784"}},"content":"Linux 2.6\u5185\u6838\u662fLinux\u5f00\u53d1\u8005\u7fa4\u843d\u4e00\u4e2a\u5bc4\u4e88\u539a\u671b\u7684\u7248\u672c\uff0c\u4ece2003\u5e7412\u6708\u76f4\u81f32011\u5e747\u6708\uff0c\u5185\u6838\u91cd\u65b0\u8fdb\u884c\u4e86\u7248\u672c\u7684\u7f16\u53f7\uff0c\u4ece\u800c\u8fc7\u6e21\u5230Linux 3.x\u7248\u672c\u76f4\u5230\u6210\u4e66\u65f6\u7684Linux 4.0-rc1\u3002\\r\\n\\r\\nLinux 2.6\u76f8\u5bf9\u4e8eLinux 2.4\u6709\u76f8\u5f53\u5927\u7684\u6539\u8fdb\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u3002\\r\\n\\r\\n# 1.\u65b0\u7684\u8c03\u5ea6\u5668\\r\\n\\r\\nLinux 2.6\u4ee5\u540e\u7248\u672c\u7684Linux\u5185\u6838\u4f7f\u7528\u4e86\u65b0\u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5b83\u5728\u9ad8\u8d1f\u8f7d\u7684\u60c5\u51b5\u4e0b\u6709\u6781\u5176\u51fa\u8272\u7684\u6027\u80fd\uff0c\u5e76\u4e14\u5f53\u6709\u5f88\u591a\u5904\u7406\u5668\u65f6\u4e5f\u53ef\u4ee5\u5f88\u597d\u5730\u6269\u5c55\u3002\u5728Linux\u5185\u68382.6\u7684\u65e9\u671f\u91c7\u7528\u4e86O\uff081\uff09\u7b97\u6cd5\uff0c\u4e4b\u540e\u8f6c\u79fb\u5230CFS\uff08Completely Fair Scheduler\uff0c\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\uff09\u7b97\u6cd5\u3002\u5728Linux 3.14\u4e2d\uff0c\u4e5f\u589e\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u8c03\u5ea6\u7c7b\uff1aSCHED_DEADLINE\uff0c\u5b83\u5b9e\u73b0\u4e86EDF\uff08Earliest Deadline First\uff0c\u6700\u65e9\u622a\u6b62\u671f\u9650\u4f18\u5148\uff09\u8c03\u5ea6\u7b97\u6cd5\u3002\\r\\n\\r\\n# 2.\u5185\u6838\u62a2\u5360\\r\\n\\r\\n\u5728Linux 2.6\u4ee5\u540e\u7248\u672c\u7684Linux\u5185\u6838\u4e2d\uff0c\u4e00\u4e2a\u5185\u6838\u4efb\u52a1\u53ef\u4ee5\u88ab\u62a2\u5360\uff0c\u4ece\u800c\u63d0\u9ad8\u7cfb\u7edf\u7684\u5b9e\u65f6\u6027\u3002\u8fd9\u6837\u505a\u6700\u4e3b\u8981\u7684\u4f18\u52bf\u5728\u4e8e\uff0c\u53ef\u4ee5\u6781\u5927\u5730\u589e\u5f3a\u7cfb\u7edf\u7684\u7528\u6237\u4ea4\u4e92\u6027\uff0c\u7528\u6237\u5c06\u4f1a\u89c9\u5f97\u9f20\u6807\u5355\u51fb\u548c\u51fb\u952e\u7684\u4e8b\u4ef6\u5f97\u5230\u4e86\u66f4\u5feb\u901f\u7684\u54cd\u5e94\u3002Linux 2.6\u4ee5\u540e\u7684\u5185\u6838\u7248\u672c\u8fd8\u662f\u5b58\u5728\u4e00\u4e9b\u4e0d\u53ef\u62a2\u5360\u7684\u533a\u95f4\uff0c\u5982\u4e2d\u65ad\u4e0a\u4e0b\u6587\u3001\u8f6f\u4e2d\u65ad\u4e0a\u4e0b\u6587\u548c\u81ea\u65cb\u9501\u9501\u4f4f\u7684\u533a\u95f4\uff0c\u5982\u679c\u7ed9Linux\u5185\u6838\u6253\u4e0aRT-Preempt\u8865\u4e01\uff0c\u5219\u4e2d\u65ad\u548c\u8f6f\u4e2d\u65ad\u90fd\u88ab\u7ebf\u7a0b\u5316\u4e86\uff0c\u81ea\u65cb\u9501\u4e5f\u88ab\u4e92\u65a5\u4f53\u66ff\u6362\uff0cLinux\u5185\u6838\u53d8\u5f97\u80fd\u652f\u6301\u786c\u5b9e\u65f6\u3002\\r\\n\\r\\n\u5982\u56fe3.2\u6240\u793a\uff0c\u5de6\u4fa7\u662fLinux 2.4\uff0c\u53f3\u4fa7\u662fLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u3002\u5728Linux 2.4\u7684\u5185\u6838\u4e2d\uff0c\u5728IRQ1\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5524\u9192RT\uff08\u5b9e\u65f6\uff09\u4efb\u52a1\u540e\uff0c\u5fc5\u987b\u8981\u7b49\u5f85\u524d\u9762\u4e00\u4e2aNormal\uff08\u666e\u901a\uff09\u4efb\u52a1\u7684\u7cfb\u7edf\u8c03\u7528\u5b8c\u6210\uff0c\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u7684\u65f6\u5019\uff0cRT\u4efb\u52a1\u624d\u80fd\u5207\u5165\uff1b\u800c\u5728Linux 2.6\u5185\u6838\u4e2d\uff0cNormal\u4efb\u52a1\u7684\u5173\u952e\u90e8\u5206\uff08\u5982\u81ea\u65cb\u9501\uff09\u7ed3\u675f\u7684\u65f6\u5019\uff0cRT\u4efb\u52a1\u5c31\u4ece\u5185\u6838\u5207\u5165\u4e86\u3002\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0cLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u4ecd\u7136\u5b58\u5728\u4e2d\u65ad\u3001\u8f6f\u4e2d\u65ad\u3001\u81ea\u65cb\u9501\u7b49\u539f\u5b50\u4e0a\u4e0b\u6587\u8fdb\u7a0b\u65e0\u6cd5\u62a2\u5360\u6267\u884c\u7684\u60c5\u51b5\uff0c\u8fd9\u662fLinux\u5185\u6838\u672c\u8eab\u53ea\u63d0\u4f9b\u8f6f\u5b9e\u65f6\u80fd\u529b\u7684\u539f\u56e0\u3002\\r\\n\\r\\n![image-20250323213848102](./figure/image-20250323213848102.png)\\r\\n\\r\\n\u56fe3.2\u3000Linux 2.4\u548c2.6\u4ee5\u540e\u7684\u5185\u6838\u5728\u62a2\u5360\u4e0a\u7684\u533a\u522b\\r\\n\\r\\n# 3.\u6539\u8fdb\u7684\u7ebf\u7a0b\u6a21\u578b\\r\\n\\r\\nLinux 2.6\u4ee5\u540e\u7248\u672c\u4e2d\u7684\u7ebf\u7a0b\u91c7\u7528NPTL\uff08Native POSIX Thread Library\uff0c\u672c\u5730POSIX\u7ebf\u7a0b\u5e93\uff09\u6a21\u578b\uff0c\u64cd\u4f5c\u901f\u5ea6\u5f97\u4ee5\u6781\u5927\u63d0\u9ad8\uff0c\u76f8\u6bd4\u4e8eLinux 2.4\u5185\u6838\u65f6\u4ee3\u7684LinuxThreads\u6a21\u578b\uff0c\u5b83\u4e5f\u66f4\u52a0\u9075\u5faaPOSIX\u89c4\u8303\u7684\u8981\u6c42\u3002NPTL\u6ca1\u6709\u4f7f\u7528LinuxThreads\u6a21\u578b\u4e2d\u91c7\u7528\u7684\u7ba1\u7406\u7ebf\u7a0b\uff0c\u5185\u6838\u672c\u8eab\u4e5f\u589e\u52a0\u4e86FUTEX\uff08Fast Userspace Mutex\uff0c\u5feb\u901f\u7528\u6237\u6001\u4e92\u65a5\u4f53\uff09\uff0c\u4ece\u800c\u51cf\u5c0f\u591a\u7ebf\u7a0b\u7684\u901a\u4fe1\u5f00\u9500\u3002\\r\\n\\r\\n# 4.\u865a\u62df\u5185\u5b58\u7684\u53d8\u5316\\r\\n\\r\\n\u4ece\u865a\u62df\u5185\u5b58\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u65b0\u5185\u6838\u878d\u5408\u4e86r-map\uff08\u53cd\u5411\u6620\u5c04\uff09\u6280\u672f\uff0c\u663e\u8457\u6539\u5584\u865a\u62df\u5185\u5b58\u5728\u4e00\u5b9a\u5927\u5c0f\u8d1f\u8f7d\u4e0b\u7684\u6027\u80fd\u3002\u5728Linux 2.4\u4e2d\uff0c\u8981\u56de\u6536\u9875\u65f6\uff0c\u5185\u6838\u7684\u505a\u6cd5\u662f\u904d\u5386\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u6240\u6709PTE\u4ee5\u5224\u65ad\u8be5PTE\u662f\u5426\u4e0e\u8be5\u9875\u5efa\u7acb\u4e86\u6620\u5c04\uff0c\u5982\u679c\u5efa\u7acb\u4e86\uff0c\u5219\u53d6\u6d88\u8be5\u6620\u5c04\uff0c\u6700\u540e\u65e0PTE\u4e0e\u8be5\u9875\u76f8\u5173\u8054\u540e\u624d\u56de\u6536\u8be5\u9875\u3002\u5728Linux 2.6\u540e\uff0c\u5219\u5efa\u7acb\u53cd\u5411\u6620\u5c04\uff0c\u53ef\u4ee5\u901a\u8fc7\u9875\u7ed3\u6784\u4f53\u5feb\u901f\u5bfb\u627e\u5230\u9875\u9762\u7684\u6620\u5c04\u3002\\r\\n\\r\\n# 5.\u6587\u4ef6\u7cfb\u7edf\\r\\n\\r\\nLinux 2.6\u7248\u5185\u6838\u589e\u52a0\u4e86\u5bf9\u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf\u529f\u80fd\u7684\u652f\u6301\uff0c\u89e3\u51b3\u4e86Linux 2.4\u7248\u672c\u5728\u8fd9\u65b9\u9762\u7684\u4e0d\u8db3\u3002Linux 2.6\u7248\u5185\u6838\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u5173\u952e\u53d8\u5316\u8fd8\u5305\u62ec\u5bf9\u6269\u5c55\u5c5e\u6027\u53caPOSIX\u6807\u51c6\u8bbf\u95ee\u63a7\u5236\u7684\u652f\u6301\u3002ext2/ext3/ext4\u4f5c\u4e3a\u5927\u591a\u6570Linux\u7cfb\u7edf\u9ed8\u8ba4\u5b89\u88c5\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5728Linux 2.6\u7248\u5185\u6838\u4e2d\u589e\u52a0\u4e86\u5bf9\u6269\u5c55\u5c5e\u6027\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u7ed9\u6307\u5b9a\u7684\u6587\u4ef6\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5d4c\u5165\u5143\u6570\u636e\u3002\\r\\n\\r\\n\u5728\u6587\u4ef6\u7cfb\u7edf\u65b9\u9762\uff0c\u5f53\u524d\u7684\u7814\u7a76\u70ed\u70b9\u662f\u57fa\u4e8eB\u6811\u7684Btrfs\uff0cBtrfs\u79f0\u4e3a\u662f\u4e0b\u4e00\u4ee3Linux\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u5728\u6269\u5c55\u6027\u3001\u6570\u636e\u4e00\u81f4\u6027\u3001\u591a\u8bbe\u5907\u7ba1\u7406\u548c\u9488\u5bf9SSD\u7684\u4f18\u5316\u7b49\u65b9\u9762\u90fd\u4f18\u4e8eext4\\r\\n\\r\\n# 6.\u97f3\u9891\\r\\n\\r\\n\u9ad8\u7ea7Linux\u97f3\u9891\u4f53\u7cfb\u7ed3\u6784\uff08Advanced Linux Sound Architecture\uff0cALSA\uff09\u53d6\u4ee3\u4e86\u7f3a\u9677\u5f88\u591a\u65e7\u7684OSS\uff08Open Sound System\uff09\u3002ALSA\u652f\u6301USB\u97f3\u9891\u548cMIDI\u8bbe\u5907\uff0c\u5e76\u652f\u6301\u5168\u53cc\u5de5\u91cd\u653e\u7b49\u529f\u80fd\u3002\\r\\n\\r\\n# 7.\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u6a21\u578b\\r\\n\\r\\n\u5728Linux 2.6\u4ee5\u540e\u7684\u5185\u6838\u4e2d\uff0c\u603b\u7ebf\u3001\u8bbe\u5907\u3001\u9a71\u52a8\u4e09\u8005\u4e4b\u95f4\u56e0\u4e3a\u4e00\u5b9a\u7684\u8054\u7cfb\u6027\u800c\u5b9e\u73b0\u5bf9\u8bbe\u5907\u7684\u63a7\u5236\u3002\u603b\u7ebf\u662f\u4e09\u8005\u8054\u7cfb\u8d77\u6765\u7684\u57fa\u7840\uff0c\u901a\u8fc7\u4e00\u79cd\u603b\u7ebf\u7c7b\u578b\uff0c\u5c06\u8bbe\u5907\u548c\u9a71\u52a8\u8054\u7cfb\u8d77\u6765\u3002\u603b\u7ebf\u7c7b\u578b\u4e2d\u7684match\uff08\uff09\u51fd\u6570\u7528\u6765\u5339\u914d\u8bbe\u5907\u548c\u9a71\u52a8\uff0c\u5f53\u5339\u914d\u64cd\u4f5c\u5b8c\u6210\u4e4b\u540e\u5c31\u4f1a\u6267\u884c\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684probe\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n# 8.\u7535\u6e90\u7ba1\u7406\\r\\n\\r\\n\u652f\u6301\u9ad8\u7ea7\u914d\u7f6e\u548c\u7535\u6e90\u63a5\u53e3\uff08Advanced Configuration and Power Interface\uff0cACPI\uff09\uff0c\u7528\u4e8e\u8c03\u6574CPU\u5728\u4e0d\u540c\u7684\u8d1f\u8f7d\u4e0b\u5de5\u4f5c\u4e8e\u4e0d\u540c\u7684\u65f6\u949f\u9891\u7387\u4ee5\u964d\u4f4e\u529f\u8017\u3002\u76ee\u524d\uff0cLinux\u5185\u6838\u7684\u7535\u6e90\u7ba1\u7406\uff08PM\uff09\u76f8\u5bf9\u6bd4\u8f83\u5b8c\u5584\u4e86\uff0c\u5305\u62ecCPUFreq\u3001CPUIdle\u3001CPU\u70ed\u63d2\u62d4\u3001\u8bbe\u5907\u8fd0\u884c\u65f6\uff08runtime\uff09PM\u3001Linux\u7cfb\u7edf\u6302\u8d77\u5230\u5185\u5b58\u548c\u6302\u8d77\u5230\u786c\u76d8\u7b49\u5168\u5957\u7684\u652f\u6301\uff0c\u5728ARM\u4e0a\u7684\u652f\u6301\u4e5f\u8f83\u5b8c\u5907\u3002\\r\\n\\r\\n# 9.\u8054\u7f51\u548cIPSec\\r\\n\\r\\nLinux 2.6\u5185\u6838\u4e2d\u52a0\u5165\u4e86\u5bf9IPSec\u7684\u652f\u6301\uff0c\u5220\u9664\u4e86\u539f\u6765\u5185\u6838\u5185\u7f6e\u7684HTTP\u670d\u52a1\u5668khttpd\uff0c\u52a0\u5165\u4e86\u5bf9\u65b0\u7684NFSv4\uff08\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff09\u5ba2\u6237\u673a/\u670d\u52a1\u5668\u7684\u652f\u6301\uff0c\u5e76\u6539\u8fdb\u4e86\u5bf9IPv6\u7684\u652f\u6301\u3002\\r\\n\\r\\n# 10.\u7528\u6237\u754c\u9762\u5c42\\r\\n\\r\\nLinux 2.6\u5185\u6838\u91cd\u5199\u4e86\u5e27\u7f13\u51b2/\u63a7\u5236\u53f0\u5c42\uff0c\u4eba\u673a\u754c\u9762\u5c42\u8fd8\u52a0\u5165\u4e86\u5bf9\u8fd1\u4e4e\u6240\u6709\u63a5\u53e3\u8bbe\u5907\u7684\u652f\u6301\uff08\u4ece\u89e6\u6478\u5c4f\u5230\u76f2\u4eba\u7528\u7684\u8bbe\u5907\u548c\u5404\u79cd\u5404\u6837\u7684\u9f20\u6807\uff09\u3002\\r\\n\\r\\n\u5728\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u65b9\u9762\uff0cLinux 2.6\u76f8\u5bf9\u4e8eLinux 2.4\u4e5f\u6709\u8f83\u5927\u7684\u6539\u52a8\uff0c\u8fd9\u4e3b\u8981\u8868\u73b0\u5728\u5185\u6838API\u4e2d\u589e\u52a0\u4e86\u4e0d\u5c11\u65b0\u529f\u80fd\uff08\u4f8b\u5982\u5185\u5b58\u6c60\uff09\u3001sysfs\u6587\u4ef6\u7cfb\u7edf\u3001\u5185\u6838\u6a21\u5757\u4ece.o\u53d8\u4e3a.ko\u3001\u9a71\u52a8\u6a21\u5757\u7f16\u8bd1\u65b9\u5f0f\u3001\u6a21\u5757\u4f7f\u7528\u8ba1\u6570\u3001\u6a21\u5757\u52a0\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u7684\u5b9a\u4e49\u7b49\u65b9\u9762\u3002\\r\\n\\r\\n# 11.Linux 3.0\u540eARM\u67b6\u6784\u7684\u53d8\u66f4\\r\\n\\r\\nLinus Torvalds\u57282011\u5e743\u670817\u65e5\u7684ARM Linux\u90ae\u4ef6\u5217\u8868\u4e2d\u5ba3\u79f0\u201cthis whole ARM thing is a f*cking pain in the ass\u201d\uff0c\u8fd9\u5f15\u53d1\u4e86ARM Linux\u793e\u533a\u7684\u5730\u9707\uff0c\u968f\u540eARM\u793e\u533a\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u91cd\u5927\u4fee\u6b63\u3002\u793e\u533a\u5fc5\u987b\u6539\u53d8\u8fd9\u79cd\u5c40\u9762\uff0c\u4e8e\u662fPowerPC\u7b49\u5176\u4ed6\u4f53\u7cfb\u7ed3\u6784\u4e0b\u5df2\u7ecf\u4f7f\u7528\u7684FDT\uff08Flattened Device Tree\uff09\u8fdb\u5165\u5230\u4e86ARM\u793e\u533a\u7684\u89c6\u91ce\u3002\\r\\n\\r\\n\u6b64\u5916\uff0cARM Linux\u7684\u4ee3\u7801\u5728\u65f6\u949f\u3001DMA\u3001pinmux\u3001\u8ba1\u65f6\u5668\u523b\u5ea6\u7b49\u8bf8\u591a\u65b9\u9762\u90fd\u8fdb\u884c\u4e86\u4f18\u5316\u548c\u8c03\u6574\uff0c\u4e5f\u5220\u9664\u4e86arch/arm/mach-xxx/include/mach\u5934\u6587\u4ef6\u76ee\u5f55\uff0c\u4ee5\u81f3\u4e8eLinux 3.7\u4ee5\u540e\u7684\u5185\u6838\u53ef\u4ee5\u652f\u6301\u591a\u5e73\u53f0\uff0c\u5373\u7528\u540c\u4e00\u4efd\u5185\u6838\u955c\u50cf\u8fd0\u884c\u4e8e\u591a\u5bb6SoC\u516c\u53f8\u7684\u591a\u4e2a\u82af\u7247\uff0c\u5b9e\u73b0\u201c\u4e00\u4e2aLinux\u53ef\u9002\u7528\u4e8e\u6240\u6709\u7684ARM\u7cfb\u7edf\u201d\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784","description":"Linux\u4e0d\u662f\u4e3a\u4e86\u67d0\u5355\u4e00\u7535\u8def\u677f\u800c\u8bbe\u8ba1\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u53ef\u4ee5\u652f\u6301\u7ea630\u79cd\u4f53\u7cfb\u7ed3\u6784\u4e0b\u4e00\u5b9a\u6570\u91cf\u7684\u786c\u4ef6\uff0c\u56e0\u6b64\uff0c\u5b83\u7684\u9a71\u52a8\u67b6\u6784\u5f88\u663e\u7136\u4e0d\u80fd\u50cfRTOS\u4e0b\u6216\u8005\u65e0\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u90a3\u4e48\u5c0f\u513f\u79d1\u7684\u505a\u6cd5\u3002","date":"2025-09-15T14:44:14.801Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":8.53,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.2\u3000Linux 2.6\u540e\u7684\u5185\u6838\u7279\u70b9"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3"}},"content":"Linux\u4e0d\u662f\u4e3a\u4e86\u67d0\u5355\u4e00\u7535\u8def\u677f\u800c\u8bbe\u8ba1\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u53ef\u4ee5\u652f\u6301\u7ea630\u79cd\u4f53\u7cfb\u7ed3\u6784\u4e0b\u4e00\u5b9a\u6570\u91cf\u7684\u786c\u4ef6\uff0c\u56e0\u6b64\uff0c\u5b83\u7684\u9a71\u52a8\u67b6\u6784\u5f88\u663e\u7136\u4e0d\u80fd\u50cfRTOS\u4e0b\u6216\u8005\u65e0\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u90a3\u4e48\u5c0f\u513f\u79d1\u7684\u505a\u6cd5\u3002\\r\\n\\r\\nLinux\u8bbe\u5907\u9a71\u52a8\u975e\u5e38\u91cd\u89c6\u8f6f\u4ef6\u7684\u53ef\u91cd\u7528\u548c\u8de8\u5e73\u53f0\u80fd\u529b\u3002\u8b6c\u5982\uff0c\u5982\u679c\u6211\u4eec\u5199\u4e0b\u4e00\u4e2aDM9000\u7f51\u5361\u7684\u9a71\u52a8\uff0cLinux\u7684\u60f3\u6cd5\u662f\u8fd9\u4e2a\u9a71\u52a8\u5e94\u8be5\u6700\u597d\u4e00\u884c\u90fd\u4e0d\u8981\u6539\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2a\u5e73\u53f0\u4e0a\u8dd1\u8d77\u6765\u3002\u4e3a\u4e86\u505a\u5230\u8fd9\u4e00\u70b9\uff08\u770b\u4f3c\u5f88\u96be\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u677f\u5b50\u8fde\u63a5DM9000\u7684\u57fa\u5730\u5740\uff0c\u4e2d\u65ad\u53f7\u4ec0\u4e48\u7684\u90fd\u53ef\u80fd\u4e0d\u4e00\u6837\uff09\uff0c\u9a71\u52a8\u4e2d\u52bf\u5fc5\u4f1a\u6709\u7c7b\u4f3c\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\n#ifdef  BOARD_XXX\\r\\n#define DM9000_BASE 0x10000\\r\\n#define DM9000_IRQ 8\\r\\n#elif defined(BOARD_YYY)\\r\\n#define DM9000_BASE 0x20000\\r\\n#define DM9000_IRQ 7\\r\\n#elif defined(BOARD_ZZZ)\\r\\n#define DM9000_BASE 0x30000\\r\\n#define DM9000_IRQ 9\u2026\\r\\n#endif\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e3b\u8981\u6709\u5982\u4e0b\u95ee\u9898\uff1a\\r\\n\\r\\n1\uff09\u6b64\u6bb5\u4ee3\u7801\u770b\u8d77\u6765\u9762\u76ee\u53ef\u618e\uff0c\u5982\u679c\u6709100\u4e2a\u677f\u5b50\uff0c\u5c31\u8981if/else 100\u6b21\uff0c\u5230\u4e86\u7b2c101\u4e2a\u677f\u5b50\uff0c\u53c8\u5f97\u91cd\u65b0\u52a0if/else\u3002\u4ee3\u7801\u8fdb\u884c\u7740\u7b80\u5355\u7684\u201c\u590d\u5236\u2014\u7c98\u8d34\u201d\uff0c\u201c\u590d\u5236\u2014\u7c98\u8d34\u201d\u5f0f\u7684\u7b80\u5355\u91cd\u590d\u901a\u5e38\u610f\u5473\u7740\u4ee3\u7801\u7f16\u5199\u8005\u7684\u6c34\u5e73\u5f88\u5dee\u3002\\r\\n\\r\\n2\uff09\u975e\u5e38\u96be\u505a\u5230\u4e00\u4e2a\u9a71\u52a8\u652f\u6301\u591a\u4e2a\u8bbe\u5907\uff0c\u5982\u679c\u67d0\u4e2a\u7535\u8def\u677f\u4e0a\u6709\u4e24\u4e2aDM9000\u7f51\u5361\uff0c\u5219DM9000_BASE\u8fd9\u4e2a\u5b8f\u5c31\u4e0d\u591f\u7528\u4e86\uff0c\u6b64\u65f6\u52bf\u5fc5\u8981\u5b9a\u4e49\u51fa\u6765DM9000_BASE 1\u3001DM9000_BASE 2\u3001DM9000_IRQ 1\u3001DM9000_IRQ 2\u7c7b\u7684\u5b8f\uff1b\u5b9a\u4e49\u4e86DM9000_BASE 1\u3001DM9000_BASE 2\u540e\uff0c\u5982\u679c\u53c8\u6709\u7b2c3\u4e2aDM9000\u7f51\u5361\u52a0\u5230\u677f\u5b50\u4e0a\uff0c\u524d\u9762\u7684\u4ee3\u7801\u5c31\u53c8\u4e0d\u9002\u7528\u4e86\u3002\\r\\n\\r\\n3\uff09\u4f9d\u8d56\u4e8emake menuconfig\u9009\u62e9\u7684\u9879\u76ee\u6765\u7f16\u8bd1\u5185\u6838\uff0c\u56e0\u6b64\uff0c\u5728\u4e0d\u540c\u7684\u786c\u4ef6\u5e73\u53f0\u4e0b\u8981\u4f9d\u8d56\u4e8e\u6240\u9009\u62e9\u7684BOARD_XXX\u3001BOARD_YYY\u9009\u9879\u6765\u51b3\u5b9a\u4ee3\u7801\u903b\u8f91\u3002\u8fd9\u4e0d\u7b26\u5408ARM Linux 3.x\u4e00\u4e2a\u6620\u50cf\u9002\u7528\u4e8e\u591a\u4e2a\u786c\u4ef6\u7684\u76ee\u6807\u3002\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53ef\u80fd\u540c\u65f6\u9009\u62e9\u4e86BOARD_XXX\u3001BOARD_YYY\u3001BOARD_ZZZ\u3002\\r\\n\\r\\n\u6211\u4eec\u6309\u7167\u4e0a\u9762\u7684\u65b9\u6cd5\u7f16\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u76f8\u4fe1\u81ea\u5df1\u7f16\u7740\u7f16\u7740\u4e5f\u4f1a\u89c9\u5f97\u5947\u602a\uff0c\u95fb\u5230\u4e86\u4ee3\u7801\u91cc\u4e0d\u597d\u7684\u5473\u9053\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u8bf7\u505c\u4e0b\u4f60\u98de\u5954\u7684\u811a\u6b65\uff0c\u7b49\u4e00\u7b49\u4f60\u7684\u7075\u9b42\u3002\u6211\u4eec\u6709\u6ca1\u6709\u529e\u6cd5\u628a\u8bbe\u5907\u7aef\u7684\u4fe1\u606f\u4ece\u9a71\u52a8\u91cc\u9762\u5265\u79bb\u51fa\u6765\uff0c\u8ba9\u9a71\u52a8\u4ee5\u67d0\u79cd\u6807\u51c6\u65b9\u6cd5\u62ff\u5230\u8fd9\u4e9b\u5e73\u53f0\u4fe1\u606f\u5462Linux\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u6a21\u578b\u5b9e\u9645\u4e0a\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u9a71\u52a8\u53ea\u7ba1\u9a71\u52a8\uff0c\u8bbe\u5907\u53ea\u7ba1\u8bbe\u5907\uff0c\u603b\u7ebf\u5219\u8d1f\u8d23\u5339\u914d\u8bbe\u5907\u548c\u9a71\u52a8\uff0c\u800c\u9a71\u52a8\u5219\u4ee5\u6807\u51c6\u9014\u5f84\u62ff\u5230\u677f\u7ea7\u4fe1\u606f\uff0c\u8fd9\u6837\uff0c\u9a71\u52a8\u5c31\u53ef\u4ee5\u653e\u4e4b\u56db\u6d77\u800c\u7686\u51c6\u4e86\uff0c\u5982\u56fe12.1\u6240\u793a\u3002\\r\\n\\r\\nLinux\u7684\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u9700\u8981\u7f16\u5199file_operations\u6210\u5458\u51fd\u6570\uff0c\u5e76\u8d1f\u8d23\u5904\u7406\u963b\u585e\u3001\u975e\u7ec4\u585e\u3001\u591a\u8def\u590d\u7528\u3001SIGIO\u7b49\u590d\u6742\u4e8b\u7269\u3002\u4f46\u662f\uff0c\u5f53\u6211\u4eec\u9762\u5bf9\u4e00\u4e2a\u771f\u5b9e\u7684\u786c\u4ef6\u9a71\u52a8\u65f6\uff0c\u5047\u5982\u8981\u7f16\u5199\u4e00\u4e2a\u6309\u952e\u7684\u9a71\u52a8\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u201c\u61d2\u60f0\u201d\u7684\u7a0b\u5e8f\u5458\uff0c\u4f60\u771f\u7684\u53ea\u60f3\u505a\u6700\u7b80\u5355\u7684\u5de5\u4f5c\uff0c\u8b6c\u5982\uff0c\u6536\u5230\u4e00\u4e2a\u6309\u952e\u4e2d\u65ad\u3001\u6c47\u62a5\u4e00\u4e2a\u6309\u952e\u503c\uff0c\u81f3\u4e8e\u4ec0\u4e48file_operations\u3001\u51e0\u79cdI/O\u6a21\u578b\uff0c\u90a3\u662fLinux\u7684\u4e8b\u60c5\uff0c\u4e3a\u4ec0\u4e48\u8981\u6211\u7ba1Linux\u4e5f\u662f\u7a0b\u5e8f\u5458\u5199\u51fa\u6765\u7684\uff0c\u56e0\u6b64\uff0c\u7a0b\u5e8f\u5458\u600e\u4e48\u60f3\uff0c\u5b83\u5fc5\u7136\u8981\u600e\u4e48\u505a\u3002\u4e8e\u662f\uff0c\u8fd9\u91cc\u5c31\u884d\u751f\u51fa\u6765\u4e86\u4e00\u4e2a\u8f6f\u4ef6\u5206\u5c42\u7684\u60f3\u6cd5\uff0c\u5c3d\u7ba1file_operations\u3001I/O\u6a21\u578b\u4e0d\u53ef\u6216\u7f3a\uff0c\u4f46\u662f\u5173\u4e8e\u6b64\u90e8\u5206\u7684\u4ee3\u7801\uff0c\u5168\u4e16\u754c\u6050\u6015\u6240\u6709\u7684\u8f93\u5165\u8bbe\u5907\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u63d0\u70bc\u4e00\u4e2a\u4e2d\u95f4\u5c42\u51fa\u6765\uff0c\u628a\u8fd9\u4e9b\u4e8b\u60c5\u641e\u5b9a\uff0c\u4e5f\u5c31\u662f\u5728\u5e95\u5c42\u7f16\u5199\u9a71\u52a8\u7684\u65f6\u5019\uff0c\u641e\u5b9a\u5177\u4f53\u7684\u786c\u4ef6\u64cd\u4f5c\u5462\uff1f\\r\\n\\r\\n\u5c06\u8f6f\u4ef6\u8fdb\u884c\u5206\u5c42\u8bbe\u8ba1\u5e94\u8be5\u662f\u8f6f\u4ef6\u5de5\u7a0b\u6700\u57fa\u672c\u7684\u4e00\u4e2a\u601d\u60f3\uff0c\u5982\u679c\u63d0\u70bc\u4e00\u4e2ainput\u7684\u6838\u5fc3\u5c42\u51fa\u6765\uff0c\u628a\u8ddfLinux\u63a5\u53e3\u4ee5\u53ca\u6574\u4e2a\u4e00\u5957input\u4e8b\u4ef6\u7684\u6c47\u62a5\u673a\u5236\u90fd\u5728\u8fd9\u91cc\u9762\u5b9e\u73b0\uff0c\u5982\u56fe12.2\u6240\u793a\uff0c\u663e\u7136\u662f\u975e\u5e38\u597d\u7684\u3002\\r\\n\\r\\n![1743865208630](./figure/1743865208630.png)\\r\\n\\r\\n\u56fe12.1\u3000Linux\u8bbe\u5907\u548c\u9a71\u52a8\u7684\u5206\u79bb\\r\\n\\r\\n![1743865244408](./figure/1743865244408.png)\\r\\n\\r\\n\u56fe12.2\u3000Linux\u9a71\u52a8\u7684\u5206\u5c42\\r\\n\\r\\n\u5728Linux\u8bbe\u5907\u9a71\u52a8\u6846\u67b6\u7684\u8bbe\u8ba1\u4e2d\uff0c\u9664\u4e86\u6709\u5206\u5c42\u8bbe\u8ba1\u4ee5\u5916\uff0c\u8fd8\u6709\u5206\u9694\u7684\u601d\u60f3\u3002\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u901a\u8fc7SPI\u603b\u7ebf\u8bbf\u95ee\u67d0\u5916\u8bbe\uff0c\u5047\u8bbeCPU\u7684\u540d\u5b57\u53ebXXX1\uff0cSPI\u5916\u8bbe\u53ebYYY1\u3002\u5728\u8bbf\u95eeYYY1\u5916\u8bbe\u7684\u65f6\u5019\uff0c\u8981\u901a\u8fc7\u64cd\u4f5cCPU XXX1\u4e0a\u7684SPI\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\u624d\u80fd\u8fbe\u5230\u8bbf\u95eeSPI\u5916\u8bbeYYY1\u7684\u76ee\u7684\uff0c\u6700\u7b80\u5355\u7684\u4ee3\u7801\u903b\u8f91\u662f\uff1a\\r\\n\\r\\n```\\r\\ncpu_xxx1_spi_reg_write()\\r\\ncpu_xxx1_spi_reg_read()\\r\\nspi_client_yyy1_work1()\\r\\ncpu_xxx1_spi_reg_write()\\r\\ncpu_xxx1_spi_reg_read()\\r\\nspi_client_yyy1_work2()\\r\\n```\\r\\n\\r\\n\u5982\u679c\u6309\u7167\u8fd9\u79cd\u65b9\u5f0f\u6765\u8bbe\u8ba1\u9a71\u52a8\uff0c\u7ed3\u679c\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2aSPI\u5916\u8bbe\u6765\u8bb2\uff0c\u5b83\u7684\u9a71\u52a8\u4ee3\u7801\u90fd\u662f\u4e0eCPU\u76f8\u5173\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4ee3\u7801\u7528\u5728CPU XXX1\u4e0a\u7684\u65f6\u5019\uff0c\u5b83\u8bbf\u95eeXXX1\u7684SPI\u4e3b\u673a\u63a7\u5236\u5bc4\u5b58\u5668\uff0c\u5f53\u7528\u5728XXX2\u4e0a\u7684\u65f6\u5019\uff0c\u5b83\u8bbf\u95eeXXX2\u7684SPI\u4e3b\u673a\u63a7\u5236\u5bc4\u5b58\u5668\uff1a\\r\\n\\r\\n```\\r\\ncpu_xxx2_spi_reg_write()\\r\\ncpu_xxx2_spi_reg_read()\\r\\nspi_client_yyy1_work1()\\r\\ncpu_xxx2_spi_reg_write()\\r\\ncpu_xxx2_spi_reg_read()\\r\\nspi_client_yyy1_work2()\\r\\n```\\r\\n\\r\\n\u8fd9\u663e\u7136\u662f\u4e0d\u88ab\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u5916\u8bbeYYY1\u7528\u5728\u4e0d\u540c\u7684CPU XXX1\u548cXXX2\u4e0a\u7684\u65f6\u5019\u9700\u8981\u4e0d\u540c\u7684\u9a71\u52a8\u3002\u540c\u65f6\uff0c\u5982\u679cCPU XXX1\u9664\u4e86\u652f\u6301YYY1\u4ee5\u5916\uff0c\u8fd8\u8981\u652f\u6301\u5916\u8bbeYYY2\u3001YYY3\u3001YYY4\u7b49\uff0c\u8fd9\u4e2aXXX\u7684\u4ee3\u7801\u5c31\u8981\u91cd\u590d\u51fa\u73b0\u5728YYY1\u3001YYY2\u3001YYY3\u3001YYY4\u7684\u9a71\u52a8\u91cc\u9762\uff1a\\r\\n\\r\\n```\\r\\ncpu_xxx1_spi_reg_write()\\r\\ncpu_xxx1_spi_reg_read()\\r\\nspi_client_yyy2_work1()\\r\\ncpu_xxx1_spi_reg_write()\\r\\ncpu_xxx1_spi_reg_read()\\r\\nspi_client_yyy2_work2()\u2026\\r\\n```\\r\\n\\r\\n\u6309\u7167\u8fd9\u6837\u7684\u903b\u8f91\uff0c\u5982\u679c\u8981\u8ba9N\u4e2a\u4e0d\u540c\u7684YYY\u5728M\u4e2a\u4e0d\u540c\u7684CPU XXX\u4e0a\u8dd1\u8d77\u6765\uff0c\u9700\u8981M*N\u4efd\u4ee3\u7801\u3002\u8fd9\u662f\u4e00\u79cd\u5178\u578b\u7684\u5f3a\u8026\u5408\uff0c\u4e0d\u7b26\u5408\u8f6f\u4ef6\u5de5\u7a0b\u201c\u9ad8\u5185\u805a\u3001\u4f4e\u8026\u5408\u201d\u548c\u201c\u4fe1\u606f\u9690\u853d\u201d\u7684\u57fa\u672c\u539f\u5219\u3002\\r\\n\\r\\n\u8fd9\u79cd\u8f6f\u4ef6\u67b6\u6784\u662f\u4e00\u79cd\u5178\u578b\u7684\u7f51\u72b6\u8026\u5408\uff0c\u7f51\u72b6\u8026\u5408\u4e00\u822c\u4e0d\u592a\u9002\u5408\u4eba\u7c7b\u7684\u601d\u7ef4\u903b\u8f91\uff0c\u4f1a\u628a\u6211\u4eec\u7684\u601d\u7ef4\u641e\u4e71\u3002\u5bf9\u4e8e\u7f51\u72b6\u8026\u5408\u7684M\u2236N\uff0c\u6211\u4eec\u4e00\u822c\u8981\u63d0\u70bc\u51fa\u4e00\u4e2a\u4e2d\u95f4\u201c1\u201d\uff0c\u8ba9M\u4e0e\u201c1\u201d\u8026\u5408\uff0cN\u4e5f\u4e0e\u8fd9\u4e2a\u201c1\u201d\u8026\u5408\uff0c\u5982\u56fe12.3\u6240\u793a\u3002\\r\\n\\r\\n![image-20250406110107110](./figure/image-20250406110107110.png)\\r\\n\\r\\n\u56fe12.3\u3000\u5c06M\u2236N\u8026\u5408\u8f6c\u5316\u4e3aM\u22361\u2236N\u8026\u5408\\r\\n\\r\\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5982\u56fe12.4\u6240\u793a\u7684\u601d\u60f3\u5bf9\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u548c\u5916\u8bbe\u9a71\u52a8\u8fdb\u884c\u5206\u79bb\u3002\u8fd9\u6837\u7684\u7ed3\u679c\u662f\uff0c\u5916\u8bbeYYY1\u3001YYY2\u3001YYY3\u3001YYY4\u7684\u9a71\u52a8\u4e0e\u4e3b\u673a\u63a7\u5236\u5668XXX1\u3001XXX2\u3001XXX3\u3001XXX4\u7684\u9a71\u52a8\u4e0d\u76f8\u5173\uff0c\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u4e0d\u5173\u5fc3\u5916\u8bbe\uff0c\u800c\u5916\u8bbe\u9a71\u52a8\u4e5f\u4e0d\u5173\u5fc3\u4e3b\u673a\uff0c\u5916\u8bbe\u53ea\u662f\u8bbf\u95ee\u6838\u5fc3\u5c42\u7684\u901a\u7528API\u8fdb\u884c\u6570\u636e\u4f20\u8f93\uff0c\u4e3b\u673a\u548c\u5916\u8bbe\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u4efb\u610f\u7ec4\u5408\u3002\\r\\n\\r\\n![1743908490270](./figure/1743908490270.png)\\r\\n\\r\\n\u56fe12.4\u3000Linux\u8bbe\u5907\u9a71\u52a8\u7684\u4e3b\u673a\u3001\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\\r\\n\\r\\n\u5982\u679c\u6211\u4eec\u4e0d\u8fdb\u884c\u5982\u56fe12.4\u6240\u793a\u7684\u4e3b\u673a\u548c\u5916\u8bbe\u5206\u79bb\uff0c\u5916\u8bbeYYY1\u3001YYY2\u3001YYY3\u548c\u4e3b\u673aXXX1\u3001XXX2\u3001XXX3\u8fdb\u884c\u7ec4\u5408\u7684\u65f6\u5019\uff0c\u9700\u89819\u4e2a\u4e0d\u540c\u7684\u9a71\u52a8\u3002\u8bbe\u60f3\u4e00\u5171\u6709m\u4e2a\u4e3b\u673a\u63a7\u5236\u5668\uff0cn\u4e2a\u5916\u8bbe\uff0c\u5206\u79bb\u7684\u7ed3\u679c\u662f\u9700\u8981m+n\u4e2a\u9a71\u52a8\uff0c\u4e0d\u5206\u79bb\u5219\u9700\u8981m*n\u4e2a\u9a71\u52a8\u3002\u56e0\u4e3a\uff0cm\u4e2a\u4e3b\u673a\u63a7\u5236\u5668\uff0cn\u4e2a\u5916\u8bbe\u7684\u9a71\u52a8\u90fd\u53ef\u4ee5\u88ab\u5145\u5206\u5730\u590d\u7528\u4e86\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3","description":"Linux\u7684\u4e2d\u65ad\u5904\u7406\u5206\u4e3a\u4e24\u4e2a\u534a\u90e8\uff0c\u9876\u534a\u90e8\u5904\u7406\u7d27\u6025\u7684\u786c\u4ef6\u64cd\u4f5c\uff0c\u5e95\u534a\u90e8\u5904\u7406\u4e0d\u7d27\u6025\u7684\u8017\u65f6\u64cd\u4f5c\u3002tasklet\u548c\u5de5\u4f5c\u961f\u5217\u90fd\u662f\u8c03\u5ea6\u4e2d\u65ad\u5e95\u534a\u90e8\u7684\u826f\u597d\u673a\u5236\uff0ctasklet\u57fa\u4e8e\u8f6f\u4e2d\u65ad\u5b9e\u73b0\u3002\u5185\u6838\u5b9a\u65f6\u5668\u4e5f\u4f9d\u9760\u8f6f\u4e2d\u65ad\u5b9e\u73b0\u3002","date":"2025-09-15T14:44:14.785Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.875,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.1\u3000Linux\u9a71\u52a8\u7684\u8f6f\u4ef6\u67b6\u6784"},"nextItem":{"title":"3.4.3\u3000Linux\u5185\u6838\u7684\u5f15\u5bfc","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.4\u3000Linux\u5185\u6838\u7684\u7684\u7f16\u8bd1\u53ca\u52a0\u8f7d"}},"content":"Linux\u7684\u4e2d\u65ad\u5904\u7406\u5206\u4e3a\u4e24\u4e2a\u534a\u90e8\uff0c\u9876\u534a\u90e8\u5904\u7406\u7d27\u6025\u7684\u786c\u4ef6\u64cd\u4f5c\uff0c\u5e95\u534a\u90e8\u5904\u7406\u4e0d\u7d27\u6025\u7684\u8017\u65f6\u64cd\u4f5c\u3002tasklet\u548c\u5de5\u4f5c\u961f\u5217\u90fd\u662f\u8c03\u5ea6\u4e2d\u65ad\u5e95\u534a\u90e8\u7684\u826f\u597d\u673a\u5236\uff0ctasklet\u57fa\u4e8e\u8f6f\u4e2d\u65ad\u5b9e\u73b0\u3002\u5185\u6838\u5b9a\u65f6\u5668\u4e5f\u4f9d\u9760\u8f6f\u4e2d\u65ad\u5b9e\u73b0\u3002\\r\\n\\r\\n\u5185\u6838\u4e2d\u7684\u5ef6\u65f6\u53ef\u4ee5\u91c7\u7528\u5fd9\u7b49\u5f85\u6216\u7761\u7720\u7b49\u5f85\uff0c\u4e3a\u4e86\u5145\u5206\u5229\u7528CPU\u8d44\u6e90\uff0c\u4f7f\u7cfb\u7edf\u6709\u66f4\u597d\u7684\u541e\u5410\u6027\u80fd\uff0c\u5728\u5bf9\u5ef6\u8fdf\u65f6\u95f4\u7684\u8981\u6c42\u5e76\u4e0d\u662f\u5f88\u7cbe\u786e\u7684\u60c5\u51b5\u4e0b\uff0c\u7761\u7720\u7b49\u5f85\u901a\u5e38\u662f\u503c\u5f97\u63a8\u8350\u7684\uff0c\u800cndelay\uff08\uff09\u3001udelay\uff08\uff09\u5fd9\u7b49\u5f85\u673a\u5236\u5728\u9a71\u52a8\u4e2d\u901a\u5e38\u662f\u4e3a\u4e86\u914d\u5408\u786c\u4ef6\u4e0a\u7684\u77ed\u65f6\u5ef6\u8fdf\u8981\u6c42\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.4\u3000Linux\u5185\u6838\u7684\u7684\u7f16\u8bd1\u53ca\u52a0\u8f7d","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.4\u3000Linux\u5185\u6838\u7684\u7684\u7f16\u8bd1\u53ca\u52a0\u8f7d","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.4\u3000Linux\u5185\u6838\u7684\u7684\u7f16\u8bd1\u53ca\u52a0\u8f7d.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.4\u3000Linux\u5185\u6838\u7684\u7684\u7f16\u8bd1\u53ca\u52a0\u8f7d.md","title":"3.4.3\u3000Linux\u5185\u6838\u7684\u5f15\u5bfc","description":"\u5f15\u5bfcLinux\u7cfb\u7edf\u7684\u8fc7\u7a0b\u5305\u62ec\u5f88\u591a\u9636\u6bb5\uff0c\u8fd9\u91cc\u5c06\u4ee5\u5f15\u5bfcARM Linux\u4e3a\u4f8b\u6765\u8fdb\u884c\u8bb2\u89e3\uff08\u89c1\u56fe3.11\uff09\u3002\u4e00\u822c\u7684SoC\u5185\u5d4c\u5165\u4e86bootrom\uff0c\u4e0a\u7535\u65f6bootrom\u8fd0\u884c\u3002\u5bf9\u4e8eCPU0\u800c\u8a00\uff0cbootrom\u4f1a\u53bb\u5f15\u5bfcbootloader\uff0c\u800c\u5176\u4ed6CPU\u5219\u5224\u65ad\u81ea\u5df1\u662f\u4e0d\u662fCPU0\uff0c\u8fdb\u5165WFI\u7684\u72b6\u6001\u7b49\u5f85CPU0\u6765\u5524\u9192\u5b83\u3002CPU0\u5f15\u5bfcbootloader\uff0cbootloader\u5f15\u5bfcLinux\u5185\u6838\uff0c\u5728\u5185\u6838\u542f\u52a8\u9636\u6bb5\uff0cCPU0\u4f1a\u53d1\u4e2d\u65ad\u5524\u9192CPU1\uff0c\u4e4b\u540eCPU0\u548cCPU1\u90fd\u6295\u5165\u8fd0\u884c\u3002CPU0\u5bfc\u81f4\u7528\u6237\u7a7a\u95f4\u7684init\u7a0b\u5e8f\u88ab\u8c03\u7528\uff0cinit\u7a0b\u5e8f\u518d\u6d3e\u751f\u5176\u4ed6\u8fdb\u7a0b\uff0c\u6d3e\u751f\u51fa\u6765\u7684\u8fdb\u7a0b\u518d\u6d3e\u751f\u5176\u4ed6\u8fdb\u7a0b\u3002CPU0\u548cCPU1\u5171\u62c5\u8fd9\u4e9b\u8d1f\u8f7d\uff0c\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u3002","date":"2025-09-15T14:44:14.773Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.45,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.7\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf"}},"content":"\u5f15\u5bfcLinux\u7cfb\u7edf\u7684\u8fc7\u7a0b\u5305\u62ec\u5f88\u591a\u9636\u6bb5\uff0c\u8fd9\u91cc\u5c06\u4ee5\u5f15\u5bfcARM Linux\u4e3a\u4f8b\u6765\u8fdb\u884c\u8bb2\u89e3\uff08\u89c1\u56fe3.11\uff09\u3002\u4e00\u822c\u7684SoC\u5185\u5d4c\u5165\u4e86bootrom\uff0c\u4e0a\u7535\u65f6bootrom\u8fd0\u884c\u3002\u5bf9\u4e8eCPU0\u800c\u8a00\uff0cbootrom\u4f1a\u53bb\u5f15\u5bfcbootloader\uff0c\u800c\u5176\u4ed6CPU\u5219\u5224\u65ad\u81ea\u5df1\u662f\u4e0d\u662fCPU0\uff0c\u8fdb\u5165WFI\u7684\u72b6\u6001\u7b49\u5f85CPU0\u6765\u5524\u9192\u5b83\u3002CPU0\u5f15\u5bfcbootloader\uff0cbootloader\u5f15\u5bfcLinux\u5185\u6838\uff0c\u5728\u5185\u6838\u542f\u52a8\u9636\u6bb5\uff0cCPU0\u4f1a\u53d1\u4e2d\u65ad\u5524\u9192CPU1\uff0c\u4e4b\u540eCPU0\u548cCPU1\u90fd\u6295\u5165\u8fd0\u884c\u3002CPU0\u5bfc\u81f4\u7528\u6237\u7a7a\u95f4\u7684init\u7a0b\u5e8f\u88ab\u8c03\u7528\uff0cinit\u7a0b\u5e8f\u518d\u6d3e\u751f\u5176\u4ed6\u8fdb\u7a0b\uff0c\u6d3e\u751f\u51fa\u6765\u7684\u8fdb\u7a0b\u518d\u6d3e\u751f\u5176\u4ed6\u8fdb\u7a0b\u3002CPU0\u548cCPU1\u5171\u62c5\u8fd9\u4e9b\u8d1f\u8f7d\uff0c\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u3002\\r\\n\\r\\n![1742738971868](./figure/1742738971868.png)\\r\\n\\r\\n\u56fe3.11\u3000ARM\u4e0a\u7684Linux\u5f15\u5bfc\u6d41\u7a0b\\r\\n\\r\\nbootrom\u662f\u5404\u4e2aSoC\u5382\u5bb6\u6839\u636e\u81ea\u8eab\u60c5\u51b5\u7f16\u5199\u7684\uff0c\u76ee\u524d\u7684SoC\u4e00\u822c\u90fd\u5177\u6709\u4eceSD\u3001eMMC\u3001NAND\u3001USB\u7b49\u4ecb\u8d28\u542f\u52a8\u7684\u80fd\u529b\uff0c\u8fd9\u8bc1\u660e\u8fd9\u4e9bbootrom\u5185\u90e8\u7684\u4ee3\u7801\u5177\u5907\u8bfbSD\u3001NAND\u7b49\u80fd\u529b\u3002\\r\\n\\r\\n\u5d4c\u5165\u5f0fLinux\u9886\u57df\u6700\u8457\u540d\u7684bootloader\u662fU-Boot\uff0c\u5176\u4ee3\u7801\u4ed3\u5e93\u4f4d\u4e8ehttp://git.denx.de/u-boot.git/ \u3002\u65e9\u524d\uff0cbootloader\u9700\u8981\u5c06\u542f\u52a8\u4fe1\u606f\u4ee5ATAG\u7684\u5f62\u5f0f\u5c01\u88c5\uff0c\u5e76\u4e14\u628aATAG\u7684\u5730\u5740\u586b\u5145\u5728r2\u5bc4\u5b58\u5668\u4e2d\uff0c\u673a\u578b\u53f7\u586b\u5145\u5728r1\u5bc4\u5b58\u5668\u4e2d\uff0c\u8be6\u89c1\u5185\u6838\u6587\u6863Documentation/arm/booting\u3002\u5728ARM Linux\u652f\u6301\u8bbe\u5907\u6811\uff08Device Tree\uff09\u540e\uff0cbootloader\u5219\u9700\u8981\u628adtb\u7684\u5730\u5740\u653e\u5165r2\u5bc4\u5b58\u5668\u4e2d\u3002\u5f53\u7136\uff0cARM Linux\u4e5f\u652f\u6301\u76f4\u63a5\u628adtb\u548czImage\u7ed1\u5b9a\u5728\u4e00\u8d77\u7684\u6a21\u5f0f\uff08\u5185\u6838ARM_APPENDED_DTB\u9009\u9879\u201cUse appended device tree blob to zImage\u201d\uff09\uff0c\u8fd9\u6837r2\u5bc4\u5b58\u5668\u5c31\u4e0d\u518d\u9700\u8981\u586b\u5145dtb\u5730\u5740\u4e86\u3002\\r\\n\\r\\n\u7c7b\u4f3czImage\u7684\u5185\u6838\u955c\u50cf\u5b9e\u9645\u4e0a\u662f\u7531\u6ca1\u6709\u538b\u7f29\u7684\u89e3\u538b\u7b97\u6cd5\u548c\u88ab\u538b\u7f29\u7684\u5185\u6838\u7ec4\u6210\uff0c\u6240\u4ee5\u5728bootloader\u8df3\u5165zImage\u4ee5\u540e\uff0c\u5b83\u81ea\u8eab\u7684\u89e3\u538b\u7f29\u903b\u8f91\u5c31\u628a\u5185\u6838\u7684\u955c\u50cf\u89e3\u538b\u7f29\u51fa\u6765\u4e86\u3002\u5173\u4e8e\u5185\u6838\u542f\u52a8\uff0c\u4e0e\u6211\u4eec\u5173\u7cfb\u6bd4\u8f83\u5927\u7684\u90e8\u5206\u662f\u6bcf\u4e2a\u5e73\u53f0\u7684\u8bbe\u5907\u56de\u8c03\u51fd\u6570\u548c\u8bbe\u5907\u5c5e\u6027\u4fe1\u606f\uff0c\u5b83\u4eec\u901a\u5e38\u5305\u88c5\u5728DT_MACHINE_START\u548cMACHINE_END\u4e4b\u95f4\uff0c\u5305\u542breserve\uff08\uff09\u3001map_io\uff08\uff09\u3001init_machine\uff08\uff09\u3001init_late\uff08\uff09\u3001smp\u7b49\u56de\u8c03\u51fd\u6570\u6216\u8005\u5c5e\u6027\u3002\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u4f1a\u5728\u5185\u6838\u542f\u52a8\u8fc7\u7a0b\u4e2d\u88ab\u8c03\u7528\u3002\u540e\u7eed\u7ae0\u8282\u4f1a\u8fdb\u4e00\u6b65\u4ecb\u7ecd\u3002\\r\\n\\r\\n\u7528\u6237\u7a7a\u95f4\u7684init\u7a0b\u5e8f\u5e38\u7528\u7684\u6709busybox init\u3001SysVinit\u3001systemd\u7b49\uff0c\u5b83\u4eec\u7684\u804c\u8d23\u7c7b\u4f3c\uff0c\u628a\u6574\u4e2a\u7cfb\u7edf\u542f\u52a8\uff0c\u6700\u540e\u5f62\u6210\u4e00\u4e2a\u8fdb\u7a0b\u6811\uff0c\u6bd4\u5982Ubuntu\u4e0a\u8fd0\u884c\u7684pstree\uff1a\\r\\n\\r\\n```\\r\\ninit\u2500\u252c\u2500ModemManager\u2500\u2500\u25002*[{ModemManager}]\\r\\n     \u251c\u2500NetworkManager\u2500\u252c\u2500dhclient\\r\\n     \u2502                \u251c\u2500dnsmasq\\r\\n     \u2502                \u2514\u25003*[{NetworkManager}]\\r\\n     \u251c\u2500accounts-daemon\u2500\u2500\u25002*[{accounts-daemon}]\\r\\n     \u251c\u2500acpid\\r\\n     \u251c\u2500atd\\r\\n     \u251c\u2500atop\\r\\n     \u251c\u2500avahi-daemon\u2500\u2500\u2500avahi-daemon\\r\\n     \u251c\u2500bluetoothd\\r\\n     \u251c\u2500colord\u2500\u2500\u25002*[{colord}]\\r\\n     \u251c\u2500console-kit-dae\u2500\u2500\u250064*[{console-kit-dae}]\\r\\n     \u251c\u2500cron\\r\\n     \u251c\u2500cups-browsed\\r\\n     \u251c\u2500cupsd\\r\\n     \u251c\u2500dbus-daemon\\r\\n     \u251c\u2500docker\u2500\u2500\u25006*[{docker}]\\r\\n     \u251c\u25006*[getty]\\r\\n     \u251c\u2500gnome-keyring-d\u2500\u2500\u25004*[{gnome-keyring-d}]\\r\\n     \u251c\u2500in.tftpd\\r\\n     \u251c\u2500kerneloops\\r\\n     \u251c\u2500lightdm\u2500\u252c\u2500Xorg\\r\\n     \u2502         \u251c\u2500lightdm\u2500\u252c\u2500init\u2500\u252c\u2500at-spi-bus-laun\u2500\u252c\u2500dbus-daemon\\r\\n     \u2502         \u2502         \u2502      \u2502                 \u2514\u25003*[{at-spi-bus-laun}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500at-spi2-registr\u2500\u2500\u2500{at-spi2-registr}\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500dbus-daemon\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500dconf-service\u2500\u2500\u25002*[{dconf-service}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500evolution-calen\u2500\u2500\u25004*[{evolution-calen}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500evolution-sourc\u2500\u2500\u25002*[{evolution-sourc}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gconfd-2\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gnome-screensav\u2500\u2500\u25003*[{gnome-screensav}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gnome-session\u2500\u252c\u2500compiz\u2500\u252c\u2500gnome-terminal\u2500\u252c\u2500bash\\r\\n     \u2502         \u2502         \u2502      \u2502               \u2502        \u2502                \u251c\u2500gnome-pty-helpe\\r\\n     \u2502         \u2502         \u2502      \u2502               \u2502        \u2502                \u2514\u25003*[{gnome-terminal}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u2502        \u251c\u2500gtk-window-deco\u2500\u2500\u25002*[{gtk-window-deco}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u2502        \u2514\u25003*[{compiz}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500deja-dup-monito\u2500\u2500\u25002*[{deja-dup-monito}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500gnome-panel\u2500\u2500\u25003*[{gnome-panel}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500indicator-appli\u2500\u2500\u2500{indicator-appli}\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500indicator-bluet\u2500\u2500\u25002*[{indicator-bluet}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500initctl\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500nautilus\u2500\u2500\u25003*[{nautilus}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500nm-applet\u2500\u2500\u25002*[{nm-applet}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500polkit-gnome-au\u2500\u2500\u25002*[{polkit-gnome-au}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500telepathy-indic\u2500\u2500\u25002*[{telepathy-indic}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500unity-fallback-\u2500\u2500\u25002*[{unity-fallback-}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500update-notifier\u2500\u2500\u25003*[{update-notifier}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u251c\u2500zeitgeist-datah\u2500\u2500\u25003*[{zeitgeist-datah}]\\r\\n     \u2502         \u2502         \u2502      \u2502               \u2514\u25003*[{gnome-session}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gvfs-afc-volume\u2500\u2500\u25002*[{gvfs-afc-volume}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gvfs-gphoto2-vo\u2500\u2500\u2500{gvfs-gphoto2-vo}\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gvfs-mtp-volume\u2500\u2500\u2500{gvfs-mtp-volume}\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gvfs-udisks2-vo\u2500\u2500\u25002*[{gvfs-udisks2-vo}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gvfsd\u2500\u2500\u2500{gvfsd}\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gvfsd-fuse\u2500\u2500\u25005*[{gvfsd-fuse}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500gvfsd-trash\u2500\u2500\u25004*[{gvfsd-trash}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500ibus-daemon\u2500\u252c\u2500ibus-dconf\u2500\u2500\u25003*[{ibus-dconf}]\\r\\n     \u2502         \u2502         \u2502      \u2502             \u251c\u2500ibus-engine-sim\u2500\u2500\u25002*[{ibus-engine-sim}]\\r\\n     \u2502         \u2502         \u2502      \u2502             \u251c\u2500ibus-ui-gtk3\u2500\u2500\u25003*[{ibus-ui-gtk3}]\\r\\n     \u2502         \u2502         \u2502      \u2502             \u2514\u25002*[{ibus-daemon}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500ibus-x11\u2500\u2500\u25003*[{ibus-x11}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500indicator-apple\u2500\u2500\u25002*[{indicator-apple}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500indicator-datet\u2500\u2500\u25005*[{indicator-datet}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500indicator-keybo\u2500\u2500\u25002*[{indicator-keybo}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500indicator-messa\u2500\u2500\u25003*[{indicator-messa}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500indicator-power\u2500\u2500\u25002*[{indicator-power}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500indicator-sessi\u2500\u2500\u25002*[{indicator-sessi}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500indicator-sound\u2500\u2500\u25003*[{indicator-sound}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500mission-control\u2500\u2500\u25002*[{mission-control}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500notify-osd\u2500\u2500\u25002*[{notify-osd}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500pulseaudio\u2500\u2500\u25002*[{pulseaudio}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500unity-settings-\u2500\u2500\u25003*[{unity-settings-}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500update-manager\u2500\u2500\u25002*[{update-manager}]\\r\\n     \u2502         \u2502         \u2502      \u251c\u25002*[upstart-dbus-br]\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500upstart-event-b\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500upstart-file-br\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500window-stack-br\\r\\n     \u2502         \u2502         \u2502      \u251c\u2500zeitgeist-daemo\u2500\u2500\u2500{zeitgeist-daemo}\\r\\n     \u2502         \u2502         \u2502      \u2514\u2500zeitgeist-fts\u2500\u252c\u2500cat\\r\\n     \u2502         \u2502         \u2502                      \u2514\u2500{zeitgeist-fts}\\r\\n     \u2502         \u2502         \u2514\u2500{lightdm}\\r\\n     \u2502         \u2514\u25002*[{lightdm}]\\r\\n     \u251c\u2500lttng-sessiond\u2500\u2500\u25009*[{lttng-sessiond}]\\r\\n     \u251c\u2500netserver\\r\\n     \u251c\u2500polkitd\u2500\u2500\u25002*[{polkitd}]\\r\\n     \u251c\u2500rpc.idmapd\\r\\n     \u251c\u2500rpc.mountd\\r\\n     \u251c\u2500rpc.statd\\r\\n     \u251c\u2500rpcbind\\r\\n     \u251c\u2500rsyslogd\u2500\u2500\u25003*[{rsyslogd}]\\r\\n     \u251c\u2500rtkit-daemon\u2500\u2500\u25002*[{rtkit-daemon}]\\r\\n     \u251c\u2500sshd\u2500\u252c\u2500sshd\u2500\u2500\u2500sshd\u2500\u252c\u2500bash\u2500\u2500\u2500pstree\\r\\n     \u2502      \u2502             \u2514\u2500bash\u2500\u2500\u2500sleep\\r\\n     \u2502      \u2514\u2500sshd\u2500\u2500\u2500sshd\u2500\u2500\u2500sftp-server\\r\\n     \u251c\u2500systemd-logind\\r\\n     \u251c\u2500systemd-udevd\\r\\n     \u251c\u2500udisksd\u2500\u2500\u25004*[{udisksd}]\\r\\n     \u251c\u2500upowerd\u2500\u2500\u25002*[{upowerd}]\\r\\n     \u251c\u2500upstart-file-br\\r\\n     \u251c\u2500upstart-socket-\\r\\n     \u251c\u2500upstart-udev-br\\r\\n     \u2514\u2500whoopsie\u2500\u2500\u25002*[{whoopsie}]\\r\\n\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf","description":"Linux MMC/SD\u5b58\u50a8\u5361\u662f\u4e00\u79cd\u5178\u578b\u7684\u5757\u8bbe\u5907\uff0c\u5b83\u7684\u5b9e\u73b0\u4f4d\u4e8edrivers/mmc\u3002drivers/mmc\u4e0b\u53c8\u5206\u4e3acard\u3001core\u548chost\u8fd93\u4e2a\u5b50\u76ee\u5f55\u3002card\u5b9e\u9645\u4e0a\u8ddfLinux\u7684\u5757\u8bbe\u5907\u5b50\u7cfb\u7edf\u5bf9\u63a5\uff0c\u5b9e\u73b0\u5757\u8bbe\u5907\u9a71\u52a8\u4ee5\u53ca\u5b8c\u6210\u8bf7\u6c42\uff0c\u4f46\u662f\u5177\u4f53\u7684\u534f\u8bae\u7ecf\u8fc7core\u5c42\u7684\u63a5\u53e3\uff0c\u6700\u7ec8\u901a\u8fc7host\u5b8c\u6210\u4f20\u8f93\uff0c\u56e0\u6b64\u6574\u4e2aMMC\u5b50\u7cfb\u7edf\u7684\u6846\u67b6\u7ed3\u6784\u5982\u56fe13.5\u6240\u793a\u3002\u53e6\u5916\uff0ccard\u76ee\u5f55\u9664\u4e86\u5b9e\u73b0\u6807\u51c6\u7684MMC/SD\u5b58\u50a8\u5361\u4ee5\u5916\uff0c\u8be5\u76ee\u5f55\u8fd8\u5305\u542b\u4e00\u4e9bSDIO\u5916\u8bbe\u7684\u5361\u9a71\u52a8\uff0c\u5982drivers/mmc/card/sdio_uart.c\u3002core\u76ee\u5f55\u9664\u4e86\u7ed9card\u63d0\u4f9b\u63a5\u53e3\u5916\uff0c\u5b9e\u9645\u4e0a\u4e5f\u5b9a\u4e49\u597d\u4e86host\u9a71\u52a8\u7684\u6846\u67b6\u3002","date":"2025-09-15T14:44:14.765Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.705,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"3.4.3\u3000Linux\u5185\u6838\u7684\u5f15\u5bfc","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.4\u3000Linux\u5185\u6838\u7684\u7684\u7f16\u8bd1\u53ca\u52a0\u8f7d"},"nextItem":{"title":"12.2.1\u3000platform\u603b\u7ebf\u3001\u8bbe\u5907\u4e0e\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.2\u3000platform\u8bbe\u5907\u9a71\u52a8"}},"content":"Linux MMC/SD\u5b58\u50a8\u5361\u662f\u4e00\u79cd\u5178\u578b\u7684\u5757\u8bbe\u5907\uff0c\u5b83\u7684\u5b9e\u73b0\u4f4d\u4e8edrivers/mmc\u3002drivers/mmc\u4e0b\u53c8\u5206\u4e3acard\u3001core\u548chost\u8fd93\u4e2a\u5b50\u76ee\u5f55\u3002card\u5b9e\u9645\u4e0a\u8ddfLinux\u7684\u5757\u8bbe\u5907\u5b50\u7cfb\u7edf\u5bf9\u63a5\uff0c\u5b9e\u73b0\u5757\u8bbe\u5907\u9a71\u52a8\u4ee5\u53ca\u5b8c\u6210\u8bf7\u6c42\uff0c\u4f46\u662f\u5177\u4f53\u7684\u534f\u8bae\u7ecf\u8fc7core\u5c42\u7684\u63a5\u53e3\uff0c\u6700\u7ec8\u901a\u8fc7host\u5b8c\u6210\u4f20\u8f93\uff0c\u56e0\u6b64\u6574\u4e2aMMC\u5b50\u7cfb\u7edf\u7684\u6846\u67b6\u7ed3\u6784\u5982\u56fe13.5\u6240\u793a\u3002\u53e6\u5916\uff0ccard\u76ee\u5f55\u9664\u4e86\u5b9e\u73b0\u6807\u51c6\u7684MMC/SD\u5b58\u50a8\u5361\u4ee5\u5916\uff0c\u8be5\u76ee\u5f55\u8fd8\u5305\u542b\u4e00\u4e9bSDIO\u5916\u8bbe\u7684\u5361\u9a71\u52a8\uff0c\u5982drivers/mmc/card/sdio_uart.c\u3002core\u76ee\u5f55\u9664\u4e86\u7ed9card\u63d0\u4f9b\u63a5\u53e3\u5916\uff0c\u5b9e\u9645\u4e0a\u4e5f\u5b9a\u4e49\u597d\u4e86host\u9a71\u52a8\u7684\u6846\u67b6\u3002\\r\\n\\r\\n![1744814170429](./figure/1744814170429.png)\\r\\n\\r\\n\u56fe13.5\u3000Linux MMC\u5b50\u7cfb\u7edf\\r\\n\\r\\ndrivers/mmc/card/queue.c\u7684mmc_init_queue\uff08\uff09\u51fd\u6570\u901a\u8fc7blk_init_queue\uff08mmc_request_fn\uff0clock\uff09\u7ed1\u5b9a\u4e86\u8bf7\u6c42\u5904\u7406\u51fd\u6570mmc_request_fn\uff08\uff09\uff1a\\r\\n\\r\\n```\\r\\nint mmc_init_queue(struct mmc_queue *mq, struct mmc_card *card,\\r\\n                   spinlock_t *lock, const char *subname)\\r\\n{\\r\\n        ...\\r\\n        mq->queue = blk_init_queue(mmc_request_fn, lock);\\r\\n        ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u800cmmc_request_fn\uff08\uff09\u51fd\u6570\u4f1a\u5524\u9192\u4e0eMMC\u5bf9\u5e94\u7684\u5185\u6838\u7ebf\u7a0b\u6765\u5904\u7406\u8bf7\u6c42\uff0c\u4e0e\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570mmc_queue_thread\uff08\uff09\u6267\u884c\u4e0eMMC\u5bf9\u5e94\u7684mq->issue_fn\uff08mq\uff0creq\uff09\uff1a\\r\\n\\r\\n```\\r\\nstatic int mmc_queue_thread(void *d)\\r\\n{\\r\\n        ...\\r\\n        do {\\r\\n                \u2026\\r\\n\\r\\n                req = blk_fetch_request(q);\\r\\n                mq->mqrq_cur->req = req;\\r\\n                \u2026\\r\\n\\r\\n                if (req || mq->mqrq_prev->req) {\\r\\n                        set_current_state(TASK_RUNNING);\\r\\n                        cmd_flags = req   req->cmd_flags : 0;\\r\\n                        mq->issue_fn(mq, req);\\r\\n                        ...\\r\\n        return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8e\u5b58\u50a8\u8bbe\u5907\u800c\u8a00\uff0cmq->issue_fn\uff08\uff09\u51fd\u6570\u6307\u5411drivers/mmc/card/block.c\u4e2d\u7684mmc_blk_issue_rq\uff08\uff09\uff1a\\r\\n\\r\\n```\\r\\nstatic struct mmc_blk_data *mmc_blk_alloc_req(struct mmc_card *card,\\r\\n                                              struct device *parent,\\r\\n                                              sector_t size,\\r\\n                                              bool default_ro,\\r\\n                                              const char *subname,\\r\\n                                              int area_type)\\r\\n{\\r\\n        ...\\r\\n        md->queue.issue_fn = mmc_blk_issue_rq;\\r\\n        md->queue.data = md;\\r\\n        ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684mmc_blk_issue_rw_rq\uff08\uff09\u7b49\u51fd\u6570\u6700\u7ec8\u4f1a\u8c03\u7528drivers/mmc/core/core.c\u4e2d\u7684mmc_start_req\uff08\uff09\u8fd9\u6837\u7684\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nstatic int mmc_blk_issue_rw_rq(struct mmc_queue *mq, struct request *rqc)\\r\\n{\\r\\n        ...\\r\\n                areq = mmc_start_req(card->host, areq, (int *) &status);\\r\\n        ...\\r\\n}\\r\\n```\\r\\n\\r\\nmmc_start_req\uff08\uff09\u53cd\u8fc7\u6765\u53c8\u8c03\u7528host\u9a71\u52a8\u7684host->ops->pre_req\uff08\uff09\u3001host->ops->enable\uff08\uff09\u3001host->ops->disable\uff08\uff09\u3001host->ops->request\uff08\uff09\u7b49\u6210\u5458\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u5b9e\u73b0\u4e8edrivers/mm/host\u76ee\u5f55\u4e2d\u3002\\r\\n\\r\\nhost->ops\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2aMMC host\u64cd\u4f5c\u7684\u96c6\u5408\uff0c\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u4e3ammc_host_ops\uff0c\u5b83\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535513.16\u6240\u793a\u3002MMC\u4e3b\u673a\u9a71\u52a8\u7684\u4e3b\u4f53\u5de5\u4f5c\u5c31\u662f\u5b9e\u73b0\u8be5\u7ed3\u6784\u4f53\u7684\u6210\u5458\u51fd\u6570\uff0c\u5982drivers/mmc/host/mmc_spi.c\u3001drivers/mmc/host/bfin_sdh.c\u3001drivers/mmc/host/sdhci.c\u7b49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.16\u3000mmc_host_ops\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct mmc_host_ops {\\r\\n 2        /*\\r\\n 3         * \'enable\' is called when the host is claimed and \'disable\' is called\\r\\n 4         * when the host is released. \'enable\' and \'disable\' are deprecated.\\r\\n 5         */\\r\\n 6        int (*enable)(struct mmc_host *host);\\r\\n 7        int (*disable)(struct mmc_host *host);\\r\\n 8        /*\\r\\n 9         * It is optional for the host to implement pre_req and post_req in\\r\\n10         * order to support double buffering of requests (prepare one\\r\\n11         * request while another request is active).\\r\\n12         * pre_req() must always be followed by a post_req().\\r\\n13         * To undo a call made to pre_req(), call post_req() with\\r\\n14         * a nonzero err condition.\\r\\n15         */\\r\\n16        void    (*post_req)(struct mmc_host *host, struct mmc_request *req,\\r\\n17                            int err);\\r\\n18        void    (*pre_req)(struct mmc_host *host, struct mmc_request *req,\\r\\n19                           bool is_first_req);\\r\\n20        void    (*request)(struct mmc_host *host, struct mmc_request *req);\\r\\n21        /*\\r\\n22         * Avoid calling these three functions too often or in a \\"fast path\\",\\r\\n23         * since underlaying controller might implement them in an expensive\\r\\n24         * and/or slow way.\\r\\n25         *\\r\\n26         * Also note that these functions might sleep, so don\'t call them\\r\\n27         * in the atomic contexts!\\r\\n28         *\\r\\n29         * Return values for the get_ro callback should be:\\r\\n30         *   0for a read/write card\\r\\n31         *   1for a read-only card\\r\\n32         *   -ENOSYS when not supported (equal to NULL callback)\\r\\n33         *   or a negative errno value when something bad happened\\r\\n34         *\\r\\n35         * Return values for the get_cd callback should be:\\r\\n36         *   0for a absent card\\r\\n37         *   1for a present card\\r\\n38         *   -ENOSYS when not supported (equal to NULL callback)\\r\\n39         *   or a negative errno value when something bad happened\\r\\n40         */\\r\\n41        void    (*set_ios)(struct mmc_host *host, struct mmc_ios *ios);\\r\\n42        int     (*get_ro)(struct mmc_host *host);\\r\\n43        int     (*get_cd)(struct mmc_host *host);\\r\\n44\\r\\n45        void    (*enable_sdio_irq)(struct mmc_host *host, int enable);\\r\\n46\\r\\n47        /* optional callback for HC quirks */\\r\\n48        void    (*init_card)(struct mmc_host *host, struct mmc_card *card);\\r\\n49\\r\\n50        int     (*start_signal_voltage_switch)(struct mmc_host *host, struct                   mmc_ios *ios);\\r\\n51\\r\\n52        /* Check if the card is pulling dat[0:3] low */\\r\\n53        int     (*card_busy)(struct mmc_host *host);\\r\\n54\\r\\n55        /* The tuning command opcode value is different for SD and eMMC cards */\\r\\n56        int     (*execute_tuning)(struct mmc_host *host, u32opcode);\\r\\n57\\r\\n58        /* Prepare HS400target operating frequency depending host driver */\\r\\n59        int     (*prepare_hs400_tuning)(struct mmc_host *host, struct mmc_ios *ios);\\r\\n60        int     (*select_drive_strength)(unsigned int max_dtr, int host_drv,                   int card_drv);\\r\\n61        void    (*hw_reset)(struct mmc_host *host);\\r\\n62        void    (*card_event)(struct mmc_host *host);\\r\\n63};\\r\\n```\\r\\n\\r\\n\u7531\u4e8e\u76ee\u524d\u5927\u591a\u6570SoC\u5185\u5d4c\u7684MMC/SD/SDIO\u63a7\u5236\u5668\u662fSDHCI\uff08Secure Digital Host Controller Interface\uff09\uff0c\u6240\u4ee5\u66f4\u591a\u662f\u76f4\u63a5\u91cd\u7528drivers/mmc/host/sdhci.c\u9a71\u52a8\uff0c\u5f88\u591a\u82af\u7247\u751a\u81f3\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f7f\u7528\u57fa\u4e8edrivers/mmc/host/sdhci.c\u5b9a\u4e49\u7684drivers/mmc/host/sdhci-pltfm.c\u6846\u67b6\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.2\u3000platform\u8bbe\u5907\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.2\u3000platform\u8bbe\u5907\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.2\u3000platform\u8bbe\u5907\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.2\u3000platform\u8bbe\u5907\u9a71\u52a8.md","title":"12.2.1\u3000platform\u603b\u7ebf\u3001\u8bbe\u5907\u4e0e\u9a71\u52a8","description":"\u5728Linux 2.6\u4ee5\u540e\u7684\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u4e2d\uff0c\u9700\u5173\u5fc3\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u8fd93\u4e2a\u5b9e\u4f53\uff0c\u603b\u7ebf\u5c06\u8bbe\u5907\u548c\u9a71\u52a8\u7ed1\u5b9a\u3002\u5728\u7cfb\u7edf\u6bcf\u6ce8\u518c\u4e00\u4e2a\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u4f1a\u5bfb\u627e\u4e0e\u4e4b\u5339\u914d\u7684\u9a71\u52a8\uff1b\u76f8\u53cd\u7684\uff0c\u5728\u7cfb\u7edf\u6bcf\u6ce8\u518c\u4e00\u4e2a\u9a71\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u5bfb\u627e\u4e0e\u4e4b\u5339\u914d\u7684\u8bbe\u5907\uff0c\u800c\u5339\u914d\u7531\u603b\u7ebf\u5b8c\u6210\u3002","date":"2025-09-15T14:44:14.761Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":14.82,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.8\u3000Linux MMC\u5b50\u7cfb\u7edf"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d"}},"content":"\u5728Linux 2.6\u4ee5\u540e\u7684\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u4e2d\uff0c\u9700\u5173\u5fc3\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u8fd93\u4e2a\u5b9e\u4f53\uff0c\u603b\u7ebf\u5c06\u8bbe\u5907\u548c\u9a71\u52a8\u7ed1\u5b9a\u3002\u5728\u7cfb\u7edf\u6bcf\u6ce8\u518c\u4e00\u4e2a\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u4f1a\u5bfb\u627e\u4e0e\u4e4b\u5339\u914d\u7684\u9a71\u52a8\uff1b\u76f8\u53cd\u7684\uff0c\u5728\u7cfb\u7edf\u6bcf\u6ce8\u518c\u4e00\u4e2a\u9a71\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u5bfb\u627e\u4e0e\u4e4b\u5339\u914d\u7684\u8bbe\u5907\uff0c\u800c\u5339\u914d\u7531\u603b\u7ebf\u5b8c\u6210\u3002\\r\\n\\r\\n\u4e00\u4e2a\u73b0\u5b9e\u7684Linux\u8bbe\u5907\u548c\u9a71\u52a8\u901a\u5e38\u90fd\u9700\u8981\u6302\u63a5\u5728\u4e00\u79cd\u603b\u7ebf\u4e0a\uff0c\u5bf9\u4e8e\u672c\u8eab\u4f9d\u9644\u4e8ePCI\u3001USB\u3001I2 C\u3001SPI\u7b49\u7684\u8bbe\u5907\u800c\u8a00\uff0c\u8fd9\u81ea\u7136\u4e0d\u662f\u95ee\u9898\uff0c\u4f46\u662f\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u91cc\u9762\uff0c\u5728SoC\u7cfb\u7edf\u4e2d\u96c6\u6210\u7684\u72ec\u7acb\u5916\u8bbe\u63a7\u5236\u5668\u3001\u6302\u63a5\u5728SoC\u5185\u5b58\u7a7a\u95f4\u7684\u5916\u8bbe\u7b49\u5374\u4e0d\u4f9d\u9644\u4e8e\u6b64\u7c7b\u603b\u7ebf\u3002\u57fa\u4e8e\u8fd9\u4e00\u80cc\u666f\uff0cLinux\u53d1\u660e\u4e86\u4e00\u79cd\u865a\u62df\u7684\u603b\u7ebf\uff0c\u79f0\u4e3aplatform\u603b\u7ebf\uff0c\u76f8\u5e94\u7684\u8bbe\u5907\u79f0\u4e3aplatform_device\uff0c\u800c\u9a71\u52a8\u6210\u4e3aplatform_driver\\r\\n\\r\\n\u6ce8\u610f\uff1a \u6240\u8c13\u7684platform_device\u5e76\u4e0d\u662f\u4e0e\u5b57\u7b26\u8bbe\u5907\u3001\u5757\u8bbe\u5907\u548c\u7f51\u7edc\u8bbe\u5907\u5e76\u5217\u7684\u6982\u5ff5\uff0c\u800c\u662fLinux\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e00\u79cd\u9644\u52a0\u624b\u6bb5\uff0c\u4f8b\u5982\uff0c\u6211\u4eec\u901a\u5e38\u628a\u5728SoC\u5185\u90e8\u96c6\u6210\u7684I2 C\u3001RTC\u3001LCD\u3001\u770b\u95e8\u72d7\u7b49\u63a7\u5236\u5668\u90fd\u5f52\u7eb3\u4e3aplatform_device\uff0c\u800c\u5b83\u4eec\u672c\u8eab\u5c31\u662f\u5b57\u7b26\u8bbe\u5907\u3002platform_device\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535512.1\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.1\u3000platform_device\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct platform_device {\\r\\n 2  const char    *name;\\r\\n 3  int        id;\\r\\n 4  boo    id_auto;\\r\\n 5  struct devicedev;\\r\\n 6  u32       num_resources;\\r\\n 7  struct resource    *resource;\\r\\n 8\\r\\n 9  const struct platform_device_id    *id_entry;\\r\\n10  char *driver_override; /* Driver name to force a match */\\r\\n11\\r\\n12  /* MFD cell pointer */\\r\\n13  struct mfd_cell *mfd_cell;\\r\\n14\\r\\n15  /* arch specific additions */\\r\\n16  struct pdev_archdata    archdata;\\r\\n17};\\r\\n```\\r\\n\\r\\nplatform_driver\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d\u5305\u542bprobe\uff08\uff09\u3001remove\uff08\uff09\u3001\u4e00\u4e2adevice_driver\u5b9e\u4f8b\u3001\u7535\u6e90\u7ba1\u7406\u51fd\u6570suspend\uff08\uff09\u3001resume\uff08\uff09\uff0c\u5982\u4ee3\u7801\u6e05\u535512.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.2\u3000platform_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct platform_driver {\\r\\n 2 int (*probe)(struct platform_device *);\\r\\n 3 int (*remove)(struct platform_device *);\\r\\n 4 void (*shutdown)(struct platform_device *);\\r\\n 5 int (*suspend)(struct platform_device *, pm_message_t state);\\r\\n 6 int (*resume)(struct platform_device *);\\r\\n 7 struct device_driver driver;\\r\\n 8 const struct platform_device_id *id_table;\\r\\n 9 bool prevent_deferred_probe;\\r\\n10};\\r\\n```\\r\\n\\r\\n\u76f4\u63a5\u586b\u5145platform_driver\u7684suspend\uff08\uff09\u3001resume\uff08\uff09\u505a\u7535\u6e90\u7ba1\u7406\u56de\u8c03\u7684\u65b9\u6cd5\u76ee\u524d\u5df2\u7ecf\u8fc7\u65f6\uff0c\u8f83\u597d\u7684\u505a\u6cd5\u662f\u5b9e\u73b0platform_driver\u7684device_driver\u4e2d\u7684dev_pm_ops\u7ed3\u6784\u4f53\u6210\u5458\uff08\u540e\u7eed\u7684Linux\u7535\u6e90\u7ba1\u7406\u7ae0\u8282\u4f1a\u5bf9\u6b64\u8fdb\u884c\u66f4\u7ec6\u81f4\u7684\u4ecb\u7ecd\uff09\uff0c\u4ee3\u7801\u6e05\u535512.3\u7ed9\u51fa\u4e86device_driver\u7684\u5b9a\u4e49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.3\u3000device_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct device_driver {\\r\\n 2       const char              *name;\\r\\n 3       struct bus_type         *bus;\\r\\n 4\\r\\n 5       struct module           *owner;\\r\\n 6       const char              *mod_name;  /* used for built-in modules */\\r\\n 7\\r\\n 8       bool suppress_bind_attrs;           /* disables bind/unbind via sysfs */\\r\\n 9\\r\\n10       const struct of_device_id           *of_match_table;\\r\\n11       const struct acpi_device_id         *acpi_match_table;\\r\\n12\\r\\n13       int (*probe) (struct device *dev);\\r\\n14       int (*remove) (struct device *dev);\\r\\n15       void (*shutdown) (struct device *dev);\\r\\n16       int (*suspend) (struct device *dev, pm_message_t state);\\r\\n17       int (*resume) (struct device *dev);\\r\\n18       const struct attribute_group **groups;\\r\\n19\\r\\n20       const struct dev_pm_ops *pm;\\r\\n21\\r\\n22       struct driver_private *p;\\r\\n23};\\r\\n```\\r\\n\\r\\n\u4e0eplatform_driver\u5730\u4f4d\u5bf9\u7b49\u7684i2c_driver\u3001spi_driver\u3001usb_driver\u3001pci_driver\u4e2d\u90fd\u5305\u542b\u4e86device_driver\u7ed3\u6784\u4f53\u5b9e\u4f8b\u6210\u5458\u3002\u5b83\u5176\u5b9e\u63cf\u8ff0\u4e86\u5404\u79cdxxx_driver\uff08xxx\u662f\u603b\u7ebf\u540d\uff09\u5728\u9a71\u52a8\u610f\u4e49\u4e0a\u7684\u4e00\u4e9b\u5171\u6027\u3002\\r\\n\\r\\n\u7cfb\u7edf\u4e3aplatform\u603b\u7ebf\u5b9a\u4e49\u4e86\u4e00\u4e2abus_type\u7684\u5b9e\u4f8bplatform_bus_type\uff0c\u5176\u5b9a\u4e49\u4f4d\u4e8edrivers/base/platform.c\u4e0b\uff0c\u5982\u4ee3\u7801\u6e05\u535512.4\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.4\u3000platform\u603b\u7ebf\u7684bus_type\u5b9e\u4f8bplatform_bus_type\\r\\n\\r\\n```\\r\\n1struct bus_type platform_bus_type = {\\r\\n2       .name           = \\"platform\\",\\r\\n3       .dev_groups     = platform_dev_groups,\\r\\n4       .match          = platform_match,\\r\\n5       .uevent         = platform_uevent,\\r\\n6       .pm             = &platform_dev_pm_ops,\\r\\n7};\\r\\n```\\r\\n\\r\\n\u8fd9\u91cc\u8981\u91cd\u70b9\u5173\u6ce8\u5176match\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u6b63\u662f\u6b64\u6210\u5458\u51fd\u6570\u786e\u5b9a\u4e86platform_device\u548cplatform_driver\u4e4b\u95f4\u662f\u5982\u4f55\u8fdb\u884c\u5339\u914d\uff0c\u5982\u4ee3\u7801\u6e05\u535512.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.5\u3000platform_bus_type\u7684match\uff08\uff09\u6210\u5458\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int platform_match(struct device *dev, struct device_driver *drv)\\r\\n 2{\\r\\n 3       struct platform_device *pdev = to_platform_device(dev);\\r\\n 4       struct platform_driver *pdrv = to_platform_driver(drv);\\r\\n 5\\r\\n 6       /* Attempt an OF style match first */\\r\\n 7       if (of_driver_match_device(dev, drv))\\r\\n 8              return 1;\\r\\n 9\\r\\n10       /* Then try ACPI style match */\\r\\n11       if (acpi_driver_match_device(dev, drv))\\r\\n12                return 1;\\r\\n13\\r\\n14       /* Then try to match against the id table */\\r\\n15       if (pdrv->id_table)\\r\\n16                return platform_match_id(pdrv->id_table, pdev) != NULL;\\r\\n17\\r\\n18       /* fall-back to driver name match */\\r\\n19       return (strcmp(pdev->name, drv->name) == 0);\\r\\n20}\\r\\n```\\r\\n\\r\\n\u4ece\u4ee3\u7801\u6e05\u535512.5\u53ef\u4ee5\u770b\u51fa\uff0c\u5339\u914dplatform_device\u548cplatform_driver\u67094\u79cd\u53ef\u80fd\u6027\uff0c\\r\\n\\r\\n- \u4e00\u662f\u57fa\u4e8e\u8bbe\u5907\u6811\u98ce\u683c\u7684\u5339\u914d\uff1b\\r\\n- \u4e8c\u662f\u57fa\u4e8eACPI\u98ce\u683c\u7684\u5339\u914d\uff1b\\r\\n- \u4e09\u662f\u5339\u914dID\u8868\uff08\u5373platform_device\u8bbe\u5907\u540d\u662f\u5426\u51fa\u73b0\u5728platform_driver\u7684ID\u8868\u5185\uff09\uff1b\\r\\n- \u7b2c\u56db\u79cd\u662f\u5339\u914dplatform_device\u8bbe\u5907\u540d\u548c\u9a71\u52a8\u7684\u540d\u5b57\u3002\\r\\n\\r\\n\u5bf9\u4e8eLinux 2.6ARM\u5e73\u53f0\u800c\u8a00\uff0c\u5bf9platform_device\u7684\u5b9a\u4e49\u901a\u5e38\u5728BSP\u7684\u677f\u6587\u4ef6\u4e2d\u5b9e\u73b0\uff0c\u5728\u677f\u6587\u4ef6\u4e2d\uff0c\u5c06platform_device\u5f52\u7eb3\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff0c\u6700\u7ec8\u901a\u8fc7platform_add_devices\uff08\uff09\u51fd\u6570\u7edf\u4e00\u6ce8\u518c\u3002platform_add_devices\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u5c06\u5e73\u53f0\u8bbe\u5907\u6dfb\u52a0\u5230\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint platform_add_devices(struct platform_device **devs, int num);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5e73\u53f0\u8bbe\u5907\u6570\u7ec4\u7684\u6307\u9488\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u5e73\u53f0\u8bbe\u5907\u7684\u6570\u91cf\uff0c\u5b83\u5185\u90e8\u8c03\u7528\u4e86platform_device_register\uff08\uff09\u51fd\u6570\u4ee5\u6ce8\u518c\u5355\u4e2a\u7684\u5e73\u53f0\u8bbe\u5907\u3002\\r\\n\\r\\nLinux 3.x\u4e4b\u540e\uff0cARM Linux\u4e0d\u592a\u559c\u6b22\u4eba\u4eec\u4ee5\u7f16\u7801\u7684\u5f62\u5f0f\u53bb\u586b\u5199platform_device\u548c\u6ce8\u518c\uff0c\u800c\u503e\u5411\u4e8e\u6839\u636e\u8bbe\u5907\u6811\u4e2d\u7684\u5185\u5bb9\u81ea\u52a8\u5c55\u5f00platform_device\u3002\\r\\n\\r\\n# 12.2.2\u3000\u5c06globalfifo\u4f5c\u4e3aplatform\u8bbe\u5907\\r\\n\\r\\n\u73b0\u5728\u6211\u4eec\u5c06\u524d\u9762\u7ae0\u8282\u7684globalfifo\u9a71\u52a8\u6302\u63a5\u5230platform\u603b\u7ebf\u4e0a\uff0c\u8fd9\u8981\u5b8c\u6210\u4e24\u4e2a\u5de5\u4f5c\u3002\\r\\n\\r\\n1\uff09\u5c06globalfifo\u79fb\u690d\u4e3aplatform\u9a71\u52a8\u3002\\r\\n\\r\\n2\uff09\u5728\u677f\u6587\u4ef6\u4e2d\u6dfb\u52a0globalfifo\u8fd9\u4e2aplatform\u8bbe\u5907\u3002\\r\\n\\r\\n\u4e3a\u5b8c\u6210\u5c06globalfifo\u79fb\u690d\u5230platform\u9a71\u52a8\u7684\u5de5\u4f5c\uff0c\u9700\u8981\u5728\u539f\u59cb\u7684globalfifo\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2d\u5957\u4e00\u5c42platform_driver\u7684\u5916\u58f3\uff0c\u5982\u4ee3\u7801\u6e05\u535512.6\u6240\u793a\u3002\u6ce8\u610f\u8fdb\u884c\u8fd9\u4e00\u5de5\u4f5c\u540e\uff0c\u5e76\u6ca1\u6709\u6539\u53d8globalfifo\u662f\u5b57\u7b26\u8bbe\u5907\u7684\u672c\u8d28\uff0c\u53ea\u662f\u5c06\u5176\u6302\u63a5\u5230\u4e86platform\u603b\u7ebf\u4e0a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.6\u3000\u4e3aglobalfifo\u6dfb\u52a0platform_driver\\r\\n\\r\\n```\\r\\n 1static int globalfifo_probe(struct platform_device *pdev)\\r\\n 2{\\r\\n 3       int ret;\\r\\n 4       dev_t devno = MKDEV(globalfifo_major, 0);\\r\\n 5\\r\\n 6       if (globalfifo_major)\\r\\n 7              ret = register_chrdev_region(devno, 1, \\"globalfifo\\");\\r\\n 8       else {\\r\\n 9              ret = alloc_chrdev_region(&devno, 0, 1, \\"globalfifo\\");\\r\\n10              globalfifo_major = MAJOR(devno);\\r\\n11       }\\r\\n12       if (ret < 0)\\r\\n13              return ret;\\r\\n14\\r\\n15           globalfifo_devp = devm_kzalloc(&pdev->dev, sizeof(*globalfifo_devp),\\r\\n             GFP_KERNEL);\\r\\n16       if (!globalfifo_devp) {\\r\\n17              ret = -ENOMEM;\\r\\n18              goto fail_malloc;\\r\\n19       }\\r\\n20\\r\\n21       globalfifo_setup_cdev(globalfifo_devp, 0);\\r\\n22\\r\\n23       mutex_init(&globalfifo_devp->mutex);\\r\\n24       init_waitqueue_head(&globalfifo_devp->r_wait);\\r\\n25       init_waitqueue_head(&globalfifo_devp->w_wait);\\r\\n26\\r\\n27       return 0;\\r\\n28\\r\\n29fail_malloc:\\r\\n30       unregister_chrdev_region(devno, 1);\\r\\n31       return ret;\\r\\n32}\\r\\n33\\r\\n34static int globalfifo_remove(struct platform_device *pdev)\\r\\n35{\\r\\n36       cdev_del(&globalfifo_devp->cdev);\\r\\n37       unregister_chrdev_region(MKDEV(globalfifo_major, 0), 1);\\r\\n38\\r\\n39       return 0;\\r\\n40}\\r\\n41\\r\\n42static struct platform_driver globalfifo_driver = {\\r\\n43       .driver = {\\r\\n44               .name = \\"globalfifo\\",\\r\\n45               .owner = THIS_MODULE,\\r\\n46       },\\r\\n47       .probe = globalfifo_probe,\\r\\n48       .remove = globalfifo_remove,\\r\\n49};\\r\\n50\\r\\n51module_platform_driver(globalfifo_driver);\\r\\n```\\r\\n\\r\\n\u5728\u4ee3\u7801\u6e05\u535512.6\u4e2d\uff0cmodule_platform_driver\uff08\uff09\u5b8f\u6240\u5b9a\u4e49\u7684\u6a21\u5757\u52a0\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u4ec5\u4ec5\u901a\u8fc7platform_driver_register\uff08\uff09\u3001platform_driver_unregister\uff08\uff09\u51fd\u6570\u8fdb\u884cplatform_driver\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500\uff0c\u800c\u539f\u5148\u6ce8\u518c\u548c\u6ce8\u9500\u5b57\u7b26\u8bbe\u5907\u7684\u5de5\u4f5c\u5df2\u7ecf\u88ab\u79fb\u4ea4\u5230platform_driver\u7684probe\uff08\uff09\u548cremove\uff08\uff09\u6210\u5458\u51fd\u6570\u4e2d\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.6\u672a\u5217\u51fa\u7684\u90e8\u5206\u4e0e\u539f\u59cb\u7684globalfifo\u9a71\u52a8\u76f8\u540c\uff0c\u90fd\u662f\u5b9e\u73b0\u4f5c\u4e3a\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6838\u5fc3\u7684file_operations\u7684\u6210\u5458\u51fd\u6570\u3002\u6ce8\u518c\u5b8cglobalfifo\u5bf9\u5e94\u7684platform_driver\u540e\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0/sys/bus/platform/drivers\u76ee\u5f55\u4e0b\u591a\u51fa\u4e86\u4e00\u4e2a\u540d\u5b57\u53ebglobalfifo\u7684\u5b50\u76ee\u5f55\u3002\\r\\n\\r\\n\u4e3a\u4e86\u5b8c\u6210\u5728\u677f\u6587\u4ef6\u4e2d\u6dfb\u52a0globalfifo\u8fd9\u4e2aplatform\u8bbe\u5907\u7684\u5de5\u4f5c\uff0c\u9700\u8981\u5728\u677f\u6587\u4ef6arch/arm/mach-<soc\u540d>/mach-<\u677f\u540d>.c\uff09\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684\u4ee3\u7801\uff0c\u5982\u4ee3\u7801\u6e05\u535512.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.7\u3000\u4e0eglobalfifo\u5bf9\u5e94\u7684platform_device\\r\\n\\r\\n```\\r\\n1static struct platform_device globalfifo_device = {\\r\\n2  .name         = \\"globalfifo\\",\\r\\n3  .id         = -1,\\r\\n4};\\r\\n```\\r\\n\\r\\n\u5e76\u6700\u7ec8\u901a\u8fc7\u7c7b\u4f3c\u4e8eplatform_add_devices\uff08\uff09\u7684\u51fd\u6570\u628a\u8fd9\u4e2aplatform_device\u6ce8\u518c\u8fdb\u7cfb\u7edf\u3002\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u6211\u4eec\u4f1a\u5728/sys/devices/platform\u76ee\u5f55\u4e0b\u770b\u5230\u4e00\u4e2a\u540d\u5b57\u53ebglobalfifo\u7684\u5b50\u76ee\u5f55\uff0c/sys/devices/platform/globalfifo\u4e2d\u4f1a\u6709\u4e00\u4e2adriver\u6587\u4ef6\uff0c\u5b83\u662f\u6307\u5411/sys/bus/platform/drivers/globalfifo\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u8fd9\u8bc1\u660e\u9a71\u52a8\u548c\u8bbe\u5907\u5339\u914d\u4e0a\u4e86\u3002\\r\\n\\r\\n# 12.2.3\u3000platform\u8bbe\u5907\u8d44\u6e90\u548c\u6570\u636e\\r\\n\\r\\n\u7559\u610f\u4e00\u4e0b\u4ee3\u7801\u6e05\u535512.1\u4e2dplatform_device\u7ed3\u6784\u4f53\u5b9a\u4e49\u7684\u7b2c6~7\u884c\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86platform_device\u7684\u8d44\u6e90\uff0c\u8d44\u6e90\u672c\u8eab\u7531resource\u7ed3\u6784\u4f53\u63cf\u8ff0\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535512.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.8\u3000resource\u7ed3\u6784\u4f53\u5b9a\u4e49\\r\\n\\r\\n```\\r\\n1struct resource {\\r\\n2  resource__size_t start;\\r\\n3  resource_size_t end;\\r\\n4  const char *name;\\r\\n5  unsigned long flags;\\r\\n6  struct resource *parent, *sibling, *child;\\r\\n7};\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u901a\u5e38\u5173\u5fc3start\u3001end\u548cflags\u8fd93\u4e2a\u5b57\u6bb5\uff0c\u5b83\u4eec\u5206\u522b\u6807\u660e\u4e86\u8d44\u6e90\u7684\u5f00\u59cb\u503c\u3001\u7ed3\u675f\u503c\u548c\u7c7b\u578b\uff0cflags\u53ef\u4ee5\u4e3aIORESOURCE_IO\u3001IORESOURCE_MEM\u3001IORESOURCE_IRQ\u3001IORE-SOURCE_DMA\u7b49\u3002start\u3001end\u7684\u542b\u4e49\u4f1a\u968f\u7740flags\u800c\u53d8\u66f4\uff0c\u5982\u5f53flags\u4e3aIORESOURCE_MEM\u65f6\uff0cstart\u3001end\u5206\u522b\u8868\u793a\u8be5platform_device\u5360\u636e\u7684\u5185\u5b58\u7684\u5f00\u59cb\u5730\u5740\u548c\u7ed3\u675f\u5730\u5740\uff1b\u5f53flags\u4e3aIORESOURCE_IRQ\u65f6\uff0cstart\u3001end\u5206\u522b\u8868\u793a\u8be5platform_device\u4f7f\u7528\u7684\u4e2d\u65ad\u53f7\u7684\u5f00\u59cb\u503c\u548c\u7ed3\u675f\u503c\uff0c\u5982\u679c\u53ea\u4f7f\u7528\u4e861\u4e2a\u4e2d\u65ad\u53f7\uff0c\u5f00\u59cb\u548c\u7ed3\u675f\u503c\u76f8\u540c\u3002\u5bf9\u4e8e\u540c\u79cd\u7c7b\u578b\u7684\u8d44\u6e90\u800c\u8a00\uff0c\u53ef\u4ee5\u6709\u591a\u4efd\uff0c\u4f8b\u5982\u8bf4\u67d0\u8bbe\u5907\u5360\u636e\u4e86\u4e24\u4e2a\u5185\u5b58\u533a\u57df\uff0c\u5219\u53ef\u4ee5\u5b9a\u4e49\u4e24\u4e2aIORESOURCE_MEM\u8d44\u6e90\u3002\\r\\n\\r\\n\u5bf9resource\u7684\u5b9a\u4e49\u4e5f\u901a\u5e38\u5728BSP\u7684\u677f\u6587\u4ef6\u4e2d\u8fdb\u884c\uff0c\u800c\u5728\u5177\u4f53\u7684\u8bbe\u5907\u9a71\u52a8\u4e2d\u901a\u8fc7platform_get_resource\uff08\uff09\u8fd9\u6837\u7684API\u6765\u83b7\u53d6\uff0c\u6b64API\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstruct resource *platform_get_resource(struct platform_device *, unsigned int,\\r\\n    unsigned int);\\r\\n```\\r\\n\\r\\n\u4f8b\u5982\u5728arch/arm/mach-at91/board-sam9261ek.c\u677f\u6587\u4ef6\u4e2d\u4e3aDM9000\u7f51\u5361\u5b9a\u4e49\u4e86\u5982\u4e0bresouce\uff1a\\r\\n\\r\\n```\\r\\nstatic struct resource dm9000_resource[] = {\\r\\n       [0] = {\\r\\n               .start  = AT91_CHIPSELECT_2,\\r\\n               .end    = AT91_CHIPSELECT_2+ 3,\\r\\n               .flags  = IORESOURCE_MEM\\r\\n       },\\r\\n       [1] = {\\r\\n               .start  = AT91_CHIPSELECT_2+ 0x44,\\r\\n               .end    = AT91_CHIPSELECT_2+ 0xFF,\\r\\n               .flags  = IORESOURCE_MEM\\r\\n       },\\r\\n       [2] = {\\r\\n               .flags  = IORESOURCE_IRQ\\r\\n                       | IORESOURCE_IRQ_LOWEDGE | IORESOURCE_IRQ_HIGHEDGE,\\r\\n       }\\r\\n};\\r\\n```\\r\\n\\r\\n\u5728DM9000\u7f51\u5361\u7684\u9a71\u52a8\u4e2d\u5219\u662f\u901a\u8fc7\u5982\u4e0b\u529e\u6cd5\u62ff\u5230\u8fd93\u4efd\u8d44\u6e90\uff1a\\r\\n\\r\\n```\\r\\ndb->addr_res = platform_get_resource(pdev, IORESOURCE_MEM, 0);\\r\\ndb->data_res = platform_get_resource(pdev, IORESOURCE_MEM, 1);\\r\\ndb->irq_res  = platform_get_resource(pdev, IORESOURCE_IRQ, 0);\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8eIRQ\u800c\u8a00\uff0cplatform_get_resource\uff08\uff09\u8fd8\u6709\u4e00\u4e2a\u8fdb\u884c\u4e86\u5c01\u88c5\u7684\u53d8\u4f53platform_get_irq\uff08\uff09\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint platform_get_irq(struct platform_device *dev, unsigned int num);\\r\\n```\\r\\n\\r\\n\u5b83\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86\u201cplatform_get_resource\uff08dev\uff0cIORESOURCE_IRQ\uff0cnum\uff09\uff1b\u201d\u3002\\r\\n\\r\\n\u8bbe\u5907\u9664\u4e86\u53ef\u4ee5\u5728BSP\u4e2d\u5b9a\u4e49\u8d44\u6e90\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u9644\u52a0\u4e00\u4e9b\u6570\u636e\u4fe1\u606f\uff0c\u56e0\u4e3a\u5bf9\u8bbe\u5907\u7684\u786c\u4ef6\u63cf\u8ff0\u9664\u4e86\u4e2d\u65ad\u3001\u5185\u5b58\u7b49\u6807\u51c6\u8d44\u6e90\u4ee5\u5916\uff0c\u53ef\u80fd\u8fd8\u4f1a\u6709\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u800c\u8fd9\u4e9b\u914d\u7f6e\u4fe1\u606f\u4e5f\u4f9d\u8d56\u4e8e\u677f\uff0c\u4e0d\u9002\u5b9c\u76f4\u63a5\u653e\u7f6e\u5728\u8bbe\u5907\u9a71\u52a8\u4e0a\u3002\u56e0\u6b64\uff0cplatform\u4e5f\u63d0\u4f9b\u4e86platform_data\u7684\u652f\u6301\uff0cplatform_data\u7684\u5f62\u5f0f\u662f\u7531\u6bcf\u4e2a\u9a71\u52a8\u81ea\u5b9a\u4e49\u7684\uff0c\u5982\u5bf9\u4e8eDM9000\u7f51\u5361\u800c\u8a00\uff0cplatform_data\u4e3a\u4e00\u4e2adm9000_plat_data\u7ed3\u6784\u4f53\uff0c\u5b8c\u6210\u5b9a\u4e49\u540e\uff0c\u5c31\u53ef\u4ee5\u5c06MAC\u5730\u5740\u3001\u603b\u7ebf\u5bbd\u5ea6\u3001\u677f\u4e0a\u6709\u65e0EEPROM\u4fe1\u606f\u7b49\u653e\u5165platform_data\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535512.9\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.9\u3000platform_data\u7684\u4f7f\u7528\\r\\n\\r\\n```\\r\\n 1static struct dm9000_plat_data dm9000_platdata = {\\r\\n 2        .flags          = DM9000_PLATF_16BITONLY | DM9000_PLATF_NO_EEPROM,\\r\\n 3};\\r\\n 4\\r\\n 5static struct platform_device dm9000_device = {\\r\\n 6        .name           = \\"dm9000\\",\\r\\n 7        .id             = 0,\\r\\n 8        .num_resources  = ARRAY_SIZE(dm9000_resource),\\r\\n 9        .resource       = dm9000_resource,\\r\\n10        .dev            = {\\r\\n11                .platform_data  = &dm9000_platdata,\\r\\n12        }\\r\\n13};\\r\\n```\\r\\n\\r\\n[\u63d2\u56fe]\u800c\u5728DM9000\u7f51\u5361\u7684\u9a71\u52a8drivers/net/ethernet/davicom/dm9000.c\u7684probe\uff08\uff09\u4e2d\uff0c\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u5c31\u62ff\u5230\u4e86platform_data\uff1a\\r\\n\\r\\n```\\r\\nstruct dm9000_plat_data *pdata = dev_get_platdata(&pdev->dev);\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0cpdev\u4e3aplatform_device\u7684\u6307\u9488\u3002\\r\\n\\r\\n\u7531\u4ee5\u4e0a\u5206\u6790\u53ef\u77e5\uff0c\u5728\u8bbe\u5907\u9a71\u52a8\u4e2d\u5f15\u5165platform\u7684\u6982\u5ff5\u81f3\u5c11\u6709\u5982\u4e0b\u597d\u5904\u3002\\r\\n\\r\\n1\uff09\u4f7f\u5f97\u8bbe\u5907\u88ab\u6302\u63a5\u5728\u4e00\u4e2a\u603b\u7ebf\u4e0a\uff0c\u7b26\u5408Linux 2.6\u4ee5\u540e\u5185\u6838\u7684\u8bbe\u5907\u6a21\u578b\u3002\u5176\u7ed3\u679c\u662f\u4f7f\u914d\u5957\u7684sysfs\u8282\u70b9\u3001\u8bbe\u5907\u7535\u6e90\u7ba1\u7406\u90fd\u6210\u4e3a\u53ef\u80fd\u3002\\r\\n\\r\\n2\uff09\u9694\u79bbBSP\u548c\u9a71\u52a8\u3002\u5728BSP\u4e2d\u5b9a\u4e49platform\u8bbe\u5907\u548c\u8bbe\u5907\u4f7f\u7528\u7684\u8d44\u6e90\u3001\u8bbe\u5907\u7684\u5177\u4f53\u914d\u7f6e\u4fe1\u606f\uff0c\u800c\u5728\u9a71\u52a8\u4e2d\uff0c\u53ea\u9700\u8981\u901a\u8fc7\u901a\u7528API\u53bb\u83b7\u53d6\u8d44\u6e90\u548c\u6570\u636e\uff0c\u505a\u5230\u4e86\u677f\u76f8\u5173\u4ee3\u7801\u548c\u9a71\u52a8\u4ee3\u7801\u7684\u5206\u79bb\uff0c\u4f7f\u5f97\u9a71\u52a8\u5177\u6709\u66f4\u597d\u7684\u53ef\u6269\u5c55\u6027\u548c\u8de8\u5e73\u53f0\u6027\u3002\\r\\n\\r\\n3\uff09\u8ba9\u4e00\u4e2a\u9a71\u52a8\u652f\u6301\u591a\u4e2a\u8bbe\u5907\u5b9e\u4f8b\u3002\u8b6c\u5982DM9000\u7684\u9a71\u52a8\u53ea\u6709\u4e00\u4efd\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5728\u677f\u7ea7\u6dfb\u52a0\u591a\u4efdDM9000\u7684platform_device\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u4e0e\u552f\u4e00\u7684\u9a71\u52a8\u5339\u914d\u3002\\r\\n\\r\\n\u5728Linux 3.x\u4e4b\u540e\u7684\u5185\u6838\u4e2d\uff0cDM9000\u9a71\u52a8\u5b9e\u9645\u4e0a\u5df2\u7ecf\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5907\u6811\u7684\u65b9\u6cd5\u88ab\u679a\u4e3e\uff0c\u53ef\u4ee5\u53c2\u89c1\u8865\u4e01net\uff1adm9000\uff1aAllow instantiation using device tree\uff08\u5185\u6838commit\u7684ID\u662f0b8bf1ba\uff09\u3002\\r\\n\\r\\n```\\r\\nindex a2408c8..dd243a1 100644\\r\\n--- a/drivers/net/ethernet/davicom/dm9000.c\\r\\n+++ b/drivers/net/ethernet/davicom/dm9000.c\\r\\n@@ -29,6+29,8@@\\r\\n#include <linux/spinlock.h>\\r\\n#include <linux/crc32.h>\\r\\n#include <linux/mii.h>\\r\\n+#include <linux/of.h>\\r\\n+#include <linux/of_net.h>\\r\\n#include <linux/ethtool.h>\\r\\n#include <linux/dm9000.h>\\r\\n#include <linux/delay.h>\\r\\n@@ -1351,6+1353,31@@ static const struct net_device_ops dm9000_netdev_ops = {\\r\\n#endif\\r\\n};\\r\\n+static struct dm9000_plat_data *dm9000_parse_dt(struct device *dev)\\r\\n+{\\r\\n+ \u2026\\r\\n+}\\r\\n+\\r\\n/*\\r\\n* Search DM9000board, allocate space and register it\\r\\n*/\\r\\n@@ -1366,6+1393,12@@ dm9000_probe(struct platform_device *pdev)\\r\\nint i;\\r\\nu32id_val;\\r\\n+ if (!pdata) {\\r\\n+     pdata = dm9000_parse_dt(&pdev->dev);\\r\\n+     if (IS_ERR(pdata))\\r\\n+         return PTR_ERR(pdata);\\r\\n+ }\\r\\n+\\r\\n/* Init network device */\\r\\nndev = alloc_etherdev(sizeof(struct board_info));\\r\\nif (!ndev)\\r\\n@@ -1676,11+1709,20@@ dm9000_drv_remove(struct platform_device *pdev)\\r\\nreturn 0;\\r\\n}\\r\\n+#ifdef CONFIG_OF\\r\\n+static const struct of_device_id dm9000_of_matches[] = {\\r\\n+   { .compatible = \\"davicom,dm9000\\", },\\r\\n+   { /* sentinel */ }\\r\\n+};\\r\\n+MODULE_DEVICE_TABLE(of, dm9000_of_matches);\\r\\n+#endif\\r\\n+\\r\\nstatic struct platform_driver dm9000_driver = {\\r\\n    .driver = {\\r\\n    .name = \\"dm9000\\",\\r\\n    .owner = THIS_MODULE,\\r\\n    .pm = &dm9000_drv_pm_ops,\\r\\n+      .of_match_table = of_match_ptr(dm9000_of_matches),\\r\\n},\\r\\n.probe = dm9000_probe,\\r\\n.remove = dm9000_drv_remove,\\r\\n```\\r\\n\\r\\n\u6539\u4e3a\u8bbe\u5907\u6811\u540e\uff0c\u5728\u677f\u4e0a\u6dfb\u52a0DM9000\u7f51\u5361\u7684\u52a8\u4f5c\u5c31\u53d8\u6210\u4e86\u7b80\u5355\u5730\u4fee\u6539dts\u6587\u4ef6\uff0c\u5982arch/arm/boot/dts/s3c6410-mini6410.dts\u4e2d\u5c31\u6709\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nsrom-cs1@18000000 {\\r\\n        compatible = \\"simple-bus\\";\\r\\n        #address-cells = <1>;\\r\\n        #size-cells = <1>;\\r\\n        reg = <0x180000000x8000000>;\\r\\n        ranges;\\r\\n        ethernet@18000000{\\r\\n                compatible = \\"davicom,dm9000\\";\\r\\n                reg = <0x180000000x20x180000040x2>;\\r\\n                interrupt-parent = <&gpn>;\\r\\n                interrupts = <7IRQ_TYPE_LEVEL_HIGH>;\\r\\n                davicom,no-eeprom;\\r\\n        };\\r\\n};\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d","description":"\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u5341\u5206\u6709\u7528\uff0c\u5b83\u88ab\u5185\u6838\u7528\u4e8e\u5411\u7528\u6237\u5bfc\u51fa\u4fe1\u606f\u3002\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u5728Linux\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u5728/proc\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5bf9\u865a\u62df\u6587\u4ef6\u7684\u8bfb\u5199\u4f5c\u4e3a\u4e0e\u5185\u6838\u4e2d\u5b9e\u4f53\u8fdb\u884c\u901a\u4fe1\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u4e0e\u666e\u901a\u6587\u4ef6\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e9b\u865a\u62df\u6587\u4ef6\u7684\u5185\u5bb9\u90fd\u662f\u52a8\u6001\u521b\u5efa\u7684\u3002","date":"2025-09-15T14:44:14.761Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":8.885,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"12.2.1\u3000platform\u603b\u7ebf\u3001\u8bbe\u5907\u4e0e\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.2\u3000platform\u8bbe\u5907\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3"}},"content":"\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u5341\u5206\u6709\u7528\uff0c\u5b83\u88ab\u5185\u6838\u7528\u4e8e\u5411\u7528\u6237\u5bfc\u51fa\u4fe1\u606f\u3002\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u5728Linux\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\u5728/proc\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5bf9\u865a\u62df\u6587\u4ef6\u7684\u8bfb\u5199\u4f5c\u4e3a\u4e0e\u5185\u6838\u4e2d\u5b9e\u4f53\u8fdb\u884c\u901a\u4fe1\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u4e0e\u666e\u901a\u6587\u4ef6\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u4e9b\u865a\u62df\u6587\u4ef6\u7684\u5185\u5bb9\u90fd\u662f\u52a8\u6001\u521b\u5efa\u7684\u3002\\r\\n\\r\\n\u201c/proc\u201d\u4e0b\u7684\u7edd\u5927\u591a\u6570\u6587\u4ef6\u662f\u53ea\u8bfb\u7684\uff0c\u4ee5\u663e\u793a\u5185\u6838\u4fe1\u606f\u4e3a\u4e3b\u3002\u4f46\u662f\u201c/proc\u201d\u4e0b\u7684\u6587\u4ef6\u4e5f\u5e76\u4e0d\u662f\u5b8c\u5168\u53ea\u8bfb\u7684\uff0c\u82e5\u8282\u70b9\u53ef\u5199\uff0c\u8fd8\u53ef\u7528\u4e8e\u4e00\u5b9a\u7684\u63a7\u5236\u6216\u914d\u7f6e\u76ee\u7684\uff0c\u4f8b\u5982\u524d\u9762\u4ecb\u7ecd\u7684\u5199/proc/sys/kernel/printk\u53ef\u4ee5\u6539\u53d8printk\uff08\uff09\u7684\u6253\u5370\u7ea7\u522b\u3002\\r\\n\\r\\nLinux\u7cfb\u7edf\u7684\u8bb8\u591a\u547d\u4ee4\u672c\u8eab\u90fd\u662f\u901a\u8fc7\u5206\u6790\u201c/proc\u201d\u4e0b\u7684\u6587\u4ef6\u6765\u5b8c\u6210\u7684\uff0c\u5982ps\u3001top\u3001uptime\u548cfree\u7b49\u3002\u4f8b\u5982\uff0cfree\u547d\u4ee4\u901a\u8fc7\u5206\u6790/proc/meminfo\u6587\u4ef6\u5f97\u5230\u53ef\u7528\u5185\u5b58\u4fe1\u606f\uff0c\u4e0b\u9762\u663e\u793a\u4e86\u5bf9\u5e94\u7684meminfo\u6587\u4ef6\u548cfree\u547d\u4ee4\u7684\u7ed3\u679c\u3002\\r\\n\\r\\n# 1.meminfo\u6587\u4ef6\\r\\n\\r\\n```\\r\\n[root@localhost proc]# cat meminfo\\r\\nMemTotal:        29516 kB\\r\\nMemFree:          1472 kB\\r\\nBuffers:          4096 kB\\r\\nCached:          12648 kB\\r\\nSwapCached:          0 kB\\r\\nActive:          14208 kB\\r\\nInactive:         8844 kB\\r\\nHighTotal:           0 kB\\r\\nHighFree:            0 kB\\r\\nLowTotal:        29516 kB\\r\\nLowFree:          1472 kB\\r\\nSwapTotal:      265064 kB\\r\\nSwapFree:       265064 kB\\r\\nDirty:              20 kB\\r\\nWriteback:           0 kB\\r\\nMapped:          10052 kB\\r\\nSlab:             3864 kB\\r\\nCommitLimit:    279820 kB\\r\\nCommitted_AS:    13760 kB\\r\\nPageTables:        444 kB\\r\\nVmallocTotal:   999416 kB\\r\\nVmallocUsed:       560 kB\\r\\nVmallocChunk:   998580 kB\\r\\n```\\r\\n\\r\\n# 2. free\u547d\u4ee4\\r\\n\\r\\n```\\r\\n[root@localhost proc]# free\\r\\n           total       used      free     shared    buffers     cached\\r\\nMem:       29516       28104     1412     0         4100        12700\\r\\n-/+ buffers/cache:     11304     18212\\r\\nSwap:      265064      0         265064\\r\\n```\\r\\n\\r\\n\u5728Linux 3.9\u4ee5\u53ca\u4e4b\u524d\u7684\u5185\u6838\u7248\u672c\u4e2d\uff0c\u53ef\u7528\u5982\u4e0b\u51fd\u6570\u521b\u5efa\u201c/proc\u201d\u8282\u70b9\uff1a\\r\\n\\r\\n```\\r\\nstruct proc_dir_entry *create_proc_entry(const char *name, mode_t mode,\\r\\n            struct proc_dir_entry *parent);\\r\\nstruct proc_dir_entry *create_proc_read_entry(const char *name, mode_t mode,\\r\\n            struct proc_dir_entry *base, read_proc_t *read_proc, void * data);\\r\\n```\\r\\n\\r\\ncreate_proc_entry\uff08\uff09\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u201c/proc\u201d\u8282\u70b9\uff0c\u800ccreate_proc_read_entry\uff08\uff09\u8c03\u7528create_proc_entry\uff08\uff09\u521b\u5efa\u53ea\u8bfb\u7684\u201c/proc\u201d\u8282\u70b9\u3002\u53c2\u6570name\u4e3a\u201c/proc\u201d\u8282\u70b9\u7684\u540d\u79f0\uff0cparent/base\u4e3a\u7236\u76ee\u5f55\u7684\u8282\u70b9\uff0c\u5982\u679c\u4e3aNULL\uff0c\u5219\u6307\u201c/proc\u201d\u76ee\u5f55\uff0cread_proc\u662f\u201c/proc\u201d\u8282\u70b9\u7684\u8bfb\u51fd\u6570\u6307\u9488\u3002\u5f53read\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u5728\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6267\u884c\u65f6\uff0c\u5b83\u6620\u50cf\u5230\u4e00\u4e2a\u6570\u636e\u4ea7\u751f\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6570\u636e\u83b7\u53d6\u51fd\u6570\u3002\\r\\n\\r\\n\u4e0b\u5217\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u201c/proc\u201d\u76ee\u5f55\uff1a\\r\\n\\r\\n```\\r\\nstruct proc_dir_entry *proc_mkdir(const char *name, struct proc_dir_entry *parent);\\r\\n```\\r\\n\\r\\n\u7ed3\u5408create_proc_entry\uff08\uff09\u548cproc_mkdir\uff08\uff09\uff0c\u4ee3\u7801\u6e05\u535521.5\u4e2d\u7684\u7a0b\u5e8f\u53ef\u7528\u4e8e\u5148\u5728/proc\u4e0b\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55procfs_example\uff0c\u800c\u540e\u5728\u8be5\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6example_file\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.5\u3000proc_mkdir\uff08\uff09\u548ccreate_proc_entry\uff08\uff09\u51fd\u6570\u4f7f\u7528\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1/* \u521b\u5efa/proc\u4e0b\u7684\u76ee\u5f55 */\\r\\n 2example_dir = proc_mkdir(\\"procfs_example\\", NULL);\\r\\n 3if (example_dir == NULL) {\\r\\n 4 rv =  -ENOMEM;\\r\\n 5 goto out;\\r\\n 6}\\r\\n 7\\r\\n 8example_dir->owner = THIS_MODULE;\\r\\n 9\\r\\n10/* \u521b\u5efa\u4e00\u4e2a/proc\u6587\u4ef6 */\\r\\n11example_file = create_proc_entry(\\"example_file\\", 0666, example_dir);\\r\\n12if (example_file == NULL) {\\r\\n13 rv =  -ENOMEM;\\r\\n14 goto out;\\r\\n15}\\r\\n16\\r\\n17example_file->owner = THIS_MODULE;\\r\\n18example_file->read_proc = example_file_read;\\r\\n19example_file->write_proc = example_file_write\\r\\n```\\r\\n\\r\\n\u4f5c\u4e3a\u4e0a\u8ff0\u51fd\u6570\u8fd4\u56de\u503c\u7684proc_dir_entry\u7ed3\u6784\u4f53\u5305\u542b\u4e86\u201c/proc\u201d\u8282\u70b9\u7684\u8bfb\u51fd\u6570\u6307\u9488\uff08read_proc_t*read_proc\uff09\u3001\u5199\u51fd\u6570\u6307\u9488\uff08write_proc_t*write_proc\uff09\u4ee5\u53ca\u7236\u8282\u70b9\u3001\u5b50\u8282\u70b9\u4fe1\u606f\u7b49\u3002\\r\\n\\r\\n/proc\u8282\u70b9\u7684\u8bfb\u5199\u51fd\u6570\u7684\u7c7b\u578b\u5206\u522b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ntypedef int (read_proc_t)(char *page, char **start, off_t off,\\r\\n                                  int count, int *eof, void *data);\\r\\ntypedef int (write_proc_t)(struct file *file, const char __user *buffer,\\r\\n                                  unsigned long count, void *data);\\r\\n```\\r\\n\\r\\n[\u63d2\u56fe]\u8bfb\u51fd\u6570\u4e2dpage\u6307\u9488\u6307\u5411\u7528\u4e8e\u5199\u5165\u6570\u636e\u7684\u7f13\u51b2\u533a\uff0cstart\u7528\u4e8e\u8fd4\u56de\u5b9e\u9645\u7684\u6570\u636e\u5e76\u5199\u5230\u5185\u5b58\u9875\u7684\u4f4d\u7f6e\uff0ceof\u662f\u7528\u4e8e\u8fd4\u56de\u8bfb\u7ed3\u675f\u6807\u5fd7\uff0coffset\u662f\u8bfb\u7684\u504f\u79fb\uff0ccount\u662f\u8981\u8bfb\u7684\u6570\u636e\u957f\u5ea6\u3002start\u53c2\u6570\u6bd4\u8f83\u590d\u6742\uff0c\u5bf9\u4e8e/proc\u53ea\u5305\u542b\u7b80\u5355\u6570\u636e\u7684\u60c5\u51b5\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u5728\u8bfb\u51fd\u6570\u4e2d\u8bbe\u7f6e*start\uff0c\u8fd9\u610f\u5473\u7740\u5185\u6838\u5c06\u8ba4\u4e3a\u6570\u636e\u4fdd\u5b58\u5728\u5185\u5b58\u9875\u504f\u79fb0\u7684\u5730\u65b9\u3002\\r\\n\\r\\n\u5199\u51fd\u6570\u4e0efile_operations\u4e2d\u7684write\uff08\uff09\u6210\u5458\u51fd\u6570\u7c7b\u4f3c\uff0c\u9700\u8981\u4e00\u6b21\u4ece\u7528\u6237\u7f13\u51b2\u533a\u5230\u5185\u5b58\u7a7a\u95f4\u7684\u590d\u5236\u8fc7\u7a0b\u3002\\r\\n\\r\\n\u5728Linux\u7cfb\u7edf\u4e2d\u53ef\u7528\u5982\u4e0b\u51fd\u6570\u5220\u9664/proc\u8282\u70b9\uff1a\\r\\n\\r\\n```\\r\\nvoid remove_proc_entry(const char *name, struct proc_dir_entry *parent);\\r\\n```\\r\\n\\r\\n\u5728Linux\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u53ef\u4f7f\u7528\u7684/proc\u8282\u70b9\u5b8f\u5305\u62ec\uff1aproc_root_fs\uff08/proc\uff09\u3001proc_net\uff08/proc/net\uff09\u3001proc_bus\uff08/proc/bus\uff09\u3001proc_root_driver\uff08/proc/driver\uff09\u7b49\uff0cproc_root_fs\u5b9e\u9645\u4e0a\u5c31\u662fNULL\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.6\u6240\u793a\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684\u201c/proc\u201d\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u8303\u4f8b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5728\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\u521b\u5efa/proc/test_dir\u76ee\u5f55\uff0c\u5e76\u5728\u8be5\u76ee\u5f55\u4e2d\u521b\u5efa/proc/test_dir/test_rw\u6587\u4ef6\u8282\u70b9\uff0c\u5728\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u4e2d\u64a4\u9500\u201c/proc\u201d\u8282\u70b9\uff0c\u800c/proc/test_dir/test_rw\u6587\u4ef6\u4e2d\u53ea\u4fdd\u5b58\u4e86\u4e00\u4e2a32\u4f4d\u7684\u6574\u6570\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.6\u3000/proc\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1#include <linux/module.h>\\r\\n 2#include <linux/kernel.h>\\r\\n 3#include <linux/init.h>\\r\\n 4#include <linux/proc_fs.h>\\r\\n 5\\r\\n 6static unsigned int variable;\\r\\n 7static struct proc_dir_entry *test_dir, *test_entry;\\r\\n 8\\r\\n 9static int test_proc_read(char *buf, char **start, off_t off, int count,\\r\\n10      int *eof, void *data)\\r\\n11{\\r\\n12 unsigned int *ptr_var = data;\\r\\n13 return sprintf(buf, \\"%u\\\\n\\", *ptr_var);\\r\\n14}\\r\\n15\\r\\n16static int test_proc_write(struct file *file, const char *buffer,\\r\\n17      unsigned long count, void *data)\\r\\n18{\\r\\n19 unsigned int *ptr_var = data;\\r\\n20\\r\\n21 *ptr_var = simple_strtoul(buffer, NULL, 10);\\r\\n22\\r\\n23 return count;\\r\\n24}\\r\\n25\\r\\n26static __init int test_proc_init(void)\\r\\n27{\\r\\n28 test_dir = proc_mkdir(\\"test_dir\\", NULL);\\r\\n29 if (test_dir) {\\r\\n30     test_entry = create_proc_entry(\\"test_rw\\", 0666, test_dir);\\r\\n31     if (test_entry) {\\r\\n32         test_entry->nlink = 1;\\r\\n33         test_entry->data = &variable;\\r\\n34         test_entry->read_proc = test_proc_read;\\r\\n35         test_entry->write_proc = test_proc_write;\\r\\n36         return 0;\\r\\n37     }\\r\\n38 }\\r\\n39\\r\\n40 return -ENOMEM;\\r\\n41}\\r\\n42module_init(test_proc_init);\\r\\n43\\r\\n44static __exit void test_proc_cleanup(void)\\r\\n45{\\r\\n46 remove_proc_entry(\\"test_rw\\", test_dir);\\r\\n47 remove_proc_entry(\\"test_dir\\", NULL);\\r\\n48}\\r\\n49module_exit(test_proc_cleanup);\\r\\n50\\r\\n51MODULE_AUTHOR(\\"Barry Song <baohua@kernel.org>\\");\\r\\n52MODULE_DESCRIPTION(\\"proc exmaple\\");\\r\\n53MODULE_LICENSE(\\"GPL v2\\");\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c21\u884c\u8c03\u7528\u7684simple_strtoul\uff08\uff09\u7528\u4e8e\u5c06\u7528\u6237\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u65e0\u7b26\u53f7\u957f\u6574\u6570\uff0c\u7b2c3\u4e2a\u53c2\u657010\u610f\u5473\u7740\u8f6c\u5316\u65b9\u5f0f\u662f\u5341\u8fdb\u5236\u3002\\r\\n\\r\\n\u7f16\u8bd1\u4e0a\u8ff0\u7b80\u5355\u7684proc.c\u4e3aproc.ko\uff0c\u8fd0\u884cinsmod proc.ko\u52a0\u8f7d\u8be5\u6a21\u5757\u540e\uff0c\u201c/proc\u201d\u76ee\u5f55\u4e0b\u5c06\u591a\u51fa\u4e00\u4e2a\u76ee\u5f55test_dir\uff0c\u8be5\u76ee\u5f55\u4e0b\u5305\u542b\u4e00\u4e2atest_rw\uff0cls\u2013l\u7684\u7ed3\u679c\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n$ ls -l /proc/test_dir/test_rw\\r\\n-rw-rw-rw- 1 root root 0 Aug 16 20:45 /proc/test_dir/test_rw\\r\\n```\\r\\n\\r\\n\u6d4b\u8bd5/proc/test_dir/test_rw\u7684\u8bfb\u5199\uff1a\\r\\n\\r\\n```\\r\\n$ cat /proc/test_dir/test_rw\\r\\n0\\r\\n$ echo 111 > /proc/test_dir/test_rw\\r\\n$ cat /proc/test_dir/test_rw\\r\\n```\\r\\n\\r\\n\u8bf4\u660e\u6211\u4eec\u4e0a\u4e00\u6b65\u6267\u884c\u7684\u5199\u64cd\u4f5c\u662f\u6b63\u786e\u7684\u3002\\r\\n\\r\\n\u5728Linux 3.10\u53ca\u4ee5\u540e\u7684\u7248\u672c\u4e2d\uff0c\u201c/proc\u201d\u7684\u5185\u6838API\u548c\u5b9e\u73b0\u67b6\u6784\u53d8\u66f4\u8f83\u5927\uff0ccreate_proc_entry\uff08\uff09\u3001create_proc_read_entry\uff08\uff09\u4e4b\u7c7b\u7684API\u90fd\u88ab\u5220\u9664\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u76f4\u63a5\u4f7f\u7528proc_create\uff08\uff09\u3001proc_create_data\uff08\uff09API\u3002\u540c\u65f6\uff0c\u4e5f\u4e0d\u518d\u5b58\u5728read_proc\uff08\uff09\u3001write_proc\uff08\uff09\u4e4b\u7c7b\u7684\u9488\u5bf9proc_dir_entry\u7684\u6210\u5458\u51fd\u6570\u4e86\uff0c\u800c\u662f\u76f4\u63a5\u628afile_operations\u7ed3\u6784\u4f53\u7684\u6307\u9488\u4f20\u5165proc_create\uff08\uff09\u6216\u8005proc_create_data\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstatic inline struct proc_dir_entry *proc_create(\\r\\nconst char *name, umode_t mode, struct proc_dir_entry *parent,\\r\\nconst struct file_operations *proc_fops);\\r\\nstruct proc_dir_entry *proc_create_data(\\r\\nconst char *name, umode_t mode, struct proc_dir_entry *parent,\\r\\nconst struct file_operations *proc_fops, void *data);\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u628a\u4ee3\u7801\u6e05\u535521.6\u7684\u8303\u4f8b\u6539\u9020\u4e3a\u540c\u65f6\u652f\u6301Linux 3.10\u4ee5\u524d\u7684\u5185\u6838\u548cLinux3.10\u4ee5\u540e\u7684\u5185\u6838\u3002\u6539\u9020\u7ed3\u679c\u5982\u4ee3\u7801\u6e05\u535521.7\u6240\u793a\u3002#if LINUX_VERSION_CODE<KERNEL_VERSION\uff083\uff0c10\uff0c0\uff09\u4e2d\u7684\u90e8\u5206\u662f\u65e7\u7248\u672c\u7684\u4ee3\u7801\uff0c\u4e0e21.6\u76f8\u540c\uff0c\u6240\u4ee5\u7701\u7565\u4e86\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.7\u3000\u652f\u6301Linux 3.10\u4ee5\u540e\u5185\u6838\u7684/proc\u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1#include <linux/module.h>\\r\\n 2#include <linux/kernel.h>\\r\\n 3#include <linux/init.h>\\r\\n 4#include <linux/version.h>\\r\\n 5#include <linux/proc_fs.h>\\r\\n 6#include <linux/seq_file.h>\\r\\n 7\\r\\n 8static unsigned int variable;\\r\\n 9static struct proc_dir_entry *test_dir, *test_entry;\\r\\n10\\r\\n11#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 10, 0)\\r\\n12...\\r\\n13#else\\r\\n14static int test_proc_show(struct seq_file *seq, void *v)\\r\\n15{\\r\\n16 unsigned int *ptr_var = seq->private;\\r\\n17 seq_printf(seq, \\"%u\\\\n\\", *ptr_var);\\r\\n18 return 0;\\r\\n19}\\r\\n20\\r\\n21static ssize_t test_proc_write(struct file *file, const char __user *buffer,\\r\\n22      size_t count, loff_t *ppos)\\r\\n23{\\r\\n24 struct seq_file *seq = file->private_data;\\r\\n25 unsigned int *ptr_var = seq->private;\\r\\n26\\r\\n27 *ptr_var = simple_strtoul(buffer, NULL, 10);\\r\\n28 return count;\\r\\n29}\\r\\n30\\r\\n31static int test_proc_open(struct inode *inode, struct file *file)\\r\\n32{\\r\\n33 return single_open(file, test_proc_show, PDE_DATA(inode));\\r\\n34}\\r\\n35\\r\\n36static const struct file_operations test_proc_fops =\\r\\n37{\\r\\n38 .owner = THIS_MODULE,\\r\\n39 .open = test_proc_open,\\r\\n40 .read = seq_read,\\r\\n41 .write = test_proc_write,\\r\\n42 .llseek = seq_lseek,\\r\\n43 .release = single_release,\\r\\n44};\\r\\n45#endif\\r\\n46\\r\\n47static __init int test_proc_init(void)\\r\\n48{\\r\\n49 test_dir = proc_mkdir(\\"test_dir\\", NULL);\\r\\n50 if (test_dir) {\\r\\n51#if LINUX_VERSION_CODE < KERNEL_VERSION(3, 10, 0)\\r\\n52      ...\\r\\n53#else\\r\\n54 test_entry = proc_create_data(\\"test_rw\\",0666, test_dir, &test_proc_fops, &variable);\\r\\n55 if (test_entry)\\r\\n56     return 0;\\r\\n57#endif\\r\\n58 }\\r\\n59\\r\\n60 return -ENOMEM;\\r\\n61}\\r\\n62module_init(test_proc_init);\\r\\n63\\r\\n64static __exit void test_proc_cleanup(void)\\r\\n65{\\r\\n66 remove_proc_entry(\\"test_rw\\", test_dir);\\r\\n67 remove_proc_entry(\\"test_dir\\", NULL);\\r\\n68}\\r\\n69module_exit(test_proc_cleanup);\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3","description":"\u963b\u585e\u4e0e\u975e\u963b\u585e\u8bbf\u95ee\u662fI/O\u64cd\u4f5c\u7684\u4e24\u79cd\u4e0d\u540c\u6a21\u5f0f\uff0c\u524d\u8005\u5728\u6682\u65f6\u4e0d\u53ef\u8fdb\u884cI/O\u64cd\u4f5c\u65f6\u4f1a\u8ba9\u8fdb\u7a0b\u7761\u7720\uff0c\u540e\u8005\u5219\u4e0d\u7136\u3002","date":"2025-09-15T14:44:14.761Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.005,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.5\u3000\u4f7f\u7528\u201cproc\u201d"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9"}},"content":"\u963b\u585e\u4e0e\u975e\u963b\u585e\u8bbf\u95ee\u662fI/O\u64cd\u4f5c\u7684\u4e24\u79cd\u4e0d\u540c\u6a21\u5f0f\uff0c\u524d\u8005\u5728\u6682\u65f6\u4e0d\u53ef\u8fdb\u884cI/O\u64cd\u4f5c\u65f6\u4f1a\u8ba9\u8fdb\u7a0b\u7761\u7720\uff0c\u540e\u8005\u5219\u4e0d\u7136\u3002\\r\\n\\r\\n\u5728\u8bbe\u5907\u9a71\u52a8\u4e2d\u963b\u585eI/O\u4e00\u822c\u57fa\u4e8e\u7b49\u5f85\u961f\u5217\u6216\u8005\u57fa\u4e8e\u7b49\u5f85\u961f\u5217\u7684\u5176\u4ed6Linux\u5185\u6838API\u6765\u5b9e\u73b0\uff0c\u7b49\u5f85\u961f\u5217\u53ef\u7528\u4e8e\u540c\u6b65\u9a71\u52a8\u4e2d\u4e8b\u4ef6\u53d1\u751f\u7684\u5148\u540e\u987a\u5e8f\u3002\u4f7f\u7528\u975e\u963b\u585eI/O\u7684\u5e94\u7528\u7a0b\u5e8f\u4e5f\u53ef\u501f\u52a9\u8f6e\u8be2\u51fd\u6570\u6765\u67e5\u8be2\u8bbe\u5907\u662f\u5426\u80fd\u7acb\u5373\u88ab\u8bbf\u95ee\uff0c\u7528\u6237\u7a7a\u95f4\u8c03\u7528select\uff08\uff09\u3001poll\uff08\uff09\u6216\u8005epoll\u63a5\u53e3\uff0c\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9bpoll\uff08\uff09\u51fd\u6570\u3002\u8bbe\u5907\u9a71\u52a8\u7684poll\uff08\uff09\u672c\u8eab\u4e0d\u4f1a\u963b\u585e\uff0c\u4f46\u662f\u4e0epoll\uff08\uff09\u3001select\uff08\uff09\u548cepoll\u76f8\u5173\u7684\u7cfb\u7edf\u8c03\u7528\u5219\u4f1a\u963b\u585e\u5730\u7b49\u5f85\u81f3\u5c11\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u53ef\u8bbf\u95ee\u6216\u8d85\u65f6\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9","description":"\u5b57\u7b26\u8bbe\u5907\u4e0e\u5757\u8bbe\u5907I/O\u64cd\u4f5c\u7684\u4e0d\u540c\u5982\u4e0b\u3002","date":"2025-09-15T14:44:14.749Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.06,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.4\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b"}},"content":"\u5b57\u7b26\u8bbe\u5907\u4e0e\u5757\u8bbe\u5907I/O\u64cd\u4f5c\u7684\u4e0d\u540c\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u5757\u8bbe\u5907\u53ea\u80fd\u4ee5\u5757\u4e3a\u5355\u4f4d\u63a5\u6536\u8f93\u5165\u548c\u8fd4\u56de\u8f93\u51fa\uff0c\u800c\u5b57\u7b26\u8bbe\u5907\u5219\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\u5927\u591a\u6570\u8bbe\u5907\u662f\u5b57\u7b26\u8bbe\u5907\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u9700\u8981\u7f13\u51b2\u800c\u4e14\u4e0d\u4ee5\u56fa\u5b9a\u5757\u5927\u5c0f\u8fdb\u884c\u64cd\u4f5c\u3002\\r\\n\\r\\n2\uff09\u5757\u8bbe\u5907\u5bf9\u4e8eI/O\u8bf7\u6c42\u6709\u5bf9\u5e94\u7684\u7f13\u51b2\u533a\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u4ee5\u9009\u62e9\u4ee5\u4ec0\u4e48\u987a\u5e8f\u8fdb\u884c\u54cd\u5e94\uff0c\u5b57\u7b26\u8bbe\u5907\u65e0\u987b\u7f13\u51b2\u4e14\u88ab\u76f4\u63a5\u8bfb\u5199\u3002\u5bf9\u4e8e\u5b58\u50a8\u8bbe\u5907\u800c\u8a00\uff0c\u8c03\u6574\u8bfb\u5199\u7684\u987a\u5e8f\u4f5c\u7528\u5de8\u5927\uff0c\u56e0\u4e3a\u5728\u8bfb\u5199\u8fde\u7eed\u7684\u6247\u533a\u7684\u5b58\u50a8\u901f\u5ea6\u6bd4\u5206\u79bb\u7684\u6247\u533a\u66f4\u5feb\u3002\\r\\n\\r\\n3\uff09\u5b57\u7b26\u8bbe\u5907\u53ea\u80fd\u88ab\u987a\u5e8f\u8bfb\u5199\uff0c\u800c\u5757\u8bbe\u5907\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\u3002\\r\\n\\r\\n\u867d\u7136\u5757\u8bbe\u5907\u53ef\u968f\u673a\u8bbf\u95ee\uff0c\u4f46\u662f\u5bf9\u4e8e\u78c1\u76d8\u8fd9\u7c7b\u673a\u68b0\u8bbe\u5907\u800c\u8a00\uff0c\u987a\u5e8f\u5730\u7ec4\u7ec7\u5757\u8bbe\u5907\u7684\u8bbf\u95ee\u53ef\u4ee5\u63d0\u9ad8\u6027\u80fd\uff0c\u5982\u56fe13.1\u6240\u793a\uff0c\u5bf9\u6247\u533a1\u300110\u30013\u30012\u7684\u8bf7\u6c42\u88ab\u8c03\u6574\u4e3a\u5bf9\u6247\u533a1\u30012\u30013\u300110\u7684\u8bf7\u6c42\u3002\\r\\n\\r\\n\u5728Linux\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u901a\u8fc7\u78c1\u76d8\u6587\u4ef6\u7cfb\u7edfEXT4\u3001UBIFS\u7b49\u8bbf\u95ee\u78c1\u76d8\uff0c\u4f46\u662f\u78c1\u76d8\u4e5f\u6709\u4e00\u79cd\u539f\u59cb\u8bbe\u5907\u7684\u8bbf\u95ee\u65b9\u5f0f\uff0c\u5982\u76f4\u63a5\u8bbf\u95ee/dev/sdb1\u7b49\u3002\u6240\u6709\u7684EXT4\u3001UBIFS\u3001\u539f\u59cb\u5757\u8bbe\u5907\u53c8\u90fd\u5de5\u4f5c\u4e8eVFS\u4e4b\u4e0b\uff0c\u800cEXT4\u3001UBIFS\u3001\u539f\u59cb\u5757\u8bbe\u5907\u4e4b\u4e0b\u53c8\u5305\u542b\u5757I/O\u8c03\u5ea6\u5c42\u4ee5\u8fdb\u884c\u6392\u5e8f\u548c\u5408\u5e76\uff08\u89c1\u56fe13.2\uff09\u3002\\r\\n\\r\\n![1744296926021](./figure/1744296926021.png)\\r\\n\\r\\n\u56fe13.1\u3000\u8c03\u6574\u5757\u8bbe\u5907I/O\u64cd\u4f5c\u7684\u987a\u5e8f\\r\\n\\r\\n![1744296945055](./figure/1744296945055.png)\\r\\n\\r\\n\u56fe13.2\u3000Linux\u5757\u8bbe\u5907\u5b50\u7cfb\u7edf\\r\\n\\r\\nI/O\u8c03\u5ea6\u5c42\u7684\u57fa\u672c\u76ee\u7684\u662f\u5c06\u8bf7\u6c42\u6309\u7167\u5b83\u4eec\u5bf9\u5e94\u5728\u5757\u8bbe\u5907\u4e0a\u7684\u6247\u533a\u53f7\u8fdb\u884c\u6392\u5217\uff0c\u4ee5\u51cf\u5c11\u78c1\u5934\u7684\u79fb\u52a8\uff0c\u63d0\u9ad8\u6548\u7387\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b","description":"drivers/misc/eeprom/at24.c\u6587\u4ef6\u652f\u6301\u5927\u591a\u6570I2 C\u63a5\u53e3\u7684EEPROM\uff0c\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8ff0\uff0c\u4e00\u4e2a\u5177\u4f53\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u7531i2cdriver\u7684\u5f62\u5f0f\u8fdb\u884c\u7ec4\u7ec7\uff0c\u7528\u4e8e\u5c06\u8bbe\u5907\u6302\u63a5\u4e8eI2 C\u603b\u7ebf\uff0c\u7ec4\u7ec7\u597d\u4e86\u540e\uff0c\u518d\u5b8c\u6210\u8bbe\u5907\u672c\u8eab\u6240\u5c5e\u7c7b\u578b\u7684\u9a71\u52a8\u3002\u5bf9\u4e8eEEPROM\u800c\u8a00\uff0c\u8bbe\u5907\u672c\u8eab\u7684\u9a71\u52a8\u4ee5binattribute\u4e8c\u8fdb\u5236sysfs\u8282\u70b9\u5f62\u5f0f\u5448\u73b0\u3002\u4ee3\u7801\u6e05\u535515.25\u7ed9\u51fa\u4e86\u8be5\u9a71\u52a8\u7684\u6846\u67b6\u3002","date":"2025-09-15T14:44:14.729Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.645,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.1\u3000\u5757\u8bbe\u5907\u7684IO\u64cd\u4f5c\u7279\u70b9"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4"}},"content":"drivers/misc/eeprom/at24.c\u6587\u4ef6\u652f\u6301\u5927\u591a\u6570I2 C\u63a5\u53e3\u7684EEPROM\uff0c\u6b63\u5982\u6211\u4eec\u4e4b\u524d\u6240\u8ff0\uff0c\u4e00\u4e2a\u5177\u4f53\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u7531i2c_driver\u7684\u5f62\u5f0f\u8fdb\u884c\u7ec4\u7ec7\uff0c\u7528\u4e8e\u5c06\u8bbe\u5907\u6302\u63a5\u4e8eI2 C\u603b\u7ebf\uff0c\u7ec4\u7ec7\u597d\u4e86\u540e\uff0c\u518d\u5b8c\u6210\u8bbe\u5907\u672c\u8eab\u6240\u5c5e\u7c7b\u578b\u7684\u9a71\u52a8\u3002\u5bf9\u4e8eEEPROM\u800c\u8a00\uff0c\u8bbe\u5907\u672c\u8eab\u7684\u9a71\u52a8\u4ee5bin_attribute\u4e8c\u8fdb\u5236sysfs\u8282\u70b9\u5f62\u5f0f\u5448\u73b0\u3002\u4ee3\u7801\u6e05\u535515.25\u7ed9\u51fa\u4e86\u8be5\u9a71\u52a8\u7684\u6846\u67b6\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.25\u3000AT24xx EEPROM\u9a71\u52a8\\r\\n\\r\\n```\\r\\n 1struct at24_data {\\r\\n 2          struct at24_platform_data chip;\\r\\n 3          ...\\r\\n 4          struct bin_attribute bin;\\r\\n 5          ...\\r\\n 6};\\r\\n 7\\r\\n 8static const struct i2c_device_id at24_ids[] = {\\r\\n 9          /* needs 8 addresses as A0-A2 are ignored */\\r\\n10          { \\"24c00\\", AT24_DEVICE_MAGIC(128 / 8, AT24_FLAG_TAKE8ADDR) },\\r\\n11          /* old variants can\'t be handled with this generic entry! */\\r\\n12          { \\"24c01\\", AT24_DEVICE_MAGIC(1024 / 8, 0) },\\r\\n13          { \\"24c02\\", AT24_DEVICE_MAGIC(2048 / 8, 0) },\\r\\n14          ...\\r\\n15          { /* END OF LIST */ }\\r\\n16};\\r\\n17MODULE_DEVICE_TABLE(i2c, at24_ids);\\r\\n18\\r\\n19static ssize_t at24_eeprom_read(struct at24_data *at24, char *buf,\\r\\n20                  unsigned offset, size_t count)\\r\\n21{\\r\\n22          struct i2c_msg msg[2];\\r\\n23          ...\\r\\n24          i2c_transfer(client->adapter, msg, 2);\\r\\n25          ...\\r\\n26}\\r\\n27\\r\\n28static ssize_t at24_read(struct at24_data *at24,\\r\\n29                  char *buf, loff_t off, size_t count)\\r\\n30{\\r\\n31          ...\\r\\n32\\r\\n33          status = at24_eeprom_read(at24, buf, off, count);\\r\\n34          ...\\r\\n35\\r\\n36          return retval;\\r\\n37 }\\r\\n38\\r\\n39static ssize_t at24_bin_read(struct file *filp, struct kobject *kobj,\\r\\n40                  struct bin_attribute *attr,\\r\\n41                  char *buf, loff_t off, size_t count)\\r\\n42{\\r\\n43          struct at24_data *at24;\\r\\n44\\r\\n45          at24 = dev_get_drvdata(container_of(kobj, struct device, kobj));\\r\\n46          return at24_read(at24, buf, off, count);\\r\\n47}\\r\\n48\\r\\n49\u2026\\r\\n\\r\\n\\r\\n\\r\\n50\\r\\n51static int at24_probe(struct i2c_client *client, const struct i2c_device_id *id)\\r\\n52{\\r\\n53          ...\\r\\n54          sysfs_bin_attr_init(&at24->bin);\\r\\n55          at24->bin.attr.name = \\"eeprom\\";\\r\\n56          at24->bin.attr.mode = chip.flags & AT24_FLAG_IRUGO   S_IRUGO : S_IRUSR;\\r\\n57          at24->bin.read = at24_bin_read;\\r\\n58          at24->bin.size = chip.byte_len;\\r\\n59\\r\\n60          ...\\r\\n61          return err;\\r\\n62}\\r\\n63\\r\\n64static int at24_remove(struct i2c_client *client)\\r\\n65{\\r\\n66          ...\\r\\n67          sysfs_remove_bin_file(&client->dev.kobj, &at24->bin);\\r\\n68          ...\\r\\n69\\r\\n70          return 0;\\r\\n71}\\r\\n72\\r\\n73static struct i2c_driver at24_driver = {\\r\\n74          .driver = {\\r\\n75                  .name = \\"at24\\",\\r\\n76                  .owner = THIS_MODULE,\\r\\n77          },\\r\\n78          .probe = at24_probe,\\r\\n79          .remove = at24_remove,\\r\\n80          .id_table = at24_ids,\\r\\n81};\\r\\n82\\r\\n83static int __init at24_init(void)\\r\\n84{\\r\\n85          ...\\r\\n86          return i2c_add_driver(&at24_driver);\\r\\n87}\\r\\n88module_init(at24_init);\\r\\n89\\r\\n90static void __exit at24_exit(void)\\r\\n91{\\r\\n92          i2c_del_driver(&at24_driver);\\r\\n93}\\r\\n94module_exit(at24_exit);\\r\\n```\\r\\n\\r\\ndrivers/misc/eeprom/at24.c\u4e0d\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684CPU\u548cI2 C\u63a7\u5236\u5668\u7684\u786c\u4ef6\u7279\u6027\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u67d0\u4e00\u7535\u8def\u677f\u5305\u542b\u8be5\u5916\u8bbe\uff0c\u53ea\u9700\u8981\u5728\u677f\u7ea7\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5bf9\u5e94\u7684i2c_board_info\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nstatic struct i2c_board_info i2c_devs0[] __initdata = {\\r\\n     { I2C_BOARD_INFO(\\"24c02\\", 0x57), },\\r\\n};\\r\\n```\\r\\n\\r\\n\u5728\u652f\u6301\u8bbe\u5907\u6811\u7684\u60c5\u51b5\u4e0b\uff0c\u7b80\u5355\u5730\u5728.dts\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\u5373\u53ef\uff1a\\r\\n\\r\\n```\\r\\ni2c@11000 {\\r\\n       status = \\"okay\\";\\r\\n       \u2026\\r\\n       eeprom@57 {\\r\\n               compatible = \\"atmel,24c02\\";\\r\\n               reg = <0x57>;\\r\\n       };\\r\\n};\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4","description":"Linux CPU\u70ed\u63d2\u62d4\u7684\u529f\u80fd\u5df2\u7ecf\u5b58\u5728\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u4e86\uff0cLinux 3.8\u4e4b\u540e\u7684\u5185\u6838\u91cc\u4e00\u4e2a\u5c0f\u5c0f\u7684\u6539\u8fdb\u5c31\u662fCPU0\u4e5f\u53ef\u4ee5\u70ed\u63d2\u62d4\u3002","date":"2025-09-15T14:44:14.721Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":8.52,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.6\u3000AT24xx EEPROM\u7684I2 C\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177"}},"content":"Linux CPU\u70ed\u63d2\u62d4\u7684\u529f\u80fd\u5df2\u7ecf\u5b58\u5728\u76f8\u5f53\u957f\u7684\u65f6\u95f4\u4e86\uff0cLinux 3.8\u4e4b\u540e\u7684\u5185\u6838\u91cc\u4e00\u4e2a\u5c0f\u5c0f\u7684\u6539\u8fdb\u5c31\u662fCPU0\u4e5f\u53ef\u4ee5\u70ed\u63d2\u62d4\u3002\\r\\n\\r\\n\u4e00\u822c\u6765\u8bb2\uff0c\u5728\u7528\u6237\u7a7a\u95f4\u53ef\u4ee5\u901a\u8fc7/sys/devices/system/cpu/cpun/online\u8282\u70b9\u6765\u64cd\u4f5c\u4e00\u4e2aCPU\u7684\u5728\u7ebf\u548c\u79bb\u7ebf\uff1a\\r\\n\\r\\n```\\r\\n# echo 0>/sys/devices/system/cpu/cpu3/online\\r\\nCPU 3 is now offline\\r\\n# echo1 >/sys/devices/system/cpu/cpu3/online\\r\\n```\\r\\n\\r\\n\u901a\u8fc7echo0>/sys/devices/system/cpu/cpu3/online\u5173\u95edCPU3\u7684\u65f6\u5019\uff0cCPU3\u4e0a\u7684\u8fdb\u7a0b\u90fd\u4f1a\u88ab\u8fc1\u79fb\u5230\u5176\u4ed6\u7684CPU\u4e0a\uff0c\u4ee5\u4fdd\u8bc1\u8fd9\u4e2a\u62d4\u9664CPU3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u4ecd\u7136\u80fd\u6b63\u5e38\u8fd0\u884c\u3002\u4e00\u65e6\u901a\u8fc7echo 1>/sys/devices/system/cpu/cpu3/online\u518d\u6b21\u5f00\u542fCPU3\uff0cCPU3\u53c8\u53ef\u4ee5\u53c2\u4e0e\u7cfb\u7edf\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u5206\u62c5\u7cfb\u7edf\u4e2d\u7684\u4efb\u52a1\u3002\\r\\n\\r\\n\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0cCPU\u70ed\u63d2\u62d4\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u7701\u7535\u7684\u65b9\u5f0f\uff0c\u5728\u7cfb\u7edf\u8d1f\u8f7d\u5c0f\u7684\u65f6\u5019\uff0c\u52a8\u6001\u5173\u95edCPU\uff0c\u5728\u7cfb\u7edf\u8d1f\u8f7d\u589e\u5927\u7684\u65f6\u5019\uff0c\u518d\u5f00\u542f\u4e4b\u524d\u79bb\u7ebf\u7684CPU\u3002\u76ee\u524d\u5404\u4e2a\u82af\u7247\u516c\u53f8\u53ef\u80fd\u4f1a\u6839\u636e\u81ea\u8eabSoC\u7684\u7279\u70b9\uff0c\u5bf9\u5185\u6838\u8fdb\u884c\u8c03\u6574\uff0c\u6765\u5b9e\u73b0\u8fd0\u884c\u65f6\u201c\u70ed\u63d2\u62d4\u201d\u3002\u8fd9\u91cc\u4ee5Nvidia\u7684Tegra3\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e\u3002\\r\\n\\r\\nTegra3\u91c7\u7528vSMP\uff08variableSymmetric Multiprocessing\uff09\u67b6\u6784\uff0c\u5171\u67095\u4e2aCortex-A9\u5904\u7406\u5668\uff0c\u5176\u4e2d4\u4e2a\u4e3a\u9ad8\u6027\u80fd\u8bbe\u8ba1\u7684G\u6838\uff0c1\u4e2a\u4e3a\u4f4e\u529f\u8017\u8bbe\u8ba1\u7684LP\u6838\uff0c\u5982\u56fe19.7\u6240\u793a\u3002\\r\\n\\r\\n![1746974605116](./figure/1746974605116.png)\\r\\n\\r\\n\u56fe19.7\u3000Tegra3\u7684\u67b6\u6784\\r\\n\\r\\n\u5728\u7cfb\u7edf\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0cTegra3\u7684Linux\u5185\u6838\u4f1a\u6839\u636eCPU\u8d1f\u8f7d\u5207\u6362\u4f4e\u529f\u8017\u5904\u7406\u5668\u548c\u9ad8\u529f\u8017\u5904\u7406\u5668\u3002\u9664\u6b64\u4e4b\u5916\uff0c4\u4e2a\u9ad8\u6027\u80fdARM\u6838\u5fc3\u4e5f\u4f1a\u6839\u636e\u8fd0\u884c\u60c5\u51b5\uff0c\u52a8\u6001\u501f\u7528Linux\u5185\u6838\u652f\u6301\u7684CPU\u70ed\u63d2\u62d4\u8fdb\u884cCPU\u7684\u63d2\u5165/\u62d4\u51fa\u64cd\u4f5c\u3002\\r\\n\\r\\n\u7528\u534e\u7855EeePad\u8fd0\u884c\u9ad8\u8d1f\u8f7d\u3001\u4f4e\u8d1f\u8f7d\u5e94\u7528\uff0c\u901a\u8fc7dmesg\u67e5\u770b\u5185\u6838\u6d88\u606f\u4e5f\u786e\u5b9e\u9a8c\u8bc1\u4e86\u591a\u6838\u7684\u70ed\u63d2\u62d4\u4ee5\u53caG\u6838\u548cLP\u6838\u4e4b\u95f4\u7684\u52a8\u6001\u5207\u6362\uff1a\\r\\n\\r\\n```\\r\\n<4>[104626.426957] CPU1: Booted secondary processor\\r\\n<7>[104627.427412] tegra CPU: force EDP limit 720000 kHz\\r\\n<4>[104627.427670] CPU2: Booted secondary processor\\r\\n<4>[104628.537005] stop_machine_cpu_stop cpu=0\\r\\n<4>[104628.537017] stop_machine_cpu_stop cpu=2\\r\\n<4>[104628.537059] stop_machine_cpu_stop cpu=1\\r\\n<4>[104628.537702] __stop_cpus: wait_for_completion_timeout+\\r\\n<4>[104628.537810] __stop_cpus: smp=0 done.executed=1 done.ret =0-\\r\\n<5>[104628.537960] CPU1: clean shutdown\\r\\n<4>[104630.537092] stop_machine_cpu_stop cpu=0\\r\\n<4>[104630.537172] stop_machine_cpu_stop cpu=2\\r\\n<4>[104630.537739] __stop_cpus: wait_for_completion_timeout+\\r\\n<4>[104630.538060] __stop_cpus: smp=0 done.executed=1 done.ret =0-\\r\\n<5>[104630.538203] CPU2: clean shutdown\\r\\n<4>[104631.306984] tegra_watchdog_touch\\r\\n```\\r\\n\\r\\n\u9ad8\u6027\u80fd\u5904\u7406\u5668\u548c\u4f4e\u529f\u8017\u5904\u7406\u5668\u5207\u6362\uff1a\\r\\n\\r\\n```\\r\\n<3>[104666.799152] LP=>G: prolog 22 us, switch 2129 us, epilog 24 us, total 2175 us\\r\\n<3>[104667.807273] G=>LP: prolog 18 us, switch 157 us, epilog 25 us, total 200 us\\r\\n<4>[104671.407008] tegra_watchdog_touch\\r\\n<4>[104671.408816] nct1008_get_temp: ret temp=35C\\r\\n<3>[104671.939060] LP=>G: prolog 17 us, switch 2127 us, epilog 22 us, total 2166 us\\r\\n<3>[104672.938091] G=>LP: prolog 18 us, switch 156 us, epilog 24 us, total 198 us\\r\\n```\\r\\n\\r\\n\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53d1\u73b04\u4e2aG\u6838\u4f1a\u52a8\u6001\u70ed\u63d2\u62d4\uff0c\u800c4\u4e2aG\u6838\u548c1\u4e2aLP\u6838\u4e4b\u95f4\uff0c\u4f1a\u6839\u636e\u8fd0\u884c\u8d1f\u8f7d\u8fdb\u884c\u96c6\u7fa4\u5207\u6362\u3002\u8fd9\u4e00\u90e8\u5206\u90fd\u662f\u5728\u5185\u6838\u91cc\u9762\u5b9e\u73b0\u7684\uff0c\u548ctegra\u7684CPUF req\u9a71\u52a8\uff08DVFS\u9a71\u52a8\uff09\u7d27\u5bc6\u5173\u8054\u3002\u76f8\u5173\u4ee3\u7801\u53ef\u89c1\u4e8ehttp://nv-tegra.nvidia.com/gitweb/?p=linux-2.6.git;a=tree;f=arch/arm/mach-tegra;h=e5d1ff2;hb=rel-14r7\\r\\n\\r\\n# 1.\u5982\u4f55\u5224\u65ad\u81ea\u5df1\u662f\u4ec0\u4e48\u6838\\r\\n\\r\\n\u6bcf\u4e2a\u6838\u90fd\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528is_lp_cluster\uff08\uff09\u6765\u5224\u65ad\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684CPU\u662fLP\u8fd8\u662fG\u5904\u7406\u5668\uff1a\\r\\n\\r\\n```\\r\\nstatic inline unsigned int is_lp_cluster(void)\\r\\n{\\r\\n        unsigned int reg;\\r\\n        reg =readl(FLOW_CTRL_CLUSTER_CONTROL);\\r\\n        return (reg& 1); /* 0 == G, 1 == LP */\\r\\n}\\r\\n```\\r\\n\\r\\n\u5373\u8bfbFLOW_CTRL_CLUSTER_CONTROL\u5bc4\u5b58\u5668\u5224\u65ad\u81ea\u5df1\u662fG\u6838\u8fd8\u662fLP\u6838\u3002\\r\\n\\r\\n# 2.G\u6838\u548cLP\u6838\u96c6\u7fa4\u7684\u5207\u6362\u65f6\u673a\\r\\n\\r\\n\uff3b\u573a\u666f1\uff3d\u4f55\u65f6\u4eceLP\u6838\u5207\u6362\u7ed9G\u6838\uff1a\u5f53\u524d\u6267\u884c\u4e8eLP\u96c6\u7fa4\uff0cCPUFreq\u9a71\u52a8\u5224\u65ad\u51faLP\u6838\u9700\u8981\u589e\u9891\u7387\u5230\u8d85\u8fc7\u9ad8\u503c\u95e8\u9650\uff0c\u5373TEGRA_HP_UP\uff1a\\r\\n\\r\\n```\\r\\ncaseTEGRA_HP_UP:\\r\\n        if(is_lp_cluster() && !no_lp) {\\r\\n               if(!clk_set_parent(cpu_clk, cpu_g_clk)) {\\r\\n                       hp_stats_update(CONFIG_NR_CPUS, false);\\r\\n                       hp_stats_update(0, true);\\r\\n                        /* catch-upwith governor target speed */\\r\\n                       tegra_cpu_set_speed_cap(NULL);\\r\\n               }\\r\\n```\\r\\n\\r\\n\uff3b\u573a\u666f2\uff3d\u4f55\u65f6\u4eceG\u6838\u5207\u6362\u7ed9LP\u6838\uff1a\u5f53\u524d\u6267\u884c\u4e8eG\u96c6\u7fa4\uff0cCPUFreq\u9a71\u52a8\u5224\u65ad\u51fa\u67d0G\u6838\u9700\u8981\u964d\u9891\u7387\u5230\u4f4e\u4e8e\u4f4e\u503c\u95e8\u9650\uff0c\u5373TEGRA_HP_DOWN\uff0c\u4e14\u6700\u6162\u7684CPUID\u4e0d\u5c0f\u4e8enr_cpu_ids\uff08\u5b9e\u9645\u4e0a\u4ee3\u7801\u903b\u8f91\u8ddf\u8e2a\u7b49\u4ef7\u4e8e\u53ea\u6709CPU0\u8fd8\u6d3b\u7740\u7684\u60c5\u51b5\uff09\uff1a\\r\\n\\r\\n```\\r\\ncaseTEGRA_HP_DOWN:\\r\\n        cpu= tegra_get_slowest_cpu_n();\\r\\n        if(cpu < nr_cpu_ids) {\\r\\n               ...\\r\\n        }else if(!is_lp_cluster() && !no_lp) {\\r\\n               if(!clk_set_parent(cpu_clk, cpu_lp_clk)) {\\r\\n                       hp_stats_update(CONFIG_NR_CPUS, true);\\r\\n                       hp_stats_update(0, false);\\r\\n                        /* catch-upwith governor target speed */\\r\\n                       tegra_cpu_set_speed_cap(NULL);\\r\\n               } else\\r\\n                       queue_delayed_work(\\r\\n                               hotplug_wq, &hotplug_work, down_delay);\\r\\n       }\\r\\n       break;\\r\\n```\\r\\n\\r\\n\u5207\u6362\u5b9e\u9645\u4e0a\u5c31\u53d1\u751f\u5728clk_set_parent\uff08\uff09\u66f4\u6539CPU\u7684\u7236\u65f6\u949f\u91cc\u9762\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u5199\u5f97\u6bd4\u8f83\u4e0d\u597d\uff0c1\u4e2a\u51fd\u6570\u5b8c\u6210n\u4e2a\u529f\u80fd\uff0c\u5b9e\u9645\u4e0a\u4e0d\u4ec5\u5207\u6362\u4e86\u65f6\u949f\uff0c\u8fd8\u5207\u6362\u4e86G\u548cLP\u96c6\u7fa4\uff1a\\r\\n\\r\\n```\\r\\nclk_set_parent(cpu_clk, cpu_lp_clk) ->\\r\\n         tegra3_cpu_cmplx_clk_set_parent(structclk *c, struct clk *p) ->\\r\\n                   tegra_cluster_control(unsigned int us, unsigned int flags) ->\\r\\n                            tegra_cluster_switch_prolog()->\\r\\ntegra_cluster_switch_epilog()\\r\\n```\\r\\n\\r\\n# 3.G\u6838\u52a8\u6001\u70ed\u63d2\u62d4\\r\\n\\r\\n\u4f55\u65f6\u8fdb\u884cG\u6838\u7684\u52a8\u6001\u63d2\u62d4\uff0c\u5177\u4f53\u5982\u4e0b\u3002\\r\\n\\r\\n\uff3b\u573a\u666f3\uff3d\u5f53\u524d\u6267\u884c\u4e8eG\u96c6\u7fa4\uff0cCPUFreq\u9a71\u52a8\u5224\u65ad\u51fa\u67d0G\u6838\u9700\u8981\u964d\u9891\u7387\u5230\u4f4e\u4e8e\u4f4e\u503c\u95e8\u9650\uff0c\u5373TEGRA_HP_DOWN\uff0c\u4e14\u6700\u6162\u7684CPUID\u5c0f\u4e8enr_cpu_ids\uff08\u5b9e\u9645\u4e0a\u7b49\u4ef7\u4e8e\u8fd8\u6709\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684G\u6838\u6d3b\u7740\u7684\u60c5\u51b5\uff09\uff0c\u5173\u95ed\u6700\u6162\u7684CPU\uff0c\u7559\u610ftegra_get_slowest_cpu_n\uff08\uff09\u4e0d\u4f1a\u8fd4\u56de0\uff0c\u8fd9\u610f\u5473\u7740CPU0\u8981\u4e48\u6d3b\u7740\uff0c\u8981\u4e48\u5207\u6362\u7ed9\u4e86LP\u6838\uff0c\u5bf9\u5e94\u4e8e\uff3b\u573a\u666f2\uff3d\uff1a\\r\\n\\r\\n```\\r\\ncaseTEGRA_HP_DOWN:\\r\\n        cpu= tegra_get_slowest_cpu_n();\\r\\n        if(cpu < nr_cpu_ids) {\\r\\n               up = false;\\r\\n               queue_delayed_work(\\r\\n                        hotplug_wq,&hotplug_work, down_delay);\\r\\n               hp_stats_update(cpu, false);\\r\\n        }\\r\\n```\\r\\n\\r\\n\uff3b\u573a\u666f4\uff3d\u5f53\u524d\u6267\u884c\u4e8eG\u96c6\u7fa4\uff0cCPUFreq\u9a71\u52a8\u5224\u65ad\u51fa\u67d0G\u6838\u9700\u8981\u8bbe\u7f6e\u9891\u7387\u5927\u4e8e\u9ad8\u503c\u95e8\u9650\uff0c\u5373TEGRA_HP_UP\uff0c\u5982\u679c\u8d1f\u8f7d\u5e73\u8861\u72b6\u6001\u4e3aTEGRA_CPU_SPEED_BALANCED\uff0c\u518d\u5f00\u4e00\u4e2a\u6838\uff1b\u5982\u679c\u72b6\u6001\u4e3aTEGRA_CPU_SPEED_SKEWED\uff0c\u5219\u5173\u4e00\u4e2a\u6838\u3002TEGRA_CPU_SPEED_BALANCED\u7684\u542b\u4e49\u662f\u5f53\u524d\u6240\u6709G\u6838\u8981\u6c42\u7684\u9891\u7387\u90fd\u9ad8\u4e8e\u6700\u9ad8\u9891\u7387\u768450%\uff0cTEGRA_CPU_SPEED_SKEWED\u7684\u542b\u4e49\u662f\u5f53\u524d\u81f3\u5c11\u6709\u4e24\u4e2aG\u6838\u8981\u6c42\u7684\u9891\u7387\u4f4e\u4e8e\u95e8\u9650\u768425%\uff0c\u5373CPU\u9891\u7387\u7684\u8981\u6c42\u5728\u5404\u4e2a\u6838\u4e4b\u95f4\u6709\u503e\u659c\u3002\\r\\n\\r\\n```\\r\\ncaseTEGRA_HP_UP:\\r\\n        if(is_lp_cluster() && !no_lp) {\\r\\n                ...\\r\\n        }else {\\r\\n               switch (tegra_cpu_speed_balance()) {\\r\\n               /* cpu speed is up and balanced - one more on-line */\\r\\n               case TEGRA_CPU_SPEED_BALANCED:\\r\\n                       cpu =cpumask_next_zero(0, cpu_online_mask);\\r\\n                        if(cpu <nr_cpu_ids) {\\r\\n                                up =true;\\r\\n                               hp_stats_update(cpu, true);\\r\\n                       }\\r\\n                        break;\\r\\n               /* cpu speed is up, but skewed - remove one core */\\r\\n               case TEGRA_CPU_SPEED_SKEWED:\\r\\n                        cpu =tegra_get_slowest_cpu_n();\\r\\n                        if(cpu < nr_cpu_ids) {\\r\\n                                up =false;\\r\\n                               hp_stats_update(cpu, false);\\r\\n                        }\\r\\n                        break;\\r\\n               /* cpu speed is up, butunder-utilized - do nothing */\\r\\n               case TEGRA_CPU_SPEED_BIASED:\\r\\n               default:\\r\\n                        break;\\r\\n               }\\r\\n        }\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2dTEGRA_CPU_SPEED_BIASED\u8def\u5f84\u7684\u542b\u4e49\u662f\u67091\u4e2a\u4ee5\u4e0aG\u6838\u7684\u9891\u7387\u4f4e\u4e8e\u6700\u9ad8\u9891\u7387\u768450%\u4f46\u662f\u8fd8\u672a\u5f62\u6210\u201cSKEWED\u201d\u6761\u4ef6\uff0c\u5373\u53ea\u662f\u201cBIASED\u201d\uff0c\u8fd8\u6ca1\u6709\u8fbe\u5230\u201cSKEWED\u201d\u7684\u7a0b\u5ea6\uff0c\u56e0\u6b64\u6682\u65f6\u4ec0\u4e48\u90fd\u4e0d\u505a\u3002\\r\\n\\r\\n\u76ee\u524d\uff0cARM\u548cLinux\u793e\u533a\u90fd\u5728\u4ece\u4e8b\u5173\u4e8ebig.LITTLE\u67b6\u6784\u4e0b\uff0cCPU\u70ed\u63d2\u62d4\u4ee5\u53ca\u8c03\u5ea6\u5668\u65b9\u9762\u6709\u9488\u5bf9\u6027\u7684\u6539\u8fdb\u5de5\u4f5c\u3002\u5728big.LITTLE\u67b6\u6784\u4e2d\uff0c\u5c06\u9ad8\u6027\u80fd\u4e14\u529f\u8017\u4e5f\u8f83\u9ad8\u7684Cortex-A15\u548c\u7a0d\u4f4e\u6027\u80fd\u4e14\u529f\u8017\u4f4e\u7684Cortex-A7\u8fdb\u884c\u4e86\u7ed3\u5408\uff0c\u6216\u8005\u572864\u4f4d\u4e0b\uff0c\u8fdb\u884cCortex-A57\u548cCortex-A53\u7684\u7ec4\u5408\uff0c\u5982\u56fe19.8\u6240\u793a\u3002\\r\\n\\r\\nbig.LITTLE\u67b6\u6784\u7684\u8bbe\u8ba1\u65e8\u5728\u4e3a\u9002\u5f53\u7684\u4f5c\u4e1a\u5206\u914d\u6070\u5f53\u7684\u5904\u7406\u5668\u3002Cortex-A15\u5904\u7406\u5668\u662f\u76ee\u524d\u5df2\u5f00\u53d1\u7684\u6027\u80fd\u6700\u9ad8\u7684\u4f4e\u529f\u8017ARM\u5904\u7406\u5668\uff0c\u800cCortex-A7\u5904\u7406\u5668\u662f\u76ee\u524d\u5df2\u5f00\u53d1\u7684\u6700\u8282\u80fd\u7684ARM\u5e94\u7528\u7a0b\u5e8f\u5904\u7406\u5668\u3002\u53ef\u4ee5\u5229\u7528Cortex-A15\u5904\u7406\u5668\u7684\u6027\u80fd\u6765\u627f\u62c5\u7e41\u91cd\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u800c\u7528Cortex-A7\u53ef\u4ee5\u6700\u6709\u6548\u5730\u5904\u7406\u667a\u80fd\u624b\u673a\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u8d1f\u8f7d\u3002\u8fd9\u4e9b\u64cd\u4f5c\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf\u6d3b\u52a8\u3001\u7528\u6237\u754c\u9762\u548c\u5176\u4ed6\u6301\u7eed\u8fd0\u884c\u3001\u59cb\u7ec8\u8fde\u63a5\u7684\u4efb\u52a1\u3002\\r\\n\\r\\n![1747060960088](./figure/1747060960088.png)\\r\\n\\r\\n\u56fe19.8\u3000ARM\u7684big.LITTLE\u67b6\u6784\\r\\n\\r\\n\u4e09\u661f\u57282013\u5e74CES\uff08\u56fd\u9645\u6d88\u8d39\u7535\u5b50\u5c55\uff09\u5927\u4f1a\u4e0a\u53d1\u5e03\u4e86Exynos 5Octa 8\u6838\u79fb\u52a8\u5904\u7406\u5668\uff0c\u8fd9\u6b3e\u5904\u7406\u5668\u4e5f\u662f\u91c7\u7528big.LITTLE\u67b6\u6784\u7684\u7b2c\u4e00\u6b3eCPU\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177","description":"\u9664\u4e86\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u4ee5\u5916\uff0c\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\u5f80\u5f80\u8fd8\u5173\u5fc3\u6027\u80fd\u548c\u7a33\u5b9a\u6027\u3002\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5f80\u5f80\u8981\u5bf9\u5185\u6838\u3001\u5e94\u7528\u7a0b\u5e8f\u6216\u6574\u4e2a\u7cfb\u7edf\u8fdb\u884c\u6027\u80fd\u4f18\u5316\u3002\u5728\u6027\u80fd\u4f18\u5316\u4e2d\u5e38\u7528\u7684\u624b\u6bb5\u5982\u4e0b\u3002","date":"2025-09-15T14:44:14.709Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":7.395,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.8\u3000CPU\u70ed\u63d2\u62d4"},"nextItem":{"title":"12.4.1\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.4\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\u7684\u8bbe\u8ba1\u601d\u60f3"}},"content":"\u9664\u4e86\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u4ee5\u5916\uff0c\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\u5f80\u5f80\u8fd8\u5173\u5fc3\u6027\u80fd\u548c\u7a33\u5b9a\u6027\u3002\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5f80\u5f80\u8981\u5bf9\u5185\u6838\u3001\u5e94\u7528\u7a0b\u5e8f\u6216\u6574\u4e2a\u7cfb\u7edf\u8fdb\u884c\u6027\u80fd\u4f18\u5316\u3002\u5728\u6027\u80fd\u4f18\u5316\u4e2d\u5e38\u7528\u7684\u624b\u6bb5\u5982\u4e0b\u3002\\r\\n\\r\\n# 1.\u4f7f\u7528top\u3001vmstat\u3001iostat\u3001sysctl\u7b49\u5e38\u7528\u5de5\u5177\\r\\n\\r\\ntop\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u5904\u7406\u5668\u7684\u6d3b\u52a8\u72b6\u51b5\u3002\u5728\u7f3a\u7701\u60c5\u51b5\u4e0b\uff0c\u663e\u793a\u5360\u7528CPU\u6700\u591a\u7684\u4efb\u52a1\uff0c\u5e76\u4e14\u6bcf\u96945s\u505a\u4e00\u6b21\u5237\u65b0\uff1b\\r\\n\\r\\nvmstat\u547d\u4ee4\u7528\u4e8e\u62a5\u544a\u5173\u4e8e\u5185\u6838\u7ebf\u7a0b\u3001\u865a\u62df\u5185\u5b58\u3001\u78c1\u76d8\u3001\u9677\u9631\u548cCPU\u6d3b\u52a8\u7684\u7edf\u8ba1\u4fe1\u606f\uff1b\\r\\n\\r\\niostat\u547d\u4ee4\u7528\u4e8e\u5206\u6790\u5404\u4e2a\u78c1\u76d8\u7684\u4f20\u8f93\u95f2\u5fd9\u72b6\u51b5\uff1b\\r\\n\\r\\nnetstat\u662f\u7528\u6765\u68c0\u6d4b\u7f51\u7edc\u4fe1\u606f\u7684\u5de5\u5177\uff1b\\r\\n\\r\\nsar\u7528\u4e8e\u6536\u96c6\u3001\u62a5\u544a\u6216\u8005\u4fdd\u5b58\u7cfb\u7edf\u6d3b\u52a8\u4fe1\u606f\uff0c\u5176\u4e2d\uff0csar\u7528\u4e8e\u663e\u793a\u6570\u636e\uff0csar1\u548csar2\u7528\u4e8e\u6536\u96c6\u548c\u4fdd\u5b58\u6570\u636e\u3002\\r\\n\\r\\nsysctl\u662f\u4e00\u4e2a\u53ef\u7528\u4e8e\u6539\u53d8\u6b63\u5728\u8fd0\u884c\u4e2d\u7684Linux\u7cfb\u7edf\u7684\u63a5\u53e3\u3002\u7528sysctl\u53ef\u4ee5\u8bfb\u53d6\u51e0\u767e\u4e2a\u4ee5\u4e0a\u7684\u7cfb\u7edf\u53d8\u91cf\uff0c\u4f8b\u5982\u7528sysctl\u2013a\u53ef\u8bfb\u53d6\u6240\u6709\u53d8\u91cf\u3002\\r\\n\\r\\nsysctl\u7684\u5b9e\u73b0\u539f\u7406\u662f\uff1a\u6240\u6709\u7684\u5185\u6838\u53c2\u6570\u5728/proc/sys\u4e2d\u5f62\u6210\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\uff0csysctl\u7cfb\u7edf\u8c03\u7528\u7684\u5185\u6838\u51fd\u6570\u662fsys_sysctl\uff0c\u5339\u914d\u9879\u76ee\u540e\uff0c\u6700\u540e\u7684\u8bfb\u5199\u5728do_sysctl_strategy\u4e2d\u5b8c\u6210\uff0c\u5982\\r\\n\\r\\n```\\r\\necho \\"1\\" > /proc/sys/net/ipv4/ip_forward\\r\\n```\\r\\n\\r\\n\u5c31\u7b49\u4ef7\u4e8e\uff1a\\r\\n\\r\\n```\\r\\nsysctl \u2013w net.ipv4.ip_forward =\\"1\\"\\r\\n```\\r\\n\\r\\n# 2.\u4f7f\u7528\u9ad8\u7ea7\u5206\u6790\u624b\u6bb5\uff0c\u5982OProfile\u3001gprof\\r\\n\\r\\nOProfile\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u8bc6\u522b\u8bf8\u5982\u6a21\u5757\u7684\u5360\u7528\u65f6\u95f4\u3001\u5faa\u73af\u7684\u5c55\u5f00\u3001\u9ad8\u901f\u7f13\u5b58\u7684\u4f7f\u7528\u7387\u4f4e\u3001\u4f4e\u6548\u7684\u7c7b\u578b\u8f6c\u6362\u548c\u5197\u4f59\u64cd\u4f5c\u3001\u9519\u8bef\u9884\u6d4b\u8f6c\u79fb\u7b49\u95ee\u9898\u3002\u5b83\u6536\u96c6\u6709\u5173\u5904\u7406\u5668\u4e8b\u4ef6\u7684\u4fe1\u606f\uff0c\u5176\u4e2d\u5305\u62ecTLB\u7684\u6545\u969c\u3001\u505c\u673a\u3001\u5b58\u50a8\u5668\u8bbf\u95ee\u4ee5\u53ca\u7f13\u5b58\u547d\u4e2d\u548c\u672a\u547d\u4e2d\u7684\u6307\u4ee4\u7684\u652b\u53d6\u6570\u91cf\u3002\\r\\n\\r\\nOProfile\u652f\u6301\u4e24\u79cd\u91c7\u6837\u65b9\u5f0f\uff1a\u57fa\u4e8e\u4e8b\u4ef6\u7684\u91c7\u6837\uff08Event Based\uff09\u548c\u57fa\u4e8e\u65f6\u95f4\u7684\u91c7\u6837\uff08Time Based\uff09\u3002\u57fa\u4e8e\u4e8b\u4ef6\u7684\u91c7\u6837\u662fOProfile\u53ea\u8bb0\u5f55\u7279\u5b9a\u4e8b\u4ef6\uff08\u6bd4\u5982L2\u7f13\u5b58\u672a\u547d\u4e2d\uff09\u7684\u53d1\u751f\u6b21\u6570\uff0c\u5f53\u8fbe\u5230\u7528\u6237\u8bbe\u5b9a\u7684\u5b9a\u503c\u65f6Oprofile\u5c31\u8bb0\u5f55\u4e00\u4e0b\uff08\u91c7\u4e00\u4e2a\u6837\uff09\u3002\u8fd9\u79cd\u65b9\u5f0f\u9700\u8981CPU\u5185\u90e8\u6709\u6027\u80fd\u8ba1\u6570\u5668\uff08Performace Counter\uff09\u3002\u57fa\u4e8e\u65f6\u95f4\u7684\u91c7\u6837\u662fOProfile\u501f\u52a9OS\u65f6\u949f\u4e2d\u65ad\u7684\u673a\u5236\uff0c\u5728\u6bcf\u4e2a\u65f6\u949f\u4e2d\u65ad\uff0cOProfile\u90fd\u4f1a\u8bb0\u5f55\u4e00\u6b21\uff08\u91c7\u4e00\u6b21\u6837\uff09\u3002\u5f15\u5165\u5b83\u7684\u76ee\u7684\u5728\u4e8e\uff0c\u63d0\u4f9b\u5bf9\u6ca1\u6709\u6027\u80fd\u8ba1\u6570\u5668\u7684CPU\u7684\u652f\u6301\uff0c\u5176\u7cbe\u5ea6\u76f8\u5bf9\u4e8e\u57fa\u4e8e\u4e8b\u4ef6\u7684\u91c7\u6837\u8981\u4f4e\uff0c\u56e0\u4e3a\u8981\u501f\u52a9OS\u65f6\u949f\u4e2d\u65ad\u7684\u652f\u6301\uff0c\u5bf9\u4e8e\u7981\u7528\u4e2d\u65ad\u7684\u4ee3\u7801\uff0cOProfile\u4e0d\u80fd\u5bf9\u5176\u8fdb\u884c\u5206\u6790\\r\\n\\r\\nOProfile\u5728Linux\u4e0a\u5206\u4e24\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u5185\u6838\u6a21\u5757\uff08oprofile.ko\uff09\uff0c\u53e6\u4e00\u4e2a\u662f\u7528\u6237\u7a7a\u95f4\u7684\u5b88\u62a4\u8fdb\u7a0b\uff08oprofiled\uff09\u3002\u524d\u8005\u8d1f\u8d23\u8bbf\u95ee\u6027\u80fd\u8ba1\u6570\u5668\u6216\u8005\u6ce8\u518c\u57fa\u4e8e\u65f6\u95f4\u91c7\u6837\u7684\u51fd\u6570\uff0c\u5e76\u5c06\u91c7\u6837\u503c\u7f6e\u4e8e\u5185\u6838\u7684\u7f13\u51b2\u533a\u5185\u3002\u540e\u8005\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u8d1f\u8d23\u4ece\u5185\u6838\u7a7a\u95f4\u6536\u96c6\u6570\u636e\uff0c\u5199\u5165\u6587\u4ef6\u3002\u5176\u8fd0\u884c\u6b65\u9aa4\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u521d\u59cb\u5316opcontrol--init\\r\\n\\r\\n2\uff09\u914d\u7f6eopcontrol--setup--event=...\\r\\n\\r\\n3\uff09\u542f\u52a8opcontrol--start\\r\\n\\r\\n4\uff09\u8fd0\u884c\u5f85\u5206\u6790\u7684\u7a0b\u5e8fxxx\\r\\n\\r\\n5\uff09\u53d6\u51fa\u6570\u636eopcontrol--dumpopcontrol--stop\\r\\n\\r\\n6\uff09\u5206\u6790\u7ed3\u679copreport-l./xxx\\r\\n\\r\\n\u7528GNU gprof\u53ef\u4ee5\u6253\u5370\u51fa\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u5404\u4e2a\u51fd\u6570\u6d88\u8017\u7684\u65f6\u95f4\uff0c\u4ee5\u5e2e\u52a9\u7a0b\u5e8f\u5458\u627e\u51fa\u4f17\u591a\u51fd\u6570\u4e2d\u8017\u65f6\u6700\u591a\u7684\u51fd\u6570\uff1b\u8fd8\u53ef\u4ea7\u751f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u51fd\u6570\u8c03\u7528\u5173\u7cfb\uff0c\u5305\u62ec\u8c03\u7528\u6b21\u6570\uff0c\u4ee5\u5e2e\u52a9\u7a0b\u5e8f\u5458\u5206\u6790\u7a0b\u5e8f\u7684\u8fd0\u884c\u6d41\u7a0b\u3002\\r\\n\\r\\nGNU gprof\u7684\u5b9e\u73b0\u539f\u7406\uff1a\u5728\u7f16\u8bd1\u548c\u94fe\u63a5\u7a0b\u5e8f\u7684\u65f6\u5019\uff08\u4f7f\u7528-pg\u7f16\u8bd1\u548c\u94fe\u63a5\u9009\u9879\uff09\uff0cgcc\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u6bcf\u4e2a\u51fd\u6570\u4e2d\u90fd\u52a0\u5165\u540d\u4e3amcount\uff08_mcount\u6216__mcount\uff0c\u4f9d\u8d56\u4e8e\u7f16\u8bd1\u5668\u6216\u64cd\u4f5c\u7cfb\u7edf\uff09\u7684\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5e94\u7528\u7a0b\u5e8f\u91cc\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u90fd\u4f1a\u8c03\u7528mcount\uff0c\u800cmcount\u4f1a\u5728\u5185\u5b58\u4e2d\u4fdd\u5b58\u4e00\u5f20\u51fd\u6570\u8c03\u7528\u56fe\uff0c\u5e76\u901a\u8fc7\u51fd\u6570\u8c03\u7528\u5806\u6808\u7684\u5f62\u5f0f\u67e5\u627e\u5b50\u51fd\u6570\u548c\u7236\u51fd\u6570\u7684\u5730\u5740\u3002\u8fd9\u5f20\u8c03\u7528\u56fe\u4e5f\u4fdd\u5b58\u4e86\u6240\u6709\u4e0e\u51fd\u6570\u76f8\u5173\u7684\u8c03\u7528\u65f6\u95f4\u3001\u8c03\u7528\u6b21\u6570\u7b49\u7684\u6240\u6709\u4fe1\u606f\u3002\\r\\n\\r\\nGNU gprof\u7684\u57fa\u672c\u7528\u6cd5\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u4f7f\u7528-pg\u7f16\u8bd1\u548c\u94fe\u63a5\u5e94\u7528\u7a0b\u5e8f\u3002\\r\\n\\r\\n2\uff09\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u5e76\u4f7f\u5b83\u751f\u6210\u4f9bgprof\u5206\u6790\u7684\u6570\u636e\u3002\\r\\n\\r\\n3\uff09\u4f7f\u7528gprof\u7a0b\u5e8f\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\u7684\u6570\u636e\u3002\\r\\n\\r\\n# 3.\u8fdb\u884c\u5185\u6838\u8ddf\u8e2a\uff0c\u5982LTTng\\r\\n\\r\\nLTTng\uff08Linux Trace Toolkit-next generation\uff0c\u5b98\u65b9\u7f51\u7ad9\u4e3ahttp://lttng.org/ \uff09\u662f\u4e00\u4e2a\u7528\u4e8e\u8ddf\u8e2a\u7cfb\u7edf\u8be6\u7ec6\u8fd0\u884c\u72b6\u6001\u548c\u6d41\u7a0b\u7684\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u8ddf\u8e2a\u8bb0\u5f55\u7cfb\u7edf\u4e2d\u7684\u7279\u5b9a\u4e8b\u4ef6\u3002\u8fd9\u4e9b\u4e8b\u4ef6\u5305\u62ec\uff1a\u7cfb\u7edf\u8c03\u7528\u7684\u8fdb\u5165\u548c\u9000\u51fa\uff1b\u9677\u9631/\u4e2d\u65ad\uff08Trap/Irq\uff09\u7684\u8fdb\u5165\u548c\u9000\u51fa\uff1b\u8fdb\u7a0b\u8c03\u5ea6\u4e8b\u4ef6\uff1b\u5185\u6838\u5b9a\u65f6\u5668\uff1b\u8fdb\u7a0b\u7ba1\u7406\u76f8\u5173\u4e8b\u4ef6\u2014\u521b\u5efa\u3001\u5524\u9192\u3001\u4fe1\u53f7\u5904\u7406\u7b49\uff1b\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u4e8b\u4ef6\u2014open/read/write/seek/ioctl\u7b49\uff1b\u5185\u5b58\u7ba1\u7406\u76f8\u5173\u4e8b\u4ef6\u2014\u5185\u5b58\u5206\u914d/\u91ca\u653e\u7b49\uff1b\u5176\u4ed6IPC/\u5957\u63a5\u5b57/\u7f51\u7edc\u7b49\u4e8b\u4ef6\u3002\u800c\u5bf9\u4e8e\u8fd9\u4e9b\u8bb0\u5f55\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u56fe\u5f62\u7684\u65b9\u5f0f\u7ecf\u7531lttv-gui\u67e5\u770b\uff0c\u5982\u56fe21.9\u6240\u793a\u3002\\r\\n\\r\\n# 4.\u4f7f\u7528LTP\u8fdb\u884c\u538b\u529b\u6d4b\u8bd5\\r\\n\\r\\nLTP\uff08Linux Test Project\uff0c\u5b98\u65b9\u7f51\u7ad9\u4e3ahttp://ltp.sourceforge.net/ \uff09\u662f\u4e00\u4e2a\u7531SGI\u53d1\u8d77\u5e76\u7531IBM\u8d1f\u8d23\u7ef4\u62a4\u7684\u5408\u4f5c\u8ba1\u5212\u3002\u5b83\u7684\u76ee\u7684\u662f\u4e3a\u5f00\u6e90\u793e\u533a\u63d0\u4f9b\u6d4b\u8bd5\u5957\u4ef6\u6765\u9a8c\u8bc1Linux\u7684\u53ef\u9760\u6027\u3001\u5065\u58ee\u6027\u548c\u7a33\u5b9a\u6027\u3002\u5b83\u901a\u8fc7\u538b\u529b\u6d4b\u8bd5\u6765\u5224\u65ad\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u9760\u6027\uff0c\u5728\u5de5\u7a0b\u4e2d\u6211\u4eec\u53ef\u4f7f\u7528LTP\u6d4b\u8bd5\u5957\u4ef6\u5bf9Linux\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u8d85\u957f\u65f6\u95f4\u7684\u6d4b\u8bd5\uff0c\u5b83\u53ef\u8fdb\u884c\u6587\u4ef6\u7cfb\u7edf\u538b\u529b\u6d4b\u8bd5\u3001\u786c\u76d8I/O\u6d4b\u8bd5\u3001\u5185\u5b58\u7ba1\u7406\u538b\u529b\u6d4b\u8bd5\u3001IPC\u538b\u529b\u6d4b\u8bd5\u3001SCHED\u6d4b\u8bd5\u3001\u547d\u4ee4\u529f\u80fd\u7684\u9a8c\u8bc1\u6d4b\u8bd5\u3001\u7cfb\u7edf\u8c03\u7528\u529f\u80fd\u7684\u9a8c\u8bc1\u6d4b\u8bd5\u7b49\u3002\\r\\n\\r\\n![1747579791527](./figure/1747579791527.png)\\r\\n\\r\\n\u56fe21.9\u3000LTTng\u5f62\u6210\u7684\u65f6\u5e8f\u56fe\\r\\n\\r\\n# 5.\u4f7f\u7528Benchmark\u8bc4\u4f30\u7cfb\u7edf\\r\\n\\r\\n\u53ef\u7528\u4e8eLinux\u7684Benchmark\u7684\u5305\u62eclmbench\u3001UnixBench\u3001AIM9\u3001Netperf\u3001SSLperf\u3001dbench\u3001Bonnie\u3001Bonnie++\u3001Iozone\u3001BYTEmark\u7b49\uff0c\u5b83\u4eec\u53ef\u7528\u4e8e\u8bc4\u4f30\u64cd\u4f5c\u7cfb\u7edf\u3001\u7f51\u7edc\u3001I/O\u5b50\u7cfb\u7edf\u3001CPU\u7b49\u7684\u6027\u80fd\uff0c\u53c2\u8003\u7f51\u5740http://lbs.sourceforge.net/ \u5217\u51fa\u4e86\u8bb8\u591aBenchmark\u5de5\u5177\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.4\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\u7684\u8bbe\u8ba1\u601d\u60f3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.4\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\u7684\u8bbe\u8ba1\u601d\u60f3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.4\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\u7684\u8bbe\u8ba1\u601d\u60f3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.4\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\u7684\u8bbe\u8ba1\u601d\u60f3.md","title":"12.4.1\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb","description":"Linux\u4e2d\u7684SPI\u3001I2 C\u3001USB\u7b49\u5b50\u7cfb\u7edf\u90fd\u5229\u7528\u4e86\u5178\u578b\u7684\u628a\u4e3b\u673a\u9a71\u52a8\u548c\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\u7684\u60f3\u6cd5\uff0c\u8ba9\u4e3b\u673a\u7aef\u53ea\u8d1f\u8d23\u4ea7\u751f\u603b\u7ebf\u4e0a\u7684\u4f20\u8f93\u6ce2\u5f62\uff0c\u800c\u5916\u8bbe\u7aef\u53ea\u662f\u901a\u8fc7\u6807\u51c6\u7684API\u6765\u8ba9\u4e3b\u673a\u7aef\u4ee5\u9002\u5f53\u7684\u6ce2\u5f62\u8bbf\u95ee\u81ea\u8eab\u3002\u56e0\u6b64\u8fd9\u91cc\u9762\u5c31\u6d89\u53ca\u4e864\u4e2a\u8f6f\u4ef6\u6a21\u5757\uff1a","date":"2025-09-15T14:44:14.689Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":14.36,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.12\u3000Linux\u6027\u80fd\u76d1\u63a7\u4e0e\u8c03\u4f18\u5de5\u5177"},"nextItem":{"title":"9.4.1\u3000AIO\u6982\u5ff5\u4e0eGNU C\u5e93AIO","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.4\u3000Linux\u5f02\u6b65IO"}},"content":"Linux\u4e2d\u7684SPI\u3001I2 C\u3001USB\u7b49\u5b50\u7cfb\u7edf\u90fd\u5229\u7528\u4e86\u5178\u578b\u7684\u628a\u4e3b\u673a\u9a71\u52a8\u548c\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\u7684\u60f3\u6cd5\uff0c\u8ba9\u4e3b\u673a\u7aef\u53ea\u8d1f\u8d23\u4ea7\u751f\u603b\u7ebf\u4e0a\u7684\u4f20\u8f93\u6ce2\u5f62\uff0c\u800c\u5916\u8bbe\u7aef\u53ea\u662f\u901a\u8fc7\u6807\u51c6\u7684API\u6765\u8ba9\u4e3b\u673a\u7aef\u4ee5\u9002\u5f53\u7684\u6ce2\u5f62\u8bbf\u95ee\u81ea\u8eab\u3002\u56e0\u6b64\u8fd9\u91cc\u9762\u5c31\u6d89\u53ca\u4e864\u4e2a\u8f6f\u4ef6\u6a21\u5757\uff1a\\r\\n\\r\\n1\uff09\u4e3b\u673a\u7aef\u7684\u9a71\u52a8\u3002\u6839\u636e\u5177\u4f53\u7684I2 C\u3001SPI\u3001USB\u7b49\u63a7\u5236\u5668\u7684\u786c\u4ef6\u624b\u518c\uff0c\u64cd\u4f5c\u5177\u4f53\u7684I2C\u3001SPI\u3001USB\u7b49\u63a7\u5236\u5668\uff0c\u4ea7\u751f\u603b\u7ebf\u7684\u5404\u79cd\u6ce2\u5f62\u3002\\r\\n\\r\\n2\uff09\u8fde\u63a5\u4e3b\u673a\u548c\u5916\u8bbe\u7684\u7ebd\u5e26\u3002\u5916\u8bbe\u4e0d\u76f4\u63a5\u8c03\u7528\u4e3b\u673a\u7aef\u7684\u9a71\u52a8\u6765\u4ea7\u751f\u6ce2\u5f62\uff0c\u800c\u662f\u8c03\u4e00\u4e2a\u6807\u51c6\u7684API\u3002\u7531\u8fd9\u4e2a\u6807\u51c6\u7684API\u628a\u8fd9\u4e2a\u6ce2\u5f62\u7684\u4f20\u8f93\u8bf7\u6c42\u95f4\u63a5\u201c\u8f6c\u53d1\u201d\u7ed9\u4e86\u5177\u4f53\u7684\u4e3b\u673a\u7aef\u9a71\u52a8\u3002\u5f53\u7136\uff0c\u5728\u8fd9\u91cc\uff0c\u6700\u597d\u628a\u5173\u4e8e\u6ce2\u5f62\u7684\u63cf\u8ff0\u4e5f\u4ee5\u67d0\u79cd\u6570\u636e\u7ed3\u6784\u6807\u51c6\u5316\u3002\\r\\n\\r\\n3\uff09\u5916\u8bbe\u7aef\u7684\u9a71\u52a8\u3002\u5916\u8bbe\u63a5\u5728I2 C\u3001SPI\u3001USB\u8fd9\u6837\u7684\u603b\u7ebf\u4e0a\uff0c\u4f46\u662f\u5b83\u4eec\u672c\u8eab\u53ef\u4ee5\u662f\u89e6\u6478\u5c4f\u3001\u7f51\u5361\u3001\u58f0\u5361\u6216\u8005\u4efb\u610f\u4e00\u79cd\u7c7b\u578b\u7684\u8bbe\u5907\u3002\u6211\u4eec\u5728\u76f8\u5173\u7684i2c_driver\u3001spi_driver\u3001usb_driver\u8fd9\u79cdxxx_driver\u7684probe\uff08\uff09\u51fd\u6570\u4e2d\u53bb\u6ce8\u518c\u5b83\u5177\u4f53\u7684\u7c7b\u578b\u3002\u5f53\u8fd9\u4e9b\u5916\u8bbe\u8981\u6c42I2 C\u3001SPI\u3001USB\u7b49\u53bb\u8bbf\u95ee\u5b83\u7684\u65f6\u5019\uff0c\u5b83\u8c03\u7528\u201c\u8fde\u63a5\u4e3b\u673a\u548c\u5916\u8bbe\u7684\u7ebd\u5e26\u201d\u6a21\u5757\u7684\u6807\u51c6API\u3002\\r\\n\\r\\n4\uff09\u677f\u7ea7\u903b\u8f91\u3002\u677f\u7ea7\u903b\u8f91\u7528\u6765\u63cf\u8ff0\u4e3b\u673a\u548c\u5916\u8bbe\u662f\u5982\u4f55\u4e92\u8054\u7684\uff0c\u5b83\u76f8\u5f53\u4e8e\u4e00\u4e2a\u201c\u8def\u7531\u8868\u201d\u3002\u5047\u8bbe\u677f\u5b50\u4e0a\u6709\u591a\u4e2aSPI\u63a7\u5236\u5668\u548c\u591a\u4e2aSPI\u5916\u8bbe\uff0c\u90a3\u7a76\u7adf\u8c01\u63a5\u5728\u8c01\u4e0a\u9762\u7ba1\u7406\u4e92\u8054\u5173\u7cfb\uff0c\u65e2\u4e0d\u662f\u4e3b\u673a\u7aef\u7684\u8d23\u4efb\uff0c\u4e5f\u4e0d\u662f\u5916\u8bbe\u7aef\u7684\u8d23\u4efb\uff0c\u8fd9\u5c5e\u4e8e\u677f\u7ea7\u903b\u8f91\u7684\u8d23\u4efb\u3002\u8fd9\u90e8\u5206\u901a\u5e38\u51fa\u73b0\u5728arch/arm/mach-xxx\u4e0b\u9762\u6216\u8005arch/arm/boot/dts\u4e0b\u9762\u3002\\r\\n\\r\\n\u4ec0\u4e48\u53eb\u826f\u597d\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u4e00\u8a00\u4ee5\u853d\u4e4b\uff0c\u8ba9\u6b63\u786e\u7684\u4ee3\u7801\u51fa\u73b0\u5728\u6b63\u786e\u7684\u4f4d\u7f6e\u3002\u4e0d\u8981\u5728\u9519\u8bef\u7684\u65f6\u95f4\u3001\u9519\u8bef\u7684\u5730\u70b9\uff0c\u7f16\u5199\u4e00\u6bb5\u9519\u8bef\u7684\u4ee3\u7801\u3002\u5728LKML\u4e2d\uff0c\u5173\u4e8e\u4ee3\u7801\u51fa\u73b0\u5728\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c\u5e38\u89c1\u7684\u53f0\u8bcd\u662f\u4ee3\u7801\u201cout of place\u201d\u3002\\r\\n\\r\\nLinux\u901a\u8fc7\u4e0a\u8ff0\u7684\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u628a\u4e00\u5806\u6742\u4e71\u4e0d\u53cb\u597d\u7684\u4ee3\u7801\u53d8\u6210\u4e864\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5c0f\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u90fd\u5404\u5f97\u5176\u6240\u3002\u6bcf\u4e2a\u6a21\u5757\u90fd\u89c9\u5f97\u5f88\u201c\u723d\u201d\uff0c\u7ad9\u5728\u4e3b\u673a\u7aef\u60f3\u4e00\u60f3\uff0c\u5b83\u5176\u5b9e\u4e5f\u662f\u5f88\u201c\u723d\u201d\u7684\uff0c\u56e0\u4e3a\u5b83\u7684\u804c\u8d23\u672c\u6765\u5c31\u662f\u4ea7\u751f\u6ce2\u5f62\uff0c\u800c\u73b0\u5728\u6211\u4eec\u5c31\u8ba9\u5b83\u53ea\u4ea7\u751f\u6ce2\u5f62\u4e0d\u5e72\u522b\u7684\uff1b\u7ad9\u5728\u5916\u8bbe\u7aef\u60f3\u4e00\u60f3\uff0c\u5b83\u4e5f\u53d8\u5f97\u4e00\u8eab\u8f7b\u677e\uff0c\u56e0\u4e3a\u5b83\u6839\u672c\u5c31\u4e0d\u9700\u8981\u77e5\u9053\u81ea\u5df1\u63a5\u5728\u4e3b\u673a\u7684\u54ea\u4e2a\u63a7\u5236\u5668\u4e0a\uff0c\u6839\u672c\u4e0d\u5173\u5fc3\u5bf9\u65b9\u662f\u5f20\u4e09\u3001\u674e\u56db\u3001\u738b\u4e94\u8fd8\u662f\u516d\u9ebb\u5b50\uff1b\u7ad9\u5728\u677f\u7ea7\u903b\u8f91\u7684\u89d2\u5ea6\u4e0a\uff0c\u4f60\u505a\u4e86\u4e00\u4e2a\u677f\u5b50\uff0c\u81ea\u5df1\u81ea\u7136\u8981\u77e5\u9053\u8c01\u63a5\u5728\u8c01\u4e0a\u9762\u4e86\u3002\\r\\n\\r\\n\u4e0b\u9762\u4ee5SPI\u5b50\u7cfb\u7edf\u4e3a\u4f8b\u6765\u5c55\u5f00\u8bf4\u660e\uff0c\u540e\u7eed\u7ae0\u8282\u7684I2 C\u3001USB\u7b49\u662f\u7c7b\u4f3c\u7684\u3002\\r\\n\\r\\n# 12.4.2\u3000Linux SPI\u4e3b\u673a\u548c\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n\u5728Linux\u4e2d\uff0c\u7528\u4ee3\u7801\u6e05\u535512.24\u7684spi_master\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u4e00\u4e2aSPI\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\uff0c\u5176\u4e3b\u8981\u6210\u5458\u662f\u4e3b\u673a\u63a7\u5236\u5668\u7684\u5e8f\u53f7\uff08\u7cfb\u7edf\u4e2d\u53ef\u80fd\u5b58\u5728\u591a\u4e2aSPI\u4e3b\u673a\u63a7\u5236\u5668\uff09\u3001\u7247\u9009\u6570\u91cf\u3001SPI\u6a21\u5f0f\u3001\u65f6\u949f\u8bbe\u7f6e\u7528\u5230\u7684\u548c\u6570\u636e\u4f20\u8f93\u7528\u5230\u7684\u51fd\u6570\u7b49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.24\u3000spi_master\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct spi_master {\\r\\n 2 struct devicedev;\\r\\n 3\\r\\n 4 s16           bus_num;\\r\\n 5\\r\\n 6 /* chipselects will be integral to many controllers; some others\\r\\n 7  * might use board-specific GPIOs.\\r\\n 8  */\\r\\n 9 u16           num_chipselect;\\r\\n10\\r\\n11 ...\\r\\n12\\r\\n13 /* limits on transfer speed */\\r\\n14 u32           min_speed_hz;\\r\\n15 u32           max_speed_hz;\\r\\n16\\r\\n17 ...\\r\\n18\\r\\n19 /* Setup mode and clock, etc (spi driver may call many times).\\r\\n20  *\\r\\n21  * IMPORTANT:  this may be called when transfers to another\\r\\n22  * device are active.  DO NOT UPDATE SHARED REGISTERS in ways\\r\\n23  * which could break those transfers.\\r\\n24  */\\r\\n25 int            (*setup)(struct spi_device *spi);\\r\\n26\\r\\n27 /* bidirectional bulk transfers\\r\\n28  *\\r\\n29  * + The transfer() method may not sleep; its main role is\\r\\n30  *   just to add the message to the queue.\\r\\n31  * + For now there\'s no remove-from-queue operation, or\\r\\n32  *   any other request management\\r\\n33  * + To a given spi_device, message queueing is pure fifo\\r\\n34  *\\r\\n35  * + The master\'s main job is to process its message queue,\\r\\n36  *   selecting a chip then transferring data\\r\\n37  * + If there are multiple spi_device children, the i/o queue\\r\\n38  *   arbitration algorithm is unspecified (round robin, fifo,\\r\\n39  *   priority, reservations, preemption, etc)\\r\\n40  *\\r\\n41  * + Chipselect stays active during the entire message\\r\\n42  *   (unless modified by spi_transfer.cs_change != 0).\\r\\n43  * + The message transfers use clock and SPI mode parameters\\r\\n44  *   previously established by setup() for this device\\r\\n45  */\\r\\n46 int            (*transfer)(struct spi_device *spi,\\r\\n47                     struct spi_message *mesg);\\r\\n48\\r\\n49 /* called on release() to free memory provided by spi_master */\\r\\n50 void         (*cleanup)(struct spi_device *spi);\\r\\n51\\r\\n52\\r\\n53 ...\\r\\n54 /*\\r\\n55  * These hooks are for drivers that use a generic implementation\\r\\n56  * of transfer_one_message() provied by the core.\\r\\n57  */\\r\\n58 void (*set_cs)(struct spi_device *spi, bool enable);\\r\\n59 int (*transfer_one)(struct spi_master *master, struct spi_device *spi,\\r\\n60             struct spi_transfer *transfer);\\r\\n61\\r\\n62 /* gpio chip select */\\r\\n63 int            *cs_gpios;\\r\\n64\\r\\n65 ...\\r\\n66};\\r\\n```\\r\\n\\r\\n\u5206\u914d\u3001\u6ce8\u518c\u548c\u6ce8\u9500SPI\u4e3b\u673a\u7684API\u7531SPI\u6838\u5fc3\u63d0\u4f9b\uff1a\\r\\n\\r\\n```\\r\\nstruct spi_master * spi_alloc_master(struct device *host, unsigned size);\\r\\nint spi_register_master(struct spi_master *master);\\r\\nvoid spi_unregister_master(struct spi_master *master);\\r\\n```\\r\\n\\r\\n\u5728Linux\u4e2d\uff0c\u7528\u4ee3\u7801\u6e05\u535512.25\u7684spi_driver\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u4e00\u4e2aSPI\u5916\u8bbe\u9a71\u52a8\uff0c\u8fd9\u4e2a\u5916\u8bbe\u9a71\u52a8\u53ef\u4ee5\u8ba4\u4e3a\u662fspi_master\u7684\u5ba2\u6237\u7aef\u9a71\u52a8\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.25\u3000spi_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n1struct spi_driver {\\r\\n2 const struct spi_device_id *id_table;\\r\\n3 int            (*probe)(struct spi_device *spi);\\r\\n4 int            (*remove)(struct spi_device *spi);\\r\\n5 void            (*shutdown)(struct spi_device *spi);\\r\\n6 int            (*suspend)(struct spi_device *spi, pm_message_t mesg);\\r\\n7 int            (*resume)(struct spi_device *spi);\\r\\n8 struct device_driver    driver;\\r\\n9};\\r\\n```\\r\\n\\r\\n\u53ef\u4ee5\u770b\u51fa\uff0cspi_driver\u7ed3\u6784\u4f53\u548cplatform_driver\u7ed3\u6784\u4f53\u6709\u6781\u5927\u7684\u76f8\u4f3c\u6027\uff0c\u90fd\u6709probe\uff08\uff09\u3001remove\uff08\uff09\u3001suspend\uff08\uff09\u3001resume\uff08\uff09\u8fd9\u6837\u7684\u63a5\u53e3\u548cdevice_driver\u7684\u5b9e\u4f8b\u3002\u662f\u7684\uff0c\u8fd9\u51e0\u4e4e\u662f\u4e00\u5207\u5ba2\u6237\u7aef\u9a71\u52a8\u7684\u5e38\u7528\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.26\u3000spi_transfer\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct spi_transfer {\\r\\n 2 /* it\'s ok if tx_buf == rx_buf (right )\\r\\n 3  * for MicroWire, one buffer must be null\\r\\n 4  * buffers must work with dma_*map_single() calls, unless\\r\\n 5  *   spi_message.is_dma_mapped reports a pre-existing mapping\\r\\n 6  */\\r\\n 7 const void    *tx_buf;\\r\\n 8 void        *rx_buf;\\r\\n 9 unsigned    len;\\r\\n10\\r\\n11 dma_addr_t    tx_dma;\\r\\n12 dma_addr_t    rx_dma;\\r\\n13 struct sg_table tx_sg;\\r\\n14 struct sg_table rx_sg;\\r\\n15\\r\\n16 unsigned    cs_change:1;\\r\\n17 unsigned    tx_nbits:3;\\r\\n18 unsigned    rx_nbits:3;\\r\\n19#define    SPI_NBITS_SINGLE    0x01/* 1bit transfer */\\r\\n20#define    SPI_NBITS_DUA       0x02/* 2bits transfer */\\r\\n21#define    SPI_NBITS_QUAD      0x04/* 4bits transfer */\\r\\n22 u8       bits_per_word;\\r\\n23 u16       delay_usecs;\\r\\n24 u32       speed_hz;\\r\\n25\\r\\n26 struct list_head transfer_list;\\r\\n27};\\r\\n```\\r\\n\\r\\n\u800c\u4e00\u6b21\u5b8c\u6574\u7684SPI\u4f20\u8f93\u6d41\u7a0b\u53ef\u80fd\u4e0d\u662f\u53ea\u5305\u542b\u4e00\u6b21spi_transfer\uff0c\u5b83\u53ef\u80fd\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2aspi_transfer\uff0c\u8fd9\u4e9bspi_transfer\u6700\u7ec8\u901a\u8fc7spi_message\u7ec4\u7ec7\u5728\u4e00\u8d77\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535512.27\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.27\u3000spi_message\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct spi_message {\\r\\n 2 struct list_head    transfers;\\r\\n 3\\r\\n 4 struct spi_device    *spi;\\r\\n 5\\r\\n 6 unsigned        is_dma_mapped:1;\\r\\n 7\\r\\n 8 /* REVISIT:  we might want a flag affecting the behavior of the\\r\\n 9  * last transfer ... allowing things like \\"read 16bit length L\\"\\r\\n10  * immediately followed by \\"read L bytes\\".  Basically imposing\\r\\n11  * a specific message scheduling algorithm.\\r\\n12  *\\r\\n13  * Some controller drivers (message-at-a-time queue processing)\\r\\n14  * could provide that as their default scheduling algorithm.  But\\r\\n15  * others (with multi-message pipelines) could need a flag to\\r\\n16  * tell them about such special cases.\\r\\n17  */\\r\\n18\\r\\n19 /* completion is reported through a callback */\\r\\n20    void            (*complete)(void *context);\\r\\n21 void            *context;\\r\\n22 unsigned        frame_length;\\r\\n23 unsigned        actual_length;\\r\\n24 int            status;\\r\\n25\\r\\n26 /* for optional use by whatever driver currently owns the\\r\\n27  * spi_message ...  between calls to spi_async and then later\\r\\n28  * complete(), that\'s the spi_master controller driver.\\r\\n29  */\\r\\n30 struct list_head    queue;\\r\\n31 void            *state;\\r\\n32};\\r\\n```\\r\\n\\r\\n\u901a\u8fc7spi_message_init\uff08\uff09\u53ef\u4ee5\u521d\u59cb\u5316spi_message\uff0c\u800c\u5c06spi_transfer\u6dfb\u52a0\u5230spi_message\u961f\u5217\u7684\u65b9\u6cd5\u5219\u662f\uff1a\\r\\n\\r\\n```\\r\\nvoid spi_message_add_tail(struct spi_transfer *t, struct spi_message *m);\\r\\n```\\r\\n\\r\\n\u53d1\u8d77\u4e00\u6b21spi_message\u7684\u4f20\u8f93\u6709\u540c\u6b65\u548c\u5f02\u6b65\u4e24\u79cd\u65b9\u5f0f\uff0c\u4f7f\u7528\u540c\u6b65API\u65f6\uff0c\u4f1a\u963b\u585e\u7b49\u5f85\u8fd9\u4e2a\u6d88\u606f\u88ab\u5904\u7406\u5b8c\u3002\u540c\u6b65\u64cd\u4f5c\u65f6\u4f7f\u7528\u7684API\u662f\uff1a\\r\\n\\r\\n```\\r\\nint spi_sync(struct spi_device *spi, struct spi_message *message);\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u5f02\u6b65API\u65f6\uff0c\u4e0d\u4f1a\u963b\u585e\u7b49\u5f85\u8fd9\u4e2a\u6d88\u606f\u88ab\u5904\u7406\u5b8c\uff0c\u4f46\u662f\u53ef\u4ee5\u5728spi_message\u7684complete\u5b57\u6bb5\u6302\u63a5\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5f53\u6d88\u606f\u88ab\u5904\u7406\u5b8c\u6210\u540e\uff0c\u8be5\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\u3002\u5728\u5f02\u6b65\u64cd\u4f5c\u65f6\u4f7f\u7528\u7684API\u662f\uff1a\\r\\n\\r\\n```\\r\\nint spi_async(struct spi_device *spi, struct spi_message *message);\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.28\u662f\u975e\u5e38\u5178\u578b\u7684\u521d\u59cb\u5316spi_transfer\u3001spi_message\u5e76\u8fdb\u884cSPI\u6570\u636e\u4f20\u8f93\u7684\u4f8b\u5b50\uff0c\u540c\u65f6spi_write\uff08\uff09\u3001spi_read\uff08\uff09\u4e5f\u662fSPI\u6838\u5fc3\u5c42\u7684\u4e24\u4e2a\u901a\u7528\u5feb\u6377API\uff0c\u5728SPI\u5916\u8bbe\u9a71\u52a8\u4e2d\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u5b83\u4eec\u8fdb\u884c\u7b80\u5355\u7684\u7eaf\u5199\u548c\u7eaf\u8bfb\u64cd\u4f5c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.28\u3000SPI\u4f20\u8f93\u5b9e\u4f8bspi_write\uff08\uff09\u3001spi_read\uff08\uff09API\\r\\n\\r\\n```\\r\\n 1 static inline int\\r\\n 2 spi_write(struct spi_device *spi, const u8*buf, size_t len)\\r\\n 3 {\\r\\n 4         struct spi_transfer     t = {\\r\\n 5                         .tx_buf         = buf,\\r\\n 6                         .len            = len,\\r\\n 7                 };\\r\\n 8         struct spi_message      m;\\r\\n 9\\r\\n10        spi_message_init(&m);\\r\\n11        spi_message_add_tail(&t, &m);\\r\\n12        return spi_sync(spi, &m);\\r\\n13}\\r\\n14\\r\\n15static inline int\\r\\n16spi_read(struct spi_device *spi, u8*buf, size_t len)\\r\\n17{\\r\\n18        struct spi_transfer     t = {\\r\\n19                        .rx_buf         = buf,\\r\\n20                        .len            = len,\\r\\n21               };\\r\\n22       struct spi_message      m;\\r\\n23\\r\\n24       spi_message_init(&m);\\r\\n25       spi_message_add_tail(&t, &m);\\r\\n26       return spi_sync(spi, &m);\\r\\n27}\\r\\n```\\r\\n\\r\\nSPI\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u4f4d\u4e8edrivers/spi/\uff0c\u8fd9\u4e9b\u9a71\u52a8\u7684\u4e3b\u4f53\u662f\u5b9e\u73b0\u4e86spi_master\u7684transfer\uff08\uff09\u3001transfer_one\uff08\uff09\u3001setup\uff08\uff09\u8fd9\u6837\u7684\u6210\u5458\u51fd\u6570\uff0c\u5f53\u7136\uff0c\u4e5f\u53ef\u80fd\u662f\u5b9e\u73b0spi_bitbang\u7684txrx_bufs\uff08\uff09\u3001setup_transfer\uff08\uff09\u3001chipselect\uff08\uff09\u8fd9\u6837\u7684\u6210\u5458\u51fd\u6570\u3002\u4ee3\u7801\u6e05\u535512.29\u6458\u53d6\u4e86drivers/spi/spi-pl022.c\u7684\u90e8\u5206\u4ee3\u7801\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.29\u3000SPI\u4e3b\u673a\u7aef\u9a71\u52a8\u5b8c\u6210\u7684\u6ce2\u5f62\u4f20\u8f93\\r\\n\\r\\n```\\r\\n 1static int pl022_transfer_one_message(struct spi_master *master,\\r\\n 2                      struct spi_message *msg)\\r\\n 3{\\r\\n 4 struct pl022*pl022= spi_master_get_devdata(master);\\r\\n 5\\r\\n 6 /* Initial message state */\\r\\n 7 pl022->cur_msg = msg;\\r\\n 8 msg->state = STATE_START;\\r\\n 9\\r\\n10 pl022->cur_transfer = list_entry(msg->transfers.next,\\r\\n11                  struct spi_transfer, transfer_list);\\r\\n12\\r\\n13 /* Setup the SPI using the per chip configuration */\\r\\n14 pl022->cur_chip = spi_get_ctldata(msg->spi);\\r\\n15 pl022->cur_cs = pl022->chipselects[msg->spi->chip_select];\\r\\n16\\r\\n17 restore_state(pl022);\\r\\n18 flush(pl022);\\r\\n19\\r\\n20 if (pl022->cur_chip->xfer_type == POLLING_TRANSFER)\\r\\n21     do_polling_transfer(pl022);\\r\\n22 else\\r\\n23     do_interrupt_dma_transfer(pl022);\\r\\n24\\r\\n25 return 0;\\r\\n26}\\r\\n27\\r\\n28static int pl022_setup(struct spi_device *spi)\\r\\n29{\\r\\n30 ...\\r\\n31 /* Stuff that is common for all versions */\\r\\n32 if (spi->mode & SPI_CPOL)\\r\\n33     tmp = SSP_CLK_POL_IDLE_HIGH;\\r\\n34 else\\r\\n35     tmp = SSP_CLK_POL_IDLE_LOW;\\r\\n36 SSP_WRITE_BITS(chip->cr0, tmp, SSP_CR0_MASK_SPO, 6);\\r\\n37\\r\\n38 if (spi->mode & SPI_CPHA)\\r\\n39     tmp = SSP_CLK_SECOND_EDGE;\\r\\n40 else\\r\\n41     tmp = SSP_CLK_FIRST_EDGE;\\r\\n42 SSP_WRITE_BITS(chip->cr0, tmp, SSP_CR0_MASK_SPH, 7);\\r\\n43\\r\\n44 ...\\r\\n45}\\r\\n46\\r\\n47static int pl022_probe(struct amba_device *adev, const struct amba_id *id)\\r\\n48{\\r\\n49 ...\\r\\n50\\r\\n51 /*\\r\\n52  * Bus Number Which has been Assigned to this SSP controller\\r\\n53  * on this board\\r\\n54  */\\r\\n55 master->bus_num = platform_info->bus_id;\\r\\n56 master->num_chipselect = num_cs;\\r\\n57 master->cleanup = pl022_cleanup;\\r\\n58 master->setup = pl022_setup;\\r\\n59 master->auto_runtime_pm = true;\\r\\n60 master->transfer_one_message = pl022_transfer_one_message;\\r\\n61 master->unprepare_transfer_hardware = pl022_unprepare_transfer_hardware;\\r\\n62 master->rt = platform_info->rt;\\r\\n63 master->dev.of_node = dev->of_node;\\r\\n64\\r\\n65    ...\\r\\n66}\\r\\n```\\r\\n\\r\\nSPI\u5916\u8bbe\u9a71\u52a8\u904d\u5e03\u4e8e\u5185\u6838\u7684drivers\u3001sound\u7684\u5404\u4e2a\u5b50\u76ee\u5f55\u4e4b\u4e0b\uff0cSPI\u53ea\u662f\u4e00\u79cd\u603b\u7ebf\uff0cspi_driver\u7684\u4f5c\u7528\u53ea\u662f\u5c06SPI\u5916\u8bbe\u6302\u63a5\u5728\u8be5\u603b\u7ebf\u4e0a\uff0c\u56e0\u6b64\u5728spi_driver\u7684probe\uff08\uff09\u6210\u5458\u51fd\u6570\u4e2d\uff0c\u5c06\u6ce8\u518cSPI\u5916\u8bbe\u672c\u8eab\u6240\u5c5e\u8bbe\u5907\u9a71\u52a8\u7684\u7c7b\u578b\u3002\\r\\n\\r\\n\u548cplatform_driver\u5bf9\u5e94\u7740\u4e00\u4e2aplatform_device\u4e00\u6837\uff0cspi_driver\u4e5f\u5bf9\u5e94\u7740\u4e00\u4e2aspi_device\uff1bplatform_device\u9700\u8981\u5728BSP\u7684\u677f\u6587\u4ef6\u4e2d\u6dfb\u52a0\u677f\u4fe1\u606f\u6570\u636e\uff0c\u800cspi_device\u4e5f\u540c\u6837\u9700\u8981\u3002spi_device\u7684\u677f\u4fe1\u606f\u7528spi_board_info\u7ed3\u6784\u4f53\u63cf\u8ff0\uff0c\u8be5\u7ed3\u6784\u4f53\u8bb0\u5f55\u7740SPI\u5916\u8bbe\u4f7f\u7528\u7684\u4e3b\u673a\u63a7\u5236\u5668\u5e8f\u53f7\u3001\u7247\u9009\u5e8f\u53f7\u3001\u6570\u636e\u6bd4\u7279\u7387\u3001SPI\u4f20\u8f93\u6a21\u5f0f\uff08\u5373CPOL\u3001CPHA\uff09\u7b49\u3002\u8bfa\u57fa\u4e9a770\u4e0a\u7684\u4e24\u4e2aSPI\u8bbe\u5907\u7684\u677f\u4fe1\u606f\u6570\u636e\u5982\u4ee3\u7801\u6e05\u535512.30\u6240\u793a\uff0c\u4f4d\u4e8e\u677f\u6587\u4ef6arch/arm/mach-omap1/board-nokia770.c\u4e2d\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.30\u3000\u8bfa\u57fa\u4e9a770\u677f\u6587\u4ef6\u4e2d\u7684spi_board_info\\r\\n\\r\\n```\\r\\n 1static struct spi_board_info nokia770_spi_board_info[] __initdata = {\\r\\n 2   [0] = {\\r\\n 3           .modalias           = \\"lcd_mipid\\",\\r\\n 4           .bus_num            = 2,          /* \u7528\u5230\u7684SPI\u4e3b\u673a\u63a7\u5236\u5668\u5e8f\u53f7*/\\r\\n 5           .chip_select        = 3,          /* \u4f7f\u7528\u54ea\u4e2a\u7247\u9009*/\\r\\n 6           .max_speed_hz       = 12000000,   /* SPI\u6570\u636e\u4f20\u8f93\u6bd4\u7279\u7387*/\\r\\n 7           .platform_data      = &nokia770_mipid_platform_data,\\r\\n 8   },\\r\\n 9   [1] = {\\r\\n10           .modalias           = \\"ads7846\\",\\r\\n11           .bus_num            = 2,\\r\\n12           .chip_select        = 0,\\r\\n13           .max_speed_hz       = 2500000,\\r\\n14           .irq                = OMAP_GPIO_IRQ(15),\\r\\n15           .platform_data      = &nokia770_ads7846_platform_data,\\r\\n16   },\\r\\n17};\\r\\n```\\r\\n\\r\\n\u5728Linux\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5728\u673a\u5668\u7684init_machine\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u4f1a\u901a\u8fc7\u5982\u4e0b\u8bed\u53e5\u6ce8\u518c\u8fd9\u4e9bspi_board_info\uff1a\\r\\n\\r\\n```\\r\\nspi_register_board_info(nokia770_spi_board_info,\\r\\n                       ARRAY_SIZE(nokia770_spi_board_info));\\r\\n```\\r\\n\\r\\n\u8fd9\u4e00\u70b9\u548c\u542f\u52a8\u65f6\u901a\u8fc7platform_add_devices\uff08\uff09\u6dfb\u52a0platform_device\u975e\u5e38\u76f8\u4f3c\u3002\\r\\n\\r\\nARM Linux 3.x\u4e4b\u540e\u7684\u5185\u6838\u5728\u6539\u4e3a\u8bbe\u5907\u6811\u540e\uff0c\u4e0d\u518d\u9700\u8981\u5728arch/arm/mach-xxx\u4e2d\u7f16\u7801SPI\u7684\u677f\u7ea7\u4fe1\u606f\u4e86\uff0c\u800c\u503e\u5411\u4e8e\u5728SPI\u63a7\u5236\u5668\u8282\u70b9\u4e0b\u586b\u5199\u5b50\u8282\u70b9\uff0c\u5982\u4ee3\u7801\u6e05\u535512.31\u7ed9\u51fa\u4e86arch/arm/boot/dts/omap3-overo-common-lcd43.dtsi\u4e2d\u5305\u542b\u7684ads7846\u8282\u70b9\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535512.31\u3000\u901a\u8fc7\u8bbe\u5907\u6811\u6dfb\u52a0SPI\u5916\u8bbe\\r\\n\\r\\n```\\r\\n 1&mcspi1{\\r\\n 2      pinctrl-names = \\"default\\";\\r\\n 3      pinctrl-0= <&mcspi1_pins>;\\r\\n 4\\r\\n 5      /* touch controller */\\r\\n 6      ads7846@0{\\r\\n 7              pinctrl-names = \\"default\\";\\r\\n 8              pinctrl-0= <&ads7846_pins>;\\r\\n 9\\r\\n10              compatible = \\"ti,ads7846\\";\\r\\n11              vcc-supply = <&ads7846reg>;\\r\\n12\\r\\n13              reg = <0>;               /* CS0*/\\r\\n14              spi-max-frequency = <1500000>;\\r\\n15\\r\\n16              interrupt-parent = <&gpio4>;\\r\\n17              interrupts = <180>;    /* gpio_114*/\\r\\n18              pendown-gpio = <&gpio4180>;\\r\\n19\\r\\n20              ti,x-min = /bits/ 16<0x0>;\\r\\n21              ti,x-max = /bits/ 16<0x0fff>;\\r\\n22              ti,y-min = /bits/ 16<0x0>;\\r\\n23              ti,y-max = /bits/ 16<0x0fff>;\\r\\n24              ti,x-plate-ohms = /bits/ 16<180>;\\r\\n25              ti,pressure-max = /bits/ 16<255>;\\r\\n26\\r\\n27              linux,wakeup;\\r\\n28      };\\r\\n29};\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.4\u3000Linux\u5f02\u6b65IO","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.4\u3000Linux\u5f02\u6b65IO","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.4\u3000Linux\u5f02\u6b65IO.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.4\u3000Linux\u5f02\u6b65IO.md","title":"9.4.1\u3000AIO\u6982\u5ff5\u4e0eGNU C\u5e93AIO","description":"Linux\u4e2d\u6700\u5e38\u7528\u7684\u8f93\u5165/\u8f93\u51fa\uff08I/O\uff09\u6a21\u578b\u662f\u540c\u6b65I/O\u3002\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u5f53\u8bf7\u6c42\u53d1\u51fa\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u8bf7\u6c42\u6ee1\u8db3\u4e3a\u6b62\u3002\u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8c03\u7528\u5e94\u7528\u7a0b\u5e8f\u5728\u7b49\u5f85I/O\u8bf7\u6c42\u5b8c\u6210\u65f6\u4e0d\u9700\u8981\u5360\u7528CPU\u3002\u4f46\u662f\u5728\u8bb8\u591a\u5e94\u7528\u573a\u666f\u4e2d\uff0cI/O\u8bf7\u6c42\u53ef\u80fd\u9700\u8981\u4e0eCPU\u6d88\u8017\u4ea7\u751f\u4ea4\u53e0\uff0c\u4ee5\u5145\u5206\u5229\u7528CPU\u548cI/O\u63d0\u9ad8\u541e\u5410\u7387\u3002","date":"2025-09-15T14:44:14.689Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":16.205,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"12.4.1\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/12.4\u3000\u4e3b\u673a\u9a71\u52a8\u4e0e\u5916\u8bbe\u9a71\u52a8\u5206\u79bb\u7684\u8bbe\u8ba1\u601d\u60f3"},"nextItem":{"title":"16.4.1\u3000UDC\u548cGadget\u9a71\u52a8\u7684\u5173\u952e\u6570\u636e\u7ed3\u6784\u4e0eAPI","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.4\u3000USB UDC\u4e0eGadget\u9a71\u52a8"}},"content":"Linux\u4e2d\u6700\u5e38\u7528\u7684\u8f93\u5165/\u8f93\u51fa\uff08I/O\uff09\u6a21\u578b\u662f\u540c\u6b65I/O\u3002\u5728\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u5f53\u8bf7\u6c42\u53d1\u51fa\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c31\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u8bf7\u6c42\u6ee1\u8db3\u4e3a\u6b62\u3002\u8fd9\u662f\u4e00\u79cd\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u8c03\u7528\u5e94\u7528\u7a0b\u5e8f\u5728\u7b49\u5f85I/O\u8bf7\u6c42\u5b8c\u6210\u65f6\u4e0d\u9700\u8981\u5360\u7528CPU\u3002\u4f46\u662f\u5728\u8bb8\u591a\u5e94\u7528\u573a\u666f\u4e2d\uff0cI/O\u8bf7\u6c42\u53ef\u80fd\u9700\u8981\u4e0eCPU\u6d88\u8017\u4ea7\u751f\u4ea4\u53e0\uff0c\u4ee5\u5145\u5206\u5229\u7528CPU\u548cI/O\u63d0\u9ad8\u541e\u5410\u7387\u3002\\r\\n\\r\\n\u56fe9.3\u63cf\u7ed8\u4e86\u5f02\u6b65I/O\u7684\u65f6\u5e8f\uff0c\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77I/O\u52a8\u4f5c\u540e\uff0c\u76f4\u63a5\u5f00\u59cb\u6267\u884c\uff0c\u5e76\u4e0d\u7b49\u5f85I/O\u7ed3\u675f\uff0c\u5b83\u8981\u4e48\u8fc7\u4e00\u6bb5\u65f6\u95f4\u6765\u67e5\u8be2\u4e4b\u524d\u7684I/O\u8bf7\u6c42\u5b8c\u6210\u60c5\u51b5\uff0c\u8981\u4e48I/O\u8bf7\u6c42\u5b8c\u6210\u4e86\u4f1a\u81ea\u52a8\u88ab\u8c03\u7528\u4e0eI/O\u5b8c\u6210\u7ed1\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u3002\\r\\n\\r\\n![image-20250329162852016](./figure/image-20250329162852016.png)\\r\\n\\r\\n\u56fe9.3\u3000\u5f02\u6b65I/O\u7684\u65f6\u5e8f\\r\\n\\r\\nLinux\u7684AIO\u6709\u591a\u79cd\u5b9e\u73b0\uff0c\u5176\u4e2d\u4e00\u79cd\u5b9e\u73b0\u662f\u5728\u7528\u6237\u7a7a\u95f4\u7684glibc\u5e93\u4e2d\u5b9e\u73b0\u7684\uff0c\u5b83\u672c\u8d28\u4e0a\u662f\u501f\u7528\u4e86\u591a\u7ebf\u7a0b\u6a21\u578b\uff0c\u7528\u5f00\u542f\u65b0\u7684\u7ebf\u7a0b\u4ee5\u540c\u6b65\u7684\u65b9\u6cd5\u6765\u505aI/O\uff0c\u65b0\u7684AIO\u8f85\u52a9\u7ebf\u7a0b\u4e0e\u53d1\u8d77AIO\u7684\u7ebf\u7a0b\u4ee5pthread_cond_signal\uff08\uff09\u7684\u5f62\u5f0f\u8fdb\u884c\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65\u3002glibc\u7684AIO\u4e3b\u8981\u5305\u62ec\u5982\u4e0b\u51fd\u6570\u3002\\r\\n\\r\\n1.aio_read\uff08\uff09\\r\\n\\r\\naio_read\uff08\uff09\u51fd\u6570\u8bf7\u6c42\u5bf9\u4e00\u4e2a\u6709\u6548\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fdb\u884c\u5f02\u6b65\u8bfb\u64cd\u4f5c\u3002\u8fd9\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u6587\u4ef6\u3001\u5957\u63a5\u5b57\uff0c\u751a\u81f3\u7ba1\u9053\u3002aio_read\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\\r\\n\\r\\n```\\r\\nint aio_read( struct aiocb *aiocbp );\\r\\n```\\r\\n\\r\\naio_read\uff08\uff09\u51fd\u6570\u5728\u8bf7\u6c42\u8fdb\u884c\u6392\u961f\u4e4b\u540e\u4f1a\u7acb\u5373\u8fd4\u56de\uff08\u5c3d\u7ba1\u8bfb\u64cd\u4f5c\u5e76\u672a\u5b8c\u6210\uff09\u3002\u5982\u679c\u6267\u884c\u6210\u529f\uff0c\u8fd4\u56de\u503c\u5c31\u4e3a0\uff1b\u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u8fd4\u56de\u503c\u5c31\u4e3a-1\uff0c\u5e76\u8bbe\u7f6eerrno\u7684\u503c\u3002\\r\\n\\r\\n\u53c2\u6570aiocb\uff08AIO I/O Control Block\uff09\u7ed3\u6784\u4f53\u5305\u542b\u4e86\u4f20\u8f93\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4ee5\u53ca\u4e3aAIO\u64cd\u4f5c\u51c6\u5907\u7684\u7528\u6237\u7a7a\u95f4\u7f13\u51b2\u533a\u3002\u5728\u4ea7\u751fI/O\u5b8c\u6210\u901a\u77e5\u65f6\uff0caiocb\u7ed3\u6784\u5c31\u88ab\u7528\u6765\u552f\u4e00\u6807\u8bc6\u6240\u5b8c\u6210\u7684I/O\u64cd\u4f5c\u3002\\r\\n\\r\\n2.aio_write\uff08\uff09\\r\\n\\r\\naio_write\uff08\uff09\u51fd\u6570\u7528\u6765\u8bf7\u6c42\u4e00\u4e2a\u5f02\u6b65\u5199\u64cd\u4f5c\u3002\u5176\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint aio_write( struct aiocb *aiocbp );\\r\\n```\\r\\n\\r\\naio_write\uff08\uff09\u51fd\u6570\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c\u5e76\u4e14\u5b83\u7684\u8bf7\u6c42\u5df2\u7ecf\u88ab\u6392\u961f\uff08\u6210\u529f\u65f6\u8fd4\u56de\u503c\u4e3a0\uff0c\u5931\u8d25\u65f6\u8fd4\u56de\u503c\u4e3a-1\uff0c\u5e76\u76f8\u5e94\u5730\u8bbe\u7f6eerrno\uff09\u3002\\r\\n\\r\\n3.aio_error\uff08\uff09\\r\\n\\r\\naio_error\uff08\uff09\u51fd\u6570\u88ab\u7528\u6765\u786e\u5b9a\u8bf7\u6c42\u7684\u72b6\u6001\u3002\u5176\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint aio_error( struct aiocb *aiocbp );\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4ee5\u4e0b\u5185\u5bb9\u3002\\r\\n\\r\\nEINPROGRESS\uff1a\u8bf4\u660e\u8bf7\u6c42\u5c1a\u672a\u5b8c\u6210\u3002\\r\\n\\r\\nECANCELED\uff1a\u8bf4\u660e\u8bf7\u6c42\u88ab\u5e94\u7528\u7a0b\u5e8f\u53d6\u6d88\u4e86\u3002\\r\\n\\r\\n-1\uff1a\u8bf4\u660e\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u5177\u4f53\u9519\u8bef\u539f\u56e0\u7531errno\u8bb0\u5f55\u3002\\r\\n\\r\\n4.aio_return\uff08\uff09\\r\\n\\r\\n\u5f02\u6b65I/O\u548c\u540c\u6b65\u963b\u585eI/O\u65b9\u5f0f\u4e4b\u95f4\u7684\u4e00\u4e2a\u533a\u522b\u662f\u4e0d\u80fd\u7acb\u5373\u8bbf\u95ee\u8fd9\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u72b6\u6001\uff0c\u56e0\u4e3a\u5f02\u6b65I/O\u5e76\u6ca1\u6709\u963b\u585e\u5728read\uff08\uff09\u8c03\u7528\u4e0a\u3002\u5728\u6807\u51c6\u7684\u540c\u6b65\u963b\u585eread\uff08\uff09\u8c03\u7528\u4e2d\uff0c\u8fd4\u56de\u72b6\u6001\u662f\u5728\u8be5\u51fd\u6570\u8fd4\u56de\u65f6\u63d0\u4f9b\u7684\u3002\u4f46\u662f\u5728\u5f02\u6b65I/O\u4e2d\uff0c\u6211\u4eec\u8981\u4f7f\u7528aio_return\uff08\uff09\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nssize_t aio_return( struct aiocb *aiocbp );\\r\\n```\\r\\n\\r\\n\u53ea\u6709\u5728aio_error\uff08\uff09\u8c03\u7528\u786e\u5b9a\u8bf7\u6c42\u5df2\u7ecf\u5b8c\u6210\uff08\u53ef\u80fd\u6210\u529f\uff0c\u4e5f\u53ef\u80fd\u53d1\u751f\u4e86\u9519\u8bef\uff09\u4e4b\u540e\uff0c\u624d\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002aio_return\uff08\uff09\u7684\u8fd4\u56de\u503c\u5c31\u7b49\u4ef7\u4e8e\u540c\u6b65\u60c5\u51b5\u4e2dread\uff08\uff09\u6216write\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\uff08\u6240\u4f20\u8f93\u7684\u5b57\u8282\u6570\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u8fd4\u56de\u503c\u4e3a\u8d1f\u6570\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.12\u7ed9\u51fa\u4e86\u7528\u6237\u7a7a\u95f4\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u5f02\u6b65\u8bfb\u64cd\u4f5c\u7684\u4e00\u4e2a\u4f8b\u7a0b\uff0c\u5b83\u9996\u5148\u6253\u5f00\u6587\u4ef6\uff0c\u7136\u540e\u51c6\u5907aiocb\u7ed3\u6784\u4f53\uff0c\u4e4b\u540e\u8c03\u7528aio_read\uff08&my_aiocb\uff09\u8fdb\u884c\u63d0\u51fa\u5f02\u6b65\u8bfb\u8bf7\u6c42\uff0c\u5f53aio_error\uff08&my_aiocb\uff09==EINPROGRESS\uff0c\u5373\u64cd\u4f5c\u8fd8\u5728\u8fdb\u884c\u4e2d\u65f6\uff0c\u4e00\u76f4\u7b49\u5f85\uff0c\u7ed3\u675f\u540e\u901a\u8fc7aio_return\uff08&my_aiocb\uff09\u83b7\u5f97\u8fd4\u56de\u503c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.12\u3000\u7528\u6237\u7a7a\u95f4\u5f02\u6b65\u8bfb\u4f8b\u7a0b\\r\\n\\r\\n```\\r\\n 1 #include <aio.h>\\r\\n 2 ...\\r\\n 3 int fd, ret;\\r\\n 4 struct aiocb my_aiocb;\\r\\n 5\\r\\n 6 fd = open(\\"file.txt\\", O_RDONLY);\\r\\n 7 if (fd < 0)\\r\\n 8    perror(\\"open\\");\\r\\n 9\\r\\n10/* \u6e05\u96f6aiocb\u7ed3\u6784\u4f53 */\\r\\n11bzero(&my_aiocb, sizeof(struct aiocb));\\r\\n12\\r\\n13/* \u4e3aaiocb\u8bf7\u6c42\u5206\u914d\u6570\u636e\u7f13\u51b2\u533a*/\\r\\n14my_aiocb.aio_buf = malloc(BUFSIZE + 1);\\r\\n15if (!my_aiocb.aio_buf)\\r\\n16   perror(\\"malloc\\");\\r\\n17\\r\\n18/* \u521d\u59cb\u5316aiocb\u7684\u6210\u5458 */\\r\\n19my_aiocb.aio_fildes = fd;\\r\\n20my_aiocb.aio_nbytes = BUFSIZE;\\r\\n21my_aiocb.aio_offset = 0;\\r\\n22\\r\\n23ret = aio_read(&my_aiocb);\\r\\n24if (ret < 0)\\r\\n25   perror(\\"aio_read\\");\\r\\n26\\r\\n27while (aio_error(&my_aiocb) == EINPROGRESS)\\r\\n28  continue;\\r\\n29\\r\\n30if ((ret = aio_return(&my_iocb)) > 0) {\\r\\n31   /* \u83b7\u5f97\u5f02\u6b65\u8bfb\u7684\u8fd4\u56de\u503c*/\\r\\n32} else {\\r\\n33   /* \u8bfb\u5931\u8d25\uff0c\u5206\u6790errorno */\\r\\n34}\\r\\n```\\r\\n\\r\\n5.aio_suspend\uff08\uff09\\r\\n\\r\\n\u7528\u6237\u53ef\u4ee5\u4f7f\u7528aio_suspend\uff08\uff09\u51fd\u6570\u6765\u963b\u585e\u8c03\u7528\u8fdb\u7a0b\uff0c\u76f4\u5230\u5f02\u6b65\u8bf7\u6c42\u5b8c\u6210\u4e3a\u6b62\u3002\u8c03\u7528\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2aaiocb\u5f15\u7528\u5217\u8868\uff0c\u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5b8c\u6210\u90fd\u4f1a\u5bfc\u81f4aio_suspend\uff08\uff09\u8fd4\u56de\u3002aio_suspend\uff08\uff09\u7684\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint aio_suspend( const struct aiocb *const cblist[],\\r\\n                          int n, const struct timespec *timeout );\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.13\u7ed9\u51fa\u4e86\u7528\u6237\u7a7a\u95f4\u8fdb\u884c\u5f02\u6b65\u8bfb\u64cd\u4f5c\u65f6\u4f7f\u7528aio_suspend\uff08\uff09\u51fd\u6570\u7684\u4f8b\u5b50\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.13\u3000\u7528\u6237\u7a7a\u95f4\u5f02\u6b65I/O aio_suspend\uff08\uff09\u51fd\u6570\u4f7f\u7528\u4f8b\u7a0b\\r\\n\\r\\n```\\r\\n 1struct aioct *cblist[MAX_LIST]\\r\\n 2/* \u6e05\u96f6aioct\u7ed3\u6784\u4f53\u94fe\u8868*/\\r\\n 3bzero( (char *)cblist, sizeof(cblist) );\\r\\n 4/* \u5c06\u4e00\u4e2a\u6216\u66f4\u591a\u7684aiocb\u653e\u5165aioct\u7684\u7ed3\u6784\u4f53\u94fe\u8868\u4e2d*/\\r\\n 5cblist[0] = &my_aiocb;\\r\\n 6ret = aio_read(&my_aiocb);\\r\\n 7ret = aio_suspend(cblist, MAX_LIST, NULL );\\r\\n```\\r\\n\\r\\n\u5f53\u7136\uff0c\u5728glibc\u5b9e\u73b0\u7684AIO\u4e2d\uff0c\u9664\u4e86\u4e0a\u8ff0\u540c\u6b65\u7684\u7b49\u5f85\u65b9\u5f0f\u4ee5\u5916\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4fe1\u53f7\u6216\u8005\u56de\u8c03\u673a\u5236\u6765\u5f02\u6b65\u5730\u6807\u660eAIO\u7684\u5b8c\u6210\u3002\\r\\n\\r\\n6.aio_cancel\uff08\uff09\\r\\n\\r\\naio_cancel\uff08\uff09\u51fd\u6570\u5141\u8bb8\u7528\u6237\u53d6\u6d88\u5bf9\u67d0\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6267\u884c\u7684\u4e00\u4e2a\u6216\u6240\u6709I/O\u8bf7\u6c42\u3002\u5176\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint aio_cancel(int fd, struct aiocb *aiocbp);\\r\\n```\\r\\n\\r\\n\u8981\u53d6\u6d88\u4e00\u4e2a\u8bf7\u6c42\uff0c\u7528\u6237\u9700\u63d0\u4f9b\u6587\u4ef6\u63cf\u8ff0\u7b26\u548caiocb\u6307\u9488\u3002\u5982\u679c\u8fd9\u4e2a\u8bf7\u6c42\u88ab\u6210\u529f\u53d6\u6d88\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u8fd4\u56deAIO_CANCELED\u3002\u5982\u679c\u8bf7\u6c42\u5b8c\u6210\u4e86\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u8fd4\u56deAIO_NOTCANCELED\u3002\\r\\n\\r\\n\u8981\u53d6\u6d88\u5bf9\u67d0\u4e2a\u7ed9\u5b9a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6240\u6709\u8bf7\u6c42\uff0c\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8fd9\u4e2a\u6587\u4ef6\u7684\u63cf\u8ff0\u7b26\uff0c\u5e76\u5c06aiocbp\u53c2\u6570\u8bbe\u7f6e\u4e3aNULL\u3002\u5982\u679c\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u53d6\u6d88\u4e86\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u8fd4\u56deAIO_CANCELED\uff1b\u5982\u679c\u81f3\u5c11\u6709\u4e00\u4e2a\u8bf7\u6c42\u6ca1\u6709\u88ab\u53d6\u6d88\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u8fd4\u56deAIO_NOT_CANCELED\uff1b\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u8bf7\u6c42\u53ef\u4ee5\u88ab\u53d6\u6d88\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u8fd4\u56deAIO_ALLDONE\u3002\u7136\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528aio_error\uff08\uff09\u6765\u9a8c\u8bc1\u6bcf\u4e2aAIO\u8bf7\u6c42\uff0c\u5982\u679c\u67d0\u8bf7\u6c42\u5df2\u7ecf\u88ab\u53d6\u6d88\u4e86\uff0c\u90a3\u4e48aio_error\uff08\uff09\u5c31\u4f1a\u8fd4\u56de-1\uff0c\u5e76\u4e14errno\u4f1a\u88ab\u8bbe\u7f6e\u4e3aECANCELED\u3002\\r\\n\\r\\n7.lio_listio\uff08\uff09\\r\\n\\r\\nlio_listio\uff08\uff09\u51fd\u6570\u53ef\u7528\u4e8e\u540c\u65f6\u53d1\u8d77\u591a\u4e2a\u4f20\u8f93\u3002\u8fd9\u4e2a\u51fd\u6570\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u5728\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u4e2d\u542f\u52a8\u5927\u91cf\u7684I/O\u64cd\u4f5c\u3002lio_listio API\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint lio_listio( int mode, struct aiocb *list[], int nent, struct sigevent *sig );\\r\\n```\\r\\n\\r\\nmode\u53c2\u6570\u53ef\u4ee5\u662fLIO_WAIT\u6216LIO_NOWAIT\u3002LIO_WAIT\u4f1a\u963b\u585e\u8fd9\u4e2a\u8c03\u7528\uff0c\u76f4\u5230\u6240\u6709\u7684I/O\u90fd\u5b8c\u6210\u4e3a\u6b62\u3002\u4f46\u662f\u82e5\u662fLIO_NOWAIT\u6a21\u578b\uff0c\u5728I/O\u64cd\u4f5c\u8fdb\u884c\u6392\u961f\u4e4b\u540e\uff0c\u8be5\u51fd\u6570\u5c31\u4f1a\u8fd4\u56de\u3002list\u662f\u4e00\u4e2aaiocb\u5f15\u7528\u7684\u5217\u8868\uff0c\u6700\u5927\u5143\u7d20\u7684\u4e2a\u6570\u662f\u7531nent\u5b9a\u4e49\u7684\u3002\u5982\u679clist\u7684\u5143\u7d20\u4e3aNULL\uff0clio_listio\uff08\uff09\u4f1a\u5c06\u5176\u5ffd\u7565\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.14\u7ed9\u51fa\u4e86\u7528\u6237\u7a7a\u95f4\u8fdb\u884c\u5f02\u6b65I/O\u64cd\u4f5c\u65f6\u4f7f\u7528lio_listio\uff08\uff09\u51fd\u6570\u7684\u4f8b\u5b50\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.14\u3000\u7528\u6237\u7a7a\u95f4\u5f02\u6b65I/O lio_listio\uff08\uff09\u51fd\u6570\u4f7f\u7528\u4f8b\u7a0b\\r\\n\\r\\n```\\r\\n 1struct aiocb aiocb1, aiocb2;\\r\\n 2struct aiocb *list[MAX_LIST];\\r\\n 3...\\r\\n 4/* \u51c6\u5907\u7b2c\u4e00\u4e2aaiocb */\\r\\n 5aiocb1.aio_fildes = fd;\\r\\n 6aiocb1.aio_buf = malloc( BUFSIZE+1 );\\r\\n 7aiocb1.aio_nbytes = BUFSIZE;\\r\\n 8aiocb1.aio_offset = next_offset;\\r\\n 9aiocb1.aio_lio_opcode = LIO_READ;                    /* \u5f02\u6b65\u8bfb\u64cd\u4f5c*/\\r\\n10...  /* \u51c6\u5907\u591a\u4e2aaiocb */\\r\\n11bzero( (char *)list, sizeof(list) );\\r\\n12\\r\\n13/* \u5c06aiocb\u586b\u5165\u94fe\u8868*/\\r\\n14list[0] = &aiocb1;\\r\\n15list[1] = &aiocb2;\\r\\n16...\\r\\n17ret = lio_listio( LIO_WAIT, list, MAX_LIST, NULL );  /* \u53d1\u8d77\u5927\u91cfI/O\u64cd\u4f5c*/\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c9\u884c\u4e2d\uff0c\u56e0\u4e3a\u662f\u8fdb\u884c\u5f02\u6b65\u8bfb\u64cd\u4f5c\uff0c\u6240\u4ee5\u64cd\u4f5c\u7801\u4e3aLIO_READ\uff0c\u5bf9\u4e8e\u5199\u64cd\u4f5c\u6765\u8bf4\uff0c\u5e94\u8be5\u4f7f\u7528LIO_WRITE\u4f5c\u4e3a\u64cd\u4f5c\u7801\uff0c\u800cLIO_NOP\u610f\u5473\u7740\u7a7a\u64cd\u4f5c\u3002\\r\\n\\r\\n\u7f51\u9875http://www.gnu.org/software/libc/manual/html_node/Asynchronous-I_002fO.html \u5305\u542b\u4e86AIO\u5e93\u51fd\u6570\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\\r\\n\\r\\n# 9.4.2\u3000Linux\u5185\u6838AIO\u4e0elibaio\\r\\n\\r\\nLinux AIO\u4e5f\u53ef\u4ee5\u7531\u5185\u6838\u7a7a\u95f4\u5b9e\u73b0\uff0c\u5f02\u6b65I/O\u662fLinux 2.6\u4ee5\u540e\u7248\u672c\u5185\u6838\u7684\u4e00\u4e2a\u6807\u51c6\u7279\u6027\u3002\u5bf9\u4e8e\u5757\u8bbe\u5907\u800c\u8a00\uff0cAIO\u53ef\u4ee5\u4e00\u6b21\u6027\u53d1\u51fa\u5927\u91cf\u7684read/write\u8c03\u7528\u5e76\u4e14\u901a\u8fc7\u901a\u7528\u5757\u5c42\u7684I/O\u8c03\u5ea6\u6765\u83b7\u5f97\u66f4\u597d\u7684\u6027\u80fd\uff0c\u7528\u6237\u7a0b\u5e8f\u4e5f\u53ef\u4ee5\u51cf\u5c11\u8fc7\u591a\u7684\u540c\u6b65\u8d1f\u8f7d\uff0c\u8fd8\u53ef\u4ee5\u5728\u4e1a\u52a1\u903b\u8f91\u4e2d\u66f4\u7075\u6d3b\u5730\u8fdb\u884c\u5e76\u53d1\u63a7\u5236\u548c\u8d1f\u8f7d\u5747\u8861\u3002\u76f8\u8f83\u4e8eglibc\u7684\u7528\u6237\u7a7a\u95f4\u591a\u7ebf\u7a0b\u540c\u6b65\u7b49\u5b9e\u73b0\u4e5f\u51cf\u5c11\u4e86\u7ebf\u7a0b\u7684\u8d1f\u8f7d\u548c\u4e0a\u4e0b\u6587\u5207\u6362\u7b49\u3002\u5bf9\u4e8e\u7f51\u7edc\u8bbe\u5907\u800c\u8a00\uff0c\u5728socket\u5c42\u9762\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528AIO\uff0c\u8ba9CPU\u548c\u7f51\u5361\u7684\u6536\u53d1\u52a8\u4f5c\u5145\u5206\u4ea4\u53e0\u4ee5\u6539\u5584\u541e\u5410\u6027\u80fd\u3002\u9009\u62e9\u6b63\u786e\u7684I/O\u6a21\u578b\u5bf9\u7cfb\u7edf\u6027\u80fd\u7684\u5f71\u54cd\u5f88\u5927\uff0c\u6709\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u53c2\u9605\u8457\u540d\u7684C10K\u95ee\u9898\uff08\u6307\u7684\u662f\u670d\u52a1\u5668\u540c\u65f6\u652f\u6301\u6210\u5343\u4e0a\u4e07\u4e2a\u5ba2\u6237\u7aef\u7684\u95ee\u9898\uff09\uff0c\u8be6\u89c1\u7f51\u5740http://www.kegel.com/c10k.html \u3002\\r\\n\\r\\n\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u6211\u4eec\u4e00\u822c\u8981\u7ed3\u5408libaio\u6765\u8fdb\u884c\u5185\u6838AIO\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u5185\u6838AIO\u63d0\u4f9b\u7684\u7cfb\u7edf\u8c03\u7528\u4e3b\u8981\u5305\u62ec\uff1a\\r\\n\\r\\n```\\r\\nint io_setup(int maxevents, io_context_t *ctxp);\\r\\nint io_destroy(io_context_t ctx);\\r\\nint io_submit(io_context_t ctx, long nr, struct iocb *ios[]);\\r\\nint io_cancel(io_context_t ctx, struct iocb *iocb, struct io_event *evt);\\r\\nint io_getevents(io_context_t ctx_id, long min_nr, long nr, struct io_event *events,\\r\\n    struct timespec *timeout);\\r\\nvoid io_set_callback(struct iocb *iocb, io_callback_t cb);\\r\\nvoid io_prep_pwrite(struct iocb *iocb, int fd, void *buf, size_t count, long long offset);\\r\\nvoid io_prep_pread(struct iocb *iocb, int fd, void *buf, size_t count, long long offset);\\r\\nvoid io_prep_pwritev(struct iocb *iocb, int fd, const struct iovec *iov, int iovcnt,\\r\\n    long long offset);\\r\\nvoid io_prep_preadv(struct iocb *iocb, int fd, const struct iovec *iov, int iovcnt,\\r\\n    long long offset);\\r\\n```\\r\\n\\r\\nAIO\u7684\u8bfb\u5199\u8bf7\u6c42\u90fd\u7528io_submit\uff08\uff09\u4e0b\u53d1\u3002\u4e0b\u53d1\u524d\u901a\u8fc7io_prep_pwrite\uff08\uff09\u548cio_prep_pread\uff08\uff09\u751f\u6210iocb\u7684\u7ed3\u6784\u4f53\uff0c\u4f5c\u4e3aio_submit\uff08\uff09\u7684\u53c2\u6570\u3002\u8fd9\u4e2a\u7ed3\u6784\u4f53\u6307\u5b9a\u4e86\u8bfb\u5199\u7c7b\u578b\u3001\u8d77\u59cb\u5730\u5740\u3001\u957f\u5ea6\u548c\u8bbe\u5907\u6807\u5fd7\u7b26\u7b49\u4fe1\u606f\u3002\u8bfb\u5199\u8bf7\u6c42\u4e0b\u53d1\u4e4b\u540e\uff0c\u4f7f\u7528io_getevents\uff08\uff09\u51fd\u6570\u7b49\u5f85I/O\u5b8c\u6210\u4e8b\u4ef6\u3002io_set_callback\uff08\uff09\u5219\u53ef\u8bbe\u7f6e\u4e00\u4e2aAIO\u5b8c\u6210\u7684\u56de\u8c03\u51fd\u6570\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.15\u6f14\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5229\u7528libaio\u5411\u5185\u6838\u53d1\u8d77AIO\u8bf7\u6c42\u7684\u6a21\u7248\u3002\u8be5\u7a0b\u5e8f\u4f4d\u4e8e\u672c\u4e66\u6e90\u4ee3\u7801\u7684/kernel/drivers/globalfifo/ch9/aior.c\u4e0b\uff0c\u4f7f\u7528\u547d\u4ee4gcc aior.c-o aior\u2013laio\u7f16\u8bd1\uff0c\u8fd0\u884c\u65f6\u5e261\u4e2a\u6587\u672c\u6587\u4ef6\u8def\u5f84\u4f5c\u4e3a\u53c2\u6570\uff0c\u8be5\u7a0b\u5e8f\u4f1a\u6253\u5370\u8be5\u6587\u672c\u6587\u4ef6\u524d4096\u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.15\u3000\u4f7f\u7528libaio\u8c03\u7528\u5185\u6838AIO\u7684\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1#define _GNU_SOURCE     /* O_DIRECT is not POSIX */\\r\\n 2#include <stdio.h>      /* for perror() */\\r\\n 3#include <unistd.h>     /* for syscall() */\\r\\n 4#include <fcntl.h>      /* O_RDWR */\\r\\n 5#include <string.h>     /* memset() */\\r\\n 6#include <inttypes.h>   /* uint64_t */\\r\\n 7#include <stdlib.h>\\r\\n 8\\r\\n 9#include <libaio.h>\\r\\n10\\r\\n11#define BUF_SIZE 4096\\r\\n12\\r\\n13int main(int argc, char **argv)\\r\\n14{\\r\\n15  io_context_t ctx = 0;\\r\\n16  struct iocb cb;\\r\\n17  struct iocb *cbs[1];\\r\\n18  unsigned char *buf;\\r\\n19  struct io_event events[1];\\r\\n20  int ret;\\r\\n21  int fd;\\r\\n22\\r\\n23  if (argc < 2) {\\r\\n24       printf(\\"the command format: aior [FILE]\\\\n\\");\\r\\n25       exit(1);\\r\\n26  }\\r\\n27\\r\\n28  fd = open(argv[1], O_RDWR | O_DIRECT);\\r\\n29  if (fd < 0) {\\r\\n30       perror(\\"open error\\");\\r\\n31       goto err;\\r\\n32  }\\r\\n33\\r\\n34  /* Allocate aligned memory */\\r\\n35  ret = posix_memalign((void **)&buf, 512, (BUF_SIZE + 1));\\r\\n36  if (ret < 0) {\\r\\n37       perror(\\"posix_memalign failed\\");\\r\\n38       goto err1;\\r\\n39  }\\r\\n40  memset(buf, 0, BUF_SIZE + 1);\\r\\n41\\r\\n42  ret = io_setup(128, &ctx);\\r\\n43  if (ret < 0) {\\r\\n44       printf(\\"io_setup error:%s\\", strerror(-ret));\\r\\n45       goto err2;\\r\\n46  }\\r\\n47\\r\\n48  /* setup I/O control block */\\r\\n49  io_prep_pread(&cb, fd, buf, BUF_SIZE, 0);\\r\\n50\\r\\n51  cbs[0] = &cb;\\r\\n52  ret = io_submit(ctx, 1, cbs);\\r\\n53  if (ret != 1) {\\r\\n54       if (ret < 0) {\\r\\n55            printf(\\"io_submit error:%s\\", strerror(-ret));\\r\\n56       } else {\\r\\n57            fprintf(stderr, \\"could not sumbit IOs\\");\\r\\n58       }\\r\\n59       goto err3;\\r\\n60  }\\r\\n61\\r\\n62  /* get the reply */\\r\\n63  ret = io_getevents(ctx, 1, 1, events, NULL);\\r\\n64  if (ret != 1) {\\r\\n65       if (ret < 0) {\\r\\n66            printf(\\"io_getevents error:%s\\", strerror(-ret));\\r\\n67       } else {\\r\\n68            fprintf(stderr, \\"could not get Events\\");\\r\\n69       }\\r\\n70       goto err3;\\r\\n71  }\\r\\n72  if (events[0].res2 == 0) {\\r\\n73       printf(\\"%s\\\\n\\", buf);\\r\\n74  } else {\\r\\n75       printf(\\"AIO error:%s\\", strerror(-events[0].res));\\r\\n76       goto err3;\\r\\n77  }\\r\\n78\\r\\n79  if ((ret = io_destroy(ctx)) < 0) {\\r\\n80       printf(\\"io_destroy error:%s\\", strerror(-ret));\\r\\n81       goto err2;\\r\\n82  }\\r\\n83\\r\\n84  free(buf);\\r\\n85  close(fd);\\r\\n86  return 0;\\r\\n87\\r\\n88 err3:\\r\\n89  if ((ret = io_destroy(ctx)) < 0)\\r\\n90       printf(\\"io_destroy error:%s\\", strerror(-ret));\\r\\n91 err2:\\r\\n92  free(buf);\\r\\n93 err1:\\r\\n94  close(fd);\\r\\n95 err:\\r\\n96  return -1;\\r\\n97}\\r\\n```\\r\\n\\r\\n# 9.4.3\u3000AIO\u4e0e\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n\u7528\u6237\u7a7a\u95f4\u8c03\u7528io_submit\uff08\uff09\u540e\uff0c\u5bf9\u5e94\u4e8e\u7528\u6237\u4f20\u9012\u7684\u6bcf\u4e00\u4e2aiocb\u7ed3\u6784\uff0c\u5185\u6838\u4f1a\u751f\u6210\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684kiocb\u7ed3\u6784\u3002file_operations\u5305\u542b3\u4e2a\u4e0eAIO\u76f8\u5173\u7684\u6210\u5458\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nssize_t (*aio_read) (struct kiocb *iocb, const struct iovec *iov, unsigned long\\r\\n    nr_segs, loff_t pos);\\r\\nssize_t (*aio_write) (struct kiocb *iocb, const struct iovec *iov, unsigned\\r\\n    long nr_segs, loff_t pos);\\r\\nint (*aio_fsync) (struct kiocb *iocb, int datasync);\\r\\n```\\r\\n\\r\\nio_submit\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u95f4\u63a5\u5f15\u8d77\u4e86file_operations\u4e2d\u7684aio_read\uff08\uff09\u548caio_write\uff08\uff09\u7684\u8c03\u7528\u3002\\r\\n\\r\\n\u5728\u65e9\u671f\u7684Linux\u5185\u6838\u4e2d\uff0caio_read\uff08\uff09\u548caio_write\uff08\uff09\u7684\u539f\u578b\u662f\uff1a\\r\\n\\r\\n```\\r\\nssize_t (*aio_read) (struct kiocb *iocb, char __user *buffer,\\r\\n                         size_t size, loff_t pos);\\r\\nssize_t (*aio_write) (struct kiocb *iocb, const char *buffer,\\r\\nsize_t count, loff_t offset);\\r\\n```\\r\\n\\r\\n\u5728\u8fd9\u4e2a\u8001\u7684\u539f\u578b\u91cc\uff0c\u53ea\u542b\u6709\u4e00\u4e2a\u7f13\u51b2\u533a\u6307\u9488\uff0c\u800c\u5728\u65b0\u7684\u539f\u578b\u4e2d\uff0c\u5219\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u5411\u91cfiovec\uff0c\u5b83\u542b\u6709\u591a\u6bb5\u7f13\u51b2\u533a\u3002\u8be6\u89c1\u4f4d\u4e8ehttps://lwn.net/Articles/170954/ \u7684\u6587\u6863\u300aAsynchronous I/O and vectored operations\u300b\u3002\\r\\n\\r\\nAIO\u4e00\u822c\u7531\u5185\u6838\u7a7a\u95f4\u7684\u901a\u7528\u4ee3\u7801\u5904\u7406\uff0c\u5bf9\u4e8e\u5757\u8bbe\u5907\u548c\u7f51\u7edc\u8bbe\u5907\u800c\u8a00\uff0c\u4e00\u822c\u5728Linux\u6838\u5fc3\u5c42\u7684\u4ee3\u7801\u5df2\u7ecf\u89e3\u51b3\u3002\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e00\u822c\u4e0d\u9700\u8981\u5b9e\u73b0AIO\u652f\u6301\u3002Linux\u5185\u6838\u4e2d\u5bf9\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u5b9e\u73b0AIO\u7684\u7279\u4f8b\u5305\u62ecdrivers/char/mem.c\u91cc\u5b9e\u73b0\u7684null\u3001zero\u7b49\uff0c\u7531\u4e8ezero\u8fd9\u6837\u7684\u865a\u62df\u8bbe\u5907\u5176\u5b9e\u4e5f\u4e0d\u5b58\u5728\u5728\u8981\u53bb\u8bfb\u7684\u65f6\u5019\u8bfb\u4e0d\u5230\u4e1c\u897f\u7684\u60c5\u51b5\uff0c\u6240\u4ee5aio_read_zero\uff08\uff09\u672c\u8d28\u4e0a\u4e5f\u4e0d\u5305\u542b\u5f02\u6b65\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u4ece\u4ee3\u7801\u6e05\u53559.16\u6211\u4eec\u53ef\u4ee5\u4e00\u7aa5iovec\u7684\u5168\u8c8c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.16\u3000zero\u8bbe\u5907\u7684aio_read\u5b9e\u73b0\\r\\n\\r\\n```\\r\\n 1static ssize_t aio_read_zero(struct kiocb *iocb, const struct iovec *iov,\\r\\n 2                             unsigned long nr_segs, loff_t pos)\\r\\n 3{\\r\\n 4        size_t written = 0;\\r\\n 5        unsigned long i;\\r\\n 6        ssize_t ret;\\r\\n 7\\r\\n 8        for (i = 0; i < nr_segs; i++) {\\r\\n 9                ret = read_zero(iocb->ki_filp, iov[i].iov_base, iov[i].iov_len,\\r\\n10                                &pos);\\r\\n11                if (ret < 0)\\r\\n12                        break;\\r\\n13                written += ret;\\r\\n14        }\\r\\n15\\r\\n16        return written   written : -EFAULT;\\r\\n17}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.4\u3000USB UDC\u4e0eGadget\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.4\u3000USB UDC\u4e0eGadget\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.4\u3000USB UDC\u4e0eGadget\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.4\u3000USB UDC\u4e0eGadget\u9a71\u52a8.md","title":"16.4.1\u3000UDC\u548cGadget\u9a71\u52a8\u7684\u5173\u952e\u6570\u636e\u7ed3\u6784\u4e0eAPI","description":"\u8fd9\u91cc\u7684USB\u8bbe\u5907\u63a7\u5236\u5668\uff08UDC\uff09\u9a71\u52a8\u6307\u7684\u662f\u4f5c\u4e3a\u5176\u4ed6USB\u4e3b\u673a\u63a7\u5236\u5668\u5916\u8bbe\u7684USB\u786c\u4ef6\u8bbe\u5907\u4e0a\u5e95\u5c42\u786c\u4ef6\u63a7\u5236\u5668\u7684\u9a71\u52a8\uff0c\u8be5\u786c\u4ef6\u548c\u9a71\u52a8\u8d1f\u8d23\u5c06\u4e00\u4e2aUSB\u8bbe\u5907\u4f9d\u9644\u4e8e\u4e00\u4e2aUSB\u4e3b\u673a\u63a7\u5236\u5668\u4e0a\u3002\u4f8b\u5982\uff0c\u5f53\u67d0\u8fd0\u884cLinux\u7cfb\u7edf\u7684\u624b\u673a\u4f5c\u4e3aPC\u7684U\u76d8\u65f6\uff0c\u624b\u673a\u4e2d\u7684\u5e95\u5c42USB\u63a7\u5236\u5668\u884c\u4f7fUSB\u8bbe\u5907\u63a7\u5236\u5668\u7684\u529f\u80fd\uff0c\u8fd9\u65f6\u5019\u8fd0\u884c\u5728\u5e95\u5c42\u7684\u662fUDC\u9a71\u52a8\uff0c\u800c\u624b\u673a\u8981\u6210\u4e3aU\u76d8\uff0c\u5728UDC\u9a71\u52a8\u4e4b\u4e0a\u4ecd\u7136\u9700\u8981\u53e6\u5916\u4e00\u4e2a\u9a71\u52a8\uff0c\u5bf9\u4e8eUSB\u5927\u5bb9\u91cf\u5b58\u50a8\u5668\u800c\u8a00\uff0c\u8fd9\u4e2a\u9a71\u52a8\u4e3aFile Storage\u9a71\u52a8\uff0c\u79f0\u4e3aFunction\u9a71\u52a8\u3002\u4ece\u56fe16.1\u5de6\u8fb9\u53ef\u4ee5\u770b\u51fa\uff0cUSB\u8bbe\u5907\u9a71\u52a8\u8c03\u7528USB\u6838\u5fc3\u7684API\uff0c\u56e0\u6b64\u5177\u4f53\u9a71\u52a8\u4e0eSoC\u65e0\u5173\uff1b\u540c\u6837\uff0c\u4ece\u56fe16.1\u53f3\u8fb9\u53ef\u4ee5\u770b\u51fa\uff0cFunction\u9a71\u52a8\u8c03\u7528\u901a\u7528\u7684Gadget Function API\uff0c\u56e0\u6b64\u5177\u4f53Function\u9a71\u52a8\u4e5f\u53d8\u5f97\u4e0eSoC\u65e0\u5173\u3002\u8f6f\u4ef6\u5206\u5c42\u8bbe\u8ba1\u7684\u597d\u5904\u518d\u4e00\u6b21\u5f97\u5230\u4e86\u6df1\u523b\u7684\u4f53\u73b0","date":"2025-09-15T14:44:14.669Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":13.195,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"9.4.1\u3000AIO\u6982\u5ff5\u4e0eGNU C\u5e93AIO","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.4\u3000Linux\u5f02\u6b65IO"},"nextItem":{"title":"2.8.1\u3000\u4e07\u7528\u8868","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.8\u3000\u4eea\u5668\u4eea\u8868\u4f7f\u7528"}},"content":"\u8fd9\u91cc\u7684USB\u8bbe\u5907\u63a7\u5236\u5668\uff08UDC\uff09\u9a71\u52a8\u6307\u7684\u662f\u4f5c\u4e3a\u5176\u4ed6USB\u4e3b\u673a\u63a7\u5236\u5668\u5916\u8bbe\u7684USB\u786c\u4ef6\u8bbe\u5907\u4e0a\u5e95\u5c42\u786c\u4ef6\u63a7\u5236\u5668\u7684\u9a71\u52a8\uff0c\u8be5\u786c\u4ef6\u548c\u9a71\u52a8\u8d1f\u8d23\u5c06\u4e00\u4e2aUSB\u8bbe\u5907\u4f9d\u9644\u4e8e\u4e00\u4e2aUSB\u4e3b\u673a\u63a7\u5236\u5668\u4e0a\u3002\u4f8b\u5982\uff0c\u5f53\u67d0\u8fd0\u884cLinux\u7cfb\u7edf\u7684\u624b\u673a\u4f5c\u4e3aPC\u7684U\u76d8\u65f6\uff0c\u624b\u673a\u4e2d\u7684\u5e95\u5c42USB\u63a7\u5236\u5668\u884c\u4f7fUSB\u8bbe\u5907\u63a7\u5236\u5668\u7684\u529f\u80fd\uff0c\u8fd9\u65f6\u5019\u8fd0\u884c\u5728\u5e95\u5c42\u7684\u662fUDC\u9a71\u52a8\uff0c\u800c\u624b\u673a\u8981\u6210\u4e3aU\u76d8\uff0c\u5728UDC\u9a71\u52a8\u4e4b\u4e0a\u4ecd\u7136\u9700\u8981\u53e6\u5916\u4e00\u4e2a\u9a71\u52a8\uff0c\u5bf9\u4e8eUSB\u5927\u5bb9\u91cf\u5b58\u50a8\u5668\u800c\u8a00\uff0c\u8fd9\u4e2a\u9a71\u52a8\u4e3aFile Storage\u9a71\u52a8\uff0c\u79f0\u4e3aFunction\u9a71\u52a8\u3002\u4ece\u56fe16.1\u5de6\u8fb9\u53ef\u4ee5\u770b\u51fa\uff0cUSB\u8bbe\u5907\u9a71\u52a8\u8c03\u7528USB\u6838\u5fc3\u7684API\uff0c\u56e0\u6b64\u5177\u4f53\u9a71\u52a8\u4e0eSoC\u65e0\u5173\uff1b\u540c\u6837\uff0c\u4ece\u56fe16.1\u53f3\u8fb9\u53ef\u4ee5\u770b\u51fa\uff0cFunction\u9a71\u52a8\u8c03\u7528\u901a\u7528\u7684Gadget Function API\uff0c\u56e0\u6b64\u5177\u4f53Function\u9a71\u52a8\u4e5f\u53d8\u5f97\u4e0eSoC\u65e0\u5173\u3002\u8f6f\u4ef6\u5206\u5c42\u8bbe\u8ba1\u7684\u597d\u5904\u518d\u4e00\u6b21\u5f97\u5230\u4e86\u6df1\u523b\u7684\u4f53\u73b0\\r\\n\\r\\nUDC\u9a71\u52a8\u548cFunction\u9a71\u52a8\u90fd\u4f4d\u4e8e\u5185\u6838\u7684drivers/usb/gadget\u76ee\u5f55\u4e2d\uff0c\u5982drivers/usb/gadget/udc\u4e0b\u9762\u7684fsl_mxc_udc.c\u3001omap_udc.c\u3001s3c2410_udc.c\u7b49\u662f\u5bf9\u5e94SoC\u5e73\u53f0\u4e0a\u7684UDC\u9a71\u52a8\uff0c\u800cdrivers/usb/gadget/function\u5b50\u76ee\u5f55\u7684f_serial.c\u3001f_mass_storage.c\u3001f_rndis.c\u7b49\u6587\u4ef6\u5b9e\u73b0\u4e86\u4e00\u4e9bGadget\u529f\u80fd\uff0c\u91cd\u8981\u7684Function\u9a71\u52a8\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\nEthernet over USB\uff1a\u8be5\u9a71\u52a8\u6a21\u62df\u4ee5\u592a\u7f51\u7f51\u53e3\uff0c\u5b83\u652f\u6301\u591a\u79cd\u8fd0\u884c\u65b9\u5f0f\u2014CDC Ethernet\uff08\u5b9e\u73b0\u6807\u51c6\u7684Communications Device Class\\"Ethernet Model\\"\u534f\u8bae\uff09\u3001CDC Subset\u4ee5\u53caRNDIS\uff08\u5fae\u8f6f\u516c\u53f8\u5bf9CDC Ethernet\u7684\u53d8\u79cd\u5b9e\u73b0\uff09\u3002\\r\\n\\r\\nFile-Backed Storage Gadget\uff1a\u6700\u5e38\u89c1\u7684U\u76d8\u529f\u80fd\u5b9e\u73b0\u3002\\r\\n\\r\\nSerial Gadget\uff1a\u5305\u62ecGeneric Serial\u5b9e\u73b0\uff08\u53ea\u9700\u8981Bulk-in/Bulk-out\u7aef\u70b9+ep0\uff09\u548cCDC ACM\u89c4\u8303\u5b9e\u73b0\u3002\u5185\u6838\u6e90\u4ee3\u7801\u4e2d\u7684Documentation/usb/gadget_serial.txt\u6587\u6863\u8bb2\u89e3\u4e86\u5982\u4f55\u5c06Serial Gadget\u4e0eWindows\u548cLinux\u4e3b\u673a\u8fde\u63a5\u3002\\r\\n\\r\\nGadget MIDI\uff1a\u66b4\u9732ALSA MIDI\u63a5\u53e3\u3002\\r\\n\\r\\nUSB Video Class Gadget\u9a71\u52a8\uff1a\u8ba9Linux\u7cfb\u7edf\u6210\u4e3a\u53e6\u5916\u4e00\u4e2a\u7cfb\u7edf\u7684USB\u89c6\u9891\u91c7\u96c6\u6e90\\r\\n\\r\\n\u53e6\u5916\uff0cdrivers/usb/gadget\u6e90\u4ee3\u7801\u8fd8\u5b9e\u73b0\u4e86\u4e00\u4e2aGadget\u6587\u4ef6\u7cfb\u7edf\uff08GadgetFS\uff09\uff0c\u53ef\u4ee5\u5c06Gadget API\u63a5\u53e3\u66b4\u9732\u7ed9\u5e94\u7528\u5c42\uff0c\u4ee5\u4fbf\u5728\u5e94\u7528\u5c42\u5b9e\u73b0\u7528\u6237\u7a7a\u95f4\u7684\u9a71\u52a8\u3002\\r\\n\\r\\n\u5728USB\u8bbe\u5907\u63a7\u5236\u5668\u9a71\u52a8\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u5fc3\u51e0\u4e2a\u6838\u5fc3\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u5305\u62ec\u63cf\u8ff0\u4e00\u4e2aUSB\u8bbe\u5907\u63a7\u5236\u5668\u7684usb_gadget\u3001UDC\u64cd\u4f5cusb_gadget_ops\u3001\u63cf\u8ff0\u4e00\u4e2a\u7aef\u70b9\u7684usb_ep\u4ee5\u53ca\u63cf\u8ff0\u7aef\u70b9\u64cd\u4f5c\u7684usb_ep_ops\u7ed3\u6784\u4f53\u3002UDC\u9a71\u52a8\u56f4\u7ed5\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u53ca\u5176\u6210\u5458\u51fd\u6570\u800c\u5c55\u5f00\uff0c\u4ee3\u7801\u6e05\u535516.30\u5217\u51fa\u4e86\u8fd9\u4e9b\u5173\u952e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u4eec\u90fd\u5b9a\u4e49\u4e8einclude/linux/usb/gadget.h\u6587\u4ef6\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.30\u3000UDC\u9a71\u52a8\u7684\u5173\u952e\u6570\u636e\u7ed3\u6784\\r\\n\\r\\n```\\r\\n 1struct usb_gadget {\\r\\n 2        struct work_struct              work;\\r\\n 3        /* readonly to gadget driver    */\\r\\n 4        const struct usb_gadget_ops       *ops;\\r\\n 5        struct usb_ep                   *ep0;\\r\\n 6        struct list_head                ep_list;        /* of usb_ep */\\r\\n 7        enum usb_device_speed            speed;\\r\\n 8        enum usb_device_speed            max_speed;\\r\\n 9        enum usb_device_state            state;\\r\\n10        const char                      *name;\\r\\n11        struct device                   dev;\\r\\n12        unsigned                       out_epnum;\\r\\n13        unsigned                       in_epnum;\\r\\n14\\r\\n15        unsigned                       sg_supported:1;\\r\\n16        unsigned                       is_otg:1;\\r\\n17        unsigned                       is_a_peripheral:1;\\r\\n18        unsigned                       b_hnp_enable:1;\\r\\n19        unsigned                       a_hnp_support:1;\\r\\n20        unsigned                       a_alt_hnp_support:1;\\r\\n21        unsigned                       quirk_ep_out_aligned_size:1;\\r\\n22        unsigned                       is_selfpowered:1;\\r\\n23};\\r\\n24\\r\\n25struct usb_ep {\\r\\n26        void                   *driver_data;\\r\\n27\\r\\n28        const char              *name;\\r\\n29        const struct usb_ep_ops   *ops;\\r\\n30        struct list_head        ep_list;\\r\\n31        unsigned               maxpacket:16;\\r\\n32        unsigned               maxpacket_limit:16;\\r\\n33        unsigned               max_streams:16;\\r\\n34        unsigned               mult:2;\\r\\n35        unsigned               maxburst:5;\\r\\n36        u8                    address;\\r\\n37        const struct usb_endpoint_descriptor    *desc;\\r\\n38        const struct usb_ss_ep_comp_descriptor  *comp_desc;\\r\\n39};\\r\\n40\\r\\n41struct usb_gadget_ops {\\r\\n42        int    (*get_frame)(struct usb_gadget *);\\r\\n43        int    (*wakeup)(struct usb_gadget *);\\r\\n44        int    (*set_selfpowered) (struct usb_gadget *, int is_selfpowered);\\r\\n45        int    (*vbus_session) (struct usb_gadget *, int is_active);\\r\\n46        int    (*vbus_draw) (struct usb_gadget *, unsigned mA);\\r\\n47        int    (*pullup) (struct usb_gadget *, int is_on);\\r\\n48        int    (*ioctl)(struct usb_gadget *,\\r\\n49                            unsigned code, unsigned long param);\\r\\n50        void   (*get_config_params)(struct usb_dcd_config_params *);\\r\\n51        int    (*udc_start)(struct usb_gadget *,\\r\\n52                     struct usb_gadget_driver *);\\r\\n53        int    (*udc_stop)(struct usb_gadget *);\\r\\n54};\\r\\n55struct usb_ep_ops {\\r\\n56        int (*enable) (struct usb_ep *ep,\\r\\n57               const struct usb_endpoint_descriptor *desc);\\r\\n58        int (*disable) (struct usb_ep *ep);\\r\\n59\\r\\n60        struct usb_request *(*alloc_request) (struct usb_ep *ep,\\r\\n61               gfp_t gfp_flags);\\r\\n62        void (*free_request) (struct usb_ep *ep, struct usb_request *req);\\r\\n63\\r\\n64        int (*queue) (struct usb_ep *ep, struct usb_request *req,\\r\\n65               gfp_t gfp_flags);\\r\\n66        int (*dequeue) (struct usb_ep *ep, struct usb_request *req);\\r\\n67\\r\\n68        int (*set_halt) (struct usb_ep *ep, int value);\\r\\n69        int (*set_wedge) (struct usb_ep *ep);\\r\\n70\\r\\n71        int (*fifo_status) (struct usb_ep *ep);\\r\\n72        void (*fifo_flush) (struct usb_ep *ep);\\r\\n73};\\r\\n```\\r\\n\\r\\n\u5728\u5177\u4f53\u7684UDC\u9a71\u52a8\u4e2d\uff0c\u9700\u8981\u5c01\u88c5usb_gadget\u548c\u6bcf\u4e2a\u7aef\u70b9usb_ep\uff0c\u5b9e\u73b0usb_gadget\u7684usb_gadget_ops\u5e76\u5b9e\u73b0\u7aef\u70b9\u7684usb_ep_ops\uff0c\u5b8c\u6210usb_request\u3002\u8fd9\u4e9b\u4e8b\u60c5\u90fd\u641e\u5b9a\u540e\uff0c\u5c31\u53ef\u4ee5\u6ce8\u518c\u4e00\u4e2aUDC\uff0c\u5b83\u662f\u901a\u8fc7usb_add_gadget_udc\uff08\uff09API\u6765\u8fdb\u884c\u7684\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint usb_add_gadget_udc(struct device *parent, struct usb_gadget *gadget);\\r\\n```\\r\\n\\r\\n\u5728\u6ce8\u518cUDC\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u628ausb_gadget\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7c7b\u7684ep_list\uff0c\u5373\u7aef\u70b9\u94fe\u8868\u586b\u5145\u597d\uff0c\u5e76\u586b\u5145\u597dusb_gadget\u7684usb_gadget_ops\u4ee5\u53ca\u6bcf\u4e2a\u7aef\u70b9\u7684usb_gadget_ops\u3002\\r\\n\\r\\n\u800cGadget\u7684Function\u8fd9\u8fb9\uff0c\u5219\u9700\u8981\u81ea\u5df1\u586b\u5145usb_interface_descriptor\u3001usb_endpoint_descriptor\uff0c\u5408\u6210\u4e00\u4e9busb_descriptor_header\uff0c\u5e76\u5b9e\u73b0usb_function\u7ed3\u6784\u4f53\u7684\u6210\u5458\u51fd\u6570\uff0cusb_function\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e8einclude/linux/usb/composite.h\u4e2d\uff0c\u5176\u5f62\u5f0f\u5982\u4ee3\u7801\u6e05\u535516.31\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.31\u3000usb_function\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_function {\\r\\n 2   const char            *name;\\r\\n 3   struct usb_gadget_strings  **strings;\\r\\n 4   struct usb_descriptor_header   **fs_descriptors;\\r\\n 5   struct usb_descriptor_header   **hs_descriptors;\\r\\n 6   struct usb_descriptor_header   **ss_descriptors;\\r\\n 7\\r\\n 8   struct usb_configuration  *config;\\r\\n 9\\r\\n10   struct usb_os_desc_table  *os_desc_table;\\r\\n11   unsigned                  os_desc_n;\\r\\n12\\r\\n13   /* configuration management:  bind/unbind */\\r\\n14   int          (*bind)(struct usb_configuration *,\\r\\n15                    struct usb_function *);\\r\\n16   void         (*unbind)(struct usb_configuration *,\\r\\n17                    struct usb_function *);\\r\\n18   void         (*free_func)(struct usb_function *f);\\r\\n19   struct module    *mod;\\r\\n20\\r\\n21   /* runtime state management */\\r\\n22   int          (*set_alt)(struct usb_function *,\\r\\n23                    unsigned interface, unsigned alt);\\r\\n24   int          (*get_alt)(struct usb_function *,\\r\\n25                    unsigned interface);\\r\\n26   void         (*disable)(struct usb_function *);\\r\\n27   int          (*setup)(struct usb_function *,\\r\\n28                    const struct usb_ctrlrequest *);\\r\\n29   void         (*suspend)(struct usb_function *);\\r\\n30   void         (*resume)(struct usb_function *);\\r\\n31\\r\\n32   /* USB 3.0 additions */\\r\\n33   int          (*get_status)(struct usb_function *);\\r\\n34   int          (*func_suspend)(struct usb_function *,\\r\\n35                        u8 suspend_opt);\\r\\n36   /* private: */\\r\\n37   /* internals */\\r\\n38   struct list_head     list;\\r\\n39   DECLARE_BITMAP(endpoints, 32);\\r\\n40   const struct usb_function_instance *fi;\\r\\n41};\\r\\n```\\r\\n\\r\\n\u7b2c4\u884c\u7684fs_descriptors\u662f\u5168\u901f\u548c\u4f4e\u901f\u7684\u63cf\u8ff0\u7b26\u8868\uff1b\u7b2c5\u884c\u7684hs_descriptors\u662f\u9ad8\u901f\u63cf\u8ff0\u7b26\u8868\uff1bss_descriptors\u662f\u8d85\u9ad8\u901f\u63cf\u8ff0\u7b26\u3002bind\uff08\uff09\u5b8c\u6210\u5728Gadget\u6ce8\u518c\u65f6\u83b7\u53d6I/O\u7f13\u51b2\u3001\u7aef\u70b9\u7b49\u8d44\u6e90\u3002\\r\\n\\r\\n\u5728usb_function\u7684\u6210\u5458\u51fd\u6570\u4ee5\u53ca\u5404\u79cd\u63cf\u8ff0\u7b26\u51c6\u5907\u597d\u540e\uff0c\u5728\u5185\u6838\u901a\u8fc7usb_function_register\uff08\uff09API\u6765\u5b8c\u6210Gadget Function\u7684\u6ce8\u518c\uff0c\u8be5API\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint usb_function_register(struct usb_function_driver *newf);\\r\\n```\\r\\n\\r\\n\u5728Gadget\u9a71\u52a8\u4e2d\uff0c\u7528usb_request\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u4e00\u6b21\u4f20\u8f93\u8bf7\u6c42\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5730\u4f4d\u7c7b\u4f3c\u4e8eUSB\u4e3b\u673a\u4fa7\u7684URB\u3002usb_request\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535516.32\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.32\u3000usb_request\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_request {\\r\\n 2        void                   *buf; /* Buffer used for data */\\r\\n 3        unsigned               length;\\r\\n 4        dma_addr_t             dma;  /* DMA address corresponding to \'buf\' */\\r\\n 5\\r\\n 6        struct scatterlist       *sg; /* a scatterlist for SG-capable controllers */\\r\\n 7        unsigned              num_sgs;\\r\\n 8        unsigned              num_mapped_sgs;\\r\\n 9\\r\\n10        unsigned              stream_id:16;\\r\\n11        unsigned              no_interrupt:1;\\r\\n12        unsigned              zero:1;\\r\\n13        unsigned              short_not_ok:1;\\r\\n14\\r\\n15        void                  (*complete)(struct usb_ep *ep,\\r\\n16            struct usb_request *req);  /* Function called when request completes */\\r\\n17        void                  *context;\\r\\n18        struct list_head        list;\\r\\n19\\r\\n20        int                   status;\\r\\n21        unsigned               actual;\\r\\n22};\\r\\n```\\r\\n\\r\\n\u5728include/linux/usb/gadget.h\u6587\u4ef6\u4e2d\uff0c\u8fd8\u5c01\u88c5\u4e86\u4e00\u4e9b\u5e38\u7528\u7684API\uff0c\u4ee5\u4f9bGadget Function\u9a71\u52a8\u8c03\u7528\uff0c\u4ece\u800c\u4fbf\u4e8e\u5b83\u4eec\u64cd\u4f5c\u7aef\u70b9\uff0c\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\n## \uff081\uff09\u4f7f\u80fd\u548c\u7981\u6b62\u7aef\u70b9\\r\\n\\r\\n```\\r\\nstatic inline int usb_ep_enable(struct usb_ep *ep);\\r\\nstatic inline int usb_ep_disable(struct usb_ep *ep);\\r\\n```\\r\\n\\r\\n\u5b83\u4eec\u5206\u522b\u8c03\u7528\u4e86\u201cep->ops->enable\uff08ep\uff0cdesc\uff09\uff1b\u201d\u548c\u201cep->ops->disable\uff08ep\uff09\uff1b\u201d\u3002\\r\\n\\r\\n## \uff082\uff09\u5206\u914d\u548c\u91ca\u653eusb_request\\r\\n\\r\\n```\\r\\nstruct usb_request *alloc_ep_req(struct usb_ep *ep, int len, int default_len);\\r\\nstatic inline struct usb_request *usb_ep_alloc_request(struct usb_ep *ep,\\r\\n                                                       gfp_t gfp_flags);\\r\\nstatic inline void usb_ep_free_request(struct usb_ep *ep,\\r\\n                                       struct usb_request *req);\\r\\n```\\r\\n\\r\\nusb_ep_alloc_request\uff08\uff09\u548cusb_ep_free_request\uff08\uff09\u5206\u522b\u8c03\u7528\u4e86\u201cep->ops->alloc_request\uff08ep\uff0cgfp_flags\uff09\uff1b\u201d\u548c\u201cep->ops->free_request\uff08ep\uff0creq\uff09\uff1b\u201d\uff0c\u4ee5\u7528\u4e8e\u5206\u914d\u548c\u91ca\u653e\u4e00\u4e2a\u4f9d\u9644\u4e8e\u67d0\u7aef\u70b9\u7684usb_request\uff0c\u800calloc_ep_req\uff08\uff09\u5219\u662f\u5185\u5d4c\u4e86\u5bf9usb_ep_alloc_request\uff08ep\uff0cGFP_ATOMIC\uff09\u7684\u8c03\u7528\uff0c\u540c\u65f6\u81ea\u52a8\u7533\u8bf7\u4e86usb_request\u7684\u7f13\u51b2\u5668\u7684\u5185\u5b58\u3002\\r\\n\\r\\n## \uff083\uff09\u63d0\u4ea4\u548c\u53d6\u6d88usb_request\\r\\n\\r\\n```\\r\\nstatic inline int usb_ep_queue(struct usb_ep *ep,\\r\\n                               struct usb_request *req, gfp_t gfp_flags);\\r\\nstatic inline int usb_ep_dequeue(struct usb_ep *ep, struct usb_request *req);\\r\\n```\\r\\n\\r\\n## \uff084\uff09\u7aef\u70b9FIFO\u7ba1\u7406\\r\\n\\r\\n```\\r\\nstatic inline int usb_ep_fifo_status(struct usb_ep *ep);\\r\\nstatic inline void usb_ep_fifo_flush(struct usb_ep *ep);\\r\\n```\\r\\n\\r\\n\u524d\u8005\u8c03\u7528\u201cep->ops->fifo_status\uff08ep\uff09\u201d\u8fd4\u56de\u76ee\u524dFIFO\u4e2d\u7684\u5b57\u8282\u6570\uff0c\u540e\u8005\u8c03\u7528\u201cep->ops->fifo_flush\uff08ep\uff09\u201d\u4ee5\u51b2\u5237\u6389FIFO\u4e2d\u7684\u6570\u636e\u3002\\r\\n\\r\\n## \uff085\uff09\u7aef\u70b9\u81ea\u52a8\u914d\u7f6e\\r\\n\\r\\n```\\r\\nstruct usb_ep *usb_ep_autoconfig(\\r\\n      struct usb_gadget               *gadget,\\r\\n      struct usb_endpoint_descriptor  *desc);\\r\\n```\\r\\n\\r\\n\u6839\u636e\u7aef\u70b9\u63cf\u8ff0\u7b26\u53ca\u63a7\u5236\u5668\u7aef\u70b9\u60c5\u51b5\uff0c\u5206\u914d\u4e00\u4e2a\u5408\u9002\u7684\u7aef\u70b9\u3002\\r\\n\\r\\n# 16.4.2\u3000\u5b9e\u4f8b\uff1aChipidea USB UDC\u9a71\u52a8\\r\\n\\r\\ndrivers/usb/chipidea/udc.c\u662fChipidea USB UDC\u9a71\u52a8\u7684\u4e3b\u4f53\u4ee3\u7801\uff0c\u4ee3\u7801\u6e05\u535516.33\u5217\u51fa\u4e86\u5b83\u7684\u521d\u59cb\u5316\u6d41\u7a0b\u90e8\u5206\u3002\u5b83\u5b9a\u4e49\u4e86usb_ep_ops\u3001usb_gadget_ops\uff0c\u5728\u6700\u7ec8\u8fdb\u884cusb_add_gadget_udc\uff08\uff09\u4e4b\u524d\u586b\u5145\u597d\u4e86UDC\u7684\u7aef\u70b9\u5217\u8868\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.33\u3000Chipidea USB UDC\u9a71\u52a8\u5b9e\u4f8b\\r\\n\\r\\n```\\r\\n 1static const struct usb_ep_ops usb_ep_ops = {\\r\\n 2    .enable          = ep_enable,\\r\\n 3    .disable       = ep_disable,\\r\\n 4    .alloc_request  = ep_alloc_request,\\r\\n 5    .free_request  = ep_free_request,\\r\\n 6    .queue         = ep_queue,\\r\\n 7    .dequeue      = ep_dequeue,\\r\\n 8    .set_halt     = ep_set_halt,\\r\\n 9    .set_wedge    = ep_set_wedge,\\r\\n10    .fifo_flush   = ep_fifo_flush,\\r\\n11};\\r\\n12\\r\\n13static const struct usb_gadget_ops usb_gadget_ops = {\\r\\n14    .vbus_session= ci_udc_vbus_session,\\r\\n15    .wakeup      = ci_udc_wakeup,\\r\\n16    .set_selfpowered = ci_udc_selfpowered,\\r\\n17    .pullup      = ci_udc_pullup,\\r\\n18    .vbus_draw   = ci_udc_vbus_draw,\\r\\n19    .udc_start   = ci_udc_start,\\r\\n20    .udc_stop    = ci_udc_stop,\\r\\n21};\\r\\n22\\r\\n23static int init_eps(struct ci_hdrc *ci)\\r\\n24{\\r\\n25    int retval = 0, i, j;\\r\\n26\\r\\n27    for (i = 0; i < ci->hw_ep_max/2; i++)\\r\\n28        for (j = RX; j <= TX; j++) {\\r\\n29            int k = i + j * ci->hw_ep_max/2;\\r\\n30            struct ci_hw_ep *hwep = &ci->ci_hw_ep[k];\\r\\n31\\r\\n32            ...\\r\\n33\\r\\n34            hwep->ep.name      = hwep->name;\\r\\n35            hwep->ep.ops       = &usb_ep_ops;\\r\\n36\\r\\n37            usb_ep_set_maxpacket_limit(&hwep->ep, (unsigned short)~0);\\r\\n38\\r\\n39            ...\\r\\n40\\r\\n41            /*\\r\\n42             * set up shorthands for ep0 out and in endpoints,\\r\\n43             * don\'t add to gadget\'s ep_list\\r\\n44             */\\r\\n45            if (i == 0) {\\r\\n46                if (j == RX)\\r\\n47                ci->ep0out = hwep;\\r\\n48            else\\r\\n49                ci->ep0in = hwep;\\r\\n50\\r\\n51            usb_ep_set_maxpacket_limit(&hwep->ep, CTRL_PAYLOAD_MAX);\\r\\n52            continue;\\r\\n53        }\\r\\n54\\r\\n55        list_add_tail(&hwep->ep.ep_list, &ci->gadget.ep_list);\\r\\n56    }\\r\\n57\\r\\n58return retval;\\r\\n59}\\r\\n60\\r\\n61static int udc_start(struct ci_hdrc *ci)\\r\\n62{\\r\\n63    ...\\r\\n64    ci->gadget.ops    = &usb_gadget_ops;\\r\\n65    ci->gadget.speed     = USB_SPEED_UNKNOWN;\\r\\n66    ci->gadget.max_speed  = USB_SPEED_HIGH;\\r\\n67    ci->gadget.is_otg    = ci->is_otg   1 : 0;\\r\\n68    ci->gadget.name     = ci->platdata->name;\\r\\n69\\r\\n70    INIT_LIST_HEAD(&ci->gadget.ep_list);\\r\\n71\\r\\n72    ...\\r\\n73\\r\\n74    retval = init_eps(ci);\\r\\n75    if (retval)\\r\\n76        goto free_pools;\\r\\n77\\r\\n78    ci->gadget.ep0 = &ci->ep0in->ep;\\r\\n79\\r\\n80    retval = usb_add_gadget_udc(dev, &ci->gadget);\\r\\n81    ...\\r\\n82}\\r\\n```\\r\\n\\r\\n# 16.4.3\u3000\u5b9e\u4f8b\uff1aLoopback Function\u9a71\u52a8\\r\\n\\r\\ndrivers/usb/gadget/function/f_loopback.c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684Loopback\u9a71\u52a8\uff0c\u5b83\u5b8c\u6210\u7684\u4e3b\u8981\u5de5\u4f5c\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u5b9e\u73b0usb_function\u5b9e\u4f8b\u53ca\u5176\u4e2d\u7684\u6210\u5458\u51fd\u6570bind\uff08\uff09\u3001set_alt\uff08\uff09\u3001disable\uff08\uff09\u3001free_func\uff08\uff09\u7b49\u6210\u5458\u51fd\u6570\u3002\\r\\n\\r\\n2\uff09\u51c6\u5907USB\u5916\u8bbe\u7684\u914d\u7f6e\u63cf\u8ff0\u7b26\u63a5\u53e3\u63cf\u8ff0\u7b26usb_interface_descriptor\u3001\u7aef\u70b9\u63cf\u8ff0\u7b26usb_endpoint_descriptor\u7b49\u3002\\r\\n\\r\\n3\uff09\u53d1\u8d77usb_request\u5904\u7406usb_request\u7684\u5b8c\u6210\u5e76\u56de\u73af\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.34\u662f\u62bd\u53d6\u4e86drivers/usb/gadget/function/f_loopback.c\u6587\u4ef6\u4e2d\u80fd\u53cd\u6620\u4e00\u4e2aFunction\u9a71\u52a8\u4e3b\u4f53\u7ed3\u6784\u7684\u5c11\u91cf\u4ee3\u7801\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.34\u3000Loopback USB Gadget Function\u9a71\u52a8\u5b9e\u4f8b\\r\\n\\r\\n```\\r\\n  1static struct usb_interface_descriptor loopback_intf = {\\r\\n  2        .bLength =            sizeof loopback_intf,\\r\\n  3        .bDescriptorType =     USB_DT_INTERFACE,\\r\\n  4\\r\\n  5        .bNumEndpoints =       2,\\r\\n  6        .bInterfaceClass =     USB_CLASS_VENDOR_SPEC,\\r\\n  7        /* .iInterface = DYNAMIC */\\r\\n  8};\\r\\n  9\\r\\n 10static struct usb_endpoint_descriptor fs_loop_source_desc = {\\r\\n 11        .bLength =            USB_DT_ENDPOINT_SIZE,\\r\\n 12        .bDescriptorType =     USB_DT_ENDPOINT,\\r\\n 13\\r\\n 14        .bEndpointAddress =    USB_DIR_IN,\\r\\n 15        .bmAttributes =       USB_ENDPOINT_XFER_BULK,\\r\\n 16};\\r\\n 17static struct usb_descriptor_header *fs_loopback_descs[] = {\\r\\n 18        (struct usb_descriptor_header *) &loopback_intf,\\r\\n 19        (struct usb_descriptor_header *) &fs_loop_sink_desc,\\r\\n 20        (struct usb_descriptor_header *) &fs_loop_source_desc,\\r\\n 21        NULL,\\r\\n 22};\\r\\n 23static struct usb_string strings_loopback[] = {\\r\\n 24        [0].s = \\"loop input to output\\",\\r\\n 25        {  }                              /* end of list */\\r\\n 26};\\r\\n 27\\r\\n 28static struct usb_gadget_strings stringtab_loop = {\\r\\n 29        .language      = 0x0409,          /* en-us */\\r\\n 30        .strings       = strings_loopback,\\r\\n 31};\\r\\n 32\\r\\n 33static struct usb_gadget_strings *loopback_strings[] = {\\r\\n 34        &stringtab_loop,\\r\\n 35        NULL,\\r\\n 36};\\r\\n 37\\r\\n 38static int loopback_bind(struct usb_configuration *c, struct usb_function *f)\\r\\n 39{\\r\\n 40...\\r\\n 41loop->in_ep = usb_ep_autoconfig(cdev->gadget, &fs_loop_source_desc);\\r\\n 42...\\r\\n 43loop->out_ep = usb_ep_autoconfig(cdev->gadget, &fs_loop_sink_desc);\\r\\n 44if (!loop->out_ep)\\r\\n 45      goto autoconf_fail;\\r\\n 46loop->out_ep->driver_data = cdev;/* claim */\\r\\n 47\\r\\n 48/* support high speed hardware */\\r\\n 49hs_loop_source_desc.bEndpointAddress =\\r\\n 50      fs_loop_source_desc.bEndpointAddress;\\r\\n 51hs_loop_sink_desc.bEndpointAddress = fs_loop_sink_desc.bEndpointAddress;\\r\\n 52\\r\\n 53/* support super speed hardware */\\r\\n 54ss_loop_source_desc.bEndpointAddress =\\r\\n 55      fs_loop_source_desc.bEndpointAddress;\\r\\n 56ss_loop_sink_desc.bEndpointAddress = fs_loop_sink_desc.bEndpointAddress;\\r\\n 57\\r\\n 58ret = usb_assign_descriptors(f, fs_loopback_descs, hs_loopback_descs,\\r\\n 59            ss_loopback_descs);\\r\\n 60...\\r\\n 61return 0;\\r\\n 62}\\r\\n 63\\r\\n 64static void lb_free_func(struct usb_function *f)\\r\\n 65{\\r\\n 66...\\r\\n 67usb_free_all_descriptors(f);\\r\\n 68kfree(func_to_loop(f));\\r\\n 69}\\r\\n 70\\r\\n 71static struct usb_function *loopback_alloc(struct usb_function_instance *fi)\\r\\n 72{\\r\\n 73       ...\\r\\n 74       loop->function.name = \\"loopback\\";\\r\\n 75       loop->function.bind = loopback_bind;\\r\\n 76       loop->function.set_alt = loopback_set_alt;\\r\\n 77       loop->function.disable = loopback_disable;\\r\\n 78       loop->function.strings = loopback_strings;\\r\\n 79\\r\\n 80       loop->function.free_func = lb_free_func;\\r\\n 81\\r\\n 82       return &loop->function;\\r\\n 83}\\r\\n 84\\r\\n 85static void loopback_complete(struct usb_ep *ep, struct usb_request *req)\\r\\n 86{\\r\\n 87...\\r\\n 88}\\r\\n 89\\r\\n 90static int enable_endpoint(struct usb_composite_dev *cdev, struct f_loopback *loop,\\r\\n 91                          struct usb_ep *ep)\\r\\n 92{\\r\\n 93struct usb_request           *req;\\r\\n 94...\\r\\n 95result = config_ep_by_speed(cdev->gadget, &(loop->function), ep);\\r\\n 96\\r\\n 97result = usb_ep_enable(ep);\\r\\n 98\\r\\n 99ep->driver_data = loop;\\r\\n100\\r\\n101for (i = 0; i < qlen && result == 0; i++) {\\r\\n102      req = lb_alloc_ep_req(ep, 0);\\r\\n103      if (!req)\\r\\n104          goto fail1;\\r\\n105\\r\\n106      req->complete = loopback_complete;\\r\\n107      result = usb_ep_queue(ep, req, GFP_ATOMIC);\\r\\n108      if (result) {\\r\\n109          ERROR(cdev, \\"%s queue req --\x3e %d\\\\n\\",\\r\\n110                  ep->name, result);\\r\\n111          goto fail1;\\r\\n112      }\\r\\n113}\\r\\n114\\r\\n115...\\r\\n116}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.8\u3000\u4eea\u5668\u4eea\u8868\u4f7f\u7528","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.8\u3000\u4eea\u5668\u4eea\u8868\u4f7f\u7528","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.8\u3000\u4eea\u5668\u4eea\u8868\u4f7f\u7528.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.8\u3000\u4eea\u5668\u4eea\u8868\u4f7f\u7528.md","title":"2.8.1\u3000\u4e07\u7528\u8868","description":"\u5728\u7535\u8def\u677f\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u4f7f\u7528\u4e07\u7528\u8868\u7684\u4e24\u4e2a\u529f\u80fd\u3002","date":"2025-09-15T14:44:14.661Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":10.05,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"16.4.1\u3000UDC\u548cGadget\u9a71\u52a8\u7684\u5173\u952e\u6570\u636e\u7ed3\u6784\u4e0eAPI","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.4\u3000USB UDC\u4e0eGadget\u9a71\u52a8"},"nextItem":{"title":"10.3.1\u3000\u7533\u8bf7\u548c\u91ca\u653e\u4e2d\u65ad","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b"}},"content":"\u5728\u7535\u8def\u677f\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u4f7f\u7528\u4e07\u7528\u8868\u7684\u4e24\u4e2a\u529f\u80fd\u3002\\r\\n\\r\\n- \xb7\u6d4b\u91cf\u7535\u5e73\u3002\\r\\n- \xb7\u4f7f\u7528\u4e8c\u6781\u7ba1\u6321\u6d4b\u91cf\u7535\u8def\u677f\u4e0a\u7f51\u7edc\u7684\u8fde\u901a\u6027\uff0c\u5f53\u793a\u6ce2\u5668\u88ab\u8bbe\u7f6e\u5728\u4e8c\u6781\u7ba1\u6321\uff0c\u6d4b\u91cf\u8fde\u901a\u7684\u7f51\u7edc\u4f1a\u53d1\u51fa\u201c\u5600\u5600\u201d\u7684\u9e23\u53eb\uff0c\u5426\u5219\uff0c\u6ca1\u6709\u8fde\u901a\u3002\\r\\n\\r\\n# 2.8.2\u3000\u793a\u6ce2\u5668\\r\\n\\r\\n\u793a\u6ce2\u5668\u662f\u5229\u7528\u7535\u5b50\u793a\u6ce2\u7ba1\u7684\u7279\u6027\uff0c\u5c06\u4eba\u773c\u65e0\u6cd5\u76f4\u63a5\u89c2\u6d4b\u7684\u4ea4\u53d8\u7535\u4fe1\u53f7\u8f6c\u6362\u6210\u56fe\u50cf\uff0c\u663e\u793a\u5728\u8367\u5149\u5c4f\u4e0a\u4ee5\u4fbf\u6d4b\u91cf\u7684\u7535\u5b50\u4eea\u5668\u3002\u5b83\u662f\u89c2\u5bdf\u6570\u5b57\u7535\u8def\u5b9e\u9a8c\u73b0\u8c61\u3001\u5206\u6790\u5b9e\u9a8c\u4e2d\u7684\u95ee\u9898\u3001\u6d4b\u91cf\u5b9e\u9a8c\u7ed3\u679c\u5fc5\u4e0d\u53ef\u5c11\u7684\u91cd\u8981\u4eea\u5668\\r\\n\\r\\n\u4f7f\u7528\u793a\u6ce2\u5668\u65f6\u5e94\u4e3b\u8981\u6ce8\u610f\u8c03\u8282\u5782\u76f4\u504f\u8f6c\u56e0\u6570\u9009\u62e9\uff08VOLTS/DIV\uff09\u548c\u5fae\u8c03\u3001\u65f6\u57fa\u9009\u62e9\uff08TIME/DIV\uff09\u548c\u5fae\u8c03\u4ee5\u53ca\u89e6\u53d1\u65b9\u5f0f\u3002\\r\\n\\r\\n\u5982\u679cVOLTS/DIV\u8bbe\u7f6e\u4e0d\u5408\u7406\uff0c\u5219\u53ef\u80fd\u9020\u6210\u7535\u538b\u5e45\u5ea6\u8d85\u51fa\u6574\u4e2a\u5c4f\u5e55\u6216\u5728\u5c4f\u5e55\u4e0a\u53d8\u52a8\u592a\u8fc7\u5fae\u5c0f\u4ee5\u81f4\u65e0\u6cd5\u89c2\u6d4b\u7684\u73b0\u8c61\u3002\u56fe2.31\u6240\u793a\u4e3a\u540c\u4e00\u4e2a\u6ce2\u5f62\u5728VOLTS/DIV\u8bbe\u7f6e\u7531\u5927\u5230\u5c0f\u53d8\u5316\u8fc7\u7a0b\u4e2d\u7684\u793a\u610f\u56fe\u3002\\r\\n\\r\\n![1742736503319](./figure/1742736503319.png)\\r\\n\\r\\n\u56fe2.31\u3000\u793a\u6ce2\u5668\u7684VOLTS/DIV\u8bbe\u7f6e\u4e0e\u6ce2\u5f62\\r\\n\\r\\n\u5982\u679cTIME/DIV\u8bbe\u7f6e\u4e0d\u5408\u9002\uff0c\u5219\u53ef\u80fd\u9020\u6210\u6ce2\u5f62\u6df7\u8fed\u3002\u6df7\u8fed\u610f\u5473\u7740\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u6ce2\u5f62\u9891\u7387\u4f4e\u4e8e\u4fe1\u53f7\u5b9e\u9645\u9891\u7387\u3002\u8fd9\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f13\u6162\u6539\u53d8\u626b\u901fTIME/DIV\u5230\u8f83\u5feb\u7684\u65f6\u57fa\u6321\u63d0\u9ad8\u6ce2\u5f62\u9891\u7387\uff0c\u5982\u679c\u6ce2\u5f62\u9891\u7387\u53c2\u6570\u6025\u5267\u6539\u53d8\u6216\u8005\u6643\u52a8\u7684\u6ce2\u5f62\u5728\u67d0\u4e2a\u8f83\u5feb\u7684\u65f6\u57fa\u6321\u7a33\u5b9a\u4e0b\u6765\uff0c\u8bf4\u660e\u4e4b\u524d\u53d1\u751f\u4e86\u6ce2\u5f62\u6df7\u8fed\u3002\u6839\u636e\u5948\u594e\u65af\u7279\u5b9a\u7406\uff0c\u91c7\u6837\u901f\u7387\u81f3\u5c11\u9ad8\u4e8e\u4fe1\u53f7\u9ad8\u9891\u5206\u91cf\u7684\u4e24\u500d\u624d\u4e0d\u4f1a\u53d1\u751f\u6df7\u8fed\uff0c\u5982\u4e00\u4e2a500MHz\u7684\u4fe1\u53f7\uff0c\u81f3\u5c11\u9700\u89811GS/s\u7684\u91c7\u6837\u901f\u7387\u3002\u56fe2.32\u6240\u793a\u4e3a\u540c\u4e00\u4e2a\u6ce2\u5f62\u5728TIME/DIV\u8bbe\u7f6e\u7531\u5c0f\u5230\u5927\u53d8\u5316\u8fc7\u7a0b\u4e2d\u7684\u793a\u610f\u56fe\u3002\\r\\n\\r\\n![image-20250323212848886](./figure/image-20250323212848886.png)\\r\\n\\r\\n\u56fe2.32\u3000\u793a\u6ce2\u5668\u7684TIME/DIV\u8bbe\u7f6e\u4e0e\u6ce2\u5f62\\r\\n\\r\\n\u5948\u594e\u65af\u7279\u5b9a\u7406\u5373\u4e3a\u91c7\u6837\u5b9a\u7406\uff0c\u6307\u5f53\u91c7\u6837\u9891\u7387fsmax \u5927\u4e8e\u4fe1\u53f7\u4e2d\u6700\u9ad8\u9891\u7387fmax \u7684\u4e24\u500d\u65f6\uff0c\u5373fsmax \u22652fmax \u65f6\uff0c\u91c7\u6837\u4e4b\u540e\u7684\u6570\u5b57\u4fe1\u53f7\u53ef\u5b8c\u6574\u5730\u4fdd\u7559\u539f\u59cb\u4fe1\u606f\u3002\u8fd9\u6761\u5b9a\u7406\u5728\u4fe1\u53f7\u5904\u7406\u9886\u57df\u4e2d\u7684\u5730\u4f4d\u76f8\u5f53\u9ad8\uff0c\u5927\u81f4\u76f8\u5f53\u4e8e\u7269\u7406\u5b66\u9886\u57df\u4e2d\u7684\u725b\u987f\u5b9a\u5f8b\u3002\\r\\n\\r\\n\u5728\u793a\u6ce2\u5668\u7684\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u8981\u8bbe\u7f6e\u89e6\u53d1\u65b9\u5f0f\u548c\u89e6\u53d1\u6a21\u5f0f\u3002\u89e6\u53d1\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5728\u6bcf\u6b21\u663e\u793a\u7684\u65f6\u5019\u90fd\u4ece\u6ce2\u5f62\u7684\u540c\u4e00\u4f4d\u7f6e\u5f00\u59cb\uff0c\u6ce2\u5f62\u53ef\u4ee5\u7a33\u5b9a\u663e\u793a\u3002\u4e00\u822c\u793a\u6ce2\u5668\u90fd\u652f\u6301\u8fb9\u6cbf\u89e6\u53d1\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4e5f\u8981\u4f7f\u7528\u89c6\u9891\u89e6\u53d1\u3001\u6bdb\u523a\u89e6\u53d1\u3001\u8109\u5bbd\u89e6\u53d1\u3001\u659c\u7387\u89e6\u53d1\u3001\u7801\u578b\u89e6\u53d1\u7b49\u3002\u8bbe\u5b9a\u6b63\u786e\u7684\u89e6\u53d1\uff0c\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u6d4b\u8bd5\u8fc7\u7a0b\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u7b80\u5316\u5de5\u4f5c\u3002\\r\\n\\r\\n\u793a\u6ce2\u5668\u4e00\u822c\u652f\u63013\u79cd\u89e6\u53d1\u6a21\u5f0f\uff1a\u81ea\u52a8\u6a21\u5f0f\u3001\u5e38\u89c4\u6a21\u5f0f\u548c\u5355\u6b21\u6a21\u5f0f\u3002\\r\\n\\r\\n- \xb7\u81ea\u52a8\u6a21\u5f0f\uff08\u793a\u6ce2\u5668\u9762\u677f\u4e0a\u7684AUTO\u6309\u94ae\uff09\u3002\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u5f53\u89e6\u53d1\u6ca1\u6709\u53d1\u751f\u65f6\uff0c\u793a\u6ce2\u5668\u7684\u626b\u63cf\u7cfb\u7edf\u4f1a\u6839\u636e\u8bbe\u5b9a\u7684\u626b\u63cf\u901f\u7387\u81ea\u52a8\u8fdb\u884c\u626b\u63cf\uff1b\u800c\u5f53\u6709\u89e6\u53d1\u53d1\u751f\u65f6\uff0c\u626b\u63cf\u7cfb\u7edf\u4f1a\u5c3d\u91cf\u6309\u4fe1\u53f7\u7684\u9891\u7387\u8fdb\u884c\u626b\u63cf\u3002\u56e0\u6b64\uff0cAUTO\u6a21\u5f0f\u4e0b\uff0c\u4e0d\u8bba\u89e6\u53d1\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\uff0c\u793a\u6ce2\u5668\u90fd\u4f1a\u4ea7\u751f\u626b\u63cf\uff0c\u90fd\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u6709\u53d8\u5316\u7684\u626b\u63cf\u7ebf\uff0c\u8fd9\u662f\u8fd9\u79cd\u6a21\u5f0f\u7684\u7279\u70b9\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5728\u5bf9\u4fe1\u53f7\u7684\u7279\u70b9\u4e0d\u662f\u5f88\u4e86\u89e3\u7684\u65f6\u5019\uff0c\u53ef\u5148\u9009\u62e9\u81ea\u52a8\u6a21\u5f0f\u3002\\r\\n- \xb7\u5e38\u89c4\u6a21\u5f0f\uff08\u793a\u6ce2\u5668\u9762\u677f\u4e0a\u7684NORM\u6216NORMAL\u6309\u94ae\uff09\u3002\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u793a\u6ce2\u5668\u53ea\u6709\u5f53\u89e6\u53d1\u6761\u4ef6\u6ee1\u8db3\u4e86\u624d\u8fdb\u884c\u626b\u63cf\uff0c\u5982\u679c\u6ca1\u6709\u89e6\u53d1\uff0c\u5c31\u4e0d\u8fdb\u884c\u626b\u63cf\u3002\u56e0\u6b64\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u5982\u679c\u6ca1\u6709\u89e6\u53d1\uff0c\u5bf9\u4e8e\u6a21\u62df\u793a\u6ce2\u5668\u800c\u8a00\uff0c\u7528\u6237\u4e0d\u4f1a\u770b\u5230\u626b\u63cf\u7ebf\uff0c\u5bf9\u4e8e\u6570\u5b57\u793a\u6ce2\u5668\u800c\u8a00\uff0c\u4e0d\u4f1a\u770b\u5230\u6ce2\u5f62\u66f4\u65b0\\r\\n- \xb7\u5355\u6b21\u6a21\u5f0f\uff08\u793a\u6ce2\u5668\u9762\u677f\u4e0a\u7684SIGL\u6216SINGLE\u6309\u94ae\uff09\u3002\u8fd9\u79cd\u6a21\u5f0f\u4e0eNORMAL\u6a21\u5f0f\u6709\u4e00\u70b9\u7c7b\u4f3c\uff0c\u5c31\u662f\u53ea\u6709\u5f53\u89e6\u53d1\u6761\u4ef6\u6ee1\u8db3\u65f6\u624d\u4ea7\u751f\u626b\u63cf\uff0c\u5426\u5219\u4e0d\u626b\u63cf\u3002\u800c\u4e0d\u540c\u5728\u4e8e\uff0c\u8fd9\u79cd\u626b\u63cf\u4e00\u65e6\u4ea7\u751f\u5e76\u5b8c\u6210\u540e\uff0c\u793a\u6ce2\u5668\u7684\u626b\u63cf\u7cfb\u7edf\u5373\u8fdb\u5165\u4e00\u79cd\u4f11\u6b62\u72b6\u6001\uff0c\u5373\u4f7f\u540e\u9762\u518d\u6709\u6ee1\u8db3\u89e6\u53d1\u6761\u4ef6\u7684\u4fe1\u53f7\u51fa\u73b0\u4e5f\u4e0d\u518d\u8fdb\u884c\u626b\u63cf\uff0c\u4e5f\u5c31\u662f\u89e6\u53d1\u4e00\u6b21\u53ea\u626b\u63cf\u4e00\u6b21\u3002\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u53ef\u80fd\u8981\u6839\u636e\u60c5\u51b5\u5728\u81ea\u52a8\u3001\u5e38\u89c4\u548c\u5355\u6b21\u6a21\u5f0f\u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u3002\\r\\n\\r\\n# 2.8.3\u3000\u903b\u8f91\u5206\u6790\u4eea\\r\\n\\r\\n\u903b\u8f91\u5206\u6790\u4eea\u662f\u5229\u7528\u65f6\u949f\u4ece\u6d4b\u8bd5\u8bbe\u5907\u4e0a\u91c7\u96c6\u6570\u5b57\u4fe1\u53f7\u5e76\u8fdb\u884c\u663e\u793a\u7684\u4eea\u5668\uff0c\u5176\u6700\u4e3b\u8981\u7684\u4f5c\u7528\u662f\u7528\u4e8e\u65f6\u5e8f\u7684\u5224\u5b9a\u3002\u4e0e\u793a\u6ce2\u5668\u4e0d\u540c\uff0c\u903b\u8f91\u5206\u6790\u4eea\u5e76\u4e0d\u5177\u5907\u8bb8\u591a\u7535\u538b\u7b49\u7ea7\uff0c\u901a\u5e38\u53ea\u663e\u793a\u4e24\u4e2a\u7535\u538b\uff08\u903b\u8f911\u548c0\uff09\u3002\u5728\u8bbe\u5b9a\u4e86\u53c2\u8003\u7535\u538b\u4e4b\u540e\uff0c\u903b\u8f91\u5206\u6790\u4eea\u901a\u8fc7\u6bd4\u8f83\u5668\u6765\u5224\u5b9a\u5f85\u6d4b\u8bd5\u4fe1\u53f7\uff0c\u9ad8\u4e8e\u53c2\u8003\u7535\u538b\u8005\u4e3a1\uff0c\u4f4e\u4e8e\u53c2\u8003\u7535\u538b\u8005\u4e3a0\u3002\\r\\n\\r\\n\u4f8b\u5982\uff0c\u5982\u679c\u4ee5n MHz\u91c7\u6837\u7387\u6d4b\u91cf\u4e00\u4e2a\u4fe1\u53f7\uff0c\u903b\u8f91\u5206\u6790\u4eea\u4f1a\u4ee51000/n ns\u4e3a\u5468\u671f\u91c7\u6837\u4fe1\u53f7\uff0c\u5f53\u53c2\u8003\u7535\u538b\u8bbe\u5b9a\u4e3a1.5V\u65f6\uff0c\u8d85\u8fc71.5V\u5219\u5224\u5b9a\u4e3a1\uff0c\u4f4e\u4e8e1.5V\u5219\u4e3a0\uff0c\u5c06\u903b\u8f911\u548c0\u8fde\u63a5\u6210\u8fde\u7eed\u7684\u6ce2\u5f62\uff0c\u5de5\u7a0b\u5e08\u4f9d\u636e\u6b64\u8fde\u7eed\u6ce2\u5f62\u53ef\u5bfb\u627e\u65f6\u5e8f\u95ee\u9898\u3002\\r\\n\\r\\n\u9ad8\u7aef\u903b\u8f91\u5206\u6790\u4eea\u4f1a\u5b89\u88c5Windows\u64cd\u4f5c\u7cfb\u7edf\u5e76\u63d0\u4f9b\u975e\u5e38\u53cb\u5584\u7684\u903b\u8f91\u5206\u6790\u5e94\u7528\u8f6f\u4ef6\uff0c\u5728\u5176\u4e2d\u53ef\u65b9\u4fbf\u5730\u7f16\u8f91\u63a2\u9488\u3001\u4fe1\u53f7\u5e76\u67e5\u770b\u6ce2\u5f62\u3002\u8fd9\u79cd\u903b\u8f91\u5206\u6790\u4eea\u4e00\u822c\u79f0\u4e3a\u4f20\u7edf\u903b\u8f91\u5206\u6790\u4eea\uff0c\u5176\u529f\u80fd\u5f3a\u5927\uff0c\u6570\u636e\u91c7\u96c6\u3001\u5206\u6790\u548c\u6ce2\u5f62\u663e\u793a\u878d\u4e8e\u4e00\u8eab\uff0c\u4f46\u662f\u4ef7\u683c\u5341\u5206\u6602\u8d35\u3002\u6709\u7684\u903b\u8f91\u5206\u6790\u4eea\u5219\u6ca1\u6709\u56fe\u5f62\u754c\u9762\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7USB\u7b49\u63a5\u53e3\u4e0ePC\u8fde\u63a5\uff0c\u5206\u6790\u8f6f\u4ef6\u5219\u5de5\u4f5c\u5728PC\u4e0a\u3002\u8fd9\u79cd\u903b\u8f91\u5206\u6790\u4eea\u4e00\u822c\u79f0\u4e3a\u865a\u62df\u903b\u8f91\u5206\u6790\u4eea\uff0c\u5b83\u662fPC\u6280\u672f\u548c\u6d4b\u91cf\u6280\u672f\u7ed3\u5408\u7684\u4ea7\u7269\uff0c\u89e6\u53d1\u548c\u8bb0\u5f55\u529f\u80fd\u7531\u865a\u62df\u903b\u8f91\u5206\u6790\u4eea\u786c\u4ef6\u5b8c\u6210\uff0c\u6ce2\u5f62\u663e\u793a\u3001\u8f93\u5165\u8bbe\u7f6e\u7b49\u529f\u80fd\u7531PC\u5b8c\u6210\uff0c\u56e0\u6b64\u6bd4\u8f83\u5ec9\u4ef7\u3002\u56fe2.33\u7ed9\u51fa\u4e86\u4e24\u79cd\u903b\u8f91\u5206\u6790\u4eea\u3002\\r\\n\\r\\n![1742736620408](./figure/1742736620408.png)\\r\\n\\r\\n\u56fe2.33\u3000\u903b\u8f91\u5206\u6790\u4eea\\r\\n\\r\\n\u903b\u8f91\u5206\u6790\u4eea\u7684\u6ce2\u5f62\u53ef\u4ee5\u663e\u793a\u5730\u5740\u3001\u6570\u636e\u3001\u63a7\u5236\u4fe1\u53f7\u53ca\u4efb\u610f\u5916\u90e8\u63a2\u5934\u4fe1\u53f7\u7684\u53d8\u5316\u8f68\u8ff9\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u5e94\u5148\u7f16\u8f91\u6bcf\u4e2a\u63a2\u5934\u7684\u4fe1\u53f7\u540d\u3002\u4e4b\u540e\uff0c\u6839\u636e\u6ce2\u5f62\u8fd8\u539f\u51fa\u603b\u7ebf\u7684\u5de5\u4f5c\u65f6\u5e8f\uff0c\u56fe2.34\u7ed9\u51fa\u4e86\u4e00\u4e2aI2 C\u7684\u4f8b\u5b50\u3002\u76ee\u524d\uff0c\u5f88\u591a\u903b\u8f91\u5206\u6790\u4eea\u90fd\u81ea\u5e26\u4e86\u534f\u8bae\u5206\u6790\u80fd\u529b\uff0c\u53ef\u4ee5\u81ea\u52a8\u5206\u6790\u51fa\u603b\u7ebf\u4e0a\u4f20\u8f93\u7684\u547d\u4ee4\u3001\u5730\u5740\u548c\u6570\u636e\u7b49\u4fe1\u606f\u3002\\r\\n\\r\\n![image-20250323213056156](./figure/image-20250323213056156.png)\\r\\n\\r\\n\u56fe2.34\u3000\u4ece\u903b\u8f91\u5206\u6790\u4eea\u6ce2\u5f62\u8fd8\u539fI2 C\u603b\u7ebf\\r\\n\\r\\n\u903b\u8f91\u5206\u6790\u4eea\u5177\u6709\u8d85\u5f3a\u7684\u903b\u8f91\u8ddf\u8e2a\u5206\u6790\u529f\u80fd\uff0c\u5b83\u53ef\u4ee5\u6355\u83b7\u5e76\u8bb0\u5f55\u5d4c\u5165\u5f0f\u5904\u7406\u5668\u7684\u603b\u7ebf\u5468\u671f\uff0c\u4e5f\u53ef\u4ee5\u6355\u83b7\u5982\u5b9e\u65f6\u8ddf\u8e2a\u7528\u7684ETM\u63a5\u53e3\u7684\u7a0b\u5e8f\u6267\u884c\u4fe1\u606f\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u8bb0\u5f55\u8fdb\u884c\u5206\u6790\u3001\u8bd1\u7801\u4e14\u8fd8\u539f\u51fa\u5e94\u7528\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\u3002\u56e0\u6b64\uff0c\u53ef\u4f7f\u7528\u903b\u8f91\u5206\u6790\u4eea\u901a\u8fc7\u89e6\u53d1\u63a5\u53e3\u4e0eICD\uff08\u5728\u7ebf\u8c03\u8bd5\u5668\uff09\u534f\u8c03\u5de5\u4f5c\u4ee5\u8865\u5145ICD\u5728\u8ddf\u8e2a\u529f\u80fd\u65b9\u9762\u7684\u4e0d\u8db3\u3002\u903b\u8f91\u5206\u6790\u4eea\u4e0eICD\u534f\u4f5c\u53ef\u4e3a\u5de5\u7a0b\u5e08\u63d0\u4f9b\u65ad\u70b9\u3001\u89e6\u53d1\u548c\u8ddf\u8e2a\u8c03\u8bd5\u624b\u6bb5\uff0c\u5982\u56fe2.35\u6240\u793a\u3002\\r\\n\\r\\n ICD\u662f\u4e00\u4e2a\u5bb9\u6613\u4e0eICE\uff08\u5728\u7ebf\u4eff\u771f\u5668\uff09\u6df7\u6dc6\u7684\u6982\u5ff5\uff0cICE\u672c\u8eab\u9700\u8981\u5b8c\u5168\u4eff\u771fCPU\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u4ece\u7269\u7406\u4e0a\u5b8c\u5168\u66ff\u4ee3CPU\uff0c\u800cICD\u5219\u53ea\u662f\u4e0e\u82af\u7247\u5185\u90e8\u7684\u5d4c\u5165\u5f0fICE\u5355\u5143\u901a\u8fc7JTAG\u7b49\u63a5\u53e3\u4e92\u901a\u3002\u56e0\u6b64\uff0c\u5bf9ICD\u7684\u786c\u4ef6\u6027\u80fd\u8981\u6c42\u8fdc\u4f4e\u4e8eICE\u3002\u76ee\u524d\u5e02\u9762\u4e0a\u51fa\u73b0\u7684\u5f88\u591a\u53f7\u79f0\u4e3aICE\u7684\u4ea7\u54c1\u5b9e\u9645\u4e0a\u662fICD\u7b49\uff0c\u4f46\u662f\u4eba\u4eec\u4e00\u822c\u4e5f\u79f0\u5b83\u4eec\u4e3aICE\u3002\\r\\n\\r\\n![1742736685202](./figure/1742736685202.png)\\r\\n\\r\\n\u56fe2.35\u3000\u903b\u8f91\u5206\u6790\u4eea\u4e0eICD\u534f\u4f5c"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b.md","title":"10.3.1\u3000\u7533\u8bf7\u548c\u91ca\u653e\u4e2d\u65ad","description":"\u5728Linux\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u4f7f\u7528\u4e2d\u65ad\u7684\u8bbe\u5907\u9700\u8981\u7533\u8bf7\u548c\u91ca\u653e\u5bf9\u5e94\u7684\u4e2d\u65ad\uff0c\u5e76\u5206\u522b\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684requestirq\uff08\uff09\u548cfreeirq\uff08\uff09\u51fd\u6570\u3002","date":"2025-09-15T14:44:14.657Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":16.315,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"2.8.1\u3000\u4e07\u7528\u8868","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.8\u3000\u4eea\u5668\u4eea\u8868\u4f7f\u7528"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316"}},"content":"\u5728Linux\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u4f7f\u7528\u4e2d\u65ad\u7684\u8bbe\u5907\u9700\u8981\u7533\u8bf7\u548c\u91ca\u653e\u5bf9\u5e94\u7684\u4e2d\u65ad\uff0c\u5e76\u5206\u522b\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684request_irq\uff08\uff09\u548cfree_irq\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n1.\u7533\u8bf7irq\\r\\n\\r\\n```\\r\\nint request_irq(unsigned int irq, irq_handler_t handler, unsigned long flags,\\r\\n            const char *name, void *dev);\\r\\n```\\r\\n\\r\\nirq\u662f\u8981\u7533\u8bf7\u7684\u786c\u4ef6\u4e2d\u65ad\u53f7\u3002\\r\\n\\r\\nhandler\u662f\u5411\u7cfb\u7edf\u767b\u8bb0\u7684\u4e2d\u65ad\u5904\u7406\u51fd\u6570\uff08\u9876\u534a\u90e8\uff09\uff0c\u662f\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4e2d\u65ad\u53d1\u751f\u65f6\uff0c\u7cfb\u7edf\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0cdev\u53c2\u6570\u5c06\u88ab\u4f20\u9012\u7ed9\u5b83\u3002\\r\\n\\r\\nirqflags\u662f\u4e2d\u65ad\u5904\u7406\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e2d\u65ad\u7684\u89e6\u53d1\u65b9\u5f0f\u4ee5\u53ca\u5904\u7406\u65b9\u5f0f\u3002\u5728\u89e6\u53d1\u65b9\u5f0f\u65b9\u9762\uff0c\u53ef\u4ee5\u662fIRQF_TRIGGER_RISING\u3001IRQF_TRIGGER_FALLING\u3001IRQF_TRIGGER_HIGH\u3001IRQF_TRIGGER_LOW\u7b49\u3002\u5728\u5904\u7406\u65b9\u5f0f\u65b9\u9762\uff0c\u82e5\u8bbe\u7f6e\u4e86IRQF_SHARED\uff0c\u5219\u8868\u793a\u591a\u4e2a\u8bbe\u5907\u5171\u4eab\u4e2d\u65ad\uff0cdev\u662f\u8981\u4f20\u9012\u7ed9\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u79c1\u6709\u6570\u636e\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3a\u8fd9\u4e2a\u8bbe\u5907\u7684\u8bbe\u5907\u7ed3\u6784\u4f53\u6216\u8005NULL\u3002\\r\\n\\r\\nrequest_irq\uff08\uff09\u8fd4\u56de0\u8868\u793a\u6210\u529f\uff0c\u8fd4\u56de-EINVAL\u8868\u793a\u4e2d\u65ad\u53f7\u65e0\u6548\u6216\u5904\u7406\u51fd\u6570\u6307\u9488\u4e3aNULL\uff0c\u8fd4\u56de-EBUSY\u8868\u793a\u4e2d\u65ad\u5df2\u7ecf\u88ab\u5360\u7528\u4e14\u4e0d\u80fd\u5171\u4eab\u3002\\r\\n\\r\\n```\\r\\nint devm_request_irq(struct device *dev, unsigned int irq, irq_handler_t handler,\\r\\n                 unsigned long irqflags, const char *devname, void *dev_id);\\r\\n```\\r\\n\\r\\n\u6b64\u51fd\u6570\u4e0erequest_irq\uff08\uff09\u7684\u533a\u522b\u662fdevm_\u5f00\u5934\u7684API\u7533\u8bf7\u7684\u662f\u5185\u6838\u201cmanaged\u201d\u7684\u8d44\u6e90\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u5728\u51fa\u9519\u5904\u7406\u548cremove\uff08\uff09\u63a5\u53e3\u91cc\u518d\u663e\u5f0f\u7684\u91ca\u653e\u3002\u6709\u70b9\u7c7b\u4f3cJava\u7684\u5783\u573e\u56de\u6536\u673a\u5236\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8eat86rf230\u9a71\u52a8\uff0c\u5982\u4e0b\u7684\u8865\u4e01\u4e2d\u6539\u7528devm_request_irq\uff08\uff09\u540e\u5c31\u5220\u9664\u4e86free_irq\uff08\uff09\uff0c\u8be5\u8865\u4e01\u5bf9\u5e94\u7684\u5185\u6838commit ID\u662f652355c5\u3002\\r\\n\\r\\n```\\r\\n--- a/drivers/net/ieee802154/at86rf230.c\\r\\n+++ b/drivers/net/ieee802154/at86rf230.c\\r\\n@@ -1190,24+1190,22@@ static int at86rf230_probe(struct spi_device *spi)\\r\\n     if (rc)\\r\\n          goto err_hw_init;\\r\\n-    rc = request_irq(spi->irq, irq_handler, IRQF_SHARED,\\r\\n-               dev_name(&spi->dev), lp);\\r\\n+    rc = devm_request_irq(&spi->dev, spi->irq, irq_handler, IRQF_SHARED,\\r\\n+                    dev_name(&spi->dev), lp);\\r\\n     if (rc)\\r\\n         goto err_hw_init;\\r\\n     /* Read irq status register to reset irq line */\\r\\n     rc = at86rf230_read_subreg(lp, RG_IRQ_STATUS, 0xff, 0, &status);\\r\\n     if (rc)\\r\\n-        goto err_irq;\\r\\n+        goto err_hw_init;\\r\\n     rc = ieee802154_register_device(lp->dev);\\r\\n     if (rc)\\r\\n-        goto err_irq;\\r\\n+        goto err_hw_init;\\r\\n     return rc;\\r\\n-err_irq:\\r\\n-    free_irq(spi->irq, lp);\\r\\n err_hw_init:\\r\\n     flush_work(&lp->irqwork);\\r\\n     spi_set_drvdata(spi, NULL);\\r\\n@@ -1232,7+1230,6@@ static int at86rf230_remove(struct spi_device *spi)\\r\\n     at86rf230_write_subreg(lp, SR_IRQ_MASK, 0);\\r\\n     ieee802154_unregister_device(lp->dev);\\r\\n-    free_irq(spi->irq, lp);\\r\\n     flush_work(&lp->irqwork);\\r\\n     if (gpio_is_valid(pdata->slp_tr))\\r\\n```\\r\\n\\r\\n\u9876\u534a\u90e8handler\u7684\u7c7b\u578birq_handler_t\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ntypedef irqreturn_t (*irq_handler_t)(int, void *);\\r\\ntypedef int irqreturn_t;\\r\\n```\\r\\n\\r\\n2.\u91ca\u653eirq\\r\\n\\r\\n\u4e0erequest_irq\uff08\uff09\u76f8\u5bf9\u5e94\u7684\u51fd\u6570\u4e3afree_irq\uff08\uff09\uff0cfree_irq\uff08\uff09\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid free_irq(unsigned int irq,void *dev_id);\\r\\n```\\r\\n\\r\\nfree_irq\uff08\uff09\u4e2d\u53c2\u6570\u7684\u5b9a\u4e49\u4e0erequest_irq\uff08\uff09\u76f8\u540c\u3002\\r\\n\\r\\n# 10.3.2\u3000\u4f7f\u80fd\u548c\u5c4f\u853d\u4e2d\u65ad\\r\\n\\r\\n\u4e0b\u52173\u4e2a\u51fd\u6570\u7528\u4e8e\u5c4f\u853d\u4e00\u4e2a\u4e2d\u65ad\u6e90\uff1a\\r\\n\\r\\n```\\r\\nvoid disable_irq(int irq);\\r\\nvoid disable_irq_nosync(int irq);\\r\\nvoid enable_irq(int irq);\\r\\n```\\r\\n\\r\\ndisable_irq_nosync\uff08\uff09\u4e0edisable_irq\uff08\uff09\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u7acb\u5373\u8fd4\u56de\uff0c\u800c\u540e\u8005\u7b49\u5f85\u76ee\u524d\u7684\u4e2d\u65ad\u5904\u7406\u5b8c\u6210\u3002\u7531\u4e8edisable_irq\uff08\uff09\u4f1a\u7b49\u5f85\u6307\u5b9a\u7684\u4e2d\u65ad\u88ab\u5904\u7406\u5b8c\uff0c\u56e0\u6b64\u5982\u679c\u5728n\u53f7\u4e2d\u65ad\u7684\u9876\u534a\u90e8\u8c03\u7528disable_irq\uff08n\uff09\uff0c\u4f1a\u5f15\u8d77\u7cfb\u7edf\u7684\u6b7b\u9501\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ea\u80fd\u8c03\u7528disable_irq_nosync\uff08n\uff09\u3002\\r\\n\\r\\n\u4e0b\u5217\u4e24\u4e2a\u51fd\u6570\uff08\u6216\u5b8f\uff0c\u5177\u4f53\u5b9e\u73b0\u4f9d\u8d56\u4e8eCPU\u7684\u4f53\u7cfb\u7ed3\u6784\uff09\u5c06\u5c4f\u853d\u672cCPU\u5185\u7684\u6240\u6709\u4e2d\u65ad\uff1a\\r\\n\\r\\n```\\r\\n#define local_irq_save(flags) ...\\r\\nvoid local_irq_disable(void);\\r\\n```\\r\\n\\r\\n\u524d\u8005\u4f1a\u5c06\u76ee\u524d\u7684\u4e2d\u65ad\u72b6\u6001\u4fdd\u7559\u5728flags\u4e2d\uff08\u6ce8\u610fflags\u4e3aunsigned long\u7c7b\u578b\uff0c\u88ab\u76f4\u63a5\u4f20\u9012\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u6307\u9488\uff09\uff0c\u540e\u8005\u76f4\u63a5\u7981\u6b62\u4e2d\u65ad\u800c\u4e0d\u4fdd\u5b58\u72b6\u6001\u3002\\r\\n\\r\\n\u4e0e\u4e0a\u8ff0\u4e24\u4e2a\u7981\u6b62\u4e2d\u65ad\u5bf9\u5e94\u7684\u6062\u590d\u4e2d\u65ad\u7684\u51fd\u6570\uff08\u6216\u5b8f\uff09\u662f\uff1a\\r\\n\\r\\n```\\r\\n#define local_irq_restore(flags) ...\\r\\nvoid local_irq_enable(void);\\r\\n```\\r\\n\\r\\n\u4ee5\u4e0a\u5404\u4ee5local_\u5f00\u5934\u7684\u65b9\u6cd5\u7684\u4f5c\u7528\u8303\u56f4\u662f\u672cCPU\u5185\u3002\\r\\n\\r\\n# 10.3.3\u3000\u5e95\u534a\u90e8\u673a\u5236\\r\\n\\r\\nLinux\u5b9e\u73b0\u5e95\u534a\u90e8\u7684\u673a\u5236\u4e3b\u8981\u6709tasklet\u3001\u5de5\u4f5c\u961f\u5217\u3001\u8f6f\u4e2d\u65ad\u548c\u7ebf\u7a0b\u5316irq\u3002\\r\\n\\r\\n1.tasklet\\r\\n\\r\\ntasklet\u7684\u4f7f\u7528\u8f83\u7b80\u5355\uff0c\u5b83\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u8f6f\u4e2d\u65ad\uff0c\u6267\u884c\u65f6\u673a\u901a\u5e38\u662f\u9876\u534a\u90e8\u8fd4\u56de\u7684\u65f6\u5019\u3002\u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49tasklet\u53ca\u5176\u5904\u7406\u51fd\u6570\uff0c\u5e76\u5c06\u4e24\u8005\u5173\u8054\u5219\u53ef\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nvoid my_tasklet_func(unsigned long); /*\u5b9a\u4e49\u4e00\u4e2a\u5904\u7406\u51fd\u6570*/\\r\\nDECLARE_TASKLET(my_tasklet, my_tasklet_func, data);\\r\\n  /*\u5b9a\u4e49\u4e00\u4e2atasklet\u7ed3\u6784my_tasklet\uff0c\u4e0emy_tasklet_func(data)\u51fd\u6570\u76f8\u5173\u8054*/\\r\\n```\\r\\n\\r\\n\u4ee3\u7801DECLARE_TASKLET\uff08my_tasklet\uff0cmy_tasklet_func\uff0cdata\uff09\u5b9e\u73b0\u4e86\u5b9a\u4e49\u540d\u79f0\u4e3amy_tasklet\u7684tasklet\uff0c\u5e76\u5c06\u5176\u4e0emy_tasklet_func\uff08\uff09\u8fd9\u4e2a\u51fd\u6570\u7ed1\u5b9a\uff0c\u800c\u4f20\u5165\u8fd9\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u4e3adata\u3002\\r\\n\\r\\n\u5728\u9700\u8981\u8c03\u5ea6tasklet\u7684\u65f6\u5019\u5f15\u7528\u4e00\u4e2atasklet_schedule\uff08\uff09\u51fd\u6570\u5c31\u80fd\u4f7f\u7cfb\u7edf\u5728\u9002\u5f53\u7684\u65f6\u5019\u8fdb\u884c\u8c03\u5ea6\u8fd0\u884c\uff1a\\r\\n\\r\\n```\\r\\ntasklet_schedule(&my_tasklet);\\r\\n```\\r\\n\\r\\n\u4f7f\u7528tasklet\u4f5c\u4e3a\u5e95\u534a\u90e8\u5904\u7406\u4e2d\u65ad\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u6a21\u677f\u5982\u4ee3\u7801\u6e05\u535510.2\u6240\u793a\uff08\u4ec5\u5305\u542b\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u90e8\u5206\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.2\u3000tasklet\u4f7f\u7528\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1/* \u5b9a\u4e49tasklet\u548c\u5e95\u534a\u90e8\u51fd\u6570\u5e76\u5c06\u5b83\u4eec\u5173\u8054 */\\r\\n 2void xxx_do_tasklet(unsigned long);\\r\\n 3DECLARE_TASKLET(xxx_tasklet, xxx_do_tasklet, 0);\\r\\n 4\\r\\n 5/* \u4e2d\u65ad\u5904\u7406\u5e95\u534a\u90e8*/\\r\\n 6void xxx_do_tasklet(unsigned long)\\r\\n 7{\\r\\n 8    ...\\r\\n 9}\\r\\n10\\r\\n11/* \u4e2d\u65ad\u5904\u7406\u9876\u534a\u90e8*/\\r\\n12irqreturn_t xxx_interrupt(int irq, void *dev_id)\\r\\n13{\\r\\n14 ...\\r\\n15 tasklet_schedule(&xxx_tasklet);\\r\\n16 ...\\r\\n17}\\r\\n18\\r\\n19/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570*/\\r\\n20int __init xxx_init(void)\\r\\n21{\\r\\n22 ...\\r\\n23 /* \u7533\u8bf7\u4e2d\u65ad */\\r\\n24 result = request_irq(xxx_irq, xxx_interrupt,\\r\\n25     0, \\"xxx\\", NULL);\\r\\n26 ...\\r\\n27 return IRQ_HANDLED;\\r\\n28}\\r\\n29\\r\\n30/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u5378\u8f7d\u51fd\u6570*/\\r\\n31void __exit xxx_exit(void)\\r\\n32{\\r\\n33 ...\\r\\n34 /* \u91ca\u653e\u4e2d\u65ad*/\\r\\n35 free_irq(xxx_irq, xxx_interrupt);\\r\\n36 ...\\r\\n37}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u7a0b\u5e8f\u5728\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\u7533\u8bf7\u4e2d\u65ad\uff08\u7b2c24~25\u884c\uff09\uff0c\u5e76\u5728\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u4e2d\u91ca\u653e\u5b83\uff08\u7b2c35\u884c\uff09\u3002\u5bf9\u5e94\u4e8exxx_irq\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u88ab\u8bbe\u7f6e\u4e3axxx_interrupt\uff08\uff09\u51fd\u6570\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u7b2c15\u884c\u7684tasklet_schedule\uff08&xxx_tasklet\uff09\u8c03\u5ea6\u88ab\u5b9a\u4e49\u7684tasklet\u51fd\u6570xxx_do_tasklet\uff08\uff09\u5728\u9002\u5f53\u7684\u65f6\u5019\u6267\u884c\u3002\\r\\n\\r\\n2.\u5de5\u4f5c\u961f\u5217\\r\\n\\r\\n\u5de5\u4f5c\u961f\u5217\u7684\u4f7f\u7528\u65b9\u6cd5\u548ctasklet\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5de5\u4f5c\u961f\u5217\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u662f\u5185\u6838\u7ebf\u7a0b\uff0c\u56e0\u6b64\u53ef\u4ee5\u8c03\u5ea6\u548c\u7761\u7720\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u5de5\u4f5c\u961f\u5217\u548c\u4e00\u4e2a\u5e95\u534a\u90e8\u6267\u884c\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nstruct work_struct my_wq;                    /* \u5b9a\u4e49\u4e00\u4e2a\u5de5\u4f5c\u961f\u5217 */\\r\\nvoid my_wq_func(struct work_struct *work);   /* \u5b9a\u4e49\u4e00\u4e2a\u5904\u7406\u51fd\u6570*/\\r\\n```\\r\\n\\r\\n\u901a\u8fc7INIT_WORK\uff08\uff09\u53ef\u4ee5\u521d\u59cb\u5316\u8fd9\u4e2a\u5de5\u4f5c\u961f\u5217\u5e76\u5c06\u5de5\u4f5c\u961f\u5217\u4e0e\u5904\u7406\u51fd\u6570\u7ed1\u5b9a\uff1a\\r\\n\\r\\n```\\r\\nINIT_WORK(&my_wq, my_wq_func);\\r\\n  /* \u521d\u59cb\u5316\u5de5\u4f5c\u961f\u5217\u5e76\u5c06\u5176\u4e0e\u5904\u7406\u51fd\u6570\u7ed1\u5b9a*/\\r\\n```\\r\\n\\r\\n\u4e0etasklet_schedule\uff08\uff09\u5bf9\u5e94\u7684\u7528\u4e8e\u8c03\u5ea6\u5de5\u4f5c\u961f\u5217\u6267\u884c\u7684\u51fd\u6570\u4e3aschedule_work\uff08\uff09\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nschedule_work(&my_wq);     /* \u8c03\u5ea6\u5de5\u4f5c\u961f\u5217\u6267\u884c*/\\r\\n```\\r\\n\\r\\n\u4e0e\u4ee3\u7801\u6e05\u535510.2\u5bf9\u5e94\u7684\u4f7f\u7528\u5de5\u4f5c\u961f\u5217\u5904\u7406\u4e2d\u65ad\u5e95\u534a\u90e8\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u6a21\u677f\u5982\u4ee3\u7801\u6e05\u535510.3\u6240\u793a\uff08\u4ec5\u5305\u542b\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u90e8\u5206\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.3\u3000\u5de5\u4f5c\u961f\u5217\u4f7f\u7528\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1/* \u5b9a\u4e49\u5de5\u4f5c\u961f\u5217\u548c\u5173\u8054\u51fd\u6570*/\\r\\n 2struct work_struct xxx_wq;\\r\\n 3void xxx_do_work(struct work_struct *work);\\r\\n 4\\r\\n 5/* \u4e2d\u65ad\u5904\u7406\u5e95\u534a\u90e8*/\\r\\n 6void xxx_do_work(struct work_struct *work)\\r\\n 7{\\r\\n 8 ...\\r\\n 9}\\r\\n10\\r\\n11/*\u4e2d\u65ad\u5904\u7406\u9876\u534a\u90e8*/\\r\\n12irqreturn_t xxx_interrupt(int irq, void *dev_id)\\r\\n13{\\r\\n14 ...\\r\\n15 schedule_work(&xxx_wq);\\r\\n16 ...\\r\\n17 return IRQ_HANDLED;\\r\\n18}\\r\\n19\\r\\n20/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570*/\\r\\n21int xxx_init(void)\\r\\n22{\\r\\n23 ...\\r\\n24 /* \u7533\u8bf7\u4e2d\u65ad*/\\r\\n25 result = request_irq(xxx_irq, xxx_interrupt,\\r\\n26      0, \\"xxx\\", NULL);\\r\\n27 ...\\r\\n28 /* \u521d\u59cb\u5316\u5de5\u4f5c\u961f\u5217*/\\r\\n29 INIT_WORK(&xxx_wq, xxx_do_work);\\r\\n30 ...\\r\\n31}\\r\\n32\\r\\n33/* \u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u5378\u8f7d\u51fd\u6570 */\\r\\n34void xxx_exit(void)\\r\\n35{\\r\\n36 ...\\r\\n37 /* \u91ca\u653e\u4e2d\u65ad */\\r\\n38 free_irq(xxx_irq, xxx_interrupt);\\r\\n39 ...\\r\\n40}\\r\\n```\\r\\n\\r\\n\u4e0e\u4ee3\u7801\u6e05\u535510.2\u4e0d\u540c\u7684\u662f\uff0c\u4e0a\u8ff0\u7a0b\u5e8f\u5728\u8bbe\u8ba1\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\u589e\u52a0\u4e86\u521d\u59cb\u5316\u5de5\u4f5c\u961f\u5217\u7684\u4ee3\u7801\uff08\u7b2c29\u884c\uff09\u3002\\r\\n\\r\\n\u5de5\u4f5c\u961f\u5217\u65e9\u671f\u7684\u5b9e\u73b0\u662f\u5728\u6bcf\u4e2aCPU\u6838\u4e0a\u521b\u5efa\u4e00\u4e2aworker\u5185\u6838\u7ebf\u7a0b\uff0c\u6240\u6709\u5728\u8fd9\u4e2a\u6838\u4e0a\u8c03\u5ea6\u7684\u5de5\u4f5c\u90fd\u5728\u8be5worker\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u5176\u5e76\u53d1\u6027\u663e\u7136\u5dee\u5f3a\u4eba\u610f\u3002\u5728Linux 2.6.36\u4ee5\u540e\uff0c\u8f6c\u800c\u5b9e\u73b0\u4e86\u201cConcurrency-managed workqueues\u201d\uff0c\u7b80\u79f0cmwq\uff0ccmwq\u4f1a\u81ea\u52a8\u7ef4\u62a4\u5de5\u4f5c\u961f\u5217\u7684\u7ebf\u7a0b\u6c60\u4ee5\u63d0\u9ad8\u5e76\u53d1\u6027\uff0c\u540c\u65f6\u4fdd\u6301\u4e86API\u7684\u5411\u540e\u517c\u5bb9\u3002\\r\\n\\r\\n3.\u8f6f\u4e2d\u65ad\\r\\n\\r\\n\u8f6f\u4e2d\u65ad\uff08Softirq\uff09\u4e5f\u662f\u4e00\u79cd\u4f20\u7edf\u7684\u5e95\u534a\u90e8\u5904\u7406\u673a\u5236\uff0c\u5b83\u7684\u6267\u884c\u65f6\u673a\u901a\u5e38\u662f\u9876\u534a\u90e8\u8fd4\u56de\u7684\u65f6\u5019\uff0ctasklet\u662f\u57fa\u4e8e\u8f6f\u4e2d\u65ad\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u4e5f\u8fd0\u884c\u4e8e\u8f6f\u4e2d\u65ad\u4e0a\u4e0b\u6587\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u7528softirq_action\u7ed3\u6784\u4f53\u8868\u5f81\u4e00\u4e2a\u8f6f\u4e2d\u65ad\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5305\u542b\u8f6f\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u6307\u9488\u548c\u4f20\u9012\u7ed9\u8be5\u51fd\u6570\u7684\u53c2\u6570\u3002\u4f7f\u7528open_softirq\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u6ce8\u518c\u8f6f\u4e2d\u65ad\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\uff0c\u800craise_softirq\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u89e6\u53d1\u4e00\u4e2a\u8f6f\u4e2d\u65ad\u3002\\r\\n\\r\\n\u8f6f\u4e2d\u65ad\u548ctasklet\u8fd0\u884c\u4e8e\u8f6f\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u4ecd\u7136\u5c5e\u4e8e\u539f\u5b50\u4e0a\u4e0b\u6587\u7684\u4e00\u79cd\uff0c\u800c\u5de5\u4f5c\u961f\u5217\u5219\u8fd0\u884c\u4e8e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u3002\u56e0\u6b64\uff0c\u5728\u8f6f\u4e2d\u65ad\u548ctasklet\u5904\u7406\u51fd\u6570\u4e2d\u4e0d\u5141\u8bb8\u7761\u7720\uff0c\u800c\u5728\u5de5\u4f5c\u961f\u5217\u5904\u7406\u51fd\u6570\u4e2d\u5141\u8bb8\u7761\u7720\u3002\\r\\n\\r\\nlocal_bh_disable\uff08\uff09\u548clocal_bh_enable\uff08\uff09\u662f\u5185\u6838\u4e2d\u7528\u4e8e\u7981\u6b62\u548c\u4f7f\u80fd\u8f6f\u4e2d\u65ad\u53catasklet\u5e95\u534a\u90e8\u673a\u5236\u7684\u51fd\u6570\u3002\\r\\n\\r\\n\u5185\u6838\u4e2d\u91c7\u7528softirq\u7684\u5730\u65b9\u5305\u62ecHI_SOFTIRQ\u3001TIMER_SOFTIRQ\u3001NET_TX_SOFTIRQ\u3001NET_RX_SOFTIRQ\u3001SCSI_SOFTIRQ\u3001TASKLET_SOFTIRQ\u7b49\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u9a71\u52a8\u7684\u7f16\u5199\u8005\u4e0d\u4f1a\u4e5f\u4e0d\u5b9c\u76f4\u63a5\u4f7f\u7528softirq\u3002\\r\\n\\r\\n\u7b2c9\u7ae0\u5f02\u6b65\u901a\u77e5\u6240\u57fa\u4e8e\u7684\u4fe1\u53f7\u4e5f\u7c7b\u4f3c\u4e8e\u4e2d\u65ad\uff0c\u73b0\u5728\uff0c\u603b\u7ed3\u4e00\u4e0b\u786c\u4e2d\u65ad\u3001\u8f6f\u4e2d\u65ad\u548c\u4fe1\u53f7\u7684\u533a\u522b\uff1a\u786c\u4e2d\u65ad\u662f\u5916\u90e8\u8bbe\u5907\u5bf9CPU\u7684\u4e2d\u65ad\uff0c\u8f6f\u4e2d\u65ad\u662f\u4e2d\u65ad\u5e95\u534a\u90e8\u7684\u4e00\u79cd\u5904\u7406\u673a\u5236\uff0c\u800c\u4fe1\u53f7\u5219\u662f\u7531\u5185\u6838\uff08\u6216\u5176\u4ed6\u8fdb\u7a0b\uff09\u5bf9\u67d0\u4e2a\u8fdb\u7a0b\u7684\u4e2d\u65ad\u3002\u5728\u6d89\u53ca\u7cfb\u7edf\u8c03\u7528\u7684\u573a\u5408\uff0c\u4eba\u4eec\u4e5f\u5e38\u8bf4\u901a\u8fc7\u8f6f\u4e2d\u65ad\uff08\u4f8b\u5982ARM\u4e3aswi\uff09\u9677\u5165\u5185\u6838\uff0c\u6b64\u65f6\u8f6f\u4e2d\u65ad\u7684\u6982\u5ff5\u662f\u6307\u7531\u8f6f\u4ef6\u6307\u4ee4\u5f15\u53d1\u7684\u4e2d\u65ad\uff0c\u548c\u6211\u4eec\u8fd9\u4e2a\u5730\u65b9\u8bf4\u7684softirq\u662f\u4e24\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u6982\u5ff5\uff0c\u4e00\u4e2a\u662fsoftware\uff0c\u4e00\u4e2a\u662fsoft\u3002\\r\\n\\r\\n\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff0c\u8f6f\u4e2d\u65ad\u4ee5\u53ca\u57fa\u4e8e\u8f6f\u4e2d\u65ad\u7684tasklet\u5982\u679c\u5728\u67d0\u6bb5\u65f6\u95f4\u5185\u5927\u91cf\u51fa\u73b0\u7684\u8bdd\uff0c\u5185\u6838\u4f1a\u628a\u540e\u7eed\u8f6f\u4e2d\u65ad\u653e\u5165ksoftirqd\u5185\u6838\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4e2d\u65ad\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8f6f\u4e2d\u65ad\uff0c\u8f6f\u4e2d\u65ad\u53c8\u9ad8\u4e8e\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\u3002\u8f6f\u4e2d\u65ad\u9002\u5ea6\u7ebf\u7a0b\u5316\uff0c\u53ef\u4ee5\u7f13\u89e3\u9ad8\u8d1f\u8f7d\u60c5\u51b5\u4e0b\u7cfb\u7edf\u7684\u54cd\u5e94\u3002\\r\\n\\r\\n4.threaded_irq\\r\\n\\r\\n\u5728\u5185\u6838\u4e2d\uff0c\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7request_irq\uff08\uff09\u3001devm_request_irq\uff08\uff09\u7533\u8bf7\u4e2d\u65ad\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7request_threaded_irq\uff08\uff09\u548cdevm_request_threaded_irq\uff08\uff09\u7533\u8bf7\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint request_threaded_irq(unsigned int irq, irq_handler_t handler,\\r\\n                     irq_handler_t thread_fn,\\r\\n                     unsigned long flags, const char *name, void *dev);\\r\\nint devm_request_threaded_irq(struct device *dev, unsigned int irq,\\r\\n                          irq_handler_t handler, irq_handler_t thread_fn,\\r\\n                          unsigned long irqflags, const char *devname,\\r\\n                          void *dev_id);\\r\\n```\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0c\u5b83\u4eec\u6bd4request_irq\uff08\uff09\u3001devm_request_irq\uff08\uff09\u591a\u4e86\u4e00\u4e2a\u53c2\u6570thread_fn\u3002\u7528\u8fd9\u4e24\u4e2aAPI\u7533\u8bf7\u4e2d\u65ad\u7684\u65f6\u5019\uff0c\u5185\u6838\u4f1a\u4e3a\u76f8\u5e94\u7684\u4e2d\u65ad\u53f7\u5206\u914d\u4e00\u4e2a\u5bf9\u5e94\u7684\u5185\u6838\u7ebf\u7a0b\u3002\u6ce8\u610f\u8fd9\u4e2a\u7ebf\u7a0b\u53ea\u9488\u5bf9\u8fd9\u4e2a\u4e2d\u65ad\u53f7\uff0c\u5982\u679c\u5176\u4ed6\u4e2d\u65ad\u4e5f\u901a\u8fc7request_threaded_irq\uff08\uff09\u7533\u8bf7\uff0c\u81ea\u7136\u4f1a\u5f97\u5230\u65b0\u7684\u5185\u6838\u7ebf\u7a0b\u3002\\r\\n\\r\\n\u53c2\u6570handler\u5bf9\u5e94\u7684\u51fd\u6570\u6267\u884c\u4e8e\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0cthread_fn\u53c2\u6570\u5bf9\u5e94\u7684\u51fd\u6570\u5219\u6267\u884c\u4e8e\u5185\u6838\u7ebf\u7a0b\u3002\u5982\u679chandler\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u503c\u662fIRQ_WAKE_THREAD\uff0c\u5185\u6838\u4f1a\u8c03\u5ea6\u5bf9\u5e94\u7ebf\u7a0b\u6267\u884cthread_fn\u5bf9\u5e94\u7684\u51fd\u6570\u3002\\r\\n\\r\\nrequest_threaded_irq\uff08\uff09\u548cdevm_request_threaded_irq\uff08\uff09\u652f\u6301\u5728irqflags\u4e2d\u8bbe\u7f6eIRQF_ONESHOT\u6807\u8bb0\uff0c\u8fd9\u6837\u5185\u6838\u4f1a\u81ea\u52a8\u5e2e\u52a9\u6211\u4eec\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u5c4f\u853d\u5bf9\u5e94\u7684\u4e2d\u65ad\u53f7\uff0c\u800c\u5728\u5185\u6838\u8c03\u5ea6thread_fn\u6267\u884c\u540e\uff0c\u91cd\u65b0\u4f7f\u80fd\u8be5\u4e2d\u65ad\u53f7\u3002\u5bf9\u4e8e\u6211\u4eec\u65e0\u6cd5\u5728\u4e0a\u534a\u90e8\u6e05\u9664\u4e2d\u65ad\u7684\u60c5\u51b5\uff0cIRQF_ONESHOT\u7279\u522b\u6709\u7528\uff0c\u907f\u514d\u4e86\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e00\u9000\u51fa\uff0c\u4e2d\u65ad\u5c31\u6d2a\u6cdb\u7684\u60c5\u51b5\u3002\\r\\n\\r\\nhandler\u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3aNULL\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u4f1a\u7528\u9ed8\u8ba4\u7684irq_default_primary_handler\uff08\uff09\u4ee3\u66ffhandler\uff0c\u5e76\u4f1a\u4f7f\u7528IRQF_ONESHOT\u6807\u8bb0\u3002irq_default_primary_handler\uff08\uff09\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n/*\\r\\n * Default primary interrupt handler for threaded interrupts. Is\\r\\n * assigned as primary handler when request_threaded_irq is called\\r\\n * with handler == NULL. Useful for oneshot interrupts.\\r\\n */\\r\\nstatic irqreturn_t irq_default_primary_handler(int irq, void *dev_id)\\r\\n{\\r\\n        return IRQ_WAKE_THREAD;\\r\\n}\\r\\n```\\r\\n\\r\\n# 10.3.4\u3000\u5b9e\u4f8b\uff1aGPIO\u6309\u952e\u7684\u4e2d\u65ad\\r\\n\\r\\ndrivers/input/keyboard/gpio_keys.c\u662f\u4e00\u4e2a\u653e\u4e4b\u56db\u6d77\u7686\u51c6\u7684GPIO\u6309\u952e\u9a71\u52a8\uff0c\u4e3a\u4e86\u8ba9\u8be5\u9a71\u52a8\u5728\u7279\u5b9a\u7684\u7535\u8def\u677f\u4e0a\u5de5\u4f5c\uff0c\u901a\u5e38\u53ea\u9700\u8981\u4fee\u6539arch/arm/mach-xxx\u4e0b\u7684\u677f\u6587\u4ef6\u6216\u8005\u4fee\u6539device tree\u5bf9\u5e94\u7684dts\u3002\u8be5\u9a71\u52a8\u4f1a\u4e3a\u6bcf\u4e2aGPIO\u7533\u8bf7\u4e2d\u65ad\uff0c\u5728gpio_keys_setup_key\uff08\uff09\u51fd\u6570\u4e2d\u8fdb\u884c\u3002\u6ce8\u610f\u6700\u540e\u4e00\u4e2a\u53c2\u6570bdata\uff0c\u4f1a\u88ab\u4f20\u5165\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.4\u3000GPIO\u6309\u952e\u9a71\u52a8\u4e2d\u65ad\u7533\u8bf7\\r\\n\\r\\n```\\r\\n 1static int gpio_keys_setup_key(struct platform_device *pdev,\\r\\n 2                  struct input_dev *input,\\r\\n 3                  struct gpio_button_data *bdata,\\r\\n 4                  const struct gpio_keys_button *button)\\r\\n 5{\\r\\n 6  ...\\r\\n 7\\r\\n 8  error = request_any_context_irq(bdata->irq, isr, irqflags, desc, bdata);\\r\\n 9  if (error < 0) {\\r\\n10      dev_err(dev, \\"Unable to claim irq %d; error %d\\\\n\\",\\r\\n11          bdata->irq, error);\\r\\n12      goto fail;\\r\\n13  }\\r\\n14  ...\\r\\n15}\\r\\n```\\r\\n\\r\\n\u7b2c8\u884c\u7684request_any_context_irq\uff08\uff09\u4f1a\u6839\u636eGPIO\u63a7\u5236\u5668\u672c\u8eab\u7684\u201c\u4e0a\u7ea7\u201d\u4e2d\u65ad\u662f\u5426\u4e3athreaded_irq\u6765\u51b3\u5b9a\u91c7\u7528request_irq\uff08\uff09\u8fd8\u662frequest_threaded_irq\uff08\uff09\u3002\u4e00\u7ec4GPIO\uff08\u598232\u4e2aGPIO\uff09\u867d\u7136\u6bcf\u4e2a\u90fd\u63d0\u4f9b\u4e00\u4e2a\u4e2d\u65ad\uff0c\u5e76\u4e14\u90fd\u6709\u4e2d\u65ad\u53f7\uff0c\u4f46\u662f\u5728\u786c\u4ef6\u4e0a\u4e00\u7ec4GPIO\u901a\u5e38\u662f\u5d4c\u5957\u5728\u4e0a\u4e00\u7ea7\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u4e0a\u7684\u4e00\u4e2a\u4e2d\u65ad\u3002\\r\\n\\r\\nrequest_any_context_irq\uff08\uff09\u4e5f\u6709\u4e00\u4e2a\u53d8\u4f53\u662fdevm_request_any_context_irq\uff08\uff09\u3002\\r\\n\\r\\n\u5728GPIO\u6309\u952e\u9a71\u52a8\u7684remove_key\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u4f1a\u91ca\u653eGPIO\u5bf9\u5e94\u7684\u4e2d\u65ad\uff0c\u5982\u4ee3\u7801\u6e05\u535510.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.5\u3000GPIO\u6309\u952e\u9a71\u52a8\u4e2d\u65ad\u91ca\u653e\\r\\n\\r\\n```\\r\\n1static void gpio_remove_key(struct gpio_button_data *bdata)\\r\\n2{\\r\\n3    free_irq(bdata->irq, bdata);\\r\\n4    if (bdata->timer_debounce)\\r\\n5         del_timer_sync(&bdata->timer);\\r\\n6    cancel_work_sync(&bdata->work);\\r\\n7    if (gpio_is_valid(bdata->button->gpio))\\r\\n8         gpio_free(bdata->button->gpio);\\r\\n```\\r\\n\\r\\n\u7b2c3\u884c\u76f4\u63a5\u4ecedev_id\u53d6\u51fa\u4e86bdata\uff0c\u8fd9\u5c31\u662f\u5bf9\u5e94\u7684\u90a3\u4e2aGPIO\u952e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e4b\u540e\u6839\u636e\u60c5\u51b5\u542f\u52a8timer\u4ee5\u8fdb\u884cdebounce\u6216\u8005\u76f4\u63a5\u8c03\u5ea6\u5de5\u4f5c\u961f\u5217\u53bb\u6c47\u62a5\u6309\u952e\u4e8b\u4ef6\u3002\u5728GPIO\u6309\u952e\u9a71\u52a8\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u901a\u8fc7INIT_WORK\uff08&bdata->work\uff0cgpio_keys_gpio_work_func\uff09\u521d\u59cb\u5316\u4e86bdata->work\uff0c\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\u662fgpio_keys_gpio_work_func\uff08\uff09\uff0c\u5982\u4ee3\u7801\u6e05\u535510.7\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.7\u3000GPIO\u6309\u952e\u9a71\u52a8\u7684\u5de5\u4f5c\u961f\u5217\u5e95\u534a\u90e8\\r\\n\\r\\n```\\r\\n 1static void gpio_keys_gpio_work_func(struct work_struct *work)\\r\\n 2{\\r\\n 3        struct gpio_button_data *bdata =\\r\\n 4                container_of(work, struct gpio_button_data, work);\\r\\n 5\\r\\n 6        gpio_keys_gpio_report_event(bdata);\\r\\n 7\\r\\n 8        if (bdata->button->wakeup)\\r\\n 9                pm_relax(bdata->input->dev.parent);\\r\\n10}\\r\\n```\\r\\n\\r\\n\u89c2\u5bdf\u5176\u4e2d\u7684\u7b2c3~4\u884c\uff0c\u5b83\u901a\u8fc7container_of\uff08\uff09\u518d\u6b21\u4ecework_struct\u53cd\u5411\u89e3\u6790\u51fa\u4e86bdata\u3002\u539f\u56e0\u662fwork_struct\u672c\u8eab\u5728\u5b9a\u4e49\u65f6\uff0c\u5c31\u5d4c\u5165\u5728gpio_button_data\u7ed3\u6784\u4f53\u5185\u3002\u8bfb\u8005\u670b\u53cb\u4eec\u5e94\u8be5\u638c\u63e1Linux\u7684\u8fd9\u79cd\u53ef\u4ee5\u5230\u5904\u83b7\u53d6\u4e00\u4e2a\u7ed3\u6784\u4f53\u6307\u9488\u7684\u6280\u5de7\uff0c\u5b83\u5b9e\u9645\u4e0a\u7c7b\u4f3c\u4e8e\u9762\u5411\u5bf9\u8c61\u91cc\u9762\u7684\u201cthis\u201d\u6307\u9488\u3002\\r\\n\\r\\n```\\r\\nstruct gpio_button_data {\\r\\n        const struct gpio_keys_button *button;\\r\\n        struct input_dev *input;\\r\\n        struct timer_list timer;\\r\\n        struct work_struct work;\\r\\n        unsigned int timer_debounce;    /* in msecs */\\r\\n        unsigned int irq;\\r\\n        spinlock_t lock;\\r\\n        bool disabled;\\r\\n        bool key_pressed;\\r\\n};\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316","description":"\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316\u4e3b\u8981\u9700\u8981\u5b8c\u6210\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u5de5\u4f5c\u3002","date":"2025-09-15T14:44:14.657Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.26,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"10.3.1\u3000\u7533\u8bf7\u548c\u91ca\u653e\u4e2d\u65ad","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.3\u3000Linux\u4e2d\u65ad\u7f16\u7a0b"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e"}},"content":"\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316\u4e3b\u8981\u9700\u8981\u5b8c\u6210\u5982\u4e0b\u51e0\u4e2a\u65b9\u9762\u7684\u5de5\u4f5c\u3002\\r\\n\\r\\n- \xb7\u8fdb\u884c\u786c\u4ef6\u4e0a\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u68c0\u67e5\u7f51\u7edc\u8bbe\u5907\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u68c0\u6d4b\u8bbe\u5907\u6240\u4f7f\u7528\u7684\u786c\u4ef6\u8d44\u6e90\u3002\\r\\n- \xb7\u8fdb\u884c\u8f6f\u4ef6\u63a5\u53e3\u4e0a\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u5206\u914dnet_device\u7ed3\u6784\u4f53\u5e76\u5bf9\u5176\u6570\u636e\u548c\u51fd\u6570\u6307\u9488\u6210\u5458\u8d4b\u503c\u3002\\r\\n- \xb7\u83b7\u5f97\u8bbe\u5907\u7684\u79c1\u6709\u4fe1\u606f\u6307\u9488\u5e76\u521d\u59cb\u5316\u5404\u6210\u5458\u7684\u503c\u3002\u5982\u679c\u79c1\u6709\u4fe1\u606f\u4e2d\u5305\u62ec\u81ea\u65cb\u9501\u6216\u4fe1\u53f7\u91cf\u7b49\u5e76\u53d1\u6216\u540c\u6b65\u673a\u5236\uff0c\u5219\u9700\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\\r\\n\\r\\n\u5bf9net_device\u7ed3\u6784\u4f53\u6210\u5458\u53ca\u79c1\u6709\u6570\u636e\u7684\u8d4b\u503c\u90fd\u53ef\u80fd\u9700\u8981\u4e0e\u786c\u4ef6\u521d\u59cb\u5316\u5de5\u4f5c\u534f\u540c\u8fdb\u884c\uff0c\u5373\u786c\u4ef6\u68c0\u6d4b\u51fa\u4e86\u76f8\u5e94\u7684\u8d44\u6e90\uff0c\u9700\u8981\u6839\u636e\u68c0\u6d4b\u7ed3\u679c\u586b\u5145net_device\u7ed3\u6784\u4f53\u6210\u5458\u548c\u79c1\u6709\u6570\u636e\u3002\\r\\n\\r\\n\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316\u51fd\u6570\u6a21\u677f\u5982\u4ee3\u7801\u6e05\u535514.5\u6240\u793a\uff0c\u5177\u4f53\u7684\u8bbe\u5907\u9a71\u52a8\u521d\u59cb\u5316\u51fd\u6570\u5e76\u4e0d\u4e00\u5b9a\u5b8c\u5168\u548c\u672c\u6a21\u677f\u4e00\u6837\uff0c\u4f46\u5176\u672c\u8d28\u8fc7\u7a0b\u662f\u4e00\u81f4\u7684\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.5\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1void xxx_init(struct net_device *dev)\\r\\n 2{\\r\\n 3  /* \u8bbe\u5907\u7684\u79c1\u6709\u4fe1\u606f\u7ed3\u6784\u4f53*/\\r\\n 4  struct xxx_priv *priv;\\r\\n 5\\r\\n 6  /* \u68c0\u67e5\u8bbe\u5907\u662f\u5426\u5b58\u5728\u548c\u8bbe\u5907\u6240\u4f7f\u7528\u7684\u786c\u4ef6\u8d44\u6e90*/\\r\\n 7  xxx_hw_init();\\r\\n 8\\r\\n 9  /* \u521d\u59cb\u5316\u4ee5\u592a\u7f51\u8bbe\u5907\u7684\u516c\u7528\u6210\u5458*/\\r\\n10  ether_setup(dev);\\r\\n11\\r\\n12  /* \u8bbe\u7f6e\u8bbe\u5907\u7684\u6210\u5458\u51fd\u6570\u6307\u9488*/\\r\\n13  ndev->netdev_ops        = &xxx_netdev_ops;\\r\\n14  ndev->ethtool_ops       = &xxx_ethtool_ops;\\r\\n15  dev->watchdog_timeout = timeout;\\r\\n16\\r\\n17  /* \u53d6\u5f97\u79c1\u6709\u4fe1\u606f\uff0c\u5e76\u521d\u59cb\u5316\u5b83*/\\r\\n18  priv = netdev_priv(dev);\\r\\n19  ...  /* \u521d\u59cb\u5316\u8bbe\u5907\u79c1\u6709\u6570\u636e\u533a*/\\r\\n20}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c7\u884c\u7684xxx_hw_init\uff08\uff09\u51fd\u6570\u5b8c\u6210\u7684\u4e0e\u786c\u4ef6\u76f8\u5173\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u5982\u4e0b\u3002\\r\\n\\r\\n- \u63a2\u6d4bxxx\u7f51\u7edc\u8bbe\u5907\u662f\u5426\u5b58\u5728\u3002\u63a2\u6d4b\u7684\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u6570\u5b66\u4e0a\u7684\u201c\u53cd\u8bc1\u6cd5\u201d\uff0c\u5373\u5148\u5047\u8bbe\u5b58\u5728\u8bbe\u5907xxx\uff0c\u8bbf\u95ee\u8be5\u8bbe\u5907\uff0c\u5982\u679c\u8bbe\u5907\u7684\u8868\u73b0\u4e0e\u9884\u671f\u4e00\u81f4\uff0c\u5c31\u786e\u5b9a\u8bbe\u5907\u5b58\u5728\uff1b\u5426\u5219\uff0c\u5047\u8bbe\u9519\u8bef\uff0c\u8bbe\u5907xxx\u4e0d\u5b58\u5728\u3002\\r\\n- \u63a2\u6d4b\u8bbe\u5907\u7684\u5177\u4f53\u786c\u4ef6\u914d\u7f6e\u3002\u4e00\u4e9b\u8bbe\u5907\u9a71\u52a8\u7f16\u5199\u5f97\u975e\u5e38\u901a\u7528\uff0c\u5bf9\u4e8e\u540c\u7c7b\u7684\u8bbe\u5907\u4f7f\u7528\u7edf\u4e00\u7684\u9a71\u52a8\uff0c\u6211\u4eec\u9700\u8981\u5728\u521d\u59cb\u5316\u65f6\u63a2\u6d4b\u8bbe\u5907\u7684\u5177\u4f53\u578b\u53f7\u3002\u53e6\u5916\uff0c\u5373\u4fbf\u662f\u540c\u4e00\u8bbe\u5907\uff0c\u5728\u786c\u4ef6\u4e0a\u7684\u914d\u7f6e\u4e5f\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u63a2\u6d4b\u8bbe\u5907\u6240\u4f7f\u7528\u7684\u786c\u4ef6\u8d44\u6e90\u3002\\r\\n- \u7533\u8bf7\u8bbe\u5907\u6240\u9700\u8981\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u5982\u7528request_region\uff08\uff09\u51fd\u6570\u8fdb\u884cI/O\u7aef\u53e3\u7684\u7533\u8bf7\u7b49\uff0c\u4f46\u662f\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u653e\u5728\u8bbe\u5907\u7684\u6253\u5f00\u51fd\u6570xxx_open\uff08\uff09\u4e2d\u5b8c\u6210\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e","description":"\u7f51\u7edc\u8bbe\u5907\u7684\u9a71\u52a8\u7a0b\u5e8f\u8fd8\u63d0\u4f9b\u4e00\u4e9b\u4f9b\u7cfb\u7edf\u5bf9\u8bbe\u5907\u7684\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\u6216\u8bfb\u53d6\u8bbe\u5907\u76f8\u5173\u4fe1\u606f\u7684\u65b9\u6cd5\u3002","date":"2025-09-15T14:44:14.657Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":6.5,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.3\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u521d\u59cb\u5316"},"nextItem":{"title":"1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528"}},"content":"\u7f51\u7edc\u8bbe\u5907\u7684\u9a71\u52a8\u7a0b\u5e8f\u8fd8\u63d0\u4f9b\u4e00\u4e9b\u4f9b\u7cfb\u7edf\u5bf9\u8bbe\u5907\u7684\u53c2\u6570\u8fdb\u884c\u8bbe\u7f6e\u6216\u8bfb\u53d6\u8bbe\u5907\u76f8\u5173\u4fe1\u606f\u7684\u65b9\u6cd5\u3002\\r\\n\\r\\n\u5f53\u7528\u6237\u8c03\u7528ioctl\uff08\uff09\u51fd\u6570\uff0c\u5e76\u6307\u5b9aSIOCSIFHWADDR\u547d\u4ee4\u65f6\uff0c\u610f\u5473\u7740\u8981\u8bbe\u7f6e\u8fd9\u4e2a\u8bbe\u5907\u7684MAC\u5730\u5740\u3002\u8bbe\u7f6e\u7f51\u7edc\u8bbe\u5907\u7684MAC\u5730\u5740\u53ef\u7528\u5982\u4ee3\u7801\u6e05\u535514.14\u6240\u793a\u7684\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.14\u3000\u8bbe\u7f6e\u7f51\u7edc\u8bbe\u5907\u7684MAC\u5730\u5740\\r\\n\\r\\n```\\r\\n 1static int set_mac_address(struct net_device *dev, void *addr)\\r\\n 2{\\r\\n 3    if (netif_running(dev))\\r\\n 4        return -EBUSY;  /* \u8bbe\u5907\u5fd9*/\\r\\n 5\\r\\n 6    /* \u8bbe\u7f6e\u4ee5\u592a\u7f51\u7684MAC\u5730\u5740*/\\r\\n 7    xxx_set_mac(dev, addr);\\r\\n 8\\r\\n 9    return 0;\\r\\n10}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u7a0b\u5e8f\u9996\u5148\u7528netif_running\uff08\uff09\u5b8f\u5224\u65ad\u8bbe\u5907\u662f\u5426\u6b63\u5728\u8fd0\u884c\uff0c\u5982\u679c\u662f\uff0c\u5219\u610f\u5473\u7740\u8bbe\u5907\u5fd9\uff0c\u6b64\u65f6\u4e0d\u5141\u8bb8\u8bbe\u7f6eMAC\u5730\u5740\uff1b\u5426\u5219\uff0c\u8c03\u7528xxx_set_mac\uff08\uff09\u51fd\u6570\u5728\u7f51\u7edc\u9002\u914d\u5668\u786c\u4ef6\u5185\u5199\u5165\u65b0\u7684MAC\u5730\u5740\u3002\u8fd9\u8981\u6c42\u8bbe\u5907\u5728\u786c\u4ef6\u4e0a\u652f\u6301MAC\u5730\u5740\u7684\u4fee\u6539\uff0c\u800c\u5b9e\u9645\u4e0a\uff0c\u8bb8\u591a\u8bbe\u5907\u5e76\u4e0d\u63d0\u4f9b\u4fee\u6539MAC\u5730\u5740\u7684\u63a5\u53e3\u3002\\r\\n\\r\\nnetif_running\uff08\uff09\u5b8f\u7684\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstatic inline bool netif_running(const struct net_device *dev)\\r\\n{\\r\\n        return test_bit(__LINK_STATE_START, &dev->state);\\r\\n}\\r\\n```\\r\\n\\r\\n\u5f53\u7528\u6237\u8c03\u7528ioctl\uff08\uff09\u51fd\u6570\u65f6\uff0c\u82e5\u547d\u4ee4\u4e3aSIOCSIFMAP\uff08\u5982\u5728\u63a7\u5236\u53f0\u4e2d\u8fd0\u884c\u7f51\u7edc\u914d\u7f6e\u547d\u4ee4ifconfig\u5c31\u4f1a\u5f15\u53d1\u8fd9\u4e00\u8c03\u7528\uff09\uff0c\u7cfb\u7edf\u4f1a\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u7684set_config\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n\u7cfb\u7edf\u4f1a\u5411set_config\uff08\uff09\u51fd\u6570\u4f20\u9012\u4e00\u4e2aifmap\u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u4e3b\u8981\u5305\u542b\u7528\u6237\u6b32\u8bbe\u7f6e\u7684\u8bbe\u5907\u8981\u4f7f\u7528\u7684I/O\u5730\u5740\u3001\u4e2d\u65ad\u7b49\u4fe1\u606f\u3002\u6ce8\u610f\uff0c\u5e76\u4e0d\u662fifmap\u7ed3\u6784\u4f53\u4e2d\u7ed9\u51fa\u7684\u6240\u6709\u4fee\u6539\u90fd\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u5927\u591a\u6570\u8bbe\u5907\u5e76\u4e0d\u9002\u5408\u5305\u542bset_config\uff08\uff09\u51fd\u6570\u3002set_config\uff08\uff09\u51fd\u6570\u7684\u4f8b\u5b50\u5982\u4ee3\u7801\u6e05\u535514.15\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.15\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684set_config\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static int xxx_config(struct net_device *dev, struct ifmap *map)\\r\\n 2{\\r\\n 3  if (netif_running(dev))   /* \u4e0d\u80fd\u8bbe\u7f6e\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u72b6\u6001\u7684\u8bbe\u5907*/\\r\\n 4    return  - EBUSY;\\r\\n 5\\r\\n 6  /* \u5047\u8bbe\u4e0d\u5141\u8bb8\u6539\u53d8I/O \u5730\u5740*/\\r\\n 7  if (map->base_addr != dev->base_addr) {\\r\\n 8    printk(KERN_WARNING \\"xxx: Can\'t change I/O address\\\\n\\");\\r\\n 9    return  - EOPNOTSUPP;\\r\\n10  }\\r\\n11\\r\\n12  /* \u5047\u8bbe\u5141\u8bb8\u6539\u53d8IRQ */\\r\\n13  if (map->irq != dev->irq)\\r\\n14    dev->irq = map->irq;\\r\\n15\\r\\n16  return 0;\\r\\n17}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684set_config\uff08\uff09\u51fd\u6570\u63a5\u53d7IRQ\u7684\u4fee\u6539\uff0c\u62d2\u7edd\u8bbe\u5907I/O\u5730\u5740\u7684\u4fee\u6539\u3002\u5177\u4f53\u7684\u8bbe\u5907\u662f\u5426\u63a5\u53d7\u8fd9\u4e9b\u4fe1\u606f\u7684\u4fee\u6539\uff0c\u8981\u89c6\u786c\u4ef6\u7684\u8bbe\u8ba1\u800c\u5b9a\u3002\\r\\n\\r\\n\u5982\u679c\u7528\u6237\u8c03\u7528ioctl\uff08\uff09\u65f6\uff0c\u547d\u4ee4\u7c7b\u578b\u5728SIOCDEVPRIVATE\u548cSIOCDEVPRIVATE+15\u4e4b\u95f4\uff0c\u7cfb\u7edf\u4f1a\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u7684do_ioctl\uff08\uff09\u51fd\u6570\uff0c\u4ee5\u8fdb\u884c\u8bbe\u5907\u4e13\u7528\u6570\u636e\u7684\u8bbe\u7f6e\u3002\u8fd9\u4e2a\u8bbe\u7f6e\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4e5f\u5e76\u4e0d\u9700\u8981\u3002\\r\\n\\r\\n\u9a71\u52a8\u7a0b\u5e8f\u8fd8\u5e94\u63d0\u4f9bget_stats\uff08\uff09\u51fd\u6570\u4ee5\u5411\u7528\u6237\u53cd\u9988\u8bbe\u5907\u72b6\u6001\u548c\u7edf\u8ba1\u4fe1\u606f\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u7684\u662f\u4e00\u4e2anet_device_stats\u7ed3\u6784\u4f53\uff0c\u5982\u4ee3\u7801\u6e05\u535514.16\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.16\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684get_stats\uff08\uff09\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n1struct net_device_stats *xxx_stats(struct net_device *dev)\\r\\n2{\\r\\n3  \u2026\\r\\n4  return  &dev->stats;\\r\\n5}\\r\\n```\\r\\n\\r\\n\u6709\u7684\u7f51\u5361\u786c\u4ef6\u6bd4\u8f83\u5f3a\u5927\uff0c\u53ef\u4ee5\u4ece\u786c\u4ef6\u7684\u5bc4\u5b58\u5668\u4e2d\u8bfb\u51fa\u4e00\u4e9b\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982rx_missed_errors\u3001tx_aborted_errors\u3001rx_dropped\u3001rx_length_errors\u7b49\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5e94\u8be5\u4ece\u786c\u4ef6\u5bc4\u5b58\u5668\u8bfb\u53d6\u7edf\u8ba1\u4fe1\u606f\uff0c\u586b\u5145\u5230net_device\u7684stats\u5b57\u6bb5\u4e2d\uff0c\u5e76\u8fd4\u56de\u3002\u5177\u4f53\u4f8b\u5b50\u53ef\u89c1drivers/net/ethernet/adaptec/starfire.c\u4e2d\u7684get_stats\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\nnet_device_stats\u7ed3\u6784\u4f53\u5b9a\u4e49\u5728\u5185\u6838\u7684include/linux/netdevice.h\u6587\u4ef6\u4e2d\uff0c\u5b83\u5305\u542b\u4e86\u6bd4\u8f83\u5b8c\u6574\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5982\u4ee3\u7801\u6e05\u535514.17\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.17\u3000net_device_stats\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct net_device_stats\\r\\n 2{\\r\\n 3  unsigned long rx_packets;      /* \u6536\u5230\u7684\u6570\u636e\u5305\u6570*/\\r\\n 4  unsigned long tx_packets;      /* \u53d1\u9001\u7684\u6570\u636e\u5305\u6570*/\\r\\n 5  unsigned long rx_bytes;        /* \u6536\u5230\u7684\u5b57\u8282\u6570*/\\r\\n 6  unsigned long tx_bytes;        /* \u53d1\u9001\u7684\u5b57\u8282\u6570*/\\r\\n 7  unsigned long rx_errors;       /* \u6536\u5230\u7684\u9519\u8bef\u6570\u636e\u5305\u6570*/\\r\\n 8  unsigned long tx_errors;       /* \u53d1\u751f\u53d1\u9001\u9519\u8bef\u7684\u6570\u636e\u5305\u6570*/\\r\\n 9  ...\\r\\n10};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u6e05\u5355\u53ea\u662f\u5217\u51fa\u4e86net_device_stats\u5305\u542b\u7684\u4e3b\u9879\u76ee\u7edf\u8ba1\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u9879\u76ee\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7ec6\u5206\uff0cnet_device_stats\u4e2d\u7684\u5176\u4ed6\u4fe1\u606f\u7ed9\u51fa\u4e86\u66f4\u8be6\u7ec6\u7684\u5b50\u9879\u76ee\u7edf\u8ba1\uff0c\u8be6\u89c1Linux\u6e90\u4ee3\u7801\u3002\\r\\n\\r\\nnet_device_stats\u7ed3\u6784\u4f53\u5df2\u7ecf\u5185\u5d4c\u5728\u4e0e\u7f51\u7edc\u8bbe\u5907\u5bf9\u5e94\u7684net_device\u7ed3\u6784\u4f53\u4e2d\uff0c\u800c\u5176\u4e2d\u7edf\u8ba1\u4fe1\u606f\u7684\u4fee\u6539\u5219\u5e94\u8be5\u5728\u8bbe\u5907\u9a71\u52a8\u7684\u4e0e\u53d1\u9001\u548c\u63a5\u6536\u76f8\u5173\u7684\u5177\u4f53\u51fd\u6570\u4e2d\u5b8c\u6210\uff0c\u8fd9\u4e9b\u51fd\u6570\u5305\u62ec\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3001\u6570\u636e\u5305\u53d1\u9001\u51fd\u6570\u3001\u6570\u636e\u5305\u53d1\u9001\u8d85\u65f6\u51fd\u6570\u548c\u6570\u636e\u5305\u63a5\u6536\u76f8\u5173\u51fd\u6570\u7b49\u3002\u6211\u4eec\u5e94\u8be5\u5728\u8fd9\u4e9b\u51fd\u6570\u4e2d\u6dfb\u52a0\u76f8\u5e94\u7684\u4ee3\u7801\uff0c\u5982\u4ee3\u7801\u6e05\u535514.18\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.18\u3000net_device_stats\u7ed3\u6784\u4f53\u4e2d\u7edf\u8ba1\u4fe1\u606f\u7684\u7ef4\u62a4\\r\\n\\r\\n```\\r\\n 1/* \u53d1\u9001\u8d85\u65f6\u51fd\u6570*/\\r\\n 2void xxx_tx_timeout(struct net_device *dev)\\r\\n 3{\\r\\n 4  ...\\r\\n 5  dev->stats.tx_errors++;        /* \u53d1\u9001\u9519\u8bef\u5305\u6570\u52a01 */\\r\\n 6  ...\\r\\n 7}\\r\\n 8\\r\\n 9/* \u4e2d\u65ad\u5904\u7406\u51fd\u6570*/\\r\\n10static void xxx_interrupt(int irq, void *dev_id)\\r\\n11{\\r\\n12  struct net_device *dev = dev_id;\\r\\n13  switch (status &ISQ_EVENT_MASK) {\\r\\n14  ...\\r\\n15  case ISQ_TRANSMITTER_EVENT:       /\\r\\n16      dev->stats.tx_packets++;      /* \u6570\u636e\u5305\u53d1\u9001\u6210\u529f\uff0ctx_packets\u4fe1\u606f\u52a01 */\\r\\n17      netif_wake_queue(dev);        /* \u901a\u77e5\u4e0a\u5c42\u534f\u8bae*/\\r\\n18      if ((status &(TX_OK | TX_LOST_CRS | TX_SQE_ERROR |\\r\\n19      TX_LATE_COL | TX_16_COL)) != TX_OK) { /* \u8bfb\u53d6\u786c\u4ef6\u4e0a\u7684\u51fa\u9519\u6807\u5fd7*/\\r\\n20        /* \u6839\u636e\u9519\u8bef\u7684\u4e0d\u540c\u60c5\u51b5\uff0c\u5bf9net_device_stats\u7684\u4e0d\u540c\u6210\u5458\u52a01 */\\r\\n21        if ((status &TX_OK) == 0)\\r\\n22          dev->stats.tx_errors++;\\r\\n23        if (status &TX_LOST_CRS)\\r\\n24          dev->stats.tx_carrier_errors++;\\r\\n25        if (status &TX_SQE_ERROR)\\r\\n26          dev->stats.tx_heartbeat_errors++;\\r\\n27        if (status &TX_LATE_COL)\\r\\n28          dev->stats.tx_window_errors++;\\r\\n29        if (status &TX_16_COL)\\r\\n30          dev->stats.tx_aborted_errors++;\\r\\n31      }\\r\\n32      break;\\r\\n33  case ISQ_RX_MISS_EVENT:\\r\\n34      dev->stats.rx_missed_errors += (status >> 6);\\r\\n35      break;\\r\\n36  case ISQ_TX_COL_EVENT:\\r\\n37      dev->stats.collisions += (status >> 6);\\r\\n38      break;\\r\\n39  }\\r\\n40}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528.md","title":"1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528","description":"\u4efb\u4f55\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u8fd0\u8f6c\u90fd\u662f\u7cfb\u7edf\u4e2d\u8f6f\u786c\u4ef6\u5171\u540c\u52aa\u529b\u7684\u7ed3\u679c\uff0c\u6ca1\u6709\u786c\u4ef6\u7684\u8f6f\u4ef6\u662f\u7a7a\u4e2d\u697c\u9601\uff0c\u800c\u6ca1\u6709\u8f6f\u4ef6\u7684\u786c\u4ef6\u5219\u53ea\u662f\u4e00\u5806\u5e9f\u94c1\u3002\u786c\u4ef6\u662f\u5e95\u5c42\u57fa\u7840\uff0c\u662f\u6240\u6709\u8f6f\u4ef6\u5f97\u4ee5\u8fd0\u884c\u7684\u5e73\u53f0\uff0c\u4ee3\u7801\u6700\u7ec8\u4f1a\u843d\u5b9e\u4e3a\u786c\u4ef6\u4e0a\u7684\u7ec4\u5408\u903b\u8f91\u4e0e\u65f6\u5e8f\u903b\u8f91\uff1b\u8f6f\u4ef6\u5219\u5b9e\u73b0\u4e86\u5177\u4f53\u5e94\u7528\uff0c\u5b83\u6309\u7167\u5404\u79cd\u4e0d\u540c\u7684\u4e1a\u52a1\u9700\u6c42\u800c\u8bbe\u8ba1\uff0c\u5e76\u5b8c\u6210\u7528\u6237\u7684\u6700\u7ec8\u8bc9\u6c42\u3002\u786c\u4ef6\u8f83\u56fa\u5b9a\uff0c\u8f6f\u4ef6\u5219\u5f88\u7075\u6d3b\uff0c\u53ef\u4ee5\u9002\u5e94\u5404\u79cd\u590d\u6742\u591a\u53d8\u7684\u5e94\u7528\u3002\u56e0\u6b64\uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u8f6f\u786c\u4ef6\u76f8\u4e92\u6210\u5c31\u4e86\u5bf9\u65b9\u3002","date":"2025-09-15T14:44:14.641Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.35,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.8\u3000\u53c2\u6570\u8bbe\u7f6e\u548c\u7edf\u8ba1\u6570\u636e"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3"}},"content":"\u4efb\u4f55\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u8fd0\u8f6c\u90fd\u662f\u7cfb\u7edf\u4e2d\u8f6f\u786c\u4ef6\u5171\u540c\u52aa\u529b\u7684\u7ed3\u679c\uff0c\u6ca1\u6709\u786c\u4ef6\u7684\u8f6f\u4ef6\u662f\u7a7a\u4e2d\u697c\u9601\uff0c\u800c\u6ca1\u6709\u8f6f\u4ef6\u7684\u786c\u4ef6\u5219\u53ea\u662f\u4e00\u5806\u5e9f\u94c1\u3002\u786c\u4ef6\u662f\u5e95\u5c42\u57fa\u7840\uff0c\u662f\u6240\u6709\u8f6f\u4ef6\u5f97\u4ee5\u8fd0\u884c\u7684\u5e73\u53f0\uff0c\u4ee3\u7801\u6700\u7ec8\u4f1a\u843d\u5b9e\u4e3a\u786c\u4ef6\u4e0a\u7684\u7ec4\u5408\u903b\u8f91\u4e0e\u65f6\u5e8f\u903b\u8f91\uff1b\u8f6f\u4ef6\u5219\u5b9e\u73b0\u4e86\u5177\u4f53\u5e94\u7528\uff0c\u5b83\u6309\u7167\u5404\u79cd\u4e0d\u540c\u7684\u4e1a\u52a1\u9700\u6c42\u800c\u8bbe\u8ba1\uff0c\u5e76\u5b8c\u6210\u7528\u6237\u7684\u6700\u7ec8\u8bc9\u6c42\u3002\u786c\u4ef6\u8f83\u56fa\u5b9a\uff0c\u8f6f\u4ef6\u5219\u5f88\u7075\u6d3b\uff0c\u53ef\u4ee5\u9002\u5e94\u5404\u79cd\u590d\u6742\u591a\u53d8\u7684\u5e94\u7528\u3002\u56e0\u6b64\uff0c\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u8f6f\u786c\u4ef6\u76f8\u4e92\u6210\u5c31\u4e86\u5bf9\u65b9\u3002\\r\\n\\r\\n\u4f46\u662f\uff0c\u8f6f\u786c\u4ef6\u4e4b\u95f4\u540c\u6837\u5b58\u5728\u7740\u6096\u8bba\uff0c\u90a3\u5c31\u662f\u8f6f\u4ef6\u548c\u786c\u4ef6\u4e0d\u5e94\u8be5\u4e92\u76f8\u6e17\u900f\u5165\u5bf9\u65b9\u7684\u9886\u5730\u3002\u4e3a\u5c3d\u53ef\u80fd\u5feb\u901f\u5730\u5b8c\u6210\u8bbe\u8ba1\uff0c\u5e94\u7528\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u4e0d\u60f3\u4e5f\u4e0d\u5fc5\u5173\u5fc3\u786c\u4ef6\uff0c\u800c\u786c\u4ef6\u5de5\u7a0b\u5e08\u4e5f\u96be\u6709\u8db3\u591f\u7684\u95f2\u6687\u548c\u80fd\u529b\u6765\u987e\u53ca\u8f6f\u4ef6\u3002\u8b6c\u5982\uff0c\u5e94\u7528\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5728\u8c03\u7528\u5957\u63a5\u5b57\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u5305\u7684\u65f6\u5019\uff0c\u4e0d\u5fc5\u5173\u5fc3\u7f51\u5361\u4e0a\u7684\u4e2d\u65ad\u3001\u5bc4\u5b58\u5668\u3001\u5b58\u50a8\u7a7a\u95f4\u3001I/O\u7aef\u53e3\u3001\u7247\u9009\u4ee5\u53ca\u5176\u4ed6\u4efb\u4f55\u786c\u4ef6\u8bcd\u6c47\uff1b\u5728\u4f7f\u7528printf\uff08\uff09\u51fd\u6570\u8f93\u51fa\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u4ed6\u4e0d\u7528\u77e5\u9053\u5e95\u5c42\u7a76\u7adf\u662f\u600e\u6837\u628a\u76f8\u5e94\u7684\u4fe1\u606f\u8f93\u51fa\u5230\u5c4f\u5e55\u6216\u8005\u4e32\u53e3\u3002\\r\\n\\r\\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5e94\u7528\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u9700\u8981\u770b\u5230\u4e00\u4e2a\u6ca1\u6709\u786c\u4ef6\u7684\u7eaf\u7cb9\u7684\u8f6f\u4ef6\u4e16\u754c\uff0c\u786c\u4ef6\u5fc5\u987b\u900f\u660e\u5730\u5448\u73b0\u7ed9\u4ed6\u3002\u8c01\u6765\u5b9e\u73b0\u786c\u4ef6\u5bf9\u5e94\u7528\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u7684\u9690\u5f62\uff1f\u8fd9\u4e2a\u5149\u8363\u800c\u8270\u5de8\u7684\u4efb\u52a1\u5c31\u843d\u5728\u4e86\u9a71\u52a8\u5de5\u7a0b\u5e08\u7684\u5934\u4e0a\u3002\\r\\n\\r\\n\u5bf9\u8bbe\u5907\u9a71\u52a8\u6700\u901a\u4fd7\u7684\u89e3\u91ca\u5c31\u662f\u201c\u9a71\u4f7f\u786c\u4ef6\u8bbe\u5907\u884c\u52a8\u201d\u3002\u9a71\u52a8\u4e0e\u5e95\u5c42\u786c\u4ef6\u76f4\u63a5\u6253\u4ea4\u9053\uff0c\u6309\u7167\u786c\u4ef6\u8bbe\u5907\u7684\u5177\u4f53\u5de5\u4f5c\u65b9\u5f0f\uff0c\u8bfb\u5199\u8bbe\u5907\u7684\u5bc4\u5b58\u5668\uff0c\u5b8c\u6210\u8bbe\u5907\u7684\u8f6e\u8be2\u3001\u4e2d\u65ad\u5904\u7406\u3001DMA\u901a\u4fe1\uff0c\u8fdb\u884c\u7269\u7406\u5185\u5b58\u5411\u865a\u62df\u5185\u5b58\u7684\u6620\u5c04\u7b49\uff0c\u6700\u7ec8\u8ba9\u901a\u4fe1\u8bbe\u5907\u80fd\u6536\u53d1\u6570\u636e\uff0c\u8ba9\u663e\u793a\u8bbe\u5907\u80fd\u663e\u793a\u6587\u5b57\u548c\u753b\u9762\uff0c\u8ba9\u5b58\u50a8\u8bbe\u5907\u80fd\u8bb0\u5f55\u6587\u4ef6\u548c\u6570\u636e\u3002\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0c\u8bbe\u5907\u9a71\u52a8\u5145\u5f53\u4e86\u786c\u4ef6\u548c\u5e94\u7528\u8f6f\u4ef6\u4e4b\u95f4\u7684\u7ebd\u5e26\uff0c\u5e94\u7528\u8f6f\u4ef6\u65f6\u53ea\u9700\u8981\u8c03\u7528\u7cfb\u7edf\u8f6f\u4ef6\u7684\u5e94\u7528\u7f16\u7a0b\u63a5\u53e3\uff08API\uff09\u5c31\u53ef\u8ba9\u786c\u4ef6\u53bb\u5b8c\u6210\u8981\u6c42\u7684\u5de5\u4f5c\u3002\u5728\u7cfb\u7edf\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\u7684\u60c5\u51b5\u4e0b\uff0c\u5de5\u7a0b\u5e08\u53ef\u4ee5\u6839\u636e\u786c\u4ef6\u8bbe\u5907\u7684\u7279\u70b9\u81ea\u884c\u5b9a\u4e49\u63a5\u53e3\uff0c\u5982\u5bf9\u4e32\u53e3\u5b9a\u4e49SerialSend\uff08\uff09\u3001SerialRecv\uff08\uff09\uff0c\u5bf9LED\u5b9a\u4e49LightOn\uff08\uff09\u3001LightOff\uff08\uff09\uff0c\u5bf9Flash\u5b9a\u4e49FlashWr\uff08\uff09\u3001FlashRd\uff08\uff09\u7b49\u3002\u800c\u5728\u6709\u64cd\u4f5c\u7cfb\u7edf\u7684\u60c5\u51b5\u4e0b\uff0c\u9a71\u52a8\u7684\u67b6\u6784\u5219\u7531\u76f8\u5e94\u7684\u64cd\u4f5c\u7cfb\u7edf\u5b9a\u4e49\uff0c\u9a71\u52a8\u5de5\u7a0b\u5e08\u5fc5\u987b\u6309\u7167\u76f8\u5e94\u7684\u67b6\u6784\u8bbe\u8ba1\u9a71\u52a8\uff0c\u8fd9\u6837\uff0c\u9a71\u52a8\u624d\u80fd\u826f\u597d\u5730\u6574\u5408\u5165\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u6838\u4e2d\u3002\\r\\n\\r\\n\u52a8\u7a0b\u5e8f\u8d1f\u8d23\u786c\u4ef6\u548c\u5e94\u7528\u8f6f\u4ef6\u4e4b\u95f4\u7684\u6c9f\u901a\uff0c\u800c\u9a71\u52a8\u5de5\u7a0b\u5e08\u5219\u8d1f\u8d23\u786c\u4ef6\u5de5\u7a0b\u5e08\u548c\u5e94\u7528\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u4e4b\u95f4\u7684\u6c9f\u901a\u3002\u76ee\u524d\uff0c\u968f\u7740\u901a\u4fe1\u3001\u7535\u5b50\u884c\u4e1a\u7684\u8fc5\u901f\u53d1\u5c55\uff0c\u5168\u4e16\u754c\u6bcf\u5929\u90fd\u4f1a\u751f\u4ea7\u5927\u91cf\u65b0\u82af\u7247\uff0c\u8bbe\u8ba1\u5927\u91cf\u65b0\u7535\u8def\u677f\uff0c\u4e5f\u56e0\u6b64\uff0c\u4f1a\u6709\u5927\u91cf\u8bbe\u5907\u9a71\u52a8\u9700\u8981\u5f00\u53d1\u3002\u8fd9\u4e9b\u9a71\u52a8\u6216\u8fd0\u884c\u5728\u7b80\u5355\u7684\u5355\u4efb\u52a1\u73af\u5883\u4e2d\uff0c\u6216\u8fd0\u884c\u5728VxWorks\u3001Linux\u3001Windows\u7b49\u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf\u73af\u5883\u4e2d\uff0c\u5b83\u4eec\u53d1\u6325\u7740\u4e0d\u53ef\u66ff\u4ee3\u7684\u4f5c\u7528\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3","description":"I2 C\u6838\u5fc3\uff08drivers/i2c/i2c-core.c\uff09\u4e2d\u63d0\u4f9b\u4e86\u4e00\u7ec4\u4e0d\u4f9d\u8d56\u4e8e\u786c\u4ef6\u5e73\u53f0\u7684\u63a5\u53e3\u51fd\u6570\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4e00\u822c\u4e0d\u9700\u8981\u88ab\u5de5\u7a0b\u5e08\u4fee\u6539\uff0c\u4f46\u662f\u7406\u89e3\u5176\u4e2d\u7684\u4e3b\u8981\u51fd\u6570\u975e\u5e38\u5173\u952e\uff0c\u56e0\u4e3aI2 C\u603b\u7ebf\u9a71\u52a8\u548c\u8bbe\u5907\u9a71\u52a8\u4e4b\u95f4\u4ee5I2 C\u6838\u5fc3\u4f5c\u4e3a\u7ebd\u5e26\u3002I2 C\u6838\u5fc3\u4e2d\u7684\u4e3b\u8981\u51fd\u6570\u5982\u4e0b\u3002","date":"2025-09-15T14:44:14.641Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.135,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.1\u3000\u8bbe\u5907\u9a71\u52a8\u7684\u4f5c\u7528"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb"}},"content":"I2 C\u6838\u5fc3\uff08drivers/i2c/i2c-core.c\uff09\u4e2d\u63d0\u4f9b\u4e86\u4e00\u7ec4\u4e0d\u4f9d\u8d56\u4e8e\u786c\u4ef6\u5e73\u53f0\u7684\u63a5\u53e3\u51fd\u6570\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4e00\u822c\u4e0d\u9700\u8981\u88ab\u5de5\u7a0b\u5e08\u4fee\u6539\uff0c\u4f46\u662f\u7406\u89e3\u5176\u4e2d\u7684\u4e3b\u8981\u51fd\u6570\u975e\u5e38\u5173\u952e\uff0c\u56e0\u4e3aI2 C\u603b\u7ebf\u9a71\u52a8\u548c\u8bbe\u5907\u9a71\u52a8\u4e4b\u95f4\u4ee5I2 C\u6838\u5fc3\u4f5c\u4e3a\u7ebd\u5e26\u3002I2 C\u6838\u5fc3\u4e2d\u7684\u4e3b\u8981\u51fd\u6570\u5982\u4e0b\u3002\\r\\n\\r\\n\uff081\uff09\u589e\u52a0/\u5220\u9664i2c_adapter\\r\\n\\r\\n```\\r\\nint i2c_add_adapter(struct i2c_adapter *adap);\\r\\nvoid i2c_del_adapter(struct i2c_adapter *adap);\\r\\n```\\r\\n\\r\\n\uff082\uff09\u589e\u52a0/\u5220\u9664i2c_driver\\r\\n\\r\\n```\\r\\nint i2c_register_driver(struct module *owner, struct i2c_driver *driver);\\r\\nvoid i2c_del_driver(struct i2c_driver *driver);\\r\\n#define i2c_add_driver(driver) \\\\\\r\\n        i2c_register_driver(THIS_MODULE, driver)\\r\\n```\\r\\n\\r\\n\uff083\uff09I2 C\u4f20\u8f93\u3001\u53d1\u9001\u548c\u63a5\u6536\\r\\n\\r\\n```\\r\\nint i2c_transfer(struct i2c_adapter * adap, struct i2c_msg *msgs, int num);\\r\\nint i2c_master_send(struct i2c_client *client,const char *buf ,int count);\\r\\nint i2c_master_recv(struct i2c_client *client, char *buf ,int count);\\r\\n```\\r\\n\\r\\ni2c_transfer\uff08\uff09\u51fd\u6570\u7528\u4e8e\u8fdb\u884cI2 C\u9002\u914d\u5668\u548cI2 C\u8bbe\u5907\u4e4b\u95f4\u7684\u4e00\u7ec4\u6d88\u606f\u4ea4\u4e92\uff0c\u5176\u4e2d\u7b2c2\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411i2c_msg\u6570\u7ec4\u7684\u6307\u9488\uff0c\u6240\u4ee5i2c_transfer\uff08\uff09\u4e00\u6b21\u53ef\u4ee5\u4f20\u8f93\u591a\u4e2ai2c_msg\uff08\u8003\u8651\u5230\u5f88\u591a\u5916\u8bbe\u7684\u8bfb\u5199\u6ce2\u5f62\u6bd4\u8f83\u590d\u6742\uff0c\u6bd4\u5982\u8bfb\u5bc4\u5b58\u5668\u53ef\u80fd\u8981\u5148\u5199\uff0c\u6240\u4ee5\u9700\u8981\u4e24\u4e2a\u4ee5\u4e0a\u7684\u6d88\u606f\uff09\u3002\u800c\u5bf9\u4e8e\u65f6\u5e8f\u6bd4\u8f83\u7b80\u5355\u7684\u5916\u8bbe\uff0ci2c_master_send\uff08\uff09\u51fd\u6570\u548ci2c_master_recv\uff08\uff09\u51fd\u6570\u5185\u90e8\u4f1a\u8c03\u7528i2c_transfer\uff08\uff09\u51fd\u6570\u5206\u522b\u5b8c\u6210\u4e00\u6761\u5199\u6d88\u606f\u548c\u4e00\u6761\u8bfb\u6d88\u606f\uff0c\u5982\u4ee3\u7801\u6e05\u535515.6\u300115.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.6\u3000I2 C\u6838\u5fc3\u7684i2c_master_send\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1int i2c_master_send(const struct i2c_client *client, const char *buf, int count)\\r\\n 2{\\r\\n 3         int ret;\\r\\n 4         struct i2c_adapter *adap = client->adapter;\\r\\n 5         struct i2c_msg msg;\\r\\n 6\\r\\n 7         msg.addr = client->addr;\\r\\n 8         msg.flags = client->flags & I2C_M_TEN;\\r\\n 9         msg.len = count;\\r\\n10         msg.buf = (char *)buf;\\r\\n11\\r\\n12         ret = i2c_transfer(adap, &msg, 1);\\r\\n13\\r\\n14         /*\\r\\n15          * If everything went ok (i.e. 1 msg transmitted), return #bytes\\r\\n16          * transmitted, else error code.\\r\\n17          */\\r\\n18         return (ret == 1)   count : ret;\\r\\n19}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.7\u3000I2 C\u6838\u5fc3\u7684i2c_master_recv\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1int i2c_master_recv(const struct i2c_client *client, char *buf, int count)\\r\\n 2{\\r\\n 3         struct i2c_adapter *adap = client->adapter;\\r\\n 4         struct i2c_msg msg;\\r\\n 5         int ret;\\r\\n 6\\r\\n 7         msg.addr = client->addr;\\r\\n 8         msg.flags = client->flags & I2C_M_TEN;\\r\\n 9         msg.flags |= I2C_M_RD;\\r\\n10         msg.len = count;\\r\\n11         msg.buf = buf;\\r\\n12\\r\\n13         ret = i2c_transfer(adap, &msg, 1);\\r\\n14\\r\\n15         /*\\r\\n16          * If everything went ok (i.e. 1 msg received), return #bytes received,\\r\\n17          * else error code.\\r\\n18          */\\r\\n19         return (ret == 1)   count : ret;\\r\\n20}\\r\\n```\\r\\n\\r\\ni2c_transfer\uff08\uff09\u51fd\u6570\u672c\u8eab\u4e0d\u5177\u5907\u9a71\u52a8\u9002\u914d\u5668\u7269\u7406\u786c\u4ef6\u4ee5\u5b8c\u6210\u6d88\u606f\u4ea4\u4e92\u7684\u80fd\u529b\uff0c\u5b83\u53ea\u662f\u5bfb\u627e\u5230\u4e0ei2c_adapter\u5bf9\u5e94\u7684i2c_algorithm\uff0c\u5e76\u4f7f\u7528i2c_algorithm\u7684master_xfer\uff08\uff09\u51fd\u6570\u771f\u6b63\u9a71\u52a8\u786c\u4ef6\u6d41\u7a0b\uff0c\u5982\u4ee3\u7801\u6e05\u535515.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.8\u3000I2 C\u6838\u5fc3\u7684i2c_transfer\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1int i2c_transfer(struct i2c_adapter * adap, struct i2c_msg *msgs, int num)\\r\\n 2{\\r\\n 3   int ret;\\r\\n 4\\r\\n 5   if (adap->algo->master_xfer) {\\r\\n 6       ...\\r\\n 7       ret = adap->algo->master_xfer(adap,msgs,num);\\r\\n 8       ...\\r\\n 9       return ret;\\r\\n10   } else {\\r\\n11       dev_dbg(&adap->dev, \\"I2C level transfers not supported\\\\n\\");\\r\\n12       return -ENOSYS;\\r\\n13   }\\r\\n14}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb","description":"Linux\u5185\u6838\u7684\u6574\u4f53\u67b6\u6784\u672c\u5c31\u975e\u5e38\u5e9e\u5927\uff0c\u5176\u5305\u542b\u7684\u7ec4\u4ef6\u4e5f\u975e\u5e38\u591a\u3002\u800c\u6211\u4eec\u600e\u6837\u628a\u9700\u8981\u7684\u90e8\u5206\u90fd\u5305\u542b\u5728\u5185\u6838\u4e2d\u5462\uff1f","date":"2025-09-15T14:44:14.633Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":7.225,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.2\u3000Linux I2 C\u6838\u5fc3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09"}},"content":"Linux\u5185\u6838\u7684\u6574\u4f53\u67b6\u6784\u672c\u5c31\u975e\u5e38\u5e9e\u5927\uff0c\u5176\u5305\u542b\u7684\u7ec4\u4ef6\u4e5f\u975e\u5e38\u591a\u3002\u800c\u6211\u4eec\u600e\u6837\u628a\u9700\u8981\u7684\u90e8\u5206\u90fd\u5305\u542b\u5728\u5185\u6838\u4e2d\u5462\uff1f\\r\\n\\r\\n\u4e00\u79cd\u65b9\u6cd5\u662f\u628a\u6240\u6709\u9700\u8981\u7684\u529f\u80fd\u90fd\u7f16\u8bd1\u5230Linux\u5185\u6838\u4e2d\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4e24\u4e2a\u95ee\u9898\uff0c\u4e00\u662f\u751f\u6210\u7684\u5185\u6838\u4f1a\u5f88\u5927\uff0c\u4e8c\u662f\u5982\u679c\u6211\u4eec\u8981\u5728\u73b0\u6709\u7684\u5185\u6838\u4e2d\u65b0\u589e\u6216\u5220\u9664\u529f\u80fd\uff0c\u5c06\u4e0d\u5f97\u4e0d\u91cd\u65b0\u7f16\u8bd1\u5185\u6838\u3002\\r\\n\\r\\n\u6709\u6ca1\u6709\u53e6\u4e00\u79cd\u673a\u5236\u53ef\u4f7f\u5f97\u7f16\u8bd1\u51fa\u7684\u5185\u6838\u672c\u8eab\u5e76\u4e0d\u9700\u8981\u5305\u542b\u6240\u6709\u529f\u80fd\uff0c\u800c\u5728\u8fd9\u4e9b\u529f\u80fd\u9700\u8981\u88ab\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5176\u5bf9\u5e94\u7684\u4ee3\u7801\u88ab\u52a8\u6001\u5730\u52a0\u8f7d\u5230\u5185\u6838\u4e2d\u5462\uff1f\\r\\n\\r\\nLinux\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u673a\u5236\uff0c\u8fd9\u79cd\u673a\u5236\u88ab\u79f0\u4e3a\u6a21\u5757\uff08Module\uff09\u3002\u6a21\u5757\u5177\u6709\u8fd9\u6837\u7684\u7279\u70b9\u3002\xb7\\r\\n\\r\\n\u6a21\u5757\u672c\u8eab\u4e0d\u88ab\u7f16\u8bd1\u5165\u5185\u6838\u6620\u50cf\uff0c\u4ece\u800c\u63a7\u5236\u4e86\u5185\u6838\u7684\u5927\u5c0f\u3002\xb7\\r\\n\\r\\n\u6a21\u5757\u4e00\u65e6\u88ab\u52a0\u8f7d\uff0c\u5b83\u5c31\u548c\u5185\u6838\u4e2d\u7684\u5176\u4ed6\u90e8\u5206\u5b8c\u5168\u4e00\u6837\u3002\\r\\n\\r\\n\u4e3a\u4e86\u4f7f\u8bfb\u8005\u521d\u6b65\u5efa\u7acb\u5bf9\u6a21\u5757\u7684\u611f\u6027\u8ba4\u8bc6\uff0c\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u201cHello World\u201d\uff0c\u5982\u4ee3\u7801\u6e05\u53554.1\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53554.1\u3000\u4e00\u4e2a\u6700\u7b80\u5355\u7684Linux\u5185\u6838\u6a21\u5757\\r\\n\\r\\n```\\r\\n 1/*\\r\\n 2 * a simple kernel module: hello\\r\\n 3 *\\r\\n 4 * Copyright (C) 2014 Barry Song  (baohua@kernel.org)\\r\\n 5 *\\r\\n 6 * Licensed under GPLv2 or later.\\r\\n 7 */\\r\\n 8\\r\\n 9#include <linux/init.h>\\r\\n10#include <linux/module.h>\\r\\n11\\r\\n12static int __init hello_init(void)\\r\\n13{\\r\\n14  printk(KERN_INFO \\"Hello World enter\\\\n\\");\\r\\n15  return 0;\\r\\n16}\\r\\n17module_init(hello_init);\\r\\n18\\r\\n19static void __exit hello_exit(void)\\r\\n20{\\r\\n21  printk(KERN_INFO \\"Hello World exit\\\\n \\");\\r\\n22}\\r\\n23module_exit(hello_exit);\\r\\n24\\r\\n25MODULE_AUTHOR(\\"Barry Song <21cnbao@gmail.com>\\");\\r\\n26MODULE_LICENSE(\\"GPL v2\\");\\r\\n27MODULE_DESCRIPTION(\\"A simple Hello World Module\\");\\r\\n28MODULE_ALIAS(\\"a simplest module\\");\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u6700\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757\u53ea\u5305\u542b\u5185\u6838\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u3001\u5378\u8f7d\u51fd\u6570\u548c\u5bf9GPL v2\u8bb8\u53ef\u6743\u9650\u7684\u58f0\u660e\u4ee5\u53ca\u4e00\u4e9b\u63cf\u8ff0\u4fe1\u606f\uff0c\u4f4d\u4e8e\u672c\u4e66\u914d\u5957Ubuntu\u7684/home/baohua/develop/training/kernel/drivers/hello\u76ee\u5f55\u3002\u7f16\u8bd1\u5b83\u4f1a\u4ea7\u751fhello.ko\u76ee\u6807\u6587\u4ef6\uff0c\u901a\u8fc7\u201cinsmod./hello.ko\u201d\u547d\u4ee4\u53ef\u4ee5\u52a0\u8f7d\u5b83\uff0c\u901a\u8fc7\u201crmmod hello\u201d\u547d\u4ee4\u53ef\u4ee5\u5378\u8f7d\u5b83\uff0c\u52a0\u8f7d\u65f6\u8f93\u51fa\u201cHello World enter\u201d\uff0c\u5378\u8f7d\u65f6\u8f93\u51fa\u201cHello World exit\u201d\u3002\\r\\n\\r\\n\u5185\u6838\u6a21\u5757\u4e2d\u7528\u4e8e\u8f93\u51fa\u7684\u51fd\u6570\u662f\u5185\u6838\u7a7a\u95f4\u7684printk\uff08\uff09\u800c\u4e0d\u662f\u7528\u6237\u7a7a\u95f4\u7684printf\uff08\uff09\uff0cprintk\uff08\uff09\u7684\u7528\u6cd5\u548cprintf\uff08\uff09\u57fa\u672c\u76f8\u4f3c\uff0c\u4f46\u524d\u8005\u53ef\u5b9a\u4e49\u8f93\u51fa\u7ea7\u522b\u3002printk\uff08\uff09\u53ef\u4f5c\u4e3a\u4e00\u79cd\u6700\u57fa\u672c\u7684\u5185\u6838\u8c03\u8bd5\u624b\u6bb5\uff0c\u5728Linux\u9a71\u52a8\u7684\u8c03\u8bd5\u7ae0\u8282\u4e2d\u5c06\u4f1a\u8be6\u7ec6\u8bb2\u89e3\u3002\\r\\n\\r\\n\u5728Linux\u4e2d\uff0c\u4f7f\u7528lsmod\u547d\u4ee4\u53ef\u4ee5\u83b7\u5f97\u7cfb\u7edf\u4e2d\u5df2\u52a0\u8f7d\u7684\u6240\u6709\u6a21\u5757\u4ee5\u53ca\u6a21\u5757\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f8b\u5982\\r\\n\\r\\n```\\r\\nModule                  Size  Used by\\r\\nhello                   9 472  0\\r\\nnls_iso8859_1          12 032  1\\r\\nnls_cp437              13 696  1\\r\\nvfat                   18 816  1\\r\\nfat                    57 376  1 vfat\\r\\n...\\r\\n```\\r\\n\\r\\nlsmod\u547d\u4ee4\u5b9e\u9645\u4e0a\u662f\u8bfb\u53d6\u5e76\u5206\u6790\u201c/proc/modules\u201d\u6587\u4ef6\uff0c\u4e0e\u4e0a\u8ff0lsmod\u547d\u4ee4\u7ed3\u679c\u5bf9\u5e94\u7684\u201c/proc/modules\u201d\u6587\u4ef6\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nvboxvideo 16384 0 - Live 0x00000000 (OE)\\r\\nvboxsf 45056 0 - Live 0x00000000 (OE)\\r\\nxt_addrtype 16384 2 - Live 0x00000000\\r\\nxt_conntrack 16384 1 - Live 0x00000000\\r\\nipt_MASQUERADE 16384 1 - Live 0x00000000\\r\\nnf_nat_masquerade_ipv4 16384 1 ipt_MASQUERADE, Live 0x00000000\\r\\niptable_nat 16384 1 - Live 0x00000000\\r\\nnf_conntrack_ipv4 16384 2 - Live 0x00000000\\r\\nnf_defrag_ipv4 16384 1 nf_conntrack_ipv4, Live 0x00000000\\r\\nnf_nat_ipv4 16384 1 iptable_nat, Live 0x00000000\\r\\niptable_filter 16384 1 - Live 0x00000000\\r\\nip_tables 20480 2 iptable_nat,iptable_filter, Live 0x00000000\\r\\nx_tables 24576 5 xt_addrtype,xt_conntrack,ipt_MASQUERADE,iptable_filter,ip_tables, Live 0x00000000\\r\\nnf_nat 24576 2 nf_nat_masquerade_ipv4,nf_nat_ipv4, Live 0x00000000\\r\\nnf_conntrack 90112 5 xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_ipv4,nf_nat_ipv4,nf_nat, Live 0x00000000\\r\\nbridge 102400 0 - Live 0x00000000\\r\\nstp 16384 1 bridge, Live 0x00000000\\r\\nllc 16384 2 bridge,stp, Live 0x00000000\\r\\ndm_thin_pool 61440 1 - Live 0x00000000\\r\\ndm_persistent_data 61440 1 dm_thin_pool, Live 0x00000000\\r\\ndm_bio_prison 16384 1 dm_thin_pool, Live 0x00000000\\r\\ndm_bufio 28672 1 dm_persistent_data, Live 0x00000000\\r\\nlibcrc32c 16384 1 dm_persistent_data, Live 0x00000000\\r\\nbnep 20480 2 - Live 0x00000000\\r\\nrfcomm 61440 0 - Live 0x00000000\\r\\nbluetooth 450560 10 bnep,rfcomm, Live 0x00000000\\r\\ncrc32_pclmul 16384 0 - Live 0x00000000\\r\\naesni_intel 20480 0 - Live 0x00000000\\r\\naes_i586 20480 1 aesni_intel, Live 0x00000000\\r\\nxts 16384 1 aesni_intel, Live 0x00000000\\r\\nlrw 16384 1 aesni_intel, Live 0x00000000\\r\\ngf128mul 16384 2 xts,lrw, Live 0x00000000\\r\\nsnd_intel8x0 40960 2 - Live 0x00000000\\r\\nablk_helper 16384 1 aesni_intel, Live 0x00000000\\r\\ncryptd 20480 1 ablk_helper, Live 0x00000000\\r\\nsnd_ac97_codec 110592 1 snd_intel8x0, Live 0x00000000\\r\\nnfsd 294912 13 - Live 0x00000000\\r\\nac97_bus 16384 1 snd_ac97_codec, Live 0x00000000\\r\\nsnd_pcm 90112 2 snd_intel8x0,snd_ac97_codec, Live 0x00000000\\r\\nsnd_seq_midi 16384 0 - Live 0x00000000\\r\\nauth_rpcgss 57344 1 nfsd, Live 0x00000000\\r\\nnfs_acl 16384 1 nfsd, Live 0x00000000\\r\\nsnd_seq_midi_event 16384 1 snd_seq_midi, Live 0x00000000\\r\\njoydev 20480 0 - Live 0x00000000\\r\\ndm_multipath 24576 0 - Live 0x00000000\\r\\nserio_raw 16384 0 - Live 0x00000000\\r\\nscsi_dh 16384 1 dm_multipath, Live 0x00000000\\r\\nsnd_rawmidi 28672 1 snd_seq_midi, Live 0x00000000\\r\\nvmwgfx 155648 2 - Live 0x00000000\\r\\nnfs 225280 0 - Live 0x00000000\\r\\nttm 86016 1 vmwgfx, Live 0x00000000\\r\\nsnd_seq 57344 2 snd_seq_midi,snd_seq_midi_event, Live 0x00000000\\r\\ni2c_piix4 20480 0 - Live 0x00000000\\r\\ndrm_kms_helper 114688 1 vmwgfx, Live 0x00000000\\r\\nsnd_seq_device 16384 3 snd_seq_midi,snd_rawmidi,snd_seq, Live 0x00000000\\r\\nlockd 81920 2 nfsd,nfs, Live 0x00000000\\r\\nsnd_timer 32768 2 snd_pcm,snd_seq, Live 0x00000000\\r\\ngrace 16384 2 nfsd,lockd, Live 0x00000000\\r\\nvideo 20480 0 - Live 0x00000000\\r\\n8250_fintek 16384 0 - Live 0x00000000\\r\\nsnd 69632 11 snd_intel8x0,snd_ac97_codec,snd_pcm,snd_rawmidi,snd_seq,snd_seq_device,snd_timer, Live 0x00000000\\r\\nbinfmt_misc 20480 1 - Live 0x00000000\\r\\ndrm 294912 6 vboxvideo,vmwgfx,ttm,drm_kms_helper, Live 0x00000000\\r\\nmac_hid 16384 0 - Live 0x00000000\\r\\nparport_pc 32768 0 - Live 0x00000000\\r\\nvboxguest 221184 1 vboxsf, Live 0x00000000 (OE)\\r\\nsoundcore 16384 1 snd, Live 0x00000000\\r\\nsunrpc 282624 19 nfsd,auth_rpcgss,nfs_acl,nfs,lockd, Live 0x00000000\\r\\nfscache 57344 1 nfs, Live 0x00000000\\r\\nppdev 20480 0 - Live 0x00000000\\r\\nlp 16384 0 - Live 0x00000000\\r\\nparport 40960 3 parport_pc,ppdev,lp, Live 0x00000000\\r\\nhid_generic 16384 0 - Live 0x00000000\\r\\nusbhid 49152 0 - Live 0x00000000\\r\\nhid 98304 2 hid_generic,usbhid, Live 0x00000000\\r\\nahci 28672 2 - Live 0x00000000\\r\\npsmouse 110592 0 - Live 0x00000000\\r\\nlibahci 32768 1 ahci, Live 0x00000000\\r\\nvmw_pvscsi 24576 0 - Live 0x00000000\\r\\nvmxnet3 53248 0 - Live 0x00000000\\r\\ne1000 131072 0 - Live 0x00000000\\r\\n\\r\\n```\\r\\n\\r\\n\u5185\u6838\u4e2d\u5df2\u52a0\u8f7d\u6a21\u5757\u7684\u4fe1\u606f\u4e5f\u5b58\u5728\u4e8e/sys/module\u76ee\u5f55\u4e0b\uff0c\u52a0\u8f7dhello.ko\u540e\uff0c\u5185\u6838\u4e2d\u5c06\u5305\u542b/sys/module/hello\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u53c8\u6709\u4e00\u4e2arefcnt\u6587\u4ef6\u548c\u4e00\u4e2asections\u76ee\u5f55\uff0c\u5728/sys/module/hello\u76ee\u5f55\u4e0b\u8fd0\u884c\u201ctree\u2013a\u201d\u53ef\u5f97\u5230\u5982\u4e0b\u76ee\u5f55\u6811\uff1a\\r\\n\\r\\n```\\r\\nroot@barry-VirtualBox:/sys/module/hello# tree -a\\r\\n.\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n coresize\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n holders\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n initsize\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n initstate\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n notes\u2502\\r\\n\\r\\n\\r\\n   \u2514\u2500\u2500\\r\\n\\r\\n\\r\\n .note.gnu.build-id\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n refcnt\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n sections\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n .exit.text\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n .gnu.linkonce.this_module\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n .init.text\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n .note.gnu.build-id\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n .rodata.str1.1\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n .strtab\u2502\\r\\n\\r\\n\\r\\n   \u2514\u2500\u2500\\r\\n\\r\\n\\r\\n .symtab\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n srcversion\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n taint\u2514\u2500\u2500\\r\\n\\r\\n\\r\\n uevent\\r\\n3 directories, 15 files\\r\\n```\\r\\n\\r\\nmodprobe\u547d\u4ee4\u6bd4insmod\u547d\u4ee4\u8981\u5f3a\u5927\uff0c\u5b83\u5728\u52a0\u8f7d\u67d0\u6a21\u5757\u65f6\uff0c\u4f1a\u540c\u65f6\u52a0\u8f7d\u8be5\u6a21\u5757\u6240\u4f9d\u8d56\u7684\u5176\u4ed6\u6a21\u5757\u3002\u4f7f\u7528modprobe\u547d\u4ee4\u52a0\u8f7d\u7684\u6a21\u5757\u82e5\u4ee5\u201cmodprobe-r filename\u201d\u7684\u65b9\u5f0f\u5378\u8f7d\uff0c\u5c06\u540c\u65f6\u5378\u8f7d\u5176\u4f9d\u8d56\u7684\u6a21\u5757\u3002\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u5b58\u653e\u5728\u6839\u6587\u4ef6\u7cfb\u7edf\u7684/lib/modules/kernel-version/modules.dep\u6587\u4ef6\u4e2d\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u6574\u4f53\u7f16\u8bd1\u5185\u6838\u7684\u65f6\u5019\u7531depmod\u5de5\u5177\u751f\u6210\u7684\uff0c\u5b83\u7684\u683c\u5f0f\u975e\u5e38\u7b80\u5355\uff1a\\r\\n\\r\\n```\\r\\nkernel/lib/cpu-notifier-error-inject.ko: kernel/lib/notifier-error-inject.ko\\r\\nkernel/lib/pm-notifier-error-inject.ko: kernel/lib/notifier-error-inject.ko\\r\\nkernel/lib/lru_cache.ko:\\r\\nkernel/lib/cordic.ko:\\r\\nkernel/lib/rbtree_test.ko:\\r\\nkernel/lib/interval_tree_test.ko:\\r\\nupdates/dkms/vboxvideo.ko: kernel/drivers/gpu/drm/drm.ko\\r\\n```\\r\\n\\r\\n\u4f7f\u7528modinfo<\u6a21\u5757\u540d>\u547d\u4ee4\u53ef\u4ee5\u83b7\u5f97\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u6a21\u5757\u4f5c\u8005\u3001\u6a21\u5757\u7684\u8bf4\u660e\u3001\u6a21\u5757\u6240\u652f\u6301\u7684\u53c2\u6570\u4ee5\u53cavermagic\uff1a\\r\\n\\r\\n```\\r\\n# modinfo hello.ko\\r\\nfilename:       /home/baohua/develop/training/kernel/drivers/hello/hello.ko\\r\\nalias:          a simplest module\\r\\ndescription:    A simple Hello World Module\\r\\nlicense:        GPL v2\\r\\nauthor:         Barry Song <21cnbao@gmail.com>\\r\\ndepends:\\r\\nvermagic:       4.0.0-rc1 SMP mod_unload 686\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09","description":"\u5728Linux\u4e2d\uff0c\u5185\u6838\u6253\u5370\u8bed\u53e5printk\uff08\uff09\u4f1a\u5c06\u5185\u6838\u4fe1\u606f\u8f93\u51fa\u5230\u5185\u6838\u4fe1\u606f\u7f13\u51b2\u533a\u4e2d\uff0c\u5185\u6838\u7f13\u51b2\u533a\u662f\u5728kernel/printk.c\u4e2d\u901a\u8fc7\u5982\u4e0b\u8bed\u53e5\u9759\u6001\u5b9a\u4e49\u7684\uff1a","date":"2025-09-15T14:44:14.629Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":7.345,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.1\u3000Linux\u5185\u6838\u6a21\u5757\u7b80\u4ecb"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8"}},"content":"\u5728Linux\u4e2d\uff0c\u5185\u6838\u6253\u5370\u8bed\u53e5printk\uff08\uff09\u4f1a\u5c06\u5185\u6838\u4fe1\u606f\u8f93\u51fa\u5230\u5185\u6838\u4fe1\u606f\u7f13\u51b2\u533a\u4e2d\uff0c\u5185\u6838\u7f13\u51b2\u533a\u662f\u5728kernel/printk.c\u4e2d\u901a\u8fc7\u5982\u4e0b\u8bed\u53e5\u9759\u6001\u5b9a\u4e49\u7684\uff1a\\r\\n\\r\\n```\\r\\nstatic char __log_buf[__LOG_BUF_LEN] __aligned(LOG_ALIGN);\\r\\n```\\r\\n\\r\\n\u5185\u6838\u4fe1\u606f\u7f13\u51b2\u533a\u662f\u4e00\u4e2a\u73af\u5f62\u7f13\u51b2\u533a\uff08Ring Buffer\uff09\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u585e\u5165\u7684\u6d88\u606f\u8fc7\u591a\uff0c\u5219\u5c31\u4f1a\u5c06\u4e4b\u524d\u7684\u6d88\u606f\u51b2\u5237\u6389\u3002\\r\\n\\r\\nprintk\uff08\uff09\u5b9a\u4e49\u4e868\u4e2a\u6d88\u606f\u7ea7\u522b\uff0c\u5206\u4e3a\u7ea7\u522b0~7\uff0c\u7ea7\u522b\u8d8a\u4f4e\uff08\u6570\u503c\u8d8a\u5927\uff09\uff0c\u6d88\u606f\u8d8a\u4e0d\u91cd\u8981\uff0c\u7b2c0\u7ea7\u662f\u7d27\u6025\u4e8b\u4ef6\u7ea7\uff0c\u7b2c7\u7ea7\u662f\u8c03\u8bd5\u7ea7\uff0c\u4ee3\u7801\u6e05\u535521.2\u6240\u793a\u4e3aprintk\uff08\uff09\u7684\u7ea7\u522b\u5b9a\u4e49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.2\u3000printk\uff08\uff09\u7684\u7ea7\u522b\u5b9a\u4e49\\r\\n\\r\\n```\\r\\n 1 #define KERN_EMERG \\"<0>\\"      /* \u7d27\u6025\u4e8b\u4ef6\uff0c\u4e00\u822c\u662f\u7cfb\u7edf\u5d29\u6e83\u4e4b\u524d\u63d0\u793a\u7684\u6d88\u606f */\\r\\n 2 #define KERN_ALERT \\"<1>\\"      /* \u5fc5\u987b\u7acb\u5373\u91c7\u53d6\u884c\u52a8*/\\r\\n 3 #define KERN_CRIT \\"<2>\\"       /* \u4e34\u754c\u72b6\u6001\uff0c\u901a\u5e38\u6d89\u53ca\u4e25\u91cd\u7684\u786c\u4ef6\u6216\u8f6f\u4ef6\u64cd\u4f5c\u5931\u8d25*/\\r\\n 4 #define KERN_ERR  \\"<3>\\"       /* \u7528\u4e8e\u62a5\u544a\u9519\u8bef\u72b6\u6001\uff0c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4f1a\u7ecf\u5e38\u4f7f\u7528KERN_ERR\u6765\u62a5\u544a\u6765\u81ea\u786c\u4ef6\u7684\u95ee\u9898*/\\r\\n 6 #define KERN_WARNING  \\"<4>\\"   /* \u5bf9\u53ef\u80fd\u51fa\u73b0\u95ee\u9898\u7684\u60c5\u51b5\u8fdb\u884c\u8b66\u544a\uff0c\\r\\n 7                                  \u8fd9\u7c7b\u60c5\u51b5\u901a\u5e38\u4e0d\u4f1a\u5bf9\u7cfb\u7edf\u9020\u6210\u4e25\u91cd\u7684\u95ee\u9898*/\\r\\n 8 #define KERN_NOTICE   \\"<5>\\"   /* \u6709\u5fc5\u8981\u8fdb\u884c\u63d0\u793a\u7684\u6b63\u5e38\u60c5\u5f62\uff0c\\r\\n 9                                  \u8bb8\u591a\u4e0e\u5b89\u5168\u76f8\u5173\u7684\u72b6\u51b5\u7528\u8fd9\u4e2a\u7ea7\u522b\u8fdb\u884c\u6c47\u62a5*/\\r\\n10#define KERN_INFO     \\"<6>\\"    /* \u5185\u6838\u63d0\u793a\u6027\u4fe1\u606f\uff0c\u5f88\u591a\u9a71\u52a8\u7a0b\u5e8f\\r\\n11                                  \u5728\u542f\u52a8\u7684\u65f6\u5019\uff0c\u7528\u8fd9\u4e2a\u7ea7\u522b\u6253\u5370\u51fa\u5b83\u4eec\u627e\u5230\u7684\u786c\u4ef6\u4fe1\u606f*/\\r\\n12#define KERN_DEBUG    \\"<7>\\"    /* \u7528\u4e8e\u8c03\u8bd5\u4fe1\u606f*/\\r\\n```\\r\\n\\r\\n\u901a\u8fc7/proc/sys/kernel/printk\u6587\u4ef6\u53ef\u4ee5\u8c03\u8282printk\uff08\uff09\u7684\u8f93\u51fa\u7b49\u7ea7\uff0c\u8be5\u6587\u4ef6\u67094\u4e2a\u6570\u5b57\u503c\uff0c\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\n- \xb7\u63a7\u5236\u53f0\uff08\u4e00\u822c\u662f\u4e32\u53e3\uff09\u65e5\u5fd7\u7ea7\u522b\uff1a\u5f53\u524d\u7684\u6253\u5370\u7ea7\u522b\uff0c\u4f18\u5148\u7ea7\u9ad8\u4e8e\u8be5\u503c\u7684\u6d88\u606f\u5c06\u88ab\u6253\u5370\u81f3\u63a7\u5236\u53f0\u3002\\r\\n- \xb7\u9ed8\u8ba4\u7684\u6d88\u606f\u65e5\u5fd7\u7ea7\u522b\uff1a\u5c06\u7528\u8be5\u4f18\u5148\u7ea7\u6765\u6253\u5370\u6ca1\u6709\u4f18\u5148\u7ea7\u524d\u7f00\u7684\u6d88\u606f\uff0c\u4e5f\u5c31\u662f\u5728\u76f4\u63a5\u5199printk\uff08\u201cxxx\u201d\uff09\u800c\u4e0d\u5e26\u6253\u5370\u7ea7\u522b\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u4f7f\u7528\u8be5\u6253\u5370\u7ea7\u522b\u3002\\r\\n- \xb7\u6700\u4f4e\u7684\u63a7\u5236\u53f0\u65e5\u5fd7\u7ea7\u522b\uff1a\u63a7\u5236\u53f0\u65e5\u5fd7\u7ea7\u522b\u53ef\u88ab\u8bbe\u7f6e\u7684\u6700\u5c0f\u503c\uff08\u4e00\u822c\u90fd\u662f1\uff09\u3002\\r\\n- \xb7\u9ed8\u8ba4\u7684\u63a7\u5236\u53f0\u65e5\u5fd7\u7ea7\u522b\uff1a\u63a7\u5236\u53f0\u65e5\u5fd7\u7ea7\u522b\u7684\u9ed8\u8ba4\u503c\u3002\\r\\n\\r\\n\u5982\u5728Ubuntu PC\u4e0a\uff0c/proc/sys/kernel/printk\u7684\u503c\u4e00\u822c\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n$ cat /proc/sys/kernel/printk\\r\\n4   4    1   7\\r\\n```\\r\\n\\r\\n\u800c\u6211\u4eec\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u4f7f\u5f97Linux\u5185\u6838\u7684\u4efb\u4f55printk\uff08\uff09\u90fd\u4ece\u63a7\u5236\u53f0\u8f93\u51fa\uff1a\\r\\n\\r\\n```\\r\\n# echo 8 > /proc/sys/kernel/printk\\r\\n```\\r\\n\\r\\n\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cDEBUG\u7ea7\u522b\u7684\u6d88\u606f\u4e0d\u4f1a\u4ece\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728bootargs\u4e2d\u8bbe\u7f6eignore_loglevel\u6765\u5ffd\u7565\u6253\u5370\u7ea7\u522b\uff0c\u4ee5\u4fdd\u8bc1\u6240\u6709\u6d88\u606f\u90fd\u88ab\u6253\u5370\u5230\u63a7\u5236\u53f0\u3002\u5728\u7cfb\u7edf\u542f\u52a8\u540e\uff0c\u7528\u6237\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5199/sys/module/printk/parameters/ignore_loglevel\u6587\u4ef6\u52a8\u6001\u6765\u8bbe\u7f6e\u662f\u5426\u5ffd\u7565\u6253\u5370\u7ea7\u522b\u3002\\r\\n\\r\\n\u8981\u6ce8\u610f\u7684\u662f\uff0c/proc/sys/kernel/printk\u5e76\u4e0d\u63a7\u5236\u5185\u6838\u6d88\u606f\u8fdb\u5165__log_buf\u7684\u95e8\u69db\uff0c\u56e0\u6b64\u65e0\u8bba\u6d88\u606f\u7ea7\u522b\u662f\u591a\u5c11\uff0c\u90fd\u4f1a\u8fdb\u5165__log_buf\u4e2d\uff0c\u4f46\u662f\u6700\u7ec8\u53ea\u6709\u9ad8\u4e8e\u5f53\u524d\u6253\u5370\u7ea7\u522b\u7684\u5185\u6838\u6d88\u606f\u624d\u4f1a\u4ece\u63a7\u5236\u53f0\u6253\u5370\u3002\\r\\n\\r\\n\u7528\u6237\u53ef\u4ee5\u901a\u8fc7dmesg\u547d\u4ee4\u67e5\u770b\u5185\u6838\u6253\u5370\u7f13\u51b2\u533a\uff0c\u800c\u5982\u679c\u4f7f\u7528dmesg-c\u547d\u4ee4\uff0c\u5219\u4e0d\u4ec5\u4f1a\u663e\u793a__log_buf\uff0c\u8fd8\u4f1a\u6e05\u9664\u8be5\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528cat/proc/kmsg\u547d\u4ee4\u6765\u663e\u793a\u5185\u6838\u4fe1\u606f\u3002/proc/kmsg\u662f\u4e00\u4e2a\u201c\u6c38\u65e0\u4f11\u6b62\u7684\u6587\u4ef6\u201d\uff0c\u56e0\u6b64\uff0ccat/proc/kmsg\u7684\u8fdb\u7a0b\u53ea\u80fd\u901a\u8fc7\u201cCtrl+C\u201d\u6216kill\u7ec8\u6b62\u3002\\r\\n\\r\\n\u5728\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u7ecf\u5e38\u9700\u8981\u8f93\u51fa\u8c03\u8bd5\u6216\u7cfb\u7edf\u4fe1\u606f\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528printk\uff08\u201c<7>debug info\u2026\\\\n\u201d\uff09\u65b9\u5f0f\u7684printk\uff08\uff09\u8bed\u53e5\u8f93\u51fa\uff0c\u4f46\u662f\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u5c01\u88c5\u4e86printk\uff08\uff09\u7684\u66f4\u9ad8\u7ea7\u7684\u5b8f\uff0c\u5982pr_debug\uff08\uff09\u3001dev_debug\uff08\uff09\u7b49\u3002\u4ee3\u7801\u6e05\u535521.3\u6240\u793a\u4e3apr_debug\uff08\uff09\u548cpr_info\uff08\uff09\u7684\u5b9a\u4e49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.3\u3000\u53ef\u66ff\u4ee3printk\uff08\uff09\u7684\u5b8fpr_debug\uff08\uff09\u548cpr_info\uff08\uff09\u7684\u5b9a\u4e49\\r\\n\\r\\n```\\r\\n 1#ifdef DEBUG\\r\\n 2#define pr_debug(fmt,arg...) \\\\\\r\\n 3  printk(KERN_DEBUG fmt,##arg)\\r\\n 4#else\\r\\n 5static inline int _ _attribute_ _ ((format (printf, 1, 2))) pr_debug(const char * fmt, ...)\\r\\n 6{\\r\\n 7   return 0;\\r\\n 8}\\r\\n 9#endif\\r\\n10\\r\\n11#define pr_info(fmt,arg...) \\\\\\r\\n12   printk(KERN_INFO fmt,##arg)\\r\\n```\\r\\n\\r\\n\u4f7f\u7528pr_xxx\uff08\uff09\u65cfAPI\u7684\u597d\u5904\u662f\uff0c\u53ef\u4ee5\u5728\u6587\u4ef6\u6700\u5f00\u5934\u901a\u8fc7pr_fmt\uff08\uff09\u5b9a\u4e49\u4e00\u4e2a\u6253\u5370\u683c\u5f0f\uff0c\u6bd4\u5982\u5728kernel/watchdog.c\u7684\u6700\u5f00\u5934\u901a\u8fc7\u5982\u4e0b\u5b9a\u4e49\u53ef\u4ee5\u4fdd\u8bc1\u4e4b\u540ewatchdog.c\u8c03\u7528\u7684\u6240\u6709pr_xxx\uff08\uff09\u6253\u5370\u7684\u6d88\u606f\u90fd\u81ea\u52a8\u5e26\u6709\u201cNMI watchdog\uff1a\u201d\u7684\u524d\u7f00\u3002\\r\\n\\r\\n```\\r\\n#define pr_fmt(fmt) \\"NMI watchdog: \\" fmt\\r\\n#include <linux/mm.h>\\r\\n#include <linux/cpu.h>\\r\\n#include <linux/nmi.h>\u2026\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.4\u6240\u793a\u4e3adev_dbg\uff08\uff09\u3001dev_err\uff08\uff09\u3001dev_info\uff08\uff09\u7b49\u7684\u5b9a\u4e49\uff0c\u4f7f\u7528dev_xxx\uff08\uff09\u65cfAPI\u6253\u5370\u7684\u65f6\u5019\uff0c\u8bbe\u5907\u540d\u79f0\u4f1a\u88ab\u81ea\u52a8\u52a0\u5230\u6253\u5370\u6d88\u606f\u7684\u524d\u5934\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.4\u3000\u5305\u542b\u8bbe\u5907\u4fe1\u606f\u7684\u53ef\u66ff\u4ee3printk\uff08\uff09\u7684\u5b8f\\r\\n\\r\\n```\\r\\n 1#define dev_printk(level, dev, format, arg...)  \\\\\\r\\n 2  printk(level \\"%s %s: \\" format , dev_driver_string(dev) , (dev)->bus_id , ## arg)\\r\\n 3\\r\\n 4#ifdef DEBUG\\r\\n 5#define dev_dbg(dev, format, arg...)            \\\\\\r\\n 6       dev_printk(KERN_DEBUG , dev , format , ## arg)\\r\\n 7#else\\r\\n 8#define dev_dbg(dev, format, arg...) do { (void)(dev); } while (0)\\r\\n 9#endif\\r\\n10\\r\\n11#define dev_err(dev, format, arg...)            \\\\\\r\\n12       dev_printk(KERN_ERR , dev , format , ## arg)\\r\\n13#define dev_info(dev, format, arg...)           \\\\\\r\\n14       dev_printk(KERN_INFO , dev , format , ## arg)\\r\\n15#define dev_warn(dev, format, arg...)           \\\\\\r\\n16       dev_printk(KERN_WARNING , dev , format , ## arg)\\r\\n17#define dev_notice(dev, format, arg...)         \\\\\\r\\n18       dev_printk(KERN_NOTICE , dev , format , ## arg)\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.4\u6240\u793a\u4e3adev_dbg\uff08\uff09\u3001dev_err\uff08\uff09\u3001dev_info\uff08\uff09\u7b49\u7684\u5b9a\u4e49\uff0c\u4f7f\u7528dev_xxx\uff08\uff09\u65cfAPI\u6253\u5370\u7684\u65f6\u5019\uff0c\u8bbe\u5907\u540d\u79f0\u4f1a\u88ab\u81ea\u52a8\u52a0\u5230\u6253\u5370\u6d88\u606f\u7684\u524d\u5934\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.4\u3000\u5305\u542b\u8bbe\u5907\u4fe1\u606f\u7684\u53ef\u66ff\u4ee3printk\uff08\uff09\u7684\u5b8f\\r\\n\\r\\n```\\r\\n 1#define dev_printk(level, dev, format, arg...)  \\\\\\r\\n 2  printk(level \\"%s %s: \\" format , dev_driver_string(dev) , (dev)->bus_id , ## arg)\\r\\n 3\\r\\n 4#ifdef DEBUG\\r\\n 5#define dev_dbg(dev, format, arg...)            \\\\\\r\\n 6       dev_printk(KERN_DEBUG , dev , format , ## arg)\\r\\n 7#else\\r\\n 8#define dev_dbg(dev, format, arg...) do { (void)(dev); } while (0)\\r\\n 9#endif\\r\\n10\\r\\n11#define dev_err(dev, format, arg...)            \\\\\\r\\n12       dev_printk(KERN_ERR , dev , format , ## arg)\\r\\n13#define dev_info(dev, format, arg...)           \\\\\\r\\n14       dev_printk(KERN_INFO , dev , format , ## arg)\\r\\n15#define dev_warn(dev, format, arg...)           \\\\\\r\\n16       dev_printk(KERN_WARNING , dev , format , ## arg)\\r\\n17#define dev_notice(dev, format, arg...)         \\\\\\r\\n18       dev_printk(KERN_NOTICE , dev , format , ## arg)\\r\\n```\\r\\n\\r\\n\u5728\u6253\u5370\u4fe1\u606f\u65f6\uff0c\u5982\u679c\u60f3\u8f93\u51faprintk\uff08\uff09\u8c03\u7528\u6240\u5728\u7684\u51fd\u6570\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528__func__\uff1b\u5982\u679c\u60f3\u8f93\u51fa\u5176\u6240\u5728\u4ee3\u7801\u7684\u884c\u53f7\uff0c\u53ef\u4ee5\u4f7f\u7528__LINE__\uff1b\u60f3\u8f93\u51fa\u6e90\u4ee3\u7801\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528__FILE__\u3002\u4f8b\u5982drivers/block/sx8.c\u4e2d\u7684\uff1a\\r\\n\\r\\n```\\r\\n#ifdef CARM_NDEBUG\\r\\n#define assert(expr)\\r\\n#else\\r\\n#define assert(expr) \\\\\\r\\n       if(unlikely(!(expr))) {                                 \\\\\\r\\n       printk(KERN_ERR \\"Assertion failed! %s,%s,%s,line=%d\\\\n\\", \\\\\\r\\n       #expr, __FILE__, __func__, __LINE__);          \\\\\\r\\n       }\\r\\n#endif\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8","description":"CPUFreq\u5b50\u7cfb\u7edf\u4f4d\u4e8edrivers/cpufreq\u76ee\u5f55\u4e0b\uff0c\u8d1f\u8d23\u8fdb\u884c\u8fd0\u884c\u8fc7\u7a0b\u4e2dCPU\u9891\u7387\u548c\u7535\u538b\u7684\u52a8\u6001\u8c03\u6574\uff0c\u5373DVFS\uff08Dynamic Voltage Frequency Scaling\uff0c\u52a8\u6001\u7535\u538b\u9891\u7387\u8c03\u6574\uff09\u3002\u8fd0\u884c\u65f6\u8fdb\u884cCPU\u7535\u538b\u548c\u9891\u7387\u8c03\u6574\u7684\u539f\u56e0\u662f\uff1aCMOS\u7535\u8def\u4e2d\u7684\u529f\u8017\u4e0e\u7535\u538b\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\u3001\u4e0e\u9891\u7387\u6210\u6b63\u6bd4\uff08P\u221dfV2 \uff09\uff0c\u56e0\u6b64\u964d\u4f4e\u7535\u538b\u548c\u9891\u7387\u53ef\u964d\u4f4e\u529f\u8017\u3002","date":"2025-09-15T14:44:14.617Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":14.325,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.3\u3000\u5185\u6838\u6253\u5370\u4fe1\u606f\u2014printk\uff08\u200b\uff09"},"nextItem":{"title":"1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8"}},"content":"CPUFreq\u5b50\u7cfb\u7edf\u4f4d\u4e8edrivers/cpufreq\u76ee\u5f55\u4e0b\uff0c\u8d1f\u8d23\u8fdb\u884c\u8fd0\u884c\u8fc7\u7a0b\u4e2dCPU\u9891\u7387\u548c\u7535\u538b\u7684\u52a8\u6001\u8c03\u6574\uff0c\u5373DVFS\uff08Dynamic Voltage Frequency Scaling\uff0c\u52a8\u6001\u7535\u538b\u9891\u7387\u8c03\u6574\uff09\u3002\u8fd0\u884c\u65f6\u8fdb\u884cCPU\u7535\u538b\u548c\u9891\u7387\u8c03\u6574\u7684\u539f\u56e0\u662f\uff1aCMOS\u7535\u8def\u4e2d\u7684\u529f\u8017\u4e0e\u7535\u538b\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\u3001\u4e0e\u9891\u7387\u6210\u6b63\u6bd4\uff08P\u221dfV2 \uff09\uff0c\u56e0\u6b64\u964d\u4f4e\u7535\u538b\u548c\u9891\u7387\u53ef\u964d\u4f4e\u529f\u8017\u3002\\r\\n\\r\\nCPUFreq\u7684\u6838\u5fc3\u5c42\u4f4d\u4e8edrivers/cpufreq/cpufreq.c\u4e0b\uff0c\u5b83\u4e3a\u5404\u4e2aSoC\u7684CPUFreq\u9a71\u52a8\u7684\u5b9e\u73b0\u63d0\u4f9b\u4e86\u4e00\u5957\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u5e76\u5b9e\u73b0\u4e86\u4e00\u5957notifier\u673a\u5236\uff0c\u53ef\u4ee5\u5728CPUFreq\u7684\u7b56\u7565\u548c\u9891\u7387\u6539\u53d8\u7684\u65f6\u5019\u5411\u5176\u4ed6\u6a21\u5757\u53d1\u51fa\u901a\u77e5\u3002\u53e6\u5916\uff0c\u5728CPU\u8fd0\u884c\u9891\u7387\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u5185\u6838\u7684loops_per_jiffy\u5e38\u6570\u4e5f\u4f1a\u53d1\u751f\u76f8\u5e94\u53d8\u5316\u3002\\r\\n\\r\\n# 19.2.1\u3000SoC\u7684CPUFreq\u9a71\u52a8\u5b9e\u73b0\\r\\n\\r\\n\u6bcf\u4e2aSoC\u7684\u5177\u4f53CPUFreq\u9a71\u52a8\u5b9e\u4f8b\u53ea\u9700\u8981\u5b9e\u73b0\u7535\u538b\u3001\u9891\u7387\u8868\uff0c\u4ee5\u53ca\u4ece\u786c\u4ef6\u5c42\u9762\u5b8c\u6210\u8fd9\u4e9b\u53d8\u5316\u3002\\r\\n\\r\\nCPUFreq\u6838\u5fc3\u5c42\u63d0\u4f9b\u4e86\u5982\u4e0bAPI\u4ee5\u4f9bSoC\u6ce8\u518c\u81ea\u8eab\u7684CPUFreq\u9a71\u52a8\uff1a\\r\\n\\r\\n```\\r\\nintcpufreq_register_driver(struct cpufreq_driver *driver_data);\\r\\n```\\r\\n\\r\\n\u5176\u53c2\u6570\u4e3a\u4e00\u4e2acpufreq_driver\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u5b9e\u9645\u4e0a\uff0ccpufreq_driver\u5c01\u88c5\u4e86\u4e00\u4e2a\u5177\u4f53\u7684SoC\u7684CPUFreq\u9a71\u52a8\u7684\u4e3b\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u5f62\u5982\u4ee3\u7801\u6e05\u535519.1\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.1\u3000cpufreq_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct cpufreq_driver {\\r\\n 2struct module         *owner;\\r\\n 3char                 name[CPUFREQ_NAME_LEN];\\r\\n 4 u8                   flags;\\r\\n 5\\r\\n 6       /* needed by all drivers */\\r\\n 7int    (*init)         (struct cpufreq_policy *policy);\\r\\n 8int    (*verify)       (struct cpufreq_policy *policy);\\r\\n 9\\r\\n10       /* define one out of two */\\r\\n11int     (*setpolicy)    (struct cpufreq_policy *policy);\\r\\n12int     (*target)       (struct cpufreq_policy *policy),\\r\\n13unsigned inttarget_freq,\\r\\n14unsigned int relation);\\r\\n15\\r\\n16      /* should be defined, if possible */\\r\\n17unsigned int    (*get)  (unsigned intcpu);\\r\\n18\\r\\n19      /* optional */\\r\\n20unsigned int (*getavg)  (struct cpufreq_policy *policy,\\r\\n21unsigned intcpu);\\r\\n22int     (*bios_limit)   (intcpu, unsigned int *limit);\\r\\n23\\r\\n24int     (*exit)         (struct cpufreq_policy *policy);\\r\\n25int     (*suspend)      (struct cpufreq_policy *policy);\\r\\n26int     (*resume)       (struct cpufreq_policy *policy);\\r\\n27structfreq_attr        **attr;\\r\\n28};\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684owner\u6210\u5458\u4e00\u822c\u88ab\u8bbe\u7f6e\u4e3aTHIS_MODULE\uff1bname\u6210\u5458\u662fCPUFreq\u9a71\u52a8\u7684\u540d\u5b57\uff0c\u5982drivers/cpufreq/s5pv210-cpufreq.c\u8bbe\u7f6ename\u4e3as5pv210\uff0cdrivers/cpufreq/omap-cpufreq.c\u8bbe\u7f6ename\u4e3aomap\uff1bflags\u662f\u4e00\u4e9b\u6697\u793a\u6027\u7684\u6807\u5fd7\uff0c\u8b6c\u5982\uff0c\u82e5\u8bbe\u7f6e\u4e86CPUFREQ_CONST_LOOPS\uff0c\u5219\u662f\u544a\u8bc9\u5185\u6838loops_per_jiffy\u4e0d\u4f1a\u56e0\u4e3aCPU\u9891\u7387\u7684\u53d8\u5316\u800c\u53d8\u5316\u3002\\r\\n\\r\\ninit\uff08\uff09\u6210\u5458\u662f\u4e00\u4e2aper-CPU\u521d\u59cb\u5316\u51fd\u6570\u6307\u9488\uff0c\u6bcf\u5f53\u4e00\u4e2a\u65b0\u7684CPU\u88ab\u6ce8\u518c\u8fdb\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u8be5\u51fd\u6570\u5c31\u88ab\u8c03\u7528\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2acpufreq_policy\u7684\u6307\u9488\u53c2\u6570\uff0c\u5728init\uff08\uff09\u6210\u5458\u51fd\u6570\u4e2d\uff0c\u53ef\u8fdb\u884c\u5982\u4e0b\u8bbe\u7f6e\uff1a\\r\\n\\r\\n```\\r\\npolicy->cpuinfo.min_freq\\r\\npolicy->cpuinfo.max_freq\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u63cf\u8ff0\u7684\u662f\u8be5CPU\u652f\u6301\u7684\u6700\u5c0f\u9891\u7387\u548c\u6700\u5927\u9891\u7387\uff08\u5355\u4f4d\u662fkHz\uff09\u3002\\r\\n\\r\\n```\\r\\npolicy->cpuinfo.transition_latency\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u63cf\u8ff0\u7684\u662fCPU\u8fdb\u884c\u9891\u7387\u5207\u6362\u6240\u9700\u8981\u7684\u5ef6\u8fdf\uff08\u5355\u4f4d\u662fns\uff09\\r\\n\\r\\n```\\r\\npolicy->cur\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u63cf\u8ff0\u7684\u662fCPU\u7684\u5f53\u524d\u9891\u7387\u3002\\r\\n\\r\\n```\\r\\npolicy->policy\\r\\npolicy->governor\\r\\npolicy->min\\r\\npolicy->max\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u5b9a\u4e49\u8be5CPU\u7684\u7f3a\u7701\u7b56\u7565\uff0c\u4ee5\u53ca\u5728\u7f3a\u7701\u7b56\u7565\u60c5\u51b5\u4e0b\uff0c\u8be5\u7b56\u7565\u652f\u6301\u7684\u6700\u5c0f\u3001\u6700\u5927CPU\u9891\u7387\u3002\\r\\n\\r\\nverify\uff08\uff09\u6210\u5458\u51fd\u6570\u7528\u4e8e\u5bf9\u7528\u6237\u7684CPUFreq\u7b56\u7565\u8bbe\u7f6e\u8fdb\u884c\u6709\u6548\u6027\u9a8c\u8bc1\u548c\u6570\u636e\u4fee\u6b63\u3002\u6bcf\u5f53\u7528\u6237\u8bbe\u5b9a\u4e00\u4e2a\u65b0\u7b56\u7565\u65f6\uff0c\u8be5\u51fd\u6570\u6839\u636e\u8001\u7684\u7b56\u7565\u548c\u65b0\u7684\u7b56\u7565\uff0c\u68c0\u9a8c\u65b0\u7b56\u7565\u8bbe\u7f6e\u7684\u6709\u6548\u6027\u5e76\u5bf9\u65e0\u6548\u8bbe\u7f6e\u8fdb\u884c\u5fc5\u8981\u7684\u4fee\u6b63\u3002\u5728\u8be5\u6210\u5458\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\u4e2d\uff0c\u5e38\u7528\u5230\u5982\u4e0b\u8f85\u52a9\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\ncpufreq_verify_within_limits(struct cpufreq_policy *policy, unsigned intmin_freq,\\r\\n        unsigned intmax_freq);\\r\\n```\\r\\n\\r\\nsetpolicy\uff08\uff09\u6210\u5458\u51fd\u6570\u63a5\u53d7\u4e00\u4e2apolicy\u53c2\u6570\uff08\u5305\u542bpolicy->policy\u3001policy->min\u548cpolicy->max\u7b49\u6210\u5458\uff09\uff0c\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\u7684CPU\u4e00\u822c\u5177\u5907\u5728\u4e00\u4e2a\u8303\u56f4\uff08limit\uff0c\u4ecepolicy->min\u5230policy->max\uff09\u91cc\u81ea\u52a8\u8c03\u6574\u9891\u7387\u7684\u80fd\u529b\u3002\u76ee\u524d\u53ea\u6709\u5c11\u6570\u9a71\u52a8\uff08\u5982intel_pstate.c\u548clongrun.c\uff09\u5305\u542b\u8fd9\u6837\u7684\u6210\u5458\u51fd\u6570\uff0c\u800c\u7edd\u5927\u591a\u6570CPU\u90fd\u4e0d\u4f1a\u5b9e\u73b0\u6b64\u51fd\u6570\uff0c\u4e00\u822c\u53ea\u5b9e\u73b0target\uff08\uff09\u6210\u5458\u51fd\u6570\uff0ctarget\uff08\uff09\u7684\u53c2\u6570\u76f4\u63a5\u5c31\u662f\u4e00\u4e2a\u6307\u5b9a\u7684\u9891\u7387\u3002\\r\\n\\r\\ntarget\uff08\uff09\u6210\u5458\u51fd\u6570\u7528\u4e8e\u5c06\u9891\u7387\u8c03\u6574\u5230\u4e00\u4e2a\u6307\u5b9a\u7684\u503c\uff0c\u63a5\u53d73\u4e2a\u53c2\u6570\uff1apolicy\u3001target_freq\u548crelation\u3002target_freq\u662f\u76ee\u6807\u9891\u7387\uff0c\u5b9e\u9645\u9a71\u52a8\u603b\u662f\u8981\u8bbe\u5b9a\u771f\u5b9e\u7684CPU\u9891\u7387\u5230\u6700\u63a5\u8fd1\u4e8etarget_freq\uff0c\u5e76\u4e14\u8bbe\u5b9a\u7684\u9891\u7387\u5fc5\u987b\u4f4d\u4e8epolicy->min\u5230policy->max\u4e4b\u95f4\u3002\u5728\u8bbe\u5b9a\u9891\u7387\u63a5\u8fd1target_freq\u7684\u60c5\u51b5\u4e0b\uff0crelation\u82e5\u4e3aCPUFREQ_REL_L\uff0c\u5219\u6697\u793a\u8bbe\u7f6e\u7684\u9891\u7387\u5e94\u8be5\u5927\u4e8e\u6216\u7b49\u4e8etarget_freq\uff1brelation\u82e5\u4e3aCPUFREQ_REL_H\uff0c\u5219\u6697\u793a\u8bbe\u7f6e\u7684\u9891\u7387\u5e94\u8be5\u5c0f\u4e8e\u6216\u7b49\u4e8etarget_freq\u3002\\r\\n\\r\\n\u886819.1\u63cf\u8ff0\u4e86setpolicy\uff08\uff09\u548ctarget\uff08\uff09\u6240\u9488\u5bf9\u7684CPU\u4ee5\u53ca\u8c03\u7528\u65b9\u5f0f\u4e0a\u7684\u533a\u522b\u3002\\r\\n\\r\\n![1746005269313](./figure/1746005269313.png)\\r\\n\\r\\n\u6839\u636e\u82af\u7247\u5185\u90e8PLL\u548c\u5206\u9891\u5668\u7684\u5173\u7cfb\uff0cARM SoC\u4e00\u822c\u4e0d\u5177\u5907\u72ec\u7acb\u8c03\u6574\u9891\u7387\u7684\u80fd\u529b\uff0c\u5f80\u5f80SoC\u7684CPUFreq\u9a71\u52a8\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u9891\u7387\u8868\uff0c\u9891\u7387\u5728\u8be5\u8868\u7684\u8303\u56f4\u5185\u8fdb\u884c\u53d8\u66f4\uff0c\u56e0\u6b64\u4e00\u822c\u5b9e\u73b0target\uff08\uff09\u6210\u5458\u51fd\u6570\u3002\\r\\n\\r\\nCPUFreq\u6838\u5fc3\u5c42\u63d0\u4f9b\u4e86\u4e00\u7ec4\u4e0e\u9891\u7387\u8868\u76f8\u5173\u7684\u8f85\u52a9API\u3002\\r\\n\\r\\n```\\r\\nintcpufreq_frequency_table_cpuinfo(struct cpufreq_policy *policy,\\r\\nstruct cpufreq_frequency_table *table);\\r\\n```\\r\\n\\r\\n\u5b83\u662fcpufreq_driver\u7684init\uff08\uff09\u6210\u5458\u51fd\u6570\u7684\u52a9\u624b\uff0c\u7528\u4e8e\u5c06policy->min\u548cpolicy->max\u8bbe\u7f6e\u4e3a\u4e0ecpuinfo.min_freq\u548ccpuinfo.max_freq\u76f8\u540c\u7684\u503c\u3002\\r\\n\\r\\n```\\r\\nintcpufreq_frequency_table_verify(struct cpufreq_policy *policy,\\r\\nstruct cpufreq_frequency_table *table);\\r\\n```\\r\\n\\r\\n\u5b83\u662fcpufreq_driver\u7684verify\uff08\uff09\u6210\u5458\u51fd\u6570\u7684\u52a9\u624b\uff0c\u786e\u4fdd\u81f3\u5c11\u67091\u4e2a\u6709\u6548\u7684CPU\u9891\u7387\u4f4d\u4e8epolicy->min\u5230policy->max\u7684\u8303\u56f4\u5185\u3002\\r\\n\\r\\n```\\r\\nintcpufreq_frequency_table_target(struct cpufreq_policy *policy,\\r\\nstruct cpufreq_frequency_table *table,\\r\\nunsigned inttarget_freq,\\r\\nunsigned int relation,\\r\\nunsigned int *index);\\r\\n```\\r\\n\\r\\n\u5b83\u662fcpufreq_driver\u7684target\uff08\uff09\u6210\u5458\u51fd\u6570\u7684\u52a9\u624b\uff0c\u8fd4\u56de\u9700\u8981\u8bbe\u5b9a\u7684\u9891\u7387\u5728\u9891\u7387\u8868\u4e2d\u7684\u7d22\u5f15\u3002\\r\\n\\r\\n\u7701\u7565\u6389\u5177\u4f53\u7684\u7ec6\u8282\uff0c1\u4e2aSoC\u7684CPUFreq\u9a71\u52a8\u5b9e\u4f8bdrivers/cpufreq/s3c64xx-cpufreq.c\u7684\u6838\u5fc3\u7ed3\u6784\u5982\u4ee3\u7801\u6e05\u535519.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.2\u3000S3C64xx\u7684CPUFreq\u9a71\u52a8\\r\\n\\r\\n```\\r\\n  1static unsigned long regulator_latency;\\r\\n  2\\r\\n  3struct s3c64xx_dvfs {\\r\\n  4unsigned intvddarm_min;\\r\\n  5unsigned intvddarm_max;\\r\\n  6};\\r\\n  7\\r\\n  8static struct s3c64xx_dvfs s3c64xx_dvfs_table[] = {\\r\\n  9[0] = { 1000000, 1150000 },\\r\\n 10\u2026\\r\\n 11[4] = { 1300000, 1350000 },\\r\\n 12};\\r\\n 13\\r\\n 14static struct cpufreq_frequency_table s3c64xx_freq_table[] = {\\r\\n 15{ 0,  66000 },\\r\\n 16{ 0, 100000 },\\r\\n 17\u2026\\r\\n 18{ 0, CPUFREQ_TABLE_END },\\r\\n 19};\\r\\n 20\\r\\n 21static int s3c64xx_cpufreq_verify_speed(struct cpufreq_policy *policy)\\r\\n 22{\\r\\n 23if (policy->cpu != 0)\\r\\n 24    return -EINVAL;\\r\\n 25\\r\\n 26return cpufreq_frequency_table_verify(policy, s3c64xx_freq_table);\\r\\n 27}\\r\\n 28\\r\\n 29static unsigned int s3c64xx_cpufreq_get_speed(unsigned intcpu)\\r\\n 30{\\r\\n 31if (cpu != 0)\\r\\n 32    return 0;\\r\\n 33\\r\\n 34return clk_get_rate(armclk) / 1000;\\r\\n 35}\\r\\n 36\\r\\n 37static int s3c64xx_cpufreq_set_target(struct cpufreq_policy *policy,\\r\\n 38             unsigned inttarget_freq,\\r\\n 39             unsigned int relation)\\r\\n 40{\\r\\n 41\u2026\\r\\n 42ret = cpufreq_frequency_table_target(policy, s3c64xx_freq_table,\\r\\n 43                 target_freq, relation, &i);\\r\\n 44\u2026\\r\\n 45freqs.cpu = 0;\\r\\n 46freqs.old = clk_get_rate(armclk) / 1000;\\r\\n 47freqs.new = s3c64xx_freq_table[i].frequency;\\r\\n 48freqs.flags = 0;\\r\\n 49dvfs = &s3c64xx_dvfs_table[s3c64xx_freq_table[i].index];\\r\\n 50\\r\\n 51if (freqs.old == freqs.new)\\r\\n 52    return 0;\\r\\n 53\\r\\n 54cpufreq_notify_transition(&freqs, CPUFREQ_PRECHANGE);\\r\\n 55\\r\\n 56if (vddarm&&freqs.new>freqs.old) {\\r\\n 57    ret = regulator_set_voltage(vddarm,\\r\\n 58                 dvfs->vddarm_min,\\r\\n 59                 dvfs->vddarm_max);\\r\\n 60    \u2026\\r\\n 61}\\r\\n 62\\r\\n 63ret = clk_set_rate(armclk, freqs.new * 1000);\\r\\n 64\u2026\\r\\n 65cpufreq_notify_transition(&freqs, CPUFREQ_POSTCHANGE);\\r\\n 66\\r\\n 67if (vddarm&&freqs.new<freqs.old) {\\r\\n 68    ret = regulator_set_voltage(vddarm,\\r\\n 69                 dvfs->vddarm_min,\\r\\n 70                 dvfs->vddarm_max);\\r\\n 71    \u2026\\r\\n 72}\\r\\n 73\\r\\n 74return 0;\\r\\n 75}\\r\\n 76\\r\\n 77static int s3c64xx_cpufreq_driver_init(struct cpufreq_policy *policy)\\r\\n 78{\\r\\n 79\u2026\\r\\n 80armclk = clk_get(NULL, \\"armclk\\");\\r\\n 81\u2026\\r\\n 82vddarm = regulator_get(NULL, \\"vddarm\\");\\r\\n 83\u2026\\r\\n 84s3c64xx_cpufreq_config_regulator();\\r\\n 85\\r\\n 86freq = s3c64xx_freq_table;\\r\\n 87while (freq->frequency != CPUFREQ_TABLE_END) {\\r\\n 88    unsigned long r;\\r\\n 89    \u2026\\r\\n 90}\\r\\n 91\\r\\n 92policy->cur = clk_get_rate(armclk) / 1000;\\r\\n 93policy->cpuinfo.transition_latency = (500 * 1000) + regulator_latency;\\r\\n 94ret = cpufreq_frequency_table_cpuinfo(policy, s3c64xx_freq_table);\\r\\n 95\u2026\\r\\n 96return ret;\\r\\n 97}\\r\\n 98\\r\\n 99staticstruct cpufreq_driver s3c64xx_cpufreq_driver = {\\r\\n100.owner       = THIS_MODULE,\\r\\n101.flags         = 0,\\r\\n102.verify      = s3c64xx_cpufreq_verify_speed,\\r\\n103.target      = s3c64xx_cpufreq_set_target,\\r\\n104.get     = s3c64xx_cpufreq_get_speed,\\r\\n105.init        = s3c64xx_cpufreq_driver_init,\\r\\n106.name        = \\"s3c\\",\\r\\n107};\\r\\n108\\r\\n109static int __init s3c64xx_cpufreq_init(void)\\r\\n110{\\r\\n111return cpufreq_register_driver(&s3c64xx_cpufreq_driver);\\r\\n112}\\r\\n113module_init(s3c64xx_cpufreq_init);\\r\\n```\\r\\n\\r\\n\u7b2c37\u884cs3c64xx_cpufreq_set_target\uff08\uff09\u5c31\u662f\u5b8c\u6210\u76ee\u6807\u9891\u7387\u8bbe\u7f6e\u7684\u51fd\u6570\uff0c\u5b83\u8c03\u7528\u4e86cpufreq_frequency_table_target\uff08\uff09\u4eces3c64xx\u652f\u6301\u7684\u9891\u7387\u8868s3c64xx_freq_table\u91cc\u627e\u5230\u5408\u9002\u7684\u9891\u7387\u3002\u5728\u5177\u4f53\u7684\u9891\u7387\u548c\u7535\u538b\u8bbe\u7f6e\u73af\u8282\uff0c\u7528\u7684\u90fd\u662fLinux\u7684\u6807\u51c6API regulator_set_voltage\uff08\uff09\u548cclk_set_rate\uff08\uff09\u4e4b\u7c7b\u7684\u51fd\u6570\u3002\\r\\n\\r\\n\u7b2c111\u884c\u5728\u6a21\u5757\u521d\u59cb\u5316\u7684\u65f6\u5019\u901a\u8fc7cpufreq_register_driver\uff08\uff09\u6ce8\u518c\u4e86cpufreq_driver\u7684\u5b9e\u4f8b\uff0c\u7b2c94\u884c\uff0c\u5728CPUFreq\u7684\u521d\u59cb\u5316\u9636\u6bb5\u8c03\u7528cpufreq_frequency_table_cpuinfo\uff08\uff09\u6ce8\u518c\u4e86\u9891\u7387\u8868\u3002\u5173\u4e8e\u9891\u7387\u8868\uff0c\u6bd4\u8f83\u65b0\u7684\u5185\u6838\u559c\u6b22\u4f7f\u7528\u540e\u9762\u7ae0\u8282\u5c06\u4ecb\u7ecd\u7684OPP\u3002\\r\\n\\r\\n# 19.2.2\u3000CPUFreq\u7684\u7b56\u7565\\r\\n\\r\\nSoCCPUFreq\u9a71\u52a8\u53ea\u662f\u8bbe\u5b9a\u4e86CPU\u7684\u9891\u7387\u53c2\u6570\uff0c\u4ee5\u53ca\u63d0\u4f9b\u4e86\u8bbe\u7f6e\u9891\u7387\u7684\u9014\u5f84\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u4f1a\u7ba1CPU\u81ea\u8eab\u7a76\u7adf\u5e94\u8be5\u8fd0\u884c\u5728\u54ea\u79cd\u9891\u7387\u4e0a\u3002\u7a76\u7adf\u9891\u7387\u4f9d\u636e\u7684\u662f\u54ea\u79cd\u6807\u51c6\uff0c\u8fdb\u884c\u4f55\u79cd\u53d8\u5316\uff0c\u800c\u8fd9\u4e9b\u5b8c\u5168\u7531CPUFreq\u7684\u7b56\u7565\uff08policy\uff09\u51b3\u5b9a\uff0c\u8fd9\u4e9b\u7b56\u7565\u5982\u886819.2\u6240\u793a\u3002\\r\\n\\r\\n\u886819.2\u3000CPUFrep\u7684\u7b56\u7565\u53ca\u5176\u5b9e\u73b0\u65b9\u6cd5\\r\\n\\r\\n![1746022386526](./figure/1746022386526.png)\\r\\n\\r\\n\u5728Android\u7cfb\u7edf\u4e2d\uff0c\u5219\u589e\u52a0\u4e861\u4e2a\u4ea4\u4e92\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u9002\u5408\u4e8e\u5bf9\u5ef6\u8fdf\u654f\u611f\u7684UI\u4ea4\u4e92\u4efb\u52a1\uff0c\u5f53\u6709UI\u4ea4\u4e92\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u8be5\u7b56\u7565\u4f1a\u66f4\u52a0\u6fc0\u8fdb\u5e76\u53ca\u65f6\u5730\u8c03\u6574CPU\u9891\u7387\u3002\\r\\n\\r\\n\u603b\u800c\u8a00\u4e4b\uff0c\u7cfb\u7edf\u7684\u72b6\u6001\u4ee5\u53caCPUFreq\u7684\u7b56\u7565\u5171\u540c\u51b3\u5b9a\u4e86CPU\u9891\u7387\u8df3\u53d8\u7684\u76ee\u6807\uff0cCPUFreq\u6838\u5fc3\u5c42\u5e76\u5c06\u76ee\u6807\u9891\u7387\u4f20\u9012\u7ed9\u5e95\u5c42\u5177\u4f53SoC\u7684CPUFreq\u9a71\u52a8\uff0c\u8be5\u9a71\u52a8\u4fee\u6539\u786c\u4ef6\uff0c\u5b8c\u6210\u9891\u7387\u7684\u53d8\u6362\uff0c\u5982\u56fe19.2\u6240\u793a\u3002\\r\\n\\r\\n![1746022458907](./figure/1746022458907.png)\\r\\n\\r\\n\u56fe19.2\u3000CPUFreq\u3001\u7cfb\u7edf\u8d1f\u8f7d\u3001\u7b56\u7565\u4e0e\u8c03\u9891\\r\\n\\r\\n\u7528\u6237\u7a7a\u95f4\u4e00\u822c\u53ef\u901a\u8fc7/sys/devices/system/cpu/cpux/cpufreq\u8282\u70b9\u6765\u8bbe\u7f6eCPUFreq\u3002\u8b6c\u5982\uff0c\u6211\u4eec\u8981\u8bbe\u7f6eCPUFreq\u5230700MHz\uff0c\u91c7\u7528userspace\u7b56\u7565\uff0c\u5219\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\n# echo userspace > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor\\r\\n# echo 700000 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_setspeed\\r\\n```\\r\\n\\r\\n# 19.2.3\u3000CPUFreq\u7684\u6027\u80fd\u6d4b\u8bd5\u548c\u8c03\u4f18\\r\\n\\r\\nLinux 3.1\u4ee5\u540e\u7684\u5185\u6838\u5df2\u7ecf\u5c06cpupower-utils\u5de5\u5177\u96c6\u653e\u5165\u5185\u6838\u7684tools/power/cpupower\u76ee\u5f55\u4e2d\uff0c\u8be5\u5de5\u5177\u96c6\u5f53\u4e2d\u7684cpufreq-bench\u5de5\u5177\u53ef\u4ee5\u5e2e\u52a9\u5de5\u7a0b\u5e08\u5206\u6790\u91c7\u7528CPUFreq\u540e\u5bf9\u7cfb\u7edf\u6027\u80fd\u7684\u5f71\u54cd\u3002\\r\\n\\r\\ncpufreq-bench\u5de5\u5177\u7684\u5de5\u4f5c\u539f\u7406\u662f\u6a21\u62df\u7cfb\u7edf\u8fd0\u884c\u65f6\u5019\u7684\u201c\u7a7a\u95f2\u2192\u5fd9\u2192\u7a7a\u95f2\u2192\u5fd9\u201d\u573a\u666f\uff0c\u4ece\u800c\u89e6\u53d1\u7cfb\u7edf\u7684\u52a8\u6001\u9891\u7387\u53d8\u5316\uff0c\u7136\u540e\u5728\u4f7f\u7528ondemand\u3001conservative\u3001interactive\u7b49\u7b56\u7565\u7684\u60c5\u51b5\u4e0b\uff0c\u8ba1\u7b97\u5728\u505a\u4e0eperformance\u9ad8\u9891\u6a21\u5f0f\u4e0b\u540c\u6837\u7684\u8fd0\u7b97\u5b8c\u6210\u4efb\u52a1\u7684\u65f6\u95f4\u6bd4\u4f8b\u3002\\r\\n\\r\\n\u4ea4\u53c9\u7f16\u8bd1\u8be5\u5de5\u5177\u540e\uff0c\u53ef\u653e\u5165\u76ee\u6807\u7535\u8def\u677f\u6587\u4ef6\u7cfb\u7edf\u7684/usr/sbin/\u7b49\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\u8be5\u5de5\u5177\uff1a\\r\\n\\r\\n```\\r\\n# cpufreq-bench -l 50000 -s 100000 -x 50000 -y 100000 -g ondemand -r 5 -n 5 -v\\r\\n```\\r\\n\\r\\n\u4f1a\u8f93\u51fa\u4e00\u7cfb\u5217\u7684\u7ed3\u679c\uff0c\u6211\u4eec\u63d0\u53d6\u5176\u4e2d\u7684Round n\u8fd9\u6837\u7684\u884c\uff0c\u5b83\u8868\u660e\u4e86-g ondemand\u9009\u9879\u4e2d\u8bbe\u5b9a\u7684ondemand\u7b56\u7565\u76f8\u5bf9\u4e8eperformance\u7b56\u7565\u7684\u6027\u80fd\u6bd4\u4f8b\uff0c\u5047\u8bbe\u503c\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nRound 1 - 39.74%\\r\\nRound 2 - 36.35%\\r\\nRound 3 - 47.91%\\r\\nRound 4 - 54.22%\\r\\nRound 5 - 58.64%\\r\\n```\\r\\n\\r\\n\u8fd9\u663e\u7136\u4e0d\u592a\u7406\u60f3\uff0c\u6211\u4eec\u5728\u540c\u6837\u7684\u5e73\u53f0\u4e0b\u91c7\u7528Android\u7684\u4ea4\u4e92\u7b56\u7565\uff0c\u5f97\u5230\u65b0\u7684\u6d4b\u8bd5\u7ed3\u679c\uff1a\\r\\n\\r\\n```\\r\\nRound 1 - 72.95%\\r\\nRound 2 - 87.20%\\r\\nRound 3 - 91.21%\\r\\nRound 4 - 94.10%\\r\\nRound 5 - 94.93%\\r\\n```\\r\\n\\r\\n\u4e00\u822c\u7684\u76ee\u6807\u662f\u5728\u91c7\u7528CPUFreq\u52a8\u6001\u8c03\u6574\u9891\u7387\u548c\u7535\u538b\u540e\uff0c\u6027\u80fd\u5e94\u8be5\u4e3aperformance\u8fd9\u4e2a\u9ad8\u6027\u80fd\u7b56\u7565\u4e0b\u768490%\u5de6\u53f3\uff0c\u8fd9\u6837\u624d\u6bd4\u8f83\u7406\u60f3\u3002\\r\\n\\r\\n# 19.2.4\u3000CPUFreq\u901a\u77e5\\r\\n\\r\\nCPUFreq\u5b50\u7cfb\u7edf\u4f1a\u53d1\u51fa\u901a\u77e5\u7684\u60c5\u51b5\u6709\u4e24\u79cd\uff1aCPUFreq\u7684\u7b56\u7565\u53d8\u5316\u6216\u8005CPU\u8fd0\u884c\u9891\u7387\u53d8\u5316\u3002\\r\\n\\r\\n\u5728\u7b56\u7565\u53d8\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u53d1\u90013\u6b21\u901a\u77e5\uff1a\\r\\n\\r\\n- \xb7CPUFREQ_ADJUST\uff1a\u6240\u6709\u6ce8\u518c\u7684notifier\u53ef\u4ee5\u6839\u636e\u786c\u4ef6\u6216\u8005\u6e29\u5ea6\u7684\u60c5\u51b5\u53bb\u4fee\u6539\u8303\u56f4\uff08\u5373policy->min\u548cpolicy->max\uff09\uff1b\\r\\n\\r\\n- \xb7CPUFREQ_INCOMPATIBLE\uff1a\u9664\u975e\u524d\u9762\u7684\u7b56\u7565\u8bbe\u5b9a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u786c\u4ef6\u51fa\u9519\uff0c\u5426\u5219\u88ab\u6ce8\u518c\u7684notifier\u4e0d\u80fd\u6539\u53d8\u8303\u56f4\u7b49\u8bbe\u5b9a\uff1b\\r\\n\\r\\n- \xb7CPUFREQ_NOTIFY\uff1a\u6240\u6709\u6ce8\u518c\u7684notifier\u90fd\u4f1a\u88ab\u544a\u77e5\u65b0\u7684\u7b56\u7565\u5df2\u7ecf\u88ab\u8bbe\u7f6e\u3002\\r\\n\\r\\n  \\r\\n\\r\\n\u5728\u9891\u7387\u53d8\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u53d1\u90012\u6b21\u901a\u77e5\uff1a\\r\\n\\r\\n- \xb7CPUFREQ_PRECHANGE\uff1a\u51c6\u5907\u8fdb\u884c\u9891\u7387\u53d8\u66f4\uff1b\\r\\n- \xb7CPUFREQ_POSTCHANGE\uff1a\u5df2\u7ecf\u5b8c\u6210\u9891\u7387\u53d8\u66f4\u3002\\r\\n\\r\\nnotifier\u4e2d\u7684\u7b2c3\u4e2a\u53c2\u6570\u662f\u4e00\u4e2acpufreq_freqs\u7684\u7ed3\u6784\u4f53\uff0c\u5305\u542bcpu\uff08CPU\u53f7\uff09\u3001old\uff08\u8fc7\u53bb\u7684\u9891\u7387\uff09\u548cnew\uff08\u73b0\u5728\u7684\u9891\u7387\uff09\u8fd93\u4e2a\u6210\u5458\u3002\u53d1\u9001CPUFREQ_PRECHANGE\u548cCPUFREQ_POSTCHANGE\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nsrcu_notifier_call_chain(&cpufreq_transition_notifier_list,\\r\\nCPUFREQ_PRECHANGE, freqs);\\r\\nsrcu_notifier_call_chain(&cpufreq_transition_notifier_list,\\r\\nCPUFREQ_POSTCHANGE, freqs);\\r\\n```\\r\\n\\r\\n\u5982\u679c\u67d0\u6a21\u5757\u5173\u5fc3CPUFREQ_PRECHANGE\u6216CPUFREQ_POSTCHANGE\u4e8b\u4ef6\uff0c\u53ef\u7b80\u5355\u5730\u4f7f\u7528Linux notifier\u673a\u5236\u76d1\u63a7\u3002\u8b6c\u5982\uff0cdrivers/video/sa1100fb.c\u5728CPU\u9891\u7387\u53d8\u5316\u8fc7\u7a0b\u4e2d\u9700\u5bf9\u81ea\u8eab\u786c\u4ef6\u8fdb\u884c\u76f8\u5173\u8bbe\u7f6e\uff0c\u56e0\u6b64\u5b83\u6ce8\u518c\u4e86notifier\u5e76\u5728CPUFREQ_PRECHANGE\u548cCPUFREQ_POSTCHANGE\u60c5\u51b5\u4e0b\u5206\u522b\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\uff0c\u5982\u4ee3\u7801\u6e05\u535519.3\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.3\u3000CPUFreq notifier\u6848\u4f8b\\r\\n\\r\\n```\\r\\n 1fbi->freq_transition.notifier_call = sa1100fb_freq_transition;\\r\\n 2cpufreq_register_notifier(&fbi->freq_transition, CPUFREQ_TRANSITION_NOTIFIER);\\r\\n 3...\\r\\n 4sa1100fb_freq_transition(structnotifier_block *nb, unsigned long val,\\r\\n 5void *data)\\r\\n 6{\\r\\n 7 struct sa1100fb_info *fbi = TO_INF(nb, freq_transition);\\r\\n 8 struct cpufreq_freqs *f = data;\\r\\n 9     u_intpcd;\\r\\n10\\r\\n11     switch (val) {\\r\\n12         case CPUFREQ_PRECHANGE:\\r\\n13             set_ctrlr_state(fbi, C_DISABLE_CLKCHANGE);\\r\\n14             break;\\r\\n15         case CPUFREQ_POSTCHANGE:\\r\\n16             pcd = get_pcd(fbi->fb.var.pixclock, f->new);\\r\\n17             fbi->reg_lccr3 = (fbi->reg_lccr3& ~0xff) | LCCR3_PixClkDiv(pcd);\\r\\n18             set_ctrlr_state(fbi, C_ENABLE_CLKCHANGE);\\r\\n19             break;\\r\\n20     }\\r\\n21     return 0;\\r\\n22}\\r\\n```\\r\\n\\r\\n\u6b64\u5916\uff0c\u5982\u679c\u5728\u7cfb\u7edf\u6302\u8d77/\u6062\u590d\u7684\u8fc7\u7a0b\u4e2dCPU\u9891\u7387\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5219CPUFreq\u5b50\u7cfb\u7edf\u4e5f\u4f1a\u53d1\u51faCPUFREQ_SUSPENDCHANGE\u548cCPUFREQ_RESUMECHANGE\u8fd9\u4e24\u4e2a\u901a\u77e5\u3002\\r\\n\\r\\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u9664\u4e86CPU\u4ee5\u5916\uff0c\u4e00\u4e9b\u975eCPU\u8bbe\u5907\u4e5f\u652f\u6301\u591a\u4e2a\u64cd\u4f5c\u9891\u7387\u548c\u7535\u538b\uff0c\u5b58\u5728\u591a\u4e2aOPP\u3002Linux 3.2\u4e4b\u540e\u7684\u5185\u6838\u4e5f\u652f\u6301\u9488\u5bf9\u8fd9\u79cd\u975eCPU\u8bbe\u5907\u7684DVFS\uff0c\u8be5\u5957\u5b50\u7cfb\u7edf\u4e3aDevfreq\u3002\u4e0eCPUFreq\u5b58\u5728\u4e00\u4e2adrivers/cpufreq\u76ee\u5f55\u76f8\u4f3c\uff0c\u5728\u5185\u6838\u4e2d\u4e5f\u5b58\u5728\u4e00\u4e2adrivers/devfreq\u7684\u76ee\u5f55\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8.md","title":"1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","description":"\u5e76\u4e0d\u662f\u4efb\u4f55\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u90fd\u4e00\u5b9a\u8981\u6709\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u90fd\u4e0d\u5fc5\u5b58\u5728\u3002\u5bf9\u4e8e\u529f\u80fd\u6bd4\u8f83\u5355\u4e00\u3001\u63a7\u5236\u5e76\u4e0d\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u8b6c\u5982ASIC\u5185\u90e8\u3001\u516c\u4ea4\u8f66\u7684\u5237\u5361\u673a\u3001\u7535\u51b0\u7bb1\u3001\u5fae\u6ce2\u7089\u3001\u7b80\u5355\u7684\u624b\u673a\u548c\u5c0f\u7075\u901a\u7b49\uff0c\u5e76\u4e0d\u9700\u8981\u591a\u4efb\u52a1\u8c03\u5ea6\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u5185\u5b58\u7ba1\u7406\u7b49\u590d\u6742\u529f\u80fd\uff0c\u7528\u5355\u4efb\u52a1\u67b6\u6784\u5b8c\u5168\u53ef\u4ee5\u826f\u597d\u5730\u652f\u6301\u5b83\u4eec\u7684\u5de5\u4f5c\u3002\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u4e2d\u5939\u6742\u7740\u5bf9\u8bbe\u5907\u4e2d\u65ad\u7684\u68c0\u6d4b\u6216\u8005\u5bf9\u8bbe\u5907\u7684\u8f6e\u8be2\u662f\u8fd9\u79cd\u7cfb\u7edf\u4e2d\u8f6f\u4ef6\u7684\u5178\u578b\u67b6\u6784\uff0c\u5982\u4ee3\u7801\u6e05\u53551.1\u6240\u793a\u3002","date":"2025-09-15T14:44:14.605Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.605,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.2\u3000CPUFreq\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8"}},"content":"\u5e76\u4e0d\u662f\u4efb\u4f55\u4e00\u4e2a\u8ba1\u7b97\u673a\u7cfb\u7edf\u90fd\u4e00\u5b9a\u8981\u6709\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u90fd\u4e0d\u5fc5\u5b58\u5728\u3002\u5bf9\u4e8e\u529f\u80fd\u6bd4\u8f83\u5355\u4e00\u3001\u63a7\u5236\u5e76\u4e0d\u590d\u6742\u7684\u7cfb\u7edf\uff0c\u8b6c\u5982ASIC\u5185\u90e8\u3001\u516c\u4ea4\u8f66\u7684\u5237\u5361\u673a\u3001\u7535\u51b0\u7bb1\u3001\u5fae\u6ce2\u7089\u3001\u7b80\u5355\u7684\u624b\u673a\u548c\u5c0f\u7075\u901a\u7b49\uff0c\u5e76\u4e0d\u9700\u8981\u591a\u4efb\u52a1\u8c03\u5ea6\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u5185\u5b58\u7ba1\u7406\u7b49\u590d\u6742\u529f\u80fd\uff0c\u7528\u5355\u4efb\u52a1\u67b6\u6784\u5b8c\u5168\u53ef\u4ee5\u826f\u597d\u5730\u652f\u6301\u5b83\u4eec\u7684\u5de5\u4f5c\u3002\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u4e2d\u5939\u6742\u7740\u5bf9\u8bbe\u5907\u4e2d\u65ad\u7684\u68c0\u6d4b\u6216\u8005\u5bf9\u8bbe\u5907\u7684\u8f6e\u8be2\u662f\u8fd9\u79cd\u7cfb\u7edf\u4e2d\u8f6f\u4ef6\u7684\u5178\u578b\u67b6\u6784\uff0c\u5982\u4ee3\u7801\u6e05\u53551.1\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53551.1\u3000\u5355\u4efb\u52a1\u8f6f\u4ef6\u5178\u578b\u67b6\u6784\\r\\n\\r\\n```\\r\\n 1 int main(int argc, char* argv[])\\r\\n 2 {\\r\\n 3   while (1)\\r\\n 4   {\\r\\n 5     if (serialInt == 1)\\r\\n 6     /* \u6709\u4e32\u53e3\u4e2d\u65ad\\r\\n */\\r\\n 7     {\\r\\n 8       ProcessSerialInt();   /* \u5904\u7406\u4e32\u53e3\u4e2d\u65ad\\r\\n */\\r\\n 9       serialInt = 0;        /* \u4e2d\u65ad\u6807\u5fd7\u53d8\u91cf\u6e05\\r\\n0 */\\r\\n10     }\\r\\n11     if (keyInt == 1)\\r\\n12     /* \u6709\u6309\u952e\u4e2d\u65ad\\r\\n */\\r\\n13     {\\r\\n14       ProcessKeyInt();     /* \u5904\u7406\u6309\u952e\u4e2d\u65ad\\r\\n */\\r\\n15       keyInt = 0;          /* \u4e2d\u65ad\u6807\u5fd7\u53d8\u91cf\u6e05\\r\\n0 */\\r\\n16     }\\r\\n17     status = CheckXXX();\\r\\n18     switch (status)\\r\\n19     {\\r\\n20       ...\\r\\n21     }\\r\\n22     ...\\r\\n23   }\\r\\n24 }\\r\\n```\\r\\n\\r\\n\u5728\u8fd9\u6837\u7684\u7cfb\u7edf\u4e2d\uff0c\u867d\u7136\u4e0d\u5b58\u5728\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f46\u662f\u8bbe\u5907\u9a71\u52a8\u5219\u65e0\u8bba\u5982\u4f55\u90fd\u5fc5\u987b\u5b58\u5728\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e00\u79cd\u8bbe\u5907\u9a71\u52a8\u90fd\u4f1a\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u8f6f\u4ef6\u6a21\u5757\uff0c\u5305\u542b.h\u6587\u4ef6\u548c.c\u6587\u4ef6\uff0c\u524d\u8005\u5b9a\u4e49\u8be5\u8bbe\u5907\u9a71\u52a8\u7684\u6570\u636e\u7ed3\u6784\u5e76\u58f0\u660e\u5916\u90e8\u51fd\u6570\uff0c\u540e\u8005\u8fdb\u884c\u9a71\u52a8\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u8b6c\u5982\uff0c\u53ef\u4ee5\u50cf\u4ee3\u7801\u6e05\u53551.2\u90a3\u6837\u5b9a\u4e49\u4e00\u4e2a\u4e32\u53e3\u7684\u9a71\u52a8\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53551.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u60c5\u51b5\u4e0b\u4e32\u53e3\u7684\u9a71\u52a8\\r\\n\\r\\n```\\r\\n 1  /**********************\\r\\n 2   *serial.h\u6587\u4ef6\\r\\n\\r\\n\\r\\n\\r\\n 3   **********************/\\r\\n 4  extern void SerialInit(void);\\r\\n 5  extern void SerialSend(const char buf*,int count);\\r\\n 6  extern void SerialRecv(char buf*,int count);\\r\\n 7  \\r\\n 8  /**********************\\r\\n 9   *serial.c\u6587\u4ef6\\r\\n\\r\\n\\r\\n\\r\\n10   **********************/\\r\\n11  /* \u521d\u59cb\u5316\u4e32\u53e3\\r\\n\\r\\n\\r\\n */\\r\\n12  void SerialInit(void)\\r\\n13  {\\r\\n14   ...\\r\\n15  }\\r\\n16  /* \u4e32\u53e3\u53d1\u9001\\r\\n\\r\\n\\r\\n */\\r\\n17  void SerialSend(const char buf*,int count)\\r\\n18  {\\r\\n19   ...\\r\\n20  }\\r\\n21  /* \u4e32\u53e3\u63a5\u6536\\r\\n\\r\\n\\r\\n */\\r\\n22  void SerialRecv(char buf*,int count)\\r\\n23  {\\r\\n24   ...\\r\\n25  }\\r\\n26  /* \u4e32\u53e3\u4e2d\u65ad\u5904\u7406\u51fd\u6570\\r\\n\\r\\n\\r\\n */\\r\\n27  void SerialIsr(void)\\r\\n28  {\\r\\n29   ...\\r\\n30   serialInt = 1;\\r\\n31 }\\r\\n```\\r\\n\\r\\n\u5176\u4ed6\u6a21\u5757\u60f3\u8981\u4f7f\u7528\u8fd9\u4e2a\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5305\u542b\u8bbe\u5907\u9a71\u52a8\u7684\u5934\u6587\u4ef6serial.h\uff0c\u7136\u540e\u8c03\u7528\u5176\u4e2d\u7684\u5916\u90e8\u63a5\u53e3\u51fd\u6570\u3002\u5982\u8981\u4ece\u4e32\u53e3\u4e0a\u53d1\u9001\u201cHello World\u201d\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528\u8bed\u53e5SerialSend\uff08\u201cHello World\u201d\uff0c11\uff09\u5373\u53ef\u3002\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0c\u5728\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\u7684\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5907\u9a71\u52a8\u7684\u63a5\u53e3\u88ab\u76f4\u63a5\u63d0\u4ea4\u7ed9\u5e94\u7528\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u5e94\u7528\u8f6f\u4ef6\u6ca1\u6709\u8de8\u8d8a\u4efb\u4f55\u5c42\u6b21\u5c31\u76f4\u63a5\u8bbf\u95ee\u8bbe\u5907\u9a71\u52a8\u7684\u63a5\u53e3\u3002\u9a71\u52a8\u5305\u542b\u7684\u63a5\u53e3\u51fd\u6570\u4e5f\u4e0e\u786c\u4ef6\u7684\u529f\u80fd\u76f4\u63a5\u543b\u5408\uff0c\u6ca1\u6709\u4efb\u4f55\u9644\u52a0\u529f\u80fd\u3002\u56fe1.1\u6240\u793a\u4e3a\u65e0\u64cd\u4f5c\u7cfb\u7edf\u60c5\u51b5\u4e0b\u786c\u4ef6\u3001\u8bbe\u5907\u9a71\u52a8\u4e0e\u5e94\u7528\u8f6f\u4ef6\u7684\u5173\u7cfb\u3002\\r\\n\\r\\n![1742482124707](./figure/1742482124707.png)\\r\\n\\r\\n\u56fe1.1\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u786c\u4ef6\u3001\u8bbe\u5907\u9a71\u52a8\u548c\u5e94\u7528\u8f6f\u4ef6\u7684\u5173\u7cfb\\r\\n\\r\\n\u6709\u7684\u5de5\u7a0b\u5e08\u628a\u5355\u4efb\u52a1\u7cfb\u7edf\u8bbe\u8ba1\u6210\u4e86\u5982\u56fe1.2\u6240\u793a\u7684\u7ed3\u6784\uff0c\u5373\u8bbe\u5907\u9a71\u52a8\u548c\u5177\u4f53\u7684\u5e94\u7528\u8f6f\u4ef6\u6a21\u5757\u4e4b\u95f4\u5e73\u7b49\uff0c\u9a71\u52a8\u4e2d\u5305\u542b\u4e86\u4e1a\u52a1\u5c42\u9762\u4e0a\u7684\u5904\u7406\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u5408\u7406\u7684\uff0c\u4e0d\u7b26\u5408\u8f6f\u4ef6\u8bbe\u8ba1\u4e2d\u9ad8\u5185\u805a\u3001\u4f4e\u8026\u5408\u7684\u8981\u6c42\u3002\\r\\n\\r\\n\u53e6\u4e00\u79cd\u4e0d\u5408\u7406\u7684\u8bbe\u8ba1\u662f\u76f4\u63a5\u5728\u5e94\u7528\u4e2d\u64cd\u4f5c\u786c\u4ef6\u7684\u5bc4\u5b58\u5668\uff0c\u800c\u4e0d\u5355\u72ec\u8bbe\u8ba1\u9a71\u52a8\u6a21\u5757\uff0c\u5982\u56fe1.3\u6240\u793a\u3002\u8fd9\u79cd\u8bbe\u8ba1\u610f\u5473\u7740\u7cfb\u7edf\u4e2d\u4e0d\u5b58\u5728\u6216\u672a\u80fd\u5145\u5206\u5229\u7528\u53ef\u91cd\u7528\u7684\u9a71\u52a8\u4ee3\u7801\u3002\\r\\n\\r\\n![image-20250320224927891](./figure/image-20250320224927891.png)\\r\\n\\r\\n\u56fe1.2\u3000\u9a71\u52a8\u4e0e\u5e94\u7528\u9ad8\u8026\u5408\u7684\u4e0d\u5408\u7406\u8bbe\u8ba1\\r\\n\\r\\n![1742482187369](./figure/1742482187369.png)\\r\\n\\r\\n\u56fe1.3\u3000\u5e94\u7528\u76f4\u63a5\u8bbf\u95ee\u786c\u4ef6\u7684\u4e0d\u5408\u7406\u8bbe\u8ba1"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8","description":"dmaengine\u662f\u4e00\u5957\u901a\u7528\u7684DMA\u9a71\u52a8\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u4e3a\u5177\u4f53\u4f7f\u7528DMA\u901a\u9053\u7684\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u4e86\u4e00\u5957\u7edf\u4e00\u7684API\uff0c\u800c\u4e14\u4e5f\u5b9a\u4e49\u4e86\u7528\u5177\u4f53\u7684DMA\u63a7\u5236\u5668\u5b9e\u73b0\u8fd9\u4e00\u5957API\u7684\u65b9\u6cd5\u3002","date":"2025-09-15T14:44:14.601Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.06,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.2\u3000\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8"}},"content":"dmaengine\u662f\u4e00\u5957\u901a\u7528\u7684DMA\u9a71\u52a8\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u4e3a\u5177\u4f53\u4f7f\u7528DMA\u901a\u9053\u7684\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u4e86\u4e00\u5957\u7edf\u4e00\u7684API\uff0c\u800c\u4e14\u4e5f\u5b9a\u4e49\u4e86\u7528\u5177\u4f53\u7684DMA\u63a7\u5236\u5668\u5b9e\u73b0\u8fd9\u4e00\u5957API\u7684\u65b9\u6cd5\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u4f7f\u7528DMA\u5f15\u64ce\u7684\u8bbe\u5907\u9a71\u52a8\u800c\u8a00\uff0c\u53d1\u8d77DMA\u4f20\u8f93\u7684\u8fc7\u7a0b\u53d8\u5f97\u6574\u6d01\u4e86\uff0c\u5982\u5728sound\u5b50\u7cfb\u7edf\u7684sound/soc/soc-dmaengine-pcm.c\u4e2d\uff0c\u4f1a\u4f7f\u7528dmaengine\u8fdb\u884c\u5468\u671f\u6027\u7684DMA\u4f20\u8f93\uff0c\u76f8\u5173\u7684\u4ee3\u7801\u5982\u6e05\u535520.27\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.27\u3000dmaengine API\u7684\u4f7f\u7528\\r\\n\\r\\n```\\r\\n 1static int dmaengine_pcm_prepare_and_submit(struct snd_pcm_substream *substream)\\r\\n 2{\\r\\n 3         struct dmaengine_pcm_runtime_data *prtd = substream_to_prtd(substream);\\r\\n 4         struct dma_chan *chan = prtd->dma_chan;\\r\\n 5         struct dma_async_tx_descriptor *desc;\\r\\n 6         enum dma_transfer_direction direction;\\r\\n 7         unsigned long flags = DMA_CTRL_ACK;\\r\\n 8\\r\\n 9         \u2026\\r\\n10         desc = dmaengine_prep_dma_cyclic(chan,\\r\\n11                 substream->runtime->dma_addr,\\r\\n12                 snd_pcm_lib_buffer_bytes(substream),\\r\\n13                 snd_pcm_lib_period_bytes(substream), direction, flags);\\r\\n14\u2026\\r\\n15         desc->callback = dmaengine_pcm_dma_complete;\\r\\n16         desc->callback_param = substream;\\r\\n17         prtd->cookie = dmaengine_submit(desc);\\r\\n18}\\r\\n19\\r\\n20int snd_dmaengine_pcm_trigger(struct snd_pcm_substream *substream, int cmd)\\r\\n21{\\r\\n22        struct dmaengine_pcm_runtime_data *prtd = substream_to_prtd(substream);\\r\\n23        int ret;\\r\\n24        switch (cmd) {\\r\\n25        case SNDRV_PCM_TRIGGER_START:\\r\\n26                ret = dmaengine_pcm_prepare_and_submit(substream);\\r\\n27                \u2026\\r\\n28                dma_async_issue_pending(prtd->dma_chan);\\r\\n29                break;\\r\\n30        case SNDRV_PCM_TRIGGER_RESUME:\\r\\n31        case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:\\r\\n32                dmaengine_resume(prtd->dma_chan);\\r\\n33                break;\\r\\n34        \u2026\\r\\n35}\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u5206\u4e3a4\u6b65\uff1a\\r\\n\\r\\n1\uff09\u901a\u8fc7dmaengine_prep_dma_xxx\uff08\uff09\u521d\u59cb\u5316\u4e00\u4e2a\u5177\u4f53\u7684DMA\u4f20\u8f93\u63cf\u8ff0\u7b26\uff08\u672c\u4f8b\u4e2d\u4e3a\u7ed3\u6784\u4f53dma_async_tx_descriptor\u7684\u5b9e\u4f8bdesc\uff0c\u672c\u4f8b\u662f\u4e00\u4e2a\u5468\u671f\u6027DMA\uff0c\u56e0\u6b64\u7b2c10\u884c\u8c03\u7528\u7684\u662fdmaengine_prep_dma_cyclic\uff08\uff09\uff09\u3002\\r\\n\\r\\n2\uff09\u901a\u8fc7dmaengine_submit\uff08\uff09\u5c06\u8be5\u63cf\u8ff0\u7b26\u63d2\u5165dmaengine\u9a71\u52a8\u7684\u4f20\u8f93\u961f\u5217\uff08\u89c1\u7b2c17\u884c\uff09\u3002\\r\\n\\r\\n3\uff09\u5728\u9700\u8981\u4f20\u8f93\u7684\u65f6\u5019\u901a\u8fc7\u7c7b\u4f3cdma_async_issue_pending\uff08\uff09\u7684\u8c03\u7528\u542f\u52a8\u5bf9\u5e94DMA\u901a\u9053\u4e0a\u7684\u4f20\u8f93\uff08\u89c1\u7b2c28\u884c\uff09\u3002\\r\\n\\r\\n4\uff09DMA\u7684\u5b8c\u6210\uff0c\u6216\u8005\u5468\u671f\u6027DMA\u5b8c\u6210\u4e86\u4e00\u4e2a\u5468\u671f\uff0c\u90fd\u4f1a\u5f15\u53d1DMA\u4f20\u8f93\u63cf\u8ff0\u7b26\u7684\u5b8c\u6210\u56de\u8c03\u51fd\u6570\u88ab\u8c03\u7528\uff08\u672c\u4f8b\u4e2d\u7684\u8d4b\u503c\u5728\u7b2c15\u884c\uff0c\u5bf9\u5e94\u7684\u56de\u8c03\u51fd\u6570\u662fdmaengine_pcm_dma_complete\uff09\u3002\\r\\n\\r\\n\u4e5f\u5c31\u662f\u4e0d\u7ba1\u5177\u4f53\u786c\u4ef6\u7684DMA\u63a7\u5236\u5668\u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff0c\u5728\u8f6f\u4ef6\u610f\u4e49\u4e0a\u90fd\u62bd\u8c61\u4e3a\u4e86\u8bbe\u7f6eDMA\u63cf\u8ff0\u7b26\u3001\u5c06DMA\u63cf\u8ff0\u7b26\u63d2\u5165\u4f20\u8f93\u961f\u5217\u4ee5\u53ca\u542f\u52a8DMA\u4f20\u8f93\u7684\u8fc7\u7a0b\u3002\\r\\n\\r\\n\u9664\u4e86\u524d\u6587\u63d0\u5230\u7684\u7528dmaengine_prep_dma_cyclic\uff08\uff09\u5b9a\u4e49\u5468\u671f\u6027DMA\u4f20\u8f93\u5916\uff0c\u8fd8\u6709\u4e00\u7ec4\u7c7b\u4f3c\u7684API\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u5404\u79cd\u7c7b\u578b\u7684DMA\u63cf\u8ff0\u7b26\uff0c\u7279\u5b9a\u786c\u4ef6\u7684DMA\u9a71\u52a8\u7684\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u5b9e\u73b0\u5c01\u88c5\u5728\u5185\u6838dma_device\u7ed3\u6784\u4f53\u4e2d\u7684\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\uff08\u5b9a\u4e49\u5728include/linux/dmaengine.h\u5934\u6587\u4ef6\u4e2d\uff09\uff1a\\r\\n\\r\\n```\\r\\n/**\\r\\n * struct dma_device - info on the entity supplying DMA services\\r\\n * @device_prep_dma_memcpy: prepares a memcpy operation\\r\\n * @device_prep_dma_xor: prepares a xor operation\\r\\n * @device_prep_dma_xor_val: prepares a xor validation operation\\r\\n * @device_prep_dma_pq: prepares a pq operation\\r\\n * @device_prep_dma_pq_val: prepares a pqzero_sum operation\\r\\n * @device_prep_dma_memset: prepares a memset operation\\r\\n * @device_prep_dma_interrupt: prepares an end of chain interrupt operation\\r\\n * @device_prep_slave_sg: prepares a slave dma operation\\r\\n * @device_prep_dma_cyclic: prepare a cyclic dma operation suitable for audio.\\r\\n *      The function takes a buffer of size buf_len. The callback function will\\r\\n *      be called after period_len bytes have been transferred.\\r\\n * @device_prep_interleaved_dma: Transfer expression in a generic way.\\r\\n */\\r\\n```\\r\\n\\r\\n\u5728\u5e95\u5c42\u7684dmaengine\u9a71\u52a8\u5b9e\u4f8b\u4e2d\uff0c\u4e00\u822c\u4f1a\u7ec4\u7ec7\u597d\u8fd9\u4e2adma_device\u7ed3\u6784\u4f53\uff0c\u5e76\u901a\u8fc7dma_async_device_register\uff08\uff09\u5b8c\u6210\u6ce8\u518c\u3002\u5728\u5176\u5404\u4e2a\u6210\u5458\u51fd\u6570\u4e2d\uff0c\u4e00\u822c\u4f1a\u901a\u8fc7\u94fe\u8868\u6765\u7ba1\u7406DMA\u63cf\u8ff0\u7b26\u7684\u8fd0\u884c\u3001free\u7b49\u961f\u5217\u3002\\r\\n\\r\\ndma_device\u7684\u6210\u5458\u51fd\u6570device_issue_pending\uff08\uff09\u7528\u4e8e\u5b9e\u73b0DMA\u4f20\u8f93\u5f00\u542f\u7684\u529f\u80fd\uff0c\u6bcf\u5f53DMA\u4f20\u8f93\u5b8c\u6210\u540e\uff0c\u5728\u9a71\u52a8\u4e2d\u6ce8\u518c\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7684\u9876\u534a\u90e8\u6216\u8005\u5e95\u534a\u90e8\u4f1a\u8c03\u7528DMA\u63cf\u8ff0\u7b26dma_async_tx_descriptor\u4e2d\u8bbe\u7f6e\u7684\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u56de\u8c03\u51fd\u6570\u6765\u6e90\u4e8e\u4f7f\u7528DMA\u901a\u9053\u7684\u8bbe\u5907\u9a71\u52a8\u3002\\r\\n\\r\\n\u5178\u578b\u7684dmaengine\u9a71\u52a8\u53ef\u89c1\u4e8edrivers/dma/\u76ee\u5f55\u4e0b\u7684sirf-dma.c\u3001omap-dma.c\u3001pl330.c\u3001ste_dma40.c\u7b49\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8","description":"\u76ee\u524d\u7684ARM SoC\u5927\u591a\u652f\u6301\u51e0\u4e2a\u4e0d\u540c\u7684Idle\u7ea7\u522b\uff0cCPUIdle\u9a71\u52a8\u5b50\u7cfb\u7edf\u5b58\u5728\u7684\u76ee\u7684\u5c31\u662f\u5bf9\u8fd9\u4e9bIdle\u72b6\u6001\u8fdb\u884c\u7ba1\u7406\uff0c\u5e76\u6839\u636e\u7cfb\u7edf\u7684\u8fd0\u884c\u60c5\u51b5\u8fdb\u5165\u4e0d\u540c\u7684Idle\u7ea7\u522b\u3002\u5177\u4f53SoC\u7684\u5e95\u5c42CPUIdle\u9a71\u52a8\u5b9e\u73b0\u5219\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u4f3c\u4e8eCPUFreq\u9a71\u52a8\u9891\u7387\u8868\u7684Idle\u7ea7\u522b\u8868\uff0c\u5e76\u5b9e\u73b0\u5404\u79cd\u4e0d\u540cIdle\u72b6\u6001\u7684\u8fdb\u5165\u548c\u9000\u51fa\u6d41\u7a0b\u3002","date":"2025-09-15T14:44:14.593Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":5.785,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.9\u3000dmaengine\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e"}},"content":"\u76ee\u524d\u7684ARM SoC\u5927\u591a\u652f\u6301\u51e0\u4e2a\u4e0d\u540c\u7684Idle\u7ea7\u522b\uff0cCPUIdle\u9a71\u52a8\u5b50\u7cfb\u7edf\u5b58\u5728\u7684\u76ee\u7684\u5c31\u662f\u5bf9\u8fd9\u4e9bIdle\u72b6\u6001\u8fdb\u884c\u7ba1\u7406\uff0c\u5e76\u6839\u636e\u7cfb\u7edf\u7684\u8fd0\u884c\u60c5\u51b5\u8fdb\u5165\u4e0d\u540c\u7684Idle\u7ea7\u522b\u3002\u5177\u4f53SoC\u7684\u5e95\u5c42CPUIdle\u9a71\u52a8\u5b9e\u73b0\u5219\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u4f3c\u4e8eCPUFreq\u9a71\u52a8\u9891\u7387\u8868\u7684Idle\u7ea7\u522b\u8868\uff0c\u5e76\u5b9e\u73b0\u5404\u79cd\u4e0d\u540cIdle\u72b6\u6001\u7684\u8fdb\u5165\u548c\u9000\u51fa\u6d41\u7a0b\u3002\\r\\n\\r\\n\u5bf9\u4e8eIntel\u7cfb\u5217\u7b14\u8bb0\u672c\u8ba1\u7b97\u673a\u800c\u8a00\uff0c\u652f\u6301ACPI\uff08Advanced Configuration and Power Interface\uff0c\u9ad8\u7ea7\u914d\u7f6e\u548c\u7535\u6e90\u63a5\u53e3\uff09\uff0c\u4e00\u822c\u67094\u4e2a\u4e0d\u540c\u7684C\u72b6\u6001\uff08\u5176\u4e2dC0\u4e3a\u64cd\u4f5c\u72b6\u6001\uff0cC1\u662fHalt\u72b6\u6001\uff0cC2\u662fStop-Clock\u72b6\u6001\uff0cC3\u662fSleep\u72b6\u6001\uff09\uff0c\u5982\u886819.3\u6240\u793a\u3002\\r\\n\\r\\n\u886819.3\u30004\u4e2a\u4e0d\u540c\u7684C\u72b6\u6001\\r\\n\\r\\n![1746023437149](./figure/1746023437149.png)\\r\\n\\r\\n\u800c\u5bf9\u4e8eARM\u800c\u8a00\uff0c\u5404\u4e2aSoC\u5bf9\u4e8eIdle\u7684\u5b9e\u73b0\u65b9\u6cd5\u5dee\u5f02\u6bd4\u8f83\u5927\uff0c\u6700\u7b80\u5355\u7684Idle\u7ea7\u522b\u83ab\u8fc7\u4e8e\u5c06CPU\u6838\u7f6e\u4e8eWFI\uff08\u7b49\u5f85\u4e2d\u65ad\u53d1\u751f\uff09\u72b6\u6001\uff0c\u56e0\u6b64\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u82e5SoC\u672a\u5b9e\u73b0\u81ea\u8eab\u7684\u82af\u7247\u7ea7CPUIdle\u9a71\u52a8\uff0c\u5219\u4f1a\u8fdb\u5165cpu_do_idle\uff08\uff09\uff0c\u5bf9\u4e8eARM V7\u800c\u8a00\uff0c\u5176\u5b9e\u73b0\u4f4d\u4e8earch/arm/mm/proc-v7.S\u4e2d\uff1a\\r\\n\\r\\n```\\r\\nENTRY(cpu_v7_do_idle)\\r\\ndsb                                     @ WFI may enter a low-power mode\\r\\nwfi\\r\\nmov    pc, lr\\r\\nENDPROC(cpu_v7_do_idle)\\r\\n```\\r\\n\\r\\n\u4e0eCPUFreq\u7c7b\u4f3c\uff0cCPUIdle\u7684\u6838\u5fc3\u5c42\u63d0\u4f9b\u4e86\u5982\u4e0bAPI\u4ee5\u7528\u4e8e\u6ce8\u518c\u4e00\u4e2acpuidle_driver\u7684\u5b9e\u4f8b\uff1a\\r\\n\\r\\n```\\r\\nintcpuidle_register_driver(struct cpuidle_driver *drv);\\r\\n```\\r\\n\\r\\n\u5e76\u63d0\u4f9b\u4e86\u5982\u4e0bAPI\u6765\u6ce8\u518c\u4e00\u4e2acpuidle_device\uff1a\\r\\n\\r\\n```\\r\\nint cpuidle_register_device(struct cpuidle_device *dev);\\r\\n```\\r\\n\\r\\nCPUIdle\u9a71\u52a8\u5fc5\u987b\u9488\u5bf9\u6bcf\u4e2aCPU\u6ce8\u518c\u76f8\u5e94\u7684cpuidle_device\uff0c\u8fd9\u610f\u5473\u7740\u5bf9\u4e8e\u591a\u6838CPU\u800c\u8a00\uff0c\u9700\u8981\u9488\u5bf9\u6bcf\u4e2aCPU\u6ce8\u518c\u4e00\u6b21\u3002\\r\\n\\r\\ncpuidle_register_driver\uff08\uff09\u63a5\u53d71\u4e2acpuidle_driver\u7ed3\u6784\u4f53\u7684\u6307\u9488\u53c2\u6570\uff0c\u8be5\u7ed3\u6784\u4f53\u662fCPUIdle\u9a71\u52a8\u7684\u4e3b\u4f53\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535519.4\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.4\u3000cpuidle_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct cpuidle_driver {\\r\\n 2 const char            *name;\\r\\n 3 struct module         *owner;\\r\\n 4\\r\\n 5 unsigned int          power_specified:1;\\r\\n 6      /* set to 1 to use the core cpuidle time keeping (for all states). */\\r\\n 7 unsigned int          en_core_tk_irqen:1;\\r\\n 8 struct cpuidle_state   states[CPUIDLE_STATE_MAX];\\r\\n 9 int state_count;\\r\\n10 int safe_state_index;\\r\\n11};\\r\\n```\\r\\n\\r\\n\u8be5\u7ed3\u6784\u4f53\u7684\u5173\u952e\u6210\u5458\u662f1\u4e2acpuidle_state\u7684\u8868\uff0c\u5176\u5b9e\u8be5\u8868\u5c31\u662f\u7528\u4e8e\u5b58\u50a8\u5404\u79cd\u4e0d\u540cIdle\u7ea7\u522b\u7684\u4fe1\u606f\uff0c\u5b83\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535519.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.5\u3000cpuidle_state\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct cpuidle_state {\\r\\n 2 char name[CPUIDLE_NAME_LEN];\\r\\n 3 chardesc[CPUIDLE_DESC_LEN];\\r\\n 4\\r\\n 5 unsigned int    flags;\\r\\n 6 unsigned intexit_latency; /* in US */\\r\\n 7 int power_usage; /* in mW */\\r\\n 8 unsigned inttarget_residency; /* in US */\\r\\n 9 bool          disabled; /* disabled on all CPUs */\\r\\n10\\r\\n11 int (*enter)    (struct cpuidle_device *dev,\\r\\n12     struct cpuidle_driver *drv,\\r\\n13     int index);\\r\\n14\\r\\n15 int (*enter_dead) (struct cpuidle_device *dev, int index);\\r\\n16};\\r\\n```\\r\\n\\r\\nname\u548cdesc\u662f\u8be5Idle\u72b6\u6001\u7684\u540d\u79f0\u548c\u63cf\u8ff0\uff0cexit_latency\u662f\u9000\u51fa\u8be5Idle\u72b6\u6001\u9700\u8981\u7684\u5ef6\u8fdf\uff0center\uff08\uff09\u662f\u8fdb\u5165\u8be5Idle\u72b6\u6001\u7684\u5b9e\u73b0\u65b9\u6cd5\u3002\\r\\n\\r\\n\u5ffd\u7565\u7ec6\u8282\uff0c\u4e00\u4e2a\u5177\u4f53\u7684SoC\u7684CPUIdle\u9a71\u52a8\u5b9e\u4f8b\u53ef\u89c1\u4e8earch/arm/mach-ux500/cpuidle.c\uff08\u6700\u65b0\u7684\u5185\u6838\u5df2\u7ecf\u5c06\u4ee3\u7801\u8f6c\u79fb\u5230\u4e86drivers/cpuidle/cpuidle-ux500.c\u4e2d\uff09\uff0c\u5b83\u6709\u4e24\u4e2aIdle\u7ea7\u522b\uff0c\u5373WFI\u548cApIdle\uff0c\u5176\u5177\u4f53\u5b9e\u73b0\u6846\u67b6\u5982\u4ee3\u7801\u6e05\u535519.6\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.6\u3000ux500CPUIdle\u9a71\u52a8\u6848\u4f8b\\r\\n\\r\\n```\\r\\n 1staticatomic_t master = ATOMIC_INIT(0);\\r\\n 2static DEFINE_SPINLOCK(master_lock);\\r\\n 3static DEFINE_PER_CPU(struct cpuidle_device, ux500_cpuidle_device);\\r\\n 4\\r\\n 5static inline int ux500_enter_idle(struct cpuidle_device *dev,\\r\\n 6              struct cpuidle_driver *drv, int index)\\r\\n 7{\\r\\n 8 \u2026\\r\\n 9}\\r\\n10\\r\\n11staticstruct cpuidle_driver ux500_idle_driver = {\\r\\n12 .name = \\"ux500_idle\\",\\r\\n13 .owner = THIS_MODULE,\\r\\n14 .en_core_tk_irqen = 1,\\r\\n15 .states = {\\r\\n16     ARM_CPUIDLE_WFI_STATE,\\r\\n17     {\\r\\n18         .enter         = ux500_enter_idle,\\r\\n19         .exit_latency  = 70,\\r\\n20         .target_residency = 260,\\r\\n21         .flags          = CPUIDLE_FLAG_TIME_VALID,\\r\\n22         .name          = \\"ApIdle\\",\\r\\n23         .desc          = \\"ARM Retention\\",\\r\\n24     },\\r\\n25 },\\r\\n26 .safe_state_index = 0,\\r\\n27 .state_count = 2,\\r\\n28};\\r\\n29\\r\\n30/*\\r\\n31 * For each cpu, setup the broadcast timer because we will\\r\\n32 * need to migrate the timers for the states >= ApIdle.\\r\\n33 */\\r\\n34static void ux500_setup_broadcast_timer(void *arg)\\r\\n35{\\r\\n36 intcpu = smp_processor_id();\\r\\n37 clockevents_notify(CLOCK_EVT_NOTIFY_BROADCAST_ON, &cpu);\\r\\n38}\\r\\n39\\r\\n40int __init ux500_idle_init(void)\\r\\n41{\\r\\n42 \u2026\\r\\n43 ret = cpuidle_register_driver(&ux500_idle_driver);\\r\\n44 \u2026\\r\\n45 for_each_online_cpu(cpu) {\\r\\n46     device = &per_cpu(ux500_cpuidle_device, cpu);\\r\\n47     device->cpu = cpu;\\r\\n48     ret = cpuidle_register_device(device);\\r\\n49     \u2026\\r\\n50 }\\r\\n51 \u2026\\r\\n52}\\r\\n53device_initcall(ux500_idle_init);\\r\\n```\\r\\n\\r\\n\u4e0eCPUFreq\u7c7b\u4f3c\uff0c\u5728CPUIdle\u5b50\u7cfb\u7edf\u4e2d\u4e5f\u6709\u5bf9\u5e94\u7684governor\u6765\u6289\u62e9\u4f55\u65f6\u8fdb\u5165\u4f55\u79cdIdle\u7ea7\u522b\u7684\u7b56\u7565\uff0c\u8fd9\u4e9bgovernor\u5305\u62ecCPU_IDLE_GOV_LADDER\u3001CPU_IDLE_GOV_MENU\u3002LADDER\u5728\u8fdb\u5165\u548c\u9000\u51faIdle\u7ea7\u522b\u7684\u65f6\u5019\u662f\u6b65\u8fdb\u7684\uff0c\u5b83\u4ee5\u8fc7\u53bb\u7684Idle\u65f6\u95f4\u4f5c\u4e3a\u53c2\u8003\uff0c\u800cMENU\u603b\u662f\u6839\u636e\u9884\u671f\u7684\u7a7a\u95f2\u65f6\u95f4\u76f4\u63a5\u8fdb\u5165\u76ee\u6807Idle\u7ea7\u522b\u3002\u524d\u8005\u9002\u7528\u4e8e\u6ca1\u6709\u91c7\u7528\u52a8\u6001\u65f6\u95f4\u8282\u62cd\u7684\u7cfb\u7edf\uff08\u5373\u6ca1\u6709\u9009\u62e9NO_HZ\u7684\u7cfb\u7edf\uff09\uff0c\u4e0d\u4f9d\u8d56\u4e8eNO_HZ\u914d\u7f6e\u9009\u9879\uff0c\u800c\u540e\u8005\u4f9d\u8d56\u4e8e\u5185\u6838\u7684NO_HZ\u9009\u9879\u3002\\r\\n\\r\\n\u56fe19.3\u6f14\u793a\u4e86LADDER\u6b65\u8fdb\u4eceC0\u8fdb\u5165C3\uff0c\u800cMENU\u5219\u53ef\u80fd\u76f4\u63a5\u4eceC0\u8df3\u5165C3\u3002\\r\\n\\r\\n![1746024633914](./figure/1746024633914.png)\\r\\n\\r\\n\u56fe19.3\u3000LADDER\u4e0eMENU\u7684\u533a\u522b\\r\\n\\r\\nCPUIdle\u5b50\u7cfb\u7edf\u8fd8\u901a\u8fc7sys\u5411userspace\u5bfc\u51fa\u4e86\u4e00\u4e9b\u8282\u70b9\uff1a\\r\\n\\r\\n- \xb7\u4e00\u7c7b\u662f\u9488\u5bf9\u6574\u4e2a\u7cfb\u7edf\u7684/sys/devices/system/cpu/cpuidle\uff0c\u901a\u8fc7\u5176\u4e2d\u7684current_driver\u3001current_governor\u3001available_governors\u7b49\u8282\u70b9\u53ef\u4ee5\u83b7\u53d6\u6216\u8bbe\u7f6eCPUIdle\u7684\u9a71\u52a8\u4fe1\u606f\u4ee5\u53cagovernor\u3002\\r\\n- \xb7\u4e00\u7c7b\u662f\u9488\u5bf9\u6bcf\u4e2aCPU\u7684/sys/devices/system/cpu/cpux/cpuidle\uff0c\u901a\u8fc7\u5b50\u8282\u70b9\u66b4\u9732\u5404\u4e2a\u5728\u7ebf\u7684CPU\u4e2d\u6bcf\u4e2a\u4e0d\u540cIdle\u7ea7\u522b\u7684name\u3001desc\u3001power\u3001latency\u7b49\u4fe1\u606f\u3002\\r\\n\\r\\n\u7efc\u5408\u4ee5\u4e0a\u7684\u5404\u4e2a\u8981\u7d20\uff0c\u53ef\u4ee5\u7ed9\u51faLinux CPUIdle\u5b50\u7cfb\u7edf\u7684\u603b\u4f53\u67b6\u6784\uff0c\u5982\u56fe19.4\u6240\u793a\u3002\\r\\n\\r\\n![1746024736502](./figure/1746024736502.png)"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","description":"\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u51fd\u6570\u9700\u8981\u5b8c\u6210\u5982\u4e0b\u5de5\u4f5c\u3002","date":"2025-09-15T14:44:14.589Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.305,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.3\u3000CPUIdle\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3"}},"content":"\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u51fd\u6570\u9700\u8981\u5b8c\u6210\u5982\u4e0b\u5de5\u4f5c\u3002\\r\\n\\r\\n- \u4f7f\u80fd\u8bbe\u5907\u4f7f\u7528\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u7533\u8bf7I/O\u533a\u57df\u3001\u4e2d\u65ad\u548cDMA\u901a\u9053\u7b49\u3002\\r\\n- \u8c03\u7528Linux\u5185\u6838\u63d0\u4f9b\u7684netif_start_queue\uff08\uff09\u51fd\u6570\uff0c\u6fc0\u6d3b\u8bbe\u5907\u53d1\u9001\u961f\u5217\u3002\\r\\n\\r\\n\u7f51\u7edc\u8bbe\u5907\u7684\u5173\u95ed\u51fd\u6570\u9700\u8981\u5b8c\u6210\u5982\u4e0b\u5de5\u4f5c\u3002\\r\\n\\r\\n- \xb7\u8c03\u7528Linux\u5185\u6838\u63d0\u4f9b\u7684netif_stop_queue\uff08\uff09\u51fd\u6570\uff0c\u505c\u6b62\u8bbe\u5907\u4f20\u8f93\u5305\u3002\\r\\n- \xb7\u91ca\u653e\u8bbe\u5907\u6240\u4f7f\u7528\u7684I/O\u533a\u57df\u3001\u4e2d\u65ad\u548cDMA\u8d44\u6e90\u3002\\r\\n\\r\\nLinux\u5185\u6838\u63d0\u4f9b\u7684netif_start_queue\uff08\uff09\u548cnetif_stop_queue\uff08\uff09\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid netif_start_queue(struct net_device *dev);\\r\\nvoid netif_stop_queue (struct net_device *dev);\\r\\n```\\r\\n\\r\\n\u6839\u636e\u4ee5\u4e0a\u5206\u6790\uff0c\u53ef\u5f97\u51fa\u5982\u4ee3\u7801\u6e05\u535514.6\u6240\u793a\u7684\u7f51\u7edc\u8bbe\u5907\u6253\u5f00\u548c\u91ca\u653e\u51fd\u6570\u7684\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.6\u3000\u7f51\u7edc\u8bbe\u5907\u6253\u5f00\u548c\u91ca\u653e\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static int xxx_open(struct net_device *dev)\\r\\n 2{\\r\\n 3  /* \u7533\u8bf7\u7aef\u53e3\u3001IRQ\u7b49\uff0c\u7c7b\u4f3c\u4e8efops->open */\\r\\n 4  ret = request_irq(dev->irq, &xxx_interrupt, 0, dev->name, dev);\\r\\n 5  ...\\r\\n 6  netif_start_queue(dev);\\r\\n 7  ...\\r\\n 8}\\r\\n 9\\r\\n10static int xxx_release(struct net_device *dev)\\r\\n11{\\r\\n12  /* \u91ca\u653e\u7aef\u53e3\u3001IRQ\u7b49\uff0c\u7c7b\u4f3c\u4e8efops->close */\\r\\n13  free_irq(dev->irq, dev);\\r\\n14  ...\\r\\n15  netif_stop_queue(dev);     /* can\'t transmit any more */\\r\\n16  ...\\r\\n17}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3","description":"USB\u9a71\u52a8\u5206\u4e3aUSB\u4e3b\u673a\u9a71\u52a8\u548cUSB\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u7cfb\u7edf\u7684USB\u4e3b\u673a\u63a7\u5236\u5668\u7b26\u5408OHCI\u7b49\u6807\u51c6\uff0c\u90a3\u4e3b\u673a\u9a71\u52a8\u7684\u7edd\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u53ef\u4ee5\u6cbf\u7528\u901a\u7528\u7684\u4ee3\u7801\u3002","date":"2025-09-15T14:44:14.589Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.525,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.4\u3000\u7f51\u7edc\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops"}},"content":"USB\u9a71\u52a8\u5206\u4e3aUSB\u4e3b\u673a\u9a71\u52a8\u548cUSB\u8bbe\u5907\u9a71\u52a8\uff0c\u5982\u679c\u7cfb\u7edf\u7684USB\u4e3b\u673a\u63a7\u5236\u5668\u7b26\u5408OHCI\u7b49\u6807\u51c6\uff0c\u90a3\u4e3b\u673a\u9a71\u52a8\u7684\u7edd\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u53ef\u4ee5\u6cbf\u7528\u901a\u7528\u7684\u4ee3\u7801\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u4e00\u4e2aUSB\u8bbe\u5907\u800c\u8a00\uff0c\u5b83\u81f3\u5c11\u5177\u5907\u4e24\u91cd\u8eab\u4efd\uff1a\u9996\u5148\u5b83\u662f\u201cUSB\u201d\u7684\uff0c\u5176\u6b21\u5b83\u662f\u201c\u81ea\u5df1\u201d\u7684\u3002USB\u8bbe\u5907\u662f\u201cUSB\u201d\u7684\uff0c\u6307\u5b83\u6302\u63a5\u5728USB\u603b\u7ebf\u4e0a\uff0c\u5176\u5fc5\u987b\u5b8c\u6210usb_driver\u7684\u521d\u59cb\u5316\u548c\u6ce8\u518c\uff1bUSB\u8bbe\u5907\u662f\u201c\u81ea\u5df1\u201d\u7684\uff0c\u610f\u5473\u7740\u672c\u8eab\u53ef\u80fd\u662f\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\u3001tty\u8bbe\u5907\u3001\u7f51\u7edc\u8bbe\u5907\u7b49\uff0c\u56e0\u6b64\uff0c\u5728USB\u8bbe\u5907\u9a71\u52a8\u4e2d\u4e5f\u5fc5\u987b\u5b9e\u73b0\u7b26\u5408\u76f8\u5e94\u6846\u67b6\u7684\u4ee3\u7801\u3002\\r\\n\\r\\nUSB\u8bbe\u5907\u9a71\u52a8\u7684\u81ea\u8eab\u8bbe\u5907\u9a71\u52a8\u90e8\u5206\u7684\u8bfb\u5199\u7b49\u64cd\u4f5c\u6d41\u7a0b\u6709\u5176\u7279\u6b8a\u6027\uff0c\u5373\u4ee5URB\u6765\u8d2f\u7a7f\u59cb\u7ec8\uff0c\u4e00\u4e2aURB\u7684\u751f\u547d\u5468\u671f\u901a\u5e38\u5305\u542b\u521b\u5efa\u3001\u521d\u59cb\u5316\u3001\u63d0\u4ea4\u548c\u88abUSB\u6838\u5fc3\u53caUSB\u4e3b\u673a\u4f20\u9012\u3001\u5b8c\u6210\u540e\u56de\u8c03\u51fd\u6570\u88ab\u8c03\u7528\u7684\u8fc7\u7a0b\uff0c\u5f53\u7136\uff0c\u5728URB\u88ab\u9a71\u52a8\u63d0\u4ea4\u540e\uff0c\u4e5f\u53ef\u4ee5\u88ab\u53d6\u6d88\u3002\\r\\n\\r\\n\u5728UDC\u548cGadget Function\u4fa7\uff0cUDC\u5173\u5fc3\u5e95\u5c42\u7684\u786c\u4ef6\u64cd\u4f5c\uff0c\u800cFunction\u9a71\u52a8\u5219\u53ea\u662f\u5229\u7528\u901a\u7528\u7684API\uff0c\u5e76\u901a\u8fc7usb_request\u4e0e\u5e95\u5c42UDC\u9a71\u52a8\u4ea4\u4e92\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops","description":"\u5f53\u5185\u6838\u51fa\u73b0\u7c7b\u4f3c\u7528\u6237\u7a7a\u95f4\u7684Segmentation Fault\u65f6\uff08\u4f8b\u5982\u5185\u6838\u8bbf\u95ee\u4e00\u4e2a\u5e76\u4e0d\u5b58\u5728\u7684\u865a\u62df\u5730\u5740\uff09\uff0cOops\u4f1a\u88ab\u6253\u5370\u5230\u63a7\u5236\u53f0\u548c\u5199\u5165\u5185\u6838log\u7f13\u51b2\u533a\u3002","date":"2025-09-15T14:44:14.589Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.075,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.6\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8"}},"content":"\u5f53\u5185\u6838\u51fa\u73b0\u7c7b\u4f3c\u7528\u6237\u7a7a\u95f4\u7684Segmentation Fault\u65f6\uff08\u4f8b\u5982\u5185\u6838\u8bbf\u95ee\u4e00\u4e2a\u5e76\u4e0d\u5b58\u5728\u7684\u865a\u62df\u5730\u5740\uff09\uff0cOops\u4f1a\u88ab\u6253\u5370\u5230\u63a7\u5236\u53f0\u548c\u5199\u5165\u5185\u6838log\u7f13\u51b2\u533a\u3002\\r\\n\\r\\n\u6211\u4eec\u5728globalmem.c\u7684globalmem_read\uff08\uff09\u51fd\u6570\u4e2d\u52a0\u4e0a\u4e0b\u9762\u4e00\u884c\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\n        } else {\\r\\n                *ppos += count;\\r\\n                ret = count;\\r\\n                *(unsigned int *)0 = 1; /* a kernel panic */\\r\\n                printk(KERN_INFO \\"read %u bytes(s) from %lu\\\\n\\", count, p);\\r\\n        }\\r\\n```\\r\\n\\r\\n\u5047\u8bbe\u8fd9\u4e2a\u5b57\u7b26\u8bbe\u5907\u5bf9\u5e94\u7684\u8bbe\u5907\u8282\u70b9\u662f/dev/globalmem\uff0c\u901a\u8fc7cat/dev/globalmem\u547d\u4ee4\u8bfb\u8bbe\u5907\u6587\u4ef6\uff0c\u5c06\u5f97\u5230\u5982\u4e0bOops\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\n# cat /dev/globalmem\\r\\nUnable to handle kernel NULL pointer dereference at virtual address 00000000\\r\\npgd = 9ec08000\\r\\n[00000000] *pgd=7f733831, *pte=00000000, *ppte=00000000\\r\\nInternal error: Oops: 817 [#1] SMP ARM\\r\\nModules linked in: globalmem\\r\\nCPU: 0 PID: 609 Comm: cat Not tainted 3.16.0+ #13\\r\\ntask: 9f7d8000 ti: 9f722000 task.ti: 9f722000\\r\\nPC is at globalmem_read+0xbc/0xcc [globalmem]\\r\\nLR is at 0x0\\r\\npc : [<7f000200>]    lr : [<00000000>]    psr: 00000013\\r\\nsp : 9f723f30  ip : 00000000  fp : 00000000\\r\\nr10: 9f414000  r9 : 00000000  r8 : 00001000\\r\\nr7 : 00000000  r6 : 00001000  r5 : 00001000  r4 : 00000000\\r\\nr3 : 00000001  r2 : 00000000  r1 : 00001000  r0 : 7f0003cc\\r\\nFlags: nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user\\r\\nControl: 10c53c7d  Table: 7ec08059  DAC: 00000015\\r\\nProcess cat (pid: 609, stack limit = 0x9f722240)\\r\\nStack: (0x9f723f30 to 0x9f724000)\\r\\n3f20:                                     7ed5ff91 9f723f80 00000000 9f79ab40\\r\\n3f40: 00001000 7ed5eb18 9f723f80 00000000 00000000 800cb114 00000020 9f722000\\r\\n3f60: 9f5e4628 9f79ab40 9f79ab40 00001000 7ed5eb18 00000000 00000000 800cb2ec\\r\\n3f80: 00001000 00000000 9f7168c0 00001000 7ed5eb18 00000003 00000003 8000e4e4\\r\\n3fa0: 9f722000 8000e360 00001000 7ed5eb18 00000003 7ed5eb18 00001000 0000002f\\r\\n3fc0: 00001000 7ed5eb18 00000003 00000003 7ed5eb18 00000001 00000003 00000000\\r\\n3fe0: 0015c23c 7ed5eb00 0000f718 00008d8c 60000010 00000003 00000000 00000000\\r\\n[<7f000200>] (globalmem_read [globalmem]) from [<800cb114>] (vfs_read+0x98/0x13c)\\r\\n[<800cb114>] (vfs_read) from [<800cb2ec>] (SyS_read+0x44/0x84)\\r\\n[<800cb2ec>] (SyS_read) from [<8000e360>] (ret_fast_syscall+0x0/0x30)\\r\\nCode: e1a05008 e2a77000 e1c360f0 e3a03001 (e58c3000)\\r\\n---[ end trace 5a36d6470da50d02 ]---\\r\\nSegmentation fault\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0Oops\u7684\u7b2c\u4e00\u884c\u7ed9\u51fa\u4e86\u201c\u539f\u56e0\u201d\uff0c\u5373\u8bbf\u95ee\u4e86NULL pointer\u3002Oops\u4e2d\u7684PC is at globalmem_read+0xbc/0xcc\u8fd9\u4e00\u884c\u4ee3\u7801\u4e5f\u6bd4\u8f83\u5173\u952e\uff0c\u7ed9\u51fa\u4e86\u201c\u4e8b\u53d1\u73b0\u573a\u201d\uff0c\u5373globalmem_read\uff08\uff09\u51fd\u6570\u504f\u79fb0xbc\u5b57\u8282\u7684\u6307\u4ee4\u5904\u3002\\r\\n\\r\\n\u901a\u8fc7\u53cd\u6c47\u7f16globalmem.o\u53ef\u4ee5\u5bfb\u627e\u5230globalmem_read\uff08\uff09\u51fd\u6570\u5f00\u5934\u4f4d\u7f6e\u504f\u79fb0xbc\u7684\u6307\u4ee4\uff0c\u53cd\u6c47\u7f16\u65b9\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\ndrivers/char/globalmem$ arm-linux-gnueabihf-objdump -d -S globalmem.o\\r\\n```\\r\\n\\r\\n\u5bf9\u5e94\u7684\u53cd\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff0cglobal_read\uff08\uff09\u5f00\u59cb\u4e8e0x144\uff0c\u504f\u79fb0xbc\u7684\u4f4d\u7f6e\u4e3a0x200\uff1a\\r\\n\\r\\n```\\r\\nstatic ssize_t globalmem_read(struct file *filp, char __user * buf, size_t size,\\r\\n                 loff_t * ppos)\\r\\n{\\r\\n 144:      e92d45f0      push    {r4, r5, r6, r7, r8, sl, lr}\\r\\n 148:      e24dd00c      sub     sp, sp, #12\\r\\n    unsigned long p = *ppos;\\r\\n 14c:      e5934000      ldr     r4, [r3]\\r\\n    \u2026\\r\\n           *ppos += count;\\r\\n 1f4:      e2a77000      adc     r7, r7, #0\\r\\n 1f8:      e1c360f0      strd    r6, [r3]\\r\\n           ret = count;\\r\\n           *(unsigned int *)0 = 1; /* a kernel panic */\\r\\n 1fc:      e3a03001      mov     r3, #1\\r\\n 200:      e58c3000      str     r3, [ip]\\r\\n           printk(KERN_INFO \\"read %u bytes(s) from %lu\\\\n\\", count, p);\\r\\n 204:      \u2026\\r\\n    return ret;\\r\\n}\\r\\n```\\r\\n\\r\\n\u201cstr r3\uff0c[ip]\u201d\u662f\u5f15\u8d77Oops\u7684\u6307\u4ee4\u3002\u8fd9\u91cc\u4ec5\u4ec5\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5de5\u7a0b\u5b9e\u8df5\u4e2d\u7684\u201c\u4e8b\u53d1\u73b0\u573a\u201d\u5e76\u4e0d\u5168\u90a3\u4e48\u5bb9\u6613\u627e\u5230\uff0c\u4f46\u65b9\u6cd5\u90fd\u662f\u7c7b\u4f3c\u7684\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8","description":"Linux 2.6\u7684\u65e9\u671f\uff08Linux2.6.21\u4e4b\u524d\uff09\u5185\u6838\u662f\u57fa\u4e8e\u8282\u62cd\u8bbe\u8ba1\u7684\uff0c\u4e00\u822cSoC\u516c\u53f8\u5728\u5c06Linux\u79fb\u690d\u5230\u81ea\u5df1\u82af\u7247\u4e0a\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u82af\u7247\u5185\u90e8\u627e\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5e76\u5c06\u8be5\u5b9a\u65f6\u5668\u914d\u7f6e\u4e3a\u8d6b\u5179\u7684\u9891\u7387\uff0c\u5728\u6bcf\u4e2a\u65f6\u949f\u8282\u62cd\u5230\u6765\u65f6\uff0c\u8c03\u7528ARM Linux\u5185\u6838\u6838\u5fc3\u5c42\u7684timer_tick\uff08\uff09\u51fd\u6570\uff0c\u4ece\u800c\u5f15\u53d1\u7cfb\u7edf\u91cc\u7684\u4e00\u7cfb\u5217\u884c\u4e3a\u3002\u5982Linux 2.6.17\u4e2darch/arm/mach-s3c2410/time.c\u7684\u505a\u6cd5\u7c7b\u4f3c\u4e8e\u4ee3\u7801\u6e05\u535520.1\u6240\u793a\u3002","date":"2025-09-15T14:44:14.577Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":8.875,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.6\u3000Oops"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM"}},"content":"Linux 2.6\u7684\u65e9\u671f\uff08Linux2.6.21\u4e4b\u524d\uff09\u5185\u6838\u662f\u57fa\u4e8e\u8282\u62cd\u8bbe\u8ba1\u7684\uff0c\u4e00\u822cSoC\u516c\u53f8\u5728\u5c06Linux\u79fb\u690d\u5230\u81ea\u5df1\u82af\u7247\u4e0a\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u82af\u7247\u5185\u90e8\u627e\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5e76\u5c06\u8be5\u5b9a\u65f6\u5668\u914d\u7f6e\u4e3a\u8d6b\u5179\u7684\u9891\u7387\uff0c\u5728\u6bcf\u4e2a\u65f6\u949f\u8282\u62cd\u5230\u6765\u65f6\uff0c\u8c03\u7528ARM Linux\u5185\u6838\u6838\u5fc3\u5c42\u7684timer_tick\uff08\uff09\u51fd\u6570\uff0c\u4ece\u800c\u5f15\u53d1\u7cfb\u7edf\u91cc\u7684\u4e00\u7cfb\u5217\u884c\u4e3a\u3002\u5982Linux 2.6.17\u4e2darch/arm/mach-s3c2410/time.c\u7684\u505a\u6cd5\u7c7b\u4f3c\u4e8e\u4ee3\u7801\u6e05\u535520.1\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.1\u3000\u65e9\u671f\u5185\u6838\u7684\u8282\u62cd\u9a71\u52a8\\r\\n\\r\\n```\\r\\n 1/*\\r\\n 2 * IRQ handler for the timer\\r\\n 3 */\\r\\n 4static irqreturn_t\\r\\n 5s3c2410_timer_interrupt(int irq, void *dev_id, struct pt_regs *regs)\\r\\n 6{\\r\\n 7        write_seqlock(&xtime_lock);\\r\\n 8        timer_tick(regs);\\r\\n 9        write_sequnlock(&xtime_lock);\\r\\n10        return IRQ_HANDLED;\\r\\n11}\\r\\n12\\r\\n13static struct irqaction s3c2410_timer_irq = {\\r\\n14        .name           = \\"S3C2410 Timer Tick\\",\\r\\n15        .flags          = SA_INTERRUPT | SA_TIMER,\\r\\n16        .handler        = s3c2410_timer_interrupt,\\r\\n17};\\r\\n18static void __init s3c2410_timer_init (void)\\r\\n19{\\r\\n20        s3c2410_timer_setup();\\r\\n21        setup_irq(IRQ_TIMER4, &s3c2410_timer_irq);\\r\\n22}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.1\u5c06\u786c\u4ef6\u7684TIMER4\u5b9a\u65f6\u5668\u914d\u7f6e\u4e3a\u5468\u671f\u89e6\u53d1\u4e2d\u65ad\uff0c\u6bcf\u4e2a\u4e2d\u65ad\u5230\u6765\u5c31\u4f1a\u81ea\u52a8\u8c03\u7528\u5185\u6838\u51fd\u6570timer_tick\uff08\uff09\u3002\\r\\n\\r\\n\u5f53\u524dLinux\u591a\u91c7\u7528\u65e0\u8282\u62cd\u65b9\u6848\uff0c\u5e76\u652f\u6301\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\uff0c\u5185\u6838\u7684\u914d\u7f6e\u4e00\u822c\u4f1a\u4f7f\u80fdNO_HZ\uff08\u5373\u65e0\u8282\u62cd\uff0c\u6216\u8005\u8bf4\u52a8\u6001\u8282\u62cd\uff09\u548cHIGH_RES_TIMERS\u3002\u8981\u5f3a\u8c03\u7684\u662f\u65e0\u8282\u62cd\u5e76\u4e0d\u662f\u8bf4\u7cfb\u7edf\u4e2d\u6ca1\u6709\u65f6\u949f\u8282\u62cd\uff0c\u800c\u662f\u8bf4\u8fd9\u4e2a\u8282\u62cd\u4e0d\u518d\u50cf\u4ee5\u524d\u90a3\u6837\u5468\u671f\u6027\u5730\u4ea7\u751f\u3002\u65e0\u8282\u62cd\u610f\u5473\u7740\uff0c\u6839\u636e\u7cfb\u7edf\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u4ee5\u4e8b\u4ef6\u9a71\u52a8\u7684\u65b9\u5f0f\u52a8\u6001\u51b3\u5b9a\u4e0b\u4e00\u4e2a\u8282\u62cd\u5728\u4f55\u65f6\u53d1\u751f\u3002\u5982\u679c\u753b\u4e00\u4e2a\u65f6\u95f4\u8f74\uff0c\u5468\u671f\u8282\u62cd\u7684\u7cfb\u7edf\u8282\u62cd\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u5e8f\u5982\u56fe20.1\u6240\u793a\uff1a\\r\\n\\r\\n![1747147309707](./figure/1747147309707.png)\\r\\n\\r\\n\u56fe20.1\u3000\u5468\u671f\u8282\u62cd\u7684\u7cfb\u7edf\u8282\u62cd\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u5e8f\\r\\n\\r\\n\u800cNO_HZ\u7684Linux\u7684\u8fd0\u884c\u8282\u62cd\u5982\u56fe20.2\u6240\u793a\uff0c\u770b\u8d77\u6765\u5219\u662f\uff1a\u4e24\u6b21\u5b9a\u65f6\u5668\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u95f4\u95f4\u9694\u53ef\u957f\u53ef\u77ed\uff1a\\r\\n\\r\\n![1747147334463](./figure/1747147334463.png)\\r\\n\\r\\n\u56fe20.2\u3000NO_HZ\u7684\u8fd0\u884c\u8282\u62cd\\r\\n\\r\\n\u5728\u5f53\u524d\u7684Linux\u7cfb\u7edf\u4e2d\uff0cSoC\u5e95\u5c42\u7684\u5b9a\u65f6\u5668\u88ab\u5b9e\u73b0\u4e3a\u4e00\u4e2aclock_event_device\u548cclocksource\u5f62\u5f0f\u7684\u9a71\u52a8\u3002\u5728clock_event_device\u7ed3\u6784\u4f53\u4e2d\uff0c\u5b9e\u73b0\u5176set_mode\uff08\uff09\u548cset_next_event\uff08\uff09\u6210\u5458\u51fd\u6570\uff1b\u5728clocksource\u7ed3\u6784\u4f53\u4e2d\uff0c\u4e3b\u8981\u5b9e\u73b0read\uff08\uff09\u6210\u5458\u51fd\u6570\u3002\u800c\u5728\u5b9a\u65f6\u5668\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\uff0c\u4e0d\u518d\u8c03\u7528timer_tick\uff08\uff09\uff0c\u800c\u662f\u8c03\u7528clock_event_device\u7684event_handler\uff08\uff09\u6210\u5458\u51fd\u6570\u3002\u4e00\u4e2a\u5178\u578bSoC\u7684\u5e95\u5c42\u8282\u62cd\u5b9a\u65f6\u5668\u9a71\u52a8\u5f62\u5982\u4ee3\u7801\u6e05\u535520.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.2\u3000\u65b0\u5185\u6838\u57fa\u4e8eclocksource\u548cclock_event\u7684\u8282\u62cd\u9a71\u52a8\\r\\n\\r\\n```\\r\\n 1static irqreturn_t xxx_timer_interrupt(int irq, void *dev_id)\\r\\n 2{\\r\\n 3        struct clock_event_device *ce = dev_id;\\r\\n 4        \u2026\\r\\n 5        ce->event_handler(ce);\\r\\n 6\\r\\n 7        return IRQ_HANDLED;\\r\\n 8}\\r\\n 9\\r\\n10/* read 64-bit timer counter */\\r\\n11static cycle_t xxx_timer_read(struct clocksource *cs)\\r\\n12{\\r\\n13        u64 cycles;\\r\\n14\\r\\n15        /* read the 64-bit timer counter */\\r\\n16        cycles = readl_relaxed(xxx_timer_base + LATCHED_HI);\\r\\n17        cycles=(cycles<<32)|readl_relaxed(xxx_timer_base + LATCHED_LO);\\r\\n18\\r\\n19        return cycles;\\r\\n20}\\r\\n21\\r\\n22static int xxx_timer_set_next_event(unsigned long delta,\\r\\n23        struct clock_event_device *ce)\\r\\n24{\\r\\n25        unsigned long now, next;\\r\\n26        now = readl_relaxed(xxx_timer_base + LATCHED_LO);\\r\\n27        next = now + delta;\\r\\n28        writel_relaxed(next, xxx_timer_base + SIRFSOC_TIMER_MATCH_0);\\r\\n29        ...\\r\\n30}\\r\\n31\\r\\n32static void xxx_timer_set_mode(enum clock_event_mode mode,\\r\\n33        struct clock_event_device *ce)\\r\\n34{\\r\\n35        switch (mode) {\\r\\n36        case CLOCK_EVT_MODE_PERIODIC:\\r\\n37                \u2026\\r\\n38        case CLOCK_EVT_MODE_ONESHOT:\\r\\n39                \u2026\\r\\n40        case CLOCK_EVT_MODE_SHUTDOWN:\\r\\n41                \u2026\\r\\n42        case CLOCK_EVT_MODE_UNUSED:\\r\\n43        case CLOCK_EVT_MODE_RESUME:\\r\\n44                break;\\r\\n45        }\\r\\n46}\\r\\n47static struct clock_event_device xxx_clockevent = {\\r\\n48        .name = \\"xxx_clockevent\\",\\r\\n49        .rating = 200,\\r\\n50        .features = CLOCK_EVT_FEAT_ONESHOT,\\r\\n51        .set_mode = xxx_timer_set_mode,\\r\\n52        .set_next_event = xxx_timer_set_next_event,\\r\\n53};\\r\\n54\\r\\n55static struct clocksource xxx_clocksource = {\\r\\n56        .name = \\"xxx_clocksource\\",\\r\\n57        .rating = 200,\\r\\n58        .mask = CLOCKSOURCE_MASK(64),\\r\\n59        .flags = CLOCK_SOURCE_IS_CONTINUOUS,\\r\\n60        .read = xxx_timer_read,\\r\\n61        .suspend = xxx_clocksource_suspend,\\r\\n62        .resume = xxx_clocksource_resume,\\r\\n63};\\r\\n64\\r\\n65static struct irqaction xxx_timer_irq = {\\r\\n66        .name = \\"xxx_tick\\",\\r\\n67        .flags = IRQF_TIMER,\\r\\n68        .irq = 0,\\r\\n69        .handler = xxx_timer_interrupt,\\r\\n70        .dev_id = &xxx_clockevent,\\r\\n71};\\r\\n72\\r\\n73static void __init xxx_clockevent_init(void)\\r\\n74{\\r\\n75        clockevents_calc_mult_shift(&xxx_clockevent, CLOCK_TICK_RATE, 60);\\r\\n76\\r\\n77        xxx_clockevent.max_delta_ns =\\r\\n78                clockevent_delta2ns(-2, &xxx_clockevent);\\r\\n79        xxx_clockevent.min_delta_ns =\\r\\n80                clockevent_delta2ns(2, &xxx_clockevent);\\r\\n81\\r\\n82        xxx_clockevent.cpumask = cpumask_of(0);\\r\\n83        clockevents_register_device(&xxx_clockevent);\\r\\n84}\\r\\n85\\r\\n86/* initialize the kernel jiffy timer source */\\r\\n87static void __init xxx_timer_init(void)\\r\\n88{\\r\\n89        \u2026\\r\\n90        BUG_ON(clocksource_register_hz(&xxx_clocksource, CLOCK_TICK_RATE));\\r\\n91        BUG_ON(setup_irq(xxx_timer_irq.irq, &xxx_timer_irq));\\r\\n92        xxx_clockevent_init();\\r\\n93}\\r\\n94struct sys_timer xxx_timer = {\\r\\n95        .init = xxx_timer_init,\\r\\n96};\\r\\n```\\r\\n\\r\\n\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u7279\u522b\u5173\u6ce8\u5982\u4e0b\u7684\u51fd\u6570\uff1a\\r\\n\\r\\n# 1.clock_event_device\u7684set_next_event\u6210\u5458\u51fd\u6570xxx_timer_set_next_event\uff08\uff09\\r\\n\\r\\n\u8be5\u51fd\u6570\u7684delta\u53c2\u6570\u662fLinux\u5185\u6838\u4f20\u9012\u7ed9\u5e95\u5c42\u5b9a\u65f6\u5668\u7684\u4e00\u4e2a\u5dee\u503c\uff0c\u5b83\u7684\u542b\u4e49\u662f\u4e0b\u4e00\u6b21\u8282\u62cd\u4e2d\u65ad\u4ea7\u751f\u7684\u786c\u4ef6\u5b9a\u65f6\u5668\u4e2d\u8ba1\u6570\u5668\u7684\u503c\u76f8\u5bf9\u4e8e\u5f53\u524d\u8ba1\u6570\u5668\u7684\u5dee\u503c\u3002\u6211\u4eec\u5728\u8be5\u51fd\u6570\u4e2d\u5c06\u786c\u4ef6\u5b9a\u65f6\u5668\u8bbe\u7f6e\u4e3a\u5728\u201c\u5f53\u524d\u8ba1\u6570\u5668\u8ba1\u6570\u503c+delta\u201d\u7684\u65f6\u523b\u4ea7\u751f\u4e0b\u4e00\u6b21\u8282\u62cd\u4e2d\u65ad\u3002xxx_clockevent_init\uff08\uff09\u51fd\u6570\u4e2d\u8bbe\u7f6e\u4e86\u53ef\u63a5\u53d7\u7684\u6700\u5c0f\u548c\u6700\u5927delta\u503c\u5bf9\u5e94\u7684\u7eb3\u79d2\u6570\uff0c\u5373xxx_clockevent.min_delta_ns\u548cxxx_clockevent.max_delta_ns\u3002\\r\\n\\r\\n# 2.clocksource\u7684read\u6210\u5458\u51fd\u6570xxx_timer_read\uff08\uff09\\r\\n\\r\\n\u8be5\u51fd\u6570\u53ef\u8bfb\u53d6\u51fa\u4ece\u5f00\u673a\u5230\u5f53\u524d\u65f6\u523b\u5b9a\u65f6\u5668\u8ba1\u6570\u5668\u5df2\u7ecf\u8d70\u8fc7\u7684\u503c\uff0c\u65e0\u8bba\u6709\u6ca1\u6709\u8bbe\u7f6e\u5f53\u8ba1\u6570\u5668\u8fbe\u5230\u67d0\u503c\u65f6\u4ea7\u751f\u4e2d\u65ad\uff0c\u786c\u4ef6\u7684\u8ba1\u6570\u603b\u662f\u5728\u8fdb\u884c\u7684\uff08\u6211\u4eec\u8981\u7406\u89e3\uff0c\u8ba1\u6570\u603b\u662f\u5728\u8fdb\u884c\uff0c\u800c\u8ba1\u6570\u5230\u67d0\u503c\u540e\u8981\u4ea7\u751f\u4e2d\u65ad\u5219\u9700\u8981\u8f6f\u4ef6\u8bbe\u7f6e\uff09\u3002\u56e0\u6b64\uff0c\u8be5\u51fd\u6570\u7ed9Linux\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5e95\u5c42\u7684\u51c6\u786e\u7684\u53c2\u8003\u65f6\u95f4\u3002\\r\\n\\r\\n# 3.\u5b9a\u65f6\u5668\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8fxxx_timer_interrupt\uff08\uff09\\r\\n\\r\\n\u5728\u8be5\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\uff0c\u76f4\u63a5\u8c03\u7528clock_event_device\u7684event_handler\uff08\uff09\u6210\u5458\u51fd\u6570\uff0cevent_handler\uff08\uff09\u6210\u5458\u51fd\u6570\u7684\u5177\u4f53\u5de5\u4f5c\u4e5f\u662fLinux\u5185\u6838\u6839\u636eLinux\u5185\u6838\u914d\u7f6e\u548c\u8fd0\u884c\u60c5\u51b5\u81ea\u884c\u8bbe\u7f6e\u7684\u3002\\r\\n\\r\\n# 4.clock_event_device\u7684set_mode\u6210\u5458\u51fd\u6570xxx_timer_set_mode\uff08\uff09\\r\\n\\r\\n\u7528\u4e8e\u8bbe\u7f6e\u5b9a\u65f6\u5668\u7684\u6a21\u5f0f\u4ee5\u53ca\u6062\u590d\u3001\u5173\u95ed\u7b49\u529f\u80fd\uff0c\u76ee\u524d\u4e00\u822c\u91c7\u7528ONESHOT\u6a21\u5f0f\uff0c\u5373\u4e00\u6b21\u4e00\u6b21\u4ea7\u751f\u4e2d\u65ad\u3002\u5f53\u7136\u65b0\u7248\u7684Linux\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8001\u7684\u5468\u671f\u6027\u6a21\u5f0f\uff0c\u5982\u679c\u5185\u6838\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u672a\u9009\u62e9NO_HZ\uff0c\u8be5\u5e95\u5c42\u7684\u5b9a\u65f6\u5668\u9a71\u52a8\u4f9d\u7136\u53ef\u4ee5\u4e3a\u5185\u6838\u7684\u8fd0\u884c\u63d0\u4f9b\u652f\u6301\u3002\\r\\n\\r\\n\u8fd9\u4e9b\u51fd\u6570\u7684\u7ed3\u5408\u4f7f\u5f97ARM Linux\u5185\u6838\u5e95\u5c42\u6240\u9700\u8981\u7684\u65f6\u949f\u5f97\u4ee5\u8fd0\u884c\u3002\u4e0b\u9762\u4e3e\u4e00\u4e2a\u5178\u578b\u7684\u573a\u666f\uff0c\u5047\u5b9a\u5b9a\u65f6\u5668\u7684\u6676\u632f\u65f6\u949f\u9891\u7387\u4e3a1MHz\uff08\u5373\u8ba1\u6570\u5668\u6bcf\u52a01\u7b49\u4e8e1\u03bcs\uff09\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7nanosleep\uff08\uff09API\u7761\u7720100\u03bcs\uff0c\u5185\u6838\u4f1a\u636e\u6b64\u6362\u7b97\u51fa\u4e0b\u4e00\u6b21\u5b9a\u65f6\u5668\u4e2d\u65ad\u7684delta\u503c\u4e3a100\uff0c\u5e76\u95f4\u63a5\u8c03\u7528xxx_timer_set_next_event\uff08\uff09\u53bb\u8bbe\u7f6e\u786c\u4ef6\u8ba9\u5176\u5728100\u03bcs\u540e\u4ea7\u751f\u4e2d\u65ad\u3002100\u03bcs\u540e\uff0c\u4e2d\u65ad\u4ea7\u751f\uff0cxxx_timer_interrupt\uff08\uff09\u88ab\u8c03\u7528\uff0cevent_handler\uff08\uff09\u4f1a\u95f4\u63a5\u5524\u9192\u7761\u7720\u7684\u8fdb\u7a0b\u5e76\u5bfc\u81f4nanosleep\uff08\uff09\u51fd\u6570\u8fd4\u56de\uff0c\u4ece\u800c\u8ba9\u7528\u6237\u8fdb\u7a0b\u7ee7\u7eed\u3002\\r\\n\\r\\n\u8fd9\u91cc\u8981\u7279\u522b\u5f3a\u8c03\u7684\u662f\uff0c\u5bf9\u4e8e\u591a\u6838\u5904\u7406\u5668\u6765\u8bf4\uff0c\u4e00\u822c\u7684\u505a\u6cd5\u662f\u7ed9\u6bcf\u4e2a\u6838\u5206\u914d\u4e00\u4e2a\u72ec\u7acb\u7684\u5b9a\u65f6\u5668\uff0c\u5404\u4e2a\u6838\u6839\u636e\u81ea\u8eab\u7684\u8fd0\u884c\u60c5\u51b5\u52a8\u6001\u5730\u8bbe\u7f6e\u81ea\u5df1\u65f6\u949f\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u523b\u3002\u770b\u4e00\u4e0b\u6211\u4eec\u6240\u8fd0\u884c\u7684ARM vexpress\u7684\u4e2d\u65ad\uff08GIC 29twd\uff09\u5373\u77e5\uff1a\\r\\n\\r\\n```\\r\\n# cat /proc/interrupts\\r\\n           CPU0       CPU1       CPU2       CPU3\\r\\n 29:       1548       1511       1501       1484       GIC  29  twd\\r\\n 34:          7          0          0          0       GIC  34  timer\\r\\n 36:          0          0          0          0       GIC  36  rtc-pl031\\r\\n 37:        162         21          2         27       GIC  37  uart-pl011\\r\\n 41:         88        105        149        121       GIC  41  mmci-pl18x (cmd)\\r\\n 42:       5449       5443       5450       5863       GIC  42  mmci-pl18x (pio)\\r\\n 44:          0          8          1          0       GIC  44  kmi-pl050\\r\\n 45:          0        100          0          0       GIC  45  kmi-pl050\\r\\n 47:          0          0          0          0       GIC  47  eth0\\r\\nIPI0:          0          1          1          1  CPU wakeup interrupts\\r\\nIPI1:          0          0          0          0  Timer broadcast interrupts\\r\\nIPI2:        454        266        436        642  Rescheduling interrupts\\r\\nIPI3:          0          1          1          1  Function call interrupts\\r\\nIPI4:          0          0          0          0  Single function call interrupts\\r\\nIPI5:          0          0          0          0  CPU stop interrupts\\r\\nIPI6:          0          0          0          0  IRQ work interrupts\\r\\nIPI7:          0          0          0          0  completion interrupts\\r\\nErr:          0\\r\\n```\\r\\n\\r\\n\u800c\u6bd4\u8f83\u4f4e\u6548\u7387\u7684\u65b9\u6cd5\u5219\u662f\u53ea\u7ed9CPU0\u63d0\u4f9b\u5b9a\u65f6\u5668\uff0c\u7531CPU0\u5c06\u5b9a\u65f6\u5668\u4e2d\u65ad\u901a\u8fc7IPI\uff08Inter Processor Interrupt\uff0c\u5904\u7406\u5668\u95f4\u4e2d\u65ad\uff09\u5e7f\u64ad\u5230\u5176\u4ed6\u6838\u3002\u5bf9\u4e8eARM\u6765\u8bb2\uff0c1\u53f7IPIIPI_TIMER\u5c31\u662f\u6765\u8d1f\u8d23\u8fd9\u4e2a\u5e7f\u64ad\u7684\uff0c\u4ecearch/arm/kernel/smp.c\u53ef\u4ee5\u770b\u51fa\\r\\n\\r\\n```\\r\\nenum ipi_msg_type {\\r\\n        IPI_WAKEUP,\\r\\n        IPI_TIMER,\\r\\n        IPI_RESCHEDULE,\\r\\n        IPI_CALL_FUNC,\\r\\n        IPI_CALL_FUNC_SINGLE,\\r\\n        IPI_CPU_STOP,\\r\\n};\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM","description":"\u5728\u524d\u6587\u7ed9\u51fa\u7684devpmops\u7ed3\u6784\u4f53\u4e2d\uff0c\u67093\u4e2a\u4ee5runtime\u5f00\u5934\u7684\u6210\u5458\u51fd\u6570\uff1aruntimesuspend\uff08\uff09\u3001runtimeresume\uff08\uff09\u548cruntime_idle\uff08\uff09\uff0c\u5b83\u4eec\u8f85\u52a9\u8bbe\u5907\u5b8c\u6210\u8fd0\u884c\u65f6\u7684\u7535\u6e90\u7ba1\u7406\uff1a","date":"2025-09-15T14:44:14.561Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":8.87,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.2\u3000\u5185\u6838\u8282\u62cd\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1"}},"content":"\u5728\u524d\u6587\u7ed9\u51fa\u7684dev_pm_ops\u7ed3\u6784\u4f53\u4e2d\uff0c\u67093\u4e2a\u4ee5runtime\u5f00\u5934\u7684\u6210\u5458\u51fd\u6570\uff1aruntime_suspend\uff08\uff09\u3001runtime_resume\uff08\uff09\u548cruntime_idle\uff08\uff09\uff0c\u5b83\u4eec\u8f85\u52a9\u8bbe\u5907\u5b8c\u6210\u8fd0\u884c\u65f6\u7684\u7535\u6e90\u7ba1\u7406\uff1a\\r\\n\\r\\n```\\r\\nstruct dev_pm_ops {\\r\\n       ...\\r\\n       int (*runtime_suspend)(struct device *dev);\\r\\n       int (*runtime_resume)(struct device *dev);\\r\\n       int (*runtime_idle)(struct device *dev);\\r\\n       ...\\r\\n};\\r\\n```\\r\\n\\r\\n\u8fd0\u884c\u65f6\u7684PM\u4e0e\u524d\u6587\u63cf\u8ff0\u7684\u7cfb\u7edf\u7ea7\u6302\u8d77\u5230RAM\u65f6\u5019\u7684PM\u4e0d\u592a\u4e00\u6837\uff0c\u5b83\u662f\u9488\u5bf9\u5355\u4e2a\u8bbe\u5907\uff0c\u6307\u7cfb\u7edf\u5728\u975e\u7761\u7720\u72b6\u6001\u7684\u60c5\u51b5\u4e0b\uff0c\u67d0\u4e2a\u8bbe\u5907\u5728\u7a7a\u95f2\u65f6\u53ef\u4ee5\u8fdb\u5165\u8fd0\u884c\u65f6\u6302\u8d77\u72b6\u6001\uff0c\u800c\u5728\u4e0d\u662f\u7a7a\u95f2\u65f6\u6267\u884c\u8fd0\u884c\u65f6\u6062\u590d\u4f7f\u5f97\u8bbe\u5907\u8fdb\u5165\u6b63\u5e38\u5de5\u4f5c\u72b6\u6001\uff0c\u5982\u6b64\uff0c\u8fd9\u4e2a\u8bbe\u5907\u5728\u8fd0\u884c\u65f6\u4f1a\u7701\u7535\u3002Linux\u8fd0\u884c\u65f6PM\u6700\u65e9\u662f\u5728Linux2.6.32\u5185\u6838\u4e2d\u88ab\u5408\u5e76\u7684\u3002\\r\\n\\r\\nLinux\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217API\uff0c\u4ee5\u4fbf\u4e8e\u8bbe\u5907\u53ef\u4ee5\u58f0\u660e\u81ea\u5df1\u7684\u8fd0\u884c\u65f6PM\u72b6\u6001\uff1a\\r\\n\\r\\n```\\r\\nint pm_runtime_suspend(struct device *dev);\\r\\n```\\r\\n\\r\\n\u5f15\u53d1\u8bbe\u5907\u7684\u6302\u8d77\uff0c\u6267\u884c\u76f8\u5173\u7684runtime_suspend\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\nint pm_schedule_suspend(struct device *dev, unsigned int delay);\\r\\n```\\r\\n\\r\\n\u201c\u8c03\u5ea6\u201d\u8bbe\u5907\u7684\u6302\u8d77\uff0c\u5ef6\u8fdfdelay\u6beb\u79d2\u540e\u5c06\u6302\u8d77\u5de5\u4f5c\u6302\u5165pm_wq\u7b49\u5f85\u961f\u5217\uff0c\u7ed3\u679c\u7b49\u4ef7\u4e8edelay\u6beb\u79d2\u540e\u6267\u884c\u76f8\u5173\u7684runtime_suspend\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\nint pm_request_autosuspend(struct device *dev);\\r\\n```\\r\\n\\r\\n\u201c\u8c03\u5ea6\u201d\u8bbe\u5907\u7684\u6302\u8d77\uff0c\u81ea\u52a8\u6302\u8d77\u7684\u5ef6\u8fdf\u5230\u540e\uff0c\u6302\u8d77\u7684\u5de5\u4f5c\u9879\u76ee\u88ab\u81ea\u52a8\u653e\u5165\u961f\u5217\u3002\\r\\n\\r\\n```\\r\\nint pm_runtime_resume(struct device *dev);\\r\\n```\\r\\n\\r\\n\u5f15\u53d1\u8bbe\u5907\u7684\u6062\u590d\uff0c\u6267\u884c\u76f8\u5173\u7684runtime_resume\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\nint pm_request_resume(struct device *dev);\\r\\n```\\r\\n\\r\\n\u53d1\u8d77\u4e00\u4e2a\u8bbe\u5907\u6062\u590d\u7684\u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u4e5f\u662f\u6302\u5165pm_wq\u7b49\u5f85\u961f\u5217\u3002\\r\\n\\r\\n```\\r\\nint pm_runtime_idle(struct device *dev);\\r\\n```\\r\\n\\r\\n\u5f15\u53d1\u8bbe\u5907\u7684\u7a7a\u95f2\uff0c\u6267\u884c\u76f8\u5173\u7684runtime_idle\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n```\\r\\nint pm_request_idle(struct device *dev);\\r\\n```\\r\\n\\r\\n\u53d1\u8d77\u4e00\u4e2a\u8bbe\u5907\u7a7a\u95f2\u7684\u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u4e5f\u662f\u6302\u5165pm_wq\u7b49\u5f85\u961f\u5217\u3002\\r\\n\\r\\n```\\r\\nvoid pm_runtime_enable(struct device *dev);\\r\\n```\\r\\n\\r\\n\u4f7f\u80fd\u8bbe\u5907\u7684\u8fd0\u884c\u65f6PM\u652f\u6301\u3002\\r\\n\\r\\n```\\r\\nint pm_runtime_disable(struct device *dev);\\r\\n```\\r\\n\\r\\n\u7981\u6b62\u8bbe\u5907\u7684\u8fd0\u884c\u65f6PM\u652f\u6301\u3002\\r\\n\\r\\n```\\r\\nint pm_runtime_get(struct device *dev);\\r\\nint pm_runtime_get_sync(struct device *dev);\\r\\n```\\r\\n\\r\\n\u589e\u52a0\u8bbe\u5907\u7684\u5f15\u7528\u8ba1\u6570\uff08usage_count\uff09\uff0c\u8fd9\u7c7b\u4f3c\u4e8eclk_get\uff08\uff09\uff0c\u4f1a\u95f4\u63a5\u5f15\u53d1\u8bbe\u5907\u7684runtime_resume\uff08\uff09\u3002\\r\\n\\r\\n```\\r\\nint pm_runtime_put(struct device *dev);\\r\\nint pm_runtime_put_sync(struct device *dev)\\r\\n```\\r\\n\\r\\n\u51cf\u5c0f\u8bbe\u5907\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u8fd9\u7c7b\u4f3c\u4e8eclk_put\uff08\uff09\uff0c\u4f1a\u95f4\u63a5\u5f15\u53d1\u8bbe\u5907\u7684runtime_idle\uff08\uff09\u3002\\r\\n\\r\\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7b80\u5355\u5730\u7406\u89e3Linux\u8fd0\u884c\u65f6PM\u7684\u673a\u5236\uff0c\u6bcf\u4e2a\u8bbe\u5907\uff08\u603b\u7ebf\u7684\u63a7\u5236\u5668\u81ea\u8eab\u4e5f\u5c5e\u4e8e\u4e00\u4e2a\u8bbe\u5907\uff09\u90fd\u6709\u5f15\u7528\u8ba1\u6570usage_count\u548c\u6d3b\u8dc3\u5b50\u8bbe\u5907\uff08Active Children\uff0c\u5b50\u8bbe\u5907\u7684\u610f\u601d\u5c31\u662f\u8be5\u7ea7\u603b\u7ebf\u4e0a\u6302\u7684\u8bbe\u5907\uff09\u8ba1\u6570child_count\uff0c\u5f53\u4e24\u4e2a\u8ba1\u6570\u90fd\u4e3a0\u7684\u65f6\u5019\uff0c\u5c31\u8fdb\u5165\u7a7a\u95f2\u72b6\u6001\uff0c\u8c03\u7528pm_request_idle\uff08dev\uff09\u3002\u5f53\u8bbe\u5907\u8fdb\u5165\u7a7a\u95f2\u72b6\u6001\uff0c\u4e0epm_request_idle\uff08dev\uff09\u5bf9\u5e94\u7684PM\u6838\u5e76\u4e0d\u4e00\u5b9a\u76f4\u63a5\u8c03\u7528\u8bbe\u5907\u9a71\u52a8\u7684runtime_suspend\uff08\uff09\uff0c\u5b83\u5b9e\u9645\u4e0a\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u662f\u8c03\u7528\u4e0e\u8be5\u8bbe\u5907\u5bf9\u5e94\u7684bus_type\u7684runtime_idle\uff08\uff09\u3002\u4e0b\u9762\u662f\u5185\u6838\u7684\u4ee3\u7801\u903b\u8f91\uff1a\\r\\n\\r\\n```\\r\\nstatic pm_callback_t __rpm_get_callback(struct device *dev, size_t cb_offset)\\r\\n{\\r\\npm_callback_t cb;\\r\\nconst struct dev_pm_ops *ops;\\r\\nif (dev->pm_domain)\\r\\nops = &dev->pm_domain->ops;\\r\\nelse if (dev->type && dev->type->pm)\\r\\nops = dev->type->pm;\\r\\nelse if (dev->class && dev->class->pm)\\r\\nops = dev->class->pm;\\r\\nelse if (dev->bus && dev->bus->pm)\\r\\nops = dev->bus->pm;\\r\\nelse\\r\\nops = NULL;\\r\\nif (ops)\\r\\ncb = *(pm_callback_t *)((void *)ops + cb_offset);\\r\\nelse\\r\\ncb = NULL;\\r\\nif (!cb && dev->driver && dev->driver->pm)\\r\\ncb = *(pm_callback_t *)((void *)dev->driver->pm + cb_offset);\\r\\nreturn cb;\\r\\n}\\r\\n```\\r\\n\\r\\n\u636e\u6b64\u53ef\u77e5\uff0cbus_type\u7ea7\u7684\u56de\u8c03\u51fd\u6570\u5b9e\u9645\u4e0a\u53ef\u4ee5\u88abpm_domain\u3001type\u3001class\u8986\u76d6\u6389\uff0c\u8fd9\u4e9b\u90fd\u7edf\u79f0\u4e3a\u5b50\u7cfb\u7edf\u3002bus_type\u7b49\u5b50\u7cfb\u7edf\u7ea7\u522b\u7684runtime_idle\uff08\uff09\u884c\u4e3a\u5b8c\u5168\u7531\u76f8\u5e94\u7684\u603b\u7ebf\u7c7b\u578b\u3001\u8bbe\u5907\u5206\u7c7b\u548cpm_domain\u56e0\u7d20\u51b3\u5b9a\uff0c\u4f46\u662f\u4e00\u822c\u7684\u884c\u4e3a\u662f\u5b50\u7cfb\u7edf\u7ea7\u522b\u7684runtime_idle\uff08\uff09\u4f1a\u8c03\u5ea6\u8bbe\u5907\u9a71\u52a8\u7684runtime_suspend\uff08\uff09\u3002\\r\\n\\r\\n\u5728\u5177\u4f53\u7684\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u4e00\u822c\u7684\u7528\u6cd5\u5219\u662f\u5728\u8bbe\u5907\u9a71\u52a8probe\uff08\uff09\u65f6\u8fd0\u884cpm_runtime_enable\uff08\uff09\u4f7f\u80fd\u8fd0\u884c\u65f6PM\u652f\u6301\uff0c\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u52a8\u6001\u5730\u6267\u884c\u201cpm_runtime_get_xxx\uff08\uff09->\u505a\u5de5\u4f5c->pm_runtime_put_xxx\uff08\uff09\u201d\u7684\u5e8f\u5217\u3002\u5982\u4ee3\u7801\u6e05\u535519.19\u4e2d\u7684drivers/watchdog/omap_wdt.c OMAP\u7684\u770b\u95e8\u72d7\u9a71\u52a8\u3002\u5728omap_wdt_start\uff08\uff09\u4e2d\u542f\u52a8\u4e86pm_runtime_get_sync\uff08\uff09\uff0c\u800c\u5728omap_wdt_stop\uff08\uff09\u4e2d\u8c03\u7528\u4e86pm_runtime_put_sync\uff08\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.19\u3000\u8fd0\u884c\u65f6PM\u7684pm_runtime_get\uff08\uff09\u548cpm_runtime_put\uff08\uff09\\r\\n\\r\\n```\\r\\n 1static int omap_wdt_start(struct watchdog_device *wdog)\\r\\n 2{\\r\\n 3      struct omap_wdt_dev *wdev = watchdog_get_drvdata(wdog);\\r\\n 4      void __iomem *base = wdev->base;\\r\\n 5\\r\\n 6      mutex_lock(&wdev->lock);\\r\\n 7\\r\\n 8      wdev->omap_wdt_users = true;\\r\\n 9\\r\\n10      pm_runtime_get_sync(wdev->dev);\\r\\n11\\r\\n12      /* initialize prescaler */\\r\\n13      while (readl_relaxed(base + OMAP_WATCHDOG_WPS) & 0x01)\\r\\n14            cpu_relax();\\r\\n15      ...\\r\\n16      mutex_unlock(&wdev->lock);\\r\\n17\\r\\n18      return 0;\\r\\n19}\\r\\n20static int omap_wdt_stop(struct watchdog_device *wdog)\\r\\n21{\\r\\n22      struct omap_wdt_dev *wdev = watchdog_get_drvdata(wdog);\\r\\n23\\r\\n24      mutex_lock(&wdev->lock);\\r\\n25      omap_wdt_disable(wdev);\\r\\n26      pm_runtime_put_sync(wdev->dev);\\r\\n27      wdev->omap_wdt_users = false;\\r\\n28      mutex_unlock(&wdev->lock);\\r\\n29      return 0;\\r\\n30}\\r\\n31\\r\\n32static const struct watchdog_ops omap_wdt_ops = {\\r\\n33      .owner          = THIS_MODULE,\\r\\n34      .start          = omap_wdt_start,\\r\\n35      .stop           = omap_wdt_stop,\\r\\n36      .ping           = omap_wdt_ping,\\r\\n37      .set_timeout    = omap_wdt_set_timeout,\\r\\n38};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c10\u884c\u7684pm_runtime_get_sync\uff08wdev->dev\uff09\u544a\u8bc9\u5185\u6838\u8981\u5f00\u59cb\u7528\u770b\u95e8\u72d7\u8fd9\u4e2a\u8bbe\u5907\u4e86\uff0c\u5982\u679c\u770b\u95e8\u72d7\u8bbe\u5907\u5df2\u7ecf\u8fdb\u5165\u7701\u7535\u6a21\u5f0f\uff08\u4e4b\u524d\u5f15\u7528\u8ba1\u6570\u4e3a0\u4e14\u6267\u884c\u4e86\u8fd0\u884c\u65f6\u6302\u8d77\uff09\uff0c\u4f1a\u5bfc\u81f4\u8be5\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u6062\u590d\uff1b\u7b2c26\u884c\u544a\u8bc9\u5185\u6838\u4e0d\u7528\u8fd9\u4e2a\u8bbe\u5907\u4e86\uff0c\u5982\u679c\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a0\u4e14\u6d3b\u8dc3\u5b50\u8bbe\u5907\u4e3a0\uff0c\u5219\u5bfc\u81f4\u8be5\u770b\u95e8\u72d7\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u6302\u8d77\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c10\u884c\u7684pm_runtime_get_sync\uff08wdev->dev\uff09\u544a\u8bc9\u5185\u6838\u8981\u5f00\u59cb\u7528\u770b\u95e8\u72d7\u8fd9\u4e2a\u8bbe\u5907\u4e86\uff0c\u5982\u679c\u770b\u95e8\u72d7\u8bbe\u5907\u5df2\u7ecf\u8fdb\u5165\u7701\u7535\u6a21\u5f0f\uff08\u4e4b\u524d\u5f15\u7528\u8ba1\u6570\u4e3a0\u4e14\u6267\u884c\u4e86\u8fd0\u884c\u65f6\u6302\u8d77\uff09\uff0c\u4f1a\u5bfc\u81f4\u8be5\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u6062\u590d\uff1b\u7b2c26\u884c\u544a\u8bc9\u5185\u6838\u4e0d\u7528\u8fd9\u4e2a\u8bbe\u5907\u4e86\uff0c\u5982\u679c\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a0\u4e14\u6d3b\u8dc3\u5b50\u8bbe\u5907\u4e3a0\uff0c\u5219\u5bfc\u81f4\u8be5\u770b\u95e8\u72d7\u8bbe\u5907\u7684\u8fd0\u884c\u65f6\u6302\u8d77\u3002\\r\\n\\r\\n\u5728\u6267\u884c\u64cd\u4f5c\u7684\u65f6\u5019\u58f0\u660epm_runtime_get\uff08\uff09\uff0c\u64cd\u4f5c\u5b8c\u6210\u540e\u6267\u884cpm_runtime_mark_last_busy\uff08\uff09\u548cpm_runtime_put_autosuspend\uff08\uff09\uff0c\u4e00\u65e6\u81ea\u52a8\u6302\u52a8\u7684\u5ef6\u65f6\u5230\u671f\u4e14\u8bbe\u5907\u7684\u4f7f\u7528\u8ba1\u6570\u4e3a0\uff0c\u5219\u5f15\u53d1\u76f8\u5173runtime_suspend\uff08\uff09\u5165\u53e3\u51fd\u6570\u7684\u8c03\u7528\u3002\u4e00\u4e2a\u5178\u578b\u7528\u6cd5\u5982\u4ee3\u7801\u6e05\u535519.20\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.20\u3000\u8fd0\u884c\u65f6PM\u7684\u81ea\u52a8\u6302\u52a8\\r\\n\\r\\n```\\r\\n 1foo_read_or_write(struct foo_priv *foo, void *data)\\r\\n 2{\\r\\n 3      lock(&foo->private_lock);\\r\\n 4      add_request_to_io_queue(foo, data);\\r\\n 5      if (foo->num_pending_requests++ == 0)\\r\\n 6             pm_runtime_get(&foo->dev);\\r\\n 7      if (!foo->is_suspended)\\r\\n 8             foo_process_next_request(foo);\\r\\n 9      unlock(&foo->private_lock);\\r\\n10}\\r\\n11\\r\\n12foo_io_completion(struct foo_priv *foo, void *req)\\r\\n13{\\r\\n14       lock(&foo->private_lock);\\r\\n15       if (--foo->num_pending_requests == 0) {\\r\\n16              pm_runtime_mark_last_busy(&foo->dev);\\r\\n17              pm_runtime_put_autosuspend(&foo->dev);\\r\\n18       } else {\\r\\n19              foo_process_next_request(foo);\\r\\n20       }\\r\\n21       unlock(&foo->private_lock);\\r\\n22       /* \u5c06\u8bf7\u6c42\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237\\r\\n ... */\\r\\n23}\\r\\n```\\r\\n\\r\\n\u5728\u4e0a\u8ff0\u4ee3\u7801\u7684\u7b2c6\u884c\u5f00\u59cb\u8fdb\u884cI/O\u4f20\u8f93\u4e86\uff0c\u56e0\u6b64\u8fd0\u884c\u4e86pm_runtime_get\uff08\uff09\u4e4b\u540e\uff0c\u5f53I/O\u4f20\u8f93\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u7b2c16~17\u884c\u5411\u5185\u6838\u544a\u77e5\u8be5\u8bbe\u5907\u6700\u540e\u7684\u5fd9\u65f6\u523b\uff0c\u5e76\u6267\u884c\u4e86pm_runtime_put_autosuspend\uff08\uff09\u3002\\r\\n\\r\\n\u8bbe\u5907\u9a71\u52a8PM\u6210\u5458\u7684runtime_suspend\uff08\uff09\u4e00\u822c\u5b8c\u6210\u4fdd\u5b58\u4e0a\u4e0b\u6587\u3001\u5207\u5230\u7701\u7535\u6a21\u5f0f\u7684\u5de5\u4f5c\uff0c\u800cruntime_resume\uff08\uff09\u4e00\u822c\u5b8c\u6210\u5bf9\u786c\u4ef6\u4e0a\u7535\u3001\u6062\u590d\u4e0a\u4e0b\u6587\u7684\u5de5\u4f5c\u3002\u4ee3\u7801\u6e05\u535519.21\u7ed9\u51fa\u4e86\u4e00\u4e2adrivers/spi/spi-pl022.c\u7684\u6848\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.21\u3000\u8fd0\u884c\u65f6PM\u7684runtime_suspend/resume\uff08\uff09\u6848\u4f8b\\r\\n\\r\\n```\\r\\n 1#ifdef CONFIG_PM\\r\\n 2static int pl022_runtime_suspend(struct device *dev)\\r\\n 3{\\r\\n 4      struct pl022 *pl022 = dev_get_drvdata(dev);\\r\\n 5\\r\\n 6      clk_disable_unprepare(pl022->clk);\\r\\n 7      pinctrl_pm_select_idle_state(dev);\\r\\n 8\\r\\n 9      return 0;\\r\\n10}\\r\\n11\\r\\n12static int pl022_runtime_resume(struct device *dev)\\r\\n13{\\r\\n14      struct pl022 *pl022 = dev_get_drvdata(dev);\\r\\n15\\r\\n16      pinctrl_pm_select_default_state(dev);\\r\\n17      clk_prepare_enable(pl022->clk);\\r\\n18\\r\\n19      return 0;\\r\\n20}\\r\\n21#endif\\r\\n22\\r\\n23static const struct dev_pm_ops pl022_dev_pm_ops = {\\r\\n24      SET_SYSTEM_SLEEP_PM_OPS(pl022_suspend, pl022_resume)\\r\\n25      SET_RUNTIME_PM_OPS(pl022_runtime_suspend, pl022_runtime_resume, NULL)\\r\\n26};\\r\\n```\\r\\n\\r\\n\u7b2c25\u884c\u7684SET_RUNTIME_PM_OPS\uff08\uff09\u662f\u4e00\u4e2a\u5feb\u6377\u5b8f\uff0c\u5b83\u5b8c\u6210\u4e86runtime_suspend\u3001runtime_resume\u7684\u8d4b\u503c\u52a8\u4f5c\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n#define SET_RUNTIME_PM_OPS(suspend_fn, resume_fn, idle_fn) \\\\\\r\\n       .runtime_suspend = suspend_fn, \\\\\\r\\n       .runtime_resume = resume_fn, \\\\\\r\\n       .runtime_idle = idle_fn,\\r\\n```\\r\\n\\r\\n\u5176\u5b9e\uff0c\u9664\u4e86SET_RUNTIME_PM_OPS\uff08\uff09\u548c\u524d\u6587\u4ecb\u7ecd\u7684SET_SYSTEM_SLEEP_PM_OPS\uff08\uff09\uff0c\u5728include/linux/pm.h\u4e2d\u8fd8\u5b9a\u4e49\u4e86SIMPLE_DEV_PM_OPS\uff08\uff09\u3001UNIVERSAL_DEV_PM_OPS\uff08\uff09\u7b49\u66f4\u5feb\u6377\u7684\u5b8f\uff1a\\r\\n\\r\\n```\\r\\n#define SIMPLE_DEV_PM_OPS(name, suspend_fn, resume_fn) \\\\\\r\\nconst struct dev_pm_ops name = { \\\\\\r\\n       SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \\\\\\r\\n}\\r\\n#define UNIVERSAL_DEV_PM_OPS(name, suspend_fn, resume_fn, idle_fn) \\\\\\r\\nconst struct dev_pm_ops name = { \\\\\\r\\n       SET_SYSTEM_SLEEP_PM_OPS(suspend_fn, resume_fn) \\\\\\r\\n       SET_RUNTIME_PM_OPS(suspend_fn, resume_fn, idle_fn) \\\\\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u5185\u6838\u91cc\u5145\u65a5\u7740\u8fd9\u4e9b\u5b8f\u7684\u4f7f\u7528\u4f8b\u5b50\u3002\u6211\u4eec\u4eceUNIVERSAL_DEV_PM_OPS\uff08\uff09\u8fd9\u4e2a\u5b8f\u7684\u5b9a\u4e49\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u9488\u5bf9\u7684\u662f\u6302\u8d77\u5230RAM\u548c\u8fd0\u884c\u65f6PM\u884c\u4e3a\u4e00\u81f4\u7684\u573a\u666f\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1","description":"\u6211\u4eec\u53ef\u4ee5\u4e3a\u4ee3\u7801\u6e05\u53554.1\u7684\u6a21\u677f\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684Makefile\uff1a","date":"2025-09-15T14:44:14.561Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.735,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.10\u3000\u8fd0\u884c\u65f6\u7684PM"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO"}},"content":"\u6211\u4eec\u53ef\u4ee5\u4e3a\u4ee3\u7801\u6e05\u53554.1\u7684\u6a21\u677f\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684Makefile\uff1a\\r\\n\\r\\n```\\r\\nKVERS = $(shell uname -r)\\r\\n# Kernel modules\\r\\nobj-m += hello.o\\r\\n# Specify flags for the module compilation.\\r\\n#EXTRA_CFLAGS=-g -O0\\r\\nbuild: kernel_modules\\r\\nkernel_modules:\\r\\n      make -C /lib/modules/$(KVERS)/build M=$(CURDIR) modules\\r\\nclean:\\r\\n      make -C /lib/modules/$(KVERS)/build M=$(CURDIR) clean\\r\\n```\\r\\n\\r\\n\u8be5Makefile\u6587\u4ef6\u5e94\u8be5\u4e0e\u6e90\u4ee3\u7801hello.c\u4f4d\u4e8e\u540c\u4e00\u76ee\u5f55\uff0c\u5f00\u542f\u5176\u4e2d\u7684EXTRA_CFLAGS=-g-O0\uff0c\u53ef\u4ee5\u5f97\u5230\u5305\u542b\u8c03\u8bd5\u4fe1\u606f\u7684hello.ko\u6a21\u5757\u3002\u8fd0\u884cmake\u547d\u4ee4\u5f97\u5230\u7684\u6a21\u5757\u53ef\u76f4\u63a5\u5728PC\u4e0a\u8fd0\u884c\u3002\\r\\n\\r\\n\u5982\u679c\u4e00\u4e2a\u6a21\u5757\u5305\u62ec\u591a\u4e2a.c\u6587\u4ef6\uff08\u5982file1.c\u3001file2.c\uff09\uff0c\u5219\u5e94\u8be5\u4ee5\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199Makefile\uff1a\\r\\n\\r\\n```\\r\\nobj-m := modulename.o\\r\\nmodulename-objs := file1.o file2.o\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO","description":"\u963b\u585e\u64cd\u4f5c\u662f\u6307\u5728\u6267\u884c\u8bbe\u5907\u64cd\u4f5c\u65f6\uff0c\u82e5\u4e0d\u80fd\u83b7\u5f97\u8d44\u6e90\uff0c\u5219\u6302\u8d77\u8fdb\u7a0b\u76f4\u5230\u6ee1\u8db3\u53ef\u64cd\u4f5c\u7684\u6761\u4ef6\u540e\u518d\u8fdb\u884c\u64cd\u4f5c\u3002\u88ab\u6302\u8d77\u7684\u8fdb\u7a0b\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff0c\u88ab\u4ece\u8c03\u5ea6\u5668\u7684\u8fd0\u884c\u961f\u5217\u79fb\u8d70\uff0c\u76f4\u5230\u7b49\u5f85\u7684\u6761\u4ef6\u88ab\u6ee1\u8db3\u3002\u800c\u975e\u963b\u585e\u64cd\u4f5c\u7684\u8fdb\u7a0b\u5728\u4e0d\u80fd\u8fdb\u884c\u8bbe\u5907\u64cd\u4f5c\u65f6\uff0c\u5e76\u4e0d\u6302\u8d77\uff0c\u5b83\u8981\u4e48\u653e\u5f03\uff0c\u8981\u4e48\u4e0d\u505c\u5730\u67e5\u8be2\uff0c\u76f4\u81f3\u53ef\u4ee5\u8fdb\u884c\u64cd\u4f5c\u4e3a\u6b62\u3002","date":"2025-09-15T14:44:14.557Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":16.91,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.9\u3000\u6a21\u5757\u7684\u7f16\u8bd1"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e"}},"content":"\u963b\u585e\u64cd\u4f5c\u662f\u6307\u5728\u6267\u884c\u8bbe\u5907\u64cd\u4f5c\u65f6\uff0c\u82e5\u4e0d\u80fd\u83b7\u5f97\u8d44\u6e90\uff0c\u5219\u6302\u8d77\u8fdb\u7a0b\u76f4\u5230\u6ee1\u8db3\u53ef\u64cd\u4f5c\u7684\u6761\u4ef6\u540e\u518d\u8fdb\u884c\u64cd\u4f5c\u3002\u88ab\u6302\u8d77\u7684\u8fdb\u7a0b\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff0c\u88ab\u4ece\u8c03\u5ea6\u5668\u7684\u8fd0\u884c\u961f\u5217\u79fb\u8d70\uff0c\u76f4\u5230\u7b49\u5f85\u7684\u6761\u4ef6\u88ab\u6ee1\u8db3\u3002\u800c\u975e\u963b\u585e\u64cd\u4f5c\u7684\u8fdb\u7a0b\u5728\u4e0d\u80fd\u8fdb\u884c\u8bbe\u5907\u64cd\u4f5c\u65f6\uff0c\u5e76\u4e0d\u6302\u8d77\uff0c\u5b83\u8981\u4e48\u653e\u5f03\uff0c\u8981\u4e48\u4e0d\u505c\u5730\u67e5\u8be2\uff0c\u76f4\u81f3\u53ef\u4ee5\u8fdb\u884c\u64cd\u4f5c\u4e3a\u6b62\u3002\\r\\n\\r\\n\u9a71\u52a8\u7a0b\u5e8f\u901a\u5e38\u9700\u8981\u63d0\u4f9b\u8fd9\u6837\u7684\u80fd\u529b\uff1a\u5f53\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884cread\uff08\uff09\u3001write\uff08\uff09\u7b49\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u82e5\u8bbe\u5907\u7684\u8d44\u6e90\u4e0d\u80fd\u83b7\u53d6\uff0c\u800c\u7528\u6237\u53c8\u5e0c\u671b\u4ee5\u963b\u585e\u7684\u65b9\u5f0f\u8bbf\u95ee\u8bbe\u5907\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5e94\u5728\u8bbe\u5907\u9a71\u52a8\u7684xxx_read\uff08\uff09\u3001xxx_write\uff08\uff09\u7b49\u64cd\u4f5c\u4e2d\u5c06\u8fdb\u7a0b\u963b\u585e\u76f4\u5230\u8d44\u6e90\u53ef\u4ee5\u83b7\u53d6\uff0c\u6b64\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684read\uff08\uff09\u3001write\uff08\uff09\u7b49\u8c03\u7528\u624d\u8fd4\u56de\uff0c\u6574\u4e2a\u8fc7\u7a0b\u4ecd\u7136\u8fdb\u884c\u4e86\u6b63\u786e\u7684\u8bbe\u5907\u8bbf\u95ee\uff0c\u7528\u6237\u5e76\u6ca1\u6709\u611f\u77e5\u5230\uff1b\u82e5\u7528\u6237\u4ee5\u975e\u963b\u585e\u7684\u65b9\u5f0f\u8bbf\u95ee\u8bbe\u5907\u6587\u4ef6\uff0c\u5219\u5f53\u8bbe\u5907\u8d44\u6e90\u4e0d\u53ef\u83b7\u53d6\u65f6\uff0c\u8bbe\u5907\u9a71\u52a8\u7684xxx_read\uff08\uff09\u3001xxx_write\uff08\uff09\u7b49\u64cd\u4f5c\u5e94\u7acb\u5373\u8fd4\u56de\uff0cread\uff08\uff09\u3001write\uff08\uff09\u7b49\u7cfb\u7edf\u8c03\u7528\u4e5f\u968f\u5373\u88ab\u8fd4\u56de\uff0c\u5e94\u7528\u7a0b\u5e8f\u6536\u5230-EAGAIN\u8fd4\u56de\u503c\u3002\\r\\n\\r\\n\u5982\u56fe8.1\u6240\u793a\uff0c\u5728\u963b\u585e\u8bbf\u95ee\u65f6\uff0c\u4e0d\u80fd\u83b7\u53d6\u8d44\u6e90\u7684\u8fdb\u7a0b\u5c06\u8fdb\u5165\u4f11\u7720\uff0c\u5b83\u5c06CPU\u8d44\u6e90\u201c\u793c\u8ba9\u201d\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u3002\u56e0\u4e3a\u963b\u585e\u7684\u8fdb\u7a0b\u4f1a\u8fdb\u5165\u4f11\u7720\u72b6\u6001\uff0c\u6240\u4ee5\u5fc5\u987b\u786e\u4fdd\u6709\u4e00\u4e2a\u5730\u65b9\u80fd\u591f\u5524\u9192\u4f11\u7720\u7684\u8fdb\u7a0b\uff0c\u5426\u5219\uff0c\u8fdb\u7a0b\u5c31\u771f\u7684\u201c\u5bff\u7ec8\u6b63\u5bdd\u201d\u4e86\u3002\u5524\u9192\u8fdb\u7a0b\u7684\u5730\u65b9\u6700\u5927\u53ef\u80fd\u53d1\u751f\u5728\u4e2d\u65ad\u91cc\u9762\uff0c\u56e0\u4e3a\u5728\u786c\u4ef6\u8d44\u6e90\u83b7\u5f97\u7684\u540c\u65f6\u5f80\u5f80\u4f34\u968f\u7740\u4e00\u4e2a\u4e2d\u65ad\u3002\u800c\u975e\u963b\u585e\u7684\u8fdb\u7a0b\u5219\u4e0d\u65ad\u5c1d\u8bd5\uff0c\u76f4\u5230\u53ef\u4ee5\u8fdb\u884cI/O\u3002\\r\\n\\r\\n![1743172959800](./figure/1743172959800.png)\\r\\n\\r\\n\u56fe8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eI/O\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.1\u548c8.2\u5206\u522b\u6f14\u793a\u4e86\u4ee5\u963b\u585e\u548c\u975e\u963b\u585e\u65b9\u5f0f\u8bfb\u53d6\u4e32\u53e3\u4e00\u4e2a\u5b57\u7b26\u7684\u4ee3\u7801\u3002\u524d\u8005\u5728\u6253\u5f00\u6587\u4ef6\u7684\u65f6\u5019\u6ca1\u6709O_NONBLOCK\u6807\u8bb0\uff0c\u540e\u8005\u4f7f\u7528O_NONBLOCK\u6807\u8bb0\u6253\u5f00\u6587\u4ef6\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.1\u3000\u963b\u585e\u5730\u8bfb\u4e32\u53e3\u4e00\u4e2a\u5b57\u7b26\\r\\n\\r\\n```\\r\\nchar buf;\\r\\nfd = open(\\"/dev/ttyS1\\", O_RDWR);\\r\\n...\\r\\nres = read(fd,&buf,1);      /* \u5f53\u4e32\u53e3\u4e0a\u6709\u8f93\u5165\u65f6\u624d\u8fd4\u56de*/\\r\\nif(res==1)\\r\\nprintf(\\"%c\\\\n\\", buf);\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.2\u3000\u975e\u963b\u585e\u5730\u8bfb\u4e32\u53e3\u4e00\u4e2a\u5b57\u7b26\\r\\n\\r\\n```\\r\\nchar buf;\\r\\nfd = open(\\"/dev/ttyS1\\", O_RDWR| O_NONBLOCK);\\r\\n...\\r\\nwhile(read(fd,&buf,1)!=1)\\r\\n      continue;       /* \u4e32\u53e3\u4e0a\u65e0\u8f93\u5165\u4e5f\u8fd4\u56de\uff0c\u56e0\u6b64\u8981\u5faa\u73af\u5c1d\u8bd5\u8bfb\u53d6\u4e32\u53e3*/\\r\\nprintf(\\"%c\\\\n\\", buf);\\r\\n```\\r\\n\\r\\n\u9664\u4e86\u5728\u6253\u5f00\u6587\u4ef6\u65f6\u53ef\u4ee5\u6307\u5b9a\u963b\u585e\u8fd8\u662f\u975e\u963b\u585e\u65b9\u5f0f\u4ee5\u5916\uff0c\u5728\u6587\u4ef6\u6253\u5f00\u540e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7ioctl\uff08\uff09\u548cfcntl\uff08\uff09\u6539\u53d8\u8bfb\u5199\u7684\u65b9\u5f0f\uff0c\u5982\u4ece\u963b\u585e\u53d8\u66f4\u4e3a\u975e\u963b\u585e\u6216\u8005\u4ece\u975e\u963b\u585e\u53d8\u66f4\u4e3a\u963b\u585e\u3002\u4f8b\u5982\uff0c\u8c03\u7528fcntl\uff08fd\uff0cF_SETFL\uff0cO_NONBLOCK\uff09\u53ef\u4ee5\u8bbe\u7f6efd\u5bf9\u5e94\u7684I/O\u4e3a\u975e\u963b\u585e\u3002\\r\\n\\r\\n# 8.1.1\u3000\u7b49\u5f85\u961f\u5217\\r\\n\\r\\n\u5728Linux\u9a71\u52a8\u7a0b\u5e8f\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b49\u5f85\u961f\u5217\uff08Wait Queue\uff09\u6765\u5b9e\u73b0\u963b\u585e\u8fdb\u7a0b\u7684\u5524\u9192\u3002\u7b49\u5f85\u961f\u5217\u5f88\u65e9\u5c31\u4f5c\u4e3a\u4e00\u4e2a\u57fa\u672c\u7684\u529f\u80fd\u5355\u4f4d\u51fa\u73b0\u5728Linux\u5185\u6838\u91cc\u4e86\uff0c\u5b83\u4ee5\u961f\u5217\u4e3a\u57fa\u7840\u6570\u636e\u7ed3\u6784\uff0c\u4e0e\u8fdb\u7a0b\u8c03\u5ea6\u673a\u5236\u7d27\u5bc6\u7ed3\u5408\uff0c\u53ef\u4ee5\u7528\u6765\u540c\u6b65\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u8bbf\u95ee\uff0c\u7b2c7\u7ae0\u4e2d\u6240\u8bb2\u8ff0\u7684\u4fe1\u53f7\u91cf\u5728\u5185\u6838\u4e2d\u4e5f\u4f9d\u8d56\u7b49\u5f85\u961f\u5217\u6765\u5b9e\u73b0\u3002\\r\\n\\r\\nLinux\u5185\u6838\u63d0\u4f9b\u4e86\u5982\u4e0b\u5173\u4e8e\u7b49\u5f85\u961f\u5217\u7684\u64cd\u4f5c\u3002\\r\\n\\r\\n1.\u5b9a\u4e49\u201c\u7b49\u5f85\u961f\u5217\u5934\u90e8\u201d\\r\\n\\r\\n```\\r\\nwait_queue_head_t my_queue;\\r\\n```\\r\\n\\r\\nwait_queue_head_t\u662f__wait_queue_head\u7ed3\u6784\u4f53\u7684\u4e00\u4e2atypedef\u3002\\r\\n\\r\\n2.\u521d\u59cb\u5316\u201c\u7b49\u5f85\u961f\u5217\u5934\u90e8\u201d\\r\\n\\r\\n```\\r\\ninit_waitqueue_head(&my_queue);\\r\\n```\\r\\n\\r\\n\u800c\u4e0b\u9762\u7684DECLARE_WAIT_QUEUE_HEAD\uff08\uff09\u5b8f\u53ef\u4ee5\u4f5c\u4e3a\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u7b49\u5f85\u961f\u5217\u5934\u90e8\u7684\u201c\u5feb\u6377\u65b9\u5f0f\u201d\u3002\\r\\n\\r\\n```\\r\\nDECLARE_WAIT_QUEUE_HEAD (name)\\r\\n```\\r\\n\\r\\n3.\u5b9a\u4e49\u7b49\u5f85\u961f\u5217\u5143\u7d20\\r\\n\\r\\n```\\r\\nDECLARE_WAITQUEUE(name, tsk)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u7528\u4e8e\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u540d\u4e3aname\u7684\u7b49\u5f85\u961f\u5217\u5143\u7d20\u3002\\r\\n\\r\\n4.\u6dfb\u52a0/\u79fb\u9664\u7b49\u5f85\u961f\u5217\\r\\n\\r\\n```\\r\\nvoid add_wait_queue(wait_queue_head_t *q, wait_queue_t *wait);\\r\\nvoid remove_wait_queue(wait_queue_head_t *q, wait_queue_t *wait);\\r\\n```\\r\\n\\r\\nadd_wait_queue\uff08\uff09\u7528\u4e8e\u5c06\u7b49\u5f85\u961f\u5217\u5143\u7d20wait\u6dfb\u52a0\u5230\u7b49\u5f85\u961f\u5217\u5934\u90e8q\u6307\u5411\u7684\u53cc\u5411\u94fe\u8868\u4e2d\uff0c\u800cremove_wait_queue\uff08\uff09\u7528\u4e8e\u5c06\u7b49\u5f85\u961f\u5217\u5143\u7d20wait\u4ece\u7531q\u5934\u90e8\u6307\u5411\u7684\u94fe\u8868\u4e2d\u79fb\u9664\u3002\\r\\n\\r\\n5.\u7b49\u5f85\u4e8b\u4ef6\\r\\n\\r\\n```\\r\\nwait_event(queue, condition)\\r\\nwait_event_interruptible(queue, condition)\\r\\nwait_event_timeout(queue, condition, timeout)\\r\\nwait_event_interruptible_timeout(queue, condition, timeout)\\r\\n```\\r\\n\\r\\n\u7b49\u5f85\u7b2c1\u4e2a\u53c2\u6570queue\u4f5c\u4e3a\u7b49\u5f85\u961f\u5217\u5934\u90e8\u7684\u961f\u5217\u88ab\u5524\u9192\uff0c\u800c\u4e14\u7b2c2\u4e2a\u53c2\u6570condition\u5fc5\u987b\u6ee1\u8db3\uff0c\u5426\u5219\u7ee7\u7eed\u963b\u585e\u3002wait_event\uff08\uff09\u548cwait_event_interruptible\uff08\uff09\u7684\u533a\u522b\u5728\u4e8e\u540e\u8005\u53ef\u4ee5\u88ab\u4fe1\u53f7\u6253\u65ad\uff0c\u800c\u524d\u8005\u4e0d\u80fd\u3002\u52a0\u4e0a_timeout\u540e\u7684\u5b8f\u610f\u5473\u7740\u963b\u585e\u7b49\u5f85\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5jiffy\u4e3a\u5355\u4f4d\uff0c\u5728\u7b2c3\u4e2a\u53c2\u6570\u7684timeout\u5230\u8fbe\u65f6\uff0c\u4e0d\u8bbacondition\u662f\u5426\u6ee1\u8db3\uff0c\u5747\u8fd4\u56de\u3002\\r\\n\\r\\n6.\u5524\u9192\u961f\u5217\\r\\n\\r\\n```\\r\\nvoid wake_up(wait_queue_head_t *queue);\\r\\nvoid wake_up_interruptible(wait_queue_head_t *queue);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u64cd\u4f5c\u4f1a\u5524\u9192\u4ee5queue\u4f5c\u4e3a\u7b49\u5f85\u961f\u5217\u5934\u90e8\u7684\u961f\u5217\u4e2d\u6240\u6709\u7684\u8fdb\u7a0b\u3002\\r\\n\\r\\nwake_up\uff08\uff09\u5e94\u8be5\u4e0ewait_event\uff08\uff09\u6216wait_event_timeout\uff08\uff09\u6210\u5bf9\u4f7f\u7528\uff0c\u800cwake_up_interruptible\uff08\uff09\u5219\u5e94\u4e0ewait_event_interruptible\uff08\uff09\u6216wait_event_interruptible_timeout\uff08\uff09\u6210\u5bf9\u4f7f\u7528\u3002wake_up\uff08\uff09\u53ef\u5524\u9192\u5904\u4e8eTASK_INTERRUPTIBLE\u548cTASK_UNINTERRUPTIBLE\u7684\u8fdb\u7a0b\uff0c\u800cwake_up_interruptible\uff08\uff09\u53ea\u80fd\u5524\u9192\u5904\u4e8eTASK_INTERRUPTIBLE\u7684\u8fdb\u7a0b\u3002\\r\\n\\r\\n7.\u5728\u7b49\u5f85\u961f\u5217\u4e0a\u7761\u7720\\r\\n\\r\\n```\\r\\nsleep_on(wait_queue_head_t *q );\\r\\ninterruptible_sleep_on(wait_queue_head_t *q );\\r\\n```\\r\\n\\r\\nsleep_on\uff08\uff09\u51fd\u6570\u7684\u4f5c\u7528\u5c31\u662f\u5c06\u76ee\u524d\u8fdb\u7a0b\u7684\u72b6\u6001\u7f6e\u6210TASK_UNINTERRUPTIBLE\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\u5143\u7d20\uff0c\u4e4b\u540e\u628a\u5b83\u6302\u5230\u7b49\u5f85\u961f\u5217\u5934\u90e8q\u6307\u5411\u7684\u53cc\u5411\u94fe\u8868\uff0c\u76f4\u5230\u8d44\u6e90\u53ef\u83b7\u5f97\uff0cq\u961f\u5217\u6307\u5411\u94fe\u63a5\u7684\u8fdb\u7a0b\u88ab\u5524\u9192\u3002\\r\\n\\r\\ninterruptible_sleep_on\uff08\uff09\u4e0esleep_on\uff08\uff09\u51fd\u6570\u7c7b\u4f3c\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u76ee\u524d\u8fdb\u7a0b\u7684\u72b6\u6001\u7f6e\u6210TASK_INTERRUPTIBLE\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\u5143\u7d20\uff0c\u4e4b\u540e\u628a\u5b83\u9644\u5c5e\u5230q\u6307\u5411\u7684\u961f\u5217\uff0c\u76f4\u5230\u8d44\u6e90\u53ef\u83b7\u5f97\uff08q\u6307\u5f15\u7684\u7b49\u5f85\u961f\u5217\u88ab\u5524\u9192\uff09\u6216\u8005\u8fdb\u7a0b\u6536\u5230\u4fe1\u53f7\u3002\\r\\n\\r\\nsleep_on\uff08\uff09\u51fd\u6570\u5e94\u8be5\u4e0ewake_up\uff08\uff09\u6210\u5bf9\u4f7f\u7528\uff0cinterruptible_sleep_on\uff08\uff09\u5e94\u8be5\u4e0ewake_up_interruptible\uff08\uff09\u6210\u5bf9\u4f7f\u7528\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.3\u6f14\u793a\u4e86\u4e00\u4e2a\u5728\u8bbe\u5907\u9a71\u52a8\u4e2d\u4f7f\u7528\u7b49\u5f85\u961f\u5217\u7684\u6a21\u7248\uff0c\u5728\u8fdb\u884c\u5199I/O\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u5224\u65ad\u8bbe\u5907\u662f\u5426\u53ef\u5199\uff0c\u5982\u679c\u4e0d\u53ef\u5199\u4e14\u4e3a\u963b\u585eI/O\uff0c\u5219\u8fdb\u7a0b\u7761\u7720\u5e76\u6302\u8d77\u5230\u7b49\u5f85\u961f\u5217\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.3\u3000\u5728\u8bbe\u5907\u9a71\u52a8\u4e2d\u4f7f\u7528\u7b49\u5f85\u961f\u5217\\r\\n\\r\\n```\\r\\n 1static ssize_t xxx_write(struct file *file, const char *buffer, size_t count,\\r\\n 2  loff_t *ppos)\\r\\n 3{\\r\\n 4  ...\\r\\n 5  DECLARE_WAITQUEUE(wait, current);                           /* \u5b9a\u4e49\u7b49\u5f85\u961f\u5217\u5143\u7d20*/\\r\\n 6  add_wait_queue(&xxx_wait, &wait);                           /* \u6dfb\u52a0\u5143\u7d20\u5230\u7b49\u5f85\u961f\u5217*/\\r\\n 7\\r\\n 8  /* \u7b49\u5f85\u8bbe\u5907\u7f13\u51b2\u533a\u53ef\u5199*/\\r\\n 9  do {\\r\\n10    avail = device_writable(...);\\r\\n11    if (avail < 0) {\\r\\n12       if (file->f_flags &O_NONBLOCK)   {                     /* \u975e\u963b\u585e */\\r\\n13              ret =  -EAGAIN;\\r\\n14              goto out;\\r\\n15         }\\r\\n16      __set_current_state(TASK_INTERRUPTIBLE);                /* \u6539\u53d8\u8fdb\u7a0b\u72b6\u6001*/\\r\\n17      schedule();                                             /* \u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u6267\u884c*/\\r\\n18      if (signal_pending(current))  {                         /* \u5982\u679c\u662f\u56e0\u4e3a\u4fe1\u53f7\u5524\u9192*/\\r\\n19             ret =  -ERESTARTSYS;\\r\\n20             goto out;\\r\\n21        }\\r\\n22     }\\r\\n23  } while (avail < 0);\\r\\n24\\r\\n25  /* \u5199\u8bbe\u5907\u7f13\u51b2\u533a*/\\r\\n26  device_write(...)\\r\\n27  out:\\r\\n28  remove_wait_queue(&xxx_wait, &wait);           /* \u5c06\u5143\u7d20\u79fb\u51faxxx_wait\u6307\u5f15\u7684\u961f\u5217*/\\r\\n29  set_current_state(TASK_RUNNING);               /* \u8bbe\u7f6e\u8fdb\u7a0b\u72b6\u6001\u4e3aTASK_RUNNING */\\r\\n30  return ret;\\r\\n31}\\r\\n```\\r\\n\\r\\n\u8bfb\u61c2\u4ee3\u7801\u6e05\u53558.3\u5bf9\u7406\u89e3Linux\u8fdb\u7a0b\u72b6\u6001\u5207\u6362\u975e\u5e38\u91cd\u8981\uff0c\u6240\u4ee5\u63d0\u8bf7\u8bfb\u8005\u53cd\u590d\u9605\u8bfb\u6b64\u6bb5\u4ee3\u7801\uff08\u5c24\u5176\u6ce8\u610f\u5176\u4e2d\u9ed1\u4f53\u7684\u90e8\u5206\uff09\uff0c\u76f4\u81f3\u5b8c\u5168\u9886\u609f\uff0c\u51e0\u4e2a\u8981\u70b9\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u5982\u679c\u662f\u975e\u963b\u585e\u8bbf\u95ee\uff08O_NONBLOCK\u88ab\u8bbe\u7f6e\uff09\uff0c\u8bbe\u5907\u5fd9\u65f6\uff0c\u76f4\u63a5\u8fd4\u56de\u201c-EAGAIN\u201d\u3002\\r\\n\\r\\n2\uff09\u5bf9\u4e8e\u963b\u585e\u8bbf\u95ee\uff0c\u4f1a\u8c03\u7528__set_current_state\uff08TASK_INTERRUPTIBLE\uff09\u8fdb\u884c\u8fdb\u7a0b\u72b6\u6001\u5207\u6362\u5e76\u663e\u793a\u901a\u8fc7\u201cschedule\uff08\uff09\u201d\u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u6267\u884c\u3002\\r\\n\\r\\n3\uff09\u9192\u6765\u7684\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u7531\u4e8e\u8c03\u5ea6\u51fa\u53bb\u7684\u65f6\u5019\uff0c\u8fdb\u7a0b\u72b6\u6001\u662fTASK_INTERRUPTIBLE\uff0c\u5373\u6d45\u5ea6\u7761\u7720\uff0c\u6240\u4ee5\u5524\u9192\u5b83\u7684\u6709\u53ef\u80fd\u662f\u4fe1\u53f7\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u9996\u5148\u901a\u8fc7signal_pending\uff08current\uff09\u4e86\u89e3\u662f\u4e0d\u662f\u4fe1\u53f7\u5524\u9192\u7684\uff0c\u5982\u679c\u662f\uff0c\u7acb\u5373\u8fd4\u56de\u201c-ERESTARTSYS\u201d\u3002\\r\\n\\r\\nDECLARE_WAITQUEUE\u3001add_wait_queue\u8fd9\u4e24\u4e2a\u52a8\u4f5c\u52a0\u8d77\u6765\u5b8c\u6210\u7684\u6548\u679c\u5982\u56fe8.2\u6240\u793a\u3002\u5728wait_queue_head_t\u6307\u5411\u7684\u94fe\u8868\u4e0a\uff0c\u65b0\u5b9a\u4e49\u7684wait_queue\u5143\u7d20\u88ab\u63d2\u5165\uff0c\u800c\u8fd9\u4e2a\u65b0\u63d2\u5165\u7684\u5143\u7d20\u7ed1\u5b9a\u4e86\u4e00\u4e2atask_struct\uff08\u5f53\u524d\u505axxx_write\u7684current\uff0c\u8fd9\u4e5f\u662fDECLARE_WAITQUEUE\u4f7f\u7528\u201ccurrent\u201d\u4f5c\u4e3a\u53c2\u6570\u7684\u539f\u56e0\uff09\u3002\\r\\n\\r\\n![1743173721819](./figure/1743173721819.png)\\r\\n\\r\\n\u56fe8.2\u3000wait_queque_head_t\u3001wait_queque\u548ctask_struct\u4e4b\u95f4\u7684\u5173\u7cfb\\r\\n\\r\\n# 8.1.2\u3000\u652f\u6301\u963b\u585e\u64cd\u4f5c\u7684globalfifo\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n\u73b0\u5728\u6211\u4eec\u7ed9globalmem\u589e\u52a0\u8fd9\u6837\u7684\u7ea6\u675f\uff1a\u628aglobalmem\u4e2d\u7684\u5168\u5c40\u5185\u5b58\u53d8\u6210\u4e00\u4e2aFIFO\uff0c\u53ea\u6709\u5f53FIFO\u4e2d\u6709\u6570\u636e\u7684\u65f6\u5019\uff08\u5373\u6709\u8fdb\u7a0b\u628a\u6570\u636e\u5199\u5230\u8fd9\u4e2aFIFO\u800c\u4e14\u6ca1\u6709\u88ab\u8bfb\u8fdb\u7a0b\u8bfb\u7a7a\uff09\uff0c\u8bfb\u8fdb\u7a0b\u624d\u80fd\u628a\u6570\u636e\u8bfb\u51fa\uff0c\u800c\u4e14\u8bfb\u53d6\u540e\u7684\u6570\u636e\u4f1a\u4eceglobalmem\u7684\u5168\u5c40\u5185\u5b58\u4e2d\u88ab\u62ff\u6389\uff1b\u53ea\u6709\u5f53FIFO\u4e0d\u662f\u6ee1\u7684\u65f6\uff08\u5373\u8fd8\u6709\u4e00\u4e9b\u7a7a\u95f4\u672a\u88ab\u5199\uff0c\u6216\u5199\u6ee1\u540e\u88ab\u8bfb\u8fdb\u7a0b\u4ece\u8fd9\u4e2aFIFO\u4e2d\u8bfb\u51fa\u4e86\u6570\u636e\uff09\uff0c\u5199\u8fdb\u7a0b\u624d\u80fd\u5f80\u8fd9\u4e2aFIFO\u4e2d\u5199\u5165\u6570\u636e\u3002\\r\\n\\r\\n\u73b0\u5728\uff0c\u5c06globalmem\u91cd\u547d\u540d\u4e3a\u201cglobalfifo\u201d\uff0c\u5728globalfifo\u4e2d\uff0c\u8bfbFIFO\u5c06\u5524\u9192\u5199FIFO\u7684\u8fdb\u7a0b\uff08\u5982\u679c\u4e4b\u524dFIFO\u6b63\u597d\u662f\u6ee1\u7684\uff09\uff0c\u800c\u5199FIFO\u4e5f\u5c06\u5524\u9192\u8bfbFIFO\u7684\u8fdb\u7a0b\uff08\u5982\u679c\u4e4b\u524dFIFO\u6b63\u597d\u662f\u7a7a\u7684\uff09\u3002\u9996\u5148\uff0c\u9700\u8981\u4fee\u6539\u8bbe\u5907\u7ed3\u6784\u4f53\uff0c\u5728\u5176\u4e2d\u589e\u52a0\u4e24\u4e2a\u7b49\u5f85\u961f\u5217\u5934\u90e8\uff0c\u5206\u522b\u5bf9\u5e94\u4e8e\u8bfb\u548c\u5199\uff0c\u5982\u4ee3\u7801\u6e05\u53558.4\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.4\u3000globalfifo\u8bbe\u5907\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct globalfifo_dev {\\r\\n 2  struct cdev cdev;\\r\\n 3  unsigned int current_len;\\r\\n 4  unsigned char mem[GLOBALFIFO_SIZE];\\r\\n 5  struct mutex mutex;\\r\\n 6  wait_queue_head_t r_wait;\\r\\n 7  wait_queue_head_t w_wait;\\r\\n 8};\\r\\n```\\r\\n\\r\\n\u4e0eglobalfifo\u8bbe\u5907\u7ed3\u6784\u4f53\u7684\u53e6\u4e00\u4e2a\u4e0d\u540c\u662f\u589e\u52a0\u4e86current_len\u6210\u5458\u4ee5\u7528\u4e8e\u8868\u5f81\u76ee\u524dFIFO\u4e2d\u6709\u6548\u6570\u636e\u7684\u957f\u5ea6\u3002current_len\u7b49\u4e8e0\u610f\u5473\u7740FIFO\u7a7a\uff0ccurrent_len\u7b49\u4e8eGLOBALFIFO_SIZE\u610f\u5473\u7740FIFO\u6ee1\u3002\\r\\n\\r\\n\u8fd9\u4e24\u4e2a\u7b49\u5f85\u961f\u5217\u5934\u90e8\u9700\u5728\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e2d\u8c03\u7528init_waitqueue_head\uff08\uff09\u88ab\u521d\u59cb\u5316\uff0c\u65b0\u7684\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u5982\u4ee3\u7801\u6e05\u53558.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.5\u3000globalfifo\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int __init globalfifo_init(void)\\r\\n 2{\\r\\n 3  int ret;\\r\\n 4  dev_t devno = MKDEV(globalfifo_major, 0);\\r\\n 5\\r\\n 6  if (globalfifo_major)\\r\\n 7       ret = register_chrdev_region(devno, 1, \\"globalfifo\\");\\r\\n 8  else {\\r\\n 9       ret = alloc_chrdev_region(&devno, 0, 1, \\"globalfifo\\");\\r\\n10       globalfifo_major = MAJOR(devno);\\r\\n11  }\\r\\n12  if (ret < 0)\\r\\n13       return ret;\\r\\n14\\r\\n15  globalfifo_devp = kzalloc(sizeof(struct globalfifo_dev), GFP_KERNEL);\\r\\n16  if (!globalfifo_devp) {\\r\\n17       ret = -ENOMEM;\\r\\n18       goto fail_malloc;\\r\\n19  }\\r\\n20\\r\\n21  globalfifo_setup_cdev(globalfifo_devp, 0);\\r\\n22\\r\\n23  mutex_init(&globalfifo_devp->mutex);\\r\\n24  init_waitqueue_head(&globalfifo_devp->r_wait);\\r\\n25  init_waitqueue_head(&globalfifo_devp->w_wait);\\r\\n26\\r\\n27  return 0;\\r\\n28\\r\\n29fail_malloc:\\r\\n30  unregister_chrdev_region(devno, 1);\\r\\n31  return ret;\\r\\n32}\\r\\n33module_init(globalfifo_init);\\r\\n```\\r\\n\\r\\n\u8bbe\u5907\u9a71\u52a8\u8bfb\u5199\u64cd\u4f5c\u9700\u8981\u88ab\u4fee\u6539\uff0c\u5728\u8bfb\u51fd\u6570\u4e2d\u9700\u589e\u52a0\u5524\u9192globalfifo_devp->w_wait\u7684\u8bed\u53e5\uff0c\u800c\u5728\u5199\u64cd\u4f5c\u4e2d\u5524\u9192globalfifo_devp->r_wait\uff0c\u5982\u4ee3\u7801\u6e05\u53558.6\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.6\u3000\u589e\u52a0\u7b49\u5f85\u961f\u5217\u540e\u7684globalfifo\u8bfb\u5199\u51fd\u6570\\r\\n\\r\\n```\\r\\n  1static ssize_t globalfifo_read(struct file *filp, char __user *buf,\\r\\n  2               size_t count, loff_t *ppos)\\r\\n  3{\\r\\n  4int ret;\\r\\n  5struct globalfifo_dev *dev = filp->private_data;\\r\\n  6DECLARE_WAITQUEUE(wait, current);\\r\\n  7\\r\\n  8mutex_lock(&dev->mutex);\\r\\n  9add_wait_queue(&dev->r_wait, &wait);\\r\\n 10\\r\\n 11while (dev->current_len == 0) {\\r\\n 12    if (filp->f_flags & O_NONBLOCK) {\\r\\n 13         ret = -EAGAIN;\\r\\n 14         goto out;\\r\\n 15    }\\r\\n 16    __set_current_state(TASK_INTERRUPTIBLE);\\r\\n 17    mutex_unlock(&dev->mutex);\\r\\n 18\\r\\n 19    schedule();\\r\\n 20    if (signal_pending(current)) {\\r\\n 21         ret = -ERESTARTSYS;\\r\\n 22         goto out2;\\r\\n 23    }\\r\\n 24\\r\\n 25    mutex_lock(&dev->mutex);\\r\\n 26}\\r\\n 27\\r\\n 28if (count > dev->current_len)\\r\\n 29    count = dev->current_len;\\r\\n 30\\r\\n 31if (copy_to_user(buf, dev->mem, count)) {\\r\\n 32    ret = -EFAULT;\\r\\n 33    goto out;\\r\\n 34} else {\\r\\n 35    memcpy(dev->mem, dev->mem + count, dev->current_len - count);\\r\\n 36    dev->current_len -= count;\\r\\n 37    printk(KERN_INFO \\"read %d bytes(s),current_len:%d\\\\n\\", count,\\r\\n 38          dev->current_len);\\r\\n 39\\r\\n 40    wake_up_interruptible(&dev->w_wait);\\r\\n 41\\r\\n 42    ret = count;\\r\\n 43}\\r\\n 44 out:\\r\\n 45mutex_unlock(&dev->mutex);;\\r\\n 46 out2:\\r\\n 47remove_wait_queue(&dev->w_wait, &wait);\\r\\n 48set_current_state(TASK_RUNNING);\\r\\n 49return ret;\\r\\n 50}\\r\\n 51\\r\\n 52static ssize_t globalfifo_write(struct file *filp, const char __user * buf,\\r\\n 53             size_t count, loff_t *ppos)\\r\\n 54{\\r\\n 55struct globalfifo_dev *dev = filp->private_data;\\r\\n 56int ret;\\r\\n 57DECLARE_WAITQUEUE(wait, current);\\r\\n 58\\r\\n 59mutex_lock(&dev->mutex);\\r\\n 60add_wait_queue(&dev->w_wait, &wait);\\r\\n 61\\r\\n 62while (dev->current_len == GLOBALFIFO_SIZE) {\\r\\n 63    if (filp->f_flags & O_NONBLOCK) {\\r\\n 64         ret = -EAGAIN;\\r\\n 65         goto out;\\r\\n 66    }\\r\\n 67    __set_current_state(TASK_INTERRUPTIBLE);\\r\\n 68\\r\\n 69    mutex_unlock(&dev->mutex);\\r\\n 70\\r\\n 71    schedule();\\r\\n 72    if (signal_pending(current)) {\\r\\n 73         ret = -ERESTARTSYS;\\r\\n 74         goto out2;\\r\\n 75    }\\r\\n 76\\r\\n 77    mutex_lock(&dev->mutex);\\r\\n 78}\\r\\n 79\\r\\n 80if (count > GLOBALFIFO_SIZE - dev->current_len)\\r\\n 81    count = GLOBALFIFO_SIZE - dev->current_len;\\r\\n 82\\r\\n 83if (copy_from_user(dev->mem + dev->current_len, buf, count)) {\\r\\n 84    ret = -EFAULT;\\r\\n 85    goto out;\\r\\n 86} else {\\r\\n 87    dev->current_len += count;\\r\\n 88    printk(KERN_INFO \\"written %d bytes(s),current_len:%d\\\\n\\", count,\\r\\n 89          dev->current_len);\\r\\n 90\\r\\n 91    wake_up_interruptible(&dev->r_wait);\\r\\n 92\\r\\n 93    ret = count;\\r\\n 94}\\r\\n 95\\r\\n 96 out:\\r\\n 97mutex_unlock(&dev->mutex);;\\r\\n 98 out2:\\r\\n 99remove_wait_queue(&dev->w_wait, &wait);\\r\\n100set_current_state(TASK_RUNNING);\\r\\n101return ret;\\r\\n102}\\r\\n```\\r\\n\\r\\nglobalfifo_read\uff08\uff09\u901a\u8fc7\u7b2c6\u884c\u548c\u7b2c9\u884c\u5c06\u81ea\u5df1\u52a0\u5230\u4e86r_wait\u8fd9\u4e2a\u961f\u5217\u91cc\u9762\uff0c\u4f46\u662f\u6b64\u65f6\u8bfb\u7684\u8fdb\u7a0b\u5e76\u672a\u7761\u7720\uff0c\u4e4b\u540e\u7b2c16\u884c\u8c03\u7528__set_current_state\uff08TASK_INTERRUPTIBLE\uff09\u65f6\uff0c\u4e5f\u53ea\u662f\u6807\u8bb0\u4e86task_struct\u7684\u4e00\u4e2a\u6d45\u5ea6\u7761\u7720\u6807\u8bb0\uff0c\u5e76\u672a\u771f\u6b63\u7761\u7720\uff0c\u76f4\u5230\u7b2c19\u884c\u8c03\u7528schedule\uff08\uff09\uff0c\u8bfb\u8fdb\u7a0b\u8fdb\u5165\u7761\u7720\u3002\u8fdb\u884c\u5b8c\u8bfb\u64cd\u4f5c\u540e\uff0c\u7b2c40\u884c\u8c03\u7528wake_up_interruptible\uff08&dev->w_wait\uff09\u5524\u9192\u53ef\u80fd\u963b\u585e\u7684\u5199\u8fdb\u7a0b\u3002globalfifo_write\uff08\uff09\u7684\u8fc7\u7a0b\u4e0e\u6b64\u7c7b\u4f3c\u3002\\r\\n\\r\\n\u5173\u6ce8\u4ee3\u7801\u7684\u7b2c17\u884c\u548c69\u884c\uff0c\u65e0\u8bba\u662f\u8bfb\u51fd\u6570\u8fd8\u662f\u5199\u51fd\u6570\uff0c\u8fdb\u5165schedule\uff08\uff09\u628a\u81ea\u5df1\u5207\u6362\u51fa\u53bb\u4e4b\u524d\uff0c\u90fd\u4e3b\u52a8\u91ca\u653e\u4e86\u4e92\u65a5\u4f53\u3002\u539f\u56e0\u662f\u5982\u679c\u8bfb\u8fdb\u7a0b\u963b\u585e\uff0c\u5b9e\u9645\u610f\u5473\u7740FIFO\u7a7a\uff0c\u5fc5\u987b\u4f9d\u8d56\u5199\u7684\u8fdb\u7a0b\u5f80FIFO\u91cc\u9762\u5199\u4e1c\u897f\u6765\u5524\u9192\u5b83\uff0c\u4f46\u662f\u5199\u7684\u8fdb\u7a0b\u4e3a\u4e86\u5199FIFO\uff0c\u5b83\u4e5f\u5fc5\u987b\u62ff\u5230\u8fd9\u4e2a\u4e92\u65a5\u4f53\u6765\u8bbf\u95eeFIFO\u8fd9\u4e2a\u4e34\u754c\u8d44\u6e90\uff0c\u5982\u679c\u8bfb\u8fdb\u7a0b\u628a\u81ea\u5df1\u8c03\u5ea6\u51fa\u53bb\u4e4b\u524d\u4e0d\u91ca\u653e\u8fd9\u4e2a\u4e92\u65a5\u4f53\uff0c\u90a3\u4e48\u8bfb\u5199\u8fdb\u7a0b\u4e4b\u95f4\u5c31\u6b7b\u9501\u4e86\u3002\u6240\u8c13\u6b7b\u9501\uff0c\u5c31\u662f\u591a\u4e2a\u8fdb\u7a0b\u5faa\u73af\u7b49\u5f85\u4ed6\u65b9\u5360\u6709\u7684\u8d44\u6e90\u800c\u65e0\u9650\u671f\u5730\u50f5\u6301\u4e0b\u53bb\u3002\u5982\u679c\u6ca1\u6709\u5916\u529b\u7684\u4f5c\u7528\uff0c\u90a3\u4e48\u6b7b\u9501\u6d89\u53ca\u7684\u5404\u4e2a\u8fdb\u7a0b\u90fd\u5c06\u6c38\u8fdc\u5904\u4e8e\u5c01\u9501\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u9a71\u52a8\u5de5\u7a0b\u5e08\u4e00\u5b9a\u8981\u6ce8\u610f\uff1a\u5f53\u591a\u4e2a\u7b49\u5f85\u961f\u5217\u3001\u4fe1\u53f7\u91cf\u3001\u4e92\u65a5\u4f53\u7b49\u673a\u5236\u540c\u65f6\u51fa\u73b0\u65f6\uff0c\u8c28\u9632\u6b7b\u9501\uff01\\r\\n\\r\\n\u73b0\u5728\u56de\u8fc7\u6765\u4e86\u770b\u4e00\u4e0b\u4ee3\u7801\u6e05\u53558.6\u7684\u7b2c12\u884c\u548c63\u884c\uff0c\u53d1\u73b0\u5728\u8bbe\u5907\u9a71\u52a8\u7684read\uff08\uff09\u3001write\uff08\uff09\u7b49\u529f\u80fd\u51fd\u6570\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7filp->f_flags\u6807\u5fd7\u83b7\u5f97\u7528\u6237\u7a7a\u95f4\u662f\u5426\u8981\u6c42\u975e\u963b\u585e\u8bbf\u95ee\u3002\u9a71\u52a8\u4e2d\u53ef\u4ee5\u4f9d\u636e\u6b64\u6807\u5fd7\u5224\u65ad\u7528\u6237\u7a76\u7adf\u8981\u6c42\u963b\u585e\u8fd8\u662f\u975e\u963b\u585e\u8bbf\u95ee\uff0c\u4ece\u800c\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\u3002\\r\\n\\r\\n# 8.1.3\u3000\u5728\u7528\u6237\u7a7a\u95f4\u9a8c\u8bc1globalfifo\u7684\u8bfb\u5199\\r\\n\\r\\n\u672c\u4e66\u4ee3\u7801\u4ed3\u5e93\u7684/kernel/drivers/globalfifo/ch8\u5305\u542b\u4e86globalfifo\u7684\u9a71\u52a8\uff0c\u8fd0\u884c\u201cmake\u201d\u547d\u4ee4\u7f16\u8bd1\u5f97\u5230globalfifo.ko\u3002\u63a5\u7740\u7528insmod\u6a21\u5757\\r\\n\\r\\n```\\r\\n# insmod globalfifo.ko\\r\\n```\\r\\n\\r\\n\u521b\u5efa\u8bbe\u5907\u6587\u4ef6\u8282\u70b9\u201c/dev/globalfifo\u201d\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n# mknod /dev/globalfifo c 231 0\\r\\n```\\r\\n\\r\\n\u542f\u52a8\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u8fdb\u7a0bcat/dev/globalfifo&\u5728\u540e\u53f0\u6267\u884c\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u201cecho\u5b57\u7b26\u4e32/dev/globalfifo\u201d\u5728\u524d\u53f0\u6267\u884c\uff1a\\r\\n\\r\\n```\\r\\n# cat /dev/globalfifo &\\r\\n[1] 20910\\r\\n# echo \'I want to be\' > /dev/globalfifo\\r\\nI want to be\\r\\n# echo \'a great Chinese Linux Kernel Developer\' > /dev/globalfifo\\r\\na great Chinese Linux kernel Developer\\r\\n```\\r\\n\\r\\n\u5f80/dev/globalfifo\u91cc\u9762echo\u9700\u8981root\u6743\u9650\uff0c\u76f4\u63a5\u8fd0\u884c\u201csudo echo\u201d\u662f\u4e0d\u884c\u7684\uff0c\u53ef\u4ee5\u5148\u6267\u884c\uff1a\\r\\n\\r\\n```\\r\\nbaohua@baohua-VirtualBox://sys/module/globalmem$ sudo su\\r\\n[sudo] password for baohua:\\r\\n```\\r\\n\\r\\n\u8fd9\u6bb5\u4ee3\u7801\u7684\u5bc6\u7801\u4e5f\u662f\u201cbaohua\u201d\u3002\u4e4b\u540e\u518d\u8fdb\u884cecho\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e","description":"\u5728Linux\u542f\u52a8\u7684\u65e9\u671f\uff0c\u63a7\u5236\u53f0\u9a71\u52a8\u8fd8\u6ca1\u6709\u6295\u5165\u8fd0\u884c\u3002\u5f53\u6211\u4eec\u628aLinux\u79fb\u690d\u5230\u4e00\u4e2a\u65b0\u7684SoC\u65f6\uff0c\u5de5\u7a0b\u5e08\u4e00\u822c\u975e\u5e38\u60f3\u5728\u521a\u5f00\u59cb\u5c31\u53ef\u4ee5\u6267\u884cprintk\uff08\uff09\u529f\u80fd\u4ee5\u8ddf\u8e2a\u8c03\u8bd5\u542f\u52a8\u8fc7\u7a0b\u3002\u5185\u6838\u7684DEBUGLL\u548cEARLYPRINTK\u9009\u9879\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u652f\u6301\uff0c\u800c\u5728Bootloader\u5f15\u5bfc\u5185\u6838\u6267\u884c\u7684bootargs\u4e2d\uff0c\u5219\u9700\u8981\u4f7f\u80fdearlyprintk\u9009\u9879\u3002","date":"2025-09-15T14:44:14.553Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.595,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.1\u3000\u963b\u585e\u4e0e\u975e\u963b\u585eIO"},"nextItem":{"title":"5.1.1\u3000\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.1\u3000Linux\u6587\u4ef6\u64cd\u4f5c"}},"content":"\u5728Linux\u542f\u52a8\u7684\u65e9\u671f\uff0c\u63a7\u5236\u53f0\u9a71\u52a8\u8fd8\u6ca1\u6709\u6295\u5165\u8fd0\u884c\u3002\u5f53\u6211\u4eec\u628aLinux\u79fb\u690d\u5230\u4e00\u4e2a\u65b0\u7684SoC\u65f6\uff0c\u5de5\u7a0b\u5e08\u4e00\u822c\u975e\u5e38\u60f3\u5728\u521a\u5f00\u59cb\u5c31\u53ef\u4ee5\u6267\u884cprintk\uff08\uff09\u529f\u80fd\u4ee5\u8ddf\u8e2a\u8c03\u8bd5\u542f\u52a8\u8fc7\u7a0b\u3002\u5185\u6838\u7684DEBUG_LL\u548cEARLY_PRINTK\u9009\u9879\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u6837\u7684\u652f\u6301\uff0c\u800c\u5728Bootloader\u5f15\u5bfc\u5185\u6838\u6267\u884c\u7684bootargs\u4e2d\uff0c\u5219\u9700\u8981\u4f7f\u80fdearlyprintk\u9009\u9879\u3002\\r\\n\\r\\n\u4e3a\u4e86\u8ba9DEBUG_LL\u548cEARLY_PRINTK\u53ef\u4ee5\u8fd0\u884c\uff0c\u5728Linux\u5185\u6838\u4e2d\u9700\u5b9e\u73b0\u65e9\u671f\u89e3\u538b\u8fc7\u7a0b\u6253\u5370\u9700\u8981\u7684putc\uff08\uff09\u548c\u540e\u7eed\u7684addruart\u3001senduart\u548cwaituart\u7b49\u5b8f\u3002\u4ee5CSR SiRFprimaII\u4e3a\u4f8b\uff0c\u76f8\u5173\u7684\u4ee3\u7801\u5b9e\u73b0\u4e8earch/arm/include/debug/sirf.S\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535520.14\u6240\u793a\u3002\\r\\n\\r\\n\u4e3a\u4e86\u8ba9DEBUG_LL\u548cEARLY_PRINTK\u53ef\u4ee5\u8fd0\u884c\uff0c\u5728Linux\u5185\u6838\u4e2d\u9700\u5b9e\u73b0\u65e9\u671f\u89e3\u538b\u8fc7\u7a0b\u6253\u5370\u9700\u8981\u7684putc\uff08\uff09\u548c\u540e\u7eed\u7684addruart\u3001senduart\u548cwaituart\u7b49\u5b8f\u3002\u4ee5CSR SiRFprimaII\u4e3a\u4f8b\uff0c\u76f8\u5173\u7684\u4ee3\u7801\u5b9e\u73b0\u4e8earch/arm/include/debug/sirf.S\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535520.14\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.14\u3000DEBUG_LL\u7aef\u53e3\u7684\u9a71\u52a8\\r\\n\\r\\n```\\r\\n 1.macroaddruart, rp, rv, tmp\\r\\n 2ldr\\\\rp, =SIRFSOC_UART1_PA_BASE    @ physical\\r\\n 3ldr\\\\rv, =SIRFSOC_UART1_VA_BASE    @ virtual\\r\\n 4.endm\\r\\n 5\\r\\n 6.macrosenduart,rd,rx\\r\\n 7str\\\\rd, [\\\\rx, #SIRFSOC_UART_TXFIFO_DATA]\\r\\n 8.endm\\r\\n 9\\r\\n10.macrobusyuart,rd,rx\\r\\n11.endm\\r\\n12\\r\\n13.macrowaituart,rd,rx\\r\\n141001:ldr\\\\rd, [\\\\rx, #SIRFSOC_UART_TXFIFO_STATUS]\\r\\n15tst\\\\rd, #SIRFSOC_UART1_TXFIFO_EMPTY\\r\\n16beq1001b\\r\\n17.endm\\r\\n```\\r\\n\\r\\n\u8fd9\u4e9b\u4ee3\u7801\u6ca1\u6709\u590d\u6742\u7684\u6846\u67b6\u548c\u4e2d\u65ad\u7684\u652f\u6301\uff0c\u53ea\u662f\u5355\u7eaf\u5730\u5f80UART\u7684TX FIFO\u5bc4\u5b58\u5668\u5199\u8981\u53d1\u9001\u7684\u6570\u636e\u3002\u5176\u4e2d\u7684senduart\u5b8c\u6210\u4e86\u5f80UART\u7684FIFO\u4e22\u6253\u5370\u5b57\u7b26\u7684\u8fc7\u7a0b\u3002waituart\u5219\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6d41\u91cf\u63e1\u624b\uff0c\u7b49\u5f85FIFO\u4e3a\u7a7a\u3002\u8fd9\u4e9b\u5b8f\u6700\u7ec8\u4f1a\u88ab\u5185\u6838\u7684arch/arm/kernel/debug.S\u5f15\u7528\\r\\n\\r\\n\u800c\u5bf9\u4e8e\u672c\u4e66\u4e0evexpress QEMU\u5bf9\u5e94\u7684\u5b9e\u9a8c\u5e73\u53f0\u800c\u8a00\uff0c\u76f8\u5e94\u7684\u9a71\u52a8\u5219\u4f4d\u4e8earch/arm/include/debug/pl01x.S\u4e2d\uff0c\u540c\u6837\u662f\u5b9e\u73b0\u4e86\u7c7b\u4f3c\u7684\u5b8f\u3002\\r\\n\\r\\n\u5728\u914d\u7f6e\u5185\u6838\u7684\u65f6\u5019\uff0c\u8981\u8fdb\u884c\u6b63\u786e\u7684\u914d\u7f6e\u3002\u8b6c\u5982\uff0c\u5bf9\u4e8evepress\u7684\u5b9e\u9a8c\u677f\u5b50\uff0c\u6211\u4eec\u9009\u62e9\u7684\u5c31\u662f\u201cKernel low-level debugging port\uff08Use PL011UART0at 0x10009000\uff08V2P-CA9core tile\uff09\uff09\u201d\uff0c\u5bf9\u5e94\u7684UART\u7c7b\u578b\u4e3aPL01X\uff0c\u5982\u56fe20.8\u6240\u793a\u3002\\r\\n\\r\\n![1747234748245](./figure/1747234748245.png)\\r\\n\\r\\n\u56fe20.8\u3000\u914d\u7f6eDEBUG_LL\u7684\u7aef\u53e3\\r\\n\\r\\narch/arm/Kconfig.debug\u4f1a\u6839\u636e\u7528\u6237\u7684\u914d\u7f6e\u9009\u62e9\u5bf9\u5e94\u7684arch/arm/include/debug/xxx.S\uff0c\u8b6c\u5982\uff1a\\r\\n\\r\\n```\\r\\nconfig DEBUG_LL_INCLUDE\\r\\n   string\\r\\n   default \\"debug/8250.S\\" if DEBUG_LL_UART_8250 || DEBUG_UART_8250\\r\\n   default \\"debug/pl01x.S\\" if DEBUG_LL_UART_PL01X || DEBUG_UART_PL01X\\r\\n   default \\"debug/sirf.S\\" if DEBUG_SIRFPRIMA2_UART1 || DEBUG_SIRFMARCO_UART1\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u914d\u7f6e\u9009\u9879\u5bf9\u5e94\u7684CONFIG_DEBUG_LL_INCLUDE\u8fd9\u4e2a\u5b8f\u4f1a\u88ab\u5185\u6838\u7684arch/arm/boot/compressed/debug.S\u3001arch/arm/boot/compressed/head.S\u3001arch/arm/kernel/debug.S\u548carch/arm/kernel/head.S\u4ee5\u201c#include CONFIG_DEBUG_LL_INCLUDE\u201d\u7684\u5f62\u5f0f\u5f15\u7528\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.1\u3000Linux\u6587\u4ef6\u64cd\u4f5c","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.1\u3000Linux\u6587\u4ef6\u64cd\u4f5c","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.1\u3000Linux\u6587\u4ef6\u64cd\u4f5c.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.1\u3000Linux\u6587\u4ef6\u64cd\u4f5c.md","title":"5.1.1\u3000\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528","description":"Linux\u7684\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528\uff08\u5728Windows\u7f16\u7a0b\u9886\u57df\uff0c\u4e60\u60ef\u79f0\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u63a5\u53e3\u4e3aAPI\uff09\u6d89\u53ca\u521b\u5efa\u3001\u6253\u5f00\u3001\u8bfb\u5199\u548c\u5173\u95ed\u6587\u4ef6\u3002","date":"2025-09-15T14:44:14.553Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":9.235,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.5\u3000DEBUG_LL\u548cEARLY_PRINTK\u7684\u8bbe\u7f6e"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784"}},"content":"Linux\u7684\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528\uff08\u5728Windows\u7f16\u7a0b\u9886\u57df\uff0c\u4e60\u60ef\u79f0\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u63a5\u53e3\u4e3aAPI\uff09\u6d89\u53ca\u521b\u5efa\u3001\u6253\u5f00\u3001\u8bfb\u5199\u548c\u5173\u95ed\u6587\u4ef6\u3002\\r\\n\\r\\n1.\u521b\u5efa\\r\\n\\r\\n```\\r\\nint creat(const char *filename, mode_t mode);\\r\\n```\\r\\n\\r\\n\u53c2\u6570mode\u6307\u5b9a\u65b0\u5efa\u6587\u4ef6\u7684\u5b58\u53d6\u6743\u9650\uff0c\u5b83\u540cumask\u4e00\u8d77\u51b3\u5b9a\u6587\u4ef6\u7684\u6700\u7ec8\u6743\u9650\uff08mode&umask\uff09\uff0c\u5176\u4e2d\uff0cumask\u4ee3\u8868\u4e86\u6587\u4ef6\u5728\u521b\u5efa\u65f6\u9700\u8981\u53bb\u6389\u7684\u4e00\u4e9b\u5b58\u53d6\u6743\u9650\u3002umask\u53ef\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528umask\uff08\uff09\u6765\u6539\u53d8\uff1a\\r\\n\\r\\n```\\r\\nint umask(int newmask);\\r\\n```\\r\\n\\r\\n\u8be5\u8c03\u7528\u5c06umask\u8bbe\u7f6e\u4e3anewmask\uff0c\u7136\u540e\u8fd4\u56de\u65e7\u7684umask\uff0c\u5b83\u53ea\u5f71\u54cd\u8bfb\u3001\u5199\u548c\u6267\u884c\u6743\u9650\u3002\\r\\n\\r\\n2.\u6253\u5f00\\r\\n\\r\\n```\\r\\nint open(const char *pathname, int flags);\\r\\nint open(const char *pathname, int flags, mode_t mode);\\r\\n```\\r\\n\\r\\nopen\uff08\uff09\u51fd\u6570\u6709\u4e24\u4e2a\u5f62\u5f0f\uff0c\u5176\u4e2dpathname\u662f\u6211\u4eec\u8981\u6253\u5f00\u7684\u6587\u4ef6\u540d\uff08\u5305\u542b\u8def\u5f84\u540d\u79f0\uff0c\u7f3a\u7701\u662f\u8ba4\u4e3a\u5728\u5f53\u524d\u8def\u5f84\u4e0b\u9762\uff09\uff0cflags\u53ef\u4ee5\u662f\u88685.1\u4e2d\u7684\u4e00\u4e2a\u503c\u6216\u8005\u662f\u51e0\u4e2a\u503c\u7684\u7ec4\u5408\u3002\\r\\n\\r\\n\u88685.1\u3000\u6587\u4ef6\u6253\u5f00\u6807\u5fd7\\r\\n\\r\\n![1742741435705](./figure/1742741435705.png)\\r\\n\\r\\nO_RDONLY\u3001O_WRONLY\u3001O_RDWR\u4e09\u4e2a\u6807\u5fd7\u53ea\u80fd\u4f7f\u7528\u4efb\u610f\u7684\u4e00\u4e2a\u3002\\r\\n\\r\\n\u5982\u679c\u4f7f\u7528\u4e86O_CREATE\u6807\u5fd7\uff0c\u5219\u4f7f\u7528\u7684\u51fd\u6570\u662fint open\uff08const char*pathname\uff0cint flags\uff0cmode_t mode\uff09\uff1b\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8fd8\u8981\u6307\u5b9amode\u6807\u5fd7\uff0c\u4ee5\u8868\u793a\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\u3002mode\u53ef\u4ee5\u662f\u88685.2\u4e2d\u6240\u5217\u503c\u7684\u7ec4\u5408\u3002\\r\\n\\r\\n\u88685.2\u3000\u6587\u4ef6\u8bbf\u95ee\u6743\u9650\\r\\n\\r\\n![1742741468416](./figure/1742741468416.png)\\r\\n\\r\\n\u9664\u4e86\u53ef\u4ee5\u901a\u8fc7\u4e0a\u8ff0\u5b8f\u8fdb\u884c\u201c\u6216\u201d\u903b\u8f91\u4ea7\u751f\u6807\u5fd7\u4ee5\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u7528\u6570\u5b57\u6765\u8868\u793a\uff0cLinux\u75285\u4e2a\u6570\u5b57\u6765\u8868\u793a\u6587\u4ef6\u7684\u5404\u79cd\u6743\u9650\uff1a\u7b2c\u4e00\u4f4d\u8868\u793a\u8bbe\u7f6e\u7528\u6237ID\uff1b\u7b2c\u4e8c\u4f4d\u8868\u793a\u8bbe\u7f6e\u7ec4ID\uff1b\u7b2c\u4e09\u4f4d\u8868\u793a\u7528\u6237\u81ea\u5df1\u7684\u6743\u9650\u4f4d\uff1b\u7b2c\u56db\u4f4d\u8868\u793a\u7ec4\u7684\u6743\u9650\uff1b\u6700\u540e\u4e00\u4f4d\u8868\u793a\u5176\u4ed6\u4eba\u7684\u6743\u9650\u3002\u6bcf\u4e2a\u6570\u5b57\u53ef\u4ee5\u53d61\uff08\u6267\u884c\u6743\u9650\uff09\u30012\uff08\u5199\u6743\u9650\uff09\u30014\uff08\u8bfb\u6743\u9650\uff09\u30010\uff08\u65e0\uff09\u6216\u8005\u662f\u8fd9\u4e9b\u503c\u7684\u548c\u3002\u4f8b\u5982\uff0c\u8981\u521b\u5efa\u4e00\u4e2a\u7528\u6237\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\uff0c\u4f46\u662f\u7ec4\u6ca1\u6709\u6743\u9650\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5\u8bfb\u3001\u53ef\u4ee5\u6267\u884c\u7684\u6587\u4ef6\uff0c\u5e76\u8bbe\u7f6e\u7528\u6237ID\u4f4d\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528\u7684\u6a21\u5f0f\u662f1\uff08\u8bbe\u7f6e\u7528\u6237ID\uff09\u30010\uff08\u4e0d\u8bbe\u7f6e\u7ec4ID\uff09\u30017\uff081+2+4\uff0c\u8bfb\u3001\u5199\u3001\u6267\u884c\uff09\u30010\uff08\u6ca1\u6709\u6743\u9650\uff09\u30015\uff081+4\uff0c\u8bfb\u3001\u6267\u884c\uff09\u537310705\uff1a\\r\\n\\r\\n```\\r\\nopen(\\"test\\", O_CREAT, 10 705);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u8bed\u53e5\u7b49\u4ef7\u4e8e\uff1a\\r\\n\\r\\n```\\r\\nopen(\\"test\\", O_CREAT, S_IRWXU | S_IROTH | S_IXOTH | S_ISUID );\\r\\n```\\r\\n\\r\\n\u5982\u679c\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff0copen\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4ee5\u540e\u5bf9\u8be5\u6587\u4ef6\u7684\u6240\u6709\u64cd\u4f5c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8fd9\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u3002\\r\\n\\r\\n3.\u8bfb\u5199\\r\\n\\r\\n\u5728\u6587\u4ef6\u6253\u5f00\u4ee5\u540e\uff0c\u6211\u4eec\u624d\u53ef\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\uff0cLinux\u4e2d\u63d0\u4f9b\u6587\u4ef6\u8bfb\u5199\u7684\u7cfb\u7edf\u8c03\u7528\u662fread\u3001write\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nint read(int fd, const void *buf, size_t length);\\r\\nint write(int fd, const void *buf, size_t length);\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0c\u53c2\u6570buf\u4e3a\u6307\u5411\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0clength\u4e3a\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\u51fd\u6570read\uff08\uff09\u5b9e\u73b0\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26fd\u6240\u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6length\u4e2a\u5b57\u8282\u5230buf\u6240\u6307\u5411\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u8fd4\u56de\u503c\u4e3a\u5b9e\u9645\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002\u51fd\u6570write\u5b9e\u73b0\u628alength\u4e2a\u5b57\u8282\u4ecebuf\u6307\u5411\u7684\u7f13\u51b2\u533a\u4e2d\u5199\u5230\u6587\u4ef6\u63cf\u8ff0\u7b26fd\u6240\u6307\u5411\u7684\u6587\u4ef6\u4e2d\uff0c\u8fd4\u56de\u503c\u4e3a\u5b9e\u9645\u5199\u5165\u7684\u5b57\u8282\u6570\u3002\\r\\n\\r\\n\u4ee5O_CREAT\u4e3a\u6807\u5fd7\u7684open\u5b9e\u9645\u4e0a\u5b9e\u73b0\u4e86\u6587\u4ef6\u521b\u5efa\u7684\u529f\u80fd\uff0c\u56e0\u6b64\uff0c\u4e0b\u9762\u7684\u51fd\u6570\u7b49\u540c\u4e8ecreat\uff08\uff09\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nint open(pathname, O_CREAT | O_WRONLY | O_TRUNC, mode);\\r\\n```\\r\\n\\r\\n4.\u5b9a\u4f4d\\r\\n\\r\\n\u5bf9\u4e8e\u968f\u673a\u6587\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u968f\u673a\u6307\u5b9a\u4f4d\u7f6e\u8fdb\u884c\u8bfb\u5199\uff0c\u4f7f\u7528\u5982\u4e0b\u51fd\u6570\u8fdb\u884c\u5b9a\u4f4d\uff1a\\r\\n\\r\\n```\\r\\nint lseek(int fd, offset_t offset, int whence);\\r\\n```\\r\\n\\r\\nlseek\uff08\uff09\u5c06\u6587\u4ef6\u8bfb\u5199\u6307\u9488\u76f8\u5bf9whence\u79fb\u52a8offset\u4e2a\u5b57\u8282\u3002\u64cd\u4f5c\u6210\u529f\u65f6\uff0c\u8fd4\u56de\u6587\u4ef6\u6307\u9488\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5934\u7684\u4f4d\u7f6e\u3002\u53c2\u6570whence\u53ef\u4f7f\u7528\u4e0b\u8ff0\u503c\uff1a\\r\\n\\r\\n- SEEK_SET\uff1a\u76f8\u5bf9\u6587\u4ef6\u5f00\u5934\\r\\n- SEEK_CUR\uff1a\u76f8\u5bf9\u6587\u4ef6\u8bfb\u5199\u6307\u9488\u7684\u5f53\u524d\u4f4d\u7f6e\\r\\n- SEEK_END\uff1a\u76f8\u5bf9\u6587\u4ef6\u672b\u5c3e\\r\\n\\r\\noffset\u53ef\u53d6\u8d1f\u503c\uff0c\u4f8b\u5982\u4e0b\u8ff0\u8c03\u7528\u53ef\u5c06\u6587\u4ef6\u6307\u9488\u76f8\u5bf9\u5f53\u524d\u4f4d\u7f6e\u5411\u524d\u79fb\u52a85\u4e2a\u5b57\u8282\uff1a\\r\\n\\r\\n```\\r\\nlseek(fd, -5, SEEK_CUR);\\r\\n```\\r\\n\\r\\n\u7531\u4e8elseek\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a\u6587\u4ef6\u6307\u9488\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5934\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u4e0b\u5217\u8c03\u7528\u7684\u8fd4\u56de\u503c\u5c31\u662f\u6587\u4ef6\u7684\u957f\u5ea6\uff1a\\r\\n\\r\\n```\\r\\nlseek(fd, 0, SEEK_END);\\r\\n```\\r\\n\\r\\n5.\u5173\u95ed\\r\\n\\r\\n\u5f53\u6211\u4eec\u64cd\u4f5c\u5b8c\u6210\u4ee5\u540e\uff0c\u8981\u5173\u95ed\u6587\u4ef6\uff0c\u6b64\u65f6\uff0c\u53ea\u8981\u8c03\u7528close\u5c31\u53ef\u4ee5\u4e86\uff0c\u5176\u4e2dfd\u662f\u6211\u4eec\u8981\u5173\u95ed\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1a\\r\\n\\r\\n```\\r\\nint close(int fd);\\r\\n```\\r\\n\\r\\n\u4f8b\u7a0b\uff1a\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa\u7528\u6237\u53ef\u8bfb\u5199\u6587\u4ef6hello.txt\uff0c\u5728\u5176\u4e2d\u5199\u5165\u201cHello\uff0csoftware weekly\u201d\uff0c\u5173\u95ed\u8be5\u6587\u4ef6\u3002\u518d\u6b21\u6253\u5f00\u8be5\u6587\u4ef6\uff0c\u8bfb\u53d6\u5176\u4e2d\u7684\u5185\u5bb9\u5e76\u8f93\u51fa\u5728\u5c4f\u5e55\u4e0a\u3002\\r\\n\\r\\n\u89e3\u7b54\u5982\u4ee3\u7801\u6e05\u53555.1\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53555.1\u3000Linux\u6587\u4ef6\u64cd\u4f5c\u7528\u6237\u7a7a\u95f4\u7f16\u7a0b\uff08\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528\uff09\\r\\n\\r\\n```\\r\\n 1  #include <sys/types.h>\\r\\n 2  #include <sys/stat.h>\\r\\n 3  #include <fcntl.h>\\r\\n 4  #include <stdio.h>\\r\\n 5  #define LENGTH 100\\r\\n 6  main()\\r\\n 7  {\\r\\n 8    int fd, len;\\r\\n 9    char str[LENGTH];\\r\\n10\\r\\n11    fd = open(\\"hello.txt\\", O_CREAT | O_RDWR, S_IRUSR | S_IWUSR); /*\\r\\n12    \u521b\u5efa\u5e76\u6253\u5f00\u6587\u4ef6\\r\\n\\r\\n\\r\\n */\\r\\n13    if (fd) {\\r\\n14         write(fd, \\"Hello World\\", strlen(\\"Hello World\\")); /*\\r\\n15         \u5199\u5165\u5b57\u7b26\u4e32\\r\\n\\r\\n\\r\\n */\\r\\n16         close(fd);\\r\\n17    }\\r\\n18\\r\\n19    fd = open(\\"hello.txt\\", O_RDWR);\\r\\n20    len = read(fd, str, LENGTH); /* \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\\r\\n\\r\\n\\r\\n */\\r\\n21    str[len] = \'\\\\0\';\\r\\n22    printf(\\"%s\\\\n\\", str);\\r\\n23    close(fd);\\r\\n24 }\\r\\n```\\r\\n\\r\\n\u7f16\u8bd1\u5e76\u8fd0\u884c\uff0c\u6267\u884c\u7ed3\u679c\u4e3a\u8f93\u51fa\u201cHello World\u201d\u3002\\r\\n\\r\\n# 5.1.2\u3000C\u5e93\u6587\u4ef6\u64cd\u4f5c\\r\\n\\r\\nC\u5e93\u51fd\u6570\u7684\u6587\u4ef6\u64cd\u4f5c\u5b9e\u9645\u4e0a\u72ec\u7acb\u4e8e\u5177\u4f53\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\uff0c\u4e0d\u7ba1\u662f\u5728DOS\u3001Windows\u3001Linux\u8fd8\u662f\u5728VxWorks\u4e2d\u90fd\u662f\u8fd9\u4e9b\u51fd\u6570\\r\\n\\r\\n1.\u521b\u5efa\u548c\u6253\u5f00\\r\\n\\r\\n```\\r\\nfiLE *fopen(const char *path, const char *mode);\\r\\n```\\r\\n\\r\\nfopen\uff08\uff09\u7528\u4e8e\u6253\u5f00\u6307\u5b9a\u6587\u4ef6filename\uff0c\u5176\u4e2d\u7684mode\u4e3a\u6253\u5f00\u6a21\u5f0f\uff0cC\u5e93\u51fd\u6570\u4e2d\u652f\u6301\u7684\u6253\u5f00\u6a21\u5f0f\u5982\u88685.3\u6240\u793a\u3002\\r\\n\\r\\n\u88685.3\u3000C\u5e93\u51fd\u6570\u6587\u4ef6\u6253\u5f00\u6807\u5fd7\\r\\n\\r\\n![1742741795661](./figure/1742741795661.png)\\r\\n\\r\\n\u5176\u4e2d\uff0cb\u7528\u4e8e\u533a\u5206\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\uff0c\u8fd9\u4e00\u70b9\u5728DOS\u3001Windows\u7cfb\u7edf\u4e2d\u662f\u6709\u533a\u5206\u7684\uff0c\u4f46Linux\u4e0d\u533a\u5206\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\u3002\\r\\n\\r\\n2.\u8bfb\u5199\\r\\n\\r\\nC\u5e93\u51fd\u6570\u652f\u6301\u4ee5\u5b57\u7b26\u3001\u5b57\u7b26\u4e32\u7b49\u4e3a\u5355\u4f4d\uff0c\u652f\u6301\u6309\u7167\u67d0\u79cd\u683c\u5f0f\u8fdb\u884c\u6587\u4ef6\u7684\u8bfb\u5199\uff0c\u8fd9\u4e00\u7ec4\u51fd\u6570\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint fgetc(fiLE *stream);\\r\\nint fputc(int c, fiLE *stream);\\r\\nchar *fgets(char *s, int n, fiLE *stream);\\r\\nint fputs(const char *s, fiLE *stream);\\r\\nint fprintf(fiLE *stream, const char *format, ...);\\r\\nint fscanf (fiLE *stream, const char *format, ...);\\r\\nsize_t fread(void *ptr, size_t size, size_t n, fiLE *stream);\\r\\nsize_t fwrite (const void *ptr, size_t size, size_t n, fiLE *stream);\\r\\n```\\r\\n\\r\\nfread\uff08\uff09\u5b9e\u73b0\u4ece\u6d41\uff08stream\uff09\u4e2d\u8bfb\u53d6n\u4e2a\u5b57\u6bb5\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u4e3asize\u5b57\u8282\uff0c\u5e76\u5c06\u8bfb\u53d6\u7684\u5b57\u6bb5\u653e\u5165ptr\u6240\u6307\u7684\u5b57\u7b26\u6570\u7ec4\u4e2d\uff0c\u8fd4\u56de\u5b9e\u9645\u5df2\u8bfb\u53d6\u7684\u5b57\u6bb5\u6570\u3002\u5f53\u8bfb\u53d6\u7684\u5b57\u6bb5\u6570\u5c0f\u4e8enum\u65f6\uff0c\u53ef\u80fd\u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u51fa\u73b0\u4e86\u9519\u8bef\uff0c\u4e5f\u53ef\u80fd\u662f\u8bfb\u5230\u4e86\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u56e0\u6b64\u8981\u901a\u8fc7\u8c03\u7528feof\uff08\uff09\u548cferror\uff08\uff09\u6765\u5224\u65ad\u3002\\r\\n\\r\\nwrite\uff08\uff09\u5b9e\u73b0\u4ece\u7f13\u51b2\u533aptr\u6240\u6307\u7684\u6570\u7ec4\u4e2d\u628an\u4e2a\u5b57\u6bb5\u5199\u5230\u6d41\uff08stream\uff09\u4e2d\uff0c\u6bcf\u4e2a\u5b57\u6bb5\u957f\u4e3asize\u4e2a\u5b57\u8282\uff0c\u8fd4\u56de\u5b9e\u9645\u5199\u5165\u7684\u5b57\u6bb5\u6570\u3002\\r\\n\\r\\n\u53e6\u5916\uff0cC\u5e93\u51fd\u6570\u8fd8\u63d0\u4f9b\u4e86\u8bfb\u5199\u8fc7\u7a0b\u4e2d\u7684\u5b9a\u4f4d\u80fd\u529b\uff0c\u8fd9\u4e9b\u51fd\u6570\u5305\u62ec\uff1a\\r\\n\\r\\n```\\r\\nint fgetpos(fiLE *stream, fpos_t *pos);\\r\\nint fsetpos(fiLE *stream, const fpos_t *pos);\\r\\nint fseek(fiLE *stream, long offset, int whence);\\r\\n```\\r\\n\\r\\n3.\u5173\u95ed\\r\\n\\r\\n\u5229\u7528C\u5e93\u51fd\u6570\u5173\u95ed\u6587\u4ef6\u4f9d\u7136\u662f\u5f88\u7b80\u5355\u7684\u64cd\u4f5c\uff1a\\r\\n\\r\\n```\\r\\nint fclose (fiLE *stream);\\r\\n```\\r\\n\\r\\n\u4f8b\u7a0b\uff1a\u5c06\u7b2c5.1.1\u8282\u4e2d\u7684\u4f8b\u7a0b\u7528C\u5e93\u51fd\u6570\u6765\u5b9e\u73b0\uff0c\u5982\u4ee3\u7801\u6e05\u53555-2\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53555.2\u3000Linux\u6587\u4ef6\u64cd\u4f5c\u7528\u6237\u7a7a\u95f4\u7f16\u7a0b\uff08\u4f7f\u7528C\u5e93\u51fd\u6570\uff09\\r\\n\\r\\n```\\r\\n 1 #include <stdio.h>\\r\\n 2 #define LENGTH 100\\r\\n 3 main()\\r\\n 4 {\\r\\n 5   fiLE *fd;\\r\\n 6   char str[LENGTH];\\r\\n 7\\r\\n 8   fd = fopen(\\"hello.txt\\", \\"w+\\");/* \u521b\u5efa\u5e76\u6253\u5f00\u6587\u4ef6\\r\\n\\r\\n\\r\\n */\\r\\n 9   if (fd) {\\r\\n10       fputs(\\"Hello World\\", fd); /* \u5199\u5165\u5b57\u7b26\u4e32\\r\\n\\r\\n\\r\\n */\\r\\n11       fclose(fd);\\r\\n12   }\\r\\n13\\r\\n14   fd = fopen(\\"hello.txt\\", \\"r\\");\\r\\n15   fgets(str, LENGTH, fd);       /* \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\\r\\n\\r\\n\\r\\n */\\r\\n16   printf(\\"%s\\\\n\\", str);\\r\\n17   fclose(fd);\\r\\n18 }\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784","description":"\u8bbe\u5907\u7684\u4e2d\u65ad\u4f1a\u6253\u65ad\u5185\u6838\u8fdb\u7a0b\u4e2d\u7684\u6b63\u5e38\u8c03\u5ea6\u548c\u8fd0\u884c\uff0c\u7cfb\u7edf\u5bf9\u66f4\u9ad8\u541e\u5410\u7387\u7684\u8ffd\u6c42\u52bf\u5fc5\u8981\u6c42\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5c3d\u91cf\u77ed\u5c0f\u7cbe\u608d\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u826f\u597d\u7684\u613f\u671b\u5f80\u5f80\u4e0e\u73b0\u5b9e\u5e76\u4e0d\u543b\u5408\u3002\u5728\u5927\u591a\u6570\u771f\u5b9e\u7684\u7cfb\u7edf\u4e2d\uff0c\u5f53\u4e2d\u65ad\u5230\u6765\u65f6\uff0c\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u5f80\u5f80\u5e76\u4e0d\u4f1a\u662f\u77ed\u5c0f\u7684\uff0c\u5b83\u53ef\u80fd\u8981\u8fdb\u884c\u8f83\u5927\u91cf\u7684\u8017\u65f6\u5904\u7406\u3002","date":"2025-09-15T14:44:14.541Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.665,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"5.1.1\u3000\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.1\u3000Linux\u6587\u4ef6\u64cd\u4f5c"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784"}},"content":"\u8bbe\u5907\u7684\u4e2d\u65ad\u4f1a\u6253\u65ad\u5185\u6838\u8fdb\u7a0b\u4e2d\u7684\u6b63\u5e38\u8c03\u5ea6\u548c\u8fd0\u884c\uff0c\u7cfb\u7edf\u5bf9\u66f4\u9ad8\u541e\u5410\u7387\u7684\u8ffd\u6c42\u52bf\u5fc5\u8981\u6c42\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u5c3d\u91cf\u77ed\u5c0f\u7cbe\u608d\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u826f\u597d\u7684\u613f\u671b\u5f80\u5f80\u4e0e\u73b0\u5b9e\u5e76\u4e0d\u543b\u5408\u3002\u5728\u5927\u591a\u6570\u771f\u5b9e\u7684\u7cfb\u7edf\u4e2d\uff0c\u5f53\u4e2d\u65ad\u5230\u6765\u65f6\uff0c\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u5f80\u5f80\u5e76\u4e0d\u4f1a\u662f\u77ed\u5c0f\u7684\uff0c\u5b83\u53ef\u80fd\u8981\u8fdb\u884c\u8f83\u5927\u91cf\u7684\u8017\u65f6\u5904\u7406\u3002\\r\\n\\r\\n\u56fe10.3\u63cf\u8ff0\u4e86Linux\u5185\u6838\u7684\u4e2d\u65ad\u5904\u7406\u673a\u5236\u3002\u4e3a\u4e86\u5728\u4e2d\u65ad\u6267\u884c\u65f6\u95f4\u5c3d\u91cf\u77ed\u548c\u4e2d\u65ad\u5904\u7406\u9700\u5b8c\u6210\u7684\u5de5\u4f5c\u5c3d\u91cf\u5927\u4e4b\u95f4\u627e\u5230\u4e00\u4e2a\u5e73\u8861\u70b9\uff0cLinux\u5c06\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5206\u89e3\u4e3a\u4e24\u4e2a\u534a\u90e8\uff1a\u9876\u534a\u90e8\uff08Top Half\uff09\u548c\u5e95\u534a\u90e8\uff08Bottom Half\uff09\u3002\\r\\n\\r\\n![1743346115936](./figure/1743346115936.png)\\r\\n\\r\\n\u56fe10.3\u3000Linux\u4e2d\u65ad\u5904\u7406\u673a\u5236\\r\\n\\r\\n\u9876\u534a\u90e8\u7528\u4e8e\u5b8c\u6210\u5c3d\u91cf\u5c11\u7684\u6bd4\u8f83\u7d27\u6025\u7684\u529f\u80fd\uff0c\u5b83\u5f80\u5f80\u53ea\u662f\u7b80\u5355\u5730\u8bfb\u53d6\u5bc4\u5b58\u5668\u4e2d\u7684\u4e2d\u65ad\u72b6\u6001\uff0c\u5e76\u5728\u6e05\u9664\u4e2d\u65ad\u6807\u5fd7\u540e\u5c31\u8fdb\u884c\u201c\u767b\u8bb0\u4e2d\u65ad\u201d\u7684\u5de5\u4f5c\u3002\u201c\u767b\u8bb0\u4e2d\u65ad\u201d\u610f\u5473\u7740\u5c06\u5e95\u534a\u90e8\u5904\u7406\u7a0b\u5e8f\u6302\u5230\u8be5\u8bbe\u5907\u7684\u5e95\u534a\u90e8\u6267\u884c\u961f\u5217\u4e2d\u53bb\u3002\u8fd9\u6837\uff0c\u9876\u534a\u90e8\u6267\u884c\u7684\u901f\u5ea6\u5c31\u4f1a\u5f88\u5feb\uff0c\u4ece\u800c\u53ef\u4ee5\u670d\u52a1\u66f4\u591a\u7684\u4e2d\u65ad\u8bf7\u6c42\u3002\\r\\n\\r\\n\u73b0\u5728\uff0c\u4e2d\u65ad\u5904\u7406\u5de5\u4f5c\u7684\u91cd\u5fc3\u5c31\u843d\u5728\u4e86\u5e95\u534a\u90e8\u7684\u5934\u4e0a\uff0c\u9700\u7528\u5b83\u6765\u5b8c\u6210\u4e2d\u65ad\u4e8b\u4ef6\u7684\u7edd\u5927\u591a\u6570\u4efb\u52a1\u3002\u5e95\u534a\u90e8\u51e0\u4e4e\u505a\u4e86\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6240\u6709\u7684\u4e8b\u60c5\uff0c\u800c\u4e14\u53ef\u4ee5\u88ab\u65b0\u7684\u4e2d\u65ad\u6253\u65ad\uff0c\u8fd9\u4e5f\u662f\u5e95\u534a\u90e8\u548c\u9876\u534a\u90e8\u7684\u6700\u5927\u4e0d\u540c\uff0c\u56e0\u4e3a\u9876\u534a\u90e8\u5f80\u5f80\u88ab\u8bbe\u8ba1\u6210\u4e0d\u53ef\u4e2d\u65ad\u3002\u5e95\u534a\u90e8\u76f8\u5bf9\u6765\u8bf4\u5e76\u4e0d\u662f\u975e\u5e38\u7d27\u6025\u7684\uff0c\u800c\u4e14\u76f8\u5bf9\u6bd4\u8f83\u8017\u65f6\uff0c\u4e0d\u5728\u786c\u4ef6\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e2d\u6267\u884c\u3002\\r\\n\\r\\n\u5c3d\u7ba1\u9876\u534a\u90e8\u3001\u5e95\u534a\u90e8\u7684\u7ed3\u5408\u80fd\u591f\u6539\u5584\u7cfb\u7edf\u7684\u54cd\u5e94\u80fd\u529b\uff0c\u4f46\u662f\uff0c\u50f5\u5316\u5730\u8ba4\u4e3aLinux\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684\u4e2d\u65ad\u5904\u7406\u4e00\u5b9a\u8981\u5206\u4e24\u4e2a\u534a\u90e8\u5219\u662f\u4e0d\u5bf9\u7684\u3002\u5982\u679c\u4e2d\u65ad\u8981\u5904\u7406\u7684\u5de5\u4f5c\u672c\u8eab\u5f88\u5c11\uff0c\u5219\u5b8c\u5168\u53ef\u4ee5\u76f4\u63a5\u5728\u9876\u534a\u90e8\u5168\u90e8\u5b8c\u6210\u3002\\r\\n\\r\\n\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5bf9\u4e2d\u65ad\u7684\u5904\u7406\u4e5f\u91c7\u7528\u4e86\u7c7b\u4f3c\u4e8eLinux\u7684\u65b9\u6cd5\uff0c\u771f\u6b63\u7684\u786c\u4ef6\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u90fd\u5e94\u8be5\u5c3d\u91cf\u77ed\u3002\u56e0\u6b64\uff0c\u8bb8\u591a\u64cd\u4f5c\u7cfb\u7edf\u90fd\u63d0\u4f9b\u4e86\u4e2d\u65ad\u4e0a\u4e0b\u6587\u548c\u975e\u4e2d\u65ad\u4e0a\u4e0b\u6587\u76f8\u7ed3\u5408\u7684\u673a\u5236\uff0c\u5c06\u4e2d\u65ad\u7684\u8017\u65f6\u5de5\u4f5c\u4fdd\u7559\u5230\u975e\u4e2d\u65ad\u4e0a\u4e0b\u6587\u53bb\u6267\u884c\u3002\u4f8b\u5982\uff0c\u5728VxWorks\u4e2d\uff0c\u7f51\u7edc\u8bbe\u5907\u5305\u63a5\u6536\u4e2d\u65ad\u5230\u6765\u540e\uff0c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4f1a\u901a\u8fc7netJobAdd\uff08\uff09\u51fd\u6570\u5c06\u8017\u65f6\u7684\u5305\u63a5\u6536\u548c\u4e0a\u4f20\u5de5\u4f5c\u4ea4\u7ed9tNetTask\u4efb\u52a1\u53bb\u6267\u884c\u3002\\r\\n\\r\\n\u5728Linux\u4e2d\uff0c\u67e5\u770b/proc/interrupts\u6587\u4ef6\u53ef\u4ee5\u83b7\u5f97\u7cfb\u7edf\u4e2d\u4e2d\u65ad\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u5e76\u80fd\u7edf\u8ba1\u51fa\u6bcf\u4e00\u4e2a\u4e2d\u65ad\u53f7\u4e0a\u7684\u4e2d\u65ad\u5728\u6bcf\u4e2aCPU\u4e0a\u53d1\u751f\u7684\u6b21\u6570\uff0c\u5177\u4f53\u5982\u56fe10.4\u6240\u793a\u3002\\r\\n\\r\\n![image-20250330224941927](./figure/image-20250330224941927.png)\\r\\n\\r\\n\u56fe10.4\u3000Linux\u4e2d\u7684\u4e2d\u65ad\u7edf\u8ba1\u4fe1\u606f"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784","description":"Linux\u7684I2 C\u4f53\u7cfb\u7ed3\u6784\u5206\u4e3a3\u4e2a\u7ec4\u6210\u90e8\u5206\u3002","date":"2025-09-15T14:44:14.541Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":12.835,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.2\u3000Linux\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u67b6\u6784"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3"}},"content":"Linux\u7684I2 C\u4f53\u7cfb\u7ed3\u6784\u5206\u4e3a3\u4e2a\u7ec4\u6210\u90e8\u5206\u3002\\r\\n\\r\\n\uff081\uff09I2 C\u6838\u5fc3\\r\\n\\r\\nI2 C\u6838\u5fc3\u63d0\u4f9b\u4e86I2 C\u603b\u7ebf\u9a71\u52a8\u548c\u8bbe\u5907\u9a71\u52a8\u7684\u6ce8\u518c\u3001\u6ce8\u9500\u65b9\u6cd5\uff0cI2 C\u901a\u4fe1\u65b9\u6cd5\uff08\u5373Algorithm\uff09\u4e0a\u5c42\u7684\u4e0e\u5177\u4f53\u9002\u914d\u5668\u65e0\u5173\u7684\u4ee3\u7801\u4ee5\u53ca\u63a2\u6d4b\u8bbe\u5907\u3001\u68c0\u6d4b\u8bbe\u5907\u5730\u5740\u7684\u4e0a\u5c42\u4ee3\u7801\u7b49\uff0c\u5982\u56fe15.1\u6240\u793a\u3002\\r\\n\\r\\n\uff082\uff09I2 C\u603b\u7ebf\u9a71\u52a8\\r\\n\\r\\nI2 C\u603b\u7ebf\u9a71\u52a8\u662f\u5bf9I2 C\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u4e2d\u9002\u914d\u5668\u7aef\u7684\u5b9e\u73b0\uff0c\u9002\u914d\u5668\u53ef\u7531CPU\u63a7\u5236\uff0c\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u96c6\u6210\u5728CPU\u5185\u90e8\u3002\\r\\n\\r\\nI2 C\u603b\u7ebf\u9a71\u52a8\u4e3b\u8981\u5305\u542bI2 C\u9002\u914d\u5668\u6570\u636e\u7ed3\u6784i2c_adapter\u3001I2 C\u9002\u914d\u5668\u7684Algorithm\u6570\u636e\u7ed3\u6784i2c_algorithm\u548c\u63a7\u5236I2 C\u9002\u914d\u5668\u4ea7\u751f\u901a\u4fe1\u4fe1\u53f7\u7684\u51fd\u6570\u3002\\r\\n\\r\\n![1744988278285](./figure/1744988278285.png)\\r\\n\\r\\n\u56fe15.1\u3000Linux\u7684I2 C\u4f53\u7cfb\u7ed3\u6784\\r\\n\\r\\n\u7ecf\u7531I2 C\u603b\u7ebf\u9a71\u52a8\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u63a7\u5236I2 C\u9002\u914d\u5668\u4ee5\u4e3b\u63a7\u65b9\u5f0f\u4ea7\u751f\u5f00\u59cb\u4f4d\u3001\u505c\u6b62\u4f4d\u3001\u8bfb\u5199\u5468\u671f\uff0c\u4ee5\u53ca\u4ee5\u4ece\u8bbe\u5907\u65b9\u5f0f\u88ab\u8bfb\u5199\u3001\u4ea7\u751fACK\u7b49\u3002\\r\\n\\r\\n\uff083\uff09I2 C\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\nI2 C\u8bbe\u5907\u9a71\u52a8\uff08\u4e5f\u79f0\u4e3a\u5ba2\u6237\u9a71\u52a8\uff09\u662f\u5bf9I2 C\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u4e2d\u8bbe\u5907\u7aef\u7684\u5b9e\u73b0\uff0c\u8bbe\u5907\u4e00\u822c\u6302\u63a5\u5728\u53d7CPU\u63a7\u5236\u7684I2 C\u9002\u914d\u5668\u4e0a\uff0c\u901a\u8fc7I2 C\u9002\u914d\u5668\u4e0eCPU\u4ea4\u6362\u6570\u636e\u3002\\r\\n\\r\\nI2 C\u8bbe\u5907\u9a71\u52a8\u4e3b\u8981\u5305\u542b\u6570\u636e\u7ed3\u6784i2c_driver\u548ci2c_client\uff0c\u6211\u4eec\u9700\u8981\u6839\u636e\u5177\u4f53\u8bbe\u5907\u5b9e\u73b0\u5176\u4e2d\u7684\u6210\u5458\u51fd\u6570\u3002\\r\\n\\r\\n\u5728Linux 2.6\u5185\u6838\u4e2d\uff0c\u6240\u6709\u7684I2 C\u8bbe\u5907\u90fd\u5728sysfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u663e\u793a\uff0c\u5b58\u4e8e/sys/bus/i2c/\u76ee\u5f55\u4e0b\uff0c\u4ee5\u9002\u914d\u5668\u5730\u5740\u548c\u82af\u7247\u5730\u5740\u7684\u5f62\u5f0f\u5217\u51fa\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\n$ tree /sys/bus/i2c/\\r\\n/sys/bus/i2c/\\r\\n|-- devices\\r\\n|   |-- i2c0 -> ../../../devices/platform/versatile-i2c.0/i2c-0\\r\\n|   \'-- i2c1 -> ../../../devices/platform/versatile-i2c.0/i2c-1\\r\\n\'-- drivers\\r\\n    \'-- dummy\\r\\n```\\r\\n\\r\\n\u5728Linux\u5185\u6838\u6e90\u4ee3\u7801\u4e2d\u7684drivers\u76ee\u5f55\u4e0b\u6709\u4e00\u4e2ai2c\u76ee\u5f55\uff0c\u800c\u5728i2c\u76ee\u5f55\u4e0b\u53c8\u5305\u542b\u5982\u4e0b\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u3002\\r\\n\\r\\n\uff081\uff09i2c-core.c\\r\\n\\r\\n\u8fd9\u4e2a\u6587\u4ef6\u5b9e\u73b0\u4e86I2 C\u6838\u5fc3\u7684\u529f\u80fd\u4ee5\u53ca/proc/bus/i2c*\u63a5\u53e3\u3002\\r\\n\\r\\n\uff082\uff09i2c-dev.c\\r\\n\\r\\n\u5b9e\u73b0\u4e86I2 C\u9002\u914d\u5668\u8bbe\u5907\u6587\u4ef6\u7684\u529f\u80fd\uff0c\u6bcf\u4e00\u4e2aI2 C\u9002\u914d\u5668\u90fd\u88ab\u5206\u914d\u4e00\u4e2a\u8bbe\u5907\u3002\u901a\u8fc7\u9002\u914d\u5668\u8bbf\u95ee\u8bbe\u5907\u65f6\u7684\u4e3b\u8bbe\u5907\u53f7\u90fd\u4e3a89\uff0c\u6b21\u8bbe\u5907\u53f7\u4e3a0~255\u3002\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u201ci2c-%d\u201d\uff08i2c-0\uff0ci2c-1\uff0c\u2026\uff0ci2c-10\uff0c\u2026\uff09\u6587\u4ef6\u540d\u5e76\u4f7f\u7528\u6587\u4ef6\u64cd\u4f5c\u63a5\u53e3open\uff08\uff09\u3001write\uff08\uff09\u3001read\uff08\uff09\u3001ioctl\uff08\uff09\u548cclose\uff08\uff09\u7b49\u6765\u8bbf\u95ee\u8fd9\u4e2a\u8bbe\u5907\u3002\\r\\n\\r\\ni2c-dev.c\u5e76\u4e0d\u662f\u9488\u5bf9\u7279\u5b9a\u7684\u8bbe\u5907\u800c\u8bbe\u8ba1\u7684\uff0c\u53ea\u662f\u63d0\u4f9b\u4e86\u901a\u7528\u7684read\uff08\uff09\u3001write\uff08\uff09\u548cioctl\uff08\uff09\u7b49\u63a5\u53e3\uff0c\u5e94\u7528\u5c42\u53ef\u4ee5\u501f\u7528\u8fd9\u4e9b\u63a5\u53e3\u8bbf\u95ee\u6302\u63a5\u5728\u9002\u914d\u5668\u4e0a\u7684I2 C\u8bbe\u5907\u7684\u5b58\u50a8\u7a7a\u95f4\u6216\u5bc4\u5b58\u5668\uff0c\u5e76\u63a7\u5236I2 C\u8bbe\u5907\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\\r\\n\\r\\n\uff083\uff09busses\u6587\u4ef6\u5939\\r\\n\\r\\n\u8fd9\u4e2a\u6587\u4ef6\u5305\u542b\u4e86\u4e00\u4e9bI2 C\u4e3b\u673a\u63a7\u5236\u5668\u7684\u9a71\u52a8\uff0c\u5982i2c-tegra.c\u3001i2c-omap.c\u3001i2c-versatile.c\u3001i2c-s3c2410.c\u7b49\u3002\\r\\n\\r\\n\uff084\uff09algos\u6587\u4ef6\u5939\\r\\n\\r\\n\u5b9e\u73b0\u4e86\u4e00\u4e9bI2 C\u603b\u7ebf\u9002\u914d\u5668\u7684\u901a\u4fe1\u65b9\u6cd5\u3002\\r\\n\\r\\n\u6b64\u5916\uff0c\u5185\u6838\u4e2d\u7684i2c.h\u5934\u6587\u4ef6\u5bf9i2c_adapter\u3001i2c_algorithm\u3001i2c_driver\u548ci2c_client\u8fd94\u4e2a\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4e86\u5b9a\u4e49\u3002\u7406\u89e3\u8fd94\u4e2a\u7ed3\u6784\u4f53\u7684\u4f5c\u7528\u5341\u5206\u91cd\u8981\uff0c\u5b83\u4eec\u7684\u5b9a\u4e49\u4f4d\u4e8einclude/linux/i2c.h\u6587\u4ef6\u4e2d\uff0c\u4ee3\u7801\u6e05\u535515.1\u300115.2\u300115.3\u300115.4\u5206\u522b\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.1\u3000i2c_adapter\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct i2c_adapter {\\r\\n 2        struct module *owner;\\r\\n 3        unsigned int class;                 /* classes to allow probing for */\\r\\n 4        const struct i2c_algorithm *algo;   /* the algorithm to access the bus */\\r\\n 5        void *algo_data;\\r\\n 6\\r\\n 7        /* data fields that are valid for all devices   */\\r\\n 8        struct rt_mutex bus_lock;\\r\\n 9\\r\\n10        int timeout;                        /* in jiffies */\\r\\n11        int retries;\\r\\n12        struct device dev;                  /* the adapter device */\\r\\n13\\r\\n14        int nr;\\r\\n15        char name[48];\\r\\n16        struct completion dev_released;\\r\\n17\\r\\n18        struct mutex userspace_clients_lock;\\r\\n19        struct list_head userspace_clients;\\r\\n20\\r\\n21        struct i2c_bus_recovery_info *bus_recovery_info;\\r\\n22};\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.2\u3000i2c_algorithm\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct i2c_algorithm {\\r\\n 2        /* If an adapter algorithm can\'t do I2C-level access, set master_xfer\\r\\n 3           to NULL. If an adapter algorithm can do SMBus access, set\\r\\n 4           smbus_xfer. If set to NULL, the SMBus protocol is simulated\\r\\n 5           using common I2C messages */\\r\\n 6        /* master_xfer should return the number of messages successfully\\r\\n 7           processed, or a negative value on error */\\r\\n 8        int (*master_xfer)(struct i2c_adapter *adap, struct i2c_msg *msgs,\\r\\n 9                           int num);\\r\\n10        int (*smbus_xfer) (struct i2c_adapter *adap, u16 addr,\\r\\n11                        unsigned short flags, char read_write,\\r\\n12                        u8 command, int size, union i2c_smbus_data *data);\\r\\n13\\r\\n14        /* To determine what the adapter supports */\\r\\n15        u32 (*functionality) (struct i2c_adapter *);\\r\\n16};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u7b2c8\u884c\u4ee3\u7801\u5bf9\u5e94\u4e3aI2 C\u4f20\u8f93\u51fd\u6570\u6307\u9488\uff0cI2 C\u4e3b\u673a\u9a71\u52a8\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u4e5f\u805a\u96c6\u5728\u8fd9\u91cc\u3002\u4e0a\u8ff0\u7b2c10\u884c\u4ee3\u7801\u5bf9\u5e94\u4e3aSMBus\u4f20\u8f93\u51fd\u6570\u6307\u9488\uff0cSMBus\u4e0d\u9700\u8981\u589e\u52a0\u989d\u5916\u5f15\u811a\uff0c\u4e0eI2 C\u603b\u7ebf\u76f8\u6bd4\uff0c\u5728\u8bbf\u95ee\u65f6\u5e8f\u4e0a\u4e5f\u6709\u4e00\u5b9a\u7684\u5dee\u5f02\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.3\u3000i2c_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct i2c_driver {\\r\\n 2        unsigned int class;\\r\\n 3\\r\\n 4        /* Notifies the driver that a new bus has appeared. You should avoid\\r\\n 5         * using this, it will be removed in a near future.\\r\\n 6         */\\r\\n 7        int (*attach_adapter)(struct i2c_adapter *) __deprecated;\\r\\n 8\\r\\n 9        /* Standard driver model interfaces */\\r\\n10        int (*probe)(struct i2c_client *, const struct i2c_device_id *);\\r\\n11        int (*remove)(struct i2c_client *);\\r\\n12\\r\\n13        /* driver model interfaces that don\'t relate to enumeration  */\\r\\n14        void (*shutdown)(struct i2c_client *);\\r\\n15        int (*suspend)(struct i2c_client *, pm_message_t mesg);\\r\\n16        int (*resume)(struct i2c_client *);\\r\\n17\\r\\n18        /* Alert callback, for example for the SMBus alert protocol.\\r\\n19         * The format and meaning of the data value depends on the protocol.\\r\\n20         * For the SMBus alert protocol, there is a single bit of data passed\\r\\n21         * as the alert response\'s low bit (\\"event flag\\").\\r\\n22         */\\r\\n23        void (*alert)(struct i2c_client *, unsigned int data);\\r\\n24\\r\\n25        /* a ioctl like command that can be used to perform specific functions\\r\\n26         * with the device.\\r\\n27         */\\r\\n28        int (*command)(struct i2c_client *client, unsigned int cmd, void *arg);\\r\\n29\\r\\n30        struct device_driver driver;\\r\\n31        const struct i2c_device_id *id_table;\\r\\n32\\r\\n33        /* Device detection callback for automatic device creation */\\r\\n34        int (*detect)(struct i2c_client *, struct i2c_board_info *);\\r\\n35        const unsigned short *address_list;\\r\\n36        struct list_head clients;\\r\\n37};\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.4\u3000i2c_client\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct i2c_client {\\r\\n 2        unsigned short flags;         /* div., see below            */\\r\\n 3        unsigned short addr;          /* chip address - NOTE: 7bit    */\\r\\n 4                                      /* addresses are stored in the  */\\r\\n 5                                      /* _LOWER_ 7 bits             */\\r\\n 6        char name[I2C_NAME_SIZE];\\r\\n 7        struct i2c_adapter *adapter;  /* the adapter we sit on        */\\r\\n 8        struct device dev;            /* the device structure         */\\r\\n 9        int irq;                      /* irq issued by device         */\\r\\n10        struct list_head detected;\\r\\n11};\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u5206\u6790i2c_adapter\u3001i2c_algorithm\u3001i2c_driver\u548ci2c_client\u8fd94\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u4f5c\u7528\u53ca\u5176\u76d8\u6839\u9519\u8282\u7684\u5173\u7cfb\u3002\\r\\n\\r\\n\uff081\uff09i2c_adapter\u4e0ei2c_algorithm\\r\\n\\r\\ni2c_adapter\u5bf9\u5e94\u4e8e\u7269\u7406\u4e0a\u7684\u4e00\u4e2a\u9002\u914d\u5668\uff0c\u800ci2c_algorithm\u5bf9\u5e94\u4e00\u5957\u901a\u4fe1\u65b9\u6cd5\u3002\u4e00\u4e2aI2 C\u9002\u914d\u5668\u9700\u8981i2c_algorithm\u63d0\u4f9b\u7684\u901a\u4fe1\u51fd\u6570\u6765\u63a7\u5236\u9002\u914d\u5668\u4ea7\u751f\u7279\u5b9a\u7684\u8bbf\u95ee\u5468\u671f\u3002\u7f3a\u5c11i2c_algorithm\u7684i2c_adapter\u4ec0\u4e48\u4e5f\u505a\u4e0d\u4e86\uff0c\u56e0\u6b64i2c_adapter\u4e2d\u5305\u542b\u6240\u4f7f\u7528\u7684i2c_algorithm\u7684\u6307\u9488\u3002\\r\\n\\r\\ni2c_algorithm\u4e2d\u7684\u5173\u952e\u51fd\u6570master_xfer\uff08\uff09\u7528\u4e8e\u4ea7\u751fI2 C\u8bbf\u95ee\u5468\u671f\u9700\u8981\u7684\u4fe1\u53f7\uff0c\u4ee5i2c_msg\uff08\u5373I2 C\u6d88\u606f\uff09\u4e3a\u5355\u4f4d\u3002i2c_msg\u7ed3\u6784\u4f53\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u5b83\u5b9a\u4e49\u4e8einclude/uapi/linux/i2c.h\uff08\u5728uapi\u76ee\u5f55\u4e0b\uff0c\u8bc1\u660e\u7528\u6237\u7a7a\u95f4\u7684\u5e94\u7528\u4e5f\u53ef\u80fd\u4f7f\u7528\u8fd9\u4e2a\u7ed3\u6784\u4f53\uff09\u4e2d\uff0c\u4ee3\u7801\u6e05\u535515.5\u7ed9\u51fa\u4e86\u5b83\u7684\u5b9a\u4e49\uff0c\u5176\u4e2d\u7684\u6210\u5458\u8868\u660e\u4e86I2 C\u7684\u4f20\u8f93\u5730\u5740\u3001\u65b9\u5411\u3001\u7f13\u51b2\u533a\u3001\u7f13\u51b2\u533a\u957f\u5ea6\u7b49\u4fe1\u606f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.5\u3000i2c_msg\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct i2c_msg {\\r\\n 2        __u16 addr;                     /* slave address          */\\r\\n 3        __u16 flags;\\r\\n 4#define I2C_M_TEN             0x0010  /* this is a ten bit chip address */\\r\\n 5#define I2C_M_RD              0x0001  /* read data, from slave to master */\\r\\n 6#define I2C_M_STOP            0x8000  /* if I2C_FUNC_PROTOCOL_MANGLING */\\r\\n 7#define I2C_M_NOSTART         0x4000  /* if I2C_FUNC_NOSTART */\\r\\n 8#define I2C_M_REV_DIR_ADDR    0x2000  /* if I2C_FUNC_PROTOCOL_MANGLING */\\r\\n 9#define I2C_M_IGNORE_NAK      0x1000  /* if I2C_FUNC_PROTOCOL_MANGLING */\\r\\n10#define I2C_M_NO_RD_ACK       0x0800  /* if I2C_FUNC_PROTOCOL_MANGLING */\\r\\n11#define I2C_M_RECV_LEN        0x0400  /* length will be first received byte */\\r\\n12         __u16 len;                     /* msg length                 */\\r\\n13         __u8 *buf;                     /* pointer to msg data          */\\r\\n14};\\r\\n```\\r\\n\\r\\n\uff082\uff09i2c_driver\u4e0ei2c_client\\r\\n\\r\\ni2c_driver\u5bf9\u5e94\u4e8e\u4e00\u5957\u9a71\u52a8\u65b9\u6cd5\uff0c\u5176\u4e3b\u8981\u6210\u5458\u51fd\u6570\u662fprobe\uff08\uff09\u3001remove\uff08\uff09\u3001suspend\uff08\uff09\u3001resume\uff08\uff09\u7b49\uff0c\u53e6\u5916\uff0cstruct i2c_device_id\u5f62\u5f0f\u7684id_table\u662f\u8be5\u9a71\u52a8\u6240\u652f\u6301\u7684I2 C\u8bbe\u5907\u7684ID\u8868\u3002i2c_client\u5bf9\u5e94\u4e8e\u771f\u5b9e\u7684\u7269\u7406\u8bbe\u5907\uff0c\u6bcf\u4e2aI2 C\u8bbe\u5907\u90fd\u9700\u8981\u4e00\u4e2ai2c_client\u6765\u63cf\u8ff0\u3002i2c_driver\u4e0ei2c_client\u7684\u5173\u7cfb\u662f\u4e00\u5bf9\u591a\uff0c\u4e00\u4e2ai2c_driver\u53ef\u4ee5\u652f\u6301\u591a\u4e2a\u540c\u7c7b\u578b\u7684i2c_client\u3002\\r\\n\\r\\ni2c_client\u7684\u4fe1\u606f\u901a\u5e38\u5728BSP\u7684\u677f\u6587\u4ef6\u4e2d\u901a\u8fc7i2c_board_info\u586b\u5145\uff0c\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u5b9a\u4e49\u4e86\u4e00\u4e2aI2 C\u8bbe\u5907\u7684ID\u4e3a\u201cad7142_joystick\u201d\u3001\u5730\u5740\u4e3a0x2C\u3001\u4e2d\u65ad\u53f7\u4e3aIRQ_PF5\u7684i2c_client\uff1a\\r\\n\\r\\n```\\r\\nstatic struct i2c_board_info __initdata xxx_i2c_board_info[] = {\\r\\n#if defined(CONfiG_JOYSTICK_AD7142) || defined(CONfiG_JOYSTICK_AD7142_MODULE)\\r\\n       {\\r\\n               I2C_BOARD_INFO(\\"ad7142_joystick\\", 0x2C),\\r\\n               .irq = IRQ_PF5,\\r\\n       },\\r\\n...\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728I2 C\u603b\u7ebf\u9a71\u52a8i2c_bus_type\u7684match\uff08\uff09\u51fd\u6570i2c_device_match\uff08\uff09\u4e2d\uff0c\u4f1a\u8c03\u7528i2c_match_id\uff08\uff09\u51fd\u6570\u5339\u914d\u5728\u677f\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684ID\u548ci2c_driver\u6240\u652f\u6301\u7684ID\u8868\u3002\\r\\n\\r\\n\uff083\uff09i2c_adpater\u4e0ei2c_client\\r\\n\\r\\ni2c_adpater\u4e0ei2c_client\u7684\u5173\u7cfb\u4e0eI2 C\u786c\u4ef6\u4f53\u7cfb\u4e2d\u9002\u914d\u5668\u548c\u8bbe\u5907\u7684\u5173\u7cfb\u4e00\u81f4\uff0c\u5373i2c_client\u4f9d\u9644\u4e8ei2c_adpater\u3002\u7531\u4e8e\u4e00\u4e2a\u9002\u914d\u5668\u53ef\u4ee5\u8fde\u63a5\u591a\u4e2aI2 C\u8bbe\u5907\uff0c\u6240\u4ee5\u4e00\u4e2ai2c_adpater\u4e5f\u53ef\u4ee5\u88ab\u591a\u4e2ai2c_client\u4f9d\u9644\uff0ci2c_adpater\u4e2d\u5305\u62ec\u4f9d\u9644\u4e8e\u5b83\u7684i2c_client\u7684\u94fe\u8868\u3002\\r\\n\\r\\n\u5047\u8bbeI2 C\u603b\u7ebf\u9002\u914d\u5668xxx\u4e0a\u6709\u4e24\u4e2a\u4f7f\u7528\u76f8\u540c\u9a71\u52a8\u7a0b\u5e8f\u7684yyy I2 C\u8bbe\u5907\uff0c\u5728\u6253\u5f00\u8be5I2 C\u603b\u7ebf\u7684\u8bbe\u5907\u8282\u70b9\u540e\uff0c\u76f8\u5173\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u7684\u903b\u8f91\u7ec4\u7ec7\u5173\u7cfb\u5c06\u5982\u56fe15.2\u6240\u793a\u3002\\r\\n\\r\\n![image-20250418230357150](./figure/image-20250418230357150.png)\\r\\n\\r\\n\u56fe15.2\u3000I2 C\u9a71\u52a8\u7684\u5404\u79cd\u6570\u636e\u7ed3\u6784\u7684\u5173\u7cfb\\r\\n\\r\\n\u4ece\u4e0a\u9762\u7684\u5206\u6790\u53ef\u77e5\uff0c\u867d\u7136I2 C\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u662fI2 C\u4f53\u7cfb\u7ed3\u6784\u5728Linux\u4e2d\u7684\u5b9e\u73b0\u5374\u76f8\u5f53\u590d\u6742\u3002\u5f53\u5de5\u7a0b\u5e08\u62ff\u5230\u5b9e\u9645\u7684\u7535\u8def\u677f\u65f6\uff0c\u9762\u5bf9\u590d\u6742\u7684Linux I2 C\u5b50\u7cfb\u7edf\uff0c\u5e94\u8be5\u5982\u4f55\u4e0b\u624b\u5199\u9a71\u52a8\u5462\uff1f\u7a76\u7adf\u6709\u54ea\u4e9b\u662f\u9700\u8981\u4eb2\u81ea\u505a\u7684\uff0c\u54ea\u4e9b\u662f\u5185\u6838\u5df2\u7ecf\u63d0\u4f9b\u7684\u5462\uff1f\u7406\u6e05\u8fd9\u4e2a\u95ee\u9898\u975e\u5e38\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u4f7f\u6211\u4eec\u5728\u9762\u5bf9\u5177\u4f53\u95ee\u9898\u65f6\u8fc5\u901f\u6293\u4f4f\u91cd\u70b9\\r\\n\\r\\n\u4e00\u65b9\u9762\uff0c\u9002\u914d\u5668\u9a71\u52a8\u53ef\u80fd\u662fLinux\u5185\u6838\u672c\u8eab\u8fd8\u4e0d\u5305\u542b\u7684\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u6302\u63a5\u5728\u9002\u914d\u5668\u4e0a\u7684\u5177\u4f53\u8bbe\u5907\u9a71\u52a8\u53ef\u80fd\u4e5f\u662fLinux\u5185\u6838\u8fd8\u4e0d\u5305\u542b\u7684\u3002\u56e0\u6b64\uff0c\u5de5\u7a0b\u5e08\u8981\u5b9e\u73b0\u7684\u4e3b\u8981\u5de5\u4f5c\u5982\u4e0b\u3002\\r\\n\\r\\n- \xb7\u63d0\u4f9bI2 C\u9002\u914d\u5668\u7684\u786c\u4ef6\u9a71\u52a8\uff0c\u63a2\u6d4b\u3001\u521d\u59cb\u5316I2 C\u9002\u914d\u5668\uff08\u5982\u7533\u8bf7I2 C\u7684I/O\u5730\u5740\u548c\u4e2d\u65ad\u53f7\uff09\u3001\u9a71\u52a8CPU\u63a7\u5236\u7684I2 C\u9002\u914d\u5668\u4ece\u786c\u4ef6\u4e0a\u4ea7\u751f\u5404\u79cd\u4fe1\u53f7\u4ee5\u53ca\u5904\u7406I2 C\u4e2d\u65ad\u7b49\u3002\\r\\n- \xb7\u63d0\u4f9bI2 C\u9002\u914d\u5668\u7684Algorithm\uff0c\u7528\u5177\u4f53\u9002\u914d\u5668\u7684xxx_xfer\uff08\uff09\u51fd\u6570\u586b\u5145i2c_algorithm\u7684master_xfer\u6307\u9488\uff0c\u5e76\u628ai2c_algorithm\u6307\u9488\u8d4b\u503c\u7ed9i2c_adapter\u7684algo\u6307\u9488\u3002\\r\\n- \xb7\u5b9e\u73b0I2 C\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684i2c_driver\u63a5\u53e3\uff0c\u7528\u5177\u4f53\u8bbe\u5907yyy\u7684yyy_probe\uff08\uff09\u3001yyy_remove\uff08\uff09\u3001yyy_suspend\uff08\uff09\u3001yyy_resume\uff08\uff09\u51fd\u6570\u6307\u9488\u548ci2c_device_id\u8bbe\u5907ID\u8868\u8d4b\u503c\u7ed9i2c_driver\u7684probe\u3001remove\u3001suspend\u3001resume\u548cid_table\u6307\u9488\u3002\\r\\n- \xb7\u5b9e\u73b0I2 C\u8bbe\u5907\u6240\u5bf9\u5e94\u7c7b\u578b\u7684\u5177\u4f53\u9a71\u52a8\uff0ci2c_driver\u53ea\u662f\u5b9e\u73b0\u8bbe\u5907\u4e0e\u603b\u7ebf\u7684\u6302\u63a5\uff0c\u800c\u6302\u63a5\u5728\u603b\u7ebf\u4e0a\u7684\u8bbe\u5907\u5219\u5343\u5dee\u4e07\u522b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u662f\u5b57\u7b26\u8bbe\u5907\uff0c\u5c31\u5b9e\u73b0\u6587\u4ef6\u64cd\u4f5c\u63a5\u53e3\uff0c\u5373\u5b9e\u73b0\u5177\u4f53\u8bbe\u5907yyy\u7684yyy_read\uff08\uff09\u3001yyy_write\uff08\uff09\u548cyyy_ioctl\uff08\uff09\u51fd\u6570\u7b49\uff1b\u5982\u679c\u662f\u58f0\u5361\uff0c\u5c31\u5b9e\u73b0ALSA\u9a71\u52a8\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u5de5\u4f5c\u4e2d\u524d\u4e24\u4e2a\u5c5e\u4e8eI2 C\u603b\u7ebf\u9a71\u52a8\uff0c\u540e\u4e24\u4e2a\u5c5e\u4e8eI2 C\u8bbe\u5907\u9a71\u52a8\u300215.3~15.4\u8282\u5c06\u8be6\u7ec6\u5206\u6790\u8fd9\u4e9b\u5de5\u4f5c\u7684\u5b9e\u65bd\u65b9\u6cd5\uff0c\u7ed9\u51fa\u8bbe\u8ba1\u6a21\u677f\uff0c\u800c15.5~15.6\u8282\u5c06\u7ed9\u51fa\u4e24\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3","description":"\u5916\u8bbe\u53ef\u5904\u4e8eCPU\u7684\u5185\u5b58\u7a7a\u95f4\u548cI/O\u7a7a\u95f4\uff0c\u9664x86\u5916\uff0c\u5d4c\u5165\u5f0f\u5904\u7406\u5668\u4e00\u822c\u53ea\u5b58\u5728\u5185\u5b58\u7a7a\u95f4\u3002\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u4e3aI/O\u5185\u5b58\u548cI/O\u7aef\u53e3\u7684\u8bbf\u95ee\u63d0\u9ad8\u4e86\u4e00\u5957\u7edf\u4e00\u7684\u65b9\u6cd5\uff0c\u8bbf\u95ee\u6d41\u7a0b\u4e00\u822c\u4e3a\u201c\u7533\u8bf7\u8d44\u6e90\u2192\u6620\u5c04\u2192\u8bbf\u95ee\u2192\u53bb\u6620\u5c04\u2192\u91ca\u653e\u8d44\u6e90\u201d\u3002","date":"2025-09-15T14:44:14.537Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.14,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.1\u3000Linux I2 C\u4f53\u7cfb\u7ed3\u6784"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP"}},"content":"\u5916\u8bbe\u53ef\u5904\u4e8eCPU\u7684\u5185\u5b58\u7a7a\u95f4\u548cI/O\u7a7a\u95f4\uff0c\u9664x86\u5916\uff0c\u5d4c\u5165\u5f0f\u5904\u7406\u5668\u4e00\u822c\u53ea\u5b58\u5728\u5185\u5b58\u7a7a\u95f4\u3002\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u4e3aI/O\u5185\u5b58\u548cI/O\u7aef\u53e3\u7684\u8bbf\u95ee\u63d0\u9ad8\u4e86\u4e00\u5957\u7edf\u4e00\u7684\u65b9\u6cd5\uff0c\u8bbf\u95ee\u6d41\u7a0b\u4e00\u822c\u4e3a\u201c\u7533\u8bf7\u8d44\u6e90\u2192\u6620\u5c04\u2192\u8bbf\u95ee\u2192\u53bb\u6620\u5c04\u2192\u91ca\u653e\u8d44\u6e90\u201d\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u6709MMU\u7684\u5904\u7406\u5668\u800c\u8a00\uff0cLinux\u7cfb\u7edf\u7684\u5185\u90e8\u5e03\u5c40\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u76f4\u63a5\u6620\u5c04\u7684\u7269\u7406\u5185\u5b58\u79f0\u4e3a\u5e38\u89c4\u5185\u5b58\uff0c\u8d85\u51fa\u90e8\u5206\u4e3a\u9ad8\u7aef\u5185\u5b58\u3002kmalloc\uff08\uff09\u548c__get_free_pages\uff08\uff09\u7533\u8bf7\u7684\u5185\u5b58\u5728\u7269\u7406\u4e0a\u8fde\u7eed\uff0c\u800cvmalloc\uff08\uff09\u7533\u8bf7\u7684\u5185\u5b58\u5728\u7269\u7406\u4e0a\u4e0d\u8fde\u7eed\u3002\\r\\n\\r\\nDMA\u64cd\u4f5c\u53ef\u80fd\u5bfc\u81f4Cache\u7684\u4e0d\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u56e0\u6b64\uff0c\u5bf9\u4e8eDMA\u7f13\u51b2\uff0c\u5e94\u8be5\u4f7f\u7528dma_alloc_coherent\uff08\uff09\u7b49\u65b9\u6cd5\u7533\u8bf7\u3002\u5728DMA\u64cd\u4f5c\u4e2d\u6d89\u53ca\u603b\u7ebf\u5730\u5740\u3001\u7269\u7406\u5730\u5740\u548c\u865a\u62df\u5730\u5740\u7b49\u6982\u5ff5\uff0c\u533a\u5206\u8fd93\u7c7b\u5730\u5740\u975e\u5e38\u91cd\u8981\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP","description":"\u73b0\u4eca\u7684SoC\u4e00\u822c\u5305\u542b\u5f88\u591a\u96c6\u6210\u7ec4\u4ef6\uff0c\u5728\u7cfb\u7edf\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5e76\u4e0d\u9700\u8981\u6240\u6709\u7684\u6a21\u5757\u90fd\u8fd0\u884c\u4e8e\u6700\u9ad8\u9891\u7387\u548c\u6700\u9ad8\u6027\u80fd\u3002\u5728SoC\u5185\uff0c\u67d0\u4e9bdomain\u53ef\u4ee5\u8fd0\u884c\u5728\u8f83\u4f4e\u7684\u9891\u7387\u548c\u7535\u538b\u4e0b\uff0c\u800c\u5176\u4ed6domain\u53ef\u4ee5\u8fd0\u884c\u5728\u8f83\u9ad8\u7684\u9891\u7387\u548c\u7535\u538b\u4e0b\uff0c\u67d0\u4e2adomain\u6240\u652f\u6301\u7684\u5bf9\u7684\u96c6\u5408\u88ab\u79f0\u4e3aOperating Performance Point\uff0c\u7f29\u5199\u4e3aOPP\u3002","date":"2025-09-15T14:44:14.537Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":6.315,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.7\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406"}},"content":"\u73b0\u4eca\u7684SoC\u4e00\u822c\u5305\u542b\u5f88\u591a\u96c6\u6210\u7ec4\u4ef6\uff0c\u5728\u7cfb\u7edf\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5e76\u4e0d\u9700\u8981\u6240\u6709\u7684\u6a21\u5757\u90fd\u8fd0\u884c\u4e8e\u6700\u9ad8\u9891\u7387\u548c\u6700\u9ad8\u6027\u80fd\u3002\u5728SoC\u5185\uff0c\u67d0\u4e9bdomain\u53ef\u4ee5\u8fd0\u884c\u5728\u8f83\u4f4e\u7684\u9891\u7387\u548c\u7535\u538b\u4e0b\uff0c\u800c\u5176\u4ed6domain\u53ef\u4ee5\u8fd0\u884c\u5728\u8f83\u9ad8\u7684\u9891\u7387\u548c\u7535\u538b\u4e0b\uff0c\u67d0\u4e2adomain\u6240\u652f\u6301\u7684<\u9891\u7387\uff0c\u7535\u538b>\u5bf9\u7684\u96c6\u5408\u88ab\u79f0\u4e3aOperating Performance Point\uff0c\u7f29\u5199\u4e3aOPP\u3002\\r\\n\\r\\n```\\r\\nint opp_add(struct device *dev, unsigned long freq, unsigned long u_volt);\\r\\n```\\r\\n\\r\\n\u76ee\u524d\uff0cTI OMAP CPUFreq\u9a71\u52a8\u7684\u5e95\u5c42\u5c31\u4f7f\u7528\u4e86OPP\u8fd9\u79cd\u673a\u5236\u6765\u83b7\u53d6CPU\u6240\u652f\u6301\u7684\u9891\u7387\u548c\u7535\u538b\u5217\u8868\u3002\u5728\u5f00\u673a\u7684\u8fc7\u7a0b\u4e2d\uff0cTI OMAP4\u82af\u7247\u4f1a\u6ce8\u518c\u9488\u5bf9CPU\u8bbe\u5907\u7684OPP\u8868\uff08\u4ee3\u7801\u4f4d\u4e8earch/arm/mach-omap2/\u4e2d\uff09\uff0c\u5982\u4ee3\u7801\u6e05\u535519.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535519.10\u3000TI OMAP4 CPU\u7684OPP\u8868\\r\\n\\r\\n```\\r\\n1static struct omap_opp_def __initdata omap44xx_opp_def_list[] = {\\r\\n2       /* MPU OPP1 - OPP50 */\\r\\n3       OPP_INITIALIZER(\\"mpu\\", true, 300000000, OMAP4430_VDD_MPU_OPP50_UV),\\r\\n4       /* MPU OPP2 - OPP100 */\\r\\n5       OPP_INITIALIZER(\\"mpu\\", true, 600000000, OMAP4430_VDD_MPU_OPP100_UV),\\r\\n6       /* MPU OPP3 - OPP-Turbo */\\r\\n7       OPP_INITIALIZER(\\"mpu\\", true, 800000000, OMAP4430_VDD_MPU_OPPTURBO_UV),\\r\\n8       /* MPU OPP4 - OPP-SB */\\r\\n9       OPP_INITIALIZER(\\"mpu\\", true, 1008000000, OMAP4430_VDD_MPU_OPPNITRO_UV),\\r\\n10      \u2026\\r\\n11};\\r\\n12/**\\r\\n13 * omap4_opp_init() - initialize omap4 opp table\\r\\n14 */\\r\\n15int __init omap4_opp_init(void)\\r\\n16{\\r\\n17      \u2026\\r\\n18      r = omap_init_opp_table(omap44xx_opp_def_list,\\r\\n19                   ARRAY_SIZE(omap44xx_opp_def_list));\\r\\n20\\r\\n21      return r;\\r\\n22}\\r\\n23device_initcall(omap4_opp_init);\\r\\n24int __init omap_init_opp_table(struct omap_opp_def *opp_def,\\r\\n25             u32 opp_def_size)\\r\\n26{\\r\\n27      \u2026\\r\\n28      /* Lets now register with OPP library */\\r\\n29      for (i = 0; i < opp_def_size; i++, opp_def++) {\\r\\n30            \u2026\\r\\n31            if (!strncmp(opp_def->hwmod_name, \\"mpu\\", 3)) {\\r\\n32                   /*\\r\\n33                    * All current OMAPs share voltage rail and\\r\\n34                    * clock source, so CPU0 is used to represent\\r\\n35                    * the MPU-SS.\\r\\n36                    */\\r\\n37                   dev = get_cpu_device(0);\\r\\n38            } \u2026\\r\\n39            r = opp_add(dev, opp_def->freq, opp_def->u_volt);\\r\\n40            \u2026\\r\\n41      }\\r\\n42      return 0;\\r\\n43}\\r\\n```\\r\\n\\r\\n\u9488\u5bf9\u4e0edevice\u7ed3\u6784\u4f53\u6307\u9488dev\u5bf9\u5e94\u7684domain\u4e2d\u589e\u52a0\u4e00\u4e2a\u65b0\u7684OPP\uff0c\u53c2\u6570freq\u548cu_volt\u5373\u4e3a\u8be5OPP\u5bf9\u5e94\u7684\u9891\u7387\u548c\u7535\u538b\u3002\\r\\n\\r\\n```\\r\\nint opp_enable(struct device *dev, unsigned long freq);\\r\\nint opp_disable(struct device *dev, unsigned long freq);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0API\u7528\u4e8e\u4f7f\u80fd\u548c\u7981\u6b62\u67d0\u4e2aOPP\uff0c\u4e00\u65e6\u88ab\u7981\u6b62\uff0c\u5176available\u5c06\u6210\u4e3afalse\uff0c\u4e4b\u540e\u6709\u8bbe\u5907\u9a71\u52a8\u60f3\u8bbe\u7f6e\u4e3a\u8fd9\u4e2aOPP\u5c31\u4e0d\u518d\u53ef\u80fd\u4e86\u3002\u8b6c\u5982\uff0c\u5f53\u6e29\u5ea6\u8d85\u8fc7\u67d0\u4e2a\u8303\u56f4\u540e\uff0c\u7cfb\u7edf\u4e0d\u5141\u8bb81GHz\u7684\u5de5\u4f5c\u9891\u7387\uff0c\u53ef\u91c7\u7528\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\uff1a\\r\\n\\r\\n```\\r\\nif (cur_temp > temp_high_thresh) {\\r\\n      /* Disable 1GHz if it was enabled */\\r\\n      rcu_read_lock();\\r\\nopp = opp_find_freq_exact(dev, 1000000000, true);\\r\\n      rcu_read_unlock();\\r\\n      /* just error check */\\r\\nif (!IS_ERR(opp))\\r\\nret = opp_disable(dev, 1000000000);\\r\\nelse\\r\\ngoto try_something_else;\\r\\n}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u8c03\u7528\u7684opp_find_freq_exact\uff08\uff09\u7528\u4e8e\u5bfb\u627e\u4e0e\u4e00\u4e2a\u786e\u5b9a\u9891\u7387\u548cavailable\u5339\u914d\u7684OPP\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstruct opp *opp_find_freq_exact(struct device *dev, unsigned long freq,\\r\\nbool available);\\r\\n```\\r\\n\\r\\n\u53e6\u5916\uff0cLinux\u8fd8\u63d0\u4f9b\u4e24\u4e2a\u53d8\u4f53\uff0copp_find_freq_floor\uff08\uff09\u7528\u4e8e\u5bfb\u627e1\u4e2aOPP\uff0c\u5b83\u7684\u9891\u7387\u5411\u4e0a\u63a5\u8fd1\u6216\u7b49\u4e8e\u6307\u5b9a\u7684\u9891\u7387\uff1bopp_find_freq_ceil\uff08\uff09\u7528\u4e8e\u5bfb\u627e1\u4e2aOPP\uff0c\u5b83\u7684\u9891\u7387\u5411\u4e0b\u63a5\u8fd1\u6216\u7b49\u4e8e\u6307\u5b9a\u7684\u9891\u7387\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstruct opp *opp_find_freq_floor(struct device *dev, unsigned long *freq);\\r\\nstruct opp *opp_find_freq_ceil(struct device *dev, unsigned long *freq);\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u53ef\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u5206\u522b\u5bfb\u627e1\u4e2a\u8bbe\u5907\u7684\u6700\u5927\u548c\u6700\u5c0f\u5de5\u4f5c\u9891\u7387\uff1a\\r\\n\\r\\n```\\r\\nfreq = ULONG_MAX;\\r\\nrcu_read_lock();\\r\\nopp_find_freq_floor(dev, &freq);\\r\\nrcu_read_unlock();\\r\\nfreq = 0;\\r\\nrcu_read_lock();\\r\\nopp_find_freq_ceil(dev, &freq);\\r\\nrcu_read_unlock();\\r\\n```\\r\\n\\r\\n\u5728\u9891\u7387\u964d\u4f4e\u7684\u540c\u65f6\uff0c\u652f\u6491\u8be5\u9891\u7387\u8fd0\u884c\u6240\u9700\u7684\u7535\u538b\u4e5f\u5f80\u5f80\u53ef\u4ee5\u52a8\u6001\u8c03\u4f4e\uff1b\u53cd\u4e4b\uff0c\u5219\u53ef\u80fd\u9700\u8981\u8c03\u9ad8\uff0c\u4e0b\u9762\u8fd9\u4e24\u4e2aAPI\u5206\u522b\u7528\u4e8e\u83b7\u53d6\u4e0e\u67d0OPP\u5bf9\u5e94\u7684\u7535\u538b\u548c\u9891\u7387\uff1a\\r\\n\\r\\n```\\r\\nunsigned long opp_get_voltage(struct opp *opp);\\r\\nunsigned long opp_get_freq(struct opp *opp);\\r\\n```\\r\\n\\r\\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u67d0CPUFreq\u9a71\u52a8\u60f3\u5c06CPU\u8bbe\u7f6e\u4e3a\u67d0\u4e00\u9891\u7387\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u80fd\u4f1a\u540c\u65f6\u8bbe\u7f6e\u7535\u538b\uff0c\u5176\u4ee3\u7801\u6d41\u7a0b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nsoc_switch_to_freq_voltage(freq)\\r\\n{\\r\\n     /* do things */\\r\\n     rcu_read_lock();\\r\\nopp = opp_find_freq_ceil(dev, &freq);\\r\\n     v = opp_get_voltage(opp);\\r\\n     rcu_read_unlock();\\r\\nif (v)\\r\\n           regulator_set_voltage(.., v);\\r\\n     /* do other things */\\r\\n}\\r\\n```\\r\\n\\r\\n\u5982\u4e0b\u7b80\u5355\u7684API\u53ef\u7528\u4e8e\u83b7\u53d6\u67d0\u8bbe\u5907\u6240\u652f\u6301\u7684OPP\u7684\u4e2a\u6570\uff1a\\r\\n\\r\\n```\\r\\nint opp_get_opp_count(struct device *dev);\\r\\n```\\r\\n\\r\\n\u524d\u9762\u63d0\u5230\uff0cTI OMAP CPUFreq\u9a71\u52a8\u7684\u5e95\u5c42\u5c31\u4f7f\u7528\u4e86OPP\u8fd9\u79cd\u673a\u5236\u6765\u83b7\u53d6CPU\u6240\u652f\u6301\u7684\u9891\u7387\u548c\u7535\u538b\u5217\u8868\u3002\u5b83\u5728omap_init_opp_table\uff08\uff09\u51fd\u6570\u4e2d\u6dfb\u52a0\u4e86\u76f8\u5e94\u7684OPP\uff0c\u5728TI OMAP\u82af\u7247\u7684CPUFreq\u9a71\u52a8drivers/cpufreq/omap-cpufreq.c\u4e2d\uff0c\u5219\u501f\u52a9\u4e86\u5feb\u6377\u51fd\u6570opp_init_cpufreq_table\uff08\uff09\u6765\u6839\u636e\u524d\u9762\u6ce8\u518c\u7684OPP\u5efa\u7acbCPUFreq\u7684\u9891\u7387\u8868\uff1a\\r\\n\\r\\n```\\r\\nstatic int __cpuinit omap_cpu_init(struct cpufreq_policy *policy)\\r\\n{\\r\\n       \u2026\\r\\nif (!freq_table)\\r\\nresult = opp_init_cpufreq_table(mpu_dev, &freq_table);\\r\\n       \u2026\\r\\n}\\r\\n```\\r\\n\\r\\n\u800c\u5728CPUFreq\u9a71\u52a8\u7684\u76ee\u6807\u6210\u5458\u51fd\u6570omap_target\uff08\uff09\u4e2d\uff0c\u5219\u4f7f\u7528\u4e0eOPP\u76f8\u5173\u7684API\u6765\u83b7\u53d6\u9891\u7387\u548c\u7535\u538b\uff1a\\r\\n\\r\\n```\\r\\nstatic int omap_target(struct cpufreq_policy *policy,\\r\\nunsigned int target_freq,\\r\\nunsigned int relation)\\r\\n{\\r\\n      \u2026\\r\\nif (mpu_reg) {\\r\\nopp = opp_find_freq_ceil(mpu_dev, &freq);\\r\\n              \u2026\\r\\nvolt = opp_get_voltage(opp);\\r\\n              \u2026\\r\\n      }\\r\\n      \u2026\\r\\n}\\r\\n```\\r\\n\\r\\ndrivers/cpufreq/omap-cpufreq.c\u76f8\u5bf9\u6765\u8bf4\u8f83\u4e3a\u89c4\u8303\uff0c\u5b83\u5728<\u9891\u7387\uff0c\u7535\u538b>\u8868\u65b9\u9762\uff0c\u5728\u5e95\u5c42\u4f7f\u7528\u4e86OPP\uff0c\u5728\u8bbe\u7f6e\u7535\u538b\u7684\u65f6\u5019\u53c8\u4f7f\u7528\u4e86\u89c4\u8303\u7684Regulator API\u3002\\r\\n\\r\\n\u6bd4\u8f83\u65b0\u7684\u9a71\u52a8\u4e00\u822c\u4e0d\u592a\u559c\u6b22\u76f4\u63a5\u5728\u4ee3\u7801\u91cc\u9762\u56fa\u5316OPP\u8868\uff0c\u800c\u662f\u559c\u6b22\u5728\u76f8\u5e94\u7684\u8282\u70b9\u5904\u6dfb\u52a0operating-points\u5c5e\u6027\uff0c\u5982imx27.dtsi\u4e2d\u7684\uff1a\\r\\n\\r\\n```\\r\\ncpus {\\r\\n              #size-cells = <0>;\\r\\n              #address-cells = <1>;\\r\\ncpu: cpu@0 {\\r\\n                    device_type = \\"cpu\\";\\r\\ncompatible = \\"arm,arm926ej-s\\";\\r\\noperating-points = <\\r\\n                          /* kHz uV */\\r\\n                          266000 1300000\\r\\n                          399000 1450000\\r\\n>;\\r\\nclock-latency = <62500>;\\r\\nclocks = <&clks IMX27_CLK_CPU_DIV>;\\r\\nvoltage-tolerance = <5>;\\r\\n             };\\r\\n       };\\r\\n```\\r\\n\\r\\n\u5982\u679cCPUFreq\u7684\u53d8\u5316\u53ef\u4ee5\u4f7f\u7528\u975e\u5e38\u6807\u51c6\u7684regulator\u3001clk API\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528drivers/cpufreq/cpufreq-dt.c\u8fd9\u4e2a\u9a71\u52a8\u3002\u8fd9\u6837\u53ea\u9700\u8981\u5728CPU\u8282\u70b9\u4e0a\u586b\u5145\u597d\u9891\u7387\u7535\u538b\u8868\uff0c\u7136\u540e\u5728\u5e73\u53f0\u4ee3\u7801\u91cc\u9762\u6ce8\u518ccpufreq-dt\u8bbe\u5907\u5c31\u53ef\u4ee5\u4e86\uff0c\u5728arch/arm/mach-imx/imx27-dt.c\u3001arch/arm/mach-imx/mach-imx51.c\u4e2d\u53ef\u4ee5\u627e\u5230\u7c7b\u4f3c\u7684\u4f8b\u5b50\uff1a\\r\\n\\r\\n```\\r\\nstatic void __init imx27_dt_init(void)\\r\\n{\\r\\nstruct platform_device_info devinfo = { .name = \\"cpufreq-dt\\", };\\r\\n       of_platform_populate(NULL, of_default_bus_match_table, NULL, NULL);\\r\\n       platform_device_register_full(&devinfo);\\r\\n}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406","description":"\u5bf9\u4e8e\u5305\u542bMMU\u7684\u5904\u7406\u5668\u800c\u8a00\uff0cLinux\u7cfb\u7edf\u63d0\u4f9b\u4e86\u590d\u6742\u7684\u5b58\u50a8\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f7f\u5f97\u8fdb\u7a0b\u6240\u80fd\u8bbf\u95ee\u7684\u5185\u5b58\u8fbe\u52304GB\u3002","date":"2025-09-15T14:44:14.529Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":10.825,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB"}},"content":"\u5bf9\u4e8e\u5305\u542bMMU\u7684\u5904\u7406\u5668\u800c\u8a00\uff0cLinux\u7cfb\u7edf\u63d0\u4f9b\u4e86\u590d\u6742\u7684\u5b58\u50a8\u7ba1\u7406\u7cfb\u7edf\uff0c\u4f7f\u5f97\u8fdb\u7a0b\u6240\u80fd\u8bbf\u95ee\u7684\u5185\u5b58\u8fbe\u52304GB\u3002\\r\\n\\r\\n\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u8fdb\u7a0b\u76844GB\u5185\u5b58\u7a7a\u95f4\u88ab\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u2014\u2014\u7528\u6237\u7a7a\u95f4\u4e0e\u5185\u6838\u7a7a\u95f4\u3002\u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740\u4e00\u822c\u5206\u5e03\u4e3a0~3GB\uff08\u5373PAGE_OFFSET\uff0c\u57280x86\u4e2d\u5b83\u7b49\u4e8e0xC0000000\uff09\uff0c\u8fd9\u6837\uff0c\u5269\u4e0b\u76843~4GB\u4e3a\u5185\u6838\u7a7a\u95f4\uff0c\u5982\u56fe11.5\u6240\u793a\u3002\u7528\u6237\u8fdb\u7a0b\u901a\u5e38\u53ea\u80fd\u8bbf\u95ee\u7528\u6237\u7a7a\u95f4\u7684\u865a\u62df\u5730\u5740\uff0c\u4e0d\u80fd\u8bbf\u95ee\u5185\u6838\u7a7a\u95f4\u7684\u865a\u62df\u5730\u5740\u3002\u7528\u6237\u8fdb\u7a0b\u53ea\u6709\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\uff08\u4ee3\u8868\u7528\u6237\u8fdb\u7a0b\u5728\u5185\u6838\u6001\u6267\u884c\uff09\u7b49\u65b9\u5f0f\u624d\u53ef\u4ee5\u8bbf\u95ee\u5230\u5185\u6838\u7a7a\u95f4\\r\\n\\r\\n![1743604956112](./figure/1743604956112.png)\\r\\n\\r\\n\u56fe11.5\u3000\u7528\u6237\u7a7a\u95f4\u4e0e\u5185\u6838\u7a7a\u95f4\\r\\n\\r\\n\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7528\u6237\u7a7a\u95f4\u90fd\u662f\u5b8c\u5168\u72ec\u7acb\u3001\u4e92\u4e0d\u76f8\u5e72\u7684\uff0c\u7528\u6237\u8fdb\u7a0b\u5404\u81ea\u6709\u4e0d\u540c\u7684\u9875\u8868\u3002\u800c\u5185\u6838\u7a7a\u95f4\u662f\u7531\u5185\u6838\u8d1f\u8d23\u6620\u5c04\uff0c\u5b83\u5e76\u4e0d\u4f1a\u8ddf\u7740\u8fdb\u7a0b\u6539\u53d8\uff0c\u662f\u56fa\u5b9a\u7684\u3002\u5185\u6838\u7a7a\u95f4\u7684\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u6620\u5c04\u662f\u88ab\u6240\u6709\u8fdb\u7a0b\u5171\u4eab\u7684\uff0c\u5185\u6838\u7684\u865a\u62df\u7a7a\u95f4\u72ec\u7acb\u4e8e\u5176\u4ed6\u7a0b\u5e8f\u3002\\r\\n\\r\\nLinux\u4e2d1GB\u7684\u5185\u6838\u5730\u5740\u7a7a\u95f4\u53c8\u88ab\u5212\u5206\u4e3a\u7269\u7406\u5185\u5b58\u6620\u5c04\u533a\u3001\u865a\u62df\u5185\u5b58\u5206\u914d\u533a\u3001\u9ad8\u7aef\u9875\u9762\u6620\u5c04\u533a\u3001\u4e13\u7528\u9875\u9762\u6620\u5c04\u533a\u548c\u7cfb\u7edf\u4fdd\u7559\u6620\u5c04\u533a\u8fd9\u51e0\u4e2a\u533a\u57df\uff0c\u5982\u56fe11.6\u6240\u793a\u3002\\r\\n\\r\\n![1743604985909](./figure/1743604985909.png)\\r\\n\\r\\n\u56fe11.6\u300032\u4f4dx86\u7cfb\u7edfLinux\u5185\u6838\u7684\u5730\u5740\u7a7a\u95f4\\r\\n\\r\\n\u5bf9\u4e8ex86\u7cfb\u7edf\u800c\u8a00\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7269\u7406\u5185\u5b58\u6620\u5c04\u533a\u6700\u5927\u957f\u5ea6\u4e3a896MB\uff0c\u7cfb\u7edf\u7684\u7269\u7406\u5185\u5b58\u88ab\u987a\u5e8f\u6620\u5c04\u5728\u5185\u6838\u7a7a\u95f4\u7684\u8fd9\u4e2a\u533a\u57df\u4e2d\u3002\u5f53\u7cfb\u7edf\u7269\u7406\u5185\u5b58\u5927\u4e8e896MB\u65f6\uff0c\u8d85\u8fc7\u7269\u7406\u5185\u5b58\u6620\u5c04\u533a\u7684\u90a3\u90e8\u5206\u5185\u5b58\u79f0\u4e3a\u9ad8\u7aef\u5185\u5b58\uff08\u800c\u672a\u8d85\u8fc7\u7269\u7406\u5185\u5b58\u6620\u5c04\u533a\u7684\u5185\u5b58\u901a\u5e38\u88ab\u79f0\u4e3a\u5e38\u89c4\u5185\u5b58\uff09\uff0c\u5185\u6838\u5728\u5b58\u53d6\u9ad8\u7aef\u5185\u5b58\u65f6\u5fc5\u987b\u5c06\u5b83\u4eec\u6620\u5c04\u5230\u9ad8\u7aef\u9875\u9762\u6620\u5c04\u533a\u3002\\r\\n\\r\\nLinux\u4fdd\u7559\u5185\u6838\u7a7a\u95f4\u6700\u9876\u90e8FIXADDR_TOP~4GB\u7684\u533a\u57df\u4f5c\u4e3a\u4fdd\u7559\u533a\u3002\\r\\n\\r\\n\u7d27\u63a5\u7740\u6700\u9876\u7aef\u7684\u4fdd\u7559\u533a\u4ee5\u4e0b\u7684\u4e00\u6bb5\u533a\u57df\u4e3a\u4e13\u7528\u9875\u9762\u6620\u5c04\u533a\uff08FIXADDR_START~FIXADDR_TOP\uff09\uff0c\u5b83\u7684\u603b\u5c3a\u5bf8\u548c\u6bcf\u4e00\u9875\u7684\u7528\u9014\u7531fixed_address\u679a\u4e3e\u7ed3\u6784\u5728\u7f16\u8bd1\u65f6\u9884\u5b9a\u4e49\uff0c\u7528__fix_to_virt\uff08index\uff09\u53ef\u83b7\u53d6\u4e13\u7528\u533a\u5185\u9884\u5b9a\u4e49\u9875\u9762\u7684\u903b\u8f91\u5730\u5740\u3002\u5176\u5f00\u59cb\u5730\u5740\u548c\u7ed3\u675f\u5730\u5740\u5b8f\u5b9a\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n#define FIXADDR_START       (FIXADDR_TOP - _ _FIXADDR_SIZE)\\r\\n#define FIXADDR_TOP       ((unsigned long)_ _FIXADDR_TOP)\\r\\n#define _ _FIXADDR_TOP    0xfffff000\\r\\n```\\r\\n\\r\\n\u63a5\u4e0b\u6765\uff0c\u5982\u679c\u7cfb\u7edf\u914d\u7f6e\u4e86\u9ad8\u7aef\u5185\u5b58\uff0c\u5219\u4f4d\u4e8e\u4e13\u7528\u9875\u9762\u6620\u5c04\u533a\u4e4b\u4e0b\u7684\u5c31\u662f\u4e00\u6bb5\u9ad8\u7aef\u5185\u5b58\u6620\u5c04\u533a\uff0c\u5176\u8d77\u59cb\u5730\u5740\u4e3aPKMAP_BASE\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n#define PKMAP_BASE ( (FIXADDR_BOOT_START - PAGE_SIZE*(LAST_PKMAP + 1)) & PMD_MASK )\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u6240\u6d89\u53ca\u7684\u5b8f\u5b9a\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n#define FIXADDR_BOOT_START    (FIXADDR_TOP - _ _FIXADDR_BOOT_SIZE)\\r\\n#define LAST_PKMAP    PTRS_PER_PTE\\r\\n#define PTRS_PER_PTE    512\\r\\n#define PMD_MASK    (~(PMD_SIZE-1))\\r\\n# define PMD_SIZE    (1UL << PMD_SHIFT)\\r\\n#define PMD_SHIFT    21\\r\\n```\\r\\n\\r\\n\u5728\u7269\u7406\u533a\u548c\u9ad8\u7aef\u6620\u5c04\u533a\u4e4b\u95f4\u4e3a\u865a\u62df\u5185\u5b58\u5206\u914d\u5668\u533a\uff08VMALLOC_START~VMALLOC_END\uff09\uff0c\u7528\u4e8evmalloc\uff08\uff09\u51fd\u6570\uff0c\u5b83\u7684\u524d\u90e8\u4e0e\u7269\u7406\u5185\u5b58\u6620\u5c04\u533a\u6709\u4e00\u4e2a\u9694\u79bb\u5e26\uff0c\u540e\u90e8\u4e0e\u9ad8\u7aef\u6620\u5c04\u533a\u4e5f\u6709\u4e00\u4e2a\u9694\u79bb\u5e26\uff0cvmalloc\u533a\u57df\u5b9a\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n#define VMALLOC_OFFSET (8*1024*1024)\\r\\n#define VMALLOC_START    (((unsigned long) high_memory +\\r\\n    vmalloc_earlyreserve + 2*VMALLOC_OFFSET-1) & ~(VMALLOC_OFFSET-1))\\r\\n#ifdef CONFIG_HIGHMEM    /* \u652f\u6301\u9ad8\u7aef\u5185\u5b58*/\\r\\n# define VMALLOC_END    (PKMAP_BASE-2*PAGE_SIZE)\\r\\n#else                    /* \u4e0d\u652f\u6301\u9ad8\u7aef\u5185\u5b58*/\\r\\n# define VMALLOC_END    (FIXADDR_START-2*PAGE_SIZE)\\r\\n#endif\\r\\n```\\r\\n\\r\\n\u5f53\u7cfb\u7edf\u7269\u7406\u5185\u5b58\u8d85\u8fc74GB\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528CPU\u7684\u6269\u5c55\u5206\u9875\uff08PAE\uff09\u6a21\u5f0f\u6240\u63d0\u4f9b\u768464\u4f4d\u9875\u76ee\u5f55\u9879\u624d\u80fd\u5b58\u53d6\u52304GB\u4ee5\u4e0a\u7684\u7269\u7406\u5185\u5b58\uff0c\u8fd9\u9700\u8981CPU\u7684\u652f\u6301\u3002\u52a0\u5165\u4e86PAE\u529f\u80fd\u7684Intel Pentium Pro\u53ca\u4ee5\u540e\u7684CPU\u5141\u8bb8\u5185\u5b58\u6700\u5927\u53ef\u914d\u7f6e\u523064GB\uff0c\u5b83\u4eec\u5177\u590736\u4f4d\u7269\u7406\u5730\u5740\u7a7a\u95f4\u5bfb\u5740\u80fd\u529b\u3002\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0c\u5bf9\u4e8e32\u4f4d\u7684x86\u800c\u8a00\uff0c\u57283~4GB\u4e4b\u95f4\u7684\u5185\u6838\u7a7a\u95f4\u4e2d\uff0c\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740\u4f9d\u6b21\u4e3a\uff1a\u7269\u7406\u5185\u5b58\u6620\u5c04\u533a\u2192\u9694\u79bb\u5e26\u2192vmalloc\u865a\u62df\u5185\u5b58\u5206\u914d\u5668\u533a\u2192\u9694\u79bb\u5e26\u2192\u9ad8\u7aef\u5185\u5b58\u6620\u5c04\u533a\u2192\u4e13\u7528\u9875\u9762\u6620\u5c04\u533a\u2192\u4fdd\u7559\u533a\u3002\\r\\n\\r\\n\u76f4\u63a5\u8fdb\u884c\u6620\u5c04\u7684896MB\u7269\u7406\u5185\u5b58\u5176\u5b9e\u53c8\u5206\u4e3a\u4e24\u4e2a\u533a\u57df\uff0c\u5728\u4f4e\u4e8e16MB\u7684\u533a\u57df\uff0cISA\u8bbe\u5907\u53ef\u4ee5\u505aDMA\uff0c\u6240\u4ee5\u8be5\u533a\u57df\u4e3aDMA\u533a\u57df\uff08\u5185\u6838\u4e3a\u4e86\u4fdd\u8bc1ISA\u9a71\u52a8\u5728\u7533\u8bf7DMA\u7f13\u51b2\u533a\u7684\u65f6\u5019\uff0c\u901a\u8fc7GFP_DMA\u6807\u8bb0\u53ef\u4ee5\u786e\u4fdd\u7533\u8bf7\u523016MB\u4ee5\u5185\u7684\u5185\u5b58\uff0c\u6240\u4ee5\u5fc5\u987b\u628a\u8fd9\u4e2a\u533a\u57df\u5217\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u533a\u57df\u7ba1\u7406\uff09\uff1b16MB~896MB\u4e4b\u95f4\u7684\u4e3a\u5e38\u89c4\u533a\u57df\u3002\u9ad8\u4e8e896MB\u7684\u5c31\u79f0\u4e3a\u9ad8\u7aef\u5185\u5b58\u533a\u57df\u4e86\\r\\n\\r\\n32\u4f4dARM Linux\u7684\u5185\u6838\u7a7a\u95f4\u5730\u5740\u6620\u5c04\u4e0ex86\u4e0d\u592a\u4e00\u6837\uff0c\u5185\u6838\u6587\u6863Documentation/arm/memory.txt\u7ed9\u51fa\u4e86ARM Linux\u7684\u5185\u5b58\u6620\u5c04\u60c5\u51b5\u30020xffff0000~0xffff0fff\u662f\u201cCPU vector page\u201d\uff0c\u5373\u5411\u91cf\u8868\u7684\u5730\u5740\u30020xffc00000~0xffefffff\u662fDMA\u5185\u5b58\u6620\u5c04\u533a\u57df\uff0cdma_alloc_xxx\u65cf\u51fd\u6570\u628aDMA\u7f13\u51b2\u533a\u6620\u5c04\u5728\u8fd9\u4e00\u6bb5\uff0cVMALLOC_START~VMALLOC_END-1\u662fvmalloc\u548cioremap\u533a\u57df\uff08\u5728vmalloc\u533a\u57df\u7684\u5927\u5c0f\u53ef\u4ee5\u914d\u7f6e\uff0c\u901a\u8fc7\u201cvmalloc=\u201d\u8fd9\u4e2a\u542f\u52a8\u53c2\u6570\u53ef\u4ee5\u6307\u5b9a\uff09\uff0cPAGE_OFFSET~high_memory-1\u662fDMA\u548c\u6b63\u5e38\u533a\u57df\u7684\u6620\u5c04\u533a\u57df\uff0cMODULES_VADDR~MODULES_END-1\u662f\u5185\u6838\u6a21\u5757\u533a\u57df\uff0cPKMAP_BASE~PAGE_OFFSET-1\u662f\u9ad8\u7aef\u5185\u5b58\u6620\u5c04\u533a\u3002\u5047\u8bbe\u6211\u4eec\u628aPAGE_OFFSET\u5b9a\u4e49\u4e3a3GB\uff0c\u5b9e\u9645\u4e0aLinux\u5185\u6838\u6a21\u5757\u4f4d\u4e8e3GB-16MB~3GB-2MB\uff0c\u9ad8\u7aef\u5185\u5b58\u6620\u5c04\u533a\u5219\u901a\u5e38\u4f4d\u4e8e3GB-2MB~3GB\u3002\\r\\n\\r\\n\u56fe11.7\u7ed9\u51fa\u4e8632\u4f4dARM\u7cfb\u7edfLinux\u5185\u6838\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5185\u6838\u6a21\u5757\u533a\u57df\u3001\u9ad8\u7aef\u5185\u5b58\u6620\u5c04\u533a\u3001vmalloc\u3001\u5411\u91cf\u8868\u533a\u57df\u7b49\u3002\u6211\u4eec\u5047\u5b9a\u7f16\u8bd1\u5185\u6838\u7684\u65f6\u5019\u9009\u62e9\u7684\u662fVMSPLIT_3G\uff083G/1G user/kernel split\uff09\u3002\u5982\u679c\u7528\u6237\u9009\u62e9\u7684\u662fVMSPLIT_2G\uff082G/2G user/kernel split\uff09\uff0c\u5219\u56fe11.7\u4e2d\u7684\u5185\u6838\u6a21\u5757\u5f00\u59cb\u4e8e2GB-16MB\uff0cDMA\u548c\u5e38\u89c4\u5185\u5b58\u533a\u57df\u6620\u5c04\u533a\u4e5f\u5f00\u59cb\u4e8e2GB\u3002\\r\\n\\r\\n![1743605207309](./figure/1743605207309.png)\\r\\n\\r\\n\u56fe11.7\u300032\u4f4dARM\u7cfb\u7edf\u4e2dLinux\u5185\u6838\u7684\u5730\u5740\u7a7a\u95f4\\r\\n\\r\\nARM\u7cfb\u7edf\u7684Linux\u4e4b\u6240\u4ee5\u628a\u5185\u6838\u6a21\u5757\u5b89\u7f6e\u57283GB\u6216\u80052GB\u9644\u8fd1\u768416MB\u8303\u56f4\u5185\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u5b9e\u73b0\u5185\u6838\u6a21\u5757\u548c\u5185\u6838\u672c\u8eab\u7684\u4ee3\u7801\u6bb5\u4e4b\u95f4\u7684\u77ed\u8df3\u8f6c\\r\\n\\r\\n\u5bf9\u4e8eARM SoC\u800c\u8a00\uff0c\u5982\u679c\u82af\u7247\u5185\u90e8\u6709\u7684\u786c\u4ef6\u7ec4\u4ef6\u7684DMA\u5f15\u64ce\u8bbf\u95ee\u5185\u5b58\u65f6\u6709\u5730\u5740\u7a7a\u95f4\u9650\u5236\uff08\u67d0\u4e9b\u7a7a\u95f4\u8bbf\u95ee\u4e0d\u5230\uff09\uff0c\u6bd4\u5982\u5047\u8bbeUART\u63a7\u5236\u5668\u7684DMA\u53ea\u80fd\u8bbf\u95ee32MB\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4e32MB\u5c31\u662fDMA\u533a\u57df\uff1b32MB\u5230\u9ad8\u7aef\u5185\u5b58\u5730\u5740\u7684\u8fd9\u6bb5\u79f0\u4e3a\u5e38\u89c4\u533a\u57df\uff1b\u518d\u4e4b\u4e0a\u7684\u79f0\u4e3a\u9ad8\u7aef\u5185\u5b58\u533a\u57df\u3002\\r\\n\\r\\n\u56fe11.8\u7ed9\u51fa\u4e86\u51e0\u79cdDMA\u3001\u5e38\u89c4\u3001\u9ad8\u7aef\u5185\u5b58\u533a\u57df\u53ef\u80fd\u7684\u5206\u5e03\uff0c\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u4e0b\uff0c\u6709\u786c\u4ef6\u7684DMA\u5f15\u64ce\u4e0d\u80fd\u8bbf\u95ee\u5168\u90e8\u5730\u5740\uff0c\u4e14\u5185\u5b58\u8f83\u5927\u800c\u65e0\u6cd5\u5168\u90e8\u5728\u5185\u6838\u7a7a\u95f4\u865a\u62df\u5730\u5740\u6620\u5c04\u4e0b\uff0c\u5b58\u653e\u67093\u4e2a\u533a\u57df\uff1b\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u786c\u4ef6\u7684DMA\u5f15\u64ce\u4e0d\u80fd\u8bbf\u95ee\u5168\u90e8\u5730\u5740\uff0c\u4e14\u5185\u5b58\u8f83\u5927\u800c\u65e0\u6cd5\u5168\u90e8\u5728\u5185\u6838\u7a7a\u95f4\u865a\u62df\u5730\u5740\u6620\u5c04\u4e0b\uff0c\u5219\u5e38\u89c4\u533a\u57df\u5b9e\u9645\u9000\u5316\u4e3a0\uff1b\u7b2c\u4e09\u79cd\u60c5\u51b5\u4e0b\uff0c\u6709\u786c\u4ef6\u7684DMA\u5f15\u64ce\u4e0d\u80fd\u8bbf\u95ee\u5168\u90e8\u5730\u5740\uff0c\u4e14\u5185\u5b58\u8f83\u5c0f\u53ef\u4ee5\u5168\u90e8\u5728\u5185\u6838\u7a7a\u95f4\u865a\u62df\u5730\u5740\u6620\u5c04\u4e0b\uff0c\u5219\u9ad8\u7aef\u5185\u5b58\u533a\u57df\u5b9e\u9645\u9000\u5316\u4e3a0\uff1b\u7b2c\u56db\u79cd\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u786c\u4ef6\u7684DMA\u5f15\u64ce\u4e0d\u80fd\u8bbf\u95ee\u5168\u90e8\u5730\u5740\uff0c\u4e14\u5185\u5b58\u8f83\u5c0f\u53ef\u4ee5\u5168\u90e8\u5728\u5185\u6838\u7a7a\u95f4\u865a\u62df\u5730\u5740\u6620\u5c04\u4e0b\uff0c\u5219\u5e38\u89c4\u548c\u9ad8\u7aef\u5185\u5b58\u533a\u57df\u5b9e\u9645\u9000\u5316\u4e3a0\\r\\n\\r\\n![image-20250402224805017](./figure/image-20250402224805017.png)\\r\\n\\r\\n\u56fe11.8\u3000DMA\u3001\u5e38\u89c4\u3001\u9ad8\u7aef\u5185\u5b58\u533a\u57df\u5206\u5e03\\r\\n\\r\\n\u5982\u56fe11.9\u6240\u793a\uff0cDMA\u3001\u5e38\u89c4\u3001\u9ad8\u7aef\u5185\u5b58\u8fd93\u4e2a\u533a\u57df\u90fd\u91c7\u7528buddy\u7b97\u6cd5\u8fdb\u884c\u7ba1\u7406\uff0c\u628a\u7a7a\u95f2\u7684\u9875\u9762\u4ee52\u7684n\u6b21\u65b9\u4e3a\u5355\u4f4d\u8fdb\u884c\u7ba1\u7406\uff0c\u56e0\u6b64Linux\u6700\u5e95\u5c42\u7684\u5185\u5b58\u7533\u8bf7\u90fd\u662f\u4ee52n \u4e3a\u5355\u4f4d\u7684\u3002Buddy\u7b97\u6cd5\u6700\u4e3b\u8981\u7684\u4f18\u70b9\u662f\u907f\u514d\u4e86\u5916\u90e8\u788e\u7247\uff0c\u4efb\u4f55\u65f6\u5019\u533a\u57df\u91cc\u7684\u7a7a\u95f2\u5185\u5b58\u90fd\u80fd\u4ee52\u7684n\u6b21\u65b9\u8fdb\u884c\u62c6\u5206\u6216\u5408\u5e76\u3002\\r\\n\\r\\n![image-20250402224832312](./figure/image-20250402224832312.png)\\r\\n\\r\\n\u56fe11.9\u3000buddy\u7b97\u6cd5\\r\\n\\r\\n/proc/buddyinfo\u4f1a\u663e\u793a\u6bcf\u4e2a\u533a\u57df\u91cc\u97622n\u7684\u7a7a\u95f2\u9875\u9762\u5206\u5e03\u60c5\u51b5\uff0c\u6bd4\u5982\uff1a\\r\\n\\r\\n```\\r\\n$cat /proc/buddyinfo\\r\\nNode 0, zone      DMA      8      5      2      7      8      3      0      0\\r\\n0      1      0\\r\\nNode 0, zone   Normal   2002   1252    524    187    183     71      7      0\\r\\n0      1      1\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u7ed3\u679c\u663e\u793a\u9ad8\u7aef\u5185\u5b58\u533a\u57df\u4e3a0\uff0cDMA\u533a\u57df\u91cc1\u9875\u7a7a\u95f2\u7684\u5185\u5b58\u8fd8\u67098\u4e2a\uff0c\u8fde\u7eed2\u9875\u7a7a\u95f2\u7684\u67095\u4e2a\uff0c\u8fde\u7eed4\u9875\u7a7a\u95f2\u7684\u67092\u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff1b\u5e38\u89c4\u533a\u57df\u91cc\u97621\u9875\u7a7a\u95f2\u7684\u8fd8\u67092002\u4e2a\uff0c\u8fde\u7eed2\u9875\u7a7a\u95f2\u7684\u67091252\u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u5185\u6838\u7269\u7406\u5185\u5b58\u6620\u5c04\u533a\u7684\u865a\u62df\u5185\u5b58\uff08\u5373\u4eceDMA\u548c\u5e38\u89c4\u533a\u57df\u6620\u5c04\u8fc7\u6765\u7684\uff09\uff0c\u4f7f\u7528virt_to_phys\uff08\uff09\u53ef\u4ee5\u5b9e\u73b0\u5185\u6838\u865a\u62df\u5730\u5740\u8f6c\u5316\u4e3a\u7269\u7406\u5730\u5740\u3002\u4e0e\u4e4b\u5bf9\u5e94\u7684\u51fd\u6570\u4e3aphys_to_virt\uff08\uff09\uff0c\u5b83\u5c06\u7269\u7406\u5730\u5740\u8f6c\u5316\u4e3a\u5185\u6838\u865a\u62df\u5730\u5740\u3002\\r\\n\\r\\n\u6ce8\u610f\uff1a \u4e0a\u8ff0virt_to_phys\uff08\uff09\u548cphys_to_virt\uff08\uff09\u65b9\u6cd5\u4ec5\u9002\u7528\u4e8eDMA\u548c\u5e38\u89c4\u533a\u57df\uff0c\u9ad8\u7aef\u5185\u5b58\u7684\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u4e4b\u95f4\u4e0d\u5b58\u5728\u5982\u6b64\u7b80\u5355\u7684\u6362\u7b97\u5173\u7cfb\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB","description":"Linux\u76f4\u63a5\u63d0\u4f9b\u4e86\u5bf9KGDB\u7684\u652f\u6301\uff0cKGDB\u91c7\u7528\u4e86\u5178\u578b\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u201c\u63d2\u6869\u201d\u6280\u5de7\uff0c\u4e00\u822c\u4f9d\u8d56\u4e8e\u4e32\u53e3\u4e0e\u8c03\u8bd5\u4e3b\u673a\u901a\u4fe1\u3002\u4e3a\u4e86\u652f\u6301KGDB\uff0c\u4e32\u53e3\u9a71\u52a8\u5e94\u8be5\u5b9e\u73b0\u7eaf\u7cb9\u7684\u8f6e\u8be2\u6536\u53d1\u5355\u4e00\u5b57\u7b26\u7684\u6210\u5458\u51fd\u6570\uff0c\u4ee5\u4f9bdrivers/tty/serial/kgdboc.c\u8c03\u7528\uff0c\u8b6c\u5982drivers/tty/serial/8250/8250_core.c\u4e2d\u7684\uff1a","date":"2025-09-15T14:44:14.517Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.725,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.2\u3000Linux\u5185\u5b58\u7ba1\u7406"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs"}},"content":"Linux\u76f4\u63a5\u63d0\u4f9b\u4e86\u5bf9KGDB\u7684\u652f\u6301\uff0cKGDB\u91c7\u7528\u4e86\u5178\u578b\u7684\u5d4c\u5165\u5f0f\u7cfb\u7edf\u201c\u63d2\u6869\u201d\u6280\u5de7\uff0c\u4e00\u822c\u4f9d\u8d56\u4e8e\u4e32\u53e3\u4e0e\u8c03\u8bd5\u4e3b\u673a\u901a\u4fe1\u3002\u4e3a\u4e86\u652f\u6301KGDB\uff0c\u4e32\u53e3\u9a71\u52a8\u5e94\u8be5\u5b9e\u73b0\u7eaf\u7cb9\u7684\u8f6e\u8be2\u6536\u53d1\u5355\u4e00\u5b57\u7b26\u7684\u6210\u5458\u51fd\u6570\uff0c\u4ee5\u4f9bdrivers/tty/serial/kgdboc.c\u8c03\u7528\uff0c\u8b6c\u5982drivers/tty/serial/8250/8250_core.c\u4e2d\u7684\uff1a\\r\\n\\r\\n```\\r\\nstatic struct uart_ops serial8250_pops = {\\r\\n      \u2026\\r\\n#ifdef CONFIG_CONSOLE_POLL\\r\\n       .poll_get_char = serial8250_get_poll_char,\\r\\n       .poll_put_char = serial8250_put_poll_char,\\r\\n#endif\\r\\n};\\r\\n```\\r\\n\\r\\n\u5728\u7f16\u8bd1\u5185\u6838\u65f6\uff0c\u8fd0\u884cmake ARCH=arm menuconfig\u65f6\u9700\u9009\u62e9\u5173\u4e8eKGDB\u7684\u7f16\u8bd1\u9879\u76ee\uff0c\u5982\u56fe21.6\u6240\u793a\u3002\\r\\n\\r\\n![1747579229228](./figure/1747579229228.png)\\r\\n\\r\\n\u56fe21.6\u3000KGDB\u7f16\u8bd1\u9009\u9879\u914d\u7f6e\\r\\n\\r\\n\u5bf9\u4e8e\u76ee\u6807\u677f\u800c\u8a00\uff0c\u9700\u8981\u5728bootargs\u4e2d\u8bbe\u7f6e\u4e0eKGDB\u5bf9\u5e94\u7684\u4e32\u53e3\u7b49\u4fe1\u606f\uff0c\u5982kgdboc=ttyS0\uff0c115200kgdbcon\u3002\\r\\n\\r\\n\u5982\u679c\u60f3\u4e00\u5f00\u673a\u5185\u6838\u5c31\u76f4\u63a5\u8fdb\u5165\u7b49\u5f85GDB\u8fde\u63a5\u7684\u8c03\u8bd5\u72b6\u6001\uff0c\u53ef\u4ee5\u5728bootargs\u4e2d\u8bbe\u7f6ekgdbwait\uff0ckgdbwait\u7684\u542b\u4e49\u662f\u542f\u52a8\u65f6\u5c31\u7b49\u5f85\u4e3b\u673a\u7684GDB\u8fde\u63a5\u3002\u800c\u82e5\u60f3\u5728\u5185\u6838\u542f\u52a8\u540e\u8fdb\u5165GDB\u8c03\u8bd5\u6a21\u5f0f\uff0c\u53ef\u8fd0\u884cecho g>/proc/sysrq_trigger\u547d\u4ee4\u7ed9\u5185\u6838\u4f20\u5165\u4e00\u4e2a\u952e\u503c\u662fg\u7684magic_sysrq\u3002\\r\\n\\r\\n\u5728\u8c03\u8bd5PC\u4e0a\uff0c\u4f9d\u6b21\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5c31\u53ef\u4ee5\u542f\u52a8\u8c03\u8bd5\u5e76\u8fde\u63a5\u81f3\u76ee\u6807\u673a\uff08\u5047\u8bbe\u4e32\u53e3\u5728PC\u4e0a\u5bf9\u5e94\u7684\u8bbe\u5907\u8282\u70b9\u662f/dev/ttyS0\uff09\uff1a\\r\\n\\r\\n```\\r\\n# arm-eabi-gdb ./vmlinux\\r\\n(gdb) set remotebaud 115200\\r\\n(gdb) target remote /dev/ttyS0                              //\u8fde\u63a5\u76ee\u6807\u673a\\r\\n(gdb)\\r\\n```\\r\\n\\r\\n\u4e4b\u540e\uff0c\u5728\u4e3b\u673a\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528GDB\u50cf\u8c03\u8bd5\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\u8c03\u8bd5\u4f7f\u80fd\u4e86KGDB\u7684\u76ee\u6807\u673a\u4e0a\u7684\u5185\u6838\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs","description":"devfs\uff08\u8bbe\u5907\u6587\u4ef6\u7cfb\u7edf\uff09\u662f\u7531Linux 2.4\u5185\u6838\u5f15\u5165\u7684\uff0c\u5f15\u5165\u65f6\u88ab\u8bb8\u591a\u5de5\u7a0b\u5e08\u7ed9\u4e88\u4e86\u9ad8\u5ea6\u8bc4\u4ef7\uff0c\u5b83\u7684\u51fa\u73b0\u4f7f\u5f97\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u80fd\u81ea\u4e3b\u5730\u7ba1\u7406\u81ea\u5df1\u7684\u8bbe\u5907\u6587\u4ef6\u3002\u5177\u4f53\u6765\u8bf4\uff0cdevfs\u5177\u6709\u5982\u4e0b\u4f18\u70b9\u3002","date":"2025-09-15T14:44:14.497Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.75,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.9\u3000KGDB"},"nextItem":{"title":"10.5.1\u3000\u5185\u6838\u5b9a\u65f6\u5668\u7f16\u7a0b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.5\u3000\u5185\u6838\u5b9a\u65f6\u5668"}},"content":"devfs\uff08\u8bbe\u5907\u6587\u4ef6\u7cfb\u7edf\uff09\u662f\u7531Linux 2.4\u5185\u6838\u5f15\u5165\u7684\uff0c\u5f15\u5165\u65f6\u88ab\u8bb8\u591a\u5de5\u7a0b\u5e08\u7ed9\u4e88\u4e86\u9ad8\u5ea6\u8bc4\u4ef7\uff0c\u5b83\u7684\u51fa\u73b0\u4f7f\u5f97\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u80fd\u81ea\u4e3b\u5730\u7ba1\u7406\u81ea\u5df1\u7684\u8bbe\u5907\u6587\u4ef6\u3002\u5177\u4f53\u6765\u8bf4\uff0cdevfs\u5177\u6709\u5982\u4e0b\u4f18\u70b9\u3002\\r\\n\\r\\n1\uff09\u53ef\u4ee5\u901a\u8fc7\u7a0b\u5e8f\u5728\u8bbe\u5907\u521d\u59cb\u5316\u65f6\u5728/dev\u76ee\u5f55\u4e0b\u521b\u5efa\u8bbe\u5907\u6587\u4ef6\uff0c\u5378\u8f7d\u8bbe\u5907\u65f6\u5c06\u5b83\u5220\u9664\u3002\\r\\n\\r\\n2\uff09\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u6307\u5b9a\u8bbe\u5907\u540d\u3001\u6240\u6709\u8005\u548c\u6743\u9650\u4f4d\uff0c\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u4ecd\u53ef\u4ee5\u4fee\u6539\u6240\u6709\u8005\u548c\u6743\u9650\u4f4d\u3002\\r\\n\\r\\n3\uff09\u4e0d\u518d\u9700\u8981\u4e3a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5206\u914d\u4e3b\u8bbe\u5907\u53f7\u4ee5\u53ca\u5904\u7406\u6b21\u8bbe\u5907\u53f7\uff0c\u5728\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u76f4\u63a5\u7ed9register_chrdev\uff08\uff09\u4f20\u90120\u4e3b\u8bbe\u5907\u53f7\u4ee5\u83b7\u5f97\u53ef\u7528\u7684\u4e3b\u8bbe\u5907\u53f7\uff0c\u5e76\u5728devfs_register\uff08\uff09\u4e2d\u6307\u5b9a\u6b21\u8bbe\u5907\u53f7\u3002\\r\\n\\r\\n\u9a71\u52a8\u7a0b\u5e8f\u5e94\u8c03\u7528\u4e0b\u9762\u8fd9\u4e9b\u51fd\u6570\u6765\u8fdb\u884c\u8bbe\u5907\u6587\u4ef6\u7684\u521b\u5efa\u548c\u64a4\u9500\u5de5\u4f5c\u3002\\r\\n\\r\\n```\\r\\n/* \u521b\u5efa\u8bbe\u5907\u76ee\u5f55*/\\r\\ndevfs_handle_t devfs_mk_dir(devfs_handle_t dir, const char *name, void *info);\\r\\n/* \u521b\u5efa\u8bbe\u5907\u6587\u4ef6*/\\r\\ndevfs_handle_t devfs_register(devfs_handle_t dir, const char *name, unsigned\\r\\n   int flags, unsigned int major, unsigned int minor, umode_t mode, void *ops,\\r\\n   void *info);\\r\\n/* \u64a4\u9500\u8bbe\u5907\u6587\u4ef6 */\\r\\nvoid devfs_unregister(devfs_handle_t de);\\r\\n```\\r\\n\\r\\n\u5728Linux 2.4\u7684\u8bbe\u5907\u9a71\u52a8\u7f16\u7a0b\u4e2d\uff0c\u5206\u522b\u5728\u6a21\u5757\u52a0\u8f7d\u3001\u5378\u8f7d\u51fd\u6570\u4e2d\u521b\u5efa\u548c\u64a4\u9500\u8bbe\u5907\u6587\u4ef6\u662f\u88ab\u666e\u904d\u91c7\u7528\u5e76\u503c\u5f97\u5927\u529b\u63a8\u8350\u7684\u597d\u65b9\u6cd5\u3002\u4ee3\u7801\u6e05\u53555.5\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f7f\u7528devfs\u7684\u8303\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53555.5\u3000devfs\u7684\u4f7f\u7528\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1 static devfs_handle_t devfs_handle;\\r\\n 2 static int _ _init xxx_init(void)\\r\\n 3 {\\r\\n 4     int ret;\\r\\n 5     int i;\\r\\n 6     /* \u5728\u5185\u6838\u4e2d\u6ce8\u518c\u8bbe\u5907*/\\r\\n 7     ret = register_chrdev(XXX_MAJOR, DEVICE_NAME, &xxx_fops);\\r\\n 8     if (ret < 0) {\\r\\n 9         printk(DEVICE_NAME \\" can\'t register major number\\\\n\\");\\r\\n10         return ret;\\r\\n11     }\\r\\n12     /* \u521b\u5efa\u8bbe\u5907\u6587\u4ef6*/\\r\\n13     devfs_handle =devfs_register(NULL, DEVICE_NAME, DEVFS_FL_DEFAULT,\\r\\n14     XXX_MAJOR, 0, S_IFCHR | S_IRUSR | S_IWUSR, &xxx_fops, NULL);\\r\\n15     ...\\r\\n16     printk(DEVICE_NAME \\" initialized\\\\n\\");\\r\\n17     return 0;\\r\\n18 }\\r\\n19\\r\\n20 static void _ _exit xxx_exit(void)\\r\\n21 {\\r\\n22     devfs_unregister(devfs_handle);             /* \u64a4\u9500\u8bbe\u5907\u6587\u4ef6*/\\r\\n23     unregister_chrdev(XXX_MAJOR, DEVICE_NAME);  /* \u6ce8\u9500\u8bbe\u5907*/\\r\\n24 }\\r\\n25\\r\\n26 module_init(xxx_init);\\r\\n27 module_exit(xxx_exit);\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u4e2d\u7b2c7\u884c\u548c\u7b2c23\u884c\u5206\u522b\u7528\u4e8e\u6ce8\u518c\u548c\u6ce8\u9500\u5b57\u7b26\u8bbe\u5907\uff0c\u4f7f\u7528\u7684register_chrdev\uff08\uff09\u548cunregister_chrdev\uff08\uff09\u5728Linux 2.6\u4ee5\u540e\u7684\u5185\u6838\u4e2d\u4ecd\u88ab\u91c7\u7528\u3002\u7b2c13\u548c22\u884c\u5206\u522b\u7528\u4e8e\u521b\u5efa\u548c\u5220\u9664devfs\u6587\u4ef6\u8282\u70b9\uff0c\u8fd9\u4e9bAPI\u5df2\u7ecf\u88ab\u5220\u9664\u4e86\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.5\u3000\u5185\u6838\u5b9a\u65f6\u5668","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.5\u3000\u5185\u6838\u5b9a\u65f6\u5668","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.5\u3000\u5185\u6838\u5b9a\u65f6\u5668.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.5\u3000\u5185\u6838\u5b9a\u65f6\u5668.md","title":"10.5.1\u3000\u5185\u6838\u5b9a\u65f6\u5668\u7f16\u7a0b","description":"\u8f6f\u4ef6\u610f\u4e49\u4e0a\u7684\u5b9a\u65f6\u5668\u6700\u7ec8\u4f9d\u8d56\u786c\u4ef6\u5b9a\u65f6\u5668\u6765\u5b9e\u73b0\uff0c\u5185\u6838\u5728\u65f6\u949f\u4e2d\u65ad\u53d1\u751f\u540e\u68c0\u6d4b\u5404\u5b9a\u65f6\u5668\u662f\u5426\u5230\u671f\uff0c\u5230\u671f\u540e\u7684\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u5c06\u4f5c\u4e3a\u8f6f\u4e2d\u65ad\u5728\u5e95\u534a\u90e8\u6267\u884c\u3002\u5b9e\u8d28\u4e0a\uff0c\u65f6\u949f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4f1a\u5524\u8d77TIMER_SOFTIRQ\u8f6f\u4e2d\u65ad\uff0c\u8fd0\u884c\u5f53\u524d\u5904\u7406\u5668\u4e0a\u5230\u671f\u7684\u6240\u6709\u5b9a\u65f6\u5668\u3002","date":"2025-09-15T14:44:14.493Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":13.14,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.3\u3000devfs"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3"}},"content":"\u8f6f\u4ef6\u610f\u4e49\u4e0a\u7684\u5b9a\u65f6\u5668\u6700\u7ec8\u4f9d\u8d56\u786c\u4ef6\u5b9a\u65f6\u5668\u6765\u5b9e\u73b0\uff0c\u5185\u6838\u5728\u65f6\u949f\u4e2d\u65ad\u53d1\u751f\u540e\u68c0\u6d4b\u5404\u5b9a\u65f6\u5668\u662f\u5426\u5230\u671f\uff0c\u5230\u671f\u540e\u7684\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u5c06\u4f5c\u4e3a\u8f6f\u4e2d\u65ad\u5728\u5e95\u534a\u90e8\u6267\u884c\u3002\u5b9e\u8d28\u4e0a\uff0c\u65f6\u949f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4f1a\u5524\u8d77TIMER_SOFTIRQ\u8f6f\u4e2d\u65ad\uff0c\u8fd0\u884c\u5f53\u524d\u5904\u7406\u5668\u4e0a\u5230\u671f\u7684\u6240\u6709\u5b9a\u65f6\u5668\u3002\\r\\n\\r\\n\u5728Linux\u8bbe\u5907\u9a71\u52a8\u7f16\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u5229\u7528Linux\u5185\u6838\u4e2d\u63d0\u4f9b\u7684\u4e00\u7ec4\u51fd\u6570\u548c\u6570\u636e\u7ed3\u6784\u6765\u5b8c\u6210\u5b9a\u65f6\u89e6\u53d1\u5de5\u4f5c\u6216\u8005\u5b8c\u6210\u67d0\u5468\u671f\u6027\u7684\u4e8b\u52a1\u3002\u8fd9\u7ec4\u51fd\u6570\u548c\u6570\u636e\u7ed3\u6784\u4f7f\u5f97\u9a71\u52a8\u5de5\u7a0b\u5e08\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u4e0d\u7528\u5173\u5fc3\u5177\u4f53\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7a76\u7adf\u5bf9\u5e94\u7740\u600e\u6837\u7684\u5185\u6838\u548c\u786c\u4ef6\u884c\u4e3a\u3002\\r\\n\\r\\nLinux\u5185\u6838\u6240\u63d0\u4f9b\u7684\u7528\u4e8e\u64cd\u4f5c\u5b9a\u65f6\u5668\u7684\u6570\u636e\u7ed3\u6784\u548c\u51fd\u6570\u5982\u4e0b\u3002\\r\\n\\r\\n1.timer_list\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0ctimer_list\u7ed3\u6784\u4f53\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u5e94\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5982\u4ee3\u7801\u6e05\u535510.9\u6240\u793a\u3002\\r\\n\\r\\n```\\r\\n 1struct timer_list {\\r\\n 2        /*\\r\\n 3         * All fields that change during normal runtime grouped to the\\r\\n 4         * same cacheline\\r\\n 5         */\\r\\n 6        struct list_head entry;\\r\\n 7        unsigned long expires;\\r\\n 8        struct tvec_base *base;\\r\\n 9\\r\\n10        void (*function)(unsigned long);\\r\\n11        unsigned long data;\\r\\n12\\r\\n13        int slack;\\r\\n14\\r\\n15#ifdef CONFIG_TIMER_STATS\\r\\n16        int start_pid;\\r\\n17        void *start_site;\\r\\n18        char start_comm[16];\\r\\n19#endif\\r\\n20#ifdef CONFIG_LOCKDEP\\r\\n21        struct lockdep_map lockdep_map;\\r\\n22#endif\\r\\n23};\\r\\n```\\r\\n\\r\\n\u5f53\u5b9a\u65f6\u5668\u671f\u6ee1\u540e\uff0c\u5176\u4e2d\u7b2c10\u884c\u7684function\uff08\uff09\u6210\u5458\u5c06\u88ab\u6267\u884c\uff0c\u800c\u7b2c11\u884c\u7684data\u6210\u5458\u5219\u662f\u4f20\u5165\u5176\u4e2d\u7684\u53c2\u6570\uff0c\u7b2c7\u884c\u7684expires\u5219\u662f\u5b9a\u65f6\u5668\u5230\u671f\u7684\u65f6\u95f4\uff08jiffies\uff09\u3002\\r\\n\\r\\n\u5982\u4e0b\u4ee3\u7801\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3amy_timer\u7684\u5b9a\u65f6\u5668\uff1a\\r\\n\\r\\n```\\r\\nstruct timer_list my_timer;\\r\\n```\\r\\n\\r\\n2.\u521d\u59cb\u5316\u5b9a\u65f6\u5668\\r\\n\\r\\ninit_timer\u662f\u4e00\u4e2a\u5b8f\uff0c\u5b83\u7684\u539f\u578b\u7b49\u4ef7\u4e8e\uff1a\\r\\n\\r\\n```\\r\\nvoid init_timer(struct timer_list * timer);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0init_timer\uff08\uff09\u51fd\u6570\u521d\u59cb\u5316timer_list\u7684entry\u7684next\u4e3aNULL\uff0c\u5e76\u7ed9base\u6307\u9488\u8d4b\u503c\u3002\\r\\n\\r\\nTIMER_INITIALIZER\uff08_function\uff0c_expires\uff0c_data\uff09\u5b8f\u7528\u4e8e\u8d4b\u503c\u5b9a\u65f6\u5668\u7ed3\u6784\u4f53\u7684function\u3001expires\u3001data\u548cbase\u6210\u5458\uff0c\u8fd9\u4e2a\u5b8f\u7b49\u4ef7\u4e8e\uff1a\\r\\n\\r\\n```\\r\\n#define TIMER_INITIALIZER(_function, _expires, _data) {        \\\\\\r\\n                      .entry = { .prev = TIMER_ENTRY_STATIC }, \\\\\\r\\n                      .function = (_function),                 \\\\\\r\\n                      .expires = (_expires),                   \\\\\\r\\n                      .data = (_data),                         \\\\\\r\\n                      .base = &boot_tvec_bases,                \\\\\\r\\n        }\\r\\n```\\r\\n\\r\\nDEFINE_TIMER\uff08_name\uff0c_function\uff0c_expires\uff0c_data\uff09\u5b8f\u662f\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u5b9a\u65f6\u5668\u6210\u5458\u7684\u201c\u5feb\u6377\u65b9\u5f0f\u201d\uff0c\u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define DEFINE_TIMER(_name, _function, _expires, _data)\\\\\\r\\n              struct timer_list _name =\\\\\\r\\n                            TIMER_INITIALIZER(_function, _expires, _data)\\r\\n```\\r\\n\\r\\n\u6b64\u5916\uff0csetup_timer\uff08\uff09\u4e5f\u53ef\u7528\u4e8e\u521d\u59cb\u5316\u5b9a\u65f6\u5668\u5e76\u8d4b\u503c\u5176\u6210\u5458\uff0c\u5176\u6e90\u4ee3\u7801\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define __setup_timer(_timer, _fn, _data, _flags)               \\\\\\r\\n        do {                                                    \\\\\\r\\n                __init_timer((_timer), (_flags));               \\\\\\r\\n                (_timer)->function = (_fn);                     \\\\\\r\\n                (_timer)->data = (_data);                       \\\\\\r\\n        } while (0)\\r\\n```\\r\\n\\r\\n3.\u589e\u52a0\u5b9a\u65f6\u5668\\r\\n\\r\\n```\\r\\nvoid add_timer(struct timer_list * timer);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u7528\u4e8e\u6ce8\u518c\u5185\u6838\u5b9a\u65f6\u5668\uff0c\u5c06\u5b9a\u65f6\u5668\u52a0\u5165\u5230\u5185\u6838\u52a8\u6001\u5b9a\u65f6\u5668\u94fe\u8868\u4e2d\u3002\\r\\n\\r\\n4.\u5220\u9664\u5b9a\u65f6\u5668\\r\\n\\r\\n```\\r\\nint del_timer(struct timer_list * timer);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u7528\u4e8e\u5220\u9664\u5b9a\u65f6\u5668\u3002\\r\\n\\r\\ndel_timer_sync\uff08\uff09\u662fdel_timer\uff08\uff09\u7684\u540c\u6b65\u7248\uff0c\u5728\u5220\u9664\u4e00\u4e2a\u5b9a\u65f6\u5668\u65f6\u9700\u7b49\u5f85\u5176\u88ab\u5904\u7406\u5b8c\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u7684\u8c03\u7528\u4e0d\u80fd\u53d1\u751f\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u3002\\r\\n\\r\\n5.\u4fee\u6539\u5b9a\u65f6\u5668\u7684expire\\r\\n\\r\\n```\\r\\nint mod_timer(struct timer_list *timer, unsigned long expires);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u7528\u4e8e\u4fee\u6539\u5b9a\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\uff0c\u5728\u65b0\u7684\u88ab\u4f20\u5165\u7684expires\u5230\u6765\u540e\u624d\u4f1a\u6267\u884c\u5b9a\u65f6\u5668\u51fd\u6570\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.10\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u5185\u6838\u5b9a\u65f6\u5668\u4f7f\u7528\u6a21\u677f\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5907\u9a71\u52a8\u90fd\u5982\u8fd9\u4e2a\u6a21\u677f\u90a3\u6837\u4f7f\u7528\u5b9a\u65f6\u5668\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.10\u3000\u5185\u6838\u5b9a\u65f6\u5668\u4f7f\u7528\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1/* xxx\u8bbe\u5907\u7ed3\u6784\u4f53*/\\r\\n 2struct xxx_dev {\\r\\n 3  struct cdev cdev;\\r\\n 4  ...\\r\\n 5  timer_list xxx_timer;      /* \u8bbe\u5907\u8981\u4f7f\u7528\u7684\u5b9a\u65f6\u5668 */\\r\\n 6};\\r\\n 7\\r\\n 8/* xxx\u9a71\u52a8\u4e2d\u7684\u67d0\u51fd\u6570*/\\r\\n 9xxx_func1(\u2026)\\r\\n10{\\r\\n11  struct xxx_dev *dev = filp->private_data;\\r\\n12  ...\\r\\n13  /* \u521d\u59cb\u5316\u5b9a\u65f6\u5668*/\\r\\n14  init_timer(&dev->xxx_timer);\\r\\n15  dev->xxx_timer.function = &xxx_do_timer;\\r\\n16  dev->xxx_timer.data = (unsigned long)dev;\\r\\n17                      /* \u8bbe\u5907\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u53c2\u6570*/\\r\\n18  dev->xxx_timer.expires = jiffies + delay;\\r\\n19  /* \u6dfb\u52a0\uff08\u6ce8\u518c\uff09\u5b9a\u65f6\u5668*/\\r\\n20  add_timer(&dev->xxx_timer);\\r\\n21  ...\\r\\n22}\\r\\n23\\r\\n24/* xxx\u9a71\u52a8\u4e2d\u7684\u67d0\u51fd\u6570*/\\r\\n25xxx_func2(\u2026)\\r\\n26{\\r\\n27 ...\\r\\n28  /* \u5220\u9664\u5b9a\u65f6\u5668 */\\r\\n29  del_timer (&dev->xxx_timer);\\r\\n30  ...\\r\\n31}\\r\\n32\\r\\n33/* \u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570*/\\r\\n34static void xxx_do_timer(unsigned long arg)\\r\\n35{\\r\\n36  struct xxx_device *dev = (struct xxx_device *)(arg);\\r\\n37  ...\\r\\n38  /* \u8c03\u5ea6\u5b9a\u65f6\u5668\u518d\u6267\u884c*/\\r\\n39  dev->xxx_timer.expires = jiffies + delay;\\r\\n40  add_timer(&dev->xxx_timer);\\r\\n41  ...\\r\\n42}\\r\\n```\\r\\n\\r\\n\u4ece\u4ee3\u7801\u6e05\u5355\u7b2c18\u300139\u884c\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9a\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u5f80\u5f80\u662f\u5728\u76ee\u524djiffies\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u4e2a\u65f6\u5ef6\uff0c\u82e5\u4e3aHz\uff0c\u5219\u8868\u793a\u5ef6\u8fdf1s\u3002\\r\\n\\r\\n\u5728\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u4e2d\uff0c\u5728\u5b8c\u6210\u76f8\u5e94\u7684\u5de5\u4f5c\u540e\uff0c\u5f80\u5f80\u4f1a\u5ef6\u540eexpires\u5e76\u5c06\u5b9a\u65f6\u5668\u518d\u6b21\u6dfb\u52a0\u5230\u5185\u6838\u5b9a\u65f6\u5668\u94fe\u8868\u4e2d\uff0c\u4ee5\u4fbf\u5b9a\u65f6\u5668\u80fd\u518d\u6b21\u88ab\u89e6\u53d1\u3002\\r\\n\\r\\n\u6b64\u5916\uff0cLinux\u5185\u6838\u652f\u6301tickless\u548cNO_HZ\u6a21\u5f0f\u540e\uff0c\u5185\u6838\u4e5f\u5305\u542b\u5bf9hrtimer\uff08\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\uff09\u7684\u652f\u6301\uff0c\u5b83\u53ef\u4ee5\u652f\u6301\u5230\u5fae\u79d2\u7ea7\u522b\u7684\u7cbe\u5ea6\u3002\u5185\u6838\u4e5f\u5b9a\u4e49\u4e86hrtimer\u7ed3\u6784\u4f53\uff0chrtimer_set_expires\uff08\uff09\u3001hrtimer_start_expires\uff08\uff09\u3001hrtimer_forward_now\uff08\uff09\u3001hrtimer_restart\uff08\uff09\u7b49\u7c7b\u4f3c\u7684API\u6765\u5b8c\u6210hrtimer\u7684\u8bbe\u7f6e\u3001\u65f6\u95f4\u63a8\u79fb\u4ee5\u53ca\u5230\u671f\u56de\u8c03\u3002\u6211\u4eec\u53ef\u4ee5\u4ecesound/soc/fsl/imx-pcm-fiq.c\u4e2d\u63d0\u53d6\u51fa\u4e00\u4e2a\u4f7f\u7528\u8303\u4f8b\uff0c\u5982\u4ee3\u7801\u6e05\u535510.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.11\u3000\u5185\u6838\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\uff08hrtimer\uff09\u4f7f\u7528\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static enum hrtimer_restart snd_hrtimer_callback(struct hrtimer *hrt)\\r\\n 2{\\r\\n 3        ...\\r\\n 4\\r\\n 5        hrtimer_forward_now(hrt, ns_to_ktime(iprtd->poll_time_ns));\\r\\n 6\\r\\n 7        return HRTIMER_RESTART;\\r\\n 8}\\r\\n 9\\r\\n10static int snd_imx_pcm_trigger(struct snd_pcm_substream *substream, int cmd)\\r\\n11{\\r\\n12        struct snd_pcm_runtime *runtime = substream->runtime;\\r\\n13        struct imx_pcm_runtime_data *iprtd = runtime->private_data;\\r\\n14\\r\\n15        switch (cmd) {\\r\\n16        case SNDRV_PCM_TRIGGER_START:\\r\\n17        case SNDRV_PCM_TRIGGER_RESUME:\\r\\n18        case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:\\r\\n19                ...\\r\\n20                hrtimer_start(&iprtd->hrt, ns_to_ktime(iprtd->poll_time_ns),\\r\\n21                      HRTIMER_MODE_REL);\\r\\n22        ...\\r\\n23}\\r\\n24\\r\\n25static int snd_imx_open(struct snd_pcm_substream *substream)\\r\\n26{\\r\\n27        ...\\r\\n28        hrtimer_init(&iprtd->hrt, CLOCK_MONOTONIC, HRTIMER_MODE_REL);\\r\\n29        iprtd->hrt.function = snd_hrtimer_callback;\\r\\n30\\r\\n31        ...\\r\\n32        return 0;\\r\\n33}\\r\\n34static int snd_imx_close(struct snd_pcm_substream *substream)\\r\\n35{\\r\\n36        ...\\r\\n37        hrtimer_cancel(&iprtd->hrt);\\r\\n38        ...\\r\\n39}\\r\\n```\\r\\n\\r\\n\u7b2c28~29\u884c\u5728\u58f0\u5361\u6253\u5f00\u7684\u65f6\u5019\u901a\u8fc7hrtimer_init\uff08\uff09\u521d\u59cb\u5316\u4e86hrtimer\uff0c\u5e76\u6307\u5b9a\u56de\u8c03\u51fd\u6570\u4e3asnd_hrtimer_callback\uff08\uff09\uff1b\u5728\u542f\u52a8\u64ad\u653e\uff08\u7b2c15~21\u884cSNDRV_PCM_TRIGGER_START\uff09\u7b49\u65f6\u523b\u901a\u8fc7hrtimer_start\uff08\uff09\u542f\u52a8\u4e86hrtimer\uff1biprtd->poll_time_ns\u7eb3\u79d2\u540e\uff0c\u65f6\u95f4\u5230snd_hrtimer_callback\uff08\uff09\u51fd\u6570\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u88ab\u6267\u884c\uff0c\u5b83\u7d27\u63a5\u7740\u53c8\u901a\u8fc7hrtimer_forward_now\uff08\uff09\u628ahrtimer\u7684\u65f6\u95f4\u524d\u79fb\u4e86iprtd->poll_time_ns\u7eb3\u79d2\uff0c\u8fd9\u6837\u5468\u800c\u590d\u59cb\uff1b\u76f4\u5230\u58f0\u5361\u88ab\u5173\u95ed\uff0c\u7b2c37\u884c\u53c8\u8c03\u7528\u4e86hrtimer_cancel\uff08\uff09\u53d6\u6d88\u5728open\u65f6\u521d\u59cb\u5316\u7684hrtimer\u3002\\r\\n\\r\\n# 10.5.2\u3000\u5185\u6838\u4e2d\u5ef6\u8fdf\u7684\u5de5\u4f5cdelayed_work\\r\\n\\r\\n\u5bf9\u4e8e\u5468\u671f\u6027\u7684\u4efb\u52a1\uff0c\u9664\u4e86\u5b9a\u65f6\u5668\u4ee5\u5916\uff0c\u5728Linux\u5185\u6838\u4e2d\u8fd8\u53ef\u4ee5\u5229\u7528\u4e00\u5957\u5c01\u88c5\u5f97\u5f88\u597d\u7684\u5feb\u6377\u673a\u5236\uff0c\u5176\u672c\u8d28\u662f\u5229\u7528\u5de5\u4f5c\u961f\u5217\u548c\u5b9a\u65f6\u5668\u5b9e\u73b0\uff0c\u8fd9\u5957\u5feb\u6377\u673a\u5236\u5c31\u662fdelayed_work\uff0cdelayed_work\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535510.12\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.12\u3000delayed_work\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n1struct delayed_work {\\r\\n2        struct work_struct work;\\r\\n3        struct timer_list timer;\\r\\n4\\r\\n5        /* target workqueue and CPU ->timer uses to queue ->work */\\r\\n6        struct workqueue_struct *wq;\\r\\n7        int cpu;\\r\\n8};\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u51fd\u6570\u8c03\u5ea6\u4e00\u4e2adelayed_work\u5728\u6307\u5b9a\u7684\u5ef6\u65f6\u540e\u6267\u884c\uff1a\\r\\n\\r\\n```\\r\\nint schedule_delayed_work(struct delayed_work *work, unsigned long delay);\\r\\n```\\r\\n\\r\\n\u5f53\u6307\u5b9a\u7684delay\u5230\u6765\u65f6\uff0cdelayed_work\u7ed3\u6784\u4f53\u4e2d\u7684work\u6210\u5458work_func_t\u7c7b\u578b\u6210\u5458func\uff08\uff09\u4f1a\u88ab\u6267\u884c\u3002work_func_t\u7c7b\u578b\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ntypedef void (*work_func_t)(struct work_struct *work);\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0cdelay\u53c2\u6570\u7684\u5355\u4f4d\u662fjiffies\uff0c\u56e0\u6b64\u4e00\u79cd\u5e38\u89c1\u7684\u7528\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nschedule_delayed_work(&work, msecs_to_jiffies(poll_interval));\\r\\n```\\r\\n\\r\\nmsecs_to_jiffies\uff08\uff09\u7528\u4e8e\u5c06\u6beb\u79d2\u8f6c\u5316\u4e3ajiffies\u3002\\r\\n\\r\\n\u5982\u679c\u8981\u5468\u671f\u6027\u5730\u6267\u884c\u4efb\u52a1\uff0c\u901a\u5e38\u4f1a\u5728delayed_work\u7684\u5de5\u4f5c\u51fd\u6570\u4e2d\u518d\u6b21\u8c03\u7528schedule_delayed_work\uff08\uff09\uff0c\u5468\u800c\u590d\u59cb\u3002\\r\\n\\r\\n\u5982\u4e0b\u51fd\u6570\u7528\u6765\u53d6\u6d88delayed_work\uff1a\\r\\n\\r\\n```\\r\\nint cancel_delayed_work(struct delayed_work *work);\\r\\nint cancel_delayed_work_sync(struct delayed_work *work);\\r\\n```\\r\\n\\r\\n# 10.5.3\u3000\u5b9e\u4f8b\uff1a\u79d2\u5b57\u7b26\u8bbe\u5907\\r\\n\\r\\n\u4e0b\u9762\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\u201csecond\u201d\uff08\u5373\u201c\u79d2\u201d\uff09\u7684\u9a71\u52a8\uff0c\u5b83\u5728\u88ab\u6253\u5f00\u7684\u65f6\u5019\u521d\u59cb\u5316\u4e00\u4e2a\u5b9a\u65f6\u5668\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u5185\u6838\u5b9a\u65f6\u5668\u94fe\u8868\u4e2d\uff0c\u6bcf\u79d2\u8f93\u51fa\u4e00\u6b21\u5f53\u524d\u7684jiffies\uff08\u4e3a\u6b64\uff0c\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u4e2d\u6bcf\u6b21\u90fd\u8981\u4fee\u6539\u65b0\u7684expires\uff09\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5982\u4ee3\u7801\u6e05\u535510.13\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.13\u3000\u4f7f\u7528\u5185\u6838\u5b9a\u65f6\u5668\u7684second\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n```\\r\\n  1#include <linux/module.h>\\r\\n  2#include <linux/fs.h>\\r\\n  3#include <linux/mm.h>\\r\\n  4#include <linux/init.h>\\r\\n  5#include <linux/cdev.h>\\r\\n  6#include <linux/slab.h>\\r\\n  7#include <linux/uaccess.h>\\r\\n  8\\r\\n  9#define SECOND_MAJOR 248\\r\\n 10\\r\\n 11static int second_major = SECOND_MAJOR;\\r\\n 12module_param(second_major, int, S_IRUGO);\\r\\n 13\\r\\n 14struct second_dev {\\r\\n 15    struct cdev cdev;\\r\\n 16    atomic_t counter;\\r\\n 17    struct timer_list s_timer;\\r\\n 18};\\r\\n 19\\r\\n 20static struct second_dev *second_devp;\\r\\n 21\\r\\n 22static void second_timer_handler(unsigned long arg)\\r\\n 23{\\r\\n 24 mod_timer(&second_devp->s_timer, jiffies + HZ);  /* \u89e6\u53d1\u4e0b\u4e00\u6b21\u5b9a\u65f6*/\\r\\n 25 atomic_inc(&second_devp->counter);               /* \u589e\u52a0\u79d2\u8ba1\u6570*/\\r\\n 26\\r\\n 27 printk(KERN_INFO \\"current jiffies is %ld\\\\n\\", jiffies);\\r\\n 28}\\r\\n 29\\r\\n 30static int second_open(struct inode *inode, struct file *filp)\\r\\n 31{\\r\\n 32 init_timer(&second_devp->s_timer);\\r\\n 33 second_devp->s_timer.function = &second_timer_handler;\\r\\n 34 second_devp->s_timer.expires = jiffies + HZ;\\r\\n 35\\r\\n 36 add_timer(&second_devp->s_timer);\\r\\n 37\\r\\n 38 atomic_set(&second_devp->counter, 0);            /* \u521d\u59cb\u5316\u79d2\u8ba1\u6570\u4e3a0 */\\r\\n 39\\r\\n 40 return 0;\\r\\n 41}\\r\\n 42\\r\\n 43static int second_release(struct inode *inode, struct file *filp)\\r\\n 44{\\r\\n 45 del_timer(&second_devp->s_timer);\\r\\n 46\\r\\n 47 return 0;\\r\\n 48}\\r\\n 49\\r\\n 50static ssize_t second_read(struct file *filp, char __user * buf, size_t count,\\r\\n 51 loff_t * ppos)\\r\\n 52{\\r\\n 53 int counter;\\r\\n 54\\r\\n 55 counter = atomic_read(&second_devp->counter);\\r\\n 56 if (put_user(counter, (int *)buf))/* \u590d\u5236counter\u5230userspace */\\r\\n 57     return -EFAULT;\\r\\n 58 else\\r\\n 59   return sizeof(unsigned int);\\r\\n 60}\\r\\n 61\\r\\n 62static const struct file_operations second_fops = {\\r\\n 63 .owner = THIS_MODULE,\\r\\n 64 .open = second_open,\\r\\n 65 .release = second_release,\\r\\n 66 .read = second_read,\\r\\n 67};\\r\\n 68\\r\\n 69static void second_setup_cdev(struct second_dev *dev, int index)\\r\\n 70{\\r\\n 71 int err, devno = MKDEV(second_major, index);\\r\\n 72\\r\\n 73 cdev_init(&dev->cdev, &second_fops);\\r\\n 74 dev->cdev.owner = THIS_MODULE;\\r\\n 75 err = cdev_add(&dev->cdev, devno, 1);\\r\\n 76 if (err)\\r\\n 77     printk(KERN_ERR \\"Failed to add second device\\\\n\\");\\r\\n 78}\\r\\n 79\\r\\n 80static int __init second_init(void)\\r\\n 81{\\r\\n 82 int ret;\\r\\n 83 dev_t devno = MKDEV(second_major, 0);\\r\\n 84\\r\\n 85 if (second_major)\\r\\n 86     ret = register_chrdev_region(devno, 1, \\"second\\");\\r\\n 87 else {\\r\\n 88     ret = alloc_chrdev_region(&devno, 0, 1, \\"second\\");\\r\\n 89     second_major = MAJOR(devno);\\r\\n 90 }\\r\\n 91 if (ret < 0)\\r\\n 92     return ret;\\r\\n 93\\r\\n 94 second_devp = kzalloc(sizeof(*second_devp), GFP_KERNEL);\\r\\n 95 if (!second_devp) {\\r\\n 96     ret = -ENOMEM;\\r\\n 97     goto fail_malloc;\\r\\n 98 }\\r\\n 99\\r\\n100 second_setup_cdev(second_devp, 0);\\r\\n101\\r\\n102 return 0;\\r\\n103\\r\\n104fail_malloc:\\r\\n105 unregister_chrdev_region(devno, 1);\\r\\n106 return ret;\\r\\n107}\\r\\n108module_init(second_init);\\r\\n109\\r\\n110static void __exit second_exit(void)\\r\\n111{\\r\\n112 cdev_del(&second_devp->cdev);\\r\\n113 kfree(second_devp);\\r\\n114 unregister_chrdev_region(MKDEV(second_major, 0), 1);\\r\\n115}\\r\\n116module_exit(second_exit);\\r\\n117\\r\\n118MODULE_AUTHOR(\\"Barry Song <21cnbao@gmail.com>\\");\\r\\n119MODULE_LICENSE(\\"GPL v2\\");\\r\\n```\\r\\n\\r\\n\u5728second\u7684open\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u5c06\u542f\u52a8\u5b9a\u65f6\u5668\uff0c\u6b64\u540e\u6bcf1s\u4f1a\u518d\u6b21\u8fd0\u884c\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\uff0c\u5728second\u7684release\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u5b9a\u65f6\u5668\u88ab\u5220\u9664\u3002\\r\\n\\r\\nsecond_dev\u7ed3\u6784\u4f53\u4e2d\u7684\u539f\u5b50\u53d8\u91cfcounter\u7528\u4e8e\u79d2\u8ba1\u6570\uff0c\u6bcf\u6b21\u5728\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u4e2d\u8c03\u7528\u7684atomic_inc\uff08\uff09\u4f1a\u4ee4\u5176\u539f\u5b50\u6027\u5730\u589e1\uff0csecond\u7684read\uff08\uff09\u51fd\u6570\u4f1a\u5c06\u8fd9\u4e2a\u503c\u8fd4\u56de\u7ed9\u7528\u6237\u7a7a\u95f4\u3002\\r\\n\\r\\n\u672c\u4e66\u914d\u5957\u7684Ubuntu\u4e2d/home/baohua/develop/training/kernel/drivers/second/\u5305\u542b\u4e86second\u8bbe\u5907\u9a71\u52a8\u4ee5\u53casecond_test.c\u7528\u6237\u7a7a\u95f4\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u8fd0\u884cmake\u547d\u4ee4\u7f16\u8bd1\u5f97\u5230second.ko\u548csecond_test\uff0c\u52a0\u8f7dsecond.ko\u5185\u6838\u6a21\u5757\u5e76\u521b\u5efa/dev/second\u8bbe\u5907\u6587\u4ef6\u8282\u70b9\uff1a\\r\\n\\r\\n```\\r\\n# mknod /dev/second c 248 0\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.14\u7ed9\u51fa\u4e86second_test.c\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5b83\u6253\u5f00/dev/second\uff0c\u5176\u540e\u4e0d\u65ad\u5730\u8bfb\u53d6\u81ea/dev/second\u8bbe\u5907\u6587\u4ef6\u6253\u5f00\u4ee5\u540e\u7ecf\u5386\u7684\u79d2\u6570\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.14\u3000second\u8bbe\u5907\u7528\u6237\u7a7a\u95f4\u6d4b\u8bd5\u7a0b\u5e8f\\r\\n\\r\\n```\\r\\n 1#include ...\\r\\n 2\\r\\n 3main()\\r\\n 4{\\r\\n 5  int fd;\\r\\n 6  int counter = 0;\\r\\n 7  int old_counter = 0;\\r\\n 8\\r\\n 9  /* \u6253\u5f00/dev/second\u8bbe\u5907\u6587\u4ef6*/\\r\\n10  fd = open(\\"/dev/second\\", O_RDONLY);\\r\\n11  if (fd != - 1) {\\r\\n13      while (1) {\\r\\n15         read(fd,&counter, sizeof(unsigned int));/* \u8bfb\u76ee\u524d\u7ecf\u5386\u7684\u79d2\u6570*/\\r\\n16         if(counter!=old_counter) {\\r\\n18            printf(\\"seconds after open /dev/second :%d\\\\n\\",counter);\\r\\n19               old_counter = counter;\\r\\n20          }\\r\\n21      }\\r\\n22  } else {\\r\\n25      printf(\\"Device open failure\\\\n\\");\\r\\n26  }\\r\\n27}\\r\\n```\\r\\n\\r\\n\u8fd0\u884csecond_test\u540e\uff0c\u5185\u6838\u5c06\u4e0d\u65ad\u5730\u8f93\u51fa\u76ee\u524d\u7684jiffies\u503c\\r\\n\\r\\n```\\r\\n[13935.122093] current jiffies is 13635122\\r\\n[13936.124441] current jiffies is 13636124\\r\\n[13937.126078] current jiffies is 13637126\\r\\n[13952.832648] current jiffies is 13652832\\r\\n[13953.834078] current jiffies is 13653834\\r\\n[13954.836090] current jiffies is 13654836\\r\\n[13955.838389] current jiffies is 13655838\\r\\n[13956.840453] current jiffies is 13656840\\r\\n...\\r\\n```\\r\\n\\r\\n\u4ece\u4e0a\u8ff0\u5185\u6838\u7684\u6253\u5370\u6d88\u606f\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u672c\u4e66\u914d\u5957Ubuntu\u4e0a\u7684\u6bcf\u79d2jiffies\u5927\u6982\u8d701000\u6b21\u3002\u800c\u5e94\u7528\u7a0b\u5e8f\u5c06\u4e0d\u65ad\u8f93\u51fa\u81ea/dec/second\u6253\u5f00\u4ee5\u540e\u7ecf\u5386\u7684\u79d2\u6570\uff1a\\r\\n\\r\\n```\\r\\n# ./second_test\\r\\nseconds after open /dev/second :1\\r\\nseconds after open /dev/second :2\\r\\nseconds after open /dev/second :3\\r\\nseconds after open /dev/second :4\\r\\nseconds after open /dev/second :5\\r\\n...\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3","description":"Linux\u5185\u6838\u7684PM\u6846\u67b6\u6d89\u53ca\u4f17\u591a\u7ec4\u4ef6\uff0c\u5f04\u6e05\u695a\u8fd9\u4e9b\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5728\u5408\u9002\u7684\u7740\u773c\u70b9\u4e0a\u8fdb\u884c\u4f18\u5316\uff0c\u91c7\u7528\u6b63\u786e\u7684\u65b9\u6cd5\u8fdb\u884cPM\u7684\u7f16\u7a0b\uff0c\u5bf9\u6539\u5584\u4ee3\u7801\u7684\u8d28\u91cf\u3001\u8f85\u52a9\u529f\u8017\u548c\u6027\u80fd\u6d4b\u8bd5\u90fd\u6709\u6781\u5927\u7684\u597d\u5904\u3002","date":"2025-09-15T14:44:14.481Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.81,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"10.5.1\u3000\u5185\u6838\u5b9a\u65f6\u5668\u7f16\u7a0b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.5\u3000\u5185\u6838\u5b9a\u65f6\u5668"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8"}},"content":"Linux\u5185\u6838\u7684PM\u6846\u67b6\u6d89\u53ca\u4f17\u591a\u7ec4\u4ef6\uff0c\u5f04\u6e05\u695a\u8fd9\u4e9b\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5728\u5408\u9002\u7684\u7740\u773c\u70b9\u4e0a\u8fdb\u884c\u4f18\u5316\uff0c\u91c7\u7528\u6b63\u786e\u7684\u65b9\u6cd5\u8fdb\u884cPM\u7684\u7f16\u7a0b\uff0c\u5bf9\u6539\u5584\u4ee3\u7801\u7684\u8d28\u91cf\u3001\u8f85\u52a9\u529f\u8017\u548c\u6027\u80fd\u6d4b\u8bd5\u90fd\u6709\u6781\u5927\u7684\u597d\u5904\u3002\\r\\n\\r\\n\u53e6\u5916\uff0c\u5728\u5b9e\u9645\u5de5\u7a0b\u4e2d\uff0c\u5c24\u5176\u662f\u5728\u6d88\u8d39\u7535\u5b50\u7684\u9886\u57df\uff0c\u53ef\u80fd\u6709\u8d85\u8fc7\u534a\u6570\u7684bug\u90fd\u5c5e\u4e8e\u7535\u6e90\u7ba1\u7406\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u7535\u6e90\u7ba1\u7406\u7684\u5f88\u591a\u5de5\u4f5c\u5c31\u662f\u5728\u641e\u5b9a\u9c81\u68d2\u6027\u548c\u5065\u58ee\u6027\uff0c\u53ef\u4ee5\u8bf4\uff0c\u5728\u5f88\u591a\u65f6\u5019\uff0c\u8fd9\u5c31\u662f\u4e2a\u4f53\u529b\u6d3b\uff0c\u9700\u8981\u5de5\u7a0b\u5e08\u6709\u8db3\u591f\u7684\u8010\u6027\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8","description":"\u5728globalmem\uff08\uff09\u7684\u8bfb\u5199\u51fd\u6570\u4e2d\uff0c\u7531\u4e8e\u8981\u8c03\u7528copyfromuser\uff08\uff09\u3001copytouser\uff08\uff09\u8fd9\u4e9b\u53ef\u80fd\u5bfc\u81f4\u963b\u585e\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528\u81ea\u65cb\u9501\uff0c\u5b9c\u4f7f\u7528\u4e92\u65a5\u4f53\u3002","date":"2025-09-15T14:44:14.481Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.975,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.11\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8"}},"content":"\u5728globalmem\uff08\uff09\u7684\u8bfb\u5199\u51fd\u6570\u4e2d\uff0c\u7531\u4e8e\u8981\u8c03\u7528copy_from_user\uff08\uff09\u3001copy_to_user\uff08\uff09\u8fd9\u4e9b\u53ef\u80fd\u5bfc\u81f4\u963b\u585e\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528\u81ea\u65cb\u9501\uff0c\u5b9c\u4f7f\u7528\u4e92\u65a5\u4f53\u3002\\r\\n\\r\\n\u9a71\u52a8\u5de5\u7a0b\u5e08\u4e60\u60ef\u5c06\u67d0\u8bbe\u5907\u6240\u4f7f\u7528\u7684\u81ea\u65cb\u9501\u3001\u4e92\u65a5\u4f53\u7b49\u8f85\u52a9\u624b\u6bb5\u4e5f\u653e\u5728\u8bbe\u5907\u7ed3\u6784\u4e2d\uff0c\u56e0\u6b64\uff0c\u53ef\u5982\u4ee3\u7801\u6e05\u53557.4\u90a3\u6837\u4fee\u6539globalmem_dev\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\uff0c\u5e76\u5728\u6a21\u5757\u521d\u59cb\u5316\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u8fd9\u4e2a\u4fe1\u53f7\u91cf\uff0c\u5982\u4ee3\u7801\u6e05\u53557.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53557.4\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u8bbe\u5907\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct globalmem_dev {\\r\\n 2      struct cdev cdev;\\r\\n 3      unsigned char mem[GLOBALMEM_SIZE];\\r\\n 4      struct mutex mutex;\\r\\n 5};\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53557.5\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int __init globalmem_init(void)\\r\\n 2{\\r\\n 3  int ret;\\r\\n 4  dev_t devno = MKDEV(globalmem_major, 0);\\r\\n 5\\r\\n 6  if (globalmem_major)\\r\\n 7       ret = register_chrdev_region(devno, 1, \\"globalmem\\");\\r\\n 8  else {\\r\\n 9       ret = alloc_chrdev_region(&devno, 0, 1, \\"globalmem\\");\\r\\n10       globalmem_major = MAJOR(devno);\\r\\n11  }\\r\\n12  if (ret < 0)\\r\\n13       return ret;\\r\\n14\\r\\n15  globalmem_devp = kzalloc(sizeof(struct globalmem_dev), GFP_KERNEL);\\r\\n16  if (!globalmem_devp) {\\r\\n17       ret = -ENOMEM;\\r\\n18       goto fail_malloc;\\r\\n19  }\\r\\n20\\r\\n21  mutex_init(&globalmem_devp->mutex);\\r\\n22  globalmem_setup_cdev(globalmem_devp, 0);\\r\\n23  return 0;\\r\\n24\\r\\n25 fail_malloc:\\r\\n26  unregister_chrdev_region(devno, 1);\\r\\n27  return ret;\\r\\n28}\\r\\n29module_init(globalmem_init);\\r\\n```\\r\\n\\r\\n\u5728\u8bbf\u95eeglobalmem_dev\u4e2d\u7684\u5171\u4eab\u8d44\u6e90\u65f6\uff0c\u9700\u5148\u83b7\u53d6\u8fd9\u4e2a\u4e92\u65a5\u4f53\uff0c\u8bbf\u95ee\u5b8c\u6210\u540e\uff0c\u968f\u5373\u91ca\u653e\u8fd9\u4e2a\u4e92\u65a5\u4f53\u3002\u9a71\u52a8\u4e2d\u65b0\u7684globalmem\u8bfb\u3001\u5199\u64cd\u4f5c\u5982\u4ee3\u7801\u6e05\u53557.6\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53557.6\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u8bfb\u3001\u5199\u64cd\u4f5c\\r\\n\\r\\n```\\r\\n 1static ssize_t globalmem_read(struct file *filp, char __user * buf, size_t size,\\r\\n 2              loff_t * ppos)\\r\\n 3{\\r\\n 4 unsigned long p = *ppos;\\r\\n 5 unsigned int count = size;\\r\\n 6 int ret = 0;\\r\\n 7 struct globalmem_dev *dev = filp->private_data;\\r\\n 8\\r\\n 9 if (p >= GLOBALMEM_SIZE)\\r\\n10      return 0;\\r\\n11 if (count > GLOBALMEM_SIZE - p)\\r\\n12      count = GLOBALMEM_SIZE - p;\\r\\n13\\r\\n14 mutex_lock(&dev->mutex);\\r\\n15\\r\\n16 if (copy_to_user(buf, dev->mem + p, count)) {\\r\\n17      ret = -EFAULT;\\r\\n18 } else {\\r\\n19      *ppos += count;\\r\\n20      ret = count;\\r\\n21\\r\\n22      printk(KERN_INFO \\"read %u bytes(s) from %lu\\\\n\\", count, p);\\r\\n23 }\\r\\n24\\r\\n25 mutex_unlock(&dev->mutex);\\r\\n26\\r\\n27 return ret;\\r\\n28}\\r\\n29\\r\\n30static ssize_t globalmem_write(struct file *filp, const char __user * buf,\\r\\n31                size_t size, loff_t * ppos)\\r\\n32{\\r\\n33 unsigned long p = *ppos;\\r\\n34 unsigned int count = size;\\r\\n35 int ret = 0;\\r\\n36 struct globalmem_dev *dev = filp->private_data;\\r\\n37\\r\\n38 if (p >= GLOBALMEM_SIZE)\\r\\n39      return 0;\\r\\n40 if (count > GLOBALMEM_SIZE - p)\\r\\n41      count = GLOBALMEM_SIZE - p;\\r\\n42\\r\\n43 mutex_lock(&dev->mutex);\\r\\n44\\r\\n45 if (copy_from_user(dev->mem + p, buf, count))\\r\\n46      ret = -EFAULT;\\r\\n47 else {\\r\\n48      *ppos += count;\\r\\n49      ret = count;\\r\\n50\\r\\n51      printk(KERN_INFO \\"written %u bytes(s) from %lu\\\\n\\", count, p);\\r\\n52 }\\r\\n53\\r\\n54 mutex_unlock(&dev->mutex);\\r\\n55\\r\\n56 return ret;\\r\\n57}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u7b2c14\u884c\u548c\u7b2c43\u884c\u7528\u4e8e\u83b7\u53d6\u4e92\u65a5\u4f53\uff0c\u4ee3\u7801\u7b2c25\u548c54\u884c\u7528\u4e8e\u5728\u5bf9\u4e34\u754c\u8d44\u6e90\u8bbf\u95ee\u7ed3\u675f\u540e\u91ca\u653e\u4fe1\u53f7\u91cf\u3002\\r\\n\\r\\n\u9664\u4e86globalmem\u7684\u8bfb\u3001\u5199\u64cd\u4f5c\u4e4b\u5916\uff0c\u5982\u679c\u5728\u8bfb\u3001\u5199\u7684\u540c\u65f6\uff0c\u53e6\u4e00\u4e2a\u6267\u884c\u5355\u5143\u6267\u884cMEM_CLEAR IO\u63a7\u5236\u547d\u4ee4\uff0c\u4e5f\u4f1a\u5bfc\u81f4\u5168\u5c40\u5185\u5b58\u7684\u6df7\u4e71\uff0c\u56e0\u6b64\uff0cglobalmem_ioctl\uff08\uff09\u51fd\u6570\u4e5f\u9700\u88ab\u91cd\u5199\uff0c\u5982\u4ee3\u7801\u6e05\u53557.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53557.7\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u8bbe\u5907\u9a71\u52a8ioctl\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static long globalmem_ioctl(struct file *filp, unsigned int cmd,\\r\\n 2             unsigned long arg)\\r\\n 3{\\r\\n 4 struct globalmem_dev *dev = filp->private_data;   /*   \u03bc\\r\\n\\r\\n\\r\\n \xe9\xe8\xb1  \xe111\xec      */\\r\\n 5\\r\\n 6 switch (cmd) {\\r\\n 7 case MEM_CLEAR:\\r\\n 8     mutex_lock(&dev->mutex);\\r\\n 9     memset(dev->mem, 0, GLOBALMEM_SIZE);\\r\\n10     mutex_unlock(&dev->mutex);\\r\\n11\\r\\n12     printk(KERN_INFO \\"globalmem is set to zero\\\\n\\");\\r\\n13     break;\\r\\n14\\r\\n15 default:\\r\\n16     return -EINVAL;\\r\\n17 }\\r\\n18\\r\\n19 return 0;\\r\\n20}\\r\\n```\\r\\n\\r\\n\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540eglobalmem\u7684\u5b8c\u6574\u9a71\u52a8\u4f4d\u4e8e\u672c\u4e66\u865a\u62df\u673a\u7684\u4f8b\u5b50/kernel/drivers/globalmem/ch7\u76ee\u5f55\u4e0b\uff0c\u5176\u4f7f\u7528\u65b9\u6cd5\u4e0e\u7b2c6\u7ae0globalmem\u9a71\u52a8\u5728\u7528\u6237\u7a7a\u95f4\u7684\u9a8c\u8bc1\u4e00\u81f4\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","description":"\u57281.2\u8282\u4e2d\u6211\u4eec\u770b\u5230\u4e00\u4e2a\u6e05\u6670\u7684\u8bbe\u5907\u9a71\u52a8\uff0c\u5b83\u76f4\u63a5\u8fd0\u884c\u5728\u786c\u4ef6\u4e4b\u4e0a\uff0c\u4e0d\u4e0e\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u5173\u8054\u3002\u5f53\u7cfb\u7edf\u5305\u542b\u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u8bbe\u5907\u9a71\u52a8\u4f1a\u53d8\u5f97\u600e\u6837\u5462\uff1f","date":"2025-09-15T14:44:14.461Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.225,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.9\u3000\u589e\u52a0\u5e76\u53d1\u63a7\u5236\u540e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8"}},"content":"\u57281.2\u8282\u4e2d\u6211\u4eec\u770b\u5230\u4e00\u4e2a\u6e05\u6670\u7684\u8bbe\u5907\u9a71\u52a8\uff0c\u5b83\u76f4\u63a5\u8fd0\u884c\u5728\u786c\u4ef6\u4e4b\u4e0a\uff0c\u4e0d\u4e0e\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u5173\u8054\u3002\u5f53\u7cfb\u7edf\u5305\u542b\u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u8bbe\u5907\u9a71\u52a8\u4f1a\u53d8\u5f97\u600e\u6837\u5462\uff1f\\r\\n\\r\\n\u9996\u5148\uff0c\u65e0\u64cd\u4f5c\u7cfb\u7edf\u65f6\u8bbe\u5907\u9a71\u52a8\u7684\u786c\u4ef6\u64cd\u4f5c\u5de5\u4f5c\u4ecd\u7136\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u6ca1\u6709\u8fd9\u4e00\u90e8\u5206\uff0c\u9a71\u52a8\u4e0d\u53ef\u80fd\u4e0e\u786c\u4ef6\u6253\u4ea4\u9053\u3002\\r\\n\\r\\n\u5176\u6b21\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u9a71\u52a8\u878d\u5165\u5185\u6838\u3002\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u878d\u5408\uff0c\u5fc5\u987b\u5728\u6240\u6709\u8bbe\u5907\u7684\u9a71\u52a8\u4e2d\u8bbe\u8ba1\u9762\u5411\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u7684\u63a5\u53e3\u7531\u64cd\u4f5c\u7cfb\u7edf\u89c4\u5b9a\uff0c\u5bf9\u4e00\u7c7b\u8bbe\u5907\u800c\u8a00\u7ed3\u6784\u4e00\u81f4\uff0c\u72ec\u7acb\u4e8e\u5177\u4f53\u7684\u8bbe\u5907\u3002\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0c\u5f53\u7cfb\u7edf\u4e2d\u5b58\u5728\u64cd\u4f5c\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u9a71\u52a8\u53d8\u6210\u4e86\u8fde\u63a5\u786c\u4ef6\u548c\u5185\u6838\u7684\u6865\u6881\u3002\u5982\u56fe1.4\u6240\u793a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b58\u5728\u52bf\u5fc5\u8981\u6c42\u8bbe\u5907\u9a71\u52a8\u9644\u52a0\u66f4\u591a\u7684\u4ee3\u7801\u548c\u529f\u80fd\uff0c\u628a\u5355\u4e00\u7684\u201c\u9a71\u4f7f\u786c\u4ef6\u8bbe\u5907\u884c\u52a8\u201d\u53d8\u6210\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5185\u4e0e\u786c\u4ef6\u4ea4\u4e92\u7684\u6a21\u5757\uff0c\u5b83\u5bf9\u5916\u5448\u73b0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684API\uff0c\u4e0d\u518d\u7ed9\u5e94\u7528\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u76f4\u63a5\u63d0\u4f9b\u63a5\u53e3\\r\\n\\r\\n![1742482249305](./figure/1742482249305.png)\\r\\n\\r\\n\u56fe1.4\u3000\u786c\u4ef6\u3001\u9a71\u52a8\u3001\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u5173\u7cfb\\r\\n\\r\\n\u90a3\u4e48\u6211\u4eec\u8981\u95ee\uff0c\u6709\u4e86\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u540e\uff0c\u9a71\u52a8\u53cd\u800c\u53d8\u5f97\u590d\u6742\uff0c\u90a3\u8981\u64cd\u4f5c\u7cfb\u7edf\u5e72\u4ec0\u4e48\uff1f\\r\\n\\r\\n\u9996\u5148\uff0c\u4e00\u4e2a\u590d\u6742\u7684\u8f6f\u4ef6\u7cfb\u7edf\u9700\u8981\u5904\u7406\u591a\u4e2a\u5e76\u53d1\u7684\u4efb\u52a1\uff0c\u6ca1\u6709\u64cd\u4f5c\u7cfb\u7edf\uff0c\u60f3\u5b8c\u6210\u591a\u4efb\u52a1\u5e76\u53d1\u662f\u5f88\u56f0\u96be\u7684\u3002\\r\\n\\r\\n\u5176\u6b21\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ed9\u6211\u4eec\u63d0\u4f9b\u5185\u5b58\u7ba1\u7406\u673a\u5236\u3002\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u662f\uff0c\u5bf9\u4e8e\u591a\u6570\u542bMMU\u768432\u4f4d\u5904\u7406\u5668\u800c\u8a00\uff0cWindows\u3001Linux\u7b49\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u72ec\u7acb\u5730\u8bbf\u95ee4GB\u7684\u5185\u5b58\u7a7a\u95f4\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u4f18\u70b9\u4f3c\u4e4e\u5e76\u6ca1\u6709\u4f53\u73b0\u5728\u8bbe\u5907\u9a71\u52a8\u8eab\u4e0a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b58\u5728\u7ed9\u8bbe\u5907\u9a71\u52a8\u7a76\u7adf\u5e26\u6765\u4e86\u4ec0\u4e48\u5b9e\u8d28\u6027\u7684\u597d\u5904\uff1f\\r\\n\\r\\n\u7b80\u800c\u8a00\u4e4b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u7ed9\u9a71\u52a8\u5236\u9020\u9ebb\u70e6\u6765\u8fbe\u5230\u7ed9\u4e0a\u5c42\u5e94\u7528\u63d0\u4f9b\u4fbf\u5229\u7684\u76ee\u7684\u3002\u5f53\u9a71\u52a8\u90fd\u6309\u7167\u64cd\u4f5c\u7cfb\u7edf\u7ed9\u51fa\u7684\u72ec\u7acb\u4e8e\u8bbe\u5907\u7684\u63a5\u53e3\u800c\u8bbe\u8ba1\u65f6\uff0c\u90a3\u4e48\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u53ef\u4f7f\u7528\u7edf\u4e00\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u6765\u8bbf\u95ee\u5404\u79cd\u8bbe\u5907\u3002\u5bf9\u4e8e\u7c7bUNIX\u7684VxWorks\u3001Linux\u7b49\u64cd\u4f5c\u7cfb\u7edf\u800c\u8a00\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7write\uff08\uff09\u3001read\uff08\uff09\u7b49\u51fd\u6570\u8bfb\u5199\u6587\u4ef6\u5c31\u53ef\u8bbf\u95ee\u5404\u79cd\u5b57\u7b26\u8bbe\u5907\u548c\u5757\u8bbe\u5907\uff0c\u800c\u4e0d\u8bba\u8bbe\u5907\u7684\u5177\u4f53\u7c7b\u578b\u548c\u5de5\u4f5c\u65b9\u5f0f\uff0c\u90a3\u5c06\u662f\u591a\u4e48\u4fbf\u5229\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8","description":"\u8bb8\u591aSoC\u5185\u90e8\u90fd\u5305\u542bpin\u63a7\u5236\u5668\uff0c\u901a\u8fc7pin\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u6216\u8005\u4e00\u7ec4\u5f15\u811a\u7684\u529f\u80fd\u548c\u7279\u6027\u3002\u5728\u8f6f\u4ef6\u4e0a\uff0cLinux\u5185\u6838\u7684pinctrl\u9a71\u52a8\u53ef\u4ee5\u64cd\u4f5cpin\u63a7\u5236\u5668\u4e3a\u6211\u4eec\u5b8c\u6210\u5982\u4e0b\u5de5\u4f5c\uff1a","date":"2025-09-15T14:44:14.441Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":16.265,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.3\u3000\u6709\u64cd\u4f5c\u7cfb\u7edf\u65f6\u7684\u8bbe\u5907\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001"}},"content":"\u8bb8\u591aSoC\u5185\u90e8\u90fd\u5305\u542bpin\u63a7\u5236\u5668\uff0c\u901a\u8fc7pin\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u6216\u8005\u4e00\u7ec4\u5f15\u811a\u7684\u529f\u80fd\u548c\u7279\u6027\u3002\u5728\u8f6f\u4ef6\u4e0a\uff0cLinux\u5185\u6838\u7684pinctrl\u9a71\u52a8\u53ef\u4ee5\u64cd\u4f5cpin\u63a7\u5236\u5668\u4e3a\u6211\u4eec\u5b8c\u6210\u5982\u4e0b\u5de5\u4f5c\uff1a\\r\\n\\r\\n- \xb7\u679a\u4e3e\u5e76\u4e14\u547d\u540dpin\u63a7\u5236\u5668\u53ef\u63a7\u5236\u7684\u6240\u6709\u5f15\u811a\uff1b\\r\\n- \xb7\u63d0\u4f9b\u5f15\u811a\u590d\u7528\u7684\u80fd\u529b\uff1b\\r\\n- \xb7\u63d0\u4f9b\u914d\u7f6e\u5f15\u811a\u7684\u80fd\u529b\uff0c\u5982\u9a71\u52a8\u80fd\u529b\u3001\u4e0a\u62c9\u4e0b\u62c9\u3001\u5f00\u6f0f\uff08Open Drain\uff09\u7b49\u3002\\r\\n\\r\\n# 1.pinctrl\u548c\u5f15\u811a\\r\\n\\r\\n\u5728\u7279\u5b9aSoC\u7684pinctrl\u9a71\u52a8\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u5f15\u811a\u3002\u5047\u8bbe\u6709\u4e00\u4e2aPGA\u5c01\u88c5\u7684\u82af\u7247\u7684\u5f15\u811a\u6392\u5e03\u5982\u56fe20.9\u6240\u793a\u3002\\r\\n\\r\\n![1747320833402](./figure/1747320833402.png)\\r\\n\\r\\n\u56fe20.9\u3000\u4e00\u4e2aPGA\u5c01\u88c5\u7684\u82af\u7247\u7684\u5f15\u811a\u6392\u5e03\\r\\n\\r\\n\u5728pinctrl\u9a71\u52a8\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u9700\u8981\u5411pinctrl\u5b50\u7cfb\u7edf\u6ce8\u518c\u4e00\u4e2apinctrl_desc\u63cf\u8ff0\u7b26\uff0c\u8be5\u63cf\u8ff0\u7b26\u7684pins\u6210\u5458\u4e2d\u5305\u542b\u6240\u6709\u5f15\u811a\u7684\u5217\u8868\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u6e05\u535520.16\u7684\u65b9\u6cd5\u6765\u6ce8\u518c\u8fd9\u4e2apin\u63a7\u5236\u5668\u5e76\u547d\u540d\u5b83\u7684\u6240\u6709\u5f15\u811a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.16\u3000pinctrl\u5f15\u811a\u63cf\u8ff0\\r\\n\\r\\n```\\r\\n 1#include <linux/pinctrl/pinctrl.h>\\r\\n 2\\r\\n 3const struct pinctrl_pin_desc foo_pins[] = {\\r\\n 4      PINCTRL_PIN(0, \\"A8\\"),\\r\\n 5      PINCTRL_PIN(1, \\"B8\\"),\\r\\n 6      PINCTRL_PIN(2, \\"C8\\"),\\r\\n 7      ...\\r\\n 8      PINCTRL_PIN(61, \\"F1\\"),\\r\\n 9      PINCTRL_PIN(62, \\"G1\\"),\\r\\n10      PINCTRL_PIN(63, \\"H1\\"),\\r\\n11};\\r\\n12\\r\\n13static struct pinctrl_desc foo_desc = {\\r\\n14        .name = \\"foo\\",\\r\\n15        .pins = foo_pins,\\r\\n16        .npins = ARRAY_SIZE(foo_pins),\\r\\n17        .maxpin = 63,\\r\\n18        .owner = THIS_MODULE,\\r\\n19};\\r\\n20\\r\\n21int __init foo_probe(void)\\r\\n22{\\r\\n23        struct pinctrl_dev *pctl;\\r\\n24\\r\\n25        pctl = pinctrl_register(&foo_desc, <PARENT>, NULL);\\r\\n26        if (IS_ERR(pctl))\\r\\n27                pr_err(\\"could not register foo pin driver\\\\n\\");\\r\\n28}\\r\\n```\\r\\n\\r\\n# 2.\u5f15\u811a\u7ec4\uff08Pin Group\uff09\\r\\n\\r\\n\u5728pinctrl\u5b50\u7cfb\u7edf\u4e2d\uff0c\u652f\u6301\u5c06\u4e00\u7ec4\u5f15\u811a\u7ed1\u5b9a\u4e3a\u540c\u4e00\u529f\u80fd\u3002\u5047\u8bbe{0\uff0c8\uff0c16\uff0c24}\u8fd9\u4e00\u7ec4\u5f15\u811a\u627f\u62c5SPI\u7684\u529f\u80fd\uff0c\u800c{24\uff0c25}\u8fd9\u4e00\u7ec4\u5f15\u811a\u627f\u62c5I2 C\u63a5\u53e3\u529f\u80fd\u3002\u5728\u9a71\u52a8\u7684\u4ee3\u7801\u4e2d\uff0c\u9700\u8981\u4f53\u73b0\u8fd9\u4e2a\u5206\u7ec4\u5173\u7cfb\uff0c\u5e76\u4e14\u4e3a\u8fd9\u4e9b\u5206\u7ec4\u5b9e\u73b0pinctrl_ops\u7684\u6210\u5458\u51fd\u6570get_groups_count\uff08\uff09\u3001get_group_name\uff08\uff09\u548cget_group_pins\uff08\uff09\uff0c\u5c06pinctrl_ops\u586b\u5145\u5230\u524d\u6587pinctrl_desc\u7684\u5b9e\u4f8bfoo_desc\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535520.17\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.17\u3000pinctrl\u9a71\u52a8\u5bf9\u5f15\u811a\u5206\u7ec4\\r\\n\\r\\n```\\r\\n 1#include <linux/pinctrl/pinctrl.h>\\r\\n 2\\r\\n 3struct foo_group {\\r\\n 4        const char *name;\\r\\n 5        const unsigned int *pins;\\r\\n 6        const unsigned num_pins;\\r\\n 7};\\r\\n 8\\r\\n 9static const unsigned int spi0_pins[] = { 0, 8, 16, 24 };\\r\\n10static const unsigned int i2c0_pins[] = { 24, 25 };\\r\\n11\\r\\n12static const struct foo_group foo_groups[] = {\\r\\n13        {\\r\\n14                .name = \\"spi0_grp\\",\\r\\n15                .pins = spi0_pins,\\r\\n16                .num_pins = ARRAY_SIZE(spi0_pins),\\r\\n17        },\\r\\n18        {\\r\\n19                .name = \\"i2c0_grp\\",\\r\\n20                .pins = i2c0_pins,\\r\\n21                .num_pins = ARRAY_SIZE(i2c0_pins),\\r\\n22        },\\r\\n23};\\r\\n24\\r\\n25\\r\\n26static int foo_get_groups_count(struct pinctrl_dev *pctldev)\\r\\n27{\\r\\n28        return ARRAY_SIZE(foo_groups);\\r\\n29}\\r\\n30\\r\\n31static const char *foo_get_group_name(struct pinctrl_dev *pctldev,\\r\\n32                                       unsigned selector)\\r\\n33{\\r\\n34        return foo_groups[selector].name;\\r\\n35}\\r\\n36\\r\\n37static int foo_get_group_pins(struct pinctrl_dev *pctldev, unsigned selector,\\r\\n38                              unsigned ** const pins,\\r\\n39                              unsigned * const num_pins)\\r\\n40{\\r\\n41        *pins = (unsigned *) foo_groups[selector].pins;\\r\\n42        *num_pins = foo_groups[selector].num_pins;\\r\\n43        return 0;\\r\\n44}\\r\\n45\\r\\n46static struct pinctrl_ops foo_pctrl_ops = {\\r\\n47        .get_groups_count = foo_get_groups_count,\\r\\n48        .get_group_name = foo_get_group_name,\\r\\n49        .get_group_pins = foo_get_group_pins,\\r\\n50};\\r\\n51\\r\\n52\\r\\n53static struct pinctrl_desc foo_desc = {\\r\\n54       ...\\r\\n55       .pctlops = &foo_pctrl_ops,\\r\\n56};\\r\\n```\\r\\n\\r\\nget_groups_count\uff08\uff09\u6210\u5458\u51fd\u6570\u7528\u4e8e\u544a\u77e5pinctrl\u5b50\u7cfb\u7edf\u8be5SoC\u4e2d\u5408\u6cd5\u7684\u88ab\u9009\u5f15\u811a\u7ec4\u6709\u591a\u5c11\u4e2a\uff0c\u800cget_group_name\uff08\uff09\u5219\u63d0\u4f9b\u5f15\u811a\u7ec4\u7684\u540d\u5b57\uff0cget_group_pins\uff08\uff09\u63d0\u4f9b\u5f15\u811a\u7ec4\u7684\u5f15\u811a\u8868\u3002\u5728\u8bbe\u5907\u9a71\u52a8\u8c03\u7528pinctrl\u901a\u7528API\u4f7f\u80fd\u67d0\u4e00\u7ec4\u5f15\u811a\u7684\u5bf9\u5e94\u529f\u80fd\u65f6\uff0cpinctrl\u5b50\u7cfb\u7edf\u7684\u6838\u5fc3\u5c42\u4f1a\u8c03\u7528\u4e0a\u8ff0\u56de\u8c03\u51fd\u6570\u3002\\r\\n\\r\\n# 3.\u5f15\u811a\u914d\u7f6e\\r\\n\\r\\n\u8bbe\u5907\u9a71\u52a8\u6709\u65f6\u5019\u9700\u8981\u914d\u7f6e\u5f15\u811a\uff0c\u8b6c\u5982\u53ef\u80fd\u628a\u5f15\u811a\u8bbe\u7f6e\u4e3a\u9ad8\u963b\u6216\u8005\u4e09\u6001\uff08\u8fbe\u5230\u7c7b\u4f3c\u65ad\u8fde\u5f15\u811a\u7684\u6548\u679c\uff09\uff0c\u6216\u901a\u8fc7\u67d0\u963b\u503c\u5c06\u5f15\u811a\u4e0a\u62c9/\u4e0b\u62c9\u4ee5\u786e\u4fdd\u9ed8\u8ba4\u72b6\u6001\u4e0b\u5f15\u811a\u7684\u7535\u5e73\u72b6\u6001\u3002\u5728\u9a71\u52a8\u4e2d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u76f8\u5e94\u677f\u7ea7\u5f15\u811a\u914d\u7f6eAPI\u7684\u7ec6\u8282\uff0c\u8b6c\u5982\u67d0\u8bbe\u5907\u9a71\u52a8\u53ef\u80fd\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u5c06\u67d0\u5f15\u811a\u4e0a\u62c9\uff1a\\r\\n\\r\\n```\\r\\n#include <linux/pinctrl/consumer.h>\\r\\nret = pin_config_set(\\"foo-dev\\", \\"FOO_GPIO_PIN\\", PLATFORM_X_PULL_UP);\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684PLATFORM_X_PULL_UP\u7531\u7279\u5b9a\u7684pinctrl\u9a71\u52a8\u5b9a\u4e49\u3002\u5728\u7279\u5b9a\u7684pinctrl\u9a71\u52a8\u4e2d\uff0c\u9700\u8981\u5b9e\u73b0\u5b8c\u6210\u8fd9\u4e9b\u914d\u7f6e\u6240\u9700\u8981\u7684\u56de\u8c03\u51fd\u6570\uff08pinctrl_desc\u7684confops\u6210\u5458\u51fd\u6570\uff09\uff0c\u5982\u4ee3\u7801\u6e05\u535520.18\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.18\u3000\u5f15\u811a\u7684\u914d\u7f6e\\r\\n\\r\\n```\\r\\n 1#include <linux/pinctrl/pinctrl.h>\\r\\n 2#include <linux/pinctrl/pinconf.h>\\r\\n 3#include \\"platform_x_pindefs.h\\"\\r\\n 4\\r\\n 5static int foo_pin_config_get(struct pinctrl_dev *pctldev,\\r\\n 6                    unsigned offset,\\r\\n 7                    unsigned long *config)\\r\\n 8{\\r\\n 9        struct my_conftype conf;\\r\\n10\\r\\n11        ... Find setting for pin @ offset ...\\r\\n12\\r\\n13        *config = (unsigned long) conf;\\r\\n14}\\r\\n15\\r\\n16static int foo_pin_config_set(struct pinctrl_dev *pctldev,\\r\\n17                    unsigned offset,\\r\\n18                    unsigned long config)\\r\\n19{\\r\\n20        struct my_conftype *conf = (struct my_conftype *) config;\\r\\n21\\r\\n22        switch (conf) {\\r\\n23                case PLATFORM_X_PULL_UP:\\r\\n24                ...\\r\\n25                }\\r\\n26        }\\r\\n27}\\r\\n28\\r\\n29static int foo_pin_config_group_get (struct pinctrl_dev *pctldev,\\r\\n30                    unsigned selector,\\r\\n31                    unsigned long *config)\\r\\n32{\\r\\n33       ...\\r\\n34}\\r\\n35\\r\\n36static int foo_pin_config_group_set (struct pinctrl_dev *pctldev,\\r\\n37                    unsigned selector,\\r\\n38                    unsigned long config)\\r\\n39{\\r\\n40       ...\\r\\n41}\\r\\n42\\r\\n43static struct pinconf_ops foo_pconf_ops = {\\r\\n44        .pin_config_get = foo_pin_config_get,\\r\\n45        .pin_config_set = foo_pin_config_set,\\r\\n46        .pin_config_group_get = foo_pin_config_group_get,\\r\\n47        .pin_config_group_set = foo_pin_config_group_set,\\r\\n48};\\r\\n49\\r\\n50/* Pin config operations are handled by some pin controller */\\r\\n51static struct pinctrl_desc foo_desc = {\\r\\n52        ...\\r\\n53        .confops = &foo_pconf_ops,\\r\\n54};\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684pin_config_group_get\uff08\uff09\u3001pin_config_group_set\uff08\uff09\u9488\u5bf9\u7684\u662f\u53ef\u540c\u65f6\u914d\u7f6e\u4e00\u4e2a\u5f15\u811a\u7ec4\u7684\u72b6\u6001\u60c5\u51b5\uff0c\u800cpin_config_get\uff08\uff09\u3001pin_config_set\uff08\uff09\u9488\u5bf9\u7684\u5219\u662f\u5355\u4e2a\u5f15\u811a\u7684\u914d\u7f6e\u3002\\r\\n\\r\\n# 4.\u4e0eGPIO\u5b50\u7cfb\u7edf\u7684\u4ea4\u4e92\\r\\n\\r\\npinctrl\u9a71\u52a8\u6240\u8986\u76d6\u7684\u5f15\u811a\u53ef\u540c\u65f6\u4f5c\u4e3aGPIO\u7528\uff0c\u5185\u6838\u7684GPIO\u5b50\u7cfb\u7edf\u548cpinctrl\u5b50\u7cfb\u7edf\u672c\u6765\u662f\u5e76\u884c\u5de5\u4f5c\u7684\uff0c\u4f46\u662f\u6709\u65f6\u5019\u9700\u8981\u4ea4\u53c9\u6620\u5c04\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981\u5728pinctrl\u9a71\u52a8\u4e2d\u544a\u77e5pinctrl\u5b50\u7cfb\u7edf\u6838\u5fc3\u5c42GPIO\u4e0e\u5e95\u5c42pinctrl\u9a71\u52a8\u6240\u7ba1\u7406\u7684\u5f15\u811a\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002\u5047\u8bbepinctrl\u9a71\u52a8\u4e2d\u5b9a\u4e49\u7684\u5f15\u811a32~47\u4e0egpio_chip\u5b9e\u4f8bchip_a\u7684GPIO\u5bf9\u5e94\uff0c\u5f15\u811a64~71\u4e0egpio_chip\u5b9e\u4f8bchip_b\u7684GPIO\u5bf9\u5e94\uff0c\u5373\u6620\u5c04\u5173\u7cfb\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nchip a:\\r\\n  - GPIO range : [32 .. 47]\\r\\n  - pin range  : [32 .. 47]\\r\\nchip b:\\r\\n  - GPIO range : [48 .. 55]\\r\\n  - pin range  : [64 .. 71]\\r\\n```\\r\\n\\r\\n\u5219\u5728\u7279\u5b9apinctrl\u9a71\u52a8\u4e2d\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u6ce8\u518c\u4e24\u4e2aGPIO\u8303\u56f4\uff0c\u5982\u4ee3\u7801\u6e05\u535520.19\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.19\u3000GPIO\u4e0epinctrl\u5f15\u811a\u7684\u6620\u5c04\\r\\n\\r\\n```\\r\\n 1struct gpio_chip chip_a;\\r\\n 2struct gpio_chip chip_b;\\r\\n 3\\r\\n 4static struct pinctrl_gpio_range gpio_range_a = {\\r\\n 5        .name = \\"chip a\\",\\r\\n 6        .id = 0,\\r\\n 7        .base = 32,\\r\\n 8        .pin_base = 32,\\r\\n 9        .npins = 16,\\r\\n10        .gc = &chip_a;\\r\\n11};\\r\\n12\\r\\n13static struct pinctrl_gpio_range gpio_range_b = {\\r\\n14        .name = \\"chip b\\",\\r\\n15        .id = 0,\\r\\n16        .base = 48,\\r\\n17        .pin_base = 64,\\r\\n18        .npins = 8,\\r\\n19        .gc = &chip_b;\\r\\n20};\\r\\n21\\r\\n22{\\r\\n23        struct pinctrl_dev *pctl;\\r\\n24        ...\\r\\n25        pinctrl_add_gpio_range(pctl, &gpio_range_a);\\r\\n26        pinctrl_add_gpio_range(pctl, &gpio_range_b);\\r\\n27}\\r\\n```\\r\\n\\r\\n\u5728\u57fa\u4e8e\u5185\u6838gpiolib\u7684GPIO\u9a71\u52a8\u4e2d\uff0c\u82e5\u8bbe\u5907\u9a71\u52a8\u9700\u8fdb\u884cGPIO\u7533\u8bf7gpio_request\uff08\uff09\u548c\u91ca\u653egpio_free\uff08\uff09\uff0cGPIO\u9a71\u52a8\u5219\u4f1a\u8c03\u7528pinctrl\u5b50\u7cfb\u7edf\u4e2d\u7684pinctrl_request_gpio\uff08\uff09\u548cpinctrl_free_gpio\uff08\uff09\u901a\u7528API\uff0cpinctrl\u5b50\u7cfb\u7edf\u4f1a\u67e5\u627e\u7533\u8bf7\u7684GPIO\u548c\u5f15\u811a\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5e76\u786e\u8ba4\u5f15\u811a\u662f\u5426\u88ab\u5176\u4ed6\u590d\u7528\u529f\u80fd\u6240\u5360\u7528\u3002\u4e0epinctrl\u5b50\u7cfb\u7edf\u901a\u7528\u5c42pinctrl_request_gpio\uff08\uff09\u548cpinctrl_free_gpio\uff08\uff09API\u5bf9\u5e94\uff0c\u5728\u5e95\u5c42\u7684\u5177\u4f53pinctrl\u9a71\u52a8\u4e2d\uff0c\u9700\u8981\u5b9e\u73b0pinmux_ops\u7ed3\u6784\u4f53\u7684gpio_request_enable\uff08\uff09\u548cgpio_disable_free\uff08\uff09\u6210\u5458\u51fd\u6570\u3002\\r\\n\\r\\n# 5.\u5f15\u811a\u590d\u7528\uff08pinmux\uff09\\r\\n\\r\\n\u5728pinctrl\u9a71\u52a8\u4e2d\u53ef\u5904\u7406\u5f15\u811a\u590d\u7528\uff0c\u5b83\u5b9a\u4e49\u4e86\u529f\u80fd\uff08FUNCTIONS\uff09\uff0c\u9a71\u52a8\u53ef\u4ee5\u8bbe\u7f6e\u67d0\u529f\u80fd\u7684\u4f7f\u80fd\u6216\u8005\u7981\u6b62\u3002\u5404\u4e2a\u529f\u80fd\u8054\u5408\u8d77\u6765\u7ec4\u6210\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u8b6c\u5982{spi0\uff0ci2c0\uff0cmmc0}\u5c31\u63cf\u8ff0\u4e863\u4e2a\u4e0d\u540c\u7684\u529f\u80fd\u3002\\r\\n\\r\\n\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\u603b\u662f\u8981\u6c42\u7531\u4e00\u4e9b\u5f15\u811a\u7ec4\u6765\u5b8c\u6210\uff0c\u5f15\u811a\u7ec4\u7684\u6570\u91cf\u53ef\u4ee5\u4e3a1\u4e2a\u6216\u8005\u591a\u4e2a\u3002\u5047\u8bbe\u5bf9\u524d\u6587\u6240\u63cf\u8ff0\u7684PGA\u5c01\u88c5\u7684SoC\u800c\u8a00\uff0c\u5f15\u811a\u5206\u7ec4\u5982\u56fe20.10\u6240\u793a\u3002\\r\\n\\r\\n\u5047\u8bbeI2 C\u529f\u80fd\u7531{A5\uff0cB5}\u5f15\u811a\u7ec4\u6210\uff0c\u800c\u5728\u5b9a\u4e49\u5f15\u811a\u63cf\u8ff0\u7684pinctrl_pin_desc\u7ed3\u6784\u4f53\u5b9e\u4f8bfoo_pins\u7684\u65f6\u5019\uff0c\u5c06\u5b83\u4eec\u7684\u5e8f\u53f7\u5b9a\u4e49\u4e3a\u4e86{24\uff0c25}\uff1b\u800cSPI\u529f\u80fd\u5219\u53ef\u4ee5\u7531{A8\uff0cA7\uff0cA6\uff0cA5}\u548c{G4\uff0cG3\uff0cG2\uff0cG1}\uff0c\u5373{0\uff0c8\uff0c16\uff0c24}\u548c{38\uff0c46\uff0c54\uff0c62}\u4e24\u4e2a\u5f15\u811a\u7ec4\u5b8c\u6210\uff08\u6ce8\u610f\u5728\u6574\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u5f15\u811a\u7ec4\u7684\u540d\u5b57\u4e0d\u4f1a\u91cd\u53e0\uff09\u3002\\r\\n\\r\\n\u636e\u6b64\uff0c\u7531\u529f\u80fd\u548c\u5f15\u811a\u7ec4\u7684\u7ec4\u5408\u5c31\u53ef\u4ee5\u51b3\u5b9a\u4e00\u7ec4\u5f15\u811a\u5728\u7cfb\u7edf\u91cc\u7684\u4f5c\u7528\uff0c\u56e0\u6b64\u5728\u8bbe\u7f6e\u67d0\u7ec4\u5f15\u811a\u7684\u4f5c\u7528\u65f6\uff0cpinctrl\u7684\u6838\u5fc3\u5c42\u4f1a\u5c06\u529f\u80fd\u7684\u5e8f\u53f7\u4ee5\u53ca\u5f15\u811a\u7ec4\u7684\u5e8f\u53f7\u4f20\u9012\u7ed9\u5e95\u5c42pinctrl\u9a71\u52a8\u4e2d\u76f8\u5173\u7684\u56de\u8c03\u51fd\u6570\u3002\\r\\n\\r\\n![1747321253179](./figure/1747321253179.png)\\r\\n\\r\\n\u56fe20.10\u3000\u9488\u5bf9PGA\u5c01\u88c5\u7684SoC\u7684\u5f15\u811a\u5206\u7ec4\\r\\n\\r\\n\u5728\u6574\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u9a71\u52a8\u6216\u677f\u7ea7\u4ee3\u7801\u8c03\u7528pinmux\u76f8\u5173\u7684API\u83b7\u53d6\u5f15\u811a\u540e\uff0c\u4f1a\u5f62\u6210\u4e00\u4e2apinctrl\u3001\u4f7f\u7528\u5f15\u811a\u7684\u8bbe\u5907\u3001\u529f\u80fd\u3001\u5f15\u811a\u7ec4\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5047\u8bbe\u5728\u67d0\u7535\u8def\u677f\u4e0a\uff0c\u5c06\u8ba9spi0\u8bbe\u5907\u4f7f\u7528pinctrl0\u7684fspi0\u529f\u80fd\u4ee5\u53cagspi0\u5f15\u811a\u7ec4\uff0c\u8ba9i2c0\u8bbe\u5907\u4f7f\u7528pinctrl0\u7684fi2c0\u529f\u80fd\u548cgi2c0\u5f15\u811a\u7ec4\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u5982\u4e0b\u7684\u6620\u5c04\u5173\u7cfb\uff1a\\r\\n\\r\\n```\\r\\n{\\r\\n  {\\"map-spi0\\", spi0, pinctrl0, fspi0, gspi0},\\r\\n  {\\"map-i2c0\\", i2c0, pinctrl0, fi2c0, gi2c0}\\r\\n}\\r\\n```\\r\\n\\r\\npinctrl\u5b50\u7cfb\u7edf\u7684\u6838\u5fc3\u4f1a\u4fdd\u8bc1\u6bcf\u4e2a\u5f15\u811a\u7684\u6392\u4ed6\u6027\uff0c\u56e0\u6b64\u4e00\u4e2a\u5f15\u811a\u5982\u679c\u5df2\u7ecf\u88ab\u67d0\u8bbe\u5907\u7528\u6389\u4e86\uff0c\u800c\u5176\u4ed6\u7684\u8bbe\u5907\u53c8\u7533\u8bf7\u8be5\u5f15\u811a\u4ee5\u884c\u4f7f\u5176\u4ed6\u7684\u529f\u80fd\u6216GPIO\uff0c\u5219pinctrl\u6838\u5fc3\u5c42\u4f1a\u8ba9\u8be5\u6b21\u7533\u8bf7\u5931\u8d25\u3002\\r\\n\\r\\n\u5728\u7279\u5b9apinctrl\u9a71\u52a8\u4e2dpinmux\u76f8\u5173\u7684\u4ee3\u7801\u4e3b\u8981\u5904\u7406\u5982\u4f55\u4f7f\u80fd/\u7981\u6b62\u67d0\u4e00{\u529f\u80fd\uff0c\u5f15\u811a\u7ec4}\u7684\u7ec4\u5408\uff0c\u8b6c\u5982\uff0c\u5f53spi0\u8bbe\u5907\u7533\u8bf7pinctrl0\u7684fspi0\u529f\u80fd\u548cgspi0\u5f15\u811a\u7ec4\u4ee5\u4fbf\u5c06gspi0\u5f15\u811a\u7ec4\u914d\u7f6e\u4e3aSPI\u63a5\u53e3\u65f6\uff0c\u76f8\u5173\u7684\u56de\u8c03\u51fd\u6570\u88ab\u7ec4\u7ec7\u8fdb\u4e00\u4e2apinmux_ops\u7ed3\u6784\u4f53\u4e2d\uff0c\u800c\u8be5\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\u6700\u7ec8\u6210\u4e3a\u524d\u6587pinctrl_desc\u7684pmxops\u6210\u5458\uff0c\u5982\u4ee3\u7801\u6e05\u535520.20\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.20\u3000pinmux\u7684\u5b9e\u73b0\\r\\n\\r\\n```\\r\\n  1#include <linux/pinctrl/pinctrl.h>\\r\\n  2#include <linux/pinctrl/pinmux.h>\\r\\n  3\\r\\n  4struct foo_group {\\r\\n  5        const char *name;\\r\\n  6        const unsigned int *pins;\\r\\n  7        const unsigned num_pins;\\r\\n  8};\\r\\n  9\\r\\n 10static const unsigned spi0_0_pins[] = { 0, 8, 16, 24 };\\r\\n 11static const unsigned spi0_1_pins[] = { 38, 46, 54, 62 };\\r\\n 12static const unsigned i2c0_pins[] = { 24, 25 };\\r\\n 13static const unsigned mmc0_1_pins[] = { 56, 57 };\\r\\n 14static const unsigned mmc0_2_pins[] = { 58, 59 };\\r\\n 15static const unsigned mmc0_3_pins[] = { 60, 61, 62, 63 };\\r\\n 16\\r\\n 17static const struct foo_group foo_groups[] = {\\r\\n 18        {\\r\\n 19                .name = \\"spi0_0_grp\\",\\r\\n 20                .pins = spi0_0_pins,\\r\\n 21                .num_pins = ARRAY_SIZE(spi0_0_pins),\\r\\n 22        },\\r\\n 23        {\\r\\n 24                .name = \\"spi0_1_grp\\",\\r\\n 25                .pins = spi0_1_pins,\\r\\n 26                .num_pins = ARRAY_SIZE(spi0_1_pins),\\r\\n 27        },\\r\\n 28        {\\r\\n 29                .name = \\"i2c0_grp\\",\\r\\n 30                .pins = i2c0_pins,\\r\\n 31                .num_pins = ARRAY_SIZE(i2c0_pins),\\r\\n 32        },\\r\\n 33        {\\r\\n 34                .name = \\"mmc0_1_grp\\",\\r\\n 35                .pins = mmc0_1_pins,\\r\\n 36                .num_pins = ARRAY_SIZE(mmc0_1_pins),\\r\\n 37        },\\r\\n 38        {\\r\\n 39                .name = \\"mmc0_2_grp\\",\\r\\n 40                .pins = mmc0_2_pins,\\r\\n 41                .num_pins = ARRAY_SIZE(mmc0_2_pins),\\r\\n 42        },\\r\\n 43        {\\r\\n 44                .name = \\"mmc0_3_grp\\",\\r\\n 45                .pins = mmc0_3_pins,\\r\\n 46                .num_pins = ARRAY_SIZE(mmc0_3_pins),\\r\\n 47        },\\r\\n 48};\\r\\n 49\\r\\n 50\\r\\n 51static int foo_get_groups_count(struct pinctrl_dev *pctldev)\\r\\n 52{\\r\\n 53        return ARRAY_SIZE(foo_groups);\\r\\n 54}\\r\\n 55\\r\\n 56static const char *foo_get_group_name(struct pinctrl_dev *pctldev,\\r\\n 57                                       unsigned selector)\\r\\n 58{\\r\\n 59        return foo_groups[selector].name;\\r\\n 60}\\r\\n 61\\r\\n 62static int foo_get_group_pins(struct pinctrl_dev *pctldev, unsigned selector,\\r\\n 63                              unsigned ** const pins,\\r\\n 64                              unsigned * const num_pins)\\r\\n 65{\\r\\n 66        *pins = (unsigned *) foo_groups[selector].pins;\\r\\n 67        *num_pins = foo_groups[selector].num_pins;\\r\\n 68        return 0;\\r\\n 69}\\r\\n 70\\r\\n 71static struct pinctrl_ops foo_pctrl_ops = {\\r\\n 72        .get_groups_count = foo_get_groups_count,\\r\\n 73        .get_group_name = foo_get_group_name,\\r\\n 74        .get_group_pins = foo_get_group_pins,\\r\\n 75};\\r\\n 76\\r\\n 77struct foo_pmx_func {\\r\\n 78        const char *name;\\r\\n 79        const char * const *groups;\\r\\n 80        const unsigned num_groups;\\r\\n 81};\\r\\n 82\\r\\n 83static const char * const spi0_groups[] = { \\"spi0_0_grp\\", \\"spi0_1_grp\\" };\\r\\n 84static const char * const i2c0_groups[] = { \\"i2c0_grp\\" };\\r\\n 85static const char * const mmc0_groups[] = { \\"mmc0_1_grp\\", \\"mmc0_2_grp\\",\\r\\n 86                                        \\"mmc0_3_grp\\" };\\r\\n 87\\r\\n 88static const struct foo_pmx_func foo_functions[] = {\\r\\n 89        {\\r\\n 90                .name = \\"spi0\\",\\r\\n 91                .groups = spi0_groups,\\r\\n 92                .num_groups = ARRAY_SIZE(spi0_groups),\\r\\n 93        },\\r\\n 94        {\\r\\n 95                .name = \\"i2c0\\",\\r\\n 96                .groups = i2c0_groups,\\r\\n 97                .num_groups = ARRAY_SIZE(i2c0_groups),\\r\\n 98        },\\r\\n 99        {\\r\\n100                .name = \\"mmc0\\",\\r\\n101                .groups = mmc0_groups,\\r\\n102                .num_groups = ARRAY_SIZE(mmc0_groups),\\r\\n103        },\\r\\n104};\\r\\n105\\r\\n106int foo_get_functions_count(struct pinctrl_dev *pctldev)\\r\\n107{\\r\\n108        return ARRAY_SIZE(foo_functions);\\r\\n109}\\r\\n110\\r\\n111const char *foo_get_fname(struct pinctrl_dev *pctldev, unsigned selector)\\r\\n112{\\r\\n113        return foo_functions[selector].name;\\r\\n114}\\r\\n115\\r\\n116static int foo_get_groups(struct pinctrl_dev *pctldev, unsigned selector,\\r\\n117                          const char * const **groups,\\r\\n118                          unsigned * const num_groups)\\r\\n119{\\r\\n120        *groups = foo_functions[selector].groups;\\r\\n121        *num_groups = foo_functions[selector].num_groups;\\r\\n122        return 0;\\r\\n123}\\r\\n124\\r\\n125int foo_enable(struct pinctrl_dev *pctldev, unsigned selector,\\r\\n126                unsigned group)\\r\\n127{\\r\\n128        u8 regbit = (1 << selector + group);\\r\\n129\\r\\n130        writeb((readb(MUX)|regbit), MUX)\\r\\n131        return 0;\\r\\n132}\\r\\n133\\r\\n134void foo_disable(struct pinctrl_dev *pctldev, unsigned selector,\\r\\n135                unsigned group)\\r\\n136{\\r\\n137        u8 regbit = (1 << selector + group);\\r\\n138\\r\\n139        writeb((readb(MUX) & ~(regbit)), MUX)\\r\\n140        return 0;\\r\\n141}\\r\\n142\\r\\n143struct pinmux_ops foo_pmxops = {\\r\\n144        .get_functions_count = foo_get_functions_count,\\r\\n145        .get_function_name = foo_get_fname,\\r\\n146        .get_function_groups = foo_get_groups,\\r\\n147        .enable = foo_enable,\\r\\n148        .disable = foo_disable,\\r\\n149};\\r\\n150\\r\\n151/* Pinmux operations are handled by some pin controller */\\r\\n152static struct pinctrl_desc foo_desc = {\\r\\n153        ...\\r\\n154        .pctlops = &foo_pctrl_ops,\\r\\n155        .pmxops = &foo_pmxops,\\r\\n156};\\r\\n```\\r\\n\\r\\n\u5177\u4f53\u7684pinctrl\u3001\u4f7f\u7528\u5f15\u811a\u7684\u8bbe\u5907\u3001\u529f\u80fd\u3001\u5f15\u811a\u7ec4\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u53ef\u4ee5\u5728\u677f\u6587\u4ef6\u4e2d\u901a\u8fc7\u5b9a\u4e49pinctrl_map\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\u6765\u5c55\u5f00\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nstatic struct pinctrl_map __initdata mapping[] = {\\r\\n   PIN_MAP_MUX_GROUP(\\"foo-i2c.o\\", PINCTRL_STATE_DEFAULT, \\"pinctrl-foo\\", NULL, \\"i2c0\\"),\\r\\n};\\r\\n```\\r\\n\\r\\n\u53c8\u7531\u4e8e1\u4e2a\u529f\u80fd\u53ef\u7531\u4e24\u4e2a\u4e0d\u540c\u7684\u5f15\u811a\u7ec4\u5b9e\u73b0\uff0c\u6240\u4ee5\u5bf9\u4e8e\u540c1\u4e2a\u529f\u80fd\u53ef\u80fd\u5f62\u6210\u6709\u4e24\u4e2a\u53ef\u9009\u5f15\u811a\u7ec4\u7684pinctrl_map\uff1a\\r\\n\\r\\n```\\r\\nstatic struct pinctrl_map __initdata mapping[] = {\\r\\n        PIN_MAP_MUX_GROUP(\\"foo-spi.0\\", \\"spi0-pos-A\\", \\"pinctrl-foo\\", \\"spi0_0_grp\\", \\"spi0\\"),\\r\\n        PIN_MAP_MUX_GROUP(\\"foo-spi.0\\", \\"spi0-pos-B\\", \\"pinctrl-foo\\", \\"spi0_1_grp\\", \\"spi0\\"),\\r\\n};\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u8c03\u7528\u7684PIN_MAP_MUX_GROUP\u662f\u4e00\u4e2a\u5feb\u6377\u5b8f\uff0c\u7528\u4e8e\u8d4b\u503cpinctrl_map\u7684\u5404\u4e2a\u6210\u5458\uff1a\\r\\n\\r\\n```\\r\\n#define PIN_MAP_MUX_GROUP(dev, state, pinctrl, grp, func)               \\\\\\r\\n        {                                                               \\\\\\r\\n                .dev_name = dev,                                        \\\\\\r\\n                .name = state,                                          \\\\\\r\\n                .type = PIN_MAP_TYPE_MUX_GROUP,                         \\\\\\r\\n                .ctrl_dev_name = pinctrl,                               \\\\\\r\\n                .data.mux = {                                           \\\\\\r\\n                        .group = grp,                                   \\\\\\r\\n                        .function = func,                               \\\\\\r\\n                },                                                      \\\\\\r\\n        }\\r\\n```\\r\\n\\r\\n\u5f53\u7136\uff0c\u8fd9\u79cd\u6620\u5c04\u5173\u7cfb\u6700\u597d\u662f\u5728\u8bbe\u5907\u6811\u4e2d\u901a\u8fc7\u8282\u70b9\u7684\u5c5e\u6027\u8fdb\u884c\uff0c\u5177\u4f53\u7684\u8282\u70b9\u5c5e\u6027\u7684\u5b9a\u4e49\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684pinctrl\u9a71\u52a8\uff0c\u6700\u7ec8\u5728pinctrl\u9a71\u52a8\u4e2d\u901a\u8fc7pinctrl_ops\u7ed3\u6784\u4f53\u7684.dt_node_to_map\uff08\uff09\u6210\u5458\u51fd\u6570\u8bfb\u51fa\u5c5e\u6027\u5e76\u5efa\u7acb\u6620\u5c04\u8868\u3002\\r\\n\\r\\n\u5728\u8fd0\u884c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684API\u53bb\u67e5\u627e\u5e76\u8bbe\u7f6e\u4f4d\u7f6eA\u7684\u5f15\u811a\u7ec4\u4ee5\u884c\u9a76SPI\u63a5\u53e3\u7684\u529f\u80fd\uff1a\\r\\n\\r\\n```\\r\\np = devm_pinctrl_get(dev);\\r\\ns = pinctrl_lookup_state(p, \\"spi0-pos-A \\");\\r\\nret = pinctrl_select_state(p, s)\\r\\n```\\r\\n\\r\\n\u6216\u8005\u53ef\u4ee5\u66f4\u52a0\u7b80\u5355\u5730\u4f7f\u7528\uff1a\\r\\n\\r\\n```\\r\\np = devm_pinctrl_get_select(dev, \\"spi0-pos-A\\");\\r\\n```\\r\\n\\r\\n\u82e5\u60f3\u5728\u8fd0\u884c\u65f6\u5207\u6362\u4f4d\u7f6eA\u548cB\u7684\u5f15\u811a\u7ec4\u4ee5\u884c\u4f7fSPI\u7684\u63a5\u53e3\u529f\u80fd\uff0c\u4ee3\u7801\u7ed3\u6784\u7c7b\u4f3c\u6e05\u535520.21\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.21\u3000pinctrl_lookup_state\uff08\uff09\u548cpinctrl_select_stat\uff08\uff09\\r\\n\\r\\n```\\r\\n 1foo_probe()\\r\\n 2{\\r\\n 3        /* Setup */\\r\\n 4        p = devm_pinctrl_get(&device);\\r\\n 5        if (IS_ERR(p))\\r\\n 6                ...\\r\\n 7\\r\\n 8        s1 = pinctrl_lookup_state(foo->p, \\" spi0-pos-A\\");\\r\\n 9        if (IS_ERR(s1))\\r\\n10                ...\\r\\n11\\r\\n12        s2 = pinctrl_lookup_state(foo->p, \\" spi0-pos-B\\");\\r\\n13        if (IS_ERR(s2))\\r\\n14                ...\\r\\n15}\\r\\n16\\r\\n17foo_switch()\\r\\n18{\\r\\n19        /* Enable on position A */\\r\\n20        ret = pinctrl_select_state(s1);\\r\\n21        if (ret < 0)\\r\\n22            ...\\r\\n23\\r\\n24        ...\\r\\n25\\r\\n26        /* Enable on position B */\\r\\n27        ret = pinctrl_select_state(s2);\\r\\n28        if (ret < 0)\\r\\n29            ...\\r\\n30\\r\\n31        ...\\r\\n32}\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8e\\"default\\"\u72b6\u6001\u4e0b\u7684\u5f15\u811a\u914d\u7f6e\uff0c\u9a71\u52a8\u4e00\u822c\u4e0d\u9700\u8981\u5b8c\u6210devm_pinctrl_get_select\uff08dev\uff0c\\"default\\"\uff09\u7684\u8c03\u7528\u3002\u8b6c\u5982\u5bf9\u4e8earch/arm/boot/dts/prima2-evb.dts\u4e2d\u7684\u5982\u4e0b\u5f15\u811a\u7ec4\uff1a\\r\\n\\r\\n```\\r\\nperi-iobg {\\r\\n        uart@b0060000 {\\r\\n                pinctrl-names = \\"default\\";\\r\\n                pinctrl-0 = <&uart1_pins_a>;\\r\\n        };\\r\\n        spi@b00d0000 {\\r\\n                pinctrl-names = \\"default\\";\\r\\n                pinctrl-0 = <&spi0_pins_a>;\\r\\n        };\\r\\n        spi@b0170000 {\\r\\n                pinctrl-names = \\"default\\";\\r\\n                pinctrl-0 = <&spi1_pins_a>;\\r\\n        };\\r\\n};\\r\\n```\\r\\n\\r\\n\u7531\u4e8epinctrl-names\u90fd\u662f\\"default\\"\u7684\uff0c\u6240\u4ee5pinctrl\u6838\u5b9e\u9645\u4f1a\u81ea\u52a8\u505a\u7c7b\u4f3cdevm_pinctrl_get_select\uff08dev\uff0c\\"default\\"\uff09\u7684\u64cd\u4f5c\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001","description":"\u5e76\u53d1\uff08Concurrency\uff09\u6307\u7684\u662f\u591a\u4e2a\u6267\u884c\u5355\u5143\u540c\u65f6\u3001\u5e76\u884c\u88ab\u6267\u884c\uff0c\u800c\u5e76\u53d1\u7684\u6267\u884c\u5355\u5143\u5bf9\u5171\u4eab\u8d44\u6e90\uff08\u786c\u4ef6\u8d44\u6e90\u548c\u8f6f\u4ef6\u4e0a\u7684\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf\u7b49\uff09\u7684\u8bbf\u95ee\u5219\u5f88\u5bb9\u6613\u5bfc\u81f4\u7ade\u6001\uff08Race Conditions\uff09\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8eglobalmem\u8bbe\u5907\uff0c\u5047\u8bbe\u4e00\u4e2a\u6267\u884c\u5355\u5143A\u5bf9\u5176\u5199\u51653000\u4e2a\u5b57\u7b26\u201ca\u201d\uff0c\u800c\u53e6\u4e00\u4e2a\u6267\u884c\u5355\u5143B\u5bf9\u5176\u5199\u51654000\u4e2a\u201cb\u201d\uff0c\u7b2c\u4e09\u4e2a\u6267\u884c\u5355\u5143C\u8bfb\u53d6globalmem\u7684\u6240\u6709\u5b57\u7b26\u3002\u5982\u679c\u6267\u884c\u5355\u5143A\u3001B\u7684\u5199\u64cd\u4f5c\u6309\u56fe7.1\u90a3\u6837\u987a\u5e8f\u53d1\u751f\uff0c\u6267\u884c\u5355\u5143C\u7684\u8bfb\u64cd\u4f5c\u5f53\u7136\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5982\u679c\u6267\u884c\u5355\u5143A\u3001B\u6309\u56fe7.2\u90a3\u6837\u88ab\u6267\u884c\uff0c\u800c\u6267\u884c\u5355\u5143C\u53c8\u201c\u4e0d\u5408\u65f6\u5b9c\u201d\u5730\u8bfb\uff0c\u5219\u4f1a\u8bfb\u51fa3000\u4e2a\u201cb\u201d\u3002","date":"2025-09-15T14:44:14.441Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.765,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.7\u3000pinctrl\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316"}},"content":"\u5e76\u53d1\uff08Concurrency\uff09\u6307\u7684\u662f\u591a\u4e2a\u6267\u884c\u5355\u5143\u540c\u65f6\u3001\u5e76\u884c\u88ab\u6267\u884c\uff0c\u800c\u5e76\u53d1\u7684\u6267\u884c\u5355\u5143\u5bf9\u5171\u4eab\u8d44\u6e90\uff08\u786c\u4ef6\u8d44\u6e90\u548c\u8f6f\u4ef6\u4e0a\u7684\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf\u7b49\uff09\u7684\u8bbf\u95ee\u5219\u5f88\u5bb9\u6613\u5bfc\u81f4\u7ade\u6001\uff08Race Conditions\uff09\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8eglobalmem\u8bbe\u5907\uff0c\u5047\u8bbe\u4e00\u4e2a\u6267\u884c\u5355\u5143A\u5bf9\u5176\u5199\u51653000\u4e2a\u5b57\u7b26\u201ca\u201d\uff0c\u800c\u53e6\u4e00\u4e2a\u6267\u884c\u5355\u5143B\u5bf9\u5176\u5199\u51654000\u4e2a\u201cb\u201d\uff0c\u7b2c\u4e09\u4e2a\u6267\u884c\u5355\u5143C\u8bfb\u53d6globalmem\u7684\u6240\u6709\u5b57\u7b26\u3002\u5982\u679c\u6267\u884c\u5355\u5143A\u3001B\u7684\u5199\u64cd\u4f5c\u6309\u56fe7.1\u90a3\u6837\u987a\u5e8f\u53d1\u751f\uff0c\u6267\u884c\u5355\u5143C\u7684\u8bfb\u64cd\u4f5c\u5f53\u7136\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5982\u679c\u6267\u884c\u5355\u5143A\u3001B\u6309\u56fe7.2\u90a3\u6837\u88ab\u6267\u884c\uff0c\u800c\u6267\u884c\u5355\u5143C\u53c8\u201c\u4e0d\u5408\u65f6\u5b9c\u201d\u5730\u8bfb\uff0c\u5219\u4f1a\u8bfb\u51fa3000\u4e2a\u201cb\u201d\u3002\\r\\n\\r\\n![1742914594301](./figure/1742914594301.png)\\r\\n\\r\\n\u56fe7.1\u3000\u5e76\u53d1\u6267\u884c\u5355\u5143\u7684\u987a\u5e8f\u6267\u884c\\r\\n\\r\\n![1742914621201](./figure/1742914621201.png)\\r\\n\\r\\n\u56fe7.2\u3000\u5e76\u53d1\u6267\u884c\u5355\u5143\u7684\u4ea4\u9519\u6267\u884c\\r\\n\\r\\n\u6bd4\u56fe7.2\u66f4\u590d\u6742\u3001\u66f4\u6df7\u4e71\u7684\u5e76\u53d1\u5927\u91cf\u5b58\u5728\u4e8e\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u53ea\u8981\u5e76\u53d1\u7684\u591a\u4e2a\u6267\u884c\u5355\u5143\u5b58\u5728\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\uff0c\u7ade\u6001\u5c31\u53ef\u80fd\u53d1\u751f\u3002\u5728Linux\u5185\u6838\u4e2d\uff0c\u4e3b\u8981\u7684\u7ade\u6001\u53d1\u751f\u4e8e\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5\u3002\\r\\n\\r\\n# 1.\u5bf9\u79f0\u591a\u5904\u7406\u5668\uff08SMP\uff09\u7684\u591a\u4e2aCPU\\r\\n\\r\\nSMP\u662f\u4e00\u79cd\u7d27\u8026\u5408\u3001\u5171\u4eab\u5b58\u50a8\u7684\u7cfb\u7edf\u6a21\u578b\uff0c\u5176\u4f53\u7cfb\u7ed3\u6784\u5982\u56fe7.3\u6240\u793a\uff0c\u5b83\u7684\u7279\u70b9\u662f\u591a\u4e2aCPU\u4f7f\u7528\u5171\u540c\u7684\u7cfb\u7edf\u603b\u7ebf\uff0c\u56e0\u6b64\u53ef\u8bbf\u95ee\u5171\u540c\u7684\u5916\u8bbe\u548c\u50a8\u5b58\u5668\u3002\\r\\n\\r\\n![1742914666462](./figure/1742914666462.png)\\r\\n\\r\\n\u56fe7.3\u3000SMP\u4f53\u7cfb\u7ed3\u6784\\r\\n\\r\\n\u5728SMP\u7684\u60c5\u51b5\u4e0b\uff0c\u4e24\u4e2a\u6838\uff08CPU0\u548cCPU1\uff09\u7684\u7ade\u6001\u53ef\u80fd\u53d1\u751f\u4e8eCPU0\u7684\u8fdb\u7a0b\u4e0eCPU1\u7684\u8fdb\u7a0b\u4e4b\u95f4\u3001CPU0\u7684\u8fdb\u7a0b\u4e0eCPU1\u7684\u4e2d\u65ad\u4e4b\u95f4\u4ee5\u53caCPU0\u7684\u4e2d\u65ad\u4e0eCPU1\u7684\u4e2d\u65ad\u4e4b\u95f4\uff0c\u56fe7.4\u4e2d\u4efb\u4f55\u4e00\u6761\u7ebf\u8fde\u63a5\u7684\u4e24\u4e2a\u5b9e\u4f53\u90fd\u6709\u6838\u95f4\u5e76\u53d1\u53ef\u80fd\u6027\u3002\\r\\n\\r\\n![image-20250325225811104](./figure/image-20250325225811104.png)\\r\\n\\r\\n\u56fe7.4\u3000SMP\u4e0b\u591a\u6838\u4e4b\u95f4\u7684\u7ade\u6001\\r\\n\\r\\n# 2.\u5355CPU\u5185\u8fdb\u7a0b\u4e0e\u62a2\u5360\u5b83\u7684\u8fdb\u7a0b\\r\\n\\r\\nLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u652f\u6301\u5185\u6838\u62a2\u5360\u8c03\u5ea6\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u5728\u5185\u6838\u6267\u884c\u7684\u65f6\u5019\u53ef\u80fd\u8017\u5b8c\u4e86\u81ea\u5df1\u7684\u65f6\u95f4\u7247\uff08timeslice\uff09\uff0c\u4e5f\u53ef\u80fd\u88ab\u53e6\u4e00\u4e2a\u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b\u6253\u65ad\uff0c\u8fdb\u7a0b\u4e0e\u62a2\u5360\u5b83\u7684\u8fdb\u7a0b\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u60c5\u51b5\u7c7b\u4f3c\u4e8eSMP\u7684\u591a\u4e2aCPU\u3002\\r\\n\\r\\n# 3.\u4e2d\u65ad\uff08\u786c\u4e2d\u65ad\u3001\u8f6f\u4e2d\u65ad\u3001Tasklet\u3001\u5e95\u534a\u90e8\uff09\u4e0e\u8fdb\u7a0b\u4e4b\u95f4\\r\\n\\r\\n\u4e2d\u65ad\u53ef\u4ee5\u6253\u65ad\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\uff0c\u5982\u679c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u8bbf\u95ee\u8fdb\u7a0b\u6b63\u5728\u8bbf\u95ee\u7684\u8d44\u6e90\uff0c\u5219\u7ade\u6001\u4e5f\u4f1a\u53d1\u751f\u3002\\r\\n\\r\\n\u6b64\u5916\uff0c\u4e2d\u65ad\u4e5f\u6709\u53ef\u80fd\u88ab\u65b0\u7684\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u6253\u65ad\uff0c\u56e0\u6b64\uff0c\u591a\u4e2a\u4e2d\u65ad\u4e4b\u95f4\u672c\u8eab\u4e5f\u53ef\u80fd\u5f15\u8d77\u5e76\u53d1\u800c\u5bfc\u81f4\u7ade\u6001\u3002\u4f46\u662fLinux 2.6.35\u4e4b\u540e\uff0c\u5c31\u53d6\u6d88\u4e86\u4e2d\u65ad\u7684\u5d4c\u5957\u3002\u8001\u7248\u672c\u7684\u5185\u6838\u53ef\u4ee5\u5728\u7533\u8bf7\u4e2d\u65ad\u65f6\uff0c\u8bbe\u7f6e\u6807\u8bb0IRQF_DISABLED\u4ee5\u907f\u514d\u4e2d\u65ad\u5d4c\u5957\uff0c\u7531\u4e8e\u65b0\u5185\u6838\u76f4\u63a5\u5c31\u9ed8\u8ba4\u4e0d\u5d4c\u5957\u4e2d\u65ad\uff0c\u8fd9\u4e2a\u6807\u8bb0\u53cd\u800c\u53d8\u5f97\u65e0\u7528\u4e86\u3002\u8be6\u60c5\u89c1https://lwn.net/Articles/380931/ \u6587\u6863\u300aDisabling IRQF_DISABLED\u300b\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u5e76\u53d1\u7684\u53d1\u751f\u9664\u4e86SMP\u662f\u771f\u6b63\u7684\u5e76\u884c\u4ee5\u5916\uff0c\u5176\u4ed6\u7684\u90fd\u662f\u5355\u6838\u4e0a\u7684\u201c\u5b8f\u89c2\u5e76\u884c\uff0c\u5fae\u89c2\u4e32\u884c\u201d\uff0c\u4f46\u5176\u5f15\u53d1\u7684\u5b9e\u8d28\u95ee\u9898\u548cSMP\u76f8\u4f3c\u3002\u56fe7.5\u518d\u73b0\u4e86SMP\u60c5\u51b5\u4e0b\u603b\u7684\u7ade\u4e89\u72b6\u6001\u53ef\u80fd\u6027\uff0c\u65e2\u5305\u542b\u67d0\u4e00\u4e2a\u6838\u5185\u7684\uff0c\u4e5f\u5305\u62ec\u4e24\u4e2a\u6838\u95f4\u7684\u7ade\u6001\u3002\\r\\n\\r\\n![image-20250325225913261](./figure/image-20250325225913261.png)\\r\\n\\r\\n\u56fe7.5\u3000SMP\u4e0b\u6838\u95f4\u4e0e\u6838\u5185\u7ade\u6001\\r\\n\\r\\n\u89e3\u51b3\u7ade\u6001\u95ee\u9898\u7684\u9014\u5f84\u662f\u4fdd\u8bc1\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u4e92\u65a5\u8bbf\u95ee\uff0c\u6240\u8c13\u4e92\u65a5\u8bbf\u95ee\u662f\u6307\u4e00\u4e2a\u6267\u884c\u5355\u5143\u5728\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u5176\u4ed6\u7684\u6267\u884c\u5355\u5143\u88ab\u7981\u6b62\u8bbf\u95ee\u3002\\r\\n\\r\\n\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u4ee3\u7801\u533a\u57df\u79f0\u4e3a\u4e34\u754c\u533a\uff08Critical Sections\uff09\uff0c\u4e34\u754c\u533a\u9700\u8981\u88ab\u4ee5\u67d0\u79cd\u4e92\u65a5\u673a\u5236\u52a0\u4ee5\u4fdd\u62a4\u3002\u4e2d\u65ad\u5c4f\u853d\u3001\u539f\u5b50\u64cd\u4f5c\u3001\u81ea\u65cb\u9501\u3001\u4fe1\u53f7\u91cf\u3001\u4e92\u65a5\u4f53\u7b49\u662fLinux\u8bbe\u5907\u9a71\u52a8\u4e2d\u53ef\u91c7\u7528\u7684\u4e92\u65a5\u9014\u5f84\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316","description":"\u5728\u5757\u8bbe\u5907\u7684\u6ce8\u518c\u548c\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u4e0e\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7c7b\u4f3c\uff0c\u5757\u8bbe\u5907\u9a71\u52a8\u8981\u6ce8\u518c\u5b83\u4eec\u81ea\u5df1\u5230\u5185\u6838\uff0c\u7533\u8bf7\u8bbe\u5907\u53f7\uff0c\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u7684\u51fd\u6570\u662fregister_blkdev\uff08\uff09\uff0c\u5176\u539f\u578b\u4e3a\uff1a","date":"2025-09-15T14:44:14.429Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.81,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.1\u3000\u5e76\u53d1\u4e0e\u7ade\u6001"},"nextItem":{"title":"5.4.1\u3000udev\u4e0edevfs\u7684\u533a\u522b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.4\u3000udev\u7528\u6237\u7a7a\u95f4\u8bbe\u5907\u7ba1\u7406"}},"content":"\u5728\u5757\u8bbe\u5907\u7684\u6ce8\u518c\u548c\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u4e0e\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7c7b\u4f3c\uff0c\u5757\u8bbe\u5907\u9a71\u52a8\u8981\u6ce8\u518c\u5b83\u4eec\u81ea\u5df1\u5230\u5185\u6838\uff0c\u7533\u8bf7\u8bbe\u5907\u53f7\uff0c\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\u7684\u51fd\u6570\u662fregister_blkdev\uff08\uff09\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint register_blkdev(unsigned int major, const char *name);\\r\\n```\\r\\n\\r\\nmajor\u53c2\u6570\u662f\u5757\u8bbe\u5907\u8981\u4f7f\u7528\u7684\u4e3b\u8bbe\u5907\u53f7\uff0cname\u4e3a\u8bbe\u5907\u540d\uff0c\u5b83\u4f1a\u663e\u793a\u5728/proc/devices\u4e2d\u3002\u5982\u679cmajor\u4e3a0\uff0c\u5185\u6838\u4f1a\u81ea\u52a8\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u4e3b\u8bbe\u5907\u53f7\uff0cregister_blkdev\uff08\uff09\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5c31\u662f\u8fd9\u4e2a\u4e3b\u8bbe\u5907\u53f7\u3002\u5982\u679cregister_blkdev\uff08\uff09\u8fd4\u56de\u4e00\u4e2a\u8d1f\u503c\uff0c\u8868\u660e\u53d1\u751f\u4e86\u4e00\u4e2a\u9519\u8bef\u3002\\r\\n\\r\\n\u4e0eregister_blkdev\uff08\uff09\u5bf9\u5e94\u7684\u6ce8\u9500\u51fd\u6570\u662funregister_blkdev\uff08\uff09\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint unregister_blkdev(unsigned int major, const char *name);\\r\\n```\\r\\n\\r\\n\u8fd9\u91cc\uff0c\u4f20\u9012\u7ed9register_blkdev\uff08\uff09\u7684\u53c2\u6570\u5fc5\u987b\u4e0e\u4f20\u9012\u7ed9register_blkdev\uff08\uff09\u7684\u53c2\u6570\u5339\u914d\uff0c\u5426\u5219\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de-EINVAL\u3002\\r\\n\\r\\n\u9664\u6b64\u4e4b\u5916\uff0c\u5728\u5757\u8bbe\u5907\u9a71\u52a8\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\uff0c\u901a\u5e38\u9700\u8981\u5b8c\u6210\u5206\u914d\u3001\u521d\u59cb\u5316\u8bf7\u6c42\u961f\u5217\uff0c\u7ed1\u5b9a\u8bf7\u6c42\u961f\u5217\u548c\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u5206\u914d\u3001\u521d\u59cb\u5316gendisk\uff0c\u7ed9gendisk\u7684major\u3001fops\u3001queue\u7b49\u6210\u5458\u8d4b\u503c\uff0c\u6700\u540e\u6dfb\u52a0gendisk\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.6\u6f14\u793a\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\uff0c\u5176\u4e2d\u5305\u542b\u4e86register_blkdev\uff08\uff09\u3001blk_init_queue\uff08\uff09\u548cadd_disk\uff08\uff09\u7684\u5de5\u4f5c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.6\u3000\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316\\r\\n\\r\\n```\\r\\n 1static int xxx_init(void)\\r\\n 2{\\r\\n 3  /* \u5757\u8bbe\u5907\u9a71\u52a8\u6ce8\u518c*/\\r\\n 4  if (register_blkdev(XXX_MAJOR, \\"xxx\\")) {\\r\\n 5    err =  -EIO;\\r\\n 6    goto out;\\r\\n 7  }\\r\\n 8\\r\\n 9  /* \u8bf7\u6c42\u961f\u5217\u521d\u59cb\u5316 */\\r\\n10  xxx_queue = blk_init_queue(xxx_request, xxx_lock);\\r\\n11  if (!xxx_queue)\\r\\n12    goto out_queue;\\r\\n13  blk_queue_max_hw_sectors(xxx_queue, 255);\\r\\n14  blk_queue_logical_block_size(xxx_queue, 512);\\r\\n15\\r\\n16  /* gendisk\u521d\u59cb\u5316*/\\r\\n17  xxx_disks->major = XXX_MAJOR;\\r\\n18  xxx_disks->first_minor = 0;\\r\\n19  xxx_disks->fops = &xxx_op;\\r\\n20  xxx_disks->queue = xxx_queue;\\r\\n21  sprintf(xxx_disks->disk_name, \\"xxx%d\\", i);\\r\\n22  set_capacity(xxx_disks, xxx_size *2);\\r\\n23  add_disk(xxx_disks); /* \u6dfb\u52a0gendisk */\\r\\n24\\r\\n25  return 0;\\r\\n26  out_queue: unregister_blkdev(XXX_MAJOR, \\"xxx\\");\\r\\n27  out: put_disk(xxx_disks);\\r\\n28  blk_cleanup_queue(xxx_queue);\\r\\n29\\r\\n30  return  -ENOMEM;\\r\\n31}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c13\u884c\u7684blk_queue_max_hw_sectors\uff08\uff09\u7528\u4e8e\u901a\u77e5\u901a\u7528\u5757\u5c42\u548cI/O\u8c03\u5ea6\u5668\u8be5\u8bf7\u6c42\u961f\u5217\u652f\u6301\u7684\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u80fd\u591f\u5305\u542b\u7684\u6700\u5927\u6247\u533a\u6570\uff0c\u7b2c14\u884cblk_queue_logical_block_size\uff08\uff09\u5219\u7528\u4e8e\u544a\u77e5\u8be5\u8bf7\u6c42\u961f\u5217\u7684\u903b\u8f91\u5757\u5927\u5c0f\u3002\\r\\n\\r\\n\u5728\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u5378\u8f7d\u8fc7\u7a0b\u4e2d\u5b8c\u6210\u4e0e\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u76f8\u53cd\u7684\u5de5\u4f5c\u3002\\r\\n\\r\\n1\uff09\u6e05\u9664\u8bf7\u6c42\u961f\u5217\uff0c\u4f7f\u7528blk_cleanup_queue\uff08\uff09\u3002\\r\\n\\r\\n2\uff09\u5220\u9664\u5bf9gendisk\u7684\u5f15\u7528\uff0c\u4f7f\u7528put_disk\uff08\uff09\u3002\\r\\n\\r\\n3\uff09\u5220\u9664\u5bf9\u5757\u8bbe\u5907\u7684\u5f15\u7528\uff0c\u6ce8\u9500\u5757\u8bbe\u5907\u9a71\u52a8\uff0c\u4f7f\u7528unregister_blkdev\uff08\uff09\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.4\u3000udev\u7528\u6237\u7a7a\u95f4\u8bbe\u5907\u7ba1\u7406","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.4\u3000udev\u7528\u6237\u7a7a\u95f4\u8bbe\u5907\u7ba1\u7406","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.4\u3000udev\u7528\u6237\u7a7a\u95f4\u8bbe\u5907\u7ba1\u7406.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.4\u3000udev\u7528\u6237\u7a7a\u95f4\u8bbe\u5907\u7ba1\u7406.md","title":"5.4.1\u3000udev\u4e0edevfs\u7684\u533a\u522b","description":"\u5c3d\u7ba1devfs\u6709\u8fd9\u6837\u548c\u90a3\u6837\u7684\u4f18\u70b9\uff0c\u4f46\u662f\uff0c\u5728Linux 2.6\u5185\u6838\u4e2d\uff0cdevfs\u88ab\u8ba4\u4e3a\u662f\u8fc7\u65f6\u7684\u65b9\u6cd5\uff0c\u5e76\u6700\u7ec8\u88ab\u629b\u5f03\u4e86\uff0cudev\u53d6\u4ee3\u4e86\u5b83\u3002Linux VFS\u5185\u6838\u7ef4\u62a4\u8005Al Viro\u6307\u51fa\u4e86\u51e0\u70b9udev\u53d6\u4ee3devfs\u7684\u539f\u56e0\uff1a","date":"2025-09-15T14:44:14.425Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":29.745,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.3\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3"}},"content":"\u5c3d\u7ba1devfs\u6709\u8fd9\u6837\u548c\u90a3\u6837\u7684\u4f18\u70b9\uff0c\u4f46\u662f\uff0c\u5728Linux 2.6\u5185\u6838\u4e2d\uff0cdevfs\u88ab\u8ba4\u4e3a\u662f\u8fc7\u65f6\u7684\u65b9\u6cd5\uff0c\u5e76\u6700\u7ec8\u88ab\u629b\u5f03\u4e86\uff0cudev\u53d6\u4ee3\u4e86\u5b83\u3002Linux VFS\u5185\u6838\u7ef4\u62a4\u8005Al Viro\u6307\u51fa\u4e86\u51e0\u70b9udev\u53d6\u4ee3devfs\u7684\u539f\u56e0\uff1a\\r\\n\\r\\n1\uff09devfs\u6240\u505a\u7684\u5de5\u4f5c\u88ab\u786e\u4fe1\u53ef\u4ee5\u5728\u7528\u6237\u6001\u6765\u5b8c\u6210\u3002\\r\\n\\r\\n2\uff09devfs\u88ab\u52a0\u5165\u5185\u6838\u4e4b\u65f6\uff0c\u5927\u5bb6\u671f\u671b\u5b83\u7684\u8d28\u91cf\u53ef\u4ee5\u8fce\u5934\u8d76\u4e0a\u3002\\r\\n\\r\\n3\uff09\u53d1\u73b0devfs\u6709\u4e00\u4e9b\u53ef\u4fee\u590d\u548c\u65e0\u6cd5\u4fee\u590d\u7684bug\u3002\\r\\n\\r\\n4\uff09\u5bf9\u4e8e\u53ef\u4fee\u590d\u7684bug\uff0c\u51e0\u4e2a\u6708\u524d\u5c31\u5df2\u7ecf\u88ab\u4fee\u590d\u4e86\uff0c\u5176\u7ef4\u62a4\u8005\u8ba4\u4e3a\u4e00\u5207\u826f\u597d\u3002\\r\\n\\r\\n5\uff09\u5bf9\u4e8e\u540e\u8005\uff0c\u5728\u76f8\u5f53\u957f\u7684\u4e00\u6bb5\u65f6\u95f4\u5185\u6ca1\u6709\u6539\u89c2\u3002\\r\\n\\r\\n6\uff09devfs\u7684\u7ef4\u62a4\u8005\u548c\u4f5c\u8005\u5bf9\u5b83\u611f\u5230\u5931\u671b\u5e76\u4e14\u5df2\u7ecf\u505c\u6b62\u4e86\u5bf9\u4ee3\u7801\u7684\u7ef4\u62a4\u5de5\u4f5c\u3002\\r\\n\\r\\nLinux\u5185\u6838\u7684\u4e24\u4f4d\u8d21\u732e\u8005\uff0cRichard Gooch\uff08devfs\u7684\u4f5c\u8005\uff09\u548cGreg Kroah-Hartman\uff08sysfs\u7684\u4e3b\u8981\u4f5c\u8005\uff09\u5c31devfs/udev\u8fdb\u884c\u4e86\u6fc0\u70c8\u7684\u4e89\u8bba\uff1a\\r\\n\\r\\n```\\r\\nGreg\uff1aRichard had stated that udev was a proper replacement for devfs.\\r\\nRichard\uff1aWell\uff0cthat\'s news to me\uff01\\r\\nGreg\uff1adevfs should be taken out because policy should exist in userspace and not in the kernel.\\r\\nRichard\uff1asysfs\uff0cdeveloped in large part by Greg\uff0calso implemented policy in the kernel.\\r\\nGreg\uff1adevfs was broken and unfixable\\r\\nRichard\uff1aNo proof.Never say never...\\r\\n\u8fd9\u6bb5\u6709\u8da3\u7684\u4e89\u8bba\u53ef\u610f\u8bd1\u5982\u4e0b\uff1a\\r\\nGreg\uff1aRichard\u5df2\u7ecf\u6307\u51fa\uff0cudev\u662fdevfs\u5408\u9002\u7684\u66ff\u4ee3\u54c1\u3002\\r\\nRichard\uff1a\u54e6\uff0c\u6211\u600e\u4e48\u4e0d\u77e5\u9053\uff1f\\r\\nGreg\uff1adevfs\u5e94\u8be5\u4e0b\u8bfe\uff0c\u56e0\u4e3a\u7b56\u7565\u5e94\u8be5\u4f4d\u4e8e\u7528\u6237\u7a7a\u95f4\u800c\u4e0d\u662f\u5185\u6838\u7a7a\u95f4\u3002\\r\\nRichard\uff1a\u54e6\uff0c\u7531Greg\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\u7684sysfs\u4e5f\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u4e86\u7b56\u7565\u3002\\r\\nGreg\uff1adevfs\u5f88\u8e69\u811a\uff0c\u4e5f\u4e0d\u7a33\u5b9a\u3002\\r\\nRichard\uff1a\u5475\u5475\uff0c\u6ca1\u8bc1\u636e\uff0c\u522b\u90a3\u4e48\u6b66\u65ad\u2026\u2026\\r\\n```\\r\\n\\r\\n\u5728Richard Gooch\u548cGreg Kroah-Hartman\u7684\u4e89\u8bba\u4e2d\uff0cGreg Kroah-Hartman\u4f7f\u7528\u7684\u7406\u8bba\u4f9d\u636e\u5c31\u5728\u4e8epolicy\uff08\u7b56\u7565\uff09\u4e0d\u80fd\u4f4d\u4e8e\u5185\u6838\u7a7a\u95f4\u4e2d\u3002Linux\u8bbe\u8ba1\u4e2d\u5f3a\u8c03\u7684\u4e00\u4e2a\u57fa\u672c\u89c2\u70b9\u662f\u673a\u5236\u548c\u7b56\u7565\u7684\u5206\u79bb\u3002\u673a\u5236\u662f\u505a\u67d0\u6837\u4e8b\u60c5\u7684\u56fa\u5b9a\u6b65\u9aa4\u3001\u65b9\u6cd5\uff0c\u800c\u7b56\u7565\u5c31\u662f\u6bcf\u4e00\u4e2a\u6b65\u9aa4\u6240\u91c7\u53d6\u7684\u4e0d\u540c\u65b9\u5f0f\u3002\u673a\u5236\u662f\u76f8\u5bf9\u56fa\u5b9a\u7684\uff0c\u800c\u6bcf\u4e2a\u6b65\u9aa4\u91c7\u7528\u7684\u7b56\u7565\u662f\u4e0d\u56fa\u5b9a\u7684\u3002\u673a\u5236\u662f\u7a33\u5b9a\u7684\uff0c\u800c\u7b56\u7565\u5219\u662f\u7075\u6d3b\u7684\uff0c\u56e0\u6b64\uff0c\u5728Linux\u5185\u6838\u4e2d\uff0c\u4e0d\u5e94\u8be5\u5b9e\u73b0\u7b56\u7565\u3002\\r\\n\\r\\n\u6bd4\u5982Linux\u63d0\u4f9bAPI\u53ef\u4ee5\u8ba9\u4eba\u628a\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u8c03\u9ad8\u6216\u8005\u8c03\u4f4e\uff0c\u6216\u8005\u8c03\u6574\u8c03\u5ea6\u7b56\u7565\u4e3aSCHED_FIFO\u4ec0\u4e48\u7684\uff0c\u4f46\u662fLinux\u5185\u6838\u672c\u8eab\u5374\u4e0d\u7ba1\u8c01\u9ad8\u8c01\u4f4e\u3002\u63d0\u4f9bAPI\u5c5e\u4e8e\u673a\u5236\uff0c\u8c01\u9ad8\u8c01\u4f4e\u8fd9\u5c5e\u4e8e\u7b56\u7565\uff0c\u6240\u4ee5\u5e94\u8be5\u662f\u5e94\u7528\u7a0b\u5e8f\u81ea\u5df1\u53bb\u544a\u8bc9\u5185\u6838\u8981\u9ad8\u6216\u4f4e\uff0c\u800c\u5185\u6838\u4e0d\u7ba1\u8fd9\u4e9b\u6742\u4e8b\u3002\u540c\u7406\uff0cGreg Kroah-Hartman\u8ba4\u4e3a\uff0c\u5c5e\u4e8e\u7b56\u7565\u7684\u4e1c\u897f\u5e94\u8be5\u88ab\u79fb\u5230\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u8c01\u7231\u7ed9\u54ea\u4e2a\u8bbe\u5907\u521b\u5efa\u4ec0\u4e48\u540d\u5b57\u6216\u8005\u60f3\u505a\u66f4\u591a\u7684\u5904\u7406\uff0c\u8c01\u81ea\u5df1\u53bb\u8bbe\u5b9a\u3002\u5185\u6838\u53ea\u7ba1\u628a\u8fd9\u4e9b\u4fe1\u606f\u544a\u8bc9\u7528\u6237\u5c31\u884c\u4e86\u3002\u8fd9\u5c31\u662f\u4f4d\u4e8e\u5185\u6838\u7a7a\u95f4\u7684devfs\u5e94\u8be5\u88ab\u4f4d\u4e8e\u7528\u6237\u7a7a\u95f4\u7684udev\u53d6\u4ee3\u7684\u539f\u56e0\uff0c\u5e94\u8be5devfs\u7ba1\u4e86\u4e00\u4e9b\u4e0d\u9760\u8c31\u7684\u4e8b\u60c5\u3002\\r\\n\\r\\n\u4e0b\u9762\u4e3e\u4e00\u4e2a\u901a\u4fd7\u7684\u4f8b\u5b50\u6765\u7406\u89e3udev\u8bbe\u8ba1\u7684\u51fa\u53d1\u70b9\u3002\u4ee5\u8c08\u604b\u7231\u4e3a\u4f8b\uff0cGreg Kroah-Hartman\u8ba4\u4e3a\uff0c\u53ef\u4ee5\u8ba9\u5185\u6838\u63d0\u4f9b\u8c08\u604b\u7231\u7684\u673a\u5236\uff0c\u4f46\u662f\u4e0d\u80fd\u5728\u5185\u6838\u7a7a\u95f4\u4e2d\u9650\u5236\u8ddf\u8c01\u8c08\u604b\u7231\uff0c\u4e0d\u80fd\u628a\u8c08\u604b\u7231\u7684\u7b56\u7565\u653e\u5728\u5185\u6838\u7a7a\u95f4\u3002\u56e0\u4e3a\u604b\u7231\u662f\u81ea\u7531\u7684\uff0c\u7528\u6237\u5e94\u8be5\u53ef\u4ee5\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u5b9e\u73b0\u201c\u841d\u535c\u767d\u83dc\uff0c\u5404\u6709\u6240\u7231\u201d\u7684\u7406\u60f3\uff0c\u53ef\u4ee5\u6839\u636e\u5bf9\u65b9\u7684\u5916\u8c8c\u3001\u7c4d\u8d2f\u3001\u6027\u683c\u7b49\u81ea\u7531\u9009\u62e9\u3002\u5bf9\u5e94devfs\u800c\u8a00\uff0c\u7b2c1\u4e2a\u76f8\u4eb2\u7684\u5973\u5b69\u88ab\u547d\u540d\u4e3a/dev/girl0\uff0c\u7b2c2\u4e2a\u76f8\u4eb2\u7684\u5973\u5b69\u88ab\u547d\u540d\u4e3a/dev/girl1\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u800c\u5728\u7528\u6237\u7a7a\u95f4\u5b9e\u73b0\u7684udev\u5219\u53ef\u4ee5\u4f7f\u5f97\u7528\u6237\u5b9e\u73b0\u8fd9\u6837\u7684\u81ea\u7531\uff1a\u4e0d\u7ba1\u4f60\u4e2d\u610f\u7684\u5973\u5b69\u662f\u7b2c\u51e0\u4e2a\uff0c\u53ea\u8981\u5b83\u4e0e\u4f60\u5b9a\u4e49\u7684\u89c4\u5219\u7b26\u5408\uff0c\u90fd\u547d\u540d\u4e3a/dev/mygirl\uff01\\r\\n\\r\\nudev\u5b8c\u5168\u5728\u7528\u6237\u6001\u5de5\u4f5c\uff0c\u5229\u7528\u8bbe\u5907\u52a0\u5165\u6216\u79fb\u9664\u65f6\u5185\u6838\u6240\u53d1\u9001\u7684\u70ed\u63d2\u62d4\u4e8b\u4ef6\uff08Hotplug Event\uff09\u6765\u5de5\u4f5c\u3002\u5728\u70ed\u63d2\u62d4\u65f6\uff0c\u8bbe\u5907\u7684\u8be6\u7ec6\u4fe1\u606f\u4f1a\u7531\u5185\u6838\u901a\u8fc7netlink\u5957\u63a5\u5b57\u53d1\u9001\u51fa\u6765\uff0c\u53d1\u51fa\u7684\u4e8b\u60c5\u53ebuevent\u3002udev\u7684\u8bbe\u5907\u547d\u540d\u7b56\u7565\u3001\u6743\u9650\u63a7\u5236\u548c\u4e8b\u4ef6\u5904\u7406\u90fd\u662f\u5728\u7528\u6237\u6001\u4e0b\u5b8c\u6210\u7684\uff0c\u5b83\u5229\u7528\u4ece\u5185\u6838\u6536\u5230\u7684\u4fe1\u606f\u6765\u8fdb\u884c\u521b\u5efa\u8bbe\u5907\u6587\u4ef6\u8282\u70b9\u7b49\u5de5\u4f5c\u3002\u4ee3\u7801\u6e05\u53555.6\u7ed9\u51fa\u4e86\u4ece\u5185\u6838\u901a\u8fc7netlink\u63a5\u6536\u70ed\u63d2\u62d4\u4e8b\u4ef6\u5e76\u51b2\u5237\u6389\u7684\u8303\u4f8b\uff0cudev\u91c7\u7528\u4e86\u7c7b\u4f3c\u7684\u505a\u6cd5\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53555.6\u3000netlink\u7684\u4f7f\u7528\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1 #include <linux/netlink.h>\\r\\n 2\\r\\n 3 static void die(char *s)\\r\\n 4 {\\r\\n 5  write(2, s, strlen(s));\\r\\n 6  exit(1);\\r\\n 7 }\\r\\n 8\\r\\n 9 int main(int argc, char *argv[])\\r\\n10{\\r\\n11  struct sockaddr_nl nls;\\r\\n12  struct pollfd pfd;\\r\\n13  char buf[512];\\r\\n14\\r\\n15  // Open hotplug event netlink socket\\r\\n16\\r\\n17  memset(&nls, 0, sizeof(struct sockaddr_nl));\\r\\n18  nls.nl_family = AF_NETLINK;\\r\\n19  nls.nl_pid = getpid();\\r\\n20  nls.nl_groups = -1;\\r\\n21\\r\\n22  pfd.events = POLLIN;\\r\\n23  pfd.fd = socket(PF_NETLINK, SOCK_DGRAM, NETLINK_KOBJECT_UEVENT);\\r\\n24  if (pfd.fd == -1)\\r\\n25      die(\\"Not root\\\\n\\");\\r\\n26\\r\\n27  // Listen to netlink socket\\r\\n28  if (bind(pfd.fd, (void *)&nls, sizeof(struct sockaddr_nl)))\\r\\n29      die(\\"Bind failed\\\\n\\");\\r\\n30  while (-1 != poll(&pfd, 1, -1)) {\\r\\n31      int i, len = recv(pfd.fd, buf, sizeof(buf), MSG_DONTWAIT);\\r\\n32      if (len == -1)\\r\\n33          die(\\"recv\\\\n\\");\\r\\n34\\r\\n35      // Print the data to stdout.\\r\\n36      i = 0;\\r\\n37      while (i < len) {\\r\\n38          printf(\\"%s\\\\n\\", buf + i);\\r\\n39          i += strlen(buf + i) + 1;\\r\\n40      }\\r\\n41  }\\r\\n42  die(\\"poll\\\\n\\");\\r\\n43\\r\\n44  // Dear gcc: shut up.\\r\\n45  return 0;\\r\\n46}\\r\\n```\\r\\n\\r\\n\u7f16\u8bd1\u4e0a\u8ff0\u7a0b\u5e8f\u5e76\u8fd0\u884c\uff0c\u628aApple Facetime HD Camera USB\u6444\u50cf\u5934\u63d2\u5165Ubuntu\uff0c\u8be5\u7a0b\u5e8f\u4f1adump\u7c7b\u4f3c\u5982\u4e0b\u7684\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\nACTION=add\\r\\nDEVLINKS=/dev/input/by-id/usb-Apple_Inc._FaceTime_HD_Camera__Built-in__\\r\\nCC2B2F0TLSDG6LL0-event-if00 /dev/input/by-path/pci-0000:00:0b.0-usb-0:1:1.0-event\\r\\nDEVNAME=/dev/input/event6\\r\\nDEVPATH=/devices/pci0000:00/0000:00:0b.0/usb1/1-1/1-1:1.0/input/input6/event6\\r\\nID_BUS=usb\\r\\nID_INPUT=1\\r\\nID_INPUT_KEY=1\\r\\nID_MODEL=FaceTime_HD_Camera__Built-in_\\r\\nID_MODEL_ENC=FaceTime\\\\x20HD\\\\x20Camera\\\\x20\\\\x28Built-in\\\\x29\\r\\nID_MODEL_ID=8509\\r\\nID_PATH=pci-0000:00:0b.0-usb-0:1:1.0\\r\\nID_PATH_TAG=pci-\\r\\n```\\r\\n\\r\\nudev\u5c31\u662f\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u63a5\u6536netlink\u6d88\u606f\uff0c\u5e76\u6839\u636e\u5b83\u7684\u5185\u5bb9\u548c\u7528\u6237\u8bbe\u7f6e\u7ed9udev\u7684\u89c4\u5219\u505a\u5339\u914d\u6765\u8fdb\u884c\u5de5\u4f5c\u7684\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u51b7\u63d2\u62d4\u7684\u8bbe\u5907\u600e\u4e48\u529e\uff1f\u51b7\u63d2\u62d4\u7684\u8bbe\u5907\u5728\u5f00\u673a\u65f6\u5c31\u5b58\u5728\uff0c\u5728udev\u542f\u52a8\u524d\u5df2\u7ecf\u88ab\u63d2\u5165\u4e86\u3002\u5bf9\u4e8e\u51b7\u63d2\u62d4\u7684\u8bbe\u5907\uff0cLinux\u5185\u6838\u63d0\u4f9b\u4e86sysfs\u4e0b\u9762\u4e00\u4e2auevent\u8282\u70b9\uff0c\u53ef\u4ee5\u5f80\u8be5\u8282\u70b9\u5199\u4e00\u4e2a\u201cadd\u201d\uff0c\u5bfc\u81f4\u5185\u6838\u91cd\u65b0\u53d1\u9001netlink\uff0c\u4e4b\u540eudev\u5c31\u53ef\u4ee5\u6536\u5230\u51b7\u63d2\u62d4\u7684netlink\u6d88\u606f\u4e86\u3002\u6211\u4eec\u8fd8\u662f\u8fd0\u884c\u4ee3\u7801\u6e05\u53555.6\u7684\u7a0b\u5e8f\uff0c\u5e76\u624b\u52a8\u5f80/sys/module/psmouse/uevent\u5199\u4e00\u4e2a\u201cadd\u201d\uff0c\u4e0a\u8ff0\u7a0b\u5e8f\u4f1adump\u51fa\u6765\u8fd9\u6837\u7684\u4fe1\u606f\\r\\n\\r\\n```\\r\\nACTION=add\\r\\nDEVPATH=/module/psmouse\\r\\nSEQNUM=1682\\r\\nSUBSYSTEM=module\\r\\nUDEV_LOG=3\\r\\nUSEC_INITIALIZED=220903546792\\r\\n```\\r\\n\\r\\n# 5.4.2\u3000sysfs\u6587\u4ef6\u7cfb\u7edf\u4e0eLinux\u8bbe\u5907\u6a21\u578b\\r\\n\\r\\nLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u5f15\u5165\u4e86sysfs\u6587\u4ef6\u7cfb\u7edf\uff0csysfs\u88ab\u770b\u6210\u662f\u4e0eproc\u3001devfs\u548cdevpty\u540c\u7c7b\u522b\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8be5\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u4e2a\u865a\u62df\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u5305\u62ec\u6240\u6709\u7cfb\u7edf\u786c\u4ef6\u7684\u5c42\u7ea7\u89c6\u56fe\uff0c\u4e0e\u63d0\u4f9b\u8fdb\u7a0b\u548c\u72b6\u6001\u4fe1\u606f\u7684proc\u6587\u4ef6\u7cfb\u7edf\u5341\u5206\u7c7b\u4f3c\u3002\\r\\n\\r\\nsysfs\u628a\u8fde\u63a5\u5728\u7cfb\u7edf\u4e0a\u7684\u8bbe\u5907\u548c\u603b\u7ebf\u7ec4\u7ec7\u6210\u4e3a\u4e00\u4e2a\u5206\u7ea7\u7684\u6587\u4ef6\uff0c\u5b83\u4eec\u53ef\u4ee5\u7531\u7528\u6237\u7a7a\u95f4\u5b58\u53d6\uff0c\u5411\u7528\u6237\u7a7a\u95f4\u5bfc\u51fa\u5185\u6838\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u5b83\u4eec\u7684\u5c5e\u6027\u3002sysfs\u7684\u4e00\u4e2a\u76ee\u7684\u5c31\u662f\u5c55\u793a\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u4e2d\u5404\u7ec4\u4ef6\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u5176\u9876\u7ea7\u76ee\u5f55\u5305\u62ecblock\u3001bus\u3001dev\u3001devices\u3001class\u3001fs\u3001kernel\u3001power\u548cfirmware\u7b49\u3002\\r\\n\\r\\nblock\u76ee\u5f55\u5305\u542b\u6240\u6709\u7684\u5757\u8bbe\u5907\uff1bdevices\u76ee\u5f55\u5305\u542b\u7cfb\u7edf\u6240\u6709\u7684\u8bbe\u5907\uff0c\u5e76\u6839\u636e\u8bbe\u5907\u6302\u63a5\u7684\u603b\u7ebf\u7c7b\u578b\u7ec4\u7ec7\u6210\u5c42\u6b21\u7ed3\u6784\uff1bbus\u76ee\u5f55\u5305\u542b\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u603b\u7ebf\u7c7b\u578b\uff1bclass\u76ee\u5f55\u5305\u542b\u7cfb\u7edf\u4e2d\u7684\u8bbe\u5907\u7c7b\u578b\uff08\u5982\u7f51\u5361\u8bbe\u5907\u3001\u58f0\u5361\u8bbe\u5907\u3001\u8f93\u5165\u8bbe\u5907\u7b49\uff09\u3002\u5728/sys\u76ee\u5f55\u4e0b\u8fd0\u884ctree\u4f1a\u5f97\u5230\u4e00\u4e2a\u76f8\u5f53\u957f\u7684\u6811\u5f62\u76ee\u5f55\uff0c\u4e0b\u9762\u6458\u53d6\u4e00\u90e8\u5206\uff1a\\r\\n\\r\\n```\\r\\ntree\\r\\n.\\r\\n\u251c\u2500\u2500 block\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 dm-0 -> ../devices/virtual/block/dm-0\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 loop0 -> ../devices/virtual/block/loop0\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 loop1 -> ../devices/virtual/block/loop1\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 loop2 -> ../devices/virtual/block/loop2\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 loop3 -> ../devices/virtual/block/loop3\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 loop4 -> ../devices/virtual/block/loop4\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 loop5 -> ../devices/virtual/block/loop5\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 loop6 -> ../devices/virtual/block/loop6\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 loop7 -> ../devices/virtual/block/loop7\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram0 -> ../devices/virtual/block/ram0\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram1 -> ../devices/virtual/block/ram1\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram10 -> ../devices/virtual/block/ram10\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram11 -> ../devices/virtual/block/ram11\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram12 -> ../devices/virtual/block/ram12\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram13 -> ../devices/virtual/block/ram13\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram14 -> ../devices/virtual/block/ram14\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram15 -> ../devices/virtual/block/ram15\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram2 -> ../devices/virtual/block/ram2\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram3 -> ../devices/virtual/block/ram3\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram4 -> ../devices/virtual/block/ram4\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram5 -> ../devices/virtual/block/ram5\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram6 -> ../devices/virtual/block/ram6\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram7 -> ../devices/virtual/block/ram7\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram8 -> ../devices/virtual/block/ram8\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ram9 -> ../devices/virtual/block/ram9\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 sda -> ../devices/pci0000:00/0000:00:0d.0/ata3/host2/target2:0:0/2:0:0:0/block/sda\\r\\n\u2502\xa0\xa0 \u2514\u2500\u2500 sr0 -> ../devices/pci0000:00/0000:00:01.1/ata2/host1/target1:0:0/1:0:0:0/block/sr0\\r\\n\u251c\u2500\u2500 bus\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 ac97\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 devices\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 0-0:AD1980 -> ../../../devices/pci0000:00/0000:00:05.0/0-0:AD1980\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers_autoprobe\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers_probe\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 acpi\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 devices\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 ACPI0003:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/ACPI0003:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 APP0001:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/APP0001:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 device:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 device:01 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/LNXVIDEO:00/device:01\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 device:02 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:02\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 LNXPWRBN:00 -> ../../../devices/LNXSYSTM:00/LNXPWRBN:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 LNXSLPBN:00 -> ../../../devices/LNXSYSTM:00/LNXSLPBN:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 LNXSYBUS:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 LNXSYBUS:01 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:01\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 LNXSYSTM:00 -> ../../../devices/LNXSYSTM:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 LNXVIDEO:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/LNXVIDEO:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0000:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/PNP0000:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0100:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/PNP0100:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0103:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/PNP0103:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0200:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/PNP0200:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0303:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/PNP0303:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0400:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0400:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0400:01 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0400:01\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0501:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0501:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0501:01 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0501:01\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0501:02 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0501:02\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0501:03 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0501:03\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0700:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/PNP0700:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0A03:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0B00:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/PNP0B00:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0C02:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0C02:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0C0A:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0C0A:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0C0F:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0C0F:01 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:01\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0C0F:02 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:02\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0C0F:03 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0F:03\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0F03:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/device:00/PNP0F03:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 PNP8390:00 -> ../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP8390:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 ac\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 ACPI0003:00 -> ../../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/ACPI0003:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 bind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 unbind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 battery\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 bind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 PNP0C0A:00 -> ../../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/PNP0C0A:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 unbind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 button\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 bind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 LNXPWRBN:00 -> ../../../../devices/LNXSYSTM:00/LNXPWRBN:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 LNXSLPBN:00 -> ../../../../devices/LNXSYSTM:00/LNXSLPBN:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 unbind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 ec\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 bind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 unbind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 hardware_error_device\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 bind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 unbind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 hpet\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 bind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 unbind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 thermal\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 bind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 unbind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 video\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 bind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 LNXVIDEO:00 -> ../../../../devices/LNXSYSTM:00/LNXSYBUS:00/PNP0A03:00/LNXVIDEO:00\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 unbind\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers_autoprobe\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers_probe\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 clockevents\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 devices\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 broadcast -> ../../../devices/system/clockevents/broadcast\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 clockevent0 -> ../../../devices/system/clockevents/clockevent0\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers_autoprobe\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers_probe\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 uevent\\r\\n\u2502\xa0\xa0 \u251c\u2500\u2500 clocksource\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 devices\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 clocksource0 -> ../../../devices/system/clocksource/clocksource0\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers_autoprobe\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 drivers_probe\\r\\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 uevent\\r\\n\\r\\n\\r\\n\\r\\n```\\r\\n\\r\\n\u5728/sys/bus\u7684pci\u7b49\u5b50\u76ee\u5f55\u4e0b\uff0c\u53c8\u4f1a\u518d\u5206\u51fadrivers\u548cdevices\u76ee\u5f55\uff0c\u800cdevices\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u662f\u5bf9/sys/devices\u76ee\u5f55\u4e2d\u6587\u4ef6\u7684\u7b26\u53f7\u94fe\u63a5\u3002\u540c\u6837\u5730\uff0c/sys/class\u76ee\u5f55\u4e0b\u4e5f\u5305\u542b\u8bb8\u591a\u5bf9/sys/devices\u4e0b\u6587\u4ef6\u7684\u94fe\u63a5\u3002\u5982\u56fe5.3\u6240\u793a\uff0cLinux\u8bbe\u5907\u6a21\u578b\u4e0e\u8bbe\u5907\u3001\u9a71\u52a8\u3001\u603b\u7ebf\u548c\u7c7b\u7684\u73b0\u5b9e\u72b6\u51b5\u662f\u76f4\u63a5\u5bf9\u5e94\u7684\uff0c\u4e5f\u6b63\u7b26\u5408Linux 2.6\u4ee5\u540e\u5185\u6838\u7684\u8bbe\u5907\u6a21\u578b\u3002\\r\\n\\r\\n![1742828073298](./figure/1742828073298.png)\\r\\n\\r\\n\u56fe5.3\u3000Linux\u8bbe\u5907\u6a21\u578b\\r\\n\\r\\n\u968f\u7740\u6280\u672f\u7684\u4e0d\u65ad\u8fdb\u6b65\uff0c\u7cfb\u7edf\u7684\u62d3\u6251\u7ed3\u6784\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u5bf9\u667a\u80fd\u7535\u6e90\u7ba1\u7406\u3001\u70ed\u63d2\u62d4\u4ee5\u53ca\u5373\u63d2\u5373\u7528\u7684\u652f\u6301\u8981\u6c42\u4e5f\u8d8a\u6765\u8d8a\u9ad8\uff0cLinux 2.4\u5185\u6838\u5df2\u7ecf\u96be\u4ee5\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\u3002\u4e3a\u9002\u5e94\u8fd9\u79cd\u5f62\u52bf\u7684\u9700\u8981\uff0cLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u5f00\u53d1\u4e86\u4e0a\u8ff0\u5168\u65b0\u7684\u8bbe\u5907\u3001\u603b\u7ebf\u3001\u7c7b\u548c\u9a71\u52a8\u73af\u73af\u76f8\u6263\u7684\u8bbe\u5907\u6a21\u578b\u3002\u56fe5.4\u5f62\u8c61\u5730\u8868\u793a\u4e86Linux\u9a71\u52a8\u6a21\u578b\u4e2d\u8bbe\u5907\u3001\u603b\u7ebf\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\\r\\n\\r\\n![1742828098508](./figure/1742828098508.png)\\r\\n\\r\\n\u56fe5.4\u3000Linux\u9a71\u52a8\u6a21\u578b\u4e2d\u8bbe\u5907\u3001\u603b\u7ebf\u548c\u7c7b\u7684\u5173\u7cfb\\r\\n\\r\\n\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u4e2d\u7684\u8bbe\u5907\u9a71\u52a8\u6838\u5fc3\u5c42\u4ee3\u7801\u4f5c\u4e3a\u201c\u5e55\u540e\u5927\u4f6c\u201d\u53ef\u5904\u7406\u597d\u8fd9\u4e9b\u5173\u7cfb\uff0c\u5185\u6838\u4e2d\u7684\u603b\u7ebf\u548c\u5176\u4ed6\u5185\u6838\u5b50\u7cfb\u7edf\u4f1a\u5b8c\u6210\u4e0e\u8bbe\u5907\u6a21\u578b\u7684\u4ea4\u4e92\uff0c\u8fd9\u4f7f\u5f97\u9a71\u52a8\u5de5\u7a0b\u5e08\u5728\u7f16\u5199\u5e95\u5c42\u9a71\u52a8\u7684\u65f6\u5019\u51e0\u4e4e\u4e0d\u9700\u8981\u5173\u5fc3\u8bbe\u5907\u6a21\u578b\uff0c\u53ea\u9700\u8981\u6309\u7167\u6bcf\u4e2a\u6846\u67b6\u7684\u8981\u6c42\uff0c\u201c\u586b\u9e2d\u5f0f\u201d\u5730\u586b\u5145xxx_driver\u91cc\u9762\u7684\u5404\u79cd\u56de\u8c03\u51fd\u6570\uff0cxxx\u662f\u603b\u7ebf\u7684\u540d\u5b57\u3002\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u5206\u522b\u4f7f\u7528bus_type\u3001device_driver\u548cdevice\u6765\u63cf\u8ff0\u603b\u7ebf\u3001\u9a71\u52a8\u548c\u8bbe\u5907\uff0c\u8fd93\u4e2a\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e8einclude/linux/device.h\u5934\u6587\u4ef6\u4e2d\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u53555.7\u6240\u793a\u3002\\r\\n\u4ee3\u7801\u6e05\u53555.7\u3000bus_type\u3001device_driver\u548cdevice\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n  1 struct bus_type {\\r\\n  2         const char              *name;\\r\\n  3         const char              *dev_name;\\r\\n  4         struct device           *dev_root;\\r\\n  5         struct device_attribute *dev_attrs;     /* use dev_groups instead */\\r\\n  6         const struct attribute_group **bus_groups;\\r\\n  7         const struct attribute_group **dev_groups;\\r\\n  8         const struct attribute_group **drv_groups;\\r\\n  9\\r\\n 10         int (*match)(struct device *dev, struct device_driver *drv);\\r\\n 11         int (*uevent)(struct device *dev, struct kobj_uevent_env *env);\\r\\n 12         int (*probe)(struct device *dev);\\r\\n 13         int (*remove)(struct device *dev);\\r\\n 14         void (*shutdown)(struct device *dev);\\r\\n 15\\r\\n 16         int (*online)(struct device *dev);\\r\\n 17         int (*offline)(struct device *dev);\\r\\n 18\\r\\n 19         int (*suspend)(struct device *dev, pm_message_t state);\\r\\n 20         int (*resume)(struct device *dev);\\r\\n 21\\r\\n 22         const struct dev_pm_ops *pm;\\r\\n 23\\r\\n 24         struct iommu_ops *iommu_ops;\\r\\n 25\\r\\n 26         struct subsys_private *p;\\r\\n 27         struct lock_class_key lock_key;\\r\\n 28 };\\r\\n 29\\r\\n 30 struct device_driver {\\r\\n 31         const char              *name;\\r\\n 32         struct bus_type         *bus;\\r\\n 33\\r\\n 34         struct module           *owner;\\r\\n 35         const char             *mod_name;      /* used for built-in modules */\\r\\n 36\\r\\n 37         bool suppress_bind_attrs;       /* disables bind/unbind via sysfs */\\r\\n 38\\r\\n 39         const struct of_device_id       *of_match_table;\\r\\n 40         const struct acpi_device_id     *acpi_match_table;\\r\\n 41\\r\\n 42         int (*probe) (struct device *dev);\\r\\n 43         int (*remove) (struct device *dev);\\r\\n 44         void (*shutdown) (struct device *dev);\\r\\n 45         int (*suspend) (struct device *dev, pm_message_t state);\\r\\n 46         int (*resume) (struct device *dev);\\r\\n 47         const struct attribute_group **groups;\\r\\n 48\\r\\n 49         const struct dev_pm_ops *pm;\\r\\n 50\\r\\n 51         struct driver_private *p;\\r\\n 52 };\\r\\n 53\\r\\n 54 struct device {\\r\\n 55 struct device        *parent;\\r\\n 56\\r\\n 57 struct device_private        *p;\\r\\n 58\\r\\n 59 struct kobject kobj;\\r\\n 60 const char           *init_name; /* initial name of the device */\\r\\n 61 const struct device_type *type;\\r\\n 62\\r\\n 63 struct mutex         mutex;/* mutex to synchronize calls to\\r\\n 64                       * its driver.\\r\\n 65                       */\\r\\n 66\\r\\n 67 struct bus_type      *bus;       /* type of bus device is on */\\r\\n 68 struct device_driver  *driver;   /* which driver has allocated this\\r\\n 69    device */\\r\\n 70 void         *platform_data;     /* Platform specific data, device\\r\\n 71                                     core doesn\'t touch it */\\r\\n 72 struct dev_pm_infopower;\\r\\n 73 struct dev_pm_domain*pm_domain;\\r\\n 74\\r\\n 75 #ifdef CONfiG_PINCTRL\\r\\n 76 struct dev_pin_info*pins;\\r\\n 77 #endif\\r\\n 78\\r\\n 79 #ifdef CONfiG_NUMA\\r\\n 80 int          numa_node;   /* NUMA node this device is close to */\\r\\n 81 #endif\\r\\n 82 u64          *dma_mask;   /* dma mask (if dma\'able device) */\\r\\n 83 u64          coherent_dma_mask;/* Like dma_mask, but for\\r\\n 84                          alloc_coherent mappings as\\r\\n 85                          not all hardware supports\\r\\n 86                          64 bit addresses for consistent\\r\\n 87                          allocations such descriptors. */\\r\\n 88\\r\\n 89 struct device_dma_parameters *dma_parms;\\r\\n 90\\r\\n 91 struct list_head dma_pools; /* dma pools (if dma\'ble) */\\r\\n 92\\r\\n 93 struct dma_coherent_mem     *dma_mem; /* internal for coherent mem\\r\\n 94                                         override */\\r\\n 95 #ifdef CONfiG_DMA_CMA\\r\\n 96 struct cma *cma_area;       /* contiguous memory area for dma\\r\\n 97                                allocations */\\r\\n 98 #endif\\r\\n 99 /* arch specific additions */\\r\\n100 struct dev_archdataarchdata;\\r\\n101\\r\\n102 struct device_node   *of_node;     /* associated device tree node */\\r\\n103 struct acpi_dev_node acpi_node;    /* associated ACPI device node */\\r\\n104\\r\\n105 dev_t                devt;         /* dev_t, creates the sysfs \\"dev\\" */\\r\\n106 u32                  id;           /* device instance */\\r\\n107\\r\\n108 spinlock_t           devres_lock;\\r\\n109 struct list_head     devres_head;\\r\\n110\\r\\n111 struct klist_node    knode_class;\\r\\n112 struct class         *class;\\r\\n113 const struct attribute_group **groups;     /* optional groups */\\r\\n114\\r\\n115 void(*release)(struct device *dev);\\r\\n116 struct iommu_group   *iommu_group;\\r\\n117\\r\\n118 boo          offline_disabled:1;\\r\\n119 boo          offline:1;\\r\\n120 };\\r\\n```\\r\\n\\r\\n\\r\\ndevice_driver\u548cdevice\u5206\u522b\u8868\u793a\u9a71\u52a8\u548c\u8bbe\u5907\uff0c\u800c\u8fd9\u4e24\u8005\u90fd\u5fc5\u987b\u4f9d\u9644\u4e8e\u4e00\u79cd\u603b\u7ebf\uff0c\u56e0\u6b64\u90fd\u5305\u542bstruct bus_type\u6307\u9488\u3002\u5728Linux\u5185\u6838\u4e2d\uff0c\u8bbe\u5907\u548c\u9a71\u52a8\u662f\u5206\u5f00\u6ce8\u518c\u7684\uff0c\u6ce8\u518c1\u4e2a\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u9a71\u52a8\u5df2\u7ecf\u5b58\u5728\uff0c\u800c1\u4e2a\u9a71\u52a8\u88ab\u6ce8\u518c\u7684\u65f6\u5019\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9\u5e94\u7684\u8bbe\u5907\u5df2\u7ecf\u88ab\u6ce8\u518c\u3002\u8bbe\u5907\u548c\u9a71\u52a8\u5404\u81ea\u6d8c\u5411\u5185\u6838\uff0c\u800c\u6bcf\u4e2a\u8bbe\u5907\u548c\u9a71\u52a8\u6d8c\u5165\u5185\u6838\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u53bb\u5bfb\u627e\u81ea\u5df1\u7684\u53e6\u4e00\u534a\uff0c\u800c\u6b63\u662fbus_type\u7684match\uff08\uff09\u6210\u5458\u51fd\u6570\u5c06\u4e24\u8005\u6346\u7ed1\u5728\u4e00\u8d77\u3002\u7b80\u5355\u5730\u8bf4\uff0c\u8bbe\u5907\u548c\u9a71\u52a8\u5c31\u662f\u7ea2\u5c18\u4e2d\u6f02\u6d6e\u7684\u7537\u5973\uff0c\u800cbus_type\u7684match\uff08\uff09\u5219\u662f\u7275\u5f15\u7ea2\u7ebf\u7684\u6708\u8001\uff0c\u5b83\u53ef\u4ee5\u8bc6\u522b\u4ec0\u4e48\u8bbe\u5907\u4e0e\u4ec0\u4e48\u9a71\u52a8\u662f\u53ef\u914d\u5bf9\u7684\u3002\u4e00\u65e6\u914d\u5bf9\u6210\u529f\uff0cxxx_driver\u7684probe\uff08\uff09\u5c31\u88ab\u6267\u884c\uff08xxx\u662f\u603b\u7ebf\u540d\uff0c\u5982platform\u3001pci\u3001i2c\u3001spi\u3001usb\u7b49\uff09\u3002\\r\\n\\r\\n\u6ce8\u610f\uff1a \u603b\u7ebf\u3001\u9a71\u52a8\u548c\u8bbe\u5907\u6700\u7ec8\u90fd\u4f1a\u843d\u5b9e\u4e3asysfs\u4e2d\u76841\u4e2a\u76ee\u5f55\uff0c\u56e0\u4e3a\u8fdb\u4e00\u6b65\u8ffd\u8e2a\u4ee3\u7801\u4f1a\u53d1\u73b0\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u90fd\u53ef\u4ee5\u8ba4\u4e3a\u662fkobject\u7684\u6d3e\u751f\u7c7b\uff0ckobject\u53ef\u770b\u4f5c\u662f\u6240\u6709\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u7684\u62bd\u8c61\u57fa\u7c7b\uff0c1\u4e2akobject\u5bf9\u5e94sysfs\u4e2d\u76841\u4e2a\u76ee\u5f55\u3002\\r\\n\\r\\n\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u4e2d\u7684\u5404\u4e2aattribute\u5219\u76f4\u63a5\u843d\u5b9e\u4e3asysfs\u4e2d\u76841\u4e2a\u6587\u4ef6\uff0cattribute\u4f1a\u4f34\u968f\u7740show\uff08\uff09\u548cstore\uff08\uff09\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u7528\u4e8e\u8bfb\u5199\u8be5attribute\u5bf9\u5e94\u7684sysfs\u6587\u4ef6\uff0c\u4ee3\u7801\u6e05\u53555.8\u7ed9\u51fa\u4e86attribute\u3001bus_attribute\u3001driver_attribute\u548cdevice_attribute\u8fd9\u51e0\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u3002\\r\\n\u4ee3\u7801\u6e05\u53555.8\u3000attribute\u3001bus_attribute\u3001driver_attribute\u548cdevice_attribute\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1 struct attribute {\\r\\n 2         const char              *name;\\r\\n 3         umode_t                 mode;\\r\\n 4 #ifdef CONfiG_DEBUG_LOCK_ALLOC\\r\\n 5         bool                    ignore_lockdep:1;\\r\\n 6         struct lock_class_key   *key;\\r\\n 7         struct lock_class_key   skey;\\r\\n 8 #endif\\r\\n 9 };\\r\\n10\\r\\n11 struct bus_attribute {\\r\\n12        struct attribute        attr;\\r\\n13        ssize_t (*show)(struct bus_type *bus, char *buf);\\r\\n14        ssize_t (*store)(struct bus_type *bus, const char *buf, size_t count);\\r\\n15 };\\r\\n16\\r\\n17 struct driver_attribute {\\r\\n18        struct attribute attr;\\r\\n19        ssize_t (*show)(struct device_driver *driver, char *buf);\\r\\n20        ssize_t (*store)(struct device_driver *driver, const char *buf,\\r\\n21                          size_t count);\\r\\n22 };\\r\\n23\\r\\n24 struct device_attribute {\\r\\n25        struct attribute        attr;\\r\\n26        ssize_t (*show)(struct device *dev, struct device_attribute *attr,\\r\\n27                        char *buf);\\r\\n28        ssize_t (*store)(struct device *dev, struct device_attribute *attr,\\r\\n29                         const char *buf, size_t count);\\r\\n30 };\\r\\n```\\r\\n\\r\\n\\r\\n\u4e8b\u5b9e\u4e0a\uff0csysfs\u4e2d\u7684\u76ee\u5f55\u6765\u6e90\u4e8ebus_type\u3001device_driver\u3001device\uff0c\u800c\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u5219\u6765\u6e90\u4e8eattribute\u3002Linux\u5185\u6838\u4e2d\u4e5f\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5feb\u6377\u65b9\u5f0f\u4ee5\u65b9\u4fbfattribute\u7684\u521b\u5efa\u5de5\u4f5c\u3002\\r\\n\\r\\n```\\r\\n#define DRIVER_ATTR(_name, _mode, _show, _store) \\\\\\r\\nstruct driver_attribute driver_attr_##_name = __ATTR(_name, _mode, _show, _store)\\r\\n#define DRIVER_ATTR_RW(_name) \\\\\\r\\n        struct driver_attribute driver_attr_##_name = __ATTR_RW(_name)\\r\\n#define DRIVER_ATTR_RO(_name) \\\\\\r\\n        struct driver_attribute driver_attr_##_name = __ATTR_RO(_name)\\r\\n#define DRIVER_ATTR_WO(_name) \\\\\\r\\n        struct driver_attribute driver_attr_##_name = __ATTR_WO(_name)\\r\\n#define DRIVER_ATTR(_name, _mode, _show, _store) \\\\\\r\\n        struct driver_attribute driver_attr_##_name = __ATTR(_name, _mode, _show, _store)\\r\\n#define DRIVER_ATTR_RW(_name) \\\\\\r\\n        struct driver_attribute driver_attr_##_name = __ATTR_RW(_name)\\r\\n#define DRIVER_ATTR_RO(_name) \\\\\\r\\n        struct driver_attribute driver_attr_##_name = __ATTR_RO(_name)\\r\\n#define DRIVER_ATTR_WO(_name) \\\\\\r\\n        struct driver_attribute driver_attr_##_name = __ATTR_WO(_name)\\r\\n#define BUS_ATTR(_name, _mode, _show, _store)   \\\\\\r\\n        struct bus_attribute bus_attr_##_name = __ATTR(_name, _mode, _show, _store)\\r\\n#define BUS_ATTR_RW(_name) \\\\\\r\\n        struct bus_attribute bus_attr_##_name = __ATTR_RW(_name)\\r\\n#define BUS_ATTR_RO(_name) \\\\\\r\\n        struct bus_attribute bus_attr_##_name = __ATTR_RO(_name)\\r\\n```\\r\\n\\r\\n\\r\\n\u6bd4\u5982\uff0c\u6211\u4eec\u5728drivers/base/bus.c\u6587\u4ef6\u4e2d\u53ef\u4ee5\u627e\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nstatic BUS_ATTR(drivers_probe, S_IWUSR, NULL, store_drivers_probe);\\r\\nstatic BUS_ATTR(drivers_autoprobe, S_IWUSR | S_IRUGO,\\r\\n             show_drivers_autoprobe, store_drivers_autoprobe);\\r\\nstatic BUS_ATTR(uevent, S_IWUSR, NULL, bus_uevent_store);\\r\\n```\\r\\n\\r\\n\\r\\n\u800c\u5728/sys/bus/platform\u7b49\u91cc\u9762\u5c31\u53ef\u4ee5\u627e\u5230\u5bf9\u5e94\u7684\u6587\u4ef6\uff1a\\r\\n\\r\\n```\\r\\nbarry@barry-VirtualBox:/sys/bus/platform$ ls\\r\\ndevices  drivers  drivers_autoprobe  drivers_probe  uevent\\r\\n```\\r\\n\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53555.9\u7684\u811a\u672c\u53ef\u4ee5\u904d\u5386\u6574\u4e2asysfs\uff0c\u5e76\u4e14dump\u51fa\u6765\u603b\u7ebf\u3001\u8bbe\u5907\u548c\u9a71\u52a8\u4fe1\u606f\u3002\\r\\n\u4ee3\u7801\u6e05\u53555.9\u3000\u904d\u5386sysfs\\r\\n\\r\\n```\\r\\n 1 #!/bin/bash\\r\\n 2\\r\\n 3   # Populate block devices\\r\\n 4\\r\\n 5   for i in /sys/block/*/dev /sys/block/*/*/dev\\r\\n 6   do\\r\\n 7     if [ -f $i ]\\r\\n 8     then\\r\\n 9       MAJOR=$(sed \'s/:.*//\' < $i)\\r\\n10       MINOR=$(sed \'s/.*://\' < $i)\\r\\n11       DEVNAME=$(echo $i | sed -e \'s@/dev@@\' -e \'s@.*/@@\')\\r\\n12       echo /dev/$DEVNAME b $MAJOR $MINOR\\r\\n13       #mknod /dev/$DEVNAME b $MAJOR $MINOR\\r\\n14     fi\\r\\n15   done\\r\\n16\\r\\n17   # Populate char devices\\r\\n18\\r\\n19   for i in /sys/bus/*/devices/*/dev /sys/class/*/*/dev\\r\\n20   do\\r\\n21     if [ -f $i ]\\r\\n22     then\\r\\n23       MAJOR=$(sed \'s/:.*//\' < $i)\\r\\n24       MINOR=$(sed \'s/.*://\' < $i)\\r\\n25       DEVNAME=$(echo $i | sed -e \'s@/dev@@\' -e \'s@.*/@@\')\\r\\n26       echo /dev/$DEVNAME c $MAJOR $MINOR\\r\\n27       #mknod /dev/$DEVNAME c $MAJOR $MINOR\\r\\n28     fi\\r\\n29   done\\r\\n```\\r\\n\\r\\n\\r\\n\u4e0a\u8ff0\u811a\u672c\u904d\u5386sysfs\uff0c\u627e\u51fa\u6240\u6709\u7684\u8bbe\u5907\uff0c\u5e76\u5206\u6790\u51fa\u6765\u8bbe\u5907\u540d\u548c\u4e3b\u6b21\u8bbe\u5907\u53f7\u3002\u5982\u679c\u6211\u4eec\u628a27\u884c\u524d\u7684\u201c#\u201d\u53bb\u6389\uff0c\u8be5\u811a\u672c\u5b9e\u9645\u4e0a\u8fd8\u53ef\u4ee5\u4e3a\u6574\u4e2a\u7cfb\u7edf\u4e2d\u7684\u8bbe\u5907\u5efa\u7acb/dev/\u4e0b\u9762\u7684\u8282\u70b9\u3002\\r\\n\\r\\n# 5.4.3\u3000udev\u7684\u7ec4\u6210\\r\\n\\r\\nudev\u76ee\u524d\u548csystemd\u9879\u76ee\u5408\u5e76\u5728\u4e00\u8d77\u4e86\uff0c\u89c1\u4f4d\u4e8ehttps://lwn.net/Articles/490413/ \u7684\u6587\u6863\u300aUdev and systemd to merge\u300b\uff0c\u53ef\u4ee5\u4ecehttp://cgit.freedesktop.org/systemd/ \u3001https://github.com/systemd/systemd \u7b49\u4f4d\u7f6e\u4e0b\u8f7d\u6700\u65b0\u7684\u4ee3\u7801\u3002udev\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u6267\u884c\uff0c\u52a8\u6001\u5efa\u7acb/\u5220\u9664\u8bbe\u5907\u6587\u4ef6\uff0c\u5141\u8bb8\u6bcf\u4e2a\u4eba\u90fd\u4e0d\u7528\u5173\u5fc3\u4e3b/\u6b21\u8bbe\u5907\u53f7\u800c\u63d0\u4f9bLSB\uff08Linux\u6807\u51c6\u89c4\u8303\uff0cLinux Standard Base\uff09\u540d\u79f0\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839\u636e\u9700\u8981\u56fa\u5b9a\u540d\u79f0\u3002udev\u7684\u5de5\u4f5c\u8fc7\u7a0b\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u5f53\u5185\u6838\u68c0\u6d4b\u5230\u7cfb\u7edf\u4e2d\u51fa\u73b0\u4e86\u65b0\u8bbe\u5907\u540e\uff0c\u5185\u6838\u4f1a\u901a\u8fc7netlink\u5957\u63a5\u5b57\u53d1\u9001uevent\u3002\\r\\n\\r\\n2\uff09udev\u83b7\u53d6\u5185\u6838\u53d1\u9001\u7684\u4fe1\u606f\uff0c\u8fdb\u884c\u89c4\u5219\u7684\u5339\u914d\u3002\u5339\u914d\u7684\u4e8b\u7269\u5305\u62ecSUBSYSTEM\u3001ACTION\u3001atttribute\u3001\u5185\u6838\u63d0\u4f9b\u7684\u540d\u79f0\uff08\u901a\u8fc7KERNEL=\uff09\u4ee5\u53ca\u5176\u4ed6\u7684\u73af\u5883\u53d8\u91cf\u3002\\r\\n\\r\\n\u5047\u8bbe\u5728Linux\u7cfb\u7edf\u4e0a\u63d2\u5165\u4e00\u4e2aKingston\u7684U\u76d8\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7udev\u7684\u5de5\u5177\u201cudevadm monitor--kernel--property--udev\u201d\u6355\u83b7\u5230\u7684uevent\u5305\u542b\u7684\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\nUDEV  [6328.797974] add\\r\\n/devices/pci0000:00/0000:00:0b.0/usb1/1-1/1-1:1.0/host7/target7:0:0/7:0:0:0/block/sdc (block)\\r\\nACTION=add\\r\\nDEVLINKS=/dev/disk/by-id/usb-Kingston_DataTraveler_2.0_5B8212000047-0:0 /dev/\\r\\n        disk/by-path/pci-0000:00:0b.0-usb-0:1:1.0-scsi-0:0:0:0\\r\\nDEVNAME=/dev/sdc\\r\\nDEVPATH=/devices/pci0000:00/0000:00:0b.0/usb1/1-1/1-1:1.0/host7/target7:0:0/7:0:0:0/\\r\\n         block/sdc\\r\\nDEVTYPE=disk\\r\\nID_BUS=usb\\r\\nID_INSTANCE=0:0\\r\\nID_MODEL=DataTraveler_2.0\\r\\nID_MODEL_ENC=DataTraveler\\\\x202.0\\r\\nID_MODEL_ID=6545\\r\\nID_PART_TABLE_TYPE=dos\\r\\nID_PATH=pci-0000:00:0b.0-usb-0:1:1.0-scsi-0:0:0:0\\r\\nID_PATH_TAG=pci-0000_00_0b_0-usb-0_1_1_0-scsi-0_0_0_0\\r\\nID_REVISION=PMAP\\r\\nID_SERIAL=Kingston_DataTraveler_2.0_5B8212000047-0:0\\r\\nID_SERIAL_SHORT=5B8212000047\\r\\nID_TYPE=disk\\r\\nID_USB_DRIVER=usb-storage\\r\\nID_USB_INTERFACES=:080650:\\r\\nID_USB_INTERFACE_NUM=00\\r\\nID_VENDOR=Kingston\\r\\nID_VENDOR_ENC=Kingston\\r\\nID_VENDOR_ID=0930\\r\\nMAJOR=8\\r\\nMINOR=32\\r\\nSEQNUM=2335\\r\\nSUBSYSTEM=block\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e9b\u4fe1\u606f\uff0c\u521b\u5efa\u4e00\u4e2a\u89c4\u5219\uff0c\u4ee5\u4fbf\u6bcf\u6b21\u63d2\u5165\u7684\u65f6\u5019\uff0c\u4e3a\u8be5\u76d8\u521b\u5efa\u4e00\u4e2a/dev/kingstonUD\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u8fd9\u4e2a\u89c4\u5219\u53ef\u4ee5\u5199\u6210\u4ee3\u7801\u6e05\u53555.10\u7684\u6837\u5b50\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53555.10\u3000\u8bbe\u5907\u547d\u540d\u89c4\u5219\u8303\u4f8b\\r\\n\\r\\n```\\r\\n# Kingston USB mass storage\\r\\nSUBSYSTEM==\\"block\\", ACTION==\\"add\\", KERNEL==\\"*sd \\", ENV{ID_TYPE}==\\"disk\\",\\r\\n     ENV{ID_VENDOR}==\\"Kingston\\", ENV{ID_USB_DRIVER}==\\"usb-storage\\", SYMLINK+=\\"kingstonUD\\"\\r\\n```\\r\\n\\r\\n\u63d2\u5165kingston U\u76d8\u540e\uff0c/dev/\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\uff1a\\r\\n\\r\\n```\\r\\nroot@barry-VirtualBox:/dev# ls -l kingstonUD\\r\\nlrwxrwxrwx 1 root root 3 Jun 30 19:31 kingstonUD -> sdc\\r\\n```\\r\\n\\r\\n# 5.4.4\u3000udev\u89c4\u5219\u6587\u4ef6\\r\\n\\r\\nudev\u7684\u89c4\u5219\u6587\u4ef6\u4ee5\u884c\u4e3a\u5355\u4f4d\uff0c\u4ee5\u201c#\u201d\u5f00\u5934\u7684\u884c\u4ee3\u8868\u6ce8\u91ca\u884c\u3002\u5176\u4f59\u7684\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u4e2a\u89c4\u5219\u3002\u6bcf\u4e2a\u89c4\u5219\u5206\u6210\u4e00\u4e2a\u6216\u591a\u4e2a\u5339\u914d\u90e8\u5206\u548c\u8d4b\u503c\u90e8\u5206\u3002\u5339\u914d\u90e8\u5206\u7528\u5339\u914d\u4e13\u7528\u7684\u5173\u952e\u5b57\u6765\u8868\u793a\uff0c\u76f8\u5e94\u7684\u8d4b\u503c\u90e8\u5206\u7528\u8d4b\u503c\u4e13\u7528\u7684\u5173\u952e\u5b57\u6765\u8868\u793a\u3002\u5339\u914d\u5173\u952e\u5b57\u5305\u62ec\uff1aACTION\uff08\u884c\u4e3a\uff09\u3001KERNEL\uff08\u5339\u914d\u5185\u6838\u8bbe\u5907\u540d\uff09\u3001BUS\uff08\u5339\u914d\u603b\u7ebf\u7c7b\u578b\uff09\u3001SUBSYSTEM\uff08\u5339\u914d\u5b50\u7cfb\u7edf\u540d\uff09\u3001ATTR\uff08\u5c5e\u6027\uff09\u7b49\uff0c\u8d4b\u503c\u5173\u952e\u5b57\u5305\u62ec\uff1aNAME\uff08\u521b\u5efa\u7684\u8bbe\u5907\u6587\u4ef6\u540d\uff09\u3001SYMLINK\uff08\u7b26\u53f7\u521b\u5efa\u94fe\u63a5\u540d\uff09\u3001OWNER\uff08\u8bbe\u7f6e\u8bbe\u5907\u7684\u6240\u6709\u8005\uff09\u3001GROUP\uff08\u8bbe\u7f6e\u8bbe\u5907\u7684\u7ec4\uff09\u3001IMPORT\uff08\u8c03\u7528\u5916\u90e8\u7a0b\u5e8f\uff09\u3001MODE\uff08\u8282\u70b9\u8bbf\u95ee\u6743\u9650\uff09\u7b49\u3002\\r\\n\\r\\n\u4f8b\u5982\uff0c\u5982\u4e0b\u89c4\u5219\uff1a\\r\\n\\r\\n```\\r\\nSUBSYSTEM==\\"net\\", ACTION==\\"add\\", DRIVERS==\\" *\\", ATTR{address}==\\"08:00:27:35:be:ff\\",\\r\\n        ATTR{dev_id}==\\"0x0\\", ATTR{type}==\\"1\\", KERNEL==\\"eth*\\", NAME=\\"eth1\\"\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684\u201c\u5339\u914d\u201d\u90e8\u5206\u5305\u62ecSUBSYSTEM\u3001ACTION\u3001ATTR\u3001KERNEL\u7b49\uff0c\u800c\u201c\u8d4b\u503c\u201d\u90e8\u5206\u6709\u4e00\u9879\uff0c\u662fNAME\u3002\u8fd9\u4e2a\u89c4\u5219\u7684\u610f\u601d\u662f\uff1a\u5f53\u7cfb\u7edf\u4e2d\u51fa\u73b0\u7684\u65b0\u786c\u4ef6\u5c5e\u4e8enet\u5b50\u7cfb\u7edf\u8303\u7574\uff0c\u7cfb\u7edf\u5bf9\u8be5\u786c\u4ef6\u91c7\u53d6\u7684\u52a8\u4f5c\u662f\u201cadd\u201d\u8fd9\u4e2a\u786c\u4ef6\uff0c\u4e14\u8fd9\u4e2a\u786c\u4ef6\u7684\u201caddress\u201d\u5c5e\u6027\u4fe1\u606f\u7b49\u4e8e\u201c08\uff1a00\uff1a27\uff1a35\uff1abe\uff1aff\u201d\uff0c\u201cdev_id\u201d\u5c5e\u6027\u7b49\u4e8e\u201c0x0\u201d\u3001\u201ctype\u201d\u5c5e\u6027\u4e3a1\u7b49\uff0c\u6b64\u65f6\uff0c\u5bf9\u8fd9\u4e2a\u786c\u4ef6\u5728udev\u5c42\u6b21\u65bd\u884c\u7684\u52a8\u4f5c\u662f\u521b\u5efa/dev/eth1\u3002\\r\\n\\r\\n\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u53ef\u4ee5\u770b\u51faudev\u548cdevfs\u5728\u547d\u540d\u65b9\u9762\u7684\u5dee\u5f02\u3002\u5982\u679c\u7cfb\u7edf\u4e2d\u6709\u4e24\u4e2aUSB\u6253\u5370\u673a\uff0c\u4e00\u4e2a\u53ef\u80fd\u88ab\u79f0\u4e3a/dev/usb/lp0\uff0c\u53e6\u5916\u4e00\u4e2a\u4fbf\u662f/dev/usb/lp1\u3002\u4f46\u662f\u5230\u5e95\u54ea\u4e2a\u6587\u4ef6\u5bf9\u5e94\u54ea\u4e2a\u6253\u5370\u673a\u662f\u65e0\u6cd5\u786e\u5b9a\u7684\uff0clp0\u3001lp1\u548c\u5b9e\u9645\u7684\u8bbe\u5907\u6ca1\u6709\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\uff0c\u6620\u5c04\u5173\u7cfb\u4f1a\u56e0\u8bbe\u5907\u53d1\u73b0\u7684\u987a\u5e8f\u3001\u6253\u5370\u673a\u672c\u8eab\u5173\u95ed\u7b49\u800c\u4e0d\u786e\u5b9a\u3002\u56e0\u6b64\uff0c\u7406\u60f3\u7684\u65b9\u5f0f\u662f\u4e24\u4e2a\u6253\u5370\u673a\u5e94\u8be5\u91c7\u7528\u57fa\u4e8e\u5b83\u4eec\u7684\u5e8f\u5217\u53f7\u6216\u8005\u5176\u4ed6\u6807\u8bc6\u4fe1\u606f\u7684\u529e\u6cd5\u6765\u8fdb\u884c\u786e\u5b9a\u7684\u6620\u5c04\uff0cdevfs\u65e0\u6cd5\u505a\u5230\u8fd9\u4e00\u70b9\uff0cudev\u5374\u53ef\u4ee5\u505a\u5230\u3002\u4f7f\u7528\u5982\u4e0b\u89c4\u5219\uff1a\\r\\n\\r\\n```\\r\\nSUBSYSTEM=\\"usb\\",ATTR{serial}=\\"HXOLL0012202323480\\",NAME=\\"lp_epson\\",SYMLINK+=\\"printers/\\r\\n         epson_stylus\\"\\r\\n```\\r\\n\\r\\n\u8be5\u89c4\u5219\u4e2d\u7684\u5339\u914d\u9879\u76ee\u6709SUBSYSTEM\u548cATTR\uff0c\u8d4b\u503c\u9879\u76ee\u4e3aNAME\u548cSYMLINK\uff0c\u5b83\u610f\u5473\u7740\u5f53\u4e00\u53f0USB\u6253\u5370\u673a\u7684\u5e8f\u5217\u53f7\u4e3a\u201cHXOLL0012202323480\u201d\u65f6\uff0c\u521b\u5efa/dev/lp_epson\u6587\u4ef6\uff0c\u5e76\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5/dev/printers/epson_styles\u3002\u5e8f\u5217\u53f7\u4e3a\u201cHXOLL0012202323480\u201d\u7684USB\u6253\u5370\u673a\u4e0d\u7ba1\u4f55\u65f6\u88ab\u63d2\u5165\uff0c\u5bf9\u5e94\u7684\u8bbe\u5907\u540d\u90fd\u662f/dev/lp_epson\uff0c\u800cdevfs\u663e\u7136\u65e0\u6cd5\u5b9e\u73b0\u8bbe\u5907\u7684\u8fd9\u79cd\u56fa\u5b9a\u547d\u540d\u3002\\r\\n\\r\\nudev\u89c4\u5219\u7684\u5199\u6cd5\u975e\u5e38\u7075\u6d3b\uff0c\u5728\u5339\u914d\u90e8\u5206\uff0c\u53ef\u4ee5\u901a\u8fc7\u201c*\u201d\u3001\u201c\uff1f\u201d\u3001[a~c]\u3001[1~9]\u7b49shell\u901a\u914d\u7b26\u6765\u7075\u6d3b\u5339\u914d\u591a\u4e2a\u9879\u76ee\u3002*\u7c7b\u4f3c\u4e8eshell\u4e2d\u7684*\u901a\u914d\u7b26\uff0c\u4ee3\u66ff\u4efb\u610f\u957f\u5ea6\u7684\u4efb\u610f\u5b57\u7b26\u4e32\uff0c\uff1f\u4ee3\u66ff\u4e00\u4e2a\u5b57\u7b26\u3002\u6b64\u5916\uff0c%k\u5c31\u662fKERNEL\uff0c%n\u5219\u662f\u8bbe\u5907\u7684KERNEL\u5e8f\u53f7\uff08\u5982\u5b58\u50a8\u8bbe\u5907\u7684\u5206\u533a\u53f7\uff09\u3002\\r\\n\\r\\n\u53ef\u4ee5\u501f\u52a9udev\u4e2d\u7684udevadm info\u5de5\u5177\u67e5\u627e\u89c4\u5219\u6587\u4ef6\u80fd\u5229\u7528\u7684\u5185\u6838\u4fe1\u606f\u548csysfs\u5c5e\u6027\u4fe1\u606f\uff0c\u5982\u8fd0\u884c\u201cudevadm info-a-p/sys/devices/platform/serial8250/tty/ttyS0\u201d\u547d\u4ee4\u5c06\u5f97\u5230\uff1a\\r\\n\\r\\n```\\r\\nudevadm info -a -p  /sys/devices/platform/serial8250/tty/ttyS0\\r\\nUdevadm info starts with the device specified by the devpath and then\\r\\nwalks up the chain of parent devices. It prints for every device\\r\\nfound, all possible attributes in the udev rules key format.\\r\\nA rule to match, can be composed by the attributes of the device\\r\\nand the attributes from one single parent device.\\r\\n  looking at device \'/devices/platform/serial8250/tty/ttyS0\':\\r\\n    KERNEL==\\"ttyS0\\"\\r\\n    SUBSYSTEM==\\"tty\\"\\r\\n    DRIVER==\\"\\"\\r\\n    ATTR{irq}==\\"4\\"\\r\\n    ATTR{line}==\\"0\\"\\r\\n    ATTR{port}==\\"0x3F8\\"\\r\\n    ATTR{type}==\\"0\\"\\r\\n    ATTR{flags}==\\"0x10000040\\"\\r\\n    ATTR{iomem_base}==\\"0x0\\"\\r\\n    ATTR{custom_divisor}==\\"0\\"\\r\\n    ATTR{iomem_reg_shift}==\\"0\\"\\r\\n    ATTR{uartclk}==\\"1843200\\"\\r\\n    ATTR{xmit_fifo_size}==\\"0\\"\\r\\n    ATTR{close_delay}==\\"50\\"\\r\\n    ATTR{closing_wait}==\\"3000\\"\\r\\n    ATTR{io_type}==\\"0\\"\\r\\n  looking at parent device \'/devices/platform/serial8250\':\\r\\n    KERNELS==\\"serial8250\\"\\r\\n    SUBSYSTEMS==\\"platform\\"\\r\\n    DRIVERS==\\"serial8250\\"\\r\\n  looking at parent device \'/devices/platform\':\\r\\n    KERNELS==\\"platform\\"\\r\\n    SUBSYSTEMS==\\"\\"\\r\\n    DRIVERS==\\"\\"\\r\\n```\\r\\n\\r\\n\u5982\u679c/dev/\u4e0b\u9762\u7684\u8282\u70b9\u5df2\u7ecf\u88ab\u521b\u5efa\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u5b83\u5bf9\u5e94\u7684/sys\u5177\u4f53\u8282\u70b9\u8def\u5f84\uff0c\u53ef\u4ee5\u91c7\u7528\u201cudevadm info-a-p$\uff08udevadm info-q path-n/dev/<\u8282\u70b9\u540d>\uff09\u201d\u547d\u4ee4\u53cd\u5411\u5206\u6790\uff0c\u6bd4\u5982\uff1a\\r\\n\\r\\n```\\r\\nudevadm info -a -p  $(udevadm info -q path -n /dev/sdb)\\r\\nUdevadm info starts with the device specified by the devpath and then\\r\\nwalks up the chain of parent devices. It prints for every device\\r\\nfound, all possible attributes in the udev rules key format.\\r\\nA rule to match, can be composed by the attributes of the device\\r\\nand the attributes from one single parent device.\\r\\n  looking at device \'/devices/pci0000:00/0000:00:0d.0/ata4/host3/target3:0:0/3:0:0:0/block/sdb\':\\r\\n    KERNEL==\\"sdb\\"\\r\\n    SUBSYSTEM==\\"block\\"\\r\\n    DRIVER==\\"\\"\\r\\n    ATTR{ro}==\\"0\\"\\r\\n    ATTR{size}==\\"71692288\\"\\r\\n    ATTR{stat}==\\"     584     1698     4669     7564        0        0        0\\r\\n        0        0     7564     7564\\"\\r\\n    ATTR{range}==\\"16\\"\\r\\n    ATTR{discard_alignment}==\\"0\\"\\r\\n    ATTR{events}==\\"\\"\\r\\n    ATTR{ext_range}==\\"256\\"\\r\\n    ATTR{events_poll_msecs}==\\"-1\\"\\r\\n    ATTR{alignment_offset}==\\"0\\"\\r\\n    ATTR{inflight}==\\"       0        0\\"\\r\\n    ATTR{removable}==\\"0\\"\\r\\n    ATTR{capability}==\\"50\\"\\r\\n    ATTR{events_async}==\\"\\"\\r\\n  looking at parent device \'/devices/pci0000:00/0000:00:0d.0/ata4/host3/\\r\\n           target3:0:0/3:0:0:0\':\\r\\n    KERNELS==\\"3:0:0:0\\"\\r\\n    SUBSYSTEMS==\\"scsi\\"\\r\\n    DRIVERS==\\"sd\\"\\r\\n    ATTRS{rev}==\\"1.0 \\"\\r\\n    ATTRS{type}==\\"0\\"\\r\\n    ATTRS{scsi_level}==\\"6\\"\\r\\n    ATTRS{model}==\\"VBOX HARDDISK   \\"\\r\\n    ATTRS{state}==\\"running\\"\\r\\n    ATTRS{queue_type}==\\"simple\\"\\r\\n    ATTRS{iodone_cnt}==\\"0x299\\"\\r\\n    ATTRS{iorequest_cnt}==\\"0x29a\\"\\r\\n    ATTRS{queue_ramp_up_period}==\\"120000\\"\\r\\n    ATTRS{timeout}==\\"30\\"\\r\\n    ATTRS{evt_media_change}==\\"0\\"\\r\\n    ATTRS{ioerr_cnt}==\\"0x7\\"\\r\\n    ATTRS{queue_depth}==\\"31\\"\\r\\n    ATTRS{vendor}==\\"ATA     \\"\\r\\n    ATTRS{device_blocked}==\\"0\\"\\r\\n    ATTRS{iocounterbits}==\\"32\\"\\r\\n  looking at parent device \'/devices/pci0000:00/0000:00:0d.0/ata4/host3/\\r\\n           target3:0:0\':\\r\\n    KERNELS==\\"target3:0:0\\"\\r\\n    SUBSYSTEMS==\\"scsi\\"\\r\\n    DRIVERS==\\"\\"\\r\\n  looking at parent device \'/devices/pci0000:00/0000:00:0d.0/ata4/host3\':\\r\\n    KERNELS==\\"host3\\"\\r\\n    SUBSYSTEMS==\\"scsi\\"\\r\\n    DRIVERS==\\"\\"\\r\\n  looking at parent device \'/devices/pci0000:00/0000:00:0d.0/ata4\':\\r\\n    KERNELS==\\"ata4\\"\\r\\n    SUBSYSTEMS==\\"\\"\\r\\n    DRIVERS==\\"\\"\\r\\n  looking at parent device \'/devices/pci0000:00/0000:00:0d.0\':\\r\\n    KERNELS==\\"0000:00:0d.0\\"\\r\\n    SUBSYSTEMS==\\"pci\\"\\r\\n    DRIVERS==\\"ahci\\"\\r\\n    ATTRS{irq}==\\"21\\"\\r\\n    ATTRS{subsystem_vendor}==\\"0x0000\\"\\r\\n    ATTRS{broken_parity_status}==\\"0\\"\\r\\n    ATTRS{class}==\\"0x010601\\"\\r\\n    ATTRS{consistent_dma_mask_bits}==\\"64\\"\\r\\n    ATTRS{dma_mask_bits}==\\"64\\"\\r\\n    ATTRS{local_cpus}==\\"ff\\"\\r\\n    ATTRS{device}==\\"0x2829\\"\\r\\n    ATTRS{enable}==\\"1\\"\\r\\n    ATTRS{msi_bus}==\\"\\"\\r\\n    ATTRS{local_cpulist}==\\"0-7\\"\\r\\n    ATTRS{vendor}==\\"0x8086\\"\\r\\n    ATTRS{subsystem_device}==\\"0x0000\\"\\r\\n    ATTRS{d3cold_allowed}==\\"1\\"\\r\\n  looking at parent device \'/devices/pci0000:00\':\\r\\n    KERNELS==\\"pci0000:00\\"\\r\\n    SUBSYSTEMS==\\"\\"\\r\\n    DRIVERS==\\"\\"\\r\\n```\\r\\n\\r\\n\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u7528udev\u7684\u8f7b\u91cf\u7ea7\u7248\u672cmdev\uff0cmdev\u96c6\u6210\u4e8ebusybox\u4e2d\u3002\u5728\u7f16\u8bd1busybox\u7684\u65f6\u5019\uff0c\u9009\u4e2dmdev\u76f8\u5173\u9879\u76ee\u5373\u53ef\u3002\\r\\n\\r\\nAndroid\u4e5f\u6ca1\u6709\u91c7\u7528udev\uff0c\u5b83\u91c7\u7528\u7684\u662fvold\u3002vold\u7684\u673a\u5236\u548cudev\u662f\u4e00\u6837\u7684\uff0c\u7406\u89e3\u4e86udev\uff0c\u4e5f\u5c31\u7406\u89e3\u4e86vold\u3002Android\u7684\u6e90\u4ee3\u7801NetlinkManager.cpp\u540c\u6837\u662f\u76d1\u542c\u57fa\u4e8enetlink\u7684\u5957\u63a5\u5b57\uff0c\u5e76\u89e3\u6790\u6536\u5230\u7684\u6d88\u606f\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3","description":"\u5e76\u53d1\u548c\u7ade\u6001\u5e7f\u6cdb\u5b58\u5728\uff0c\u4e2d\u65ad\u5c4f\u853d\u3001\u539f\u5b50\u64cd\u4f5c\u3001\u81ea\u65cb\u9501\u548c\u4e92\u65a5\u4f53\u90fd\u662f\u89e3\u51b3\u5e76\u53d1\u95ee\u9898\u7684\u673a\u5236\u3002\u4e2d\u65ad\u5c4f\u853d\u5f88\u5c11\u5355\u72ec\u88ab\u4f7f\u7528\uff0c\u539f\u5b50\u64cd\u4f5c\u53ea\u80fd\u9488\u5bf9\u6574\u6570\u8fdb\u884c\uff0c\u56e0\u6b64\u81ea\u65cb\u9501\u548c\u4e92\u65a5\u4f53\u5e94\u7528\u6700\u4e3a\u5e7f\u6cdb\u3002","date":"2025-09-15T14:44:14.425Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.62,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"5.4.1\u3000udev\u4e0edevfs\u7684\u533a\u522b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.4\u3000udev\u7528\u6237\u7a7a\u95f4\u8bbe\u5907\u7ba1\u7406"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3"}},"content":"\u5e76\u53d1\u548c\u7ade\u6001\u5e7f\u6cdb\u5b58\u5728\uff0c\u4e2d\u65ad\u5c4f\u853d\u3001\u539f\u5b50\u64cd\u4f5c\u3001\u81ea\u65cb\u9501\u548c\u4e92\u65a5\u4f53\u90fd\u662f\u89e3\u51b3\u5e76\u53d1\u95ee\u9898\u7684\u673a\u5236\u3002\u4e2d\u65ad\u5c4f\u853d\u5f88\u5c11\u5355\u72ec\u88ab\u4f7f\u7528\uff0c\u539f\u5b50\u64cd\u4f5c\u53ea\u80fd\u9488\u5bf9\u6574\u6570\u8fdb\u884c\uff0c\u56e0\u6b64\u81ea\u65cb\u9501\u548c\u4e92\u65a5\u4f53\u5e94\u7528\u6700\u4e3a\u5e7f\u6cdb\u3002\\r\\n\\r\\n\u81ea\u65cb\u9501\u4f1a\u5bfc\u81f4\u6b7b\u5faa\u73af\uff0c\u9501\u5b9a\u671f\u95f4\u4e0d\u5141\u8bb8\u963b\u585e\uff0c\u56e0\u6b64\u8981\u6c42\u9501\u5b9a\u7684\u4e34\u754c\u533a\u5c0f\u3002\\r\\n\\r\\n\u4e92\u65a5\u4f53\u5141\u8bb8\u4e34\u754c\u533a\u963b\u585e\uff0c\u53ef\u4ee5\u9002\u7528\u4e8e\u4e34\u754c\u533a\u5927\u7684\u60c5\u51b5\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3","description":"Linux\u7a0b\u5e8f\u7684\u8c03\u8bd5\uff0c\u5c24\u5176\u662f\u5185\u6838\u7684\u8c03\u8bd5\u770b\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u6ca1\u6709\u7c7b\u4f3c\u4e8eVC++\u3001Tornado\u7684IDE\u5f00\u53d1\u73af\u5883\uff0c\u6700\u5e38\u7528\u7684\u8c03\u8bd5\u624b\u6bb5\u4f9d\u7136\u662f\u6587\u672c\u65b9\u5f0f\u7684GDB\u3002\u6587\u672c\u65b9\u5f0f\u7684GDB\u8c03\u8bd5\u5668\u529f\u80fd\u5f02\u5e38\u5f3a\u5927\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u4e60\u60ef\u540e\uff0c\u5c31\u4f1a\u7528\u5f97\u975e\u5e38\u81ea\u7136\u3002","date":"2025-09-15T14:44:14.413Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.025,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.10\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6"}},"content":"Linux\u7a0b\u5e8f\u7684\u8c03\u8bd5\uff0c\u5c24\u5176\u662f\u5185\u6838\u7684\u8c03\u8bd5\u770b\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u6ca1\u6709\u7c7b\u4f3c\u4e8eVC++\u3001Tornado\u7684IDE\u5f00\u53d1\u73af\u5883\uff0c\u6700\u5e38\u7528\u7684\u8c03\u8bd5\u624b\u6bb5\u4f9d\u7136\u662f\u6587\u672c\u65b9\u5f0f\u7684GDB\u3002\u6587\u672c\u65b9\u5f0f\u7684GDB\u8c03\u8bd5\u5668\u529f\u80fd\u5f02\u5e38\u5f3a\u5927\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u4e60\u60ef\u540e\uff0c\u5c31\u4f1a\u7528\u5f97\u975e\u5e38\u81ea\u7136\u3002\\r\\n\\r\\nLinux\u5185\u6838\u9a71\u52a8\u7684\u8c03\u8bd5\u65b9\u6cd5\u5305\u62ec\u201c\u63d2\u6869\u201d\u3001\u4f7f\u7528\u4eff\u771f\u5668\u548c\u501f\u52a9printk\uff08\uff09\u3001Oops\u3001strace\u7b49\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u539f\u59cb\u7684printk\uff08\uff09\u4ecd\u7136\u662f\u6700\u6709\u6548\u7684\u624b\u6bb5\u3002\\r\\n\\r\\n\u9664\u4e86\u672c\u7ae0\u4ecb\u7ecd\u7684\u65b9\u6cd5\u5916\uff0c\u5728\u9a71\u52a8\u7684\u8c03\u8bd5\u4e2d\u5f88\u53ef\u80fd\u8fd8\u4f1a\u501f\u52a9\u5176\u4ed6\u7684\u786c\u4ef6\u6216\u8f6f\u4ef6\u8c03\u8bd5\u5de5\u5177\uff0c\u5982\u8c03\u8bd5USB\u9a71\u52a8\u6700\u597d\u501f\u52a9USB\u5206\u6790\u4eea\uff0c\u7528USB\u5206\u6790\u4eea\u5c06\u53ef\u6355\u83b7USB\u901a\u4fe1\u4e2d\u7684\u6570\u636e\u5305\uff0c\u5982\u540c\u7f51\u7edc\u4e2d\u7684Sniffer\u8f6f\u4ef6\u4e00\u6837\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6","description":"\u4e3a\u4e86\u8ba9Linux\u5728\u4e00\u4e2a\u5168\u65b0\u7684ARM SoC\u4e0a\u8fd0\u884c\uff0c\u9700\u8981\u63d0\u4f9b\u5927\u91cf\u7684\u5e95\u5c42\u652f\u6491\uff0c\u5982\u5b9a\u65f6\u5668\u8282\u62cd\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u3001SMP\u542f\u52a8\u3001CPU\u70ed\u63d2\u62d4\u4ee5\u53ca\u5e95\u5c42\u7684GPIO\u3001\u65f6\u949f\u3001pinctrl\u548cDMA\u786c\u4ef6\u7684\u5c01\u88c5\u7b49\u3002\u5b9a\u65f6\u5668\u8282\u62cd\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u3001SMP\u542f\u52a8\u548cCPU\u70ed\u63d2\u62d4\u8fd9\u51e0\u90e8\u5206\u76f8\u5bf9\u6765\u8bf4\u6ca1\u6709\u50cf\u65e9\u671fGPIO\u3001\u65f6\u949f\u3001pinctrl\u548cDMA\u7684\u5b9e\u73b0\u90a3\u4e48\u6742\u4e71\uff0c\u57fa\u672c\u4e0a\u6709\u4e2a\u56fa\u5b9a\u7684\u5957\u8def\u3002\u5b9a\u65f6\u5668\u8282\u62cd\u4e3aLinux\u57fa\u4e8e\u65f6\u95f4\u7247\u7684\u8c03\u5ea6\u673a\u5236\u4ee5\u53ca\u5185\u6838\u548c\u7528\u6237\u7a7a\u95f4\u7684\u5b9a\u65f6\u5668\u63d0\u4f9b\u652f\u6491\uff0c\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u9a71\u52a8\u5219\u4f7f\u5f97Linux\u5185\u6838\u7684\u5de5\u7a0b\u5e08\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528localirqdisable\uff08\uff09\u3001disable_irq\uff08\uff09\u7b49\u901a\u7528\u7684\u4e2d\u65adAPI\uff0c\u800cSMP\u542f\u52a8\u652f\u6301\u5219\u7528\u4e8e\u8ba9SoC\u5185\u90e8\u7684\u591a\u4e2aCPU\u6838\u90fd\u6295\u5165\u8fd0\u884c\uff0cCPU\u70ed\u63d2\u62d4\u5219\u8fd0\u884c\u8fd0\u884c\u65f6\u6302\u8f7d\u6216\u62d4\u9664CPU\u3002\u8fd9\u4e9b\u5de5\u4f5c\uff0c\u5728Linux 3.0\u4e4b\u540e\u7684\u5185\u6838\u4e2d\uff0cLinux\u793e\u533a\u5bf9\u6bd4\u9010\u6b65\u8fdb\u884c\u4e86\u826f\u597d\u7684\u5c42\u6b21\u5212\u5206\u548c\u67b6\u6784\u8bbe\u8ba1\u3002","date":"2025-09-15T14:44:14.397Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.26,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.13\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b"}},"content":"\u4e3a\u4e86\u8ba9Linux\u5728\u4e00\u4e2a\u5168\u65b0\u7684ARM SoC\u4e0a\u8fd0\u884c\uff0c\u9700\u8981\u63d0\u4f9b\u5927\u91cf\u7684\u5e95\u5c42\u652f\u6491\uff0c\u5982\u5b9a\u65f6\u5668\u8282\u62cd\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u3001SMP\u542f\u52a8\u3001CPU\u70ed\u63d2\u62d4\u4ee5\u53ca\u5e95\u5c42\u7684GPIO\u3001\u65f6\u949f\u3001pinctrl\u548cDMA\u786c\u4ef6\u7684\u5c01\u88c5\u7b49\u3002\u5b9a\u65f6\u5668\u8282\u62cd\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u3001SMP\u542f\u52a8\u548cCPU\u70ed\u63d2\u62d4\u8fd9\u51e0\u90e8\u5206\u76f8\u5bf9\u6765\u8bf4\u6ca1\u6709\u50cf\u65e9\u671fGPIO\u3001\u65f6\u949f\u3001pinctrl\u548cDMA\u7684\u5b9e\u73b0\u90a3\u4e48\u6742\u4e71\uff0c\u57fa\u672c\u4e0a\u6709\u4e2a\u56fa\u5b9a\u7684\u5957\u8def\u3002\u5b9a\u65f6\u5668\u8282\u62cd\u4e3aLinux\u57fa\u4e8e\u65f6\u95f4\u7247\u7684\u8c03\u5ea6\u673a\u5236\u4ee5\u53ca\u5185\u6838\u548c\u7528\u6237\u7a7a\u95f4\u7684\u5b9a\u65f6\u5668\u63d0\u4f9b\u652f\u6491\uff0c\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u9a71\u52a8\u5219\u4f7f\u5f97Linux\u5185\u6838\u7684\u5de5\u7a0b\u5e08\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528local_irq_disable\uff08\uff09\u3001disable_irq\uff08\uff09\u7b49\u901a\u7528\u7684\u4e2d\u65adAPI\uff0c\u800cSMP\u542f\u52a8\u652f\u6301\u5219\u7528\u4e8e\u8ba9SoC\u5185\u90e8\u7684\u591a\u4e2aCPU\u6838\u90fd\u6295\u5165\u8fd0\u884c\uff0cCPU\u70ed\u63d2\u62d4\u5219\u8fd0\u884c\u8fd0\u884c\u65f6\u6302\u8f7d\u6216\u62d4\u9664CPU\u3002\u8fd9\u4e9b\u5de5\u4f5c\uff0c\u5728Linux 3.0\u4e4b\u540e\u7684\u5185\u6838\u4e2d\uff0cLinux\u793e\u533a\u5bf9\u6bd4\u9010\u6b65\u8fdb\u884c\u4e86\u826f\u597d\u7684\u5c42\u6b21\u5212\u5206\u548c\u67b6\u6784\u8bbe\u8ba1\u3002\\r\\n\\r\\n\u5728GPIO\u3001\u65f6\u949f\u3001pinctrl\u548cDMA\u9a71\u52a8\u65b9\u9762\uff0c\u5728Linux 2.6\u65f6\u4ee3\uff0c\u5185\u6838\u5df2\u6216\u591a\u6216\u5c11\u6709GPIO\u3001\u65f6\u949f\u7b49\u5e95\u5c42\u9a71\u52a8\u7684\u67b6\u6784\uff0c\u4f46\u662f\u6838\u5fc3\u5c42\u7684\u4ee3\u7801\u592a\u8584\u5f31\uff0c\u5404SoC\u5728\u8fd9\u4e9b\u57fa\u7840\u8bbe\u65bd\u5b9e\u73b0\u65b9\u9762\u5b58\u5728\u5de8\u5927\u5dee\u5f02\uff0c\u800c\u4e14\u6bcf\u4e2aSoC\u4ecd\u7136\u9700\u8981\u5b9e\u73b0\u5927\u91cf\u7684\u4ee3\u7801\u3002pinctrl\u548cDMA\u5219\u6700\u4e3a\u6df7\u4e71\uff0c\u51e0\u4e4e\u5404\u5bb6\u516c\u53f8\u90fd\u5b9a\u4e49\u4e86\u81ea\u5df1\u72ec\u7279\u7684\u5b9e\u73b0\u548cAPI\u3002\\r\\n\\r\\n\u793e\u533a\u5fc5\u987b\u6539\u53d8\u8fd9\u79cd\u5c40\u9762\uff0c\u4e8e\u662fLinux\u793e\u533a\u57282011\u5e74\u540e\u8fdb\u884c\u4e86\u5982\u4e0b\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u5728\u76ee\u524d\u7684Linux\u5185\u6838\u4e2d\u57fa\u672c\u51c6\u5907\u5c31\u7eea\uff1a\\r\\n\\r\\n- \xb7STEricsson\u516c\u53f8\u7684\u5de5\u7a0b\u5e08Linus Walleij\u63d0\u4f9b\u4e86\u65b0\u7684pinctrl\u9a71\u52a8\u67b6\u6784\uff0c\u5185\u6838\u4e2d\u65b0\u589e\u52a0\u4e00\u4e2adrivers/pinctrl\u76ee\u5f55\uff0c\u652f\u6491SoC\u4e0a\u7684\u5f15\u811a\u590d\u7528\uff0c\u5404\u4e2aSoC\u7684\u5b9e\u73b0\u4ee3\u7801\u7edf\u4e00\u653e\u5165\u8be5\u76ee\u5f55\u3002\\r\\n- \xb7TI\u516c\u53f8\u7684\u5de5\u7a0b\u5e08Mike Turquette\u63d0\u4f9b\u4e86\u901a\u8fc7\u65f6\u949f\u6846\u67b6\uff0c\u8ba9\u5177\u4f53SoC\u5b9e\u73b0clk_ops\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u5e76\u901a\u8fc7clk_register\uff08\uff09\u3001clk_register_clkdev\uff08\uff09\u6ce8\u518c\u65f6\u949f\u6e90\u4ee5\u53ca\u6e90\u4e0e\u8bbe\u5907\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u5177\u4f53\u7684\u65f6\u949f\u9a71\u52a8\u90fd\u7edf\u4e00\u8fc1\u79fb\u5230drivers/clk\u76ee\u5f55\u4e2d\u3002\\r\\n- \xb7\u5efa\u8bae\u5404SoC\u7edf\u4e00\u91c7\u7528dmaengine\u67b6\u6784\u5b9e\u73b0DMA\u9a71\u52a8\uff0c\u8be5\u67b6\u6784\u63d0\u4f9b\u4e86\u901a\u7528\u7684DMA\u901a\u9053API\uff0c\u5982dmaengine_prep_slave_single\uff08\uff09\u3001dmaengine_submit\uff08\uff09\u7b49\uff0c\u8981\u6c42SoC\u5b9e\u73b0dma_device\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b9e\u73b0\u4ee3\u7801\u7edf\u4e00\u653e\u5165drivers/dma\u76ee\u5f55\u4e2d\u3002\\r\\n- \xb7\u5728GPIO\u65b9\u9762\uff0cdrivers/gpio\u4e0b\u7684gpiolib\u5df2\u80fd\u4e0e\u65b0\u7684pinctrl\u5b8c\u7f8e\u5171\u5b58\uff0c\u5b9e\u73b0\u5f15\u811a\u7684GPIO\u548c\u5176\u4ed6\u529f\u80fd\u4e4b\u95f4\u7684\u590d\u7528\uff0c\u5177\u4f53\u7684SoC\u53ea\u9700\u5b9e\u73b0\u901a\u7528\u7684gpio_chip\u7ed3\u6784\u4f53\u7684\u6210\u5458\u51fd\u6570\u3002\\r\\n\\r\\n\u7ecf\u8fc7\u4ee5\u4e0a\u5de5\u4f5c\uff0c\u57fa\u672c\u4e0a\u5c31\u628a\u82af\u7247\u5e95\u5c42\u57fa\u7840\u67b6\u6784\u65b9\u9762\u7684\u9a71\u52a8\u67b6\u6784\u7edf\u4e00\u4e86\uff0c\u5b9e\u73b0\u65b9\u6cd5\u4e5f\u7edf\u4e00\u4e86\u3002\u53e6\u5916\uff0c\u76ee\u524dGPIO\u3001\u65f6\u949f\u3001pinmux\u7b49\u90fd\u80fd\u826f\u597d\u5730\u8fdb\u884c\u8bbe\u5907\u6811\u7684\u6620\u5c04\u5904\u7406\uff0c\u8b6c\u5982\u6211\u4eec\u53ef\u4ee5\u65b9\u4fbf\u5730\u5728.dts\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u8bbe\u5907\u8981\u7684\u65f6\u949f\u3001pinmux\u5f15\u811a\u4ee5\u53caGPIO\u3002\\r\\n\\r\\n\u9664\u4e86\u4e0a\u8ff0\u57fa\u7840\u8bbe\u65bd\u4ee5\u5916\uff0c\u5728\u5c06Linux\u79fb\u690d\u5165\u65b0\u7684SoC\u8fc7\u7a0b\u4e2d\uff0c\u5de5\u7a0b\u5e08\u5e38\u5e38\u5f3a\u70c8\u4f9d\u8d56\u4e8e\u65e9\u671f\u7684printk\u529f\u80fd\uff0c\u5185\u6838\u5219\u63d0\u4f9b\u4e86\u76f8\u5173\u7684DEBUG_LL\u548cEARLY_PRINTK\u652f\u6301\uff0c\u53ea\u9700\u8981SoC\u63d0\u4f9b\u5546\u5b9e\u73b0\u5c11\u91cf\u7684\u56de\u8c03\u51fd\u6570\u6216\u5b8f\u3002\\r\\n\\r\\n\u672c\u7ae0\u4e3b\u8981\u5bf9\u4e0a\u8ff0\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u8fdb\u884c\u67b6\u6784\u4e0a\u7684\u5256\u6790\u4ee5\u53ca\u5bf9\u5173\u952e\u7684\u5b9e\u73b0\u90e8\u5206\u7684\u5b9e\u4f8b\u5206\u6790\uff0c\u4ee5\u6c42\u5b8c\u6574\u5f52\u7eb3\u51fa\u5c06Linux\u79fb\u690d\u5165\u65b0SoC\u7684\u4e3b\u8981\u5de5\u4f5c\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b","description":"\u4ece14.1\u8282\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u7ed3\u6784\u5206\u6790\u53ef\u77e5\uff0cLinux\u7f51\u7edc\u5b50\u7cfb\u7edf\u5728\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0c\u4f1a\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684hardstarttransmit\uff08\uff09\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u542f\u52a8\u6570\u636e\u5305\u7684\u53d1\u9001\u3002\u5728\u8bbe\u5907\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u9700\u88ab\u521d\u59cb\u5316\u4ee5\u6307\u5411\u8bbe\u5907\u7684xxx_tx\uff08\uff09\u51fd\u6570\u3002","date":"2025-09-15T14:44:14.389Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.78,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.1\u3000ARM Linux\u5e95\u5c42\u9a71\u52a8\u7684\u7ec4\u6210\u548c\u73b0\u72b6"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838"}},"content":"\u4ece14.1\u8282\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u7ed3\u6784\u5206\u6790\u53ef\u77e5\uff0cLinux\u7f51\u7edc\u5b50\u7cfb\u7edf\u5728\u53d1\u9001\u6570\u636e\u5305\u65f6\uff0c\u4f1a\u8c03\u7528\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u7684hard_start_transmit\uff08\uff09\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7528\u4e8e\u542f\u52a8\u6570\u636e\u5305\u7684\u53d1\u9001\u3002\u5728\u8bbe\u5907\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\u9700\u88ab\u521d\u59cb\u5316\u4ee5\u6307\u5411\u8bbe\u5907\u7684xxx_tx\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u5b8c\u6210\u6570\u636e\u5305\u53d1\u9001\u7684\u6d41\u7a0b\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4ece\u4e0a\u5c42\u534f\u8bae\u4f20\u9012\u8fc7\u6765\u7684sk_buff\u53c2\u6570\u83b7\u5f97\u6570\u636e\u5305\u7684\u6709\u6548\u6570\u636e\u548c\u957f\u5ea6\uff0c\u5c06\u6709\u6548\u6570\u636e\u653e\u5165\u4e34\u65f6\u7f13\u51b2\u533a\u3002\\r\\n\\r\\n2\uff09\u5bf9\u4e8e\u4ee5\u592a\u7f51\uff0c\u5982\u679c\u6709\u6548\u6570\u636e\u7684\u957f\u5ea6\u5c0f\u4e8e\u4ee5\u592a\u7f51\u51b2\u7a81\u68c0\u6d4b\u6240\u8981\u6c42\u6570\u636e\u5e27\u7684\u6700\u5c0f\u957f\u5ea6ETH_ZLEN\uff0c\u5219\u7ed9\u4e34\u65f6\u7f13\u51b2\u533a\u7684\u672b\u5c3e\u586b\u51450\u3002\\r\\n\\r\\n3\uff09\u8bbe\u7f6e\u786c\u4ef6\u7684\u5bc4\u5b58\u5668\uff0c\u9a71\u4f7f\u7f51\u7edc\u8bbe\u5907\u8fdb\u884c\u6570\u636e\u53d1\u9001\u64cd\u4f5c\u3002\\r\\n\\r\\n\u5b8c\u6210\u4ee5\u4e0a3\u4e2a\u6b65\u9aa4\u7684\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u6570\u636e\u5305\u53d1\u9001\u51fd\u6570\u6a21\u677f\u5982\u4ee3\u7801\u6e05\u535514.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.7\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u6570\u636e\u5305\u53d1\u9001\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1int xxx_tx(struct sk_buff *skb, struct net_device *dev)\\r\\n 2{\\r\\n 3  int len;\\r\\n 4  char *data, shortpkt[ETH_ZLEN];\\r\\n 5  if (xxx_send_available(...)) { /* \u53d1\u9001\u961f\u5217\u672a\u6ee1\uff0c\u53ef\u4ee5\u53d1\u9001*/\\r\\n 6 /* \u83b7\u5f97\u6709\u6548\u6570\u636e\u6307\u9488\u548c\u957f\u5ea6*/\\r\\n 7  data = skb->data;\\r\\n 8  len = skb->len;\\r\\n 9  if (len < ETH_ZLEN) {\\r\\n10     /* \u5982\u679c\u5e27\u957f\u5c0f\u4e8e\u4ee5\u592a\u7f51\u5e27\u6700\u5c0f\u957f\u5ea6\uff0c\u88650 */\\r\\n11    memset(shortpkt, 0, ETH_ZLEN);\\r\\n12    memcpy(shortpkt, skb->data, skb->len);\\r\\n13    len = ETH_ZLEN;\\r\\n14    data = shortpkt;\\r\\n15  }\\r\\n16\\r\\n17  dev->trans_start = jiffies; /* \u8bb0\u5f55\u53d1\u9001\u65f6\u95f4\u6233*/\\r\\n18\\r\\n19  if (avail) {/* \u8bbe\u7f6e\u786c\u4ef6\u5bc4\u5b58\u5668\uff0c\u8ba9\u786c\u4ef6\u628a\u6570\u636e\u5305\u53d1\u9001\u51fa\u53bb*/\\r\\n20        xxx_hw_tx(data, len, dev);\\r\\n21  } else {\\r\\n22        netif_stop_queue(dev);\\r\\n23        ...\\r\\n24  }\\r\\n25}\\r\\n```\\r\\n\\r\\n\u8fd9\u91cc\u7279\u522b\u8981\u5f3a\u8c03\u7b2c22\u884c\u5bf9netif_stop_queue\uff08\uff09\u7684\u8c03\u7528\uff0c\u5f53\u53d1\u9001\u961f\u5217\u4e3a\u6ee1\u6216\u56e0\u5176\u4ed6\u539f\u56e0\u6765\u4e0d\u53ca\u53d1\u9001\u5f53\u524d\u4e0a\u5c42\u4f20\u4e0b\u6765\u7684\u6570\u636e\u5305\u65f6\uff0c\u5219\u8c03\u7528\u6b64\u51fd\u6570\u963b\u6b62\u4e0a\u5c42\u7ee7\u7eed\u5411\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4f20\u9012\u6570\u636e\u5305\u3002\u5f53\u5fd9\u4e8e\u53d1\u9001\u7684\u6570\u636e\u5305\u88ab\u53d1\u9001\u5b8c\u6210\u540e\uff0c\u5728\u4ee5TX\u7ed3\u675f\u7684\u4e2d\u65ad\u5904\u7406\u4e2d\uff0c\u5e94\u8be5\u8c03\u7528netif_wake_queue\uff08\uff09\u5524\u9192\u88ab\u963b\u585e\u7684\u4e0a\u5c42\uff0c\u4ee5\u542f\u52a8\u5b83\u7ee7\u7eed\u5411\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4f20\u9001\u6570\u636e\u5305\u3002\\r\\n\\r\\n\u5f53\u6570\u636e\u4f20\u8f93\u8d85\u65f6\u65f6\uff0c\u610f\u5473\u7740\u5f53\u524d\u7684\u53d1\u9001\u64cd\u4f5c\u5931\u8d25\u6216\u786c\u4ef6\u5df2\u9677\u5165\u672a\u77e5\u72b6\u6001\uff0c\u6b64\u65f6\uff0c\u6570\u636e\u5305\u53d1\u9001\u8d85\u65f6\u5904\u7406\u51fd\u6570xxx_tx_timeout\uff08\uff09\u5c06\u88ab\u8c03\u7528\u3002\u8fd9\u4e2a\u51fd\u6570\u4e5f\u9700\u8981\u8c03\u7528\u7531Linux\u5185\u6838\u63d0\u4f9b\u7684netif_wake_queue\uff08\uff09\u51fd\u6570\u4ee5\u91cd\u65b0\u542f\u52a8\u8bbe\u5907\u53d1\u9001\u961f\u5217\uff0c\u5982\u4ee3\u7801\u6e05\u535514.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.8\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u6570\u636e\u5305\u53d1\u9001\u8d85\u65f6\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n1void xxx_tx_timeout(struct net_device *dev)\\r\\n2{\\r\\n3  ...\\r\\n4  netif_wake_queue(dev);        /* \u91cd\u65b0\u542f\u52a8\u8bbe\u5907\u53d1\u9001\u961f\u5217*/\\r\\n```\\r\\n\\r\\n\u4ece\u524d\u6587\u53ef\u77e5\uff0cnetif_wake_queue\uff08\uff09\u548cnetif_stop_queue\uff08\uff09\u662f\u6570\u636e\u53d1\u9001\u6d41\u7a0b\u4e2d\u8981\u8c03\u7528\u7684\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u51fd\u6570\uff0c\u5206\u522b\u7528\u4e8e\u5524\u9192\u548c\u963b\u6b62\u4e0a\u5c42\u5411\u4e0b\u4f20\u9001\u6570\u636e\u5305\uff0c\u5b83\u4eec\u7684\u539f\u578b\u5b9a\u4e49\u4e8einclude/linux/netdevice.h\u4e2d\uff0c\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void netif_wake_queue(struct net_device *dev);\\r\\nstatic inline void netif_stop_queue(struct net_device *dev);\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838","description":"\u5728ARM Linux\u9886\u57df\uff0c\u76ee\u524d\u6bd4\u8f83\u4e3b\u6d41\u7684\u662f\u91c7\u7528ARM DS-5Development Studio\u65b9\u6848\u3002ARM DS-5\u662f\u4e00\u4e2a\u9488\u5bf9\u57fa\u4e8eLinux\u7684\u7cfb\u7edf\u548c\u88f8\u673a\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u4e13\u4e1a\u8f6f\u4ef6\u5f00\u53d1\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u6db5\u76d6\u4e86\u5f00\u53d1\u7684\u6240\u6709\u9636\u6bb5\uff0c\u4ece\u542f\u52a8\u4ee3\u7801\u3001\u5185\u6838\u79fb\u690d\u76f4\u5230\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5\u3001\u5206\u6790\u3002\u5982\u56fe21.7\u6240\u793a\uff0c\u5b83\u4f7f\u7528\u4e86DSTREAM\u9ad8\u6027\u80fd\u4eff\u771f\u5668\uff08ARM\u5df2\u7ecf\u505c\u6b62\u66f4\u65b0RVI-RVT2\u4eff\u771f\u5668\uff09\uff0c\u5728Eclipse\u5185\u5305\u542b\u4e86DS-5\u548cDSTREAM\u7684\u5f00\u53d1\u63d2\u4ef6\u3002","date":"2025-09-15T14:44:14.389Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.825,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.5\u3000\u6570\u636e\u53d1\u9001\u6d41\u7a0b"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe"}},"content":"\u5728ARM Linux\u9886\u57df\uff0c\u76ee\u524d\u6bd4\u8f83\u4e3b\u6d41\u7684\u662f\u91c7\u7528ARM DS-5Development Studio\u65b9\u6848\u3002ARM DS-5\u662f\u4e00\u4e2a\u9488\u5bf9\u57fa\u4e8eLinux\u7684\u7cfb\u7edf\u548c\u88f8\u673a\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u4e13\u4e1a\u8f6f\u4ef6\u5f00\u53d1\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u6db5\u76d6\u4e86\u5f00\u53d1\u7684\u6240\u6709\u9636\u6bb5\uff0c\u4ece\u542f\u52a8\u4ee3\u7801\u3001\u5185\u6838\u79fb\u690d\u76f4\u5230\u5e94\u7528\u7a0b\u5e8f\u8c03\u8bd5\u3001\u5206\u6790\u3002\u5982\u56fe21.7\u6240\u793a\uff0c\u5b83\u4f7f\u7528\u4e86DSTREAM\u9ad8\u6027\u80fd\u4eff\u771f\u5668\uff08ARM\u5df2\u7ecf\u505c\u6b62\u66f4\u65b0RVI-RVT2\u4eff\u771f\u5668\uff09\uff0c\u5728Eclipse\u5185\u5305\u542b\u4e86DS-5\u548cDSTREAM\u7684\u5f00\u53d1\u63d2\u4ef6\u3002\\r\\n\\r\\n\u8c03\u8bd5\u4e3b\u673a\u4e00\u822c\u901a\u8fc7\u7f51\u7ebf\u4e0eDSTREAM\u4eff\u771f\u5668\u8fde\u63a5\uff0c\u800c\u4eff\u771f\u5668\u5219\u8fde\u63a5\u4e0e\u7535\u8def\u677f\u7c7b\u4f3c\u7684JTAG\u63a5\u53e3\uff0c\u4e4b\u540e\u7528DS-5\u8c03\u8bd5\u5668\u8fdb\u884c\u8c03\u8bd5\u3002DS-5\u56fe\u5f62\u5316\u8c03\u8bd5\u5668\u63d0\u4f9b\u4e86\u5168\u9762\u548c\u76f4\u89c2\u7684\u8c03\u8bd5\u56fe\uff0c\u975e\u5e38\u6613\u4e8e\u8c03\u8bd5Linux\u548c\u88f8\u673a\u7a0b\u5e8f\uff0c\u6613\u4e8e\u67e5\u770b\u4ee3\u7801\uff0c\u8fdb\u884c\u6808\u56de\u6eaf\uff0c\u67e5\u770b\u5185\u5b58\u3001\u5bc4\u5b58\u5668\u3001\u8868\u8fbe\u5f0f\u3001\u53d8\u91cf\uff0c\u5206\u6790\u5185\u6838\u7ebf\u7a0b\uff0c\u8bbe\u7f6e\u65ad\u70b9\u3002\\r\\n\\r\\n![1747579318890](./figure/1747579318890.png)\\r\\n\\r\\n\u56fe21.7\u3000DSTREAM\u4eff\u771f\u5668\u548cDS-5\u5f00\u53d1\u73af\u5883\\r\\n\\r\\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cDS-5\u4e5f\u63d0\u4f9b\u4e86Streamline Performance Analyzer\u3002ARM Streamline\u6027\u80fd\u5206\u6790\u5668\uff08\u89c1\u56fe21.8\uff09\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u6765\u5206\u6790\u548c\u4f18\u5316\u5728ARM926\u3001ARM11\u548cCortex-A\u7cfb\u5217\u5e73\u53f0\u4e0a\u8fd0\u884c\u7684Linux\u548cAndroid\u7cfb\u7edf\u7684\u76f4\u89c2\u65b9\u6cd5\u3002\u4f7f\u7528Streamline\uff0cLinux\u5185\u6838\u4e2d\u9700\u5305\u542b\u4e00\u4e2agator\u6a21\u5757\uff0c\u7528\u6237\u7a7a\u95f4\u5219\u9700\u8981\u4f7f\u80fdgatord\u540e\u53f0\u670d\u52a1\u5668\u7a0b\u5e8f\u3002\u5173\u4e8eStreamline\u5177\u4f53\u7684\u64cd\u4f5c\u65b9\u6cd5\u53ef\u4ee5\u67e5\u770b\u300aARM\xae DS-5Using ARM Streamline\u300b\u3002\\r\\n\\r\\n![1747579344368](./figure/1747579344368.png)\\r\\n\\r\\n\u56fe21.8\u3000ARMStreamline\u6027\u80fd\u5206\u6790\u5668"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe","description":"\u5728Linux\u7684\u7f16\u7a0b\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528GNU\u5de5\u5177\u94fe\u7f16\u8bd1Bootloader\u3001\u5185\u6838\u548c\u5e94\u7528\u7a0b\u5e8f\u3002GNU\u7ec4\u7ec7\u7ef4\u62a4\u4e86GCC\u3001GDB\u3001glibc\u3001Binutils\u7b49\uff0c\u5206\u522b\u89c1\u4e8ehttps//www.gnu.org/software/gdb/ \uff0chttps//www.gnu.org/software/binutils/ \u3002","date":"2025-09-15T14:44:14.377Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":5.9,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.10\u3000\u4f7f\u7528\u4eff\u771f\u5668\u8c03\u8bd5\u5185\u6838"},"nextItem":{"title":"21.1.1\u3000GDB\u7684\u57fa\u672c\u7528\u6cd5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.1\u3000GDB\u8c03\u8bd5\u5668\u7684\u7528\u6cd5"}},"content":"\u5728Linux\u7684\u7f16\u7a0b\u4e2d\uff0c\u901a\u5e38\u4f7f\u7528GNU\u5de5\u5177\u94fe\u7f16\u8bd1Bootloader\u3001\u5185\u6838\u548c\u5e94\u7528\u7a0b\u5e8f\u3002GNU\u7ec4\u7ec7\u7ef4\u62a4\u4e86GCC\u3001GDB\u3001glibc\u3001Binutils\u7b49\uff0c\u5206\u522b\u89c1\u4e8ehttps://gcc.gnu.org/ \uff0chttps://www.gnu.org/software/gdb/ \uff0chttps://www.gnu.org/software/libc/ \u3001https://www.gnu.org/software/binutils/ \u3002\\r\\n\\r\\n\u5efa\u7acb\u4ea4\u53c9\u5de5\u5177\u94fe\u7684\u8fc7\u7a0b\u76f8\u5f53\u70e6\u7410\uff0c\u4e00\u822c\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3ccrosstool-ng\u8fd9\u6837\u7684\u5de5\u5177\u6765\u505a\u3002crosstool-ng\u4e5f\u91c7\u7528\u4e86\u4e0e\u5185\u6838\u76f8\u4f3c\u7684menuconfig\u914d\u7f6e\u65b9\u6cd5\u3002\u5728\u5b98\u7f51http://www.crosstool-ng.org/ \u4e0a\u4e0b\u8f7dcrosstool-ng\u7684\u6e90\u4ee3\u7801\u5e76\u7f16\u8bd1\u5b89\u88c5\u540e\uff0c\u8fd0\u884cct-ng menuconfig\uff0c\u4f1a\u51fa\u73b0\u5982\u56fe3.12\u7684\u914d\u7f6e\u83dc\u5355\u3002\u5728\u91cc\u9762\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u76ee\u6807\u673a\u5904\u7406\u5668\u578b\u53f7\uff0c\u652f\u6301\u7684\u5185\u6838\u7248\u672c\u53f7\u7b49\u3002\\r\\n\\r\\n![1742740211566](./figure/1742740211566.png)\\r\\n\\r\\n\u56fe3.12\u3000crosstool-ng\u7684\u914d\u7f6e\u83dc\u5355\\r\\n\\r\\n\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u7b2c\u4e09\u65b9\u7f16\u8bd1\u597d\u7684\u3001\u5f00\u653e\u7684\u3001\u9488\u5bf9\u76ee\u6807\u5904\u7406\u5668\u7684\u4ea4\u53c9\u5de5\u5177\u94fe\uff0c\u5982\u5728http://www.mentor.com/embedded-software/sourcery-tools/sourcery-codebench/editions/lite-edition/ \u4e0a\u53ef\u4ee5\u4e0b\u8f7d\u9488\u5bf9ARM\u3001MIPS\u3001\u9ad8\u901aHexagon\u3001Altera Nios II\u3001Intel\u3001AMD64\u7b49\u5904\u7406\u5668\u7684\u5de5\u5177\u94fe\uff0c\u5728http://www.linaro.org/downloads/ \u53ef\u4ee5\u4e0b\u8f7d\u9488\u5bf9ARM\u7684\u5de5\u5177\u94fe\u3002\\r\\n\\r\\n\u76ee\u524d\uff0c\u5728ARM Linux\u7684\u5f00\u53d1\u4e2d\uff0c\u4eba\u4eec\u8d8b\u5411\u4e8e\u4f7f\u7528Linaro\uff08http://www.linaro.org/ \uff09\u5de5\u5177\u94fe\u56e2\u961f\u7ef4\u62a4\u7684ARM\u5de5\u5177\u94fe\uff0c\u5b83\u4ee5\u6bcf\u6708\u4e00\u6b21\u7684\u5f62\u5f0f\u53d1\u5e03\u65b0\u7684\u7248\u672c\uff0c\u7f16\u8bd1\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u53ef\u4ece\u7f51\u5740http://www.linaro.org/downloads/ \u4e0b\u8f7d\u3002Linaro\u662fARM Linux\u9886\u57df\u4e2d\u6700\u8457\u540d\u6700\u5177\u6280\u672f\u6210\u5c31\u7684\u5f00\u6e90\u7ec4\u7ec7\uff0c\u5176\u4f1a\u5458\u5305\u62ecARM\u3001Broadcom\u3001Samsung\u3001TI\u3001Qualcomm\u7b49\uff0c\u56fd\u5185\u7684\u6d77\u601d\u3001\u4e2d\u5174\u3001\u5168\u5fd7\u548c\u4e2d\u56fd\u53f0\u6e7e\u7684MediaTek\u4e5f\u662f\u5b83\u7684\u4f1a\u5458\u3002\\r\\n\\r\\n\u4e00\u4e2a\u5178\u578b\u7684ARM Linux\u5de5\u5177\u94fe\u5305\u542barm-linux-gnueabihf-gcc\uff08\u540e\u7eed\u5de5\u5177\u7701\u7565\u524d\u7f00\uff09\u3001strip\u3001gcc\u3001objdump\u3001ld\u3001gprof\u3001nm\u3001readelf\u3001addr2line\u7b49\u3002\u7528strip\u53ef\u4ee5\u5220\u9664\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u7b26\u53f7\u8868\u548c\u8c03\u8bd5\u4fe1\u606f\u7b49\u6765\u5b9e\u73b0\u7f29\u51cf\u7a0b\u5e8f\u4f53\u79ef\u7684\u76ee\u7684\u3002gprof\u5728\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5728\u51fd\u6570\u5165\u53e3\u5904\u63d2\u5165\u8ba1\u6570\u5668\u4ee5\u6536\u96c6\u6bcf\u4e2a\u51fd\u6570\u7684\u88ab\u8c03\u7528\u60c5\u51b5\u548c\u88ab\u8c03\u7528\u6b21\u6570\uff0c\u68c0\u67e5\u7a0b\u5e8f\u8ba1\u6570\u5668\u5e76\u5728\u5206\u6790\u65f6\u627e\u51fa\u4e0e\u7a0b\u5e8f\u8ba1\u6570\u5668\u5bf9\u5e94\u7684\u51fd\u6570\u6765\u7edf\u8ba1\u51fd\u6570\u5360\u7528\u7684\u65f6\u95f4\u3002objdump\u662f\u53cd\u6c47\u7f16\u5de5\u5177\u3002nm\u5219\u7528\u4e8e\u663e\u793a\u5173\u4e8e\u5bf9\u8c61\u6587\u4ef6\u3001\u53ef\u6267\u884c\u6587\u4ef6\u4ee5\u53ca\u5bf9\u8c61\u6587\u4ef6\u5e93\u91cc\u7684\u7b26\u53f7\u4fe1\u606f\u3002\u5176\u4e2d\uff0c\u524d\u7f00\u4e2d\u7684\u201chf\u201d\u663e\u793a\u8be5\u5de5\u5177\u94fe\u662f\u5b8c\u5168\u7684\u786c\u6d6e\u70b9\uff0c\u7531\u4e8e\u76ee\u524d\u4e3b\u6d41\u7684ARM\u82af\u7247\u90fd\u81ea\u5e26VFP\u6216\u8005NEON\u7b49\u6d6e\u70b9\u5904\u7406\u5355\u5143\uff08FPU\uff09\uff0c\u6240\u4ee5\u5bf9\u786c\u6d6e\u70b9\u7684\u9700\u6c42\u5c31\u66f4\u52a0\u5f3a\u70c8\u3002Linux\u7684\u6d6e\u70b9\u5904\u7406\u53ef\u4ee5\u91c7\u7528\u5b8c\u5168\u8f6f\u6d6e\u70b9\uff0c\u4e5f\u53ef\u4ee5\u91c7\u7528\u4e0e\u8f6f\u6d6e\u70b9\u517c\u5bb9\uff0c\u4f46\u662f\u4f7f\u7528FPU\u786c\u4ef6\u7684softfp\uff0c\u4ee5\u53ca\u5b8c\u5168\u786c\u6d6e\u70b9\u3002\u5177\u4f53\u7684ABI\uff08Application Binary Interface\uff0c\u5e94\u7528\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u63a5\u53e3\uff09\u901a\u8fc7-mfloat-abi=\u53c2\u6570\u6307\u5b9a\uff0c3\u79cd\u60c5\u51b5\u4e0b\u7684\u53c2\u6570\u5206\u522b\u662f-mfloat-abi=soft/softfp/hard\u3002\\r\\n\\r\\n\u5728\u4ee5\u524d\uff0c\u4e3b\u6d41\u7684\u5de5\u5177\u94fe\u91c7\u7528\u201c\u4e0e\u8f6f\u6d6e\u70b9\u517c\u5bb9\uff0c\u4f46\u662f\u4f7f\u7528FPU\u786c\u4ef6\u7684softfp\u201d\u3002softfp\u4f7f\u7528\u4e86\u786c\u4ef6\u7684FPU\uff0c\u4f46\u662f\u51fd\u6570\u7684\u53c2\u6570\u4ecd\u7136\u4f7f\u7528\u6574\u578b\u5bc4\u5b58\u5668\u6765\u4f20\u9012\uff0c\u5b8c\u5168\u786c\u6d6e\u70b9\u5219\u76f4\u63a5\u4f7f\u7528FPU\u7684\u5bc4\u5b58\u5668\u4f20\u9012\u53c2\u6570\u3002\\r\\n\\r\\n\u4e0b\u9762\u4e00\u6bb5\u7a0b\u5e8f\uff1a\\r\\n\\r\\n```\\r\\nfloat mul(float a, float b)\\r\\n{\\r\\n        return a * b;\\r\\n}\\r\\nvoid main(void)\\r\\n{\\r\\n        printf(\\"1.1 * 2.3 = %f\\\\n\\", mul(1.1, 2.3));\\r\\n}\\r\\n```\\r\\n\\r\\n\u5bf9\u5176\u4f7f\u7528arm-linux-gnueabihf-gcc\u7f16\u8bd1\u5e76\u53cd\u6c47\u7f16\u7684\u7ed3\u679c\u662f\uff1a\\r\\n\\r\\n```\\r\\n000 08394 <mul>:\\r\\n     8394: b480        push  {r7}\\r\\n     8396: b083        sub  sp, #12\\r\\n     8398: af00        add  r7, sp, #0\\r\\n  839a: ed87 0a01\\r\\n\\r\\n\\r\\nvstr\\r\\n\\r\\n\\r\\ns0, [r7, #4](null)\\r\\n\\r\\n\\r\\n839e: edc7 0a00\\r\\n\\r\\n\\r\\nvstr\\r\\n\\r\\n\\r\\ns1, [r7]\\r\\n\\r\\n\\r\\n\\r\\n     83a2: ed97 7a01   vldr  s14, [r7, #4](null)\\r\\n     83a6: edd7 7a00   vldr  s15, [r7]\\r\\n     83aa: ee67 7a27   vmul.f32  s15, s14, s15\\r\\n     83ae: eeb0 0a67   vmov.f32  s0, s15\\r\\n     83b2: f107 070c   add.w  r7, r7, #12\\r\\n     83b6: 46bd        mov  sp, r7\\r\\n     83b8: bc80        pop  {r7}\\r\\n     83ba: 4770        bxlr\\r\\n0000 83bc <main>:\\r\\n     83bc: b580        push  {r7, lr}\\r\\n     83be: af00        add  r7, sp, #0\\r\\n   83c0: ed9f 0a09\\r\\n\\r\\n\\r\\nvldr\\r\\n\\r\\n\\r\\ns0, [pc, #36](null)\\r\\n\\r\\n\\r\\n; 83e8 <main+0x2c>\\r\\n\\r\\n\\r\\n83c4: eddf 0a09\\r\\n\\r\\n\\r\\nvldr\\r\\n\\r\\n\\r\\ns1, [pc, #36](null)\\r\\n\\r\\n\\r\\n; 83ec <main+0x30>\\r\\n\\r\\n\\r\\n\\r\\n     83c8: f7ff ffe4   b8394 <mul>\\r\\n     83cc: eef0 7a40   vmov.f32  s15, s0\\r\\n     83d0: eeb7 7ae7   vcvt.f64.f32  d7, s15\\r\\n     83d4: f248 4044   movw  r0, #33860  ; 0x8444\\r\\n     83d8: f2c0 0000   movt  r0, #0\\r\\n     83dc: ec53 2b17   vmov  r2, r3, d7\\r\\n     83e0: f7ff ef82   blx  82e8 <_init+0x20>\\r\\n     83e4: bd80        pop  {r7, pc}\\r\\n     83e6: bf00        nop\\r\\n```\\r\\n\\r\\n\u800c\u4f7f\u7528\u6ca1\u6709\u201chf\u201d\u524d\u7f00\u7684arm-linux-gnueabi-gcc\u7f16\u8bd1\u5e76\u53cd\u6c47\u7f16\u7684\u7ed3\u679c\u5219\u4e3a\\r\\n\\r\\n```\\r\\n000 0838c <mul>:\\r\\n     838c: b480        push  {r7}\\r\\n     838e: b083        sub  sp, #12\\r\\n     8390: af00        add  r7, sp, #0\\r\\n   8392: 6078        str  r0, [r7, #4]\\r\\n\\r\\n\\r\\n8394: 6039        str  r1, [r7, #0]\\r\\n\\r\\n\\r\\n8396: ed97 7a01   vldr  s14, [r7, #4](null)\\r\\n\\r\\n\\r\\n839a: edd7 7a00   vldr  s15, [r7]\\r\\n\\r\\n\\r\\n\\r\\n     839e: ee67 7a27   vmul.f32  s15, s14, s15\\r\\n     83a2: ee17 3a90   vmov  r3, s15\\r\\n     83a6: 4618        mov  r0, r3\\r\\n     83a8: f107 070c   add.w  r7, r7, #12\\r\\n     83ac: 46bd        mov  sp, r7\\r\\n     83ae: bc80        pop  {r7}\\r\\n     83b0: 4770        bxlr\\r\\n     83b2: bf00        nop\\r\\n000 083b4 <main>:\\r\\n     83b4: b580        push  {r7, lr}\\r\\n     83b6: af00        add  r7, sp, #0\\r\\n   83b8: 4808        ldr  r0, [pc, #32]  ; (83dc <main+0x28>)\\r\\n\\r\\n\\r\\n83ba: 4909        ldr  r1, [pc, #36]  ; (83e0 <main+0x2c>)\\r\\n\\r\\n\\r\\n\\r\\n     83bc: f7ff ffe6   bl  838c <mul>\\r\\n     83c0: ee07 0a90   vmov  s15, r0\\r\\n     83c4: eeb7 7ae7   vcvt.f64.f32  d7, s15\\r\\n     83c8: f248 4038   movwr0, #33848; 0x8438\\r\\n     83cc: f2c0 0000   movtr0, #0\\r\\n     83d0: ec53 2b17   vmovr2, r3, d7\\r\\n     83d4: f7ff ef84   blx  82e0 <_init+0x20>\\r\\n     83d8: bd80        pop  {r7, pc}\\r\\n     83da: bf00        nop\\r\\n```\\r\\n\\r\\n\u5173\u6ce8\u5176\u4e2d\u52a0\u7c97\u7684\u884c\uff0c\u53ef\u4ee5\u770b\u51fa\u524d\u9762\u7684\u6c47\u7f16\u4f7f\u7528s0\u548cs1\u4f20\u9012\u53c2\u6570\uff0c\u540e\u8005\u5219\u4ecd\u7136\u4f7f\u7528ARM\u7684r0\u548cr1\u3002\u6d4b\u8bd5\u663e\u793a\u4e00\u4e2a\u542b\u6709\u6d6e\u70b9\u8fd0\u7b97\u7684\u7a0b\u5e8f\u82e5\u4f7f\u7528hard ABI\u4f1a\u6bd4softfp ABI\u5feb5%~40%\uff0c\u5982\u679c\u6d6e\u70b9\u8d1f\u8f7d\u91cd\uff0c\u7ed3\u679c\u53ef\u80fd\u4f1a\u5feb200%\u4ee5\u4e0a"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.1\u3000GDB\u8c03\u8bd5\u5668\u7684\u7528\u6cd5","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.1\u3000GDB\u8c03\u8bd5\u5668\u7684\u7528\u6cd5","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.1\u3000GDB\u8c03\u8bd5\u5668\u7684\u7528\u6cd5.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.1\u3000GDB\u8c03\u8bd5\u5668\u7684\u7528\u6cd5.md","title":"21.1.1\u3000GDB\u7684\u57fa\u672c\u7528\u6cd5","description":"GDB\u662fGNU\u5f00\u6e90\u7ec4\u7ec7\u53d1\u5e03\u7684\u4e00\u4e2a\u5f3a\u5927\u7684UNIX\u4e0b\u7684\u7a0b\u5e8f\u8c03\u8bd5\u5de5\u5177\uff0cGDB\u4e3b\u8981\u53ef\u5e2e\u52a9\u5de5\u7a0b\u5e08\u5b8c\u6210\u4e0b\u97624\u4e2a\u65b9\u9762\u7684\u529f\u80fd\u3002","date":"2025-09-15T14:44:14.365Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":21.22,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.6\u3000\u5de5\u5177\u94fe"},"nextItem":{"title":"14.9.1\u3000DM9000\u7f51\u5361\u786c\u4ef6\u63cf\u8ff0","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.9\u3000DM9000\u7f51\u5361\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b"}},"content":"GDB\u662fGNU\u5f00\u6e90\u7ec4\u7ec7\u53d1\u5e03\u7684\u4e00\u4e2a\u5f3a\u5927\u7684UNIX\u4e0b\u7684\u7a0b\u5e8f\u8c03\u8bd5\u5de5\u5177\uff0cGDB\u4e3b\u8981\u53ef\u5e2e\u52a9\u5de5\u7a0b\u5e08\u5b8c\u6210\u4e0b\u97624\u4e2a\u65b9\u9762\u7684\u529f\u80fd\u3002\\r\\n\\r\\n- \xb7\u542f\u52a8\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6309\u7167\u5de5\u7a0b\u5e08\u81ea\u5b9a\u4e49\u7684\u8981\u6c42\u8fd0\u884c\u7a0b\u5e8f\u3002\\r\\n- \xb7\u8ba9\u88ab\u8c03\u8bd5\u7684\u7a0b\u5e8f\u5728\u5de5\u7a0b\u5e08\u6307\u5b9a\u7684\u65ad\u70b9\u5904\u505c\u4f4f\uff0c\u65ad\u70b9\u53ef\u4ee5\u662f\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002\\r\\n- \xb7\u5f53\u7a0b\u5e8f\u88ab\u505c\u4f4f\u65f6\uff0c\u53ef\u4ee5\u68c0\u67e5\u6b64\u65f6\u7a0b\u5e8f\u4e2d\u6240\u53d1\u751f\u7684\u4e8b\uff0c\u5e76\u8ffd\u8e2a\u4e0a\u6587\u3002\\r\\n- \xb7\u52a8\u6001\u5730\u6539\u53d8\u7a0b\u5e8f\u7684\u6267\u884c\u73af\u5883\u3002\\r\\n\\r\\n\u4e0d\u7ba1\u662f\u8c03\u8bd5Linux\u5185\u6838\u7a7a\u95f4\u7684\u9a71\u52a8\u8fd8\u662f\u8c03\u8bd5\u7528\u6237\u7a7a\u95f4\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u90fd\u5fc5\u987b\u638c\u63e1GDB\u7684\u7528\u6cd5\u3002\u800c\u4e14\uff0c\u5728\u8c03\u8bd5\u5185\u6838\u548c\u8c03\u8bd5\u5e94\u7528\u7a0b\u5e8f\u65f6\u4f7f\u7528\u7684GDB\u547d\u4ee4\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u4e0b\u9762\u4ee5\u4ee3\u7801\u6e05\u535521.1\u7684\u5e94\u7528\u7a0b\u5e8f\u4e3a\u4f8b\u6f14\u793aGDB\u8c03\u8bd5\u5668\u7684\u7528\u6cd5\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535521.1\u3000GDB\u8c03\u8bd5\u5668\u7528\u6cd5\u7684\u6f14\u793a\u7a0b\u5e8f\\r\\n\\r\\n```\\r\\n 1int add(int a, int b)\\r\\n 2{\\r\\n 3 return a + b;\\r\\n 4}\\r\\n 5\\r\\n 6main()\\r\\n 7{\\r\\n 8 int sum[10] =\\r\\n 9 {\\r\\n10  0, 0, 0, 0, 0, 0, 0, 0, 0, 0\\r\\n11 };\\r\\n12 int i;\\r\\n13\\r\\n14 int array1[10] =\\r\\n15 {\\r\\n16  48, 56, 77, 33, 33, 11, 226, 544, 78, 90\\r\\n17 };\\r\\n18 int array2[10] =\\r\\n19 {\\r\\n20  85, 99, 66, 0x199, 393, 11, 1, 2, 3, 4\\r\\n21 };\\r\\n22\\r\\n23 for (i = 0; i < 10; i++)\\r\\n24 {\\r\\n25  sum[i] = add(array1[i], array2[i]);\\r\\n26 }\\r\\n27}\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u547d\u4ee4gcc\u2013g gdb_example.c\u2013o gdb_example\u7f16\u8bd1\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u5f97\u5230\u5305\u542b\u8c03\u8bd5\u4fe1\u606f\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6example\uff0c\u6267\u884cgdb gdb_example\u547d\u4ee4\u8fdb\u5165\u8c03\u8bd5\u72b6\u6001\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\n$ gdb gdb_example\\r\\nGNU gdb (Ubuntu 7.7-0ubuntu3.1) 7.7\\r\\nCopyright (C) 2014 Free Software Foundation, Inc.\\r\\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\\r\\nThis is free software: you are free to change and redistribute it.\\r\\nThere is NO WARRANTY, to the extent permitted by law.  Type \\"show copying\\"\\r\\nand \\"show warranty\\" for details.\\r\\nThis GDB was configured as \\"i686-linux-gnu\\".\\r\\nType \\"show configuration\\" for configuration details.\\r\\nFor bug reporting instructions, please see:\\r\\n<http://www.gnu.org/software/gdb/bugs/>.\\r\\nFind the GDB manual and other documentation resources online at:\\r\\n<http://www.gnu.org/software/gdb/documentation/>.\\r\\nFor help, type \\"help\\".\\r\\nType \\"apropos word\\" to search for commands related to \\"word\\".\\r\\n(gdb)\\r\\n```\\r\\n\\r\\n## 1.list\u547d\u4ee4\\r\\n\\r\\n\u5728GDB\u4e2d\u8fd0\u884clist\u547d\u4ee4\uff08\u7f29\u5199l\uff09\u53ef\u4ee5\u5217\u51fa\u4ee3\u7801\uff0clist\u7684\u5177\u4f53\u5f62\u5f0f\u5982\u4e0b\u3002\\r\\n\\r\\n\xb7list  linenum\uff0c\u663e\u793a\u7a0b\u5e8f\u7b2clinenum\u884c\u5468\u56f4\u7684\u6e90\u7a0b\u5e8f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\n(gdb) list 15\\r\\n10\\r\\n11       int array1[10] =\\r\\n12       {\\r\\n13         48, 56, 77, 33, 33, 11, 226, 544, 78, 90\\r\\n14       };\\r\\n15       int array2[10] =\\r\\n16       {\\r\\n17         85, 99, 66, 0x199, 393, 11, 1, 2, 3, 4\\r\\n18       };\\r\\n19\\r\\n```\\r\\n\\r\\n\xb7list  function\uff0c\u663e\u793a\u51fd\u6570\u540d\u4e3afunction\u7684\u51fd\u6570\u7684\u6e90\u7a0b\u5e8f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\n(gdb) list main\\r\\n2    {\\r\\n3      return a + b;\\r\\n4    }\\r\\n5\\r\\n6    main()\\r\\n7    {\\r\\n8      int sum[10];\\r\\n9      int i;\\r\\n10\\r\\n11     int array1[10] =\\r\\n```\\r\\n\\r\\n\xb7list\uff0c\u663e\u793a\u5f53\u524d\u884c\u540e\u9762\u7684\u6e90\u7a0b\u5e8f\u3002\\r\\n\\r\\n\xb7list-\uff0c\u663e\u793a\u5f53\u524d\u884c\u524d\u9762\u7684\u6e90\u7a0b\u5e8f\u3002\\r\\n\\r\\n\u4e0b\u9762\u6f14\u793a\u4e86\u4f7f\u7528GDB\u4e2d\u7684run\uff08\u7f29\u5199\u4e3ar\uff09\u3001break\uff08\u7f29\u5199\u4e3ab\uff09\u3001next\uff08\u7f29\u5199\u4e3an\uff09\u547d\u4ee4\u63a7\u5236\u7a0b\u5e8f\u7684\u8fd0\u884c\uff0c\u5e76\u4f7f\u7528print\uff08\u7f29\u5199\u4e3ap\uff09\u547d\u4ee4\u6253\u5370\u7a0b\u5e8f\u4e2d\u7684\u53d8\u91cfsum\u7684\u8fc7\u7a0b\uff1a\\r\\n\\r\\n```\\r\\n(gdb) break add\\r\\nBreakpoint 1 at 0x80482f7: file gdb_example.c, line 3.\\r\\n(gdb) run\\r\\nStarting program: /driver_study/gdb_example\\r\\nBreakpoint 1, add (a=48, b=85) at gdb_example.c:3\\r\\nwarning: Source file is more recent than executable.\\r\\n3      return a + b;\\r\\n(gdb) next\\r\\n4    }\\r\\n(gdb) next\\r\\nmain () at gdb_example.c:23\\r\\n23     for (i = 0; i < 10; i++)\\r\\n(gdb) next\\r\\n25      sum[i] = add(array1[i], array2[i]);\\r\\n(gdb) print sum\\r\\n$1 = {133, 0, 0, 0, 0, 0, 0, 0, 0, 0}\\r\\n```\\r\\n\\r\\n## 2.run\u547d\u4ee4\\r\\n\\r\\n\u5728GDB\u4e2d\uff0c\u8fd0\u884c\u7a0b\u5e8f\u4f7f\u7528run\u547d\u4ee4\u3002\u5728\u7a0b\u5e8f\u8fd0\u884c\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u5982\u4e0b4\u65b9\u9762\u7684\u5de5\u4f5c\u73af\u5883\u3002\\r\\n\\r\\n### \uff081\uff09\u7a0b\u5e8f\u8fd0\u884c\u53c2\u6570\\r\\n\\r\\n\u7528set args\u53ef\u6307\u5b9a\u8fd0\u884c\u65f6\u53c2\u6570\uff0c\u5982set args 10 20 30 40 50\uff1b\u7528show args\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u8bbe\u7f6e\u597d\u7684\u8fd0\u884c\u53c2\u6570\u3002\\r\\n\\r\\n### \uff082\uff09\u8fd0\u884c\u73af\u5883\\r\\n\\r\\n\u7528path< dir>\u53ef\u8bbe\u5b9a\u7a0b\u5e8f\u7684\u8fd0\u884c\u8def\u5f84\uff1b\u7528how paths\u53ef\u67e5\u770b\u7a0b\u5e8f\u7684\u8fd0\u884c\u8def\u5f84\uff1b\u7528set environment varname[=value]\u53ef\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u5982set env USER=baohua\uff1b\u7528show environment[varname]\u5219\u53ef\u67e5\u770b\u73af\u5883\u53d8\u91cf\u3002\\r\\n\\r\\n### \uff083\uff09\u5de5\u4f5c\u76ee\u5f55\\r\\n\\r\\ncd< dir>\u76f8\u5f53\u4e8eshell\u7684cd\u547d\u4ee4\uff0cpwd\u53ef\u663e\u793a\u5f53\u524d\u6240\u5728\u7684\u76ee\u5f55\u3002\\r\\n\\r\\n### \uff084\uff09\u7a0b\u5e8f\u7684\u8f93\u5165\u8f93\u51fa\\r\\n\\r\\ninfo terminal\u7528\u4e8e\u663e\u793a\u7a0b\u5e8f\u7528\u5230\u7684\u7ec8\u7aef\u7684\u6a21\u5f0f\uff1b\u5728GDB\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u91cd\u5b9a\u5411\u63a7\u5236\u7a0b\u5e8f\u8f93\u51fa\uff0c\u5982run>outfile\uff1b\u7528tty\u547d\u4ee4\u53ef\u4ee5\u6307\u5b9a\u8f93\u5165\u8f93\u51fa\u7684\u7ec8\u7aef\u8bbe\u5907\uff0c\u5982tty/dev/ttyS1\u3002\\r\\n\\r\\n## 3.break\u547d\u4ee4\\r\\n\\r\\n\u5728GDB\u4e2d\u7528break\u547d\u4ee4\u6765\u8bbe\u7f6e\u65ad\u70b9\uff0c\u8bbe\u7f6e\u65ad\u70b9\u7684\u65b9\u6cd5\u5982\u4e0b\u3002\\r\\n\\r\\n### \uff081\uff09break< function>\\r\\n\\r\\n\u5728\u8fdb\u5165\u6307\u5b9a\u51fd\u6570\u65f6\u505c\u4f4f\uff0c\u5728C++\u4e2d\u53ef\u4ee5\u4f7f\u7528class\uff1a\uff1afunction\u6216function\uff08type\uff0ctype\uff09\u683c\u5f0f\u6765\u6307\u5b9a\u51fd\u6570\u540d\u3002\\r\\n\\r\\n### \uff082\uff09break< linenum>\\r\\n\\r\\n\u5728\u6307\u5b9a\u884c\u53f7\u505c\u4f4f\u3002\\r\\n\\r\\n### \uff083\uff09break+offset/break-offset\u3002\\r\\n\\r\\n\u5728\u5f53\u524d\u884c\u53f7\u7684\u524d\u9762\u6216\u540e\u9762\u7684offset\u884c\u505c\u4f4f\uff0coffiset\u4e3a\u81ea\u7136\u6570\u3002\\r\\n\\r\\n### \uff084\uff09break filename\uff1alinenum\\r\\n\\r\\n\u5728\u6e90\u6587\u4ef6filename\u7684linenum\u884c\u5904\u505c\u4f4f\u3002\\r\\n\\r\\n### \uff085\uff09break filename\uff1afunction\\r\\n\\r\\n\u5728\u6e90\u6587\u4ef6filename\u7684function\u51fd\u6570\u7684\u5165\u53e3\u5904\u505c\u4f4f\u3002\\r\\n\\r\\n### \uff086\uff09break*address\\r\\n\\r\\n\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u5185\u5b58\u5730\u5740\u5904\u505c\u4f4f\u3002\\r\\n\\r\\n### \uff087\uff09break\\r\\n\\r\\nbreak\u547d\u4ee4\u6ca1\u6709\u53c2\u6570\u65f6\uff0c\u8868\u793a\u5728\u4e0b\u4e00\u6761\u6307\u4ee4\u5904\u505c\u4f4f\u3002\\r\\n\\r\\n### \uff088\uff09break\u2026if< condition>\\r\\n\\r\\n\u2026\u53ef\u4ee5\u662f\u4e0a\u8ff0\u7684break< linenum>\u3001break+offset/break\u2013offset\u4e2d\u7684\u53c2\u6570\uff0ccondition\u8868\u793a\u6761\u4ef6\uff0c\u5728\u6761\u4ef6\u6210\u7acb\u65f6\u505c\u4f4f\u3002\u6bd4\u5982\u5728\u5faa\u73af\u4f53\u4e2d\uff0c\u53ef\u4ee5\u8bbe\u7f6ebreak if i=100\uff0c\u8868\u793a\u5f53i\u4e3a100\u65f6\u505c\u4f4f\u7a0b\u5e8f\u3002\\r\\n\\r\\n\u67e5\u770b\u65ad\u70b9\u65f6\uff0c\u53ef\u4f7f\u7528info\u547d\u4ee4\uff0c\u5982info breakpoints[n]\u3001info break[n]\uff08n\u8868\u793a\u65ad\u70b9\u53f7\uff09\u3002\\r\\n\\r\\n## 4.\u5355\u6b65\u547d\u4ee4\\r\\n\\r\\n\u5728\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\uff0cnext\u547d\u4ee4\u7528\u4e8e\u5355\u6b65\u6267\u884c\uff0c\u7c7b\u4f3c\u4e8eVC++\u4e2d\u7684step over\u3002next\u7684\u5355\u6b65\u4e0d\u4f1a\u8fdb\u5165\u51fd\u6570\u7684\u5185\u90e8\uff0c\u4e0enext\u5bf9\u5e94\u7684step\uff08\u7f29\u5199\u4e3as\uff09\u547d\u4ee4\u5219\u5728\u5355\u6b65\u6267\u884c\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u8fdb\u5165\u5176\u5185\u90e8\uff0c\u7c7b\u4f3c\u4e8eVC++\u4e2d\u7684step into\u3002\u4e0b\u9762\u6f14\u793a\u4e86step\u547d\u4ee4\u7684\u6267\u884c\u60c5\u51b5\uff0c\u5728\u7b2c23\u884c\u7684add\uff08\uff09\u51fd\u6570\u8c03\u7528\u5904\u6267\u884cstep\u4f1a\u8fdb\u5165\u5176\u5185\u90e8\u7684return a+b\uff1b\u8bed\u53e5\uff1a\\r\\n\\r\\n```\\r\\n(gdb) break 25\\r\\nBreakpoint 1 at 0x8048362: file gdb_example.c, line 25.\\r\\n(gdb) run\\r\\nStarting program: /driver_study/gdb_example\\r\\nBreakpoint 1, main () at gdb_example.c:25\\r\\n25      sum[i] = add(array1[i], array2[i]);\\r\\n(gdb) step\\r\\nadd (a=48, b=85) at gdb_example.c:3\\r\\n3      return a + b;\\r\\n```\\r\\n\\r\\n\u5355\u6b65\u6267\u884c\u7684\u66f4\u590d\u6742\u7528\u6cd5\u5982\u4e0b\u3002\\r\\n\\r\\n### \uff081\uff09step< count>\\r\\n\\r\\n\u5355\u6b65\u8ddf\u8e2a\uff0c\u5982\u679c\u6709\u51fd\u6570\u8c03\u7528\uff0c\u5219\u8fdb\u5165\u8be5\u51fd\u6570\uff08\u8fdb\u5165\u51fd\u6570\u7684\u524d\u63d0\u662f\uff0c\u6b64\u51fd\u6570\u88ab\u7f16\u8bd1\u6709debug\u4fe1\u606f\uff09\u3002step\u540e\u9762\u4e0d\u52a0count\u8868\u793a\u4e00\u6761\u6761\u5730\u6267\u884c\uff0c\u52a0count\u8868\u793a\u6267\u884c\u540e\u9762\u7684count\u6761\u6307\u4ee4\uff0c\u7136\u540e\u518d\u505c\u4f4f\u3002\\r\\n\\r\\n### \uff082\uff09next< count>\\r\\n\\r\\n\u5355\u6b65\u8ddf\u8e2a\uff0c\u5982\u679c\u6709\u51fd\u6570\u8c03\u7528\uff0c\u5b83\u4e0d\u4f1a\u8fdb\u5165\u8be5\u51fd\u6570\u3002\u540c\u7406\uff0cnext\u540e\u9762\u4e0d\u52a0count\u8868\u793a\u4e00\u6761\u6761\u5730\u6267\u884c\uff0c\u52a0count\u8868\u793a\u6267\u884c\u540e\u9762\u7684count\u6761\u6307\u4ee4\uff0c\u7136\u540e\u518d\u505c\u4f4f\u3002\\r\\n\\r\\n### \uff083\uff09set step-mode\\r\\n\\r\\nset step-mode on\u7528\u4e8e\u6253\u5f00step-mode\u6a21\u5f0f\uff0c\u8fd9\u6837\uff0c\u5728\u8fdb\u884c\u5355\u6b65\u8ddf\u8e2a\uff08\u8fd0\u884cstep\u6307\u4ee4\uff09\u65f6\uff0c\u82e5\u8de8\u8d8a\u67d0\u6ca1\u6709\u8c03\u8bd5\u4fe1\u606f\u7684\u51fd\u6570\uff0c\u7a0b\u5e8f\u7684\u6267\u884c\u5219\u4f1a\u5728\u8be5\u51fd\u6570\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5904\u505c\u4f4f\uff0c\u800c\u4e0d\u4f1a\u8df3\u8fc7\u6574\u4e2a\u51fd\u6570\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u8be5\u51fd\u6570\u7684\u673a\u5668\u6307\u4ee4\u3002\\r\\n\\r\\n### \uff084\uff09finish\\r\\n\\r\\n\u8fd0\u884c\u7a0b\u5e8f\uff0c\u76f4\u5230\u5f53\u524d\u51fd\u6570\u5b8c\u6210\u8fd4\u56de\uff0c\u5e76\u6253\u5370\u51fd\u6570\u8fd4\u56de\u65f6\u7684\u5806\u6808\u5730\u5740\u3001\u8fd4\u56de\u503c\u53ca\u53c2\u6570\u503c\u7b49\u4fe1\u606f\u3002\\r\\n\\r\\n### \uff085\uff09until\uff08\u7f29\u5199\u4e3au\uff09\\r\\n\\r\\n\u4e00\u76f4\u5728\u5faa\u73af\u4f53\u5185\u6267\u884c\u5355\u6b65\u800c\u9000\u4e0d\u51fa\u6765\u662f\u4e00\u4ef6\u4ee4\u4eba\u70e6\u607c\u7684\u4e8b\u60c5\uff0c\u7528until\u547d\u4ee4\u53ef\u4ee5\u8fd0\u884c\u7a0b\u5e8f\u76f4\u5230\u9000\u51fa\u5faa\u73af\u4f53\u3002\\r\\n\\r\\n### \uff086\uff09stepi\uff08\u7f29\u5199\u4e3asi\uff09\u548cnexti\uff08\u7f29\u5199\u4e3ani\uff09\\r\\n\\r\\nstepi\u548cnexti\u7528\u4e8e\u5355\u6b65\u8ddf\u8e2a\u4e00\u6761\u673a\u5668\u6307\u4ee4\u3002\u6bd4\u5982\uff0c\u4e00\u6761C\u7a0b\u5e8f\u4ee3\u7801\u6709\u53ef\u80fd\u7531\u6570\u6761\u673a\u5668\u6307\u4ee4\u5b8c\u6210\uff0cstepi\u548cnexti\u53ef\u4ee5\u5355\u6b65\u6267\u884c\u673a\u5668\u6307\u4ee4\uff0c\u76f8\u53cd\uff0cstep\u548cnext\u662fC\u8bed\u8a00\u7ea7\u522b\u7684\u547d\u4ee4\u3002\\r\\n\\r\\n\u53e6\u5916\uff0c\u8fd0\u884cdisplay/i$pc\u547d\u4ee4\u540e\uff0c\u5355\u6b65\u8ddf\u8e2a\u4f1a\u5728\u6253\u51fa\u7a0b\u5e8f\u4ee3\u7801\u7684\u540c\u65f6\u6253\u51fa\u673a\u5668\u6307\u4ee4\uff0c\u5373\u6c47\u7f16\u4ee3\u7801\\r\\n\\r\\n## 5.continue\u547d\u4ee4\\r\\n\\r\\n\u5f53\u7a0b\u5e8f\u88ab\u505c\u4f4f\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528continue\u547d\u4ee4\uff08\u7f29\u5199\u4e3ac\uff0cfg\u547d\u4ee4\u540ccontinue\u547d\u4ee4\uff09\u6062\u590d\u7a0b\u5e8f\u7684\u8fd0\u884c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\uff0c\u6216\u5230\u8fbe\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u547d\u4ee4\u683c\u5f0f\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ncontinue [ignore-count]\\r\\nc [ignore-count]\\r\\nfg [ignore-count]\\r\\n```\\r\\n\\r\\nignore-count\u8868\u793a\u5ffd\u7565\u5176\u540e\u591a\u5c11\u6b21\u65ad\u70b9\u3002\\r\\n\\r\\n\u5047\u8bbe\u6211\u4eec\u8bbe\u7f6e\u4e86\u51fd\u6570\u65ad\u70b9add\uff08\uff09\uff0c\u5e76\u89c2\u5bdfi\uff0c\u5219\u5728continue\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u6b21\u9047\u5230add\uff08\uff09\u51fd\u6570\u6216i\u53d1\u751f\u53d8\u5316\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u505c\u4f4f\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\n(gdb) continue\\r\\nContinuing.\\r\\nHardware watchpoint 3: i\\r\\nOld value = 2\\r\\nNew value = 3\\r\\n0x0804838d in main () at gdb_example.c:23\\r\\n23        for (i = 0; i < 10; i++)\\r\\n(gdb) continue\\r\\nContinuing.\\r\\nBreakpoint 1, main () at gdb_example.c:25\\r\\n25        sum[i] = add(array1[i], array2[i]);\\r\\n(gdb) continue\\r\\nContinuing.\\r\\nHardware watchpoint 3: i\\r\\nOld value = 3\\r\\nNew value = 4\\r\\n0x0804838d in main () at gdb_example.c:23\\r\\n23       for (i = 0; i < 10; i++)\\r\\n```\\r\\n\\r\\n## 6.print\u547d\u4ee4\\r\\n\\r\\n\u5728\u8c03\u8bd5\u7a0b\u5e8f\u65f6\uff0c\u5f53\u7a0b\u5e8f\u88ab\u505c\u4f4f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528print\u547d\u4ee4\uff08\u7f29\u5199\u4e3ap\uff09\uff0c\u6216\u662f\u540c\u4e49\u547d\u4ee4inspect\u6765\u67e5\u770b\u5f53\u524d\u7a0b\u5e8f\u7684\u8fd0\u884c\u6570\u636e\u3002print\u547d\u4ee4\u7684\u683c\u5f0f\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nprint <expr>\\r\\nprint /<f> <expr>\\r\\n```\\r\\n\\r\\n< expr>\u662f\u8868\u8fbe\u5f0f\uff0c\u4e5f\u662f\u88ab\u8c03\u8bd5\u7684\u7a0b\u5e8f\u4e2d\u7684\u8868\u8fbe\u5f0f\uff0c< f>\u662f\u8f93\u51fa\u7684\u683c\u5f0f\uff0c\u6bd4\u5982\uff0c\u5982\u679c\u8981\u628a\u8868\u8fbe\u5f0f\u6309\u5341\u516d\u8fdb\u5236\u7684\u683c\u5f0f\u8f93\u51fa\uff0c\u90a3\u4e48\u5c31\u662f/x\u3002\u5728\u8868\u8fbe\u5f0f\u4e2d\uff0c\u6709\u51e0\u79cdGDB\u6240\u652f\u6301\u7684\u64cd\u4f5c\u7b26\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u5728\u4efb\u4f55\u4e00\u79cd\u8bed\u8a00\u4e2d\uff0c@\u662f\u4e00\u4e2a\u548c\u6570\u7ec4\u6709\u5173\u7684\u64cd\u4f5c\u7b26\uff0c\uff1a\uff1a\u6307\u5b9a\u4e00\u4e2a\u5728\u6587\u4ef6\u6216\u662f\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\uff0c{< type>}< addr>\u8868\u793a\u4e00\u4e2a\u6307\u5411\u5185\u5b58\u5730\u5740< addr>\u7684\u7c7b\u578b\u4e3atype\u7684\u5bf9\u8c61\u3002\\r\\n\\r\\n\u4e0b\u9762\u6f14\u793a\u4e86\u67e5\u770bsum[]\u6570\u7ec4\u7684\u503c\u7684\u8fc7\u7a0b\uff1a\\r\\n\\r\\n```\\r\\n(gdb) print sum\\r\\n$2 = {133, 155, 0, 0, 0, 0, 0, 0, 0, 0}\\r\\n(gdb) next\\r\\nBreakpoint 1, main () at gdb_example.c:25\\r\\n25        sum[i] = add(array1[i], array2[i]);\\r\\n(gdb) next\\r\\n23       for (i = 0; i < 10; i++)\\r\\n(gdb) print sum\\r\\n$3 = {133, 155, 143, 0, 0, 0, 0, 0, 0, 0}\\r\\n```\\r\\n\\r\\n\u5f53\u9700\u8981\u67e5\u770b\u4e00\u6bb5\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u7684\u503c\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528GDB\u7684@\u64cd\u4f5c\u7b26\uff0c@\u7684\u5de6\u8fb9\u662f\u7b2c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff0c@\u7684\u53f3\u8fb9\u5219\u662f\u60f3\u67e5\u770b\u5185\u5b58\u7684\u957f\u5ea6\u3002\u4f8b\u5982\u5982\u4e0b\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\uff1a\\r\\n\\r\\n```\\r\\nint *array = (int *) malloc (len * sizeof (int));\\r\\n```\\r\\n\\r\\n\u5728GDB\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u8fd9\u6837\u663e\u793a\u8fd9\u4e2a\u52a8\u6001\u6570\u7ec4\u7684\u503c\uff1a\\r\\n\\r\\n```\\r\\np *array@len\\r\\n```\\r\\n\\r\\nprint\u7684\u8f93\u51fa\u683c\u5f0f\u5982\u4e0b\u3002\\r\\n\\r\\n- \xb7x\uff1a\u6309\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u3002\\r\\n- \xb7d\uff1a\u6309\u5341\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u3002\\r\\n- \xb7u\uff1a\u6309\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u65e0\u7b26\u53f7\u6574\u578b\u3002\\r\\n- \xb7o\uff1a\u6309\u516b\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u3002\\r\\n- \xb7t\uff1a\u6309\u4e8c\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u3002\\r\\n- \xb7a\uff1a\u6309\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u3002\\r\\n- \xb7c\uff1a\u6309\u5b57\u7b26\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u3002\\r\\n- \xb7f\uff1a\u6309\u6d6e\u70b9\u6570\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u3002\\r\\n\\r\\n\u6211\u4eec\u53ef\u7528display\u547d\u4ee4\u8bbe\u7f6e\u4e00\u4e9b\u81ea\u52a8\u663e\u793a\u7684\u53d8\u91cf\uff0c\u5f53\u7a0b\u5e8f\u505c\u4f4f\u65f6\uff0c\u6216\u662f\u5355\u6b65\u8ddf\u8e2a\u65f6\uff0c\u8fd9\u4e9b\u53d8\u91cf\u4f1a\u81ea\u52a8\u663e\u793a\u3002\\r\\n\\r\\n\u5982\u679c\u8981\u4fee\u6539\u53d8\u91cf\uff0c\u5982x\u7684\u503c\uff0c\u53ef\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\nprint x=4\\r\\n```\\r\\n\\r\\n\u5f53\u7528GDB\u7684print\u67e5\u770b\u7a0b\u5e8f\u8fd0\u884c\u65f6\u6570\u636e\u65f6\uff0c\u6bcf\u4e00\u4e2aprint\u90fd\u4f1a\u88abGDB\u8bb0\u5f55\u4e0b\u6765\u3002GDB\u4f1a\u4ee5$1\uff0c$2\uff0c$3\u2026\u8fd9\u6837\u7684\u65b9\u5f0f\u4e3a\u6bcf\u4e00\u4e2aprint\u547d\u4ee4\u7f16\u53f7\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7f16\u53f7\u8bbf\u95ee\u4ee5\u524d\u7684\u8868\u8fbe\u5f0f\uff0c\u5982$1\u3002\\r\\n\\r\\n## 7.watch\u547d\u4ee4\\r\\n\\r\\nwatch\u4e00\u822c\u7528\u6765\u89c2\u5bdf\u67d0\u4e2a\u8868\u8fbe\u5f0f\uff08\u53d8\u91cf\u4e5f\u662f\u4e00\u79cd\u8868\u8fbe\u5f0f\uff09\u7684\u503c\u662f\u5426\u6709\u4e86\u53d8\u5316\uff0c\u5982\u679c\u6709\u53d8\u5316\uff0c\u9a6c\u4e0a\u505c\u6b62\u7a0b\u5e8f\u8fd0\u884c\u3002\u6211\u4eec\u6709\u5982\u4e0b\u51e0\u79cd\u65b9\u6cd5\u6765\u8bbe\u7f6e\u89c2\u5bdf\u70b9\u3002\\r\\n\\r\\nwatch< expr>\uff1a\u4e3a\u8868\u8fbe\u5f0f\uff08\u53d8\u91cf\uff09expr\u8bbe\u7f6e\u4e00\u4e2a\u89c2\u5bdf\u70b9\u3002\u4e00\u65e6\u8868\u8fbe\u5f0f\u503c\u6709\u53d8\u5316\u65f6\uff0c\u9a6c\u4e0a\u505c\u6b62\u7a0b\u5e8f\u8fd0\u884c\u3002\\r\\n\\r\\nrwatch< expr>\uff1a\u5f53\u8868\u8fbe\u5f0f\uff08\u53d8\u91cf\uff09expr\u88ab\u8bfb\u65f6\uff0c\u505c\u6b62\u7a0b\u5e8f\u8fd0\u884c\u3002\\r\\n\\r\\nawatch< expr>\uff1a\u5f53\u8868\u8fbe\u5f0f\uff08\u53d8\u91cf\uff09\u7684\u503c\u88ab\u8bfb\u6216\u88ab\u5199\u65f6\uff0c\u505c\u6b62\u7a0b\u5e8f\u8fd0\u884c\u3002\\r\\n\\r\\ninfo watchpoints\uff1a\u5217\u51fa\u5f53\u524d\u6240\u8bbe\u7f6e\u7684\u6240\u6709\u89c2\u5bdf\u70b9\u3002\\r\\n\\r\\n\u4e0b\u9762\u6f14\u793a\u4e86\u89c2\u5bdfi\u5e76\u5728\u8fde\u7eed\u8fd0\u884cnext\u65f6\u4e00\u65e6\u53d1\u73b0i\u53d8\u5316\uff0ci\u503c\u5c31\u4f1a\u663e\u793a\u51fa\u6765\u7684\u8fc7\u7a0b\uff1a\\r\\n\\r\\n```\\r\\n(gdb) watch i\\r\\nHardware watchpoint 3: i\\r\\n(gdb) next\\r\\n23       for (i = 0; i < 10; i++)\\r\\n(gdb) next\\r\\nHardware watchpoint 3: i\\r\\nOld value = 0\\r\\nNew value = 1\\r\\n0x0804838d in main () at gdb_example.c:23\\r\\n23       for (i = 0; i < 10; i++)\\r\\n(gdb) next\\r\\nBreakpoint 1, main () at gdb_example.c:25\\r\\n25        sum[i] = add(array1[i], array2[i]);\\r\\n(gdb) next\\r\\n23       for (i = 0; i < 10; i++)\\r\\n(gdb) next\\r\\nHardware watchpoint 3: i\\r\\nOld value = 1\\r\\nNew value = 2\\r\\n0x0804838d in main () at gdb_example.c:23\\r\\n23       for (i = 0; i < 10; i++)\\r\\n```\\r\\n\\r\\n## 8.examine\u547d\u4ee4\\r\\n\\r\\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528examine\u547d\u4ee4\uff08\u7f29\u5199\u4e3ax\uff09\u6765\u67e5\u770b\u5185\u5b58\u5730\u5740\u4e2d\u7684\u503c\u3002examine\u547d\u4ee4\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\nx/<n/f/u> <addr>\\r\\n```\\r\\n\\r\\n< addr>\u8868\u793a\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u3002\u201cx/\u201d\u540e\u7684n\u3001f\u3001u\u90fd\u662f\u53ef\u9009\u7684\u53c2\u6570\uff0cn\u662f\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8868\u793a\u663e\u793a\u5185\u5b58\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u5f53\u524d\u5730\u5740\u5411\u540e\u663e\u793a\u51e0\u4e2a\u5730\u5740\u7684\u5185\u5bb9\uff1bf\u8868\u793a\u663e\u793a\u7684\u683c\u5f0f\uff0c\u5982\u679c\u5730\u5740\u6240\u6307\u7684\u662f\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u683c\u5f0f\u53ef\u4ee5\u662fs\uff0c\u5982\u679c\u5730\u5740\u662f\u6307\u4ee4\u5730\u5740\uff0c\u90a3\u4e48\u683c\u5f0f\u53ef\u4ee5\u662fi\uff1bu\u8868\u793a\u4ece\u5f53\u524d\u5730\u5740\u5f80\u540e\u8bf7\u6c42\u7684\u5b57\u8282\u6570\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\u7684\u8bdd\uff0cGDB\u9ed8\u8ba4\u7684\u662f4\u5b57\u8282\u3002u\u53c2\u6570\u53ef\u4ee5\u88ab\u4e00\u4e9b\u5b57\u7b26\u4ee3\u66ff\uff1ab\u8868\u793a\u5355\u5b57\u8282\uff0ch\u8868\u793a\u53cc\u5b57\u8282\uff0cw\u8868\u793a\u56db\u5b57\u8282\uff0cg\u8868\u793a\u516b\u5b57\u8282\u3002\u5f53\u6211\u4eec\u6307\u5b9a\u4e86\u5b57\u8282\u957f\u5ea6\u540e\uff0cGDB\u4f1a\u4ece\u6307\u5b9a\u7684\u5185\u5b58\u5730\u5740\u5f00\u59cb\uff0c\u8bfb\u5199\u6307\u5b9a\u5b57\u8282\uff0c\u5e76\u628a\u5176\u5f53\u4f5c\u4e00\u4e2a\u503c\u53d6\u51fa\u6765\u3002n\u3001f\u3001u\u8fd93\u4e2a\u53c2\u6570\u53ef\u4ee5\u4e00\u8d77\u4f7f\u7528\uff0c\u4f8b\u5982\u547d\u4ee4x/3uh 0x54320\u8868\u793a\u4ece\u5185\u5b58\u5730\u57400x54320\u5f00\u59cb\u4ee5\u53cc\u5b57\u8282\u4e3a1\u4e2a\u5355\u4f4d\uff08h\uff09\u300116\u8fdb\u5236\u65b9\u5f0f\uff08u\uff09\u663e\u793a3\u4e2a\u5355\u4f4d\uff083\uff09\u7684\u5185\u5b58\u3002\\r\\n\\r\\n## 9.set\u547d\u4ee4\\r\\n\\r\\nexamine\u547d\u4ee4\u7528\u4e8e\u67e5\u770b\u5185\u5b58\uff0c\u800cset\u547d\u4ee4\u7528\u4e8e\u4fee\u6539\u5185\u5b58\u3002\u5b83\u7684\u547d\u4ee4\u683c\u5f0f\u662f\u201cset*\u6709\u7c7b\u578b\u7684\u6307\u9488=value\u201d\u3002\\r\\n\\r\\n\u6bd4\u5982\uff0c\u4e0b\u5217\u7a0b\u5e8f\uff0c\u5728\u7528gdb\u8fd0\u884c\u8d77\u6765\u540e\uff0c\u901a\u8fc7Ctrl+C\u505c\u4f4f\u3002\\r\\n\\r\\n```\\r\\nmain()\\r\\n{\\r\\n        void *p = malloc(16);\\r\\n        while(1);\\r\\n}\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u53ef\u4ee5\u5728\u8fd0\u884c\u4e2d\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u4fee\u6539p\u6307\u5411\u7684\u5185\u5b58\u3002\\r\\n\\r\\n```\\r\\n(gdb) set *(unsigned char *)p=\'h\'\\r\\n(gdb) set *(unsigned char *)(p+1)=\'e\'\\r\\n(gdb) set *(unsigned char *)(p+2)=\'l\'\\r\\n(gdb) set *(unsigned char *)(p+3)=\'l\'\\r\\n(gdb) set *(unsigned char *)(p+4)=\'o\'\\r\\n```\\r\\n\\r\\n\u770b\u770b\u7ed3\u679c\uff1a\\r\\n\\r\\n```\\r\\n(gdb) x/s p\\r\\n0x804b008:      \\"hello\\"\\r\\n```\\r\\n\\r\\n\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5730\u5740\u5e38\u6570\uff1a\\r\\n\\r\\n```\\r\\n(gdb) p p\\r\\n$2 = (void *) 0x804b008\\r\\n(gdb) set *(unsigned char *)0x804b008=\'w\'\\r\\n(gdb) set *(unsigned char *)0x804b009=\'o\'\\r\\n(gdb) set *(unsigned char *)0x804b00a=\'r\'\\r\\n(gdb) set *(unsigned char *)0x804b00b=\'l\'\\r\\n(gdb) set *(unsigned char *)0x804b00c=\'d\'\\r\\n(gdb) x/s 0x804b008\\r\\n0x804b008:      \\"world\\"\\r\\n```\\r\\n\\r\\n## 10.jump\u547d\u4ee4\\r\\n\\r\\n\u4e00\u822c\u6765\u8bf4\uff0c\u88ab\u8c03\u8bd5\u7a0b\u5e8f\u4f1a\u6309\u7167\u7a0b\u5e8f\u4ee3\u7801\u7684\u8fd0\u884c\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\uff0c\u4f46\u662fGDB\u4e5f\u63d0\u4f9b\u4e86\u4e71\u5e8f\u6267\u884c\u7684\u529f\u80fd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cGDB\u53ef\u4ee5\u4fee\u6539\u7a0b\u5e8f\u7684\u6267\u884c\u987a\u5e8f\uff0c\u4ece\u800c\u8ba9\u7a0b\u5e8f\u968f\u610f\u8df3\u8dc3\u3002\u8fd9\u4e2a\u529f\u80fd\u53ef\u4ee5\u7531GDB\u7684jump\u547d\u4ee4jump< linespec>\u6765\u6307\u5b9a\u4e0b\u4e00\u6761\u8bed\u53e5\u7684\u8fd0\u884c\u70b9\u3002< linespec>\u53ef\u4ee5\u662f\u6587\u4ef6\u7684\u884c\u53f7\uff0c\u53ef\u4ee5\u662ffile\uff1aline\u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f+num\u8fd9\u79cd\u504f\u79fb\u91cf\u683c\u5f0f\uff0c\u8868\u793a\u4e0b\u4e00\u6761\u8fd0\u884c\u8bed\u53e5\u4ece\u54ea\u91cc\u5f00\u59cb\u3002\\r\\n\\r\\n```\\r\\njump <address>\\r\\n```\\r\\n\\r\\n\u8fd9\u91cc\u7684< address>\u662f\u4ee3\u7801\u884c\u7684\u5185\u5b58\u5730\u5740\u3002\\r\\n\\r\\n\u6ce8\u610f\uff1a jump\u547d\u4ee4\u4e0d\u4f1a\u6539\u53d8\u5f53\u524d\u7a0b\u5e8f\u6808\u4e2d\u7684\u5185\u5bb9\uff0c\u5982\u679c\u4f7f\u7528jump\u4ece\u4e00\u4e2a\u51fd\u6570\u8df3\u8f6c\u5230\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u5f53\u8df3\u8f6c\u5230\u7684\u51fd\u6570\u8fd0\u884c\u5b8c\u8fd4\u56de\uff0c\u8fdb\u884c\u51fa\u6808\u64cd\u4f5c\u65f6\u5fc5\u7136\u4f1a\u53d1\u751f\u9519\u8bef\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u6700\u597d\u53ea\u7528jump\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u4e2d\u8fdb\u884c\u8df3\u8f6c\u3002\\r\\n\\r\\n## 11.signal\u547d\u4ee4\\r\\n\\r\\n\u4f7f\u7528singal\u547d\u4ee4\uff0c\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u4fe1\u53f7\u91cf\u7ed9\u88ab\u8c03\u8bd5\u7684\u7a0b\u5e8f\uff0c\u5982\u4e2d\u65ad\u4fe1\u53f7Ctrl+C\u3002\u4e8e\u662f\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u4efb\u610f\u4f4d\u7f6e\u5904\u8bbe\u7f6e\u65ad\u70b9\uff0c\u5e76\u5728\u8be5\u65ad\u70b9\u5904\u7528GDB\u4ea7\u751f\u4e00\u4e2a\u4fe1\u53f7\u91cf\uff0c\u8fd9\u79cd\u7cbe\u786e\u5730\u5728\u67d0\u5904\u4ea7\u751f\u4fe1\u53f7\u7684\u65b9\u6cd5\u975e\u5e38\u6709\u5229\u4e8e\u7a0b\u5e8f\u7684\u8c03\u8bd5\u3002\\r\\n\\r\\nsignal\u547d\u4ee4\u7684\u8bed\u6cd5\u662fsignal< signal>\uff0cUNIX\u7684\u7cfb\u7edf\u4fe1\u53f7\u91cf\u901a\u5e38\u4e3a1~15\uff0c\u56e0\u6b64< signal>\u7684\u53d6\u503c\u4e5f\u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u3002\\r\\n\\r\\n## 12.return\u547d\u4ee4\\r\\n\\r\\n\u5982\u679c\u5728\u51fd\u6570\u4e2d\u8bbe\u7f6e\u4e86\u8c03\u8bd5\u65ad\u70b9\uff0c\u5728\u65ad\u70b9\u540e\u8fd8\u6709\u8bed\u53e5\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528return\u547d\u4ee4\u5f3a\u5236\u51fd\u6570\u5ffd\u7565\u8fd8\u6ca1\u6709\u6267\u884c\u7684\u8bed\u53e5\u5e76\u8fd4\u56de\u3002\\r\\n\\r\\n```\\r\\nreturn\\r\\nreturn <expression>\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0return\u547d\u4ee4\u7528\u4e8e\u53d6\u6d88\u5f53\u524d\u51fd\u6570\u7684\u6267\u884c\uff0c\u5e76\u7acb\u5373\u8fd4\u56de\uff0c\u5982\u679c\u6307\u5b9a\u4e86< expression>\uff0c\u90a3\u4e48\u8be5\u8868\u8fbe\u5f0f\u7684\u503c\u4f1a\u88ab\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002\\r\\n\\r\\n## 13.call\u547d\u4ee4\\r\\n\\r\\ncall\u547d\u4ee4\u7528\u4e8e\u5f3a\u5236\u8c03\u7528\u67d0\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\ncall <expr>\\r\\n```\\r\\n\\r\\n\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u51fd\u6570\uff0c\u4ee5\u6b64\u8fbe\u5230\u5f3a\u5236\u8c03\u7528\u51fd\u6570\u7684\u76ee\u7684\uff0c\u5b83\u4f1a\u663e\u793a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff08\u5982\u679c\u51fd\u6570\u8fd4\u56de\u503c\u4e0d\u662fvoid\uff09\u3002\u6bd4\u5982\u5728\u4e0b\u5217\u7a0b\u5e8f\u6267\u884cwhile\uff081\uff09\u7684\u65f6\u5019\uff1a\\r\\n\\r\\n```\\r\\nmain()\\r\\n{\\r\\n        void *p = malloc(16);\\r\\n        while(1);\\r\\n}\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u5f3a\u5236\u8981\u6c42\u5176\u6267\u884cstrcpy\uff08\uff09\u548cprintf\uff08\uff09\uff1a\\r\\n\\r\\n```\\r\\n(gdb) call strcpy(p, \\"hello world\\")\\r\\n$3 = 134524936\\r\\n(gdb) call printf(\\"%s\\\\n\\", p)\\r\\nhello world\\r\\n$4 = 12\\r\\n```\\r\\n\\r\\n## 14.info\u547d\u4ee4\\r\\n\\r\\ninfo\u547d\u4ee4\u53ef\u4ee5\u7528\u6765\u5728\u8c03\u8bd5\u65f6\u67e5\u770b\u5bc4\u5b58\u5668\u3001\u65ad\u70b9\u3001\u89c2\u5bdf\u70b9\u548c\u4fe1\u53f7\u7b49\u4fe1\u606f\u3002\u8981\u67e5\u770b\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\ninfo registers \uff08\u67e5\u770b\u9664\u4e86\u6d6e\u70b9\u5bc4\u5b58\u5668\u4ee5\u5916\u7684\u5bc4\u5b58\u5668\uff09\\r\\ninfo all-registers \uff08\u67e5\u770b\u6240\u6709\u5bc4\u5b58\u5668\uff0c\u5305\u62ec\u6d6e\u70b9\u5bc4\u5b58\u5668\uff09\\r\\ninfo registers <regname ...>  \uff08\u67e5\u770b\u6240\u6307\u5b9a\u7684\u5bc4\u5b58\u5668\uff09\\r\\n```\\r\\n\\r\\n\u8981\u67e5\u770b\u65ad\u70b9\u4fe1\u606f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\ninfo break\u8981\u5217\u51fa\u5f53\u524d\u6240\u8bbe\u7f6e\u7684\u6240\u6709\u89c2\u5bdf\u70b9\uff0c\u53ef\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a\\r\\ninfo watchpoints\\r\\n```\\r\\n\\r\\n\u8981\u67e5\u770b\u6709\u54ea\u4e9b\u4fe1\u53f7\u6b63\u5728\u88abGDB\u68c0\u6d4b\uff0c\u53ef\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\uff1a\\r\\n\\r\\n```\\r\\ninfo signals\\r\\ninfo handle\\r\\n```\\r\\n\\r\\n\u4e5f\u53ef\u4ee5\u4f7f\u7528info line\u547d\u4ee4\u6765\u67e5\u770b\u6e90\u4ee3\u7801\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u3002info line\u540e\u9762\u53ef\u4ee5\u8ddf\u884c\u53f7\u3001\u51fd\u6570\u540d\u3001\u6587\u4ef6\u540d\uff1a\u884c\u53f7\u3001\u6587\u4ef6\u540d\uff1a\u51fd\u6570\u540d\u7b49\u591a\u79cd\u5f62\u5f0f\uff0c\u4f8b\u5982\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4f1a\u6253\u5370\u51fa\u6240\u6307\u5b9a\u7684\u6e90\u7801\u5728\u8fd0\u884c\u65f6\u7684\u5185\u5b58\u5730\u5740\uff1a\\r\\n\\r\\n```\\r\\ninfo line tst.c:func\\r\\n```\\r\\n\\r\\n## 15.disassemble\\r\\n\\r\\ndisassemble\u547d\u4ee4\u7528\u4e8e\u53cd\u6c47\u7f16\uff0c\u53ef\u7528\u5b83\u6765\u67e5\u770b\u5f53\u524d\u6267\u884c\u65f6\u7684\u6e90\u4ee3\u7801\u7684\u673a\u5668\u7801\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u628a\u76ee\u524d\u5185\u5b58\u4e2d\u7684\u6307\u4ee4\u51b2\u5237\u51fa\u6765\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u7528\u4e8e\u67e5\u770b\u51fd\u6570func\u7684\u6c47\u7f16\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\n(gdb) disassemble func\\r\\nDump of assembler code for function func:\\r\\n0x8048450 <func>:      push   %ebp\\r\\n0x8048451 <func+1>:    mov    %esp,%ebp\\r\\n0x8048453 <func+3>:    sub    $0x18,%esp\\r\\n0x8048456 <func+6>:    movl   $0x0,0xfffffffc(%ebp)\\r\\n...\\r\\nEnd of assembler dump.\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.9\u3000DM9000\u7f51\u5361\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.9\u3000DM9000\u7f51\u5361\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.9\u3000DM9000\u7f51\u5361\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.9\u3000DM9000\u7f51\u5361\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b.md","title":"14.9.1\u3000DM9000\u7f51\u5361\u786c\u4ef6\u63cf\u8ff0","description":"DM9000\u662f\u5f00\u53d1\u677f\u91c7\u7528\u7684\u7f51\u7edc\u82af\u7247\uff0c\u662f\u4e00\u4e2a\u9ad8\u5ea6\u96c6\u6210\u4e14\u529f\u8017\u5f88\u4f4e\u7684\u9ad8\u901f\u7f51\u7edc\u63a7\u5236\u5668\uff0c\u53ef\u4ee5\u548cCPU\u76f4\u8fde\uff0c\u652f\u630110/100MB\u4ee5\u592a\u7f51\u8fde\u63a5\uff0c\u82af\u7247\u5185\u90e8\u81ea\u5e264KB\u53cc\u5b57\u8282\u7684SRAM\uff083KB\u7528\u6765\u53d1\u9001\uff0c13KB\u7528\u6765\u63a5\u6536\uff09\u3002\u9488\u5bf9\u4e0d\u540c\u7684\u5904\u7406\u5668\uff0c\u63a5\u53e3\u652f\u63018\u4f4d\u300116\u4f4d\u548c32\u4f4d\u3002DM9000\u4e00\u822c\u76f4\u63a5\u6302\u5728\u5916\u9762\u7684\u5185\u5b58\u603b\u7ebf\u4e0a\u3002","date":"2025-09-15T14:44:14.361Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":6.04,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"21.1.1\u3000GDB\u7684\u57fa\u672c\u7528\u6cd5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.1\u3000GDB\u8c03\u8bd5\u5668\u7684\u7528\u6cd5"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3"}},"content":"DM9000\u662f\u5f00\u53d1\u677f\u91c7\u7528\u7684\u7f51\u7edc\u82af\u7247\uff0c\u662f\u4e00\u4e2a\u9ad8\u5ea6\u96c6\u6210\u4e14\u529f\u8017\u5f88\u4f4e\u7684\u9ad8\u901f\u7f51\u7edc\u63a7\u5236\u5668\uff0c\u53ef\u4ee5\u548cCPU\u76f4\u8fde\uff0c\u652f\u630110/100MB\u4ee5\u592a\u7f51\u8fde\u63a5\uff0c\u82af\u7247\u5185\u90e8\u81ea\u5e264KB\u53cc\u5b57\u8282\u7684SRAM\uff083KB\u7528\u6765\u53d1\u9001\uff0c13KB\u7528\u6765\u63a5\u6536\uff09\u3002\u9488\u5bf9\u4e0d\u540c\u7684\u5904\u7406\u5668\uff0c\u63a5\u53e3\u652f\u63018\u4f4d\u300116\u4f4d\u548c32\u4f4d\u3002DM9000\u4e00\u822c\u76f4\u63a5\u6302\u5728\u5916\u9762\u7684\u5185\u5b58\u603b\u7ebf\u4e0a\u3002\\r\\n\\r\\n# 14.9.2\u3000DM9000\u7f51\u5361\u9a71\u52a8\u8bbe\u8ba1\u5206\u6790\\r\\n\\r\\nDM9000\u7f51\u5361\u9a71\u52a8\u4f4d\u4e8e\u5185\u6838\u6e90\u4ee3\u7801\u7684drivers/net/dm9000.c\u4e2d\uff0c\u5b83\u57fa\u4e8e\u5e73\u53f0\u9a71\u52a8\u67b6\u6784\uff0c\u4ee3\u7801\u6e05\u535514.19\u62bd\u53d6\u4e86\u5b83\u7684\u4e3b\u5e72\u3002\u5176\u6838\u5fc3\u5de5\u4f5c\u662f\u5b9e\u73b0\u4e86\u524d\u6587\u6240\u8ff0net_device\u7ed3\u6784\u4f53\u4e2d\u7684hard_start_xmit\uff08\uff09\u3001open\uff08\uff09\u3001stop\uff08\uff09\u3001set_multicast_list\uff08\uff09\u3001do_ioctl\uff08\uff09\u3001tx_timeout\uff08\uff09\u7b49\u6210\u5458\u51fd\u6570\uff0c\u5e76\u501f\u52a9\u4e2d\u65ad\u8f85\u52a9\u8fdb\u884c\u7f51\u7edc\u6570\u636e\u5305\u7684\u6536\u53d1\uff0c\u53e6\u5916\u5b83\u4e5f\u5b9e\u73b0\u4e86ethtool_ops\u4e2d\u7684\u6210\u5458\u51fd\u6570\u3002\u7279\u522b\u6ce8\u610f\u4ee3\u7801\u4e2d\u7684\u9ed1\u4f53\u90e8\u5206\uff0c\u5b83\u6807\u660e\u4e86\u5173\u952e\u7684\u6570\u636e\u6536\u53d1\u6d41\u7a0b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.19\u3000DM9000\u7f51\u5361\u9a71\u52a8\\r\\n\\r\\n```\\r\\n  1static const struct ethtool_ops dm9000_ethtool_ops = {\\r\\n  2        .get_drvinfo            = dm9000_get_drvinfo,\\r\\n  3        .get_settings           = dm9000_get_settings,\\r\\n  4        .set_settings           = dm9000_set_settings,\\r\\n  5        .get_msglevel           = dm9000_get_msglevel,\\r\\n  6        .set_msglevel           = dm9000_set_msglevel,\\r\\n  7        \u2026\\r\\n 8};\\r\\n  9\\r\\n 10/* Our watchdog timed out. Called by the networking layer */\\r\\n 11static void dm9000_timeout(struct net_device *dev)\\r\\n 12{\\r\\n 13        ...\\r\\n 14        netif_stop_queue(dev);\\r\\n 15        dm9000_init_dm9000(dev);\\r\\n 16        dm9000_unmask_interrupts(db);\\r\\n 17        /* We can accept TX packets again */\\r\\n 18        dev->trans_start = jiffies; /* prevent tx timeout */\\r\\n 19        netif_wake_queue(dev);\\r\\n 20\\r\\n 21        \u2026\\r\\n 22}\\r\\n 23\\r\\n 24 static int\\r\\n 25 dm9000_start_xmit(struct sk_buff *skb, struct net_device *dev)\\r\\n 26 {\\r\\n 27         ...\\r\\n 28         /* TX control: First packet immediately send, second packet queue */\\r\\n 29         if (db->tx_pkt_cnt == 1) {\\r\\n 30                 dm9000_send_packet(dev, skb->ip_summed, skb->len);\\r\\n 31         } else {\\r\\n 32                 /* Second packet */\\r\\n 33                 db->queue_pkt_len = skb->len;\\r\\n 34                 db->queue_ip_summed = skb->ip_summed;\\r\\n 35                 netif_stop_queue(dev);\\r\\n 36         }\\r\\n 37\\r\\n 38         spin_unlock_irqrestore(&db->lock, flags);\\r\\n 39\\r\\n 40         /* free this SKB */\\r\\n 41         dev_consume_skb_any(skb);\\r\\n 42\\r\\n 43         return NETDEV_TX_OK;\\r\\n 44 }\\r\\n 45\\r\\n 46 static void dm9000_tx_done(struct net_device *dev, board_info_t *db)\\r\\n 47 {\\r\\n 48         int tx_status = ior(db, DM9000_NSR);    /* Got TX status */\\r\\n 49\\r\\n 50         if (tx_status & (NSR_TX2END | NSR_TX1END)) {\\r\\n 51                 /* One packet sent complete */\\r\\n 52                 db->tx_pkt_cnt--;\\r\\n 53                 dev->stats.tx_packets++;\\r\\n 54\\r\\n 55                 if (netif_msg_tx_done(db))\\r\\n 56                         dev_dbg(db->dev, \\"tx done, NSR %02x\\\\n\\", tx_status);\\r\\n 57\\r\\n 58                 /* Queue packet check & send */\\r\\n 59                 if (db->tx_pkt_cnt > 0)\\r\\n 60                         dm9000_send_packet(dev, db->queue_ip_summed,\\r\\n 61                                            db->queue_pkt_len);\\r\\n 62                 netif_wake_queue(dev);\\r\\n 63         }\\r\\n 64 }\\r\\n 65\\r\\n 66 static void\\r\\n 67 dm9000_rx(struct net_device *dev)\\r\\n 68 {\\r\\n 69         ...\\r\\n 70\\r\\n 71         /* Check packet ready or not */\\r\\n 72         do {\\r\\n 73                 ...\\r\\n 74\\r\\n 75                 /* Move data from DM9000*/\\r\\n 76                 if (GoodPacket &&\\r\\n 77                     ((skb = netdev_alloc_skb(dev, RxLen + 4)) != NULL)) {\\r\\n 78                         skb_reserve(skb, 2);\\r\\n 79                         rdptr = (u8*) skb_put(skb, RxLen - 4);\\r\\n 80\\r\\n 81                         /* Read received packet from RX SRAM */\\r\\n 82\\r\\n 83                         (db->inblk)(db->io_data, rdptr, RxLen);\\r\\n 84                         dev->stats.rx_bytes += RxLen;\\r\\n 85\\r\\n 86                         /* Pass to upper layer */\\r\\n 87                         skb->protocol = eth_type_trans(skb, dev);\\r\\n 88                         if (dev->features & NETIF_F_RXCSUM) {\\r\\n 89                                 if ((((rxbyte & 0x1c) << 3) & rxbyte) == 0)\\r\\n 90                                         skb->ip_summed = CHECKSUM_UNNECESSARY;\\r\\n 91                                 else\\r\\n 92                                         skb_checksum_none_assert(skb);\\r\\n 93                         }\\r\\n 94                         netif_rx(skb);\\r\\n 95                         dev->stats.rx_packets++;\\r\\n 96\\r\\n 97                 }...\\r\\n 98         } while (rxbyte & DM9000_PKT_RDY);\\r\\n 99 }\\r\\n100\\r\\n101 static irqreturn_t dm9000_interrupt(int irq, void *dev_id)\\r\\n102 {\\r\\n103         ...\\r\\n104         /* Received the coming packet */\\r\\n105         if (int_status & ISR_PRS)\\r\\n106                 dm9000_rx(dev);\\r\\n107\\r\\n108         /* Trnasmit Interrupt check */\\r\\n109         if (int_status & ISR_PTS)\\r\\n110                 dm9000_tx_done(dev, db);\\r\\n111\\r\\n112         ...\\r\\n113         return IRQ_HANDLED;\\r\\n114 }\\r\\n115\\r\\n116 static int\\r\\n117 dm9000_open(struct net_device *dev)\\r\\n118 {\\r\\n119         ...\\r\\n120\\r\\n121         /* Initialize DM9000board */\\r\\n122         dm9000_init_dm9000(dev);\\r\\n123\\r\\n124         if (request_irq(dev->irq, dm9000_interrupt, irqflags, dev->name, dev))\\r\\n125                 return -EAGAIN;\\r\\n126         ...\\r\\n127\\r\\n128         mii_check_media(&db->mii, netif_msg_link(db), 1);\\r\\n129         netif_start_queue(dev);\\r\\n130\\r\\n131         return 0;\\r\\n132 }\\r\\n133\\r\\n134 static int\\r\\n135 dm9000_stop(struct net_device *ndev)\\r\\n136 {\\r\\n137         ...\\r\\n138\\r\\n139         netif_stop_queue(ndev);\\r\\n140         netif_carrier_off(ndev);\\r\\n141\\r\\n142         /* free interrupt */\\r\\n143         free_irq(ndev->irq, ndev);\\r\\n144\\r\\n145         dm9000_shutdown(ndev);\\r\\n146\\r\\n147         return 0;\\r\\n148 }\\r\\n149\\r\\n150 static const struct net_device_ops dm9000_netdev_ops = {\\r\\n151         .ndo_open               = dm9000_open,\\r\\n152         .ndo_stop               = dm9000_stop,\\r\\n153         .ndo_start_xmit         = dm9000_start_xmit,\\r\\n154         .ndo_tx_timeout         = dm9000_timeout,\\r\\n155         .ndo_set_rx_mode        = dm9000_hash_table,\\r\\n156         .ndo_do_ioctl           = dm9000_ioctl,\\r\\n157         .ndo_change_mtu         = eth_change_mtu,\\r\\n158         .ndo_set_features       = dm9000_set_features,\\r\\n159         .ndo_validate_addr      = eth_validate_addr,\\r\\n160         .ndo_set_mac_address    = eth_mac_addr,\\r\\n161 #ifdef CONFIG_NET_POLL_CONTROLLER\\r\\n162         .ndo_poll_controller    = dm9000_poll_controller,\\r\\n163 #endif\\r\\n164 };\\r\\n165\\r\\n166\\r\\n167 /*\\r\\n168  * Search DM9000board, allocate space and register it\\r\\n169  */\\r\\n170 static int\\r\\n171 dm9000_probe(struct platform_device *pdev)\\r\\n172 {\\r\\n173         ...\\r\\n174\\r\\n175         /* Init network device */\\r\\n176         ndev = alloc_etherdev(sizeof(struct board_info));\\r\\n177         ...\\r\\n178\\r\\n179         /* setup board info structure */\\r\\n180         db = netdev_priv(ndev);\\r\\n181\\r\\n182         ...\\r\\n183\\r\\n184         ...\\r\\n185         /* driver system function */\\r\\n186         ether_setup(ndev);\\r\\n187\\r\\n188         ndev->netdev_ops        = &dm9000_netdev_ops;\\r\\n189         ndev->watchdog_timeo    = msecs_to_jiffies(watchdog);\\r\\n190         ndev->ethtool_ops       = &dm9000_ethtool_ops;\\r\\n191\\r\\n192         ...\\r\\n193         ret = register_netdev(ndev);\\r\\n194\\r\\n195 }\\r\\n196\\r\\n197 static int\\r\\n198 dm9000_drv_remove(struct platform_device *pdev)\\r\\n199 {\\r\\n200         struct net_device *ndev = platform_get_drvdata(pdev);\\r\\n201\\r\\n202         unregister_netdev(ndev);\\r\\n203         dm9000_release_board(pdev, netdev_priv(ndev));\\r\\n204         free_netdev(ndev);              /* free device structure */\\r\\n205         ...\\r\\n206 }\\r\\n207\\r\\n208 #ifdef CONFIG_OF\\r\\n209 static const struct of_device_id dm9000_of_matches[] = {\\r\\n210         { .compatible = \\"davicom,dm9000\\", },\\r\\n211         { /* sentinel */ }\\r\\n212 };\\r\\n213 MODULE_DEVICE_TABLE(of, dm9000_of_matches);\\r\\n214 #endif\\r\\n215\\r\\n216 static struct platform_driver dm9000_driver = {\\r\\n217         .driver = {\\r\\n218                 .name    = \\"dm9000\\",\\r\\n219                 .owner   = THIS_MODULE,\\r\\n220                 .pm      = &dm9000_drv_pm_ops,\\r\\n221                 .of_match_table = of_match_ptr(dm9000_of_matches),\\r\\n222         },\\r\\n223         .probe   = dm9000_probe,\\r\\n224         .remove  = dm9000_drv_remove,\\r\\n225 };\\r\\n226\\r\\n227 module_platform_driver(dm9000_driver);\\r\\n```\\r\\n\\r\\nDM9000\u9a71\u52a8\u7684\u5b9e\u73b0\u4e0e\u5177\u4f53CPU\u65e0\u5173\uff0c\u5728\u5c06\u8be5\u9a71\u52a8\u79fb\u690d\u5230\u7279\u5b9a\u7535\u8def\u677f\u65f6\uff0c\u53ea\u9700\u8981\u5728\u677f\u6587\u4ef6\u4e2d\u4e3a\u4e0e\u677f\u4e0aDM9000\u5bf9\u5e94\u7684\u5e73\u53f0\u8bbe\u5907\u7684\u5bc4\u5b58\u5668\u548c\u6570\u636e\u57fa\u5730\u5740\u8fdb\u884c\u8d4b\u503c\uff0c\u5e76\u6307\u5b9a\u6b63\u786e\u7684IRQ\u8d44\u6e90\u5373\u53ef\uff0c\u4ee3\u7801\u6e05\u535514.20\u7ed9\u51fa\u4e86\u5728arch/arm/mach-at91/board-sam9261ek.c\u677f\u6587\u4ef6\u4e2d\u5bf9DM9000\u6dfb\u52a0\u7684\u5185\u5bb9\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.20\u3000board-sam9261ek\u677f\u6587\u4ef6\u4e2d\u7684DM9000\u7684\u5e73\u53f0\u8bbe\u5907\\r\\n\\r\\n```\\r\\n 1static struct resource dm9000_resource[] = {\\r\\n 2        [0] = {\\r\\n 3                .start  = AT91_CHIPSELECT_2,\\r\\n 4                .end    = AT91_CHIPSELECT_2+ 3,\\r\\n 5                .flags  = IORESOURCE_MEM\\r\\n 6        },\\r\\n 7        [1] = {\\r\\n 8                .start  = AT91_CHIPSELECT_2+ 0x44,\\r\\n 9                .end    = AT91_CHIPSELECT_2+ 0xFF,\\r\\n10                .flags  = IORESOURCE_MEM\\r\\n11        },\\r\\n12        [2] = {\\r\\n13                .flags  = IORESOURCE_IRQ\\r\\n14                        | IORESOURCE_IRQ_LOWEDGE | IORESOURCE_IRQ_HIGHEDGE,\\r\\n15        }\\r\\n16};\\r\\n17\\r\\n18static struct dm9000_plat_data dm9000_platdata = {\\r\\n19        .flags          = DM9000_PLATF_16BITONLY | DM9000_PLATF_NO_EEPROM,\\r\\n20};\\r\\n21\\r\\n22static struct platform_device dm9000_device = {\\r\\n23        .name           = \\"dm9000\\",\\r\\n24        .id             = 0,\\r\\n25        .num_resources  = ARRAY_SIZE(dm9000_resource),\\r\\n26        .resource       = dm9000_resource,\\r\\n27        .dev            = {\\r\\n28                .platform_data  = &dm9000_platdata,\\r\\n29        }\\r\\n30};\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3","description":"\u5757\u8bbe\u5907\u7684I/O\u64cd\u4f5c\u65b9\u5f0f\u4e0e\u5b57\u7b26\u8bbe\u5907\u7684\u5b58\u5728\u8f83\u5927\u7684\u4e0d\u540c\uff0c\u56e0\u800c\u5f15\u5165\u4e86request_queue\u3001request\u3001bio\u7b49\u4e00\u7cfb\u5217\u6570\u636e\u7ed3\u6784\u3002\u5728\u6574\u4e2a\u5757\u8bbe\u5907\u7684I/O\u64cd\u4f5c\u4e2d\uff0c\u8d2f\u7a7f\u59cb\u7ec8\u7684\u5c31\u662f\u201c\u8bf7\u6c42\u201d\uff0c\u5b57\u7b26\u8bbe\u5907\u7684I/O\u64cd\u4f5c\u5219\u662f\u76f4\u63a5\u8fdb\u884c\u4e0d\u7ed5\u5f2f\uff0c\u5757\u8bbe\u5907\u7684I/O\u64cd\u4f5c\u4f1a\u6392\u961f\u548c\u6574\u5408\u3002","date":"2025-09-15T14:44:14.353Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.505,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"14.9.1\u3000DM9000\u7f51\u5361\u786c\u4ef6\u63cf\u8ff0","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.9\u3000DM9000\u7f51\u5361\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8"}},"content":"\u5757\u8bbe\u5907\u7684I/O\u64cd\u4f5c\u65b9\u5f0f\u4e0e\u5b57\u7b26\u8bbe\u5907\u7684\u5b58\u5728\u8f83\u5927\u7684\u4e0d\u540c\uff0c\u56e0\u800c\u5f15\u5165\u4e86request_queue\u3001request\u3001bio\u7b49\u4e00\u7cfb\u5217\u6570\u636e\u7ed3\u6784\u3002\u5728\u6574\u4e2a\u5757\u8bbe\u5907\u7684I/O\u64cd\u4f5c\u4e2d\uff0c\u8d2f\u7a7f\u59cb\u7ec8\u7684\u5c31\u662f\u201c\u8bf7\u6c42\u201d\uff0c\u5b57\u7b26\u8bbe\u5907\u7684I/O\u64cd\u4f5c\u5219\u662f\u76f4\u63a5\u8fdb\u884c\u4e0d\u7ed5\u5f2f\uff0c\u5757\u8bbe\u5907\u7684I/O\u64cd\u4f5c\u4f1a\u6392\u961f\u548c\u6574\u5408\u3002\\r\\n\\r\\n\u9a71\u52a8\u7684\u4efb\u52a1\u662f\u5904\u7406\u8bf7\u6c42\uff0c\u5bf9\u8bf7\u6c42\u7684\u6392\u961f\u548c\u6574\u5408\u7531I/O\u8c03\u5ea6\u7b97\u6cd5\u89e3\u51b3\uff0c\u56e0\u6b64\uff0c\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u6838\u5fc3\u5c31\u662f\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u6216\u201c\u5236\u9020\u8bf7\u6c42\u201d\u51fd\u6570\u3002\\r\\n\\r\\n\u5c3d\u7ba1\u5728\u5757\u8bbe\u5907\u9a71\u52a8\u4e2d\u4ecd\u7136\u5b58\u5728block_device_operations\u7ed3\u6784\u4f53\u53ca\u5176\u6210\u5458\u51fd\u6570\uff0c\u4f46\u4e0d\u518d\u5305\u542b\u8bfb\u5199\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u800c\u53ea\u662f\u5305\u542b\u6253\u5f00\u3001\u91ca\u653e\u53caI/O\u63a7\u5236\u7b49\u4e0e\u5177\u4f53\u8bfb\u5199\u65e0\u5173\u7684\u51fd\u6570\u3002\\r\\n\\r\\n\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784\u76f8\u5bf9\u590d\u6742\uff0c\u4f46\u5e78\u8fd0\u7684\u662f\uff0c\u5757\u8bbe\u5907\u4e0d\u50cf\u5b57\u7b26\u8bbe\u5907\u90a3\u6837\u5305\u7f57\u4e07\u8c61\uff0c\u5b83\u901a\u5e38\u5c31\u662f\u5b58\u50a8\u8bbe\u5907\uff0c\u800c\u4e14\u9a71\u52a8\u7684\u4e3b\u4f53\u5df2\u7ecf\u7531Linux\u5185\u6838\u63d0\u4f9b\uff0c\u9488\u5bf9\u4e00\u4e2a\u7279\u5b9a\u7684\u786c\u4ef6\u7cfb\u7edf\uff0c\u9a71\u52a8\u5de5\u7a0b\u5e08\u6240\u6d89\u53ca\u7684\u5de5\u4f5c\u5f80\u5f80\u53ea\u662f\u7f16\u5199\u6781\u5176\u5c11\u91cf\u7684\u4e0e\u786c\u4ef6\u5e73\u53f0\u76f8\u5173\u7684\u4ee3\u7801\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8","description":"USB OTG\u6807\u51c6\u5728\u5b8c\u5168\u517c\u5bb9USB 2.0\u6807\u51c6\u7684\u57fa\u7840\u4e0a\uff0c\u5b83\u5141\u8bb8\u8bbe\u5907\u65e2\u53ef\u4f5c\u4e3a\u4e3b\u673a\uff0c\u4e5f\u53ef\u4f5c\u4e3a\u5916\u8bbe\u64cd\u4f5c\uff0cOTG\u65b0\u589e\u4e86\u4e3b\u673a\u901a\u4ee4\u534f\u8bae\uff08HNP\uff09\u548c\u5bf9\u8bdd\u8bf7\u6c42\u534f\u8bae\uff08SRP\uff09\u3002","date":"2025-09-15T14:44:14.349Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.505,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.9\u3000\u603b\u7ed3"},"nextItem":{"title":"3.3.1\u3000Linux\u5185\u6838\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.3\u3000Linux\u5185\u6838\u7684\u7ec4\u6210"}},"content":"USB OTG\u6807\u51c6\u5728\u5b8c\u5168\u517c\u5bb9USB 2.0\u6807\u51c6\u7684\u57fa\u7840\u4e0a\uff0c\u5b83\u5141\u8bb8\u8bbe\u5907\u65e2\u53ef\u4f5c\u4e3a\u4e3b\u673a\uff0c\u4e5f\u53ef\u4f5c\u4e3a\u5916\u8bbe\u64cd\u4f5c\uff0cOTG\u65b0\u589e\u4e86\u4e3b\u673a\u901a\u4ee4\u534f\u8bae\uff08HNP\uff09\u548c\u5bf9\u8bdd\u8bf7\u6c42\u534f\u8bae\uff08SRP\uff09\u3002\\r\\n\\r\\n\u5728OTG\u4e2d\uff0c\u521d\u59cb\u4e3b\u673a\u8bbe\u5907\u79f0\u4e3aA\u8bbe\u5907\uff0c\u5916\u8bbe\u79f0\u4e3aB\u8bbe\u5907\u3002\u53ef\u7528\u7535\u7f06\u7684\u8fde\u63a5\u65b9\u5f0f\u6765\u51b3\u5b9a\u521d\u59cb\u89d2\u8272\u3002\u4e24\u7528\u8bbe\u5907\u4f7f\u7528\u65b0\u578bMini-AB\u63d2\u5ea7\uff0c\u4ece\u800c\u4f7fMini-A\u63d2\u5934\u3001Mini-B\u63d2\u5934\u548cMini-AB\u63d2\u5ea7\u589e\u6dfb\u4e86\u7b2c5\u4e2a\u5f15\u811a\uff08ID\uff09\uff0c\u4ee5\u7528\u4e8e\u8bc6\u522b\u4e0d\u540c\u7684\u7535\u7f06\u7aef\u70b9\u3002Mini-A\u63d2\u5934\u4e2d\u7684ID\u5f15\u811a\u63a5\u5730\uff0cMini-B\u63d2\u5934\u4e2d\u7684ID\u5f15\u811a\u6d6e\u7a7a\u3002\u5f53OTG\u8bbe\u5907\u68c0\u6d4b\u5230\u63a5\u5730\u7684ID\u5f15\u811a\u65f6\uff0c\u8868\u793a\u9ed8\u8ba4\u7684\u662fA\u8bbe\u5907\uff08\u4e3b\u673a\uff09\uff0c\u800c\u68c0\u6d4b\u5230ID\u5f15\u811a\u6d6e\u7a7a\u7684\u8bbe\u5907\u5219\u8ba4\u4e3a\u662fB\u8bbe\u5907\uff08\u5916\u8bbe\uff09\u3002\u7cfb\u7edf\u4e00\u65e6\u8fde\u63a5\u540e\uff0cOTG\u7684\u89d2\u8272\u8fd8\u53ef\u4ee5\u66f4\u6362\uff0c\u4ee5\u91c7\u7528\u65b0\u7684HNP\u534f\u8bae\u3002\u800cSRP\u5141\u8bb8B\u8bbe\u5907\u8bf7\u6c42A\u8bbe\u5907\u6253\u5f00VBUS\u7535\u6e90\u5e76\u542f\u52a8\u4e00\u6b21\u5bf9\u8bdd\u3002\u4e00\u6b21OTG\u5bf9\u8bdd\u53ef\u901a\u8fc7A\u8bbe\u5907\u63d0\u4f9bVBUS\u7535\u6e90\u7684\u65f6\u95f4\u6765\u786e\\r\\n\\r\\n\u81eaLinux 2.6.9\u5f00\u59cb\uff0cOTG\u76f8\u5173\u6e90\u4ee3\u7801\u5df2\u7ecf\u88ab\u5305\u542b\u5728\u5185\u6838\u4e2d\u4e86\uff0c\u65b0\u589e\u7684\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a\\r\\n\\r\\n# \uff081\uff09UDC\u9a71\u52a8\u7aef\u6dfb\u52a0\u7684OTG\u76f8\u5173\u5c5e\u6027\u548c\u51fd\u6570\\r\\n\\r\\n```\\r\\nstruct usb_gadget {\\r\\n    ...\\r\\n    unsigned            is_otg:1;\\r\\n    unsigned            is_a_peripheral:1;\\r\\n    unsigned            b_hnp_enable:1;\\r\\n    unsigned            a_hnp_support:1;\\r\\n    unsigned            a_alt_hnp_support:1;\\r\\n    ...\\r\\n};\\r\\nint usb_gadget_vbus_connect(struct usb_gadget *gadget);\\r\\nint usb_gadget_vbus_disconnect(struct usb_gadget *gadget);\\r\\nint usb_gadget_vbus_draw(struct usb_gadget *gadget, unsigned mA);\\r\\n/* \u63a7\u5236USB D+\u7684\u4e0a\u62c9*/\\r\\nint usb_gadget_connect(struct usb_gadget *gadget);\\r\\nint usb_gadget_disconnect(struct usb_gadget *gadget);\\r\\n/* \u5c1d\u8bd5\u5524\u9192USB host\uff0c\u5b83\u4e5f\u4f1a\u5c1d\u8bd5SRP\u4f1a\u8bdd*/\\r\\nint usb_gadget_wakeup(struct usb_gadget *gadget);\\r\\n```\\r\\n\\r\\n# \uff082\uff09Gadget\u9a71\u52a8\u7aef\u6dfb\u52a0\u7684OTG\u76f8\u5173\u5c5e\u6027\u548c\u51fd\u6570\\r\\n\\r\\n\u5982\u679cgadget->is_otg\u5b57\u6bb5\u4e3a\u771f\uff0c\u5219\u589e\u52a0\u4e00\u4e2aOTG\u63cf\u8ff0\u7b26\uff1b\u901a\u8fc7printk\uff08\uff09\u3001LED\u7b49\u65b9\u5f0f\u62a5\u544aHNP\u53ef\u7528\uff1b\u5f53\u6302\u8d77\u5f00\u59cb\u65f6\uff0c\u901a\u8fc7\u7528\u6237\u754c\u9762\u62a5\u544aHNP\u5207\u6362\u5f00\u59cb\uff08B-Peripheral\u5230B-Host\u6216A-Peripheral\u5230A-Host\uff09\u3002\\r\\n\\r\\n# \uff083\uff09\u4e3b\u673a\u4fa7\u6dfb\u52a0\u7684OTG\u76f8\u5173\u5c5e\u6027\u548c\u51fd\u6570\\r\\n\\r\\n\u5728USB\u6838\u5fc3\u4e2d\u65b0\u589e\u4e86\u5173\u4e8eOTG\u8bbe\u5907\u679a\u4e3e\u7684\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\nstruct usb_bus {\\r\\n    ...\\r\\n    u8 otg_port;               /* 0, or index of OTG/HNP port */\\r\\n    unsigned is_b_host:1;      /* true during some HNP roleswitches */\\r\\n    unsigned b_hnp_enable:1;   /* OTG: did A-Host enable HNP  */\\r\\n    ...\\r\\n};\\r\\n```\\r\\n\\r\\n\u4e3a\u4e86\u5b9e\u73b0HNP\u9700\u8981\u7684\u6302\u8d77/\u6062\u590d\uff0c\u65b0\u589e\u5982\u4e0b\u901a\u7528\u63a5\u53e3\uff1a\\r\\n\\r\\n```\\r\\nint usb_suspend_device(struct usb_device *dev, u32 state);\\r\\nint usb_resume_device(struct usb_device *dev);\\r\\n```\\r\\n\\r\\n# \uff084\uff09\u65b0\u589eOTG\u529f\u80fd\u5207\u6362\u548c\u534f\u8bae\u7684\u63cf\u8ff0\u7ed3\u6784\u4f53usb_otg\\r\\n\\r\\n```\\r\\nstruct usb_otg {\\r\\n       u8                   default_a;\\r\\n       struct phy            *phy;\\r\\n       /* old usb_phy interface */\\r\\n       struct usb_phy        *usb_phy;\\r\\n       struct usb_bus        *host;\\r\\n       struct usb_gadget     *gadget;\\r\\n       enum usb_otg_state    state;\\r\\n       /* bind/unbind the host controller */\\r\\n       int    (*set_host)(struct usb_otg *otg, struct usb_bus *host);\\r\\n       /* bind/unbind the peripheral controller */\\r\\n       int    (*set_peripheral)(struct usb_otg *otg,\\r\\n                                 struct usb_gadget *gadget);\\r\\n       /* effective for A-peripheral, ignored for B devices */\\r\\n       int    (*set_vbus)(struct usb_otg *otg, bool enabled);\\r\\n       /* for B devices only:  start session with A-Host */\\r\\n       int    (*start_srp)(struct usb_otg *otg);\\r\\n       /* start or continue HNP role switch */\\r\\n       int    (*start_hnp)(struct usb_otg *otg);\\r\\n};\\r\\n```\\r\\n\\r\\nusb_otg\u7684\u4ee3\u7801\u4e00\u822c\u5728USB\u7684phy\u7aef\u5b9e\u73b0\uff0c\u76ee\u524d\uff0c\u4ece\u5185\u6838\u7684drivers/usb/musb/musb_gadget.c\u3001drivers/usb/phy/phy-twl6030-usb.c\u3001drivers/usb/phy/phy-isp1301-omap.c\u3001drivers/usb/phy/phy-fsl-usb.c\u548cdrivers/usb/musb/musb_gadget.c\u7b49\u9a71\u52a8\u4e2d\u53ef\u4ee5\u627e\u5230\u7c7b\u4f3c\u7684\u4f8b\u5b50\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.3\u3000Linux\u5185\u6838\u7684\u7ec4\u6210","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.3\u3000Linux\u5185\u6838\u7684\u7ec4\u6210","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.3\u3000Linux\u5185\u6838\u7684\u7ec4\u6210.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.3\u3000Linux\u5185\u6838\u7684\u7ec4\u6210.md","title":"3.3.1\u3000Linux\u5185\u6838\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784","description":"Linux\u5185\u6838\u6e90\u4ee3\u7801\u5305\u542b\u5982\u4e0b\u76ee\u5f55\u3002","date":"2025-09-15T14:44:14.349Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":13.795,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.5\u3000USB OTG\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee"}},"content":"Linux\u5185\u6838\u6e90\u4ee3\u7801\u5305\u542b\u5982\u4e0b\u76ee\u5f55\u3002\\r\\n\\r\\n- \xb7arch\uff1a\u5305\u542b\u548c\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u7684\u4ee3\u7801\uff0c\u6bcf\u79cd\u5e73\u53f0\u5360\u4e00\u4e2a\u76f8\u5e94\u7684\u76ee\u5f55\uff0c\u5982i386\u3001arm\u3001arm64\u3001powerpc\u3001mips\u7b49\u3002Linux\u5185\u6838\u76ee\u524d\u5df2\u7ecf\u652f\u630130\u79cd\u5de6\u53f3\u7684\u4f53\u7cfb\u7ed3\u6784\u3002\u5728arch\u76ee\u5f55\u4e0b\uff0c\u5b58\u653e\u7684\u662f\u5404\u4e2a\u5e73\u53f0\u4ee5\u53ca\u5404\u4e2a\u5e73\u53f0\u7684\u82af\u7247\u5bf9Linux\u5185\u6838\u8fdb\u7a0b\u8c03\u5ea6\u3001\u5185\u5b58\u7ba1\u7406\u3001\u4e2d\u65ad\u7b49\u7684\u652f\u6301\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u5177\u4f53\u7684SoC\u548c\u7535\u8def\u677f\u7684\u677f\u7ea7\u652f\u6301\u4ee3\u7801\u3002\\r\\n- \xb7block\uff1a\u5757\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8fI/O\u8c03\u5ea6\u3002\\r\\n- \xb7crypto\uff1a\u5e38\u7528\u52a0\u5bc6\u548c\u6563\u5217\u7b97\u6cd5\uff08\u5982AES\u3001SHA\u7b49\uff09\uff0c\u8fd8\u6709\u4e00\u4e9b\u538b\u7f29\u548cCRC\u6821\u9a8c\u7b97\u6cd5\u3002\\r\\n- \xb7documentation\uff1a\u5185\u6838\u5404\u90e8\u5206\u7684\u901a\u7528\u89e3\u91ca\u548c\u6ce8\u91ca\u3002\\r\\n- \xb7drivers\uff1a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6bcf\u4e2a\u4e0d\u540c\u7684\u9a71\u52a8\u5360\u7528\u4e00\u4e2a\u5b50\u76ee\u5f55\uff0c\u5982char\u3001block\u3001net\u3001mtd\u3001i2c\u7b49\u3002\\r\\n- \xb7fs\uff1a\u6240\u652f\u6301\u7684\u5404\u79cd\u6587\u4ef6\u7cfb\u7edf\uff0c\u5982EXT\u3001FAT\u3001NTFS\u3001JFFS2\u7b49\u3002\\r\\n- \xb7include\uff1a\u5934\u6587\u4ef6\uff0c\u4e0e\u7cfb\u7edf\u76f8\u5173\u7684\u5934\u6587\u4ef6\u653e\u7f6e\u5728include/linux\u5b50\u76ee\u5f55\u4e0b\u3002\\r\\n- \xb7init\uff1a\u5185\u6838\u521d\u59cb\u5316\u4ee3\u7801\u3002\u8457\u540d\u7684start_kernel\uff08\uff09\u5c31\u4f4d\u4e8einit/main.c\u6587\u4ef6\u4e2d\u3002\\r\\n- \xb7ipc\uff1a\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u4ee3\u7801\u3002\\r\\n- \xb7kernel\uff1a\u5185\u6838\u6700\u6838\u5fc3\u7684\u90e8\u5206\uff0c\u5305\u62ec\u8fdb\u7a0b\u8c03\u5ea6\u3001\u5b9a\u65f6\u5668\u7b49\uff0c\u800c\u548c\u5e73\u53f0\u76f8\u5173\u7684\u4e00\u90e8\u5206\u4ee3\u7801\u653e\u5728arch/*/kernel\u76ee\u5f55\u4e0b\u3002\\r\\n- \xb7lib\uff1a\u5e93\u6587\u4ef6\u4ee3\u7801\u3002\\r\\n- \xb7mm\uff1a\u5185\u5b58\u7ba1\u7406\u4ee3\u7801\uff0c\u548c\u5e73\u53f0\u76f8\u5173\u7684\u4e00\u90e8\u5206\u4ee3\u7801\u653e\u5728arch/*/mm\u76ee\u5f55\u4e0b\u3002\\r\\n- \xb7net\uff1a\u7f51\u7edc\u76f8\u5173\u4ee3\u7801\uff0c\u5b9e\u73b0\u5404\u79cd\u5e38\u89c1\u7684\u7f51\u7edc\u534f\u8bae\u3002\\r\\n- \xb7scripts\uff1a\u7528\u4e8e\u914d\u7f6e\u5185\u6838\u7684\u811a\u672c\u6587\u4ef6\u3002\\r\\n- \xb7security\uff1a\u4e3b\u8981\u662f\u4e00\u4e2aSELinux\u7684\u6a21\u5757\u3002\\r\\n- \xb7sound\uff1aALSA\u3001OSS\u97f3\u9891\u8bbe\u5907\u7684\u9a71\u52a8\u6838\u5fc3\u4ee3\u7801\u548c\u5e38\u7528\u8bbe\u5907\u9a71\u52a8\u3002\\r\\n- \xb7usr\uff1a\u5b9e\u73b0\u7528\u4e8e\u6253\u5305\u548c\u538b\u7f29\u7684cpio\u7b49\u3002\\r\\n- \xb7include\uff1a\u5185\u6838API\u7ea7\u522b\u5934\u6587\u4ef6\u3002\\r\\n\\r\\n\u5185\u6838\u4e00\u822c\u8981\u505a\u5230drivers\u4e0earch\u7684\u8f6f\u4ef6\u67b6\u6784\u5206\u79bb\uff0c\u9a71\u52a8\u4e2d\u4e0d\u5305\u542b\u677f\u7ea7\u4fe1\u606f\uff0c\u8ba9\u9a71\u52a8\u8de8\u5e73\u53f0\u3002\u540c\u65f6\u5185\u6838\u7684\u901a\u7528\u90e8\u5206\uff08\u5982kernel\u3001fs\u3001ipc\u3001net\u7b49\uff09\u5219\u4e0e\u5177\u4f53\u7684\u786c\u4ef6\uff08arch\u548cdrivers\uff09\u5265\u79bb\u3002\\r\\n\\r\\n# 3.3.2\u3000Linux\u5185\u6838\u7684\u7ec4\u6210\u90e8\u5206\\r\\n\\r\\n\u5982\u56fe3.3\u6240\u793a\uff0cLinux\u5185\u6838\u4e3b\u8981\u7531\u8fdb\u7a0b\u8c03\u5ea6\uff08SCHED\uff09\u3001\u5185\u5b58\u7ba1\u7406\uff08MM\uff09\u3001\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff08VFS\uff09\u3001\u7f51\u7edc\u63a5\u53e3\uff08NET\uff09\u548c\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff095\u4e2a\u5b50\u7cfb\u7edf\u7ec4\u6210\u3002\\r\\n\\r\\n![image-20250323214539708](./figure/image-20250323214539708.png)\\r\\n\\r\\n## 1.\u8fdb\u7a0b\u8c03\u5ea6\\r\\n\\r\\n\u8fdb\u7a0b\u8c03\u5ea6\u63a7\u5236\u7cfb\u7edf\u4e2d\u7684\u591a\u4e2a\u8fdb\u7a0b\u5bf9CPU\u7684\u8bbf\u95ee\uff0c\u4f7f\u5f97\u591a\u4e2a\u8fdb\u7a0b\u80fd\u5728CPU\u4e2d\u201c\u5fae\u89c2\u4e32\u884c\uff0c\u5b8f\u89c2\u5e76\u884c\u201d\u5730\u6267\u884c\u3002\u8fdb\u7a0b\u8c03\u5ea6\u5904\u4e8e\u7cfb\u7edf\u7684\u4e2d\u5fc3\u4f4d\u7f6e\uff0c\u5185\u6838\u4e2d\u5176\u4ed6\u7684\u5b50\u7cfb\u7edf\u90fd\u4f9d\u8d56\u5b83\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5b50\u7cfb\u7edf\u90fd\u9700\u8981\u6302\u8d77\u6216\u6062\u590d\u8fdb\u7a0b\u3002\\r\\n\\r\\n\u5982\u56fe3.4\u6240\u793a\uff0cLinux\u7684\u8fdb\u7a0b\u5728\u51e0\u4e2a\u72b6\u6001\u95f4\u8fdb\u884c\u5207\u6362\u3002\u5728\u8bbe\u5907\u9a71\u52a8\u7f16\u7a0b\u4e2d\uff0c\u5f53\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u80fd\u5f97\u5230\u6ee1\u8db3\u65f6\uff0c\u9a71\u52a8\u4e00\u822c\u4f1a\u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u6267\u884c\uff0c\u5e76\u4f7f\u672c\u8fdb\u7a0b\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff0c\u76f4\u5230\u5b83\u8bf7\u6c42\u7684\u8d44\u6e90\u88ab\u91ca\u653e\uff0c\u624d\u4f1a\u88ab\u5524\u9192\u800c\u8fdb\u5165\u5c31\u7eea\u72b6\u6001\u3002\u7761\u7720\u5206\u6210\u53ef\u4e2d\u65ad\u7684\u7761\u7720\u548c\u4e0d\u53ef\u4e2d\u65ad\u7684\u7761\u7720\uff0c\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e\u53ef\u4e2d\u65ad\u7684\u7761\u7720\u5728\u6536\u5230\u4fe1\u53f7\u7684\u65f6\u5019\u4f1a\u9192\u3002\\r\\n\\r\\n![image-20250323214620056](./figure/image-20250323214620056.png)\\r\\n\\r\\n\u56fe3.4\u3000Linux\u8fdb\u7a0b\u72b6\u6001\u8f6c\u6362\\r\\n\\r\\n\u5b8c\u5168\u5904\u4e8eTASK_UNINTERRUPTIBLE\u72b6\u6001\u7684\u8fdb\u7a0b\u751a\u81f3\u90fd\u65e0\u6cd5\u88ab\u201c\u6740\u6b7b\u201d\uff0c\u6240\u4ee5Linux 2.6.26\u4e4b\u540e\u7684\u5185\u6838\u4e5f\u5b58\u5728\u4e00\u79cdTASK_KILLABLE\u7684\u72b6\u6001\uff0c\u5b83\u7b49\u4e8e\u201cTASK_WAKEKILL|TASK_UNINTERRUPTIBLE\u201d\uff0c\u53ef\u4ee5\u54cd\u5e94\u81f4\u547d\u4fe1\u53f7\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u4f7f\u7528task_struct\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u8fdb\u7a0b\uff0c\u8be5\u7ed3\u6784\u4f53\u4e2d\u5305\u542b\u63cf\u8ff0\u8be5\u8fdb\u7a0b\u5185\u5b58\u8d44\u6e90\u3001\u6587\u4ef6\u7cfb\u7edf\u8d44\u6e90\u3001\u6587\u4ef6\u8d44\u6e90\u3001tty\u8d44\u6e90\u3001\u4fe1\u53f7\u5904\u7406\u7b49\u7684\u6307\u9488\u3002Linux\u7684\u7ebf\u7a0b\u91c7\u7528\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u6a21\u578b\u6765\u5b9e\u73b0\uff0c\u5728\u7528\u6237\u7a7a\u95f4\u901a\u8fc7pthread_create\uff08\uff09API\u521b\u5efa\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u672c\u8d28\u4e0a\u5185\u6838\u53ea\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684task_struct\uff0c\u5e76\u5c06\u65b0task_struct\u7684\u6240\u6709\u8d44\u6e90\u6307\u9488\u90fd\u6307\u5411\u521b\u5efa\u5b83\u7684\u90a3\u4e2atask_struct\u7684\u8d44\u6e90\u6307\u9488\u3002\\r\\n\\r\\n\u7edd\u5927\u591a\u6570\u8fdb\u7a0b\uff08\u4ee5\u53ca\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\uff09\u662f\u7531\u7528\u6237\u7a7a\u95f4\u7684\u5e94\u7528\u521b\u5efa\u7684\uff0c\u5f53\u5b83\u4eec\u5b58\u5728\u5e95\u5c42\u8d44\u6e90\u548c\u786c\u4ef6\u8bbf\u95ee\u7684\u9700\u6c42\u65f6\uff0c\u4f1a\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u8fdb\u5165\u5185\u6838\u7a7a\u95f4\u3002\u6709\u65f6\u5019\uff0c\u5728\u5185\u6838\u7f16\u7a0b\u4e2d\uff0c\u5982\u679c\u9700\u8981\u51e0\u4e2a\u5e76\u53d1\u6267\u884c\u7684\u4efb\u52a1\uff0c\u53ef\u4ee5\u542f\u52a8\u5185\u6838\u7ebf\u7a0b\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u6ca1\u6709\u7528\u6237\u7a7a\u95f4\u3002\u542f\u52a8\u5185\u6838\u7ebf\u7a0b\u7684\u51fd\u6570\u4e3a\uff1a\\r\\n\\r\\n```\\r\\npid_t kernel_thread(int (*fn)(void *), void *arg, unsigned long flags);\\r\\n```\\r\\n\\r\\n## 2.\u5185\u5b58\u7ba1\u7406\\r\\n\\r\\n\u5185\u5b58\u7ba1\u7406\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u63a7\u5236\u591a\u4e2a\u8fdb\u7a0b\u5b89\u5168\u5730\u5171\u4eab\u4e3b\u5185\u5b58\u533a\u57df\u3002\u5f53CPU\u63d0\u4f9b\u5185\u5b58\u7ba1\u7406\u5355\u5143\uff08MMU\uff09\u65f6\uff0cLinux\u5185\u5b58\u7ba1\u7406\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\u5b8c\u6210\u4ece\u865a\u62df\u5185\u5b58\u5230\u7269\u7406\u5185\u5b58\u7684\u8f6c\u6362\u3002Linux 2.6\u5f15\u5165\u4e86\u5bf9\u65e0MMU CPU\u7684\u652f\u6301\u3002\\r\\n\\r\\n\u5982\u56fe3.5\u6240\u793a\uff0c\u4e00\u822c\u800c\u8a00\uff0c32\u4f4d\u5904\u7406\u5668\u7684Linux\u7684\u6bcf\u4e2a\u8fdb\u7a0b\u4eab\u67094GB\u7684\u5185\u5b58\u7a7a\u95f4\uff0c0~3GB\u5c5e\u4e8e\u7528\u6237\u7a7a\u95f4\uff0c3~4GB\u5c5e\u4e8e\u5185\u6838\u7a7a\u95f4\uff0c\u5185\u6838\u7a7a\u95f4\u5bf9\u5e38\u89c4\u5185\u5b58\u3001I/O\u8bbe\u5907\u5185\u5b58\u4ee5\u53ca\u9ad8\u7aef\u5185\u5b58\u6709\u4e0d\u540c\u7684\u5904\u7406\u65b9\u5f0f\u3002\u5f53\u7136\uff0c\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u7684\u5177\u4f53\u754c\u9650\u662f\u53ef\u4ee5\u8c03\u6574\u7684\uff0c\u5728\u5185\u6838\u914d\u7f6e\u9009\u9879Kernel Features\u2192Memory split\u4e0b\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u754c\u9650\u4e3a2GB\u6216\u80053GB\u3002\\r\\n\\r\\n![1742737655147](./figure/1742737655147.png)\\r\\n\\r\\n\u56fe3.5\u3000Linux\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\\r\\n\\r\\n\u5982\u56fe3.6\u6240\u793a\uff0cLinux\u5185\u6838\u7684\u5185\u5b58\u7ba1\u7406\u603b\u4f53\u6bd4\u8f83\u5e9e\u5927\uff0c\u5305\u542b\u5e95\u5c42\u7684Buddy\u7b97\u6cd5\uff0c\u5b83\u7528\u4e8e\u7ba1\u7406\u6bcf\u4e2a\u9875\u7684\u5360\u7528\u60c5\u51b5\uff0c\u5185\u6838\u7a7a\u95f4\u7684slab\u4ee5\u53ca\u7528\u6237\u7a7a\u95f4\u7684C\u5e93\u7684\u4e8c\u6b21\u7ba1\u7406\u3002\u53e6\u5916\uff0c\u5185\u6838\u4e5f\u63d0\u4f9b\u4e86\u9875\u7f13\u5b58\u7684\u652f\u6301\uff0c\u7528\u5185\u5b58\u6765\u7f13\u5b58\u78c1\u76d8\uff0cper-BDI flusher\u7ebf\u7a0b\u7528\u4e8e\u5237\u56de\u810f\u7684\u9875\u7f13\u5b58\u5230\u78c1\u76d8\u3002Kswapd\uff08\u4ea4\u6362\u8fdb\u7a0b\uff09\u5219\u662fLinux\u4e2d\u7528\u4e8e\u9875\u9762\u56de\u6536\uff08\u5305\u62ecfile-backed\u7684\u9875\u548c\u533f\u540d\u9875\uff09\u7684\u5185\u6838\u7ebf\u7a0b\uff0c\u5b83\u91c7\u7528\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff08LRU\uff09\u7b97\u6cd5\u8fdb\u884c\u5185\u5b58\u56de\u6536\u3002\\r\\n\\r\\n![1742737696273](./figure/1742737696273.png)\\r\\n\\r\\n## 3.\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\\r\\n\\r\\n\u5982\u56fe3.7\u6240\u793a\uff0cLinux\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u9690\u85cf\u4e86\u5404\u79cd\u786c\u4ef6\u7684\u5177\u4f53\u7ec6\u8282\uff0c\u4e3a\u6240\u6709\u8bbe\u5907\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u63a5\u53e3\u3002\u800c\u4e14\uff0c\u5b83\u72ec\u7acb\u4e8e\u5404\u4e2a\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u662f\u5bf9\u5404\u79cd\u6587\u4ef6\u7cfb\u7edf\u7684\u4e00\u4e2a\u62bd\u8c61\u3002\u5b83\u4e3a\u4e0a\u5c42\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684vfs_read\uff08\uff09\u3001vfs_write\uff08\uff09\u7b49\u63a5\u53e3\uff0c\u5e76\u8c03\u7528\u5177\u4f53\u5e95\u5c42\u6587\u4ef6\u7cfb\u7edf\u6216\u8005\u8bbe\u5907\u9a71\u52a8\u4e2d\u5b9e\u73b0\u7684file_operations\u7ed3\u6784\u4f53\u7684\u6210\u5458\u51fd\u6570\u3002\\r\\n\\r\\n![image-20250323214909639](./figure/image-20250323214909639.png)\\r\\n\\r\\n\u56fe3.7\u3000Linux\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\\r\\n\\r\\n## 4.\u7f51\u7edc\u63a5\u53e3\\r\\n\\r\\n\u7f51\u7edc\u63a5\u53e3\u63d0\u4f9b\u4e86\u5bf9\u5404\u79cd\u7f51\u7edc\u6807\u51c6\u7684\u5b58\u53d6\u548c\u5404\u79cd\u7f51\u7edc\u786c\u4ef6\u7684\u652f\u6301\u3002\u5982\u56fe3.8\u6240\u793a\uff0c\u5728Linux\u4e2d\u7f51\u7edc\u63a5\u53e3\u53ef\u5206\u4e3a\u7f51\u7edc\u534f\u8bae\u548c\u7f51\u7edc\u9a71\u52a8\u7a0b\u5e8f\uff0c\u7f51\u7edc\u534f\u8bae\u90e8\u5206\u8d1f\u8d23\u5b9e\u73b0\u6bcf\u4e00\u79cd\u53ef\u80fd\u7684\u7f51\u7edc\u4f20\u8f93\u534f\u8bae\uff0c\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u8d1f\u8d23\u4e0e\u786c\u4ef6\u8bbe\u5907\u901a\u4fe1\uff0c\u6bcf\u4e00\u79cd\u53ef\u80fd\u7684\u786c\u4ef6\u8bbe\u5907\u90fd\u6709\u76f8\u5e94\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\\r\\n\\r\\n![1742737795680](./figure/1742737795680.png)\\r\\n\\r\\n\u56fe3.8\u3000Linux\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\\r\\n\\r\\nLinux\u5185\u6838\u652f\u6301\u7684\u534f\u8bae\u6808\u79cd\u7c7b\u8f83\u591a\uff0c\u5982Internet\u3001UNIX\u3001CAN\u3001NFC\u3001Bluetooth\u3001WiMAX\u3001IrDA\u7b49\uff0c\u4e0a\u5c42\u7684\u5e94\u7528\u7a0b\u5e8f\u7edf\u4e00\u4f7f\u7528\u5957\u63a5\u5b57\u63a5\u53e3\u3002\\r\\n\\r\\n## 5.\u8fdb\u7a0b\u95f4\u901a\u4fe1\\r\\n\\r\\n\u8fdb\u7a0b\u95f4\u901a\u4fe1\u652f\u6301\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0cLinux\u652f\u6301\u8fdb\u7a0b\u95f4\u7684\u591a\u79cd\u901a\u4fe1\u673a\u5236\uff0c\u5305\u542b\u4fe1\u53f7\u91cf\u3001\u5171\u4eab\u5185\u5b58\u3001\u6d88\u606f\u961f\u5217\u3001\u7ba1\u9053\u3001UNIX\u57df\u5957\u63a5\u5b57\u7b49\uff0c\u8fd9\u4e9b\u673a\u5236\u53ef\u534f\u52a9\u591a\u4e2a\u8fdb\u7a0b\u3001\u591a\u8d44\u6e90\u7684\u4e92\u65a5\u8bbf\u95ee\u3001\u8fdb\u7a0b\u95f4\u7684\u540c\u6b65\u548c\u6d88\u606f\u4f20\u9012\u3002\u5728\u5b9e\u9645\u7684Linux\u5e94\u7528\u4e2d\uff0c\u4eba\u4eec\u66f4\u591a\u5730\u8d8b\u5411\u4e8e\u4f7f\u7528UNIX\u57df\u5957\u63a5\u5b57\uff0c\u800c\u4e0d\u662fSystem V IPC\u4e2d\u7684\u6d88\u606f\u961f\u5217\u7b49\u673a\u5236\u3002Android\u5185\u6838\u5219\u65b0\u589e\u4e86Binder\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f\u3002\\r\\n\\r\\nLinux\u5185\u68385\u4e2a\u7ec4\u6210\u90e8\u5206\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\u5982\u4e0b\u3002\\r\\n\\r\\n- \xb7\u8fdb\u7a0b\u8c03\u5ea6\u4e0e\u5185\u5b58\u7ba1\u7406\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u8fd9\u4e24\u4e2a\u5b50\u7cfb\u7edf\u4e92\u76f8\u4f9d\u8d56\u3002\u5728\u591a\u7a0b\u5e8f\u73af\u5883\u4e0b\uff0c\u7a0b\u5e8f\u8981\u8fd0\u884c\uff0c\u5219\u5fc5\u987b\u4e3a\u4e4b\u521b\u5efa\u8fdb\u7a0b\uff0c\u800c\u521b\u5efa\u8fdb\u7a0b\u7684\u7b2c\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5c31\u662f\u5c06\u7a0b\u5e8f\u548c\u6570\u636e\u88c5\u5165\u5185\u5b58\\r\\n- \xb7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u4e0e\u5185\u5b58\u7ba1\u7406\u7684\u5173\u7cfb\uff1a\u8fdb\u7a0b\u95f4\u901a\u4fe1\u5b50\u7cfb\u7edf\u8981\u4f9d\u8d56\u5185\u5b58\u7ba1\u7406\u652f\u6301\u5171\u4eab\u5185\u5b58\u901a\u4fe1\u673a\u5236\uff0c\u8fd9\u79cd\u673a\u5236\u5141\u8bb8\u4e24\u4e2a\u8fdb\u7a0b\u9664\u4e86\u62e5\u6709\u81ea\u5df1\u7684\u79c1\u6709\u7a7a\u95f4\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u5b58\u53d6\u5171\u540c\u7684\u5185\u5b58\u533a\u57df\u3002\\r\\n- \xb7\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e0e\u7f51\u7edc\u63a5\u53e3\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u5229\u7528\u7f51\u7edc\u63a5\u53e3\u652f\u6301\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff08NFS\uff09\uff0c\u4e5f\u5229\u7528\u5185\u5b58\u7ba1\u7406\u652f\u6301RAMDISK\u8bbe\u5907\u3002\\r\\n- \xb7\u5185\u5b58\u7ba1\u7406\u4e0e\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\u5185\u5b58\u7ba1\u7406\u5229\u7528\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u652f\u6301\u4ea4\u6362\uff0c\u4ea4\u6362\u8fdb\u7a0b\u5b9a\u671f\u7531\u8c03\u5ea6\u7a0b\u5e8f\u8c03\u5ea6\uff0c\u8fd9\u4e5f\u662f\u5185\u5b58\u7ba1\u7406\u4f9d\u8d56\u4e8e\u8fdb\u7a0b\u8c03\u5ea6\u7684\u539f\u56e0\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5b58\u53d6\u7684\u5185\u5b58\u6620\u5c04\u88ab\u6362\u51fa\u65f6\uff0c\u5185\u5b58\u7ba1\u7406\u5411\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u53d1\u51fa\u8bf7\u6c42\uff0c\u540c\u65f6\uff0c\u6302\u8d77\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\\r\\n\\r\\n\u9664\u4e86\u8fd9\u4e9b\u4f9d\u8d56\u5173\u7cfb\u5916\uff0c\u5185\u6838\u4e2d\u7684\u6240\u6709\u5b50\u7cfb\u7edf\u8fd8\u8981\u4f9d\u8d56\u4e8e\u4e00\u4e9b\u5171\u540c\u7684\u8d44\u6e90\u3002\u8fd9\u4e9b\u8d44\u6e90\u5305\u62ec\u6240\u6709\u5b50\u7cfb\u7edf\u90fd\u7528\u5230\u7684API\uff0c\u5982\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\u7684\u51fd\u6570\u3001\u8f93\u51fa\u8b66\u544a\u6216\u9519\u8bef\u6d88\u606f\u7684\u51fd\u6570\u53ca\u7cfb\u7edf\u63d0\u4f9b\u7684\u8c03\u8bd5\u63a5\u53e3\u7b49\u3002\\r\\n\\r\\n# 3.3.3\u3000Linux\u5185\u6838\u7a7a\u95f4\u4e0e\u7528\u6237\u7a7a\u95f4\\r\\n\\r\\n\u73b0\u4ee3CPU\u5185\u90e8\u5f80\u5f80\u5b9e\u73b0\u4e86\u4e0d\u540c\u64cd\u4f5c\u6a21\u5f0f\uff08\u7ea7\u522b\uff09\uff0c\u4e0d\u540c\u6a21\u5f0f\u6709\u4e0d\u540c\u529f\u80fd\uff0c\u9ad8\u5c42\u7a0b\u5e8f\u5f80\u5f80\u4e0d\u80fd\u8bbf\u95ee\u4f4e\u7ea7\u529f\u80fd\uff0c\u800c\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5207\u6362\u5230\u4f4e\u7ea7\u6a21\u5f0f\u3002\\r\\n\\r\\n\u4f8b\u5982\uff0cARM\u5904\u7406\u5668\u5206\u4e3a7\u79cd\u5de5\u4f5c\u6a21\u5f0f\u3002\\r\\n\\r\\n- \xb7\u7528\u6237\u6a21\u5f0f\uff08usr\uff09\uff1a\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\uff0c\u5f53\u5904\u7406\u5668\u8fd0\u884c\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u65f6\uff0c\u67d0\u4e9b\u88ab\u4fdd\u62a4\u7684\u7cfb\u7edf\u8d44\u6e90\u662f\u4e0d\u80fd\u8bbf\u95ee\u7684\u3002\\r\\n- \xb7\u5feb\u901f\u4e2d\u65ad\u6a21\u5f0f\uff08fiq\uff09\uff1a\u7528\u4e8e\u9ad8\u901f\u6570\u636e\u4f20\u8f93\u6216\u901a\u9053\u5904\u7406\u3002\\r\\n- \xb7\u5916\u90e8\u4e2d\u65ad\u6a21\u5f0f\uff08irq\uff09\uff1a\u7528\u4e8e\u901a\u7528\u7684\u4e2d\u65ad\u5904\u7406\u3002\\r\\n- \xb7\u7ba1\u7406\u6a21\u5f0f\uff08svc\uff09\uff1a\u64cd\u4f5c\u7cfb\u7edf\u4f7f\u7528\u7684\u4fdd\u62a4\u6a21\u5f0f\u3002\\r\\n- \xb7\u6570\u636e\u8bbf\u95ee\u4e2d\u6b62\u6a21\u5f0f\uff08abt\uff09\uff1a\u5f53\u6570\u636e\u6216\u6307\u4ee4\u9884\u53d6\u4e2d\u6b62\u65f6\u8fdb\u5165\u8be5\u6a21\u5f0f\uff0c\u53ef\u7528\u4e8e\u865a\u62df\u5b58\u50a8\u53ca\u5b58\u50a8\u4fdd\u62a4\u3002\\r\\n- \xb7\u7cfb\u7edf\u6a21\u5f0f\uff08sys\uff09\uff1a\u8fd0\u884c\u5177\u6709\u7279\u6743\u7684\u64cd\u4f5c\u7cfb\u7edf\u4efb\u52a1\u3002\\r\\n- \xb7\u672a\u5b9a\u4e49\u6307\u4ee4\u4e2d\u6b62\u6a21\u5f0f\uff08und\uff09\uff1a\u5f53\u672a\u5b9a\u4e49\u7684\u6307\u4ee4\u6267\u884c\u65f6\u8fdb\u5165\u8be5\u6a21\u5f0f\uff0c\u53ef\u7528\u4e8e\u652f\u6301\u786c\u4ef6\u534f\u5904\u7406\u5668\u7684\u8f6f\u4ef6\u4eff\u771f\u3002\\r\\n\\r\\nARM Linux\u7684\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u539f\u7406\u662f\u91c7\u7528swi\u8f6f\u4e2d\u65ad\u4ece\u7528\u6237\uff08usr\uff09\u6a21\u5f0f\u9677\u5165\u7ba1\u7406\u6a21\u5f0f\uff08svc\uff09\u3002\\r\\n\\r\\n\u53c8\u5982\uff0cx86\u5904\u7406\u5668\u5305\u542b4\u4e2a\u4e0d\u540c\u7684\u7279\u6743\u7ea7\uff0c\u79f0\u4e3aRing 0~Ring 3\u3002\u5728Ring0\u4e0b\uff0c\u53ef\u4ee5\u6267\u884c\u7279\u6743\u7ea7\u6307\u4ee4\uff0c\u5bf9\u4efb\u4f55I/O\u8bbe\u5907\u90fd\u6709\u8bbf\u95ee\u6743\u7b49\uff0c\u800cRing3\u5219\u88ab\u9650\u5236\u5f88\u591a\u64cd\u4f5c\u3002\\r\\n\\r\\nLinux\u7cfb\u7edf\u53ef\u5145\u5206\u5229\u7528CPU\u7684\u8fd9\u4e00\u786c\u4ef6\u7279\u6027\uff0c\u4f46\u5b83\u53ea\u4f7f\u7528\u4e86\u4e24\u7ea7\u3002\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u5185\u6838\u53ef\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u800c\u5e94\u7528\u7a0b\u5e8f\u5219\u88ab\u7981\u6b62\u5bf9\u786c\u4ef6\u7684\u76f4\u63a5\u8bbf\u95ee\u548c\u5bf9\u5185\u5b58\u7684\u672a\u6388\u6743\u8bbf\u95ee\u3002\u4f8b\u5982\uff0c\u82e5\u4f7f\u7528x86\u5904\u7406\u5668\uff0c\u5219\u7528\u6237\u4ee3\u7801\u8fd0\u884c\u5728\u7279\u6743\u7ea73\uff0c\u800c\u7cfb\u7edf\u5185\u6838\u4ee3\u7801\u5219\u8fd0\u884c\u5728\u7279\u6743\u7ea70\u3002\\r\\n\\r\\n\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u8fd9\u4e24\u4e2a\u540d\u8bcd\u7528\u6765\u533a\u5206\u7a0b\u5e8f\u6267\u884c\u7684\u4e24\u79cd\u4e0d\u540c\u72b6\u6001\uff0c\u5b83\u4eec\u4f7f\u7528\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002Linux\u53ea\u80fd\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u548c\u786c\u4ef6\u4e2d\u65ad\u5b8c\u6210\u4ece\u7528\u6237\u7a7a\u95f4\u5230\u5185\u6838\u7a7a\u95f4\u7684\u63a7\u5236\u8f6c\u79fb\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee","description":"\u8bbe\u5907\u901a\u5e38\u4f1a\u63d0\u4f9b\u4e00\u7ec4\u5bc4\u5b58\u5668\u6765\u63a7\u5236\u8bbe\u5907\u3001\u8bfb\u5199\u8bbe\u5907\u548c\u83b7\u53d6\u8bbe\u5907\u72b6\u6001\uff0c\u5373\u63a7\u5236\u5bc4\u5b58\u5668\u3001\u6570\u636e\u5bc4\u5b58\u5668\u548c\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u53ef\u80fd\u4f4d\u4e8eI/O\u7a7a\u95f4\u4e2d\uff0c\u4e5f\u53ef\u80fd\u4f4d\u4e8e\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u5f53\u4f4d\u4e8eI/O\u7a7a\u95f4\u65f6\uff0c\u901a\u5e38\u88ab\u79f0\u4e3aI/O\u7aef\u53e3\uff1b\u5f53\u4f4d\u4e8e\u5185\u5b58\u7a7a\u95f4\u65f6\uff0c\u5bf9\u5e94\u7684\u5185\u5b58\u7a7a\u95f4\u88ab\u79f0\u4e3aI/O\u5185\u5b58\u3002","date":"2025-09-15T14:44:14.341Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":19.99,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"3.3.1\u3000Linux\u5185\u6838\u6e90\u4ee3\u7801\u7684\u76ee\u5f55\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/3.3\u3000Linux\u5185\u6838\u7684\u7ec4\u6210"},"nextItem":{"title":"1.4.1\u3000\u8bbe\u5907\u7684\u5206\u7c7b\u53ca\u7279\u70b9","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.4\u3000Linux\u8bbe\u5907\u9a71\u52a8"}},"content":"\u8bbe\u5907\u901a\u5e38\u4f1a\u63d0\u4f9b\u4e00\u7ec4\u5bc4\u5b58\u5668\u6765\u63a7\u5236\u8bbe\u5907\u3001\u8bfb\u5199\u8bbe\u5907\u548c\u83b7\u53d6\u8bbe\u5907\u72b6\u6001\uff0c\u5373\u63a7\u5236\u5bc4\u5b58\u5668\u3001\u6570\u636e\u5bc4\u5b58\u5668\u548c\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u53ef\u80fd\u4f4d\u4e8eI/O\u7a7a\u95f4\u4e2d\uff0c\u4e5f\u53ef\u80fd\u4f4d\u4e8e\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u5f53\u4f4d\u4e8eI/O\u7a7a\u95f4\u65f6\uff0c\u901a\u5e38\u88ab\u79f0\u4e3aI/O\u7aef\u53e3\uff1b\u5f53\u4f4d\u4e8e\u5185\u5b58\u7a7a\u95f4\u65f6\uff0c\u5bf9\u5e94\u7684\u5185\u5b58\u7a7a\u95f4\u88ab\u79f0\u4e3aI/O\u5185\u5b58\u3002\\r\\n\\r\\n# 11.4.1\u3000Linux I/O\u7aef\u53e3\u548cI/O\u5185\u5b58\u8bbf\u95ee\u63a5\u53e3\\r\\n\\r\\n## 1.I/O\u7aef\u53e3\\r\\n\\r\\n\u5728Linux\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u5e94\u4f7f\u7528Linux\u5185\u6838\u63d0\u4f9b\u7684\u51fd\u6570\u6765\u8bbf\u95ee\u5b9a\u4f4d\u4e8eI/O\u7a7a\u95f4\u7684\u7aef\u53e3\uff0c\u8fd9\u4e9b\u51fd\u6570\u5305\u62ec\u5982\u4e0b\u51e0\u79cd\u3002\\r\\n\\r\\n1\uff09\u8bfb\u5199\u5b57\u8282\u7aef\u53e3\uff088\u4f4d\u5bbd\uff09\u3002\\r\\n\\r\\n```\\r\\nunsigned inb(unsigned port);\\r\\nvoid outb(unsigned char byte, unsigned port);\\r\\n```\\r\\n\\r\\n2\uff09\u8bfb\u5199\u5b57\u7aef\u53e3\uff0816\u4f4d\u5bbd\uff09\u3002\\r\\n\\r\\n```\\r\\nunsigned inw(unsigned port);\\r\\nvoid outw(unsigned short word, unsigned port);\\r\\n```\\r\\n\\r\\n3\uff09\u8bfb\u5199\u957f\u5b57\u7aef\u53e3\uff0832\u4f4d\u5bbd\uff09\u3002\\r\\n\\r\\n```\\r\\nunsigned inl(unsigned port);\\r\\nvoid outl(unsigned longword, unsigned port);\\r\\n```\\r\\n\\r\\n4\uff09\u8bfb\u5199\u4e00\u4e32\u5b57\u8282\u3002\\r\\n\\r\\n```\\r\\nvoid insb(unsigned port, void *addr, unsigned long count);\\r\\nvoid outsb(unsigned port, void *addr, unsigned long count);\\r\\n```\\r\\n\\r\\n5\uff09insb\uff08\uff09\u4ece\u7aef\u53e3port\u5f00\u59cb\u8bfbcount\u4e2a\u5b57\u8282\u7aef\u53e3\uff0c\u5e76\u5c06\u8bfb\u53d6\u7ed3\u679c\u5199\u5165addr\u6307\u5411\u7684\u5185\u5b58\uff1boutsb\uff08\uff09\u5c06addr\u6307\u5411\u7684\u5185\u5b58\u4e2d\u7684count\u4e2a\u5b57\u8282\u8fde\u7eed\u5199\u5165\u4ee5port\u5f00\u59cb\u7684\u7aef\u53e3\u3002\\r\\n\\r\\n6\uff09\u8bfb\u5199\u4e00\u4e32\u5b57\u3002\\r\\n\\r\\n```\\r\\nvoid insw(unsigned port, void *addr, unsigned long count);\\r\\nvoid outsw(unsigned port, void *addr, unsigned long count);\\r\\n```\\r\\n\\r\\n7\uff09\u8bfb\u5199\u4e00\u4e32\u957f\u5b57\u3002\\r\\n\\r\\n```\\r\\nvoid insl(unsigned port, void *addr, unsigned long count);\\r\\nvoid outsl(unsigned port, void *addr, unsigned long count);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u5404\u51fd\u6570\u4e2dI/O\u7aef\u53e3\u53f7port\u7684\u7c7b\u578b\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u786c\u4ef6\u5e73\u53f0\uff0c\u56e0\u6b64\uff0c\u8fd9\u91cc\u53ea\u662f\u5199\u51fa\u4e86unsigned\u3002\\r\\n\\r\\n## 2.I/O\u5185\u5b58\\r\\n\\r\\n\u5728\u5185\u6838\u4e2d\u8bbf\u95eeI/O\u5185\u5b58\uff08\u901a\u5e38\u662f\u82af\u7247\u5185\u90e8\u7684\u5404\u4e2aI2 C\u3001SPI\u3001USB\u7b49\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\u6216\u8005\u5916\u90e8\u5185\u5b58\u603b\u7ebf\u4e0a\u7684\u8bbe\u5907\uff09\u4e4b\u524d\uff0c\u9700\u9996\u5148\u4f7f\u7528ioremap\uff08\uff09\u51fd\u6570\u5c06\u8bbe\u5907\u6240\u5904\u7684\u7269\u7406\u5730\u5740\u6620\u5c04\u5230\u865a\u62df\u5730\u5740\u4e0a\u3002ioremap\uff08\uff09\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nvoid *ioremap(unsigned long offset, unsigned long size);\\r\\n```\\r\\n\\r\\nioremap\uff08\uff09\u4e0evmalloc\uff08\uff09\u7c7b\u4f3c\uff0c\u4e5f\u9700\u8981\u5efa\u7acb\u65b0\u7684\u9875\u8868\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u8fdb\u884cvmalloc\uff08\uff09\u4e2d\u6240\u6267\u884c\u7684\u5185\u5b58\u5206\u914d\u884c\u4e3a\u3002ioremap\uff08\uff09\u8fd4\u56de\u4e00\u4e2a\u7279\u6b8a\u7684\u865a\u62df\u5730\u5740\uff0c\u8be5\u5730\u5740\u53ef\u7528\u6765\u5b58\u53d6\u7279\u5b9a\u7684\u7269\u7406\u5730\u5740\u8303\u56f4\uff0c\u8fd9\u4e2a\u865a\u62df\u5730\u5740\u4f4d\u4e8evmalloc\u6620\u5c04\u533a\u57df\u3002\u901a\u8fc7ioremap\uff08\uff09\u83b7\u5f97\u7684\u865a\u62df\u5730\u5740\u5e94\u8be5\u88abiounmap\uff08\uff09\u51fd\u6570\u91ca\u653e\uff0c\u5176\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nvoid iounmap(void * addr);\\r\\n```\\r\\n\\r\\nioremap\uff08\uff09\u6709\u4e2a\u53d8\u4f53\u662fdevm_ioremap\uff08\uff09\uff0c\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u4ee5devm_\u5f00\u5934\u7684\u51fd\u6570\uff0c\u901a\u8fc7devm_ioremap\uff08\uff09\u8fdb\u884c\u7684\u6620\u5c04\u901a\u5e38\u4e0d\u9700\u8981\u5728\u9a71\u52a8\u9000\u51fa\u548c\u51fa\u9519\u5904\u7406\u7684\u65f6\u5019\u8fdb\u884ciounmap\uff08\uff09\u3002devm_ioremap\uff08\uff09\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid __iomem *devm_ioremap(struct device *dev, resource_size_t offset,\\r\\n                           unsigned long size);\\r\\n```\\r\\n\\r\\n\u5728\u8bbe\u5907\u7684\u7269\u7406\u5730\u5740\uff08\u4e00\u822c\u90fd\u662f\u5bc4\u5b58\u5668\uff09\u88ab\u6620\u5c04\u5230\u865a\u62df\u5730\u5740\u4e4b\u540e\uff0c\u5c3d\u7ba1\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u8fd9\u4e9b\u5730\u5740\uff0c\u4f46\u662fLinux\u5185\u6838\u63a8\u8350\u7528\u4e00\u7ec4\u6807\u51c6\u7684API\u6765\u5b8c\u6210\u8bbe\u5907\u5185\u5b58\u6620\u5c04\u7684\u865a\u62df\u5730\u5740\u7684\u8bfb\u5199\u3002\\r\\n\\r\\n\u8bfb\u5bc4\u5b58\u5668\u7528readb_relaxed\uff08\uff09\u3001readw_relaxed\uff08\uff09\u3001readl_relaxed\uff08\uff09\u3001readb\uff08\uff09\u3001readw\uff08\uff09\u3001readl\uff08\uff09\u8fd9\u4e00\u7ec4API\uff0c\u4ee5\u5206\u522b\u8bfb8bit\u300116bit\u300132bit\u7684\u5bc4\u5b58\u5668\uff0c\u6ca1\u6709_relaxed\u540e\u7f00\u7684\u7248\u672c\u4e0e\u6709_relaxed\u540e\u7f00\u7684\u7248\u672c\u7684\u533a\u522b\u662f\u6ca1\u6709_relaxed\u540e\u7f00\u7684\u7248\u672c\u5305\u542b\u4e00\u4e2a\u5185\u5b58\u5c4f\u969c\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\n#define readb(c)            ({ u8  __v = readb_relaxed(c); __iormb(); __v; })\\r\\n#define readw(c)            ({ u16__v = readw_relaxed(c); __iormb(); __v; })\\r\\n#define readl(c)            ({ u32 __v = readl_relaxed(c); __iormb(); __v; })\\r\\n```\\r\\n\\r\\n\u5199\u5bc4\u5b58\u5668\u7528writeb_relaxed\uff08\uff09\u3001writew_relaxed\uff08\uff09\u3001writel_relaxed\uff08\uff09\u3001writeb\uff08\uff09\u3001writew\uff08\uff09\u3001writel\uff08\uff09\u8fd9\u4e00\u7ec4API\uff0c\u4ee5\u5206\u522b\u51998bit\u300116bit\u300132bit\u7684\u5bc4\u5b58\u5668\uff0c\u6ca1\u6709_relaxed\u540e\u7f00\u7684\u7248\u672c\u4e0e\u6709_relaxed\u540e\u7f00\u7684\u7248\u672c\u7684\u533a\u522b\u662f\u524d\u8005\u5305\u542b\u4e00\u4e2a\u5185\u5b58\u5c4f\u969c\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\n#define writeb(v,c)         ({ __iowmb(); writeb_relaxed(v,c); })\\r\\n#define writew(v,c)         ({ __iowmb(); writew_relaxed(v,c); })\\r\\n#define writel(v,c)         ({ __iowmb(); writel_relaxed(v,c); })\\r\\n```\\r\\n\\r\\n# 11.4.2\u3000\u7533\u8bf7\u4e0e\u91ca\u653e\u8bbe\u5907\u7684I/O\u7aef\u53e3\u548cI/O\u5185\u5b58\\r\\n\\r\\n## 1.I/O\u7aef\u53e3\u7533\u8bf7\\r\\n\\r\\nLinux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7ec4\u51fd\u6570\u4ee5\u7533\u8bf7\u548c\u91ca\u653eI/O\u7aef\u53e3\uff0c\u8868\u660e\u8be5\u9a71\u52a8\u8981\u8bbf\u95ee\u8fd9\u7247\u533a\u57df\u3002\\r\\n\\r\\n```\\r\\nstruct resource *request_region(unsigned long first, unsigned long n, const char *name);\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u51fd\u6570\u5411\u5185\u6838\u7533\u8bf7n\u4e2a\u7aef\u53e3\uff0c\u8fd9\u4e9b\u7aef\u53e3\u4ecefirst\u5f00\u59cb\uff0cname\u53c2\u6570\u4e3a\u8bbe\u5907\u7684\u540d\u79f0\u3002\u5982\u679c\u5206\u914d\u6210\u529f\uff0c\u5219\u8fd4\u56de\u503c\u4e0d\u662fNULL\uff0c\u5982\u679c\u8fd4\u56deNULL\uff0c\u5219\u610f\u5473\u7740\u7533\u8bf7\u7aef\u53e3\u5931\u8d25\u3002\\r\\n\\r\\n\u5f53\u7528request_region\uff08\uff09\u7533\u8bf7\u7684I/O\u7aef\u53e3\u4f7f\u7528\u5b8c\u6210\u540e\uff0c\u5e94\u5f53\u4f7f\u7528release_region\uff08\uff09\u51fd\u6570\u5c06\u5b83\u4eec\u5f52\u8fd8\u7ed9\u7cfb\u7edf\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nvoid release_region(unsigned long start, unsigned long n);\\r\\n```\\r\\n\\r\\n## 2.I/O\u5185\u5b58\u7533\u8bf7\\r\\n\\r\\n\u540c\u6837\uff0cLinux\u5185\u6838\u4e5f\u63d0\u4f9b\u4e86\u4e00\u7ec4\u51fd\u6570\u4ee5\u7533\u8bf7\u548c\u91ca\u653eI/O\u5185\u5b58\u7684\u8303\u56f4\u3002\u6b64\u5904\u7684\u201c\u7533\u8bf7\u201d\u8868\u660e\u8be5\u9a71\u52a8\u8981\u8bbf\u95ee\u8fd9\u7247\u533a\u57df\uff0c\u5b83\u4e0d\u4f1a\u505a\u4efb\u4f55\u5185\u5b58\u6620\u5c04\u7684\u52a8\u4f5c\uff0c\u66f4\u591a\u7684\u662f\u7c7b\u4f3c\u4e8e\u201creservation\u201d\u7684\u6982\u5ff5\u3002\\r\\n\\r\\n```\\r\\nstruct resource *request_mem_region(unsigned long start, unsigned long len, char *name);\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u51fd\u6570\u5411\u5185\u6838\u7533\u8bf7n\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u8fd9\u4e9b\u5730\u5740\u4ecefirst\u5f00\u59cb\uff0cname\u53c2\u6570\u4e3a\u8bbe\u5907\u7684\u540d\u79f0\u3002\u5982\u679c\u5206\u914d\u6210\u529f\uff0c\u5219\u8fd4\u56de\u503c\u4e0d\u662fNULL\uff0c\u5982\u679c\u8fd4\u56deNULL\uff0c\u5219\u610f\u5473\u7740\u7533\u8bf7I/O\u5185\u5b58\u5931\u8d25\u3002\\r\\n\\r\\n\u5f53\u7528request_mem_region\uff08\uff09\u7533\u8bf7\u7684I/O\u5185\u5b58\u4f7f\u7528\u5b8c\u6210\u540e\uff0c\u5e94\u5f53\u4f7f\u7528release_mem_region\uff08\uff09\u51fd\u6570\u5c06\u5b83\u4eec\u5f52\u8fd8\u7ed9\u7cfb\u7edf\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nvoid release_mem_region(unsigned long start, unsigned long len);\\r\\n```\\r\\n\\r\\nrequest_region\uff08\uff09\u548crequest_mem_region\uff08\uff09\u4e5f\u5206\u522b\u6709\u53d8\u4f53\uff0c\u5176\u4e3adevm_request_region\uff08\uff09\u548cdevm_request_mem_region\uff08\uff09\u3002\\r\\n\\r\\n# 11.4.3\u3000\u8bbe\u5907I/O\u7aef\u53e3\u548cI/O\u5185\u5b58\u8bbf\u95ee\u6d41\u7a0b\\r\\n\\r\\n\u7efc\u540811.3\u8282\u548c\u672c\u8282\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u5f52\u7eb3\u51fa\u8bbe\u5907\u9a71\u52a8\u8bbf\u95eeI/O\u7aef\u53e3\u548cI/O\u5185\u5b58\u7684\u6b65\u9aa4\u3002\\r\\n\\r\\nI/O\u7aef\u53e3\u8bbf\u95ee\u7684\u4e00\u79cd\u9014\u5f84\u662f\u76f4\u63a5\u4f7f\u7528I/O\u7aef\u53e3\u64cd\u4f5c\u51fd\u6570\uff1a\u5728\u8bbe\u5907\u6253\u5f00\u6216\u9a71\u52a8\u6a21\u5757\u88ab\u52a0\u8f7d\u65f6\u7533\u8bf7I/O\u7aef\u53e3\u533a\u57df\uff0c\u4e4b\u540e\u4f7f\u7528inb\uff08\uff09\u3001outb\uff08\uff09\u7b49\u8fdb\u884c\u7aef\u53e3\u8bbf\u95ee\uff0c\u6700\u540e\uff0c\u5728\u8bbe\u5907\u5173\u95ed\u6216\u9a71\u52a8\u88ab\u5378\u8f7d\u65f6\u91ca\u653eI/O\u7aef\u53e3\u8303\u56f4\u3002\u6574\u4e2a\u6d41\u7a0b\u5982\u56fe11.10\u6240\u793a\u3002\\r\\n\\r\\n![1743863298618](./figure/1743863298618.png)\\r\\n\\r\\n\u56fe11.10\u3000I/O\u7aef\u53e3\u7684\u8bbf\u95ee\u6d41\u7a0b\\r\\n\\r\\nI/O\u5185\u5b58\u7684\u8bbf\u95ee\u6b65\u9aa4\u5982\u56fe11.11\u6240\u793a\uff0c\u9996\u5148\u662f\u8c03\u7528request_mem_region\uff08\uff09\u7533\u8bf7\u8d44\u6e90\uff0c\u63a5\u7740\u5c06\u5bc4\u5b58\u5668\u5730\u5740\u901a\u8fc7ioremap\uff08\uff09\u6620\u5c04\u5230\u5185\u6838\u7a7a\u95f4\u865a\u62df\u5730\u5740\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7Linux\u8bbe\u5907\u8bbf\u95ee\u7f16\u7a0b\u63a5\u53e3\u8bbf\u95ee\u8fd9\u4e9b\u8bbe\u5907\u7684\u5bc4\u5b58\u5668\u4e86\u3002\u8bbf\u95ee\u5b8c\u6210\u540e\uff0c\u5e94\u5bf9ioremap\uff08\uff09\u7533\u8bf7\u7684\u865a\u62df\u5730\u5740\u8fdb\u884c\u91ca\u653e\uff0c\u5e76\u91ca\u653erelease_mem_region\uff08\uff09\u7533\u8bf7\u7684I/O\u5185\u5b58\u8d44\u6e90\u3002\\r\\n\\r\\n![image-20250405222900505](./figure/image-20250405222900505.png)\\r\\n\\r\\n\u56fe11.11\u3000I/O\u5185\u5b58\u8bbf\u95ee\u6d41\u7a0b\\r\\n\\r\\n\u6709\u65f6\u5019\uff0c\u9a71\u52a8\u5728\u8bbf\u95ee\u5bc4\u5b58\u5668\u6216I/O\u7aef\u53e3\u524d\uff0c\u4f1a\u7701\u53bbrequest_mem_region\uff08\uff09\u3001request_region\uff08\uff09\u8fd9\u6837\u7684\u8c03\u7528\u3002\\r\\n\\r\\n# 11.4.4\u3000\u5c06\u8bbe\u5907\u5730\u5740\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\\r\\n\\r\\n## 1.\u5185\u5b58\u6620\u5c04\u4e0eVMA\\r\\n\\r\\n\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u7a7a\u95f4\u662f\u4e0d\u53ef\u80fd\u4e5f\u4e0d\u5e94\u8be5\u76f4\u63a5\u8bbf\u95ee\u8bbe\u5907\u7684\uff0c\u4f46\u662f\uff0c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u53ef\u5b9e\u73b0mmap\uff08\uff09\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ef\u4f7f\u5f97\u7528\u6237\u7a7a\u95f4\u80fd\u76f4\u63a5\u8bbf\u95ee\u8bbe\u5907\u7684\u7269\u7406\u5730\u5740\u3002\u5b9e\u9645\u4e0a\uff0cmmap\uff08\uff09\u5b9e\u73b0\u4e86\u8fd9\u6837\u7684\u4e00\u4e2a\u6620\u5c04\u8fc7\u7a0b\uff1a\u5b83\u5c06\u7528\u6237\u7a7a\u95f4\u7684\u4e00\u6bb5\u5185\u5b58\u4e0e\u8bbe\u5907\u5185\u5b58\u5173\u8054\uff0c\u5f53\u7528\u6237\u8bbf\u95ee\u7528\u6237\u7a7a\u95f4\u7684\u8fd9\u6bb5\u5730\u5740\u8303\u56f4\u65f6\uff0c\u5b9e\u9645\u4e0a\u4f1a\u8f6c\u5316\u4e3a\u5bf9\u8bbe\u5907\u7684\u8bbf\u95ee\u3002\\r\\n\\r\\n\u8fd9\u79cd\u80fd\u529b\u5bf9\u4e8e\u663e\u793a\u9002\u914d\u5668\u4e00\u7c7b\u7684\u8bbe\u5907\u975e\u5e38\u6709\u610f\u4e49\uff0c\u5982\u679c\u7528\u6237\u7a7a\u95f4\u53ef\u76f4\u63a5\u901a\u8fc7\u5185\u5b58\u6620\u5c04\u8bbf\u95ee\u663e\u5b58\u7684\u8bdd\uff0c\u5c4f\u5e55\u5e27\u7684\u5404\u70b9\u50cf\u7d20\u5c06\u4e0d\u518d\u9700\u8981\u4e00\u4e2a\u4ece\u7528\u6237\u7a7a\u95f4\u5230\u5185\u6838\u7a7a\u95f4\u7684\u590d\u5236\u7684\u8fc7\u7a0b\u3002\\r\\n\\r\\nmmap\uff08\uff09\u5fc5\u987b\u4ee5PAGE_SIZE\u4e3a\u5355\u4f4d\u8fdb\u884c\u6620\u5c04\uff0c\u5b9e\u9645\u4e0a\uff0c\u5185\u5b58\u53ea\u80fd\u4ee5\u9875\u4e3a\u5355\u4f4d\u8fdb\u884c\u6620\u5c04\uff0c\u82e5\u8981\u6620\u5c04\u975ePAGE_SIZE\u6574\u6570\u500d\u7684\u5730\u5740\u8303\u56f4\uff0c\u8981\u5148\u8fdb\u884c\u9875\u5bf9\u9f50\uff0c\u5f3a\u884c\u4ee5PAGE_SIZE\u7684\u500d\u6570\u5927\u5c0f\u8fdb\u884c\u6620\u5c04\u3002\\r\\n\\r\\n\u4ecefile_operations\u6587\u4ef6\u64cd\u4f5c\u7ed3\u6784\u4f53\u53ef\u4ee5\u770b\u51fa\uff0c\u9a71\u52a8\u4e2dmmap\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint(*mmap)(struct file *, struct vm_area_struct*);\\r\\n```\\r\\n\\r\\n\u9a71\u52a8\u4e2d\u7684mmap\uff08\uff09\u51fd\u6570\u5c06\u5728\u7528\u6237\u8fdb\u884cmmap\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u65f6\u6700\u7ec8\u88ab\u8c03\u7528\uff0cmmap\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u7684\u539f\u578b\u4e0efile_operations\u4e2dmmap\uff08\uff09\u7684\u539f\u578b\u533a\u522b\u5f88\u5927\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\ncaddr_t  mmap (caddr_t addr, size_t len, int prot, int flags, int fd, off_t offset);\\r\\n```\\r\\n\\r\\n\u53c2\u6570fd\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4e00\u822c\u7531open\uff08\uff09\u8fd4\u56de\uff0cfd\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e3a-1\uff0c\u6b64\u65f6\u9700\u6307\u5b9aflags\u53c2\u6570\u4e2d\u7684MAP_ANON\uff0c\u8868\u660e\u8fdb\u884c\u7684\u662f\u533f\u540d\u6620\u5c04\u3002\\r\\n\\r\\nlen\u662f\u6620\u5c04\u5230\u8c03\u7528\u7528\u6237\u7a7a\u95f4\u7684\u5b57\u8282\u6570\uff0c\u5b83\u4ece\u88ab\u6620\u5c04\u6587\u4ef6\u5f00\u5934offset\u4e2a\u5b57\u8282\u5f00\u59cb\u7b97\u8d77\uff0coffset\u53c2\u6570\u4e00\u822c\u8bbe\u4e3a0\uff0c\u8868\u793a\u4ece\u6587\u4ef6\u5934\u5f00\u59cb\u6620\u5c04\u3002\\r\\n\\r\\nprot\u53c2\u6570\u6307\u5b9a\u8bbf\u95ee\u6743\u9650\uff0c\u53ef\u53d6\u5982\u4e0b\u51e0\u4e2a\u503c\u7684\u201c\u6216\u201d\uff1aPROT_READ\uff08\u53ef\u8bfb\uff09\u3001PROT_WRITE\uff08\u53ef\u5199\uff09\u3001PROT_EXEC\uff08\u53ef\u6267\u884c\uff09\u548cPROT_NONE\uff08\u4e0d\u53ef\u8bbf\u95ee\uff09\u3002\\r\\n\\r\\n\u53c2\u6570addr\u6307\u5b9a\u6587\u4ef6\u5e94\u88ab\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u7684\u8d77\u59cb\u5730\u5740\uff0c\u4e00\u822c\u88ab\u6307\u5b9a\u4e3aNULL\uff0c\u8fd9\u6837\uff0c\u9009\u62e9\u8d77\u59cb\u5730\u5740\u7684\u4efb\u52a1\u5c06\u7531\u5185\u6838\u5b8c\u6210\uff0c\u800c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5c31\u662f\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740\u3002\u5176\u7c7b\u578bcaddr_t\u5b9e\u9645\u4e0a\u5c31\u662fvoid*\u3002\\r\\n\\r\\n\u5f53\u7528\u6237\u8c03\u7528mmap\uff08\uff09\u7684\u65f6\u5019\uff0c\u5185\u6838\u4f1a\u8fdb\u884c\u5982\u4e0b\u5904\u7406\u3002\\r\\n\\r\\n1\uff09\u5728\u8fdb\u7a0b\u7684\u865a\u62df\u7a7a\u95f4\u67e5\u627e\u4e00\u5757VMA\u3002\\r\\n\\r\\n2\uff09\u5c06\u8fd9\u5757VMA\u8fdb\u884c\u6620\u5c04\u3002\\r\\n\\r\\n3\uff09\u5982\u679c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u6216\u8005\u6587\u4ef6\u7cfb\u7edf\u7684file_operations\u5b9a\u4e49\u4e86mmap\uff08\uff09\u64cd\u4f5c\uff0c\u5219\u8c03\u7528\u5b83\u3002\\r\\n\\r\\n4\uff09\u5c06\u8fd9\u4e2aVMA\u63d2\u5165\u8fdb\u7a0b\u7684VMA\u94fe\u8868\u4e2d\u3002\\r\\n\\r\\nfile_operations\u4e2dmmap\uff08\uff09\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c31\u662f\u6b65\u9aa41\uff09\u627e\u5230\u7684VMA\u3002\\r\\n\\r\\n\u7531mmap\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u6620\u5c04\u7684\u5185\u5b58\u53ef\u7531munmap\uff08\uff09\u89e3\u9664\u6620\u5c04\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint munmap(caddr_t addr, size_t len );\\r\\n```\\r\\n\\r\\n\u9a71\u52a8\u7a0b\u5e8f\u4e2dmmap\uff08\uff09\u7684\u5b9e\u73b0\u673a\u5236\u662f\u5efa\u7acb\u9875\u8868\uff0c\u5e76\u586b\u5145VMA\u7ed3\u6784\u4f53\u4e2dvm_operations_struct\u6307\u9488\u3002VMA\u5c31\u662fvm_area_struct\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2a\u865a\u62df\u5185\u5b58\u533a\u57df\uff0cVMA\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535511.4\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.4\u3000VMA\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct vm_area_struct {\\r\\n 2  /* The first cache line has the info for VMA tree walking. */\\r\\n 3\\r\\n 4  unsigned long vm_start;         /* Our start address within vm_mm. */\\r\\n 5  unsigned long vm_end;           /* The first byte after our end address\\r\\n 6                                     within vm_mm. */\\r\\n 7\\r\\n 8  /* linked list of VM areas per task, sorted by address */\\r\\n 9  struct vm_area_struct *vm_next, *vm_prev;\\r\\n10\\r\\n11  struct rb_node vm_rb;\\r\\n12\\r\\n13  ...\\r\\n14\\r\\n15  /* Second cache line starts here. */\\r\\n16\\r\\n17  struct mm_struct *vm_mm;         /* The address space we belong to. */\\r\\n18  pgprot_t vm_page_prot;           /* Access permissions of this VMA. */\\r\\n19  unsigned long vm_flags;          /* Flags, see mm.h. */\\r\\n20\\r\\n21  ...\\r\\n22  const struct vm_operations_struct *vm_ops;\\r\\n23\\r\\n24  /* Information about our backing store: */\\r\\n25  unsigned long vm_pgoff;          /* Offset (within vm_file) in PAGE_SIZE\\r\\n26                                      units, *not* PAGE_CACHE_SIZE */\\r\\n27  struct file * vm_file;           /* File we map to (can be NULL). */\\r\\n28  void * vm_private_data;          /* was vm_pte (shared mem) */\\r\\n29  ...\\r\\n30};\\r\\n```\\r\\n\\r\\nVMA\u7ed3\u6784\u4f53\u63cf\u8ff0\u7684\u865a\u5730\u5740\u4ecb\u4e8evm_start\u548cvm_end\u4e4b\u95f4\uff0c\u800c\u5176vm_ops\u6210\u5458\u6307\u5411\u8fd9\u4e2aVMA\u7684\u64cd\u4f5c\u96c6\u3002\u9488\u5bf9VMA\u7684\u64cd\u4f5c\u90fd\u88ab\u5305\u542b\u5728vm_operations_struct\u7ed3\u6784\u4f53\u4e2d\uff0cvm_operations_struct\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535511.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.5\u3000vm_operations_struct\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct vm_operations_struct {\\r\\n 2  void (*open)(struct vm_area_struct * area);\\r\\n 3  void (*close)(struct vm_area_struct * area);\\r\\n 4  int (*fault)(struct vm_area_struct *vma, struct vm_fault *vmf);\\r\\n 5  void (*map_pages)(struct vm_area_struct *vma, struct vm_fault *vmf);\\r\\n 6\\r\\n 7  /* notification that a previously read-only page is about to become\\r\\n 8   * writable, if an error is returned it will cause a SIGBUS */\\r\\n 9  int (*page_mkwrite)(struct vm_area_struct *vma, struct vm_fault *vmf);\\r\\n10\\r\\n11  /* called by access_process_vm when get_user_pages() fails, typically\\r\\n12   * for use by special VMAs that can switch between memory and hardware\\r\\n13   */\\r\\n14  int (*access)(struct vm_area_struct *vma, unsigned long addr,\\r\\n15            void *buf, int len, int write);\\r\\n16  \u2026\\r\\n17};\\r\\n```\\r\\n\\r\\n\u6574\u4e2avm_operations_struct\u7ed3\u6784\u4f53\u7684\u5b9e\u4f53\u4f1a\u5728file_operations\u7684mmap\uff08\uff09\u6210\u5458\u51fd\u6570\u91cc\u88ab\u8d4b\u503c\u7ed9\u76f8\u5e94\u7684vma->vm_ops\uff0c\u800c\u4e0a\u8ff0open\uff08\uff09\u51fd\u6570\u4e5f\u901a\u5e38\u5728mmap\uff08\uff09\u91cc\u8c03\u7528\uff0cclose\uff08\uff09\u51fd\u6570\u4f1a\u5728\u7528\u6237\u8c03\u7528munmap\uff08\uff09\u7684\u65f6\u5019\u88ab\u8c03\u7528\u5230\u3002\u4ee3\u7801\u6e05\u535511.6\u7ed9\u51fa\u4e86\u4e00\u4e2avm_operations_struct\u7684\u64cd\u4f5c\u8303\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.6\u3000vm_operations_struct\u64cd\u4f5c\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1static int xxx_mmap(struct file *filp, struct vm_area_struct *vma)\\r\\n 2{\\r\\n 3  if (remap_pfn_range(vma, vma->vm_start, vm->vm_pgoff, vma->vm_end - vma\\r\\n 4    ->vm_start, vma->vm_page_prot))/* \u5efa\u7acb\u9875\u8868*/\\r\\n 5    return  -EAGAIN;\\r\\n 6  vma->vm_ops = &xxx_remap_vm_ops;\\r\\n 7  xxx_vma_open(vma);\\r\\n 8  return 0;\\r\\n 9}\\r\\n10\\r\\n11static void xxx_vma_open(struct vm_area_struct *vma)/* VMA\u6253\u5f00\u51fd\u6570*/\\r\\n12{\\r\\n13  ...\\r\\n14  printk(KERN_NOTICE \\"xxx VMA open, virt %lx, phys %lx\\\\n\\", vma->vm_start,\\r\\n15    vma->vm_pgoff << PAGE_SHIFT);\\r\\n16}\\r\\n17\\r\\n18static void xxx_vma_close(struct vm_area_struct *vma)/* VMA\u5173\u95ed\u51fd\u6570*/\\r\\n19{\\r\\n20  ...\\r\\n21  printk(KERN_NOTICE \\"xxx VMA close.\\\\n\\");\\r\\n22}\\r\\n23\\r\\n24static struct vm_operations_struct xxx_remap_vm_ops = {/* VMA\u64cd\u4f5c\u7ed3\u6784\u4f53*/\\r\\n25  .open = xxx_vma_open,\\r\\n26  .close = xxx_vma_close,\\r\\n27  ...\\r\\n28};\\r\\n```\\r\\n\\r\\n\u7b2c3\u884c\u8c03\u7528\u7684remap_pfn_range\uff08\uff09\u521b\u5efa\u9875\u8868\u9879\uff0c\u4ee5VMA\u7ed3\u6784\u4f53\u7684\u6210\u5458\uff08VMA\u7684\u6570\u636e\u6210\u5458\u662f\u5185\u6838\u6839\u636e\u7528\u6237\u7684\u8bf7\u6c42\u81ea\u5df1\u586b\u5145\u7684\uff09\u4f5c\u4e3aremap_pfn_range\uff08\uff09\u7684\u53c2\u6570\uff0c\u6620\u5c04\u7684\u865a\u62df\u5730\u5740\u8303\u56f4\u662fvma->vm_start\u81f3vma->vm_end\u3002\\r\\n\\r\\nremap_pfn_range\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nint remap_pfn_range(struct vm_area_struct *vma, unsigned long addr,\\r\\n          unsigned long pfn, unsigned long size, pgprot_t prot);\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684addr\u53c2\u6570\u8868\u793a\u5185\u5b58\u6620\u5c04\u5f00\u59cb\u5904\u7684\u865a\u62df\u5730\u5740\u3002remap_pfn_range\uff08\uff09\u51fd\u6570\u4e3aaddr~addr+size\u7684\u865a\u62df\u5730\u5740\u6784\u9020\u9875\u8868\u3002\\r\\n\\r\\npfn\u662f\u865a\u62df\u5730\u5740\u5e94\u8be5\u6620\u5c04\u5230\u7684\u7269\u7406\u5730\u5740\u7684\u9875\u5e27\u53f7\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u7269\u7406\u5730\u5740\u53f3\u79fbPAGE_SHIFT\u4f4d\u3002\u82e5PAGE_SIZE\u4e3a4KB\uff0c\u5219PAGE_SHIFT\u4e3a12\uff0c\u56e0\u4e3aPAGE_SIZE\u7b49\u4e8e1<<PAGE_SHIFT\u3002\\r\\n\\r\\nprot\u662f\u65b0\u9875\u6240\u8981\u6c42\u7684\u4fdd\u62a4\u5c5e\u6027\u3002\\r\\n\\r\\n\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u80fd\u4f7f\u7528remap_pfn_range\uff08\uff09\u6620\u5c04\u5185\u5b58\u4e2d\u7684\u4fdd\u7559\u9875\u3001\u8bbe\u5907I/O\u3001framebuffer\u3001camera\u7b49\u5185\u5b58\u3002\u5728remap_pfn_range\uff08\uff09\u4e0a\u53c8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5c01\u88c5\u51faio_remap_pfn_range\uff08\uff09\u3001vm_iomap_memory\uff08\uff09\u7b49API\u3002\\r\\n\\r\\n```\\r\\n#define io_remap_pfn_range remap_pfn_range\\r\\nint vm_iomap_memory(struct vm_area_struct *vma, phys_addr_t start, unsigned long len)\\r\\n{\\r\\n    unsigned long vm_len, pfn, pages;\\r\\n    ...\\r\\n    len += start & ~PAGE_MASK;\\r\\n    pfn = start >> PAGE_SHIFT;\\r\\n    pages = (len + ~PAGE_MASK) >> PAGE_SHIFT;\\r\\n    ...\\r\\n    pfn += vma->vm_pgoff;\\r\\n    pages -= vma->vm_pgoff;\\r\\n    /* Can we fit all of the mapping  */\\r\\n    vm_len = vma->vm_end - vma->vm_start;\\r\\n    ...\\r\\n    /* Ok, let it rip */\\r\\n    return io_remap_pfn_range(vma, vma->vm_start, pfn, vm_len, vma->vm_page_prot);\\r\\n}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.7\u7ed9\u51fa\u4e86LCD\u9a71\u52a8\u6620\u5c04framebuffer\u7269\u7406\u5730\u5740\u5230\u7528\u6237\u7a7a\u95f4\u7684\u5178\u578b\u8303\u4f8b\uff0c\u4ee3\u7801\u53d6\u81eadrivers/video/fbdev/core/fbmem.c\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.7\u3000LCD\u9a71\u52a8\u6620\u5c04framebuffer\u7684mmap\\r\\n\\r\\n```\\r\\n 1static int\\r\\n 2fb_mmap(struct file *file, struct vm_area_struct * vma)\\r\\n 3{\\r\\n 4  struct fb_info *info = file_fb_info(file);\\r\\n 5  struct fb_ops *fb;\\r\\n 6  unsigned long mmio_pgoff;\\r\\n 7  unsigned long start;\\r\\n 8  u32len;\\r\\n 9\\r\\n10  if (!info)\\r\\n11       return -ENODEV;\\r\\n12  fb = info->fbops;\\r\\n13  if (!fb)\\r\\n14       return -ENODEV;\\r\\n15  mutex_lock(&info->mm_lock);\\r\\n16  if (fb->fb_mmap) {\\r\\n17       int res;\\r\\n18       res = fb->fb_mmap(info, vma);\\r\\n19       mutex_unlock(&info->mm_lock);\\r\\n20       return res;\\r\\n21  }\\r\\n22\\r\\n23  /*\\r\\n24   * Ugh. This can be either the frame buffer mapping, or\\r\\n25   * if pgoff points past it, the mmio mapping.\\r\\n26   */\\r\\n27  start = info->fix.smem_start;\\r\\n28  len = info->fix.smem_len;\\r\\n29  mmio_pgoff = PAGE_ALIGN((start & ~PAGE_MASK) + len) >> PAGE_SHIFT;\\r\\n30  if (vma->vm_pgoff >= mmio_pgoff) {\\r\\n31       if (info->var.accel_flags) {\\r\\n32             mutex_unlock(&info->mm_lock);\\r\\n33             return -EINVAL;\\r\\n34       }\\r\\n35\\r\\n36       vma->vm_pgoff -= mmio_pgoff;\\r\\n37       start = info->fix.mmio_start;\\r\\n38       len = info->fix.mmio_len;\\r\\n39  }\\r\\n40  mutex_unlock(&info->mm_lock);\\r\\n41\\r\\n42  vma->vm_page_prot = vm_get_page_prot(vma->vm_flags);\\r\\n43  fb_pgprotect(file, vma, start);\\r\\n44\\r\\n45  return vm_iomap_memory(vma, start, len);\\r\\n46}\\r\\n```\\r\\n\\r\\n\u901a\u5e38\uff0cI/O\u5185\u5b58\u88ab\u6620\u5c04\u65f6\u9700\u8981\u662fnocache\u7684\uff0c\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5e94\u8be5\u5bf9vma->vm_page_prot\u8bbe\u7f6enocache\u6807\u5fd7\u4e4b\u540e\u518d\u6620\u5c04\uff0c\u5982\u4ee3\u7801\u6e05\u535511.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.8\u3000\u4ee5nocache\u65b9\u5f0f\u5c06\u5185\u6838\u7a7a\u95f4\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\\r\\n\\r\\n```\\r\\n 1static int xxx_nocache_mmap(struct file *filp, struct vm_area_struct *vma)\\r\\n 2{\\r\\n 3  vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);/* \u8d4bnocache\u6807\u5fd7 */\\r\\n 4  vma->vm_pgoff = ((u32)map_start >> PAGE_SHIFT);\\r\\n 5  /* \u6620\u5c04*/\\r\\n 6  if (remap_pfn_range(vma, vma->vm_start, vma->vm_pgoff, vma->vm_end - vma\\r\\n 7    ->vm_start, vma->vm_page_prot))\\r\\n 8    return  -EAGAIN;\\r\\n 9  return 0;\\r\\n10}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c3\u884c\u7684pgprot_noncached\uff08\uff09\u662f\u4e00\u4e2a\u5b8f\uff0c\u5b83\u9ad8\u5ea6\u4f9d\u8d56\u4e8eCPU\u7684\u4f53\u7cfb\u7ed3\u6784\uff0cARM\u7684pgprot_noncached\uff08\uff09\u5b9a\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n#define pgprot_noncached(prot) \\\\\\r\\n        __pgprot_modify(prot, L_PTE_MT_MASK, L_PTE_MT_UNCACHED)\\r\\n```\\r\\n\\r\\n\u53e6\u4e00\u4e2a\u6bd4pgprot_noncached\uff08\uff09\u7a0d\u5fae\u5c11\u4e00\u4e9b\u9650\u5236\u7684\u5b8f\u662fpgprot_writecombine\uff08\uff09\uff0c\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n#define pgprot_writecombine(prot) \\\\\\r\\n        __pgprot_modify(prot, L_PTE_MT_MASK, L_PTE_MT_BUFFERABLE)\\r\\n```\\r\\n\\r\\npgprot_noncached\uff08\uff09\u5b9e\u9645\u7981\u6b62\u4e86\u76f8\u5173\u9875\u7684Cache\u548c\u5199\u7f13\u51b2\uff08Write Buffer\uff09\uff0cpgprot_writecombine\uff08\uff09\u5219\u6ca1\u6709\u7981\u6b62\u5199\u7f13\u51b2\u3002ARM\u7684\u5199\u7f13\u51b2\u5668\u662f\u4e00\u4e2a\u975e\u5e38\u5c0f\u7684FIFO\u5b58\u50a8\u5668\uff0c\u4f4d\u4e8e\u5904\u7406\u5668\u6838\u4e0e\u4e3b\u5b58\u4e4b\u95f4\uff0c\u5176\u76ee\u7684\u5728\u4e8e\u5c06\u5904\u7406\u5668\u6838\u548cCache\u4ece\u8f83\u6162\u7684\u4e3b\u5b58\u5199\u64cd\u4f5c\u4e2d\u89e3\u8131\u51fa\u6765\u3002\u5199\u7f13\u51b2\u533a\u4e0eCache\u5728\u5b58\u50a8\u5c42\u6b21\u4e0a\u5904\u4e8e\u540c\u4e00\u5c42\u6b21\uff0c\u4f46\u662f\u5b83\u53ea\u4f5c\u7528\u4e8e\u5199\u4e3b\u5b58\u3002\\r\\n\\r\\n## 2.fault\uff08\uff09\u51fd\u6570\\r\\n\\r\\n\u9664\u4e86remap_pfn_range\uff08\uff09\u4ee5\u5916\uff0c\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u5b9e\u73b0VMA\u7684fault\uff08\uff09\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u4e3a\u8bbe\u5907\u63d0\u4f9b\u66f4\u52a0\u7075\u6d3b\u7684\u5185\u5b58\u6620\u5c04\u9014\u5f84\u3002\u5f53\u8bbf\u95ee\u7684\u9875\u4e0d\u5728\u5185\u5b58\u91cc\uff0c\u5373\u53d1\u751f\u7f3a\u9875\u5f02\u5e38\u65f6\uff0cfault\uff08\uff09\u4f1a\u88ab\u5185\u6838\u81ea\u52a8\u8c03\u7528\uff0c\u800cfault\uff08\uff09\u7684\u5177\u4f53\u884c\u4e3a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u53d1\u751f\u7f3a\u9875\u5f02\u5e38\u65f6\uff0c\u7cfb\u7edf\u4f1a\u7ecf\u8fc7\u5982\u4e0b\u5904\u7406\u8fc7\u7a0b\u3002\\r\\n\\r\\n1\uff09\u627e\u5230\u7f3a\u9875\u7684\u865a\u62df\u5730\u5740\u6240\u5728\u7684VMA\u3002\\r\\n\\r\\n2\uff09\u5982\u679c\u5fc5\u8981\uff0c\u5206\u914d\u4e2d\u95f4\u9875\u76ee\u5f55\u8868\u548c\u9875\u8868\u3002\\r\\n\\r\\n3\uff09\u5982\u679c\u9875\u8868\u9879\u5bf9\u5e94\u7684\u7269\u7406\u9875\u9762\u4e0d\u5b58\u5728\uff0c\u5219\u8c03\u7528\u8fd9\u4e2aVMA\u7684fault\uff08\uff09\u65b9\u6cd5\uff0c\u5b83\u8fd4\u56de\u7269\u7406\u9875\u9762\u7684\u9875\u63cf\u8fcf\u7b26\u3002\\r\\n\\r\\n4\uff09\u5c06\u7269\u7406\u9875\u9762\u7684\u5730\u5740\u586b\u5145\u5230\u9875\u8868\u4e2d\u3002\\r\\n\\r\\nfault\uff08\uff09\u51fd\u6570\u5728Linux\u7684\u65e9\u671f\u7248\u672c\u4e2d\u547d\u540d\u4e3anopage\uff08\uff09\uff0c\u540e\u6765\u53d8\u66f4\u4e3a\u4e86fault\uff08\uff09\u3002\u4ee3\u7801\u6e05\u535511.9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u8bbe\u5907\u9a71\u52a8\u4e2d\u4f7f\u7528fault\uff08\uff09\u7684\u5178\u578b\u8303\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.9\u3000fault\uff08\uff09\u51fd\u6570\u4f7f\u7528\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1static int xxx_fault(struct vm_area_struct *vma, struct vm_fault *vmf)\\r\\n 2{\\r\\n 3  unsigned long paddr;\\r\\n 4  unsigned long pfn;\\r\\n 5  pgoff_t index = vmf->pgoff;\\r\\n 6  struct vma_data *vdata = vma->vm_private_data;\\r\\n 7\\r\\n 8  ...\\r\\n 9\\r\\n10  pfn = paddr >> PAGE_SHIFT;\\r\\n11\\r\\n12  vm_insert_pfn(vma, (unsigned long)vmf->virtual_address, pfn);\\r\\n13\\r\\n14  return VM_FAULT_NOPAGE;\\r\\n15} \\r\\n```\\r\\n\\r\\n\u5927\u591a\u6570\u8bbe\u5907\u9a71\u52a8\u90fd\u4e0d\u9700\u8981\u63d0\u4f9b\u8bbe\u5907\u5185\u5b58\u5230\u7528\u6237\u7a7a\u95f4\u7684\u6620\u5c04\u80fd\u529b\uff0c\u56e0\u4e3a\uff0c\u5bf9\u4e8e\u4e32\u53e3\u7b49\u9762\u5411\u6d41\u7684\u8bbe\u5907\u800c\u8a00\uff0c\u5b9e\u73b0\u8fd9\u79cd\u6620\u5c04\u6beb\u65e0\u610f\u4e49\u3002\u800c\u5bf9\u4e8e\u663e\u793a\u3001\u89c6\u9891\u7b49\u8bbe\u5907\uff0c\u5efa\u7acb\u6620\u5c04\u53ef\u51cf\u5c11\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u4e4b\u95f4\u7684\u5185\u5b58\u590d\u5236\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.4\u3000Linux\u8bbe\u5907\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.4\u3000Linux\u8bbe\u5907\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.4\u3000Linux\u8bbe\u5907\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.4\u3000Linux\u8bbe\u5907\u9a71\u52a8.md","title":"1.4.1\u3000\u8bbe\u5907\u7684\u5206\u7c7b\u53ca\u7279\u70b9","description":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u786c\u4ef6\u4e3b\u8981\u7531CPU\u3001\u5b58\u50a8\u5668\u548c\u5916\u8bbe\u7ec4\u6210\u3002\u968f\u7740IC\u5236\u4f5c\u5de5\u827a\u7684\u53d1\u5c55\uff0c\u76ee\u524d\uff0c\u82af\u7247\u7684\u96c6\u6210\u5ea6\u8d8a\u6765\u8d8a\u9ad8\uff0c\u5f80\u5f80\u5728CPU\u5185\u90e8\u5c31\u96c6\u6210\u4e86\u5b58\u50a8\u5668\u548c\u5916\u8bbe\u9002\u914d\u5668\u3002\u8b6c\u5982\uff0c\u76f8\u5f53\u591a\u7684ARM\u3001PowerPC\u3001MIPS\u7b49\u5904\u7406\u5668\u90fd\u96c6\u6210\u4e86UART\u3001I2 C\u63a7\u5236\u5668\u3001SPI\u63a7\u5236\u5668\u3001USB\u63a7\u5236\u5668\u3001SDRAM\u63a7\u5236\u5668\u7b49\uff0c\u6709\u7684\u5904\u7406\u5668\u8fd8\u96c6\u6210\u4e86GPU\uff08\u56fe\u5f62\u5904\u7406\u5668\uff09\u3001\u89c6\u9891\u7f16\u89e3\u7801\u5668\u7b49\u3002","date":"2025-09-15T14:44:14.329Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":7.01,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.4\u3000\u8bbe\u5907IO\u7aef\u53e3\u548cIO\u5185\u5b58\u7684\u8bbf\u95ee"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop"}},"content":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u786c\u4ef6\u4e3b\u8981\u7531CPU\u3001\u5b58\u50a8\u5668\u548c\u5916\u8bbe\u7ec4\u6210\u3002\u968f\u7740IC\u5236\u4f5c\u5de5\u827a\u7684\u53d1\u5c55\uff0c\u76ee\u524d\uff0c\u82af\u7247\u7684\u96c6\u6210\u5ea6\u8d8a\u6765\u8d8a\u9ad8\uff0c\u5f80\u5f80\u5728CPU\u5185\u90e8\u5c31\u96c6\u6210\u4e86\u5b58\u50a8\u5668\u548c\u5916\u8bbe\u9002\u914d\u5668\u3002\u8b6c\u5982\uff0c\u76f8\u5f53\u591a\u7684ARM\u3001PowerPC\u3001MIPS\u7b49\u5904\u7406\u5668\u90fd\u96c6\u6210\u4e86UART\u3001I2 C\u63a7\u5236\u5668\u3001SPI\u63a7\u5236\u5668\u3001USB\u63a7\u5236\u5668\u3001SDRAM\u63a7\u5236\u5668\u7b49\uff0c\u6709\u7684\u5904\u7406\u5668\u8fd8\u96c6\u6210\u4e86GPU\uff08\u56fe\u5f62\u5904\u7406\u5668\uff09\u3001\u89c6\u9891\u7f16\u89e3\u7801\u5668\u7b49\u3002\\r\\n\\r\\n\u9a71\u52a8\u9488\u5bf9\u7684\u5bf9\u8c61\u662f\u5b58\u50a8\u5668\u548c\u5916\u8bbe\uff08\u5305\u62ecCPU\u5185\u90e8\u96c6\u6210\u7684\u5b58\u50a8\u5668\u548c\u5916\u8bbe\uff09\uff0c\u800c\u4e0d\u662f\u9488\u5bf9CPU\u5185\u6838\u3002Linux\u5c06\u5b58\u50a8\u5668\u548c\u5916\u8bbe\u5206\u4e3a3\u4e2a\u57fa\u7840\u5927\u7c7b\u3002\\r\\n\\r\\n- \u5b57\u7b26\u8bbe\u5907\u3002\\r\\n- \u5757\u8bbe\u5907\u3002\\r\\n- \u7f51\u7edc\u8bbe\u5907\u3002\\r\\n\\r\\n\u5b57\u7b26\u8bbe\u5907\u6307\u90a3\u4e9b\u5fc5\u987b\u4ee5\u4e32\u884c\u987a\u5e8f\u4f9d\u6b21\u8fdb\u884c\u8bbf\u95ee\u7684\u8bbe\u5907\uff0c\u5982\u89e6\u6478\u5c4f\u3001\u78c1\u5e26\u9a71\u52a8\u5668\u3001\u9f20\u6807\u7b49\u3002\u5757\u8bbe\u5907\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fdb\u884c\u8bbf\u95ee\uff0c\u4ee5\u5757\u4e3a\u5355\u4f4d\u8fdb\u884c\u64cd\u4f5c\uff0c\u5982\u786c\u76d8\u3001eMMC\u7b49\u3002\u5b57\u7b26\u8bbe\u5907\u548c\u5757\u8bbe\u5907\u7684\u9a71\u52a8\u8bbe\u8ba1\u6709\u51fa\u5f88\u5927\u7684\u5dee\u5f02\uff0c\u4f46\u662f\u5bf9\u4e8e\u7528\u6237\u800c\u8a00\uff0c\u5b83\u4eec\u90fd\u8981\u4f7f\u7528\u6587\u4ef6\u7cfb\u7edf\u7684\u64cd\u4f5c\u63a5\u53e3open\uff08\uff09\u3001close\uff08\uff09\u3001read\uff08\uff09\u3001write\uff08\uff09\u7b49\u8fdb\u884c\u8bbf\u95ee\u3002\\r\\n\\r\\n\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u7f51\u7edc\u8bbe\u5907\u9762\u5411\u6570\u636e\u5305\u7684\u63a5\u6536\u548c\u53d1\u9001\u800c\u8bbe\u8ba1\uff0c\u5b83\u5e76\u4e0d\u503e\u5411\u4e8e\u5bf9\u5e94\u4e8e\u6587\u4ef6\u7cfb\u7edf\u7684\u8282\u70b9\u3002\u5185\u6838\u4e0e\u7f51\u7edc\u8bbe\u5907\u7684\u901a\u4fe1\u4e0e\u5185\u6838\u548c\u5b57\u7b26\u8bbe\u5907\u3001\u7f51\u7edc\u8bbe\u5907\u7684\u901a\u4fe1\u65b9\u5f0f\u5b8c\u5168\u4e0d\u540c\uff0c\u524d\u8005\u4e3b\u8981\u8fd8\u662f\u4f7f\u7528\u5957\u63a5\u5b57\u63a5\u53e3\u3002\\r\\n\\r\\n# 1.4.2\u3000Linux\u8bbe\u5907\u9a71\u52a8\u4e0e\u6574\u4e2a\u8f6f\u786c\u4ef6\u7cfb\u7edf\u7684\u5173\u7cfb\\r\\n\\r\\n\u5982\u56fe1.5\u6240\u793a\uff0c\u9664\u7f51\u7edc\u8bbe\u5907\u5916\uff0c\u5b57\u7b26\u8bbe\u5907\u4e0e\u5757\u8bbe\u5907\u90fd\u88ab\u6620\u5c04\u5230Linux\u6587\u4ef6\u7cfb\u7edf\u7684\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3open\uff08\uff09\u3001write\uff08\uff09\u3001read\uff08\uff09\u3001close\uff08\uff09\u7b49\u5373\u53ef\u8bbf\u95ee\u5b57\u7b26\u8bbe\u5907\u548c\u5757\u8bbe\u5907\u3002\u6240\u6709\u5b57\u7b26\u8bbe\u5907\u548c\u5757\u8bbe\u5907\u90fd\u7edf\u4e00\u5448\u73b0\u7ed9\u7528\u6237\u3002Linux\u7684\u5757\u8bbe\u5907\u6709\u4e24\u79cd\u8bbf\u95ee\u65b9\u6cd5\uff1a\u4e00\u79cd\u662f\u7c7b\u4f3cdd\u547d\u4ee4\u5bf9\u5e94\u7684\u539f\u59cb\u5757\u8bbe\u5907\uff0c\u5982\u201c/dev/sdb1\u201d\u7b49\uff1b\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u5757\u8bbe\u5907\u4e0a\u5efa\u7acbFAT\u3001EXT4\u3001BTRFS\u7b49\u6587\u4ef6\u7cfb\u7edf\uff0c\u7136\u540e\u4ee5\u6587\u4ef6\u8def\u5f84\u5982\u201c/home/barry/hello.txt\u201d\u7684\u5f62\u5f0f\u8fdb\u884c\u8bbf\u95ee\u3002\u5728Linux\u4e2d\uff0c\u9488\u5bf9NOR\u3001NAND\u7b49\u63d0\u4f9b\u4e86\u72ec\u7acb\u7684\u5185\u5b58\u6280\u672f\u8bbe\u5907\uff08Memory Technology Device\uff0cMTD\uff09\u5b50\u7cfb\u7edf\uff0c\u5176\u4e0a\u8fd0\u884cYAFFS2\u3001JFFS2\u3001UBIFS\u7b49\u5177\u5907\u64e6\u9664\u548c\u8d1f\u8f7d\u5747\u8861\u80fd\u529b\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u9488\u5bf9\u78c1\u76d8\u6216\u8005Flash\u8bbe\u5907\u7684FAT\u3001EXT4\u3001YAFFS2\u3001JFFS2\u3001UBIFS\u7b49\u6587\u4ef6\u7cfb\u7edf\u5b9a\u4e49\u4e86\u6587\u4ef6\u548c\u76ee\u5f55\u5728\u5b58\u50a8\u4ecb\u8d28\u4e0a\u7684\u7ec4\u7ec7\u3002\u800cLinux\u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u5219\u7edf\u4e00\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u62bd\u8c61\u3002\\r\\n\\r\\n![image-20250320225422303](./figure/image-20250320225422303.png)\\r\\n\\r\\n\u56fe1.5\u3000Linux\u8bbe\u5907\u9a71\u52a8\u4e0e\u6574\u4e2a\u8f6f\u786c\u4ef6\u7cfb\u7edf\u7684\u5173\u7cfb\\r\\n\\r\\n\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528Linux\u7684\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u7f16\u7a0b\uff0c\u4f46\u4e5f\u53ef\u4f7f\u7528C\u5e93\u51fd\u6570\uff0c\u51fa\u4e8e\u4ee3\u7801\u53ef\u79fb\u690d\u6027\u7684\u76ee\u7684\uff0c\u540e\u8005\u66f4\u503c\u5f97\u63a8\u8350\u3002C\u5e93\u51fd\u6570\u672c\u8eab\u4e5f\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\u800c\u5b9e\u73b0\uff0c\u5982C\u5e93\u51fd\u6570fopen\uff08\uff09\u3001fwrite\uff08\uff09\u3001fread\uff08\uff09\u3001fclose\uff08\uff09\u5206\u522b\u4f1a\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684API open\uff08\uff09\u3001write\uff08\uff09\u3001read\uff08\uff09\u3001close\uff08\uff09\u3002\\r\\n\\r\\n# 1.4.3\u3000Linux\u8bbe\u5907\u9a71\u52a8\u7684\u91cd\u70b9\u3001\u96be\u70b9\\r\\n\\r\\nLinux\u8bbe\u5907\u9a71\u52a8\u7684\u5b66\u4e60\u662f\u4e00\u9879\u6d69\u7e41\u7684\u5de5\u7a0b\uff0c\u5305\u542b\u5982\u4e0b\u91cd\u70b9\u3001\u96be\u70b9\u3002\\r\\n\\r\\n- \xb7\u7f16\u5199Linux\u8bbe\u5907\u9a71\u52a8\u8981\u6c42\u5de5\u7a0b\u5e08\u6709\u975e\u5e38\u597d\u7684\u786c\u4ef6\u57fa\u7840\uff0c\u61c2\u5f97SRAM\u3001Flash\u3001SDRAM\u3001\u78c1\u76d8\u7684\u8bfb\u5199\u65b9\u5f0f\uff0cUART\u3001I2 C\u3001USB\u7b49\u8bbe\u5907\u7684\u63a5\u53e3\u4ee5\u53ca\u8f6e\u8be2\u3001\u4e2d\u65ad\u3001DMA\u7684\u539f\u7406\uff0cPCI\u603b\u7ebf\u7684\u5de5\u4f5c\u65b9\u5f0f\u4ee5\u53caCPU\u7684\u5185\u5b58\u7ba1\u7406\u5355\u5143\uff08MMU\uff09\u7b49\u3002\\r\\n- \xb7\u7f16\u5199Linux\u8bbe\u5907\u9a71\u52a8\u8981\u6c42\u5de5\u7a0b\u5e08\u6709\u975e\u5e38\u597d\u7684C\u8bed\u8a00\u57fa\u7840\uff0c\u80fd\u7075\u6d3b\u5730\u8fd0\u7528C\u8bed\u8a00\u7684\u7ed3\u6784\u4f53\u3001\u6307\u9488\u3001\u51fd\u6570\u6307\u9488\u53ca\u5185\u5b58\u52a8\u6001\u7533\u8bf7\u548c\u91ca\u653e\u7b49\u3002\\r\\n- \xb7\u7f16\u5199Linux\u8bbe\u5907\u9a71\u52a8\u8981\u6c42\u5de5\u7a0b\u5e08\u6709\u4e00\u5b9a\u7684Linux\u5185\u6838\u57fa\u7840\uff0c\u867d\u7136\u5e76\u4e0d\u8981\u6c42\u5de5\u7a0b\u5e08\u5bf9\u5185\u6838\u5404\u4e2a\u90e8\u5206\u6709\u6df1\u5165\u7684\u7814\u7a76\uff0c\u4f46\u81f3\u5c11\u8981\u660e\u767d\u9a71\u52a8\u4e0e\u5185\u6838\u7684\u63a5\u53e3\u3002\u5c24\u5176\u662f\u5bf9\u4e8e\u5757\u8bbe\u5907\u3001\u7f51\u7edc\u8bbe\u5907\u3001Flash\u8bbe\u5907\u3001\u4e32\u53e3\u8bbe\u5907\u7b49\u590d\u6742\u8bbe\u5907\uff0c\u5185\u6838\u5b9a\u4e49\u7684\u9a71\u52a8\u4f53\u7cfb\u7ed3\u6784\u672c\u8eab\u5c31\u975e\u5e38\u590d\u6742\u3002\\r\\n- \xb7\u7f16\u5199Linux\u8bbe\u5907\u9a71\u52a8\u8981\u6c42\u5de5\u7a0b\u5e08\u6709\u975e\u5e38\u597d\u7684\u591a\u4efb\u52a1\u5e76\u53d1\u63a7\u5236\u548c\u540c\u6b65\u7684\u57fa\u7840\uff0c\u56e0\u4e3a\u5728\u9a71\u52a8\u4e2d\u4f1a\u5927\u91cf\u4f7f\u7528\u81ea\u65cb\u9501\u3001\u4e92\u65a5\u3001\u4fe1\u53f7\u91cf\u3001\u7b49\u5f85\u961f\u5217\u7b49\u5e76\u53d1\u4e0e\u540c\u6b65\u673a\u5236\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u7ecf\u9a8c\u503c\u7684\u83b7\u53d6\u5e76\u975e\u671d\u5915\u4e4b\u4e8b\uff0c\u56e0\u6b64\u8981\u6c42\u6211\u4eec\u6709\u8db3\u591f\u7684\u5b66\u4e60\u6052\u5fc3\u548c\u6bc5\u529b\u3002\u5bf9\u8fd9\u4e9b\u91cd\u70b9\u3001\u96be\u70b9\uff0c\u672c\u4e66\u90fd\u4f1a\u5728\u76f8\u5e94\u7ae0\u8282\u8fdb\u884c\u8bb2\u89e3\u3002\\r\\n\\r\\n\u52a8\u624b\u5b9e\u8df5\u6c38\u8fdc\u662f\u5b66\u4e60\u4efb\u4f55\u8f6f\u4ef6\u5f00\u53d1\u7684\u6700\u597d\u65b9\u6cd5\uff0c\u5b66\u4e60Linux\u8bbe\u5907\u9a71\u52a8\u4e5f\u4e0d\u4f8b\u5916\u3002\u56e0\u6b64\uff0c\u672c\u4e66\u4f7f\u7528\u7684\u662f\u901a\u8fc7QEMU\u6a21\u62df\u7684ARM vexpress\u7535\u8def\u677f\uff0c\u672c\u4e66\u4e2d\u7684\u6240\u6709\u5b9e\u4f8b\u5747\u53ef\u5728\u8be5\u201c\u7535\u8def\u677f\u201d\u4e0a\u76f4\u63a5\u6267\u884c\u3002\\r\\n\\r\\n\u9605\u8bfb\u7ecf\u5178\u4e66\u7c4d\u548c\u53c2\u4e0eLinux\u793e\u533a\u7684\u8ba8\u8bba\u4e5f\u662f\u975e\u5e38\u597d\u7684\u5b66\u4e60\u65b9\u6cd5\u3002Linux\u5185\u6838\u6e90\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u4e00\u4e2aDocumentation\u76ee\u5f55\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e00\u6279\u5185\u6838\u8bbe\u8ba1\u6587\u6863\uff0c\u5168\u90e8\u662f\u6587\u672c\u6587\u4ef6\u3002\u5f88\u9057\u61be\uff0c\u8fd9\u4e9b\u6587\u6863\u7684\u7ec4\u7ec7\u4e0d\u592a\u597d\uff0c\u5185\u5bb9\u4e5f\u4e0d\u591f\u7ec6\u81f4\u3002\\r\\n\\r\\n\u5b66\u4e60Linux\u8bbe\u5907\u9a71\u52a8\u7684\u4e00\u4e2a\u6ce8\u610f\u4e8b\u9879\u662f\u8981\u907f\u514d\u7ba1\u4e2d\u7aa5\u8c79\u3001\u53ea\u89c1\u6811\u6728\u4e0d\u89c1\u68ee\u6797\uff0c\u56e0\u4e3a\u5404\u7c7bLinux\u8bbe\u5907\u9a71\u52a8\u90fd\u4ece\u5c5e\u4e8e\u4e00\u4e2aLinux\u8bbe\u5907\u9a71\u52a8\u7684\u67b6\u6784\uff0c\u5355\u7eaf\u800c\u7247\u9762\u5730\u5b66\u4e60\u51e0\u4e2a\u51fd\u6570\u3001\u51e0\u4e2a\u6570\u636e\u7ed3\u6784\u662f\u4e0d\u53ef\u80fd\u7406\u6e05\u9a71\u52a8\u4e2d\u5404\u7ec4\u6210\u90e8\u5206\u4e4b\u95f4\u7684\u5173\u7cfb\u7684\u3002\u56e0\u6b64\uff0cLinux\u9a71\u52a8\u7684\u5206\u6790\u65b9\u6cd5\u662f\u70b9\u9762\u7ed3\u5408\uff0c\u5c06\u5bf9\u51fd\u6570\u548c\u6570\u636e\u7ed3\u6784\u7684\u7406\u89e3\u653e\u5728\u6574\u4f53\u67b6\u6784\u7684\u80cc\u666f\u4e4b\u4e2d\u3002\u8fd9\u662f\u672c\u4e66\u5404\u7ae0\u8282\u8bb2\u89e3\u9a71\u52a8\u7684\u65b9\u6cd5\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop","description":"PowerTop\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u7528\u4e8e\u8fdb\u884c\u7535\u91cf\u6d88\u8017\u5206\u6790\u548c\u7535\u6e90\u7ba1\u7406\u8bca\u65ad\u7684\u5de5\u5177\uff0c\u5176\u4e3b\u9875\u4f4d\u4e8eIntel\u5f00\u6e90\u6280\u672f\u4e2d\u5fc3\u7684https://01.org/powertop/ \uff0c\u7ef4\u62a4\u8005\u662fArjan van de Ven\u548cKristen Accardi\u3002PowerTop\u53ef\u5206\u6790\u7cfb\u7edf\u4e2d\u8f6f\u4ef6\u7684\u529f\u8017\uff0c\u4ee5\u4fbf\u627e\u5230\u529f\u8017\u5927\u6237\uff0c\u4e5f\u53ef\u663e\u793a\u7cfb\u7edf\u4e2d\u4e0d\u540c\u7684C\u72b6\u6001\uff08\u4e0eCPUIdle\u9a71\u52a8\u5bf9\u5e94\uff09\u548cP\u72b6\u6001\uff08\u4e0eCPUFreq\u9a71\u52a8\u5bf9\u5e94\uff09\u7684\u65f6\u95f4\u6bd4\u4f8b\uff0c\u5e76\u91c7\u7528\u4e86\u57fa\u4e8eTAB\u7684\u754c\u9762\u98ce\u683c\uff0c\u5982\u56fe19.5\u6240\u793a\u3002","date":"2025-09-15T14:44:14.329Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.63,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"1.4.1\u3000\u8bbe\u5907\u7684\u5206\u7c7b\u53ca\u7279\u70b9","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/1.4\u3000Linux\u8bbe\u5907\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570"}},"content":"PowerTop\u662f\u4e00\u6b3e\u5f00\u6e90\u7684\u7528\u4e8e\u8fdb\u884c\u7535\u91cf\u6d88\u8017\u5206\u6790\u548c\u7535\u6e90\u7ba1\u7406\u8bca\u65ad\u7684\u5de5\u5177\uff0c\u5176\u4e3b\u9875\u4f4d\u4e8eIntel\u5f00\u6e90\u6280\u672f\u4e2d\u5fc3\u7684https://01.org/powertop/ \uff0c\u7ef4\u62a4\u8005\u662fArjan van de Ven\u548cKristen Accardi\u3002PowerTop\u53ef\u5206\u6790\u7cfb\u7edf\u4e2d\u8f6f\u4ef6\u7684\u529f\u8017\uff0c\u4ee5\u4fbf\u627e\u5230\u529f\u8017\u5927\u6237\uff0c\u4e5f\u53ef\u663e\u793a\u7cfb\u7edf\u4e2d\u4e0d\u540c\u7684C\u72b6\u6001\uff08\u4e0eCPUIdle\u9a71\u52a8\u5bf9\u5e94\uff09\u548cP\u72b6\u6001\uff08\u4e0eCPUFreq\u9a71\u52a8\u5bf9\u5e94\uff09\u7684\u65f6\u95f4\u6bd4\u4f8b\uff0c\u5e76\u91c7\u7528\u4e86\u57fa\u4e8eTAB\u7684\u754c\u9762\u98ce\u683c\uff0c\u5982\u56fe19.5\u6240\u793a\u3002\\r\\n\\r\\n![1746024806740](./figure/1746024806740.png)\\r\\n\\r\\n\u56fe19.5\u3000PowerTOP"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570","description":"Linux\u5185\u6838\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e00\u822c\u4ee5exit\u6807\u8bc6\u58f0\u660e\uff0c\u5178\u578b\u7684\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u7684\u5f62\u5f0f\u5982\u4ee3\u7801\u6e05\u53554.3\u6240\u793a\u3002","date":"2025-09-15T14:44:14.313Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.205,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001"}},"content":"Linux\u5185\u6838\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e00\u822c\u4ee5__exit\u6807\u8bc6\u58f0\u660e\uff0c\u5178\u578b\u7684\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u7684\u5f62\u5f0f\u5982\u4ee3\u7801\u6e05\u53554.3\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53554.3\u3000\u5185\u6838\u6a21\u5757\u5378\u8f7d\u51fd\u6570\\r\\n\\r\\n```\\r\\n1 static void _ _exit cleanup_function(void)\\r\\n2 {\\r\\n3       /* \u91ca\u653e\u4ee3\u7801\\r\\n\\r\\n\\r\\n */\\r\\n4 }\\r\\n5 module_exit(cleanup_function);\\r\\n```\\r\\n\\r\\n\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u5728\u6a21\u5757\u5378\u8f7d\u7684\u65f6\u5019\u6267\u884c\uff0c\u800c\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u4e14\u5fc5\u987b\u4ee5\u201cmodule_exit\uff08\u51fd\u6570\u540d\uff09\u201d\u7684\u5f62\u5f0f\u6765\u6307\u5b9a\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u8981\u5b8c\u6210\u4e0e\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u76f8\u53cd\u7684\u529f\u80fd\u3002\\r\\n\\r\\n\u6211\u4eec\u7528__exit\u6765\u4fee\u9970\u6a21\u5757\u5378\u8f7d\u51fd\u6570\uff0c\u53ef\u4ee5\u544a\u8bc9\u5185\u6838\u5982\u679c\u76f8\u5173\u7684\u6a21\u5757\u88ab\u76f4\u63a5\u7f16\u8bd1\u8fdb\u5185\u6838\uff08\u5373built-in\uff09\uff0c\u5219cleanup_function\uff08\uff09\u51fd\u6570\u4f1a\u88ab\u7701\u7565\uff0c\u76f4\u63a5\u4e0d\u94fe\u8fdb\u6700\u540e\u7684\u955c\u50cf\u3002\u65e2\u7136\u6a21\u5757\u88ab\u5185\u7f6e\u4e86\uff0c\u5c31\u4e0d\u53ef\u80fd\u5378\u8f7d\u5b83\u4e86\uff0c\u5378\u8f7d\u51fd\u6570\u4e5f\u5c31\u6ca1\u6709\u5b58\u5728\u7684\u5fc5\u8981\u4e86\u3002\u9664\u4e86\u51fd\u6570\u4ee5\u5916\uff0c\u53ea\u662f\u9000\u51fa\u9636\u6bb5\u91c7\u7528\u7684\u6570\u636e\u4e5f\u53ef\u4ee5\u7528__exitdata\u6765\u5f62\u5bb9\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001","description":"\u7f51\u7edc\u9002\u914d\u5668\u786c\u4ef6\u7535\u8def\u53ef\u4ee5\u68c0\u6d4b\u51fa\u94fe\u8def\u4e0a\u662f\u5426\u6709\u8f7d\u6ce2\uff0c\u8f7d\u6ce2\u53cd\u6620\u4e86\u7f51\u7edc\u7684\u8fde\u63a5\u662f\u5426\u6b63\u5e38\u3002\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u53ef\u4ee5\u901a\u8fc7netifcarrieron\uff08\uff09\u548cnetifcarrieroff\uff08\uff09\u51fd\u6570\u6539\u53d8\u8bbe\u5907\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u5982\u679c\u9a71\u52a8\u68c0\u6d4b\u5230\u8fde\u63a5\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0c\u4e5f\u5e94\u8be5\u4ee5netifcarrieron\uff08\uff09\u548cnetifcarrieroff\uff08\uff09\u51fd\u6570\u663e\u5f0f\u5730\u901a\u77e5\u5185\u6838\u3002","date":"2025-09-15T14:44:14.309Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.385,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.4\u3000\u6a21\u5757\u5378\u8f7d\u51fd\u6570"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c"}},"content":"\u7f51\u7edc\u9002\u914d\u5668\u786c\u4ef6\u7535\u8def\u53ef\u4ee5\u68c0\u6d4b\u51fa\u94fe\u8def\u4e0a\u662f\u5426\u6709\u8f7d\u6ce2\uff0c\u8f7d\u6ce2\u53cd\u6620\u4e86\u7f51\u7edc\u7684\u8fde\u63a5\u662f\u5426\u6b63\u5e38\u3002\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u53ef\u4ee5\u901a\u8fc7netif_carrier_on\uff08\uff09\u548cnetif_carrier_off\uff08\uff09\u51fd\u6570\u6539\u53d8\u8bbe\u5907\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u5982\u679c\u9a71\u52a8\u68c0\u6d4b\u5230\u8fde\u63a5\u72b6\u6001\u53d1\u751f\u53d8\u5316\uff0c\u4e5f\u5e94\u8be5\u4ee5netif_carrier_on\uff08\uff09\u548cnetif_carrier_off\uff08\uff09\u51fd\u6570\u663e\u5f0f\u5730\u901a\u77e5\u5185\u6838\u3002\\r\\n\\r\\n\u9664\u4e86netif_carrier_on\uff08\uff09\u548cnetif_carrier_off\uff08\uff09\u51fd\u6570\u4ee5\u5916\uff0c\u53e6\u4e00\u4e2a\u51fd\u6570netif_carrier_ok\uff08\uff09\u53ef\u7528\u4e8e\u5411\u8c03\u7528\u8005\u8fd4\u56de\u94fe\u8def\u4e0a\u7684\u8f7d\u6ce2\u4fe1\u53f7\u662f\u5426\u5b58\u5728\u3002\\r\\n\\r\\n\u8fd9\u51e0\u4e2a\u51fd\u6570\u90fd\u63a5\u6536\u4e00\u4e2anet_device\u8bbe\u5907\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff0c\u539f\u578b\u5206\u522b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid netif_carrier_on(struct net_device *dev);\\r\\nvoid netif_carrier_off(struct net_device *dev);\\r\\nint netif_carrier_ok(struct net_device *dev);\\r\\n```\\r\\n\\r\\n\u5728\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u53ef\u91c7\u53d6\u4e00\u5b9a\u7684\u624b\u6bb5\u6765\u68c0\u6d4b\u548c\u62a5\u544a\u94fe\u8def\u72b6\u6001\uff0c\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u91c7\u7528\u4e2d\u65ad\uff0c\u5176\u6b21\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u65f6\u5668\u6765\u5bf9\u94fe\u8def\u72b6\u6001\u8fdb\u884c\u5468\u671f\u6027\u7684\u68c0\u67e5\u3002\u5f53\u5b9a\u65f6\u5668\u5230\u671f\u4e4b\u540e\uff0c\u5728\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u4e2d\u8bfb\u53d6\u7269\u7406\u8bbe\u5907\u7684\u76f8\u5173\u5bc4\u5b58\u5668\u4ee5\u83b7\u5f97\u8f7d\u6ce2\u72b6\u6001\uff0c\u4ece\u800c\u66f4\u65b0\u8bbe\u5907\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u5982\u4ee3\u7801\u6e05\u535514.12\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.12\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7528\u5b9a\u65f6\u5668\u5468\u671f\u6027\u68c0\u67e5\u94fe\u8def\u72b6\u6001\\r\\n\\r\\n```\\r\\n 1static void xxx_timer(unsigned long data)\\r\\n 2{\\r\\n 3  struct net_device *dev = (struct net_device*)data;\\r\\n 4  u16link;\\r\\n 5  \u2026\\r\\n 6  if (!(dev->flags &IFF_UP))\\r\\n 7    goto set_timer;\\r\\n 8\\r\\n 9  /* \u83b7\u5f97\u7269\u7406\u4e0a\u7684\u8fde\u63a5\u72b6\u6001 */\\r\\n10  if (link = xxx_chk_link(dev)) {\\r\\n11    if (!(dev->flags &IFF_RUNNING)) {\\r\\n12      netif_carrier_on(dev);\\r\\n13      dev->flags |= IFF_RUNNING;\\r\\n14      printk(KERN_DEBUG \\"%s: link up\\\\n\\", dev->name);\\r\\n15    }\\r\\n16  } else {\\r\\n17    if (dev->flags &IFF_RUNNING) {\\r\\n18      netif_carrier_off(dev);\\r\\n19      dev->flags &= ~IFF_RUNNING;\\r\\n20      printk(KERN_DEBUG \\"%s: link down\\\\n\\", dev->name);\\r\\n21    }\\r\\n22  }\\r\\n23\\r\\n24  set_timer:\\r\\n25  priv->timer.expires = jiffies + 1* Hz;\\r\\n26  priv->timer.data = (unsigned long)dev;\\r\\n27  priv->timer.function = &xxx_timer; /* timer handler */\\r\\n28  add_timer(&priv->timer);\\r\\n29}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c10\u884c\u8c03\u7528xxx_chk_link\uff08\uff09\u51fd\u6570\u6765\u8bfb\u53d6\u7f51\u7edc\u9002\u914d\u5668\u786c\u4ef6\u7684\u76f8\u5173\u5bc4\u5b58\u5668\uff0c\u4ee5\u83b7\u5f97\u94fe\u8def\u8fde\u63a5\u72b6\u6001\uff0c\u5177\u4f53\u5b9e\u73b0\u7531\u786c\u4ef6\u51b3\u5b9a\u3002\u5f53\u94fe\u8def\u8fde\u63a5\u4e0a\u65f6\uff0c\u7b2c12\u884c\u7684netif_carrier_on\uff08\uff09\u51fd\u6570\u663e\u5f0f\u5730\u901a\u77e5\u5185\u6838\u94fe\u8def\u6b63\u5e38\uff1b\u53cd\u4e4b\uff0c\u7b2c18\u884c\u7684netif_carrier_off\uff08\uff09\u540c\u6837\u663e\u5f0f\u5730\u901a\u77e5\u5185\u6838\u94fe\u8def\u5931\u53bb\u8fde\u63a5\u3002\\r\\n\\r\\n\u6b64\u5916\uff0c\u4ece\u4e0a\u8ff0\u6e90\u4ee3\u7801\u8fd8\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u4f1a\u4e0d\u505c\u5730\u5229\u7528\u7b2c24~28\u884c\u4ee3\u7801\u542f\u52a8\u65b0\u7684\u5b9a\u65f6\u5668\u4ee5\u5b9e\u73b0\u5468\u671f\u6027\u68c0\u6d4b\u7684\u76ee\u7684\u3002\u90a3\u4e48\u6700\u521d\u542f\u52a8\u5b9a\u65f6\u5668\u7684\u5730\u65b9\u5728\u54ea\u91cc\u5462\uff1f\u5f88\u663e\u7136\uff0c\u5b83\u6700\u9002\u5408\u5728\u8bbe\u5907\u7684\u6253\u5f00\u51fd\u6570\u4e2d\u5b8c\u6210\uff0c\u5982\u4ee3\u7801\u6e05\u535514.13\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.13\u3000\u5728\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u6253\u5f00\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u5b9a\u65f6\u5668\\r\\n\\r\\n```\\r\\n 1static int xxx_open(struct net_device *dev)\\r\\n 2{\\r\\n 3  struct xxx_priv *priv = netdev_priv(dev);\\r\\n 4\\r\\n 5  ...\\r\\n 6  priv->timer.expires = jiffies + 3* Hz;\\r\\n 7  priv->timer.data = (unsigned long)dev;\\r\\n 8  priv->timer.function = &xxx_timer; /* \u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570*/\\r\\n 9  add_timer(&priv->timer);\\r\\n10  ...\\r\\n11}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c","description":"\u539f\u5b50\u64cd\u4f5c\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u4e00\u4e2a\u6574\u578b\u6570\u636e\u7684\u4fee\u6539\u662f\u6392\u4ed6\u6027\u7684\u3002Linux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\u6765\u5b9e\u73b0\u5185\u6838\u4e2d\u7684\u539f\u5b50\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u51fd\u6570\u53c8\u5206\u4e3a\u4e24\u7c7b\uff0c\u5206\u522b\u9488\u5bf9\u4f4d\u548c\u6574\u578b\u53d8\u91cf\u8fdb\u884c\u539f\u5b50\u64cd\u4f5c\u3002\u4f4d\u548c\u6574\u578b\u53d8\u91cf\u7684\u539f\u5b50\u64cd\u4f5c\u90fd\u4f9d\u8d56\u4e8e\u5e95\u5c42CPU\u7684\u539f\u5b50\u64cd\u4f5c\uff0c\u56e0\u6b64\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\u90fd\u4e0eCPU\u67b6\u6784\u5bc6\u5207\u76f8\u5173\u3002\u5bf9\u4e8eARM\u5904\u7406\u5668\u800c\u8a00\uff0c\u5e95\u5c42\u4f7f\u7528LDREX\u548cSTREX\u6307\u4ee4\uff0c\u6bd4\u5982atomicinc\uff08\uff09\u5e95\u5c42\u7684\u5b9e\u73b0\u4f1a\u8c03\u7528\u5230atomicadd\uff08\uff09\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a","date":"2025-09-15T14:44:14.309Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.775,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.7\u3000\u7f51\u7edc\u8fde\u63a5\u72b6\u6001"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8"}},"content":"\u539f\u5b50\u64cd\u4f5c\u53ef\u4ee5\u4fdd\u8bc1\u5bf9\u4e00\u4e2a\u6574\u578b\u6570\u636e\u7684\u4fee\u6539\u662f\u6392\u4ed6\u6027\u7684\u3002Linux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\u6765\u5b9e\u73b0\u5185\u6838\u4e2d\u7684\u539f\u5b50\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u51fd\u6570\u53c8\u5206\u4e3a\u4e24\u7c7b\uff0c\u5206\u522b\u9488\u5bf9\u4f4d\u548c\u6574\u578b\u53d8\u91cf\u8fdb\u884c\u539f\u5b50\u64cd\u4f5c\u3002\u4f4d\u548c\u6574\u578b\u53d8\u91cf\u7684\u539f\u5b50\u64cd\u4f5c\u90fd\u4f9d\u8d56\u4e8e\u5e95\u5c42CPU\u7684\u539f\u5b50\u64cd\u4f5c\uff0c\u56e0\u6b64\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\u90fd\u4e0eCPU\u67b6\u6784\u5bc6\u5207\u76f8\u5173\u3002\u5bf9\u4e8eARM\u5904\u7406\u5668\u800c\u8a00\uff0c\u5e95\u5c42\u4f7f\u7528LDREX\u548cSTREX\u6307\u4ee4\uff0c\u6bd4\u5982atomic_inc\uff08\uff09\u5e95\u5c42\u7684\u5b9e\u73b0\u4f1a\u8c03\u7528\u5230atomic_add\uff08\uff09\uff0c\u5176\u4ee3\u7801\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nstatic inline void atomic_add(int i, atomic_t *v)\\r\\n{\\r\\n       unsigned long tmp;\\r\\n       int result;\\r\\n       prefetchw(&v->counter);\\r\\n       __asm__ __volatile__(\\"@ atomic_add\\\\n\\"\\r\\n\\"1:    ldrex   %0, [%3]\\\\n\\"\\r\\n\\"      add     %0, %0, %4\\\\n\\"\\r\\n\\"      strex   %1, %0, [%3]\\\\n\\"\\r\\n\\"      teq     %1, #0\\\\n\\"\\r\\n\\"      bne     1b\\"\\r\\n       : \\"=&r\\" (result), \\"=&r\\" (tmp), \\"+Qo\\" (v->counter)\\r\\n       : \\"r\\" (&v->counter), \\"Ir\\" (i)\\r\\n       : \\"cc\\");\\r\\n}\\r\\n```\\r\\n\\r\\nldrex\u6307\u4ee4\u8ddfstrex\u914d\u5bf9\u4f7f\u7528\uff0c\u53ef\u4ee5\u8ba9\u603b\u7ebf\u76d1\u63a7ldrex\u5230strex\u4e4b\u95f4\u6709\u65e0\u5176\u4ed6\u7684\u5b9e\u4f53\u5b58\u53d6\u8be5\u5730\u5740\uff0c\u5982\u679c\u6709\u5e76\u53d1\u7684\u8bbf\u95ee\uff0c\u6267\u884cstrex\u6307\u4ee4\u65f6\uff0c\u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u88ab\u8bbe\u7f6e\u4e3a1\uff08Non-Exclusive Access\uff09\u5e76\u4e14\u5b58\u50a8\u7684\u884c\u4e3a\u4e5f\u4e0d\u6210\u529f\uff1b\u5982\u679c\u6ca1\u6709\u5e76\u53d1\u7684\u5b58\u53d6\uff0cstrex\u5728\u7b2c\u4e00\u4e2a\u5bc4\u5b58\u5668\u91cc\u8bbe\u7f6e0\uff08Exclusive Access\uff09\u5e76\u4e14\u5b58\u50a8\u7684\u884c\u4e3a\u4e5f\u662f\u6210\u529f\u7684\u3002\u672c\u4f8b\u4e2d\uff0c\u5982\u679c\u4e24\u4e2a\u5e76\u53d1\u5b9e\u4f53\u540c\u65f6\u8c03\u7528ldrex+strex\uff0c\u5982\u56fe7.6\u6240\u793a\uff0c\u5728T3\u65f6\u95f4\u70b9\u4e0a\uff0cCPU0\u7684strex\u4f1a\u6267\u884c\u5931\u8d25\uff0c\u5728T4\u65f6\u95f4\u70b9\u4e0aCPU1\u7684strex\u4f1a\u6267\u884c\u6210\u529f\u3002\u6240\u4ee5CPU0\u548cCPU1\u4e4b\u95f4\u53ea\u6709CPU1\u6267\u884c\u6210\u529f\u4e86\uff0c\u6267\u884cstrex\u5931\u8d25\u7684CPU0\u7684\u201cteq%1\uff0c#0\u201d\u5224\u65ad\u8bed\u53e5\u4e0d\u4f1a\u6210\u7acb\uff0c\u4e8e\u662f\u5931\u8d25\u7684CPU0\u901a\u8fc7\u201cbne 1b\u201d\u518d\u6b21\u8fdb\u5165ldrex\u3002ldrex\u548cstrex\u7684\u8fd9\u4e00\u8fc7\u7a0b\u4e0d\u4ec5\u9002\u7528\u4e8e\u591a\u6838\u4e4b\u95f4\u7684\u5e76\u53d1\uff0c\u4e5f\u9002\u7528\u4e8e\u540c\u4e00\u4e2a\u6838\u5185\u90e8\u5e76\u53d1\u7684\u60c5\u51b5\u3002\\r\\n\\r\\n![1743076329589](./figure/1743076329589.png)\\r\\n\\r\\n\u56fe7.6\u3000ldrex\u548cstrex\u6307\u4ee4\\r\\n\\r\\n# 7.4.1\u3000\u6574\u578b\u539f\u5b50\u64cd\u4f5c\\r\\n\\r\\n1.\u8bbe\u7f6e\u539f\u5b50\u53d8\u91cf\u7684\u503c\\r\\n\\r\\n```\\r\\nvoid atomic_set(atomic_t *v, int i);    /* \u8bbe\u7f6e\u539f\u5b50\u53d8\u91cf\u7684\u503c\u4e3ai */\\r\\natomic_t v = ATOMIC_INIT(0);            /* \u5b9a\u4e49\u539f\u5b50\u53d8\u91cfv\u5e76\u521d\u59cb\u5316\u4e3a0 */\\r\\n```\\r\\n\\r\\n2.\u83b7\u53d6\u539f\u5b50\u53d8\u91cf\u7684\u503c\\r\\n\\r\\n```\\r\\natomic_read(atomic_t *v);        /* \u8fd4\u56de\u539f\u5b50\u53d8\u91cf\u7684\u503c*/\\r\\n```\\r\\n\\r\\n3.\u539f\u5b50\u53d8\u91cf\u52a0/\u51cf\\r\\n\\r\\n```\\r\\nvoid atomic_add(int i, atomic_t *v);      /* \u539f\u5b50\u53d8\u91cf\u589e\u52a0i */\\r\\nvoid atomic_sub(int i, atomic_t *v);      /* \u539f\u5b50\u53d8\u91cf\u51cf\u5c11i */\\r\\n```\\r\\n\\r\\n4.\u539f\u5b50\u53d8\u91cf\u81ea\u589e/\u81ea\u51cf\\r\\n\\r\\n```\\r\\nvoid atomic_inc(atomic_t *v);     /* \u539f\u5b50\u53d8\u91cf\u589e\u52a01 */\\r\\nvoid atomic_dec(atomic_t *v);     /* \u539f\u5b50\u53d8\u91cf\u51cf\u5c111 */\\r\\n```\\r\\n\\r\\n5.\u64cd\u4f5c\u5e76\u6d4b\u8bd5\\r\\n\\r\\n```\\r\\nint atomic_inc_and_test(atomic_t *v);\\r\\nint atomic_dec_and_test(atomic_t *v);\\r\\nint atomic_sub_and_test(int i, atomic_t *v);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u64cd\u4f5c\u5bf9\u539f\u5b50\u53d8\u91cf\u6267\u884c\u81ea\u589e\u3001\u81ea\u51cf\u548c\u51cf\u64cd\u4f5c\u540e\uff08\u6ce8\u610f\u6ca1\u6709\u52a0\uff09\uff0c\u6d4b\u8bd5\u5176\u662f\u5426\u4e3a0\uff0c\u4e3a0\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002\\r\\n\\r\\n6.\u64cd\u4f5c\u5e76\u8fd4\u56de\\r\\n\\r\\n```\\r\\nint atomic_add_return(int i, atomic_t *v);\\r\\nint atomic_sub_return(int i, atomic_t *v);\\r\\nint atomic_inc_return(atomic_t *v);\\r\\nint atomic_dec_return(atomic_t *v);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u64cd\u4f5c\u5bf9\u539f\u5b50\u53d8\u91cf\u8fdb\u884c\u52a0/\u51cf\u548c\u81ea\u589e/\u81ea\u51cf\u64cd\u4f5c\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u503c\u3002\\r\\n\\r\\n# 7.4.2\u3000\u4f4d\u539f\u5b50\u64cd\u4f5c\\r\\n\\r\\n1.\u8bbe\u7f6e\u4f4d\\r\\n\\r\\n```\\r\\nvoid set_bit(nr, void *addr);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u64cd\u4f5c\u8bbe\u7f6eaddr\u5730\u5740\u7684\u7b2cnr\u4f4d\uff0c\u6240\u8c13\u8bbe\u7f6e\u4f4d\u5373\u662f\u5c06\u4f4d\u5199\u4e3a1\u3002\\r\\n\\r\\n2.\u6e05\u9664\u4f4d\\r\\n\\r\\n```\\r\\nvoid clear_bit(nr, void *addr);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u64cd\u4f5c\u6e05\u9664addr\u5730\u5740\u7684\u7b2cnr\u4f4d\uff0c\u6240\u8c13\u6e05\u9664\u4f4d\u5373\u662f\u5c06\u4f4d\u5199\u4e3a0\u3002\\r\\n\\r\\n3.\u6539\u53d8\u4f4d\\r\\n\\r\\n```\\r\\nvoid change_bit(nr, void *addr);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u64cd\u4f5c\u5bf9addr\u5730\u5740\u7684\u7b2cnr\u4f4d\u8fdb\u884c\u53cd\u7f6e\u3002\\r\\n\\r\\n4.\u6d4b\u8bd5\u4f4d\\r\\n\\r\\n```\\r\\ntest_bit(nr, void *addr);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u64cd\u4f5c\u8fd4\u56deaddr\u5730\u5740\u7684\u7b2cnr\u4f4d\u3002\\r\\n\\r\\n5.\u6d4b\u8bd5\u5e76\u64cd\u4f5c\u4f4d\\r\\n\\r\\n```\\r\\nint test_and_set_bit(nr, void *addr);\\r\\nint test_and_clear_bit(nr, void *addr);\\r\\nint test_and_change_bit(nr, void *addr);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0test_and_xxx_bit\uff08nr\uff0cvoid*addr\uff09\u64cd\u4f5c\u7b49\u540c\u4e8e\u6267\u884ctest_bit\uff08nr\uff0cvoid*addr\uff09\u540e\u518d\u6267\u884cxxx_bit\uff08nr\uff0cvoid*addr\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53557.2\u7ed9\u51fa\u4e86\u539f\u5b50\u53d8\u91cf\u7684\u4f7f\u7528\u4f8b\u5b50\uff0c\u5b83\u4f7f\u5f97\u8bbe\u5907\u6700\u591a\u53ea\u80fd\u88ab\u4e00\u4e2a\u8fdb\u7a0b\u6253\u5f00\u3002\\r\\n\\r\\n```\\r\\n 1static atomic_t xxx_available = ATOMIC_INIT(1); /* \u5b9a\u4e49\u539f\u5b50\u53d8\u91cf*/\\r\\n 2\\r\\n 3static int xxx_open(struct inode *inode, struct file *filp)\\r\\n 4{\\r\\n 5  ...\\r\\n 6  if (!atomic_dec_and_test(&xxx_available))  {\\r\\n 7      atomic_inc(&xxx_available);\\r\\n 8      return  - EBUSY;                /* \u5df2\u7ecf\u6253\u5f00*/\\r\\n 9  }\\r\\n10  ...\\r\\n11  return 0;                           /* \u6210\u529f */\\r\\n12}\\r\\n13\\r\\n14static int xxx_release(struct inode *inode, struct file *filp)\\r\\n15{\\r\\n16  atomic_inc(&xxx_available);         /* \u91ca\u653e\u8bbe\u5907*/\\r\\n17  return 0;\\r\\n18}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8","description":"\u5728Linux\u5185\u6838\u4e2d\uff0c\u5404\u4e2a\u8bbe\u5907\u9a71\u52a8\u53ef\u4ee5\u7b80\u5355\u5730\u8c03\u7528requestirq\uff08\uff09\u3001enableirq\uff08\uff09\u3001disableirq\uff08\uff09\u3001localirqdisable\uff08\uff09\u3001localirq_enable\uff08\uff09\u7b49\u901a\u7528API\u6765\u5b8c\u6210\u4e2d\u65ad\u7533\u8bf7\u3001\u4f7f\u80fd\u3001\u7981\u6b62\u7b49\u529f\u80fd\u3002\u5728\u5c06Linux\u79fb\u690d\u5230\u65b0\u7684SoC\u65f6\uff0c\u82af\u7247\u4f9b\u5e94\u5546\u9700\u8981\u63d0\u4f9b\u8be5\u90e8\u5206API\u7684\u5e95\u5c42\u652f\u6301\u3002","date":"2025-09-15T14:44:14.305Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":13.615,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.4\u3000\u539f\u5b50\u64cd\u4f5c"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf"}},"content":"\u5728Linux\u5185\u6838\u4e2d\uff0c\u5404\u4e2a\u8bbe\u5907\u9a71\u52a8\u53ef\u4ee5\u7b80\u5355\u5730\u8c03\u7528request_irq\uff08\uff09\u3001enable_irq\uff08\uff09\u3001disable_irq\uff08\uff09\u3001local_irq_disable\uff08\uff09\u3001local_irq_enable\uff08\uff09\u7b49\u901a\u7528API\u6765\u5b8c\u6210\u4e2d\u65ad\u7533\u8bf7\u3001\u4f7f\u80fd\u3001\u7981\u6b62\u7b49\u529f\u80fd\u3002\u5728\u5c06Linux\u79fb\u690d\u5230\u65b0\u7684SoC\u65f6\uff0c\u82af\u7247\u4f9b\u5e94\u5546\u9700\u8981\u63d0\u4f9b\u8be5\u90e8\u5206API\u7684\u5e95\u5c42\u652f\u6301\u3002\\r\\n\\r\\nlocal_irq_disable\uff08\uff09\u3001local_irq_enable\uff08\uff09\u7684\u5b9e\u73b0\u4e0e\u5177\u4f53\u4e2d\u65ad\u63a7\u5236\u5668\u65e0\u5173\uff0c\u5bf9\u4e8eARM v6\u4ee5\u4e0a\u7684\u4f53\u7cfb\u7ed3\u6784\u800c\u8a00\uff0c\u662f\u76f4\u63a5\u8c03\u7528CPSID/CPSIE\u6307\u4ee4\u8fdb\u884c\uff0c\u800c\u5bf9\u4e8eARM v6\u4ee5\u524d\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u5219\u662f\u901a\u8fc7MRS\u3001MSR\u6307\u4ee4\u6765\u8bfb\u53d6\u548c\u8bbe\u7f6eARM\u7684CPSR\u5bc4\u5b58\u5668\u3002\u7531\u6b64\u53ef\u89c1\uff0clocal_irq_disable\uff08\uff09\u3001local_irq_enable\uff08\uff09\u9488\u5bf9\u7684\u5e76\u4e0d\u662f\u5916\u90e8\u7684\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u800c\u662f\u76f4\u63a5\u8ba9CPU\u672c\u8eab\u4e0d\u54cd\u5e94\u4e2d\u65ad\u8bf7\u6c42\u3002\u76f8\u5173\u7684\u5b9e\u73b0\u4f4d\u4e8earch/arm/include/asm/irqflags.h\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535520.3\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.3\u3000ARM Linux local_irq_disable\uff08\uff09/enable\uff08\uff09\u5e95\u5c42\u5b9e\u73b0\\r\\n\\r\\n```\\r\\n 1#if __LINUX_ARM_ARCH__ >= 6\\r\\n 2\\r\\n 3static inline unsigned long arch_local_irq_save(void)\\r\\n 4{\\r\\n 5        unsigned long flags;\\r\\n 6\\r\\n 7        asm volatile(\\r\\n 8                \\"       mrs     %0, cpsr        @ arch_local_irq_save\\\\n\\"\\r\\n 9                \\"       cpsid   i\\"\\r\\n10                : \\"=r\\" (flags) : : \\"memory\\", \\"cc\\");\\r\\n11        return flags;\\r\\n12}\\r\\n13\\r\\n14static inline void arch_local_irq_enable(void)\\r\\n15{\\r\\n16        asm volatile(\\r\\n17                \\"       cpsie i                 @ arch_local_irq_enable\\"\\r\\n18                :\\r\\n19                :\\r\\n20                : \\"memory\\", \\"cc\\");\\r\\n21}\\r\\n22\\r\\n23static inline void arch_local_irq_disable(void)\\r\\n24{\\r\\n25        asm volatile(\\r\\n26                \\"       cpsid i                 @ arch_local_irq_disable\\"\\r\\n27                :\\r\\n28                :\\r\\n29                : \\"memory\\", \\"cc\\");\\r\\n30}\\r\\n31#else\\r\\n32\\r\\n33/*\\r\\n34 * Save the current interrupt enable state & disable IRQs\\r\\n35 */\\r\\n36static inline unsigned long arch_local_irq_save(void)\\r\\n37{\\r\\n38        unsigned long flags, temp;\\r\\n39\\r\\n40        asm volatile(\\r\\n41                \\"       mrs     %0, cpsr        @ arch_local_irq_save\\\\n\\"\\r\\n42                \\"       orr     %1, %0, #128\\\\n\\"\\r\\n43                \\"       msr     cpsr_c, %1\\"\\r\\n44                : \\"=r\\" (flags), \\"=r\\" (temp)\\r\\n45                :\\r\\n46                : \\"memory\\", \\"cc\\");\\r\\n47        return flags;\\r\\n48}\\r\\n49\\r\\n50/*\\r\\n51 * Enable IRQs\\r\\n52 */\\r\\n53static inline void arch_local_irq_enable(void)\\r\\n54{\\r\\n55        unsigned long temp;\\r\\n56        asm volatile(\\r\\n57                \\"       mrs     %0, cpsr        @ arch_local_irq_enable\\\\n\\"\\r\\n58                \\"       bic     %0, %0, #128\\\\n\\"\\r\\n59                \\"       msr     cpsr_c, %0\\"\\r\\n60                : \\"=r\\" (temp)\\r\\n61                :\\r\\n62                : \\"memory\\", \\"cc\\");\\r\\n63}\\r\\n64\\r\\n65/*\\r\\n66 * Disable IRQs\\r\\n67 */\\r\\n68static inline void arch_local_irq_disable(void)\\r\\n69{\\r\\n70        unsigned long temp;\\r\\n71        asm volatile(\\r\\n72                \\"       mrs     %0, cpsr        @ arch_local_irq_disable\\\\n\\"\\r\\n73                \\"       orr     %0, %0, #128\\\\n\\"\\r\\n74                \\"       msr     cpsr_c, %0\\"\\r\\n75                : \\"=r\\" (temp)\\r\\n76                :\\r\\n77                : \\"memory\\", \\"cc\\");\\r\\n78}\\r\\n79 #endif\\r\\n```\\r\\n\\r\\n\u4e0elocal_irq_disable\uff08\uff09\u548clocal_irq_enable\uff08\uff09\u4e0d\u540c\uff0cdisable_irq\uff08\uff09\u3001enable_irq\uff08\uff09\u9488\u5bf9\u7684\u5219\u662f\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u56e0\u6b64\u5b83\u4eec\u9002\u7528\u7684\u5bf9\u8c61\u662f\u67d0\u4e2a\u4e2d\u65ad\u3002disable_irq\uff08\uff09\u7684\u5b57\u9762\u610f\u601d\u662f\u6682\u65f6\u5c4f\u853d\u6389\u67d0\u4e2d\u65ad\uff08\u5176\u5b9e\u5728\u5185\u6838\u7684\u5b9e\u73b0\u5c42\u9762\u4e0a\u505a\u4e86\u5ef6\u540e\u5c4f\u853d\uff09\uff0c\u76f4\u5230enable_irq\uff08\uff09\u540e\u518d\u6267\u884cISR\u3002\u5b9e\u9645\u4e0a\uff0c\u5c4f\u853d\u4e2d\u65ad\u53ef\u4ee5\u53d1\u751f\u5728\u5916\u8bbe\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u3001CPU\u4e09\u4e2a\u4f4d\u7f6e\uff0c\u5982\u56fe20.3\u6240\u793a\u3002\u5bf9\u4e8e\u5916\u8bbe\u7aef\uff0c\u662f\u4ece\u6e90\u5934\u4e0a\u5c31\u4e0d\u4ea7\u751f\u4e2d\u65ad\u4fe1\u53f7\u7ed9\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u7531\u4e8e\u5b83\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u5916\u8bbe\u4e8e\u672c\u8eab\uff0c\u6240\u4ee5Linux\u4e0d\u63d0\u4f9b\u6807\u51c6\u7684API\u800c\u662f\u7531\u5916\u8bbe\u7684\u9a71\u52a8\u76f4\u63a5\u8bfb\u5199\u81ea\u8eab\u7684\u5bc4\u5b58\u5668\u3002\\r\\n\\r\\n![1747233426546](./figure/1747233426546.png)\\r\\n\\r\\n\u56fe20.3\u3000\u5c4f\u853d\u4e2d\u65ad\u76843\u4e2a\u4e0d\u540c\u4f4d\u7f6e\\r\\n\\r\\n\u5728\u5185\u6838\u4e2d\uff0c\u901a\u8fc7irq_chip\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u4e2d\u65ad\u63a7\u5236\u5668\u3002\u8be5\u7ed3\u6784\u4f53\u5185\u90e8\u5c01\u88c5\u4e86\u4e2d\u65admask\u3001unmask\u3001ack\u7b49\u6210\u5458\u51fd\u6570\uff0c\u5176\u5b9a\u4e49\u4e8einclude/linux/irq.h\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535520.4\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.4\u3000irq_chip\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct irq_chip {\\r\\n 2        const char      *name;\\r\\n 3        unsigned int    (*irq_startup)(struct irq_data *data);\\r\\n 4        void            (*irq_shutdown)(struct irq_data *data);\\r\\n 5        void            (*irq_enable)(struct irq_data *data);\\r\\n 6        void            (*irq_disable)(struct irq_data *data);\\r\\n 7\\r\\n 8        void            (*irq_ack)(struct irq_data *data);\\r\\n 9        void            (*irq_mask)(struct irq_data *data);\\r\\n10        void            (*irq_mask_ack)(struct irq_data *data);\\r\\n11        void            (*irq_unmask)(struct irq_data *data);\\r\\n12        void            (*irq_eoi)(struct irq_data *data);\\r\\n13\\r\\n14        int             (*irq_set_affinity)(struct irq_data *data, const struct\\r\\n                                       cpumask *dest, bool force);\\r\\n15        int             (*irq_retrigger)(struct irq_data *data);\\r\\n16        int             (*irq_set_type)(struct irq_data *data, unsigned int\\r\\n                                     flow_type);\\r\\n17        int             (*irq_set_wake)(struct irq_data *data, unsigned int on);\\r\\n18};\\r\\n```\\r\\n\\r\\n\u5404\u4e2a\u82af\u7247\u516c\u53f8\u4f1a\u5c06\u82af\u7247\u5185\u90e8\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u5b9e\u73b0\u4e3airq_chip\u9a71\u52a8\u7684\u5f62\u5f0f\u3002\u53d7\u9650\u4e8e\u4e2d\u65ad\u63a7\u5236\u5668\u786c\u4ef6\u7684\u80fd\u529b\uff0c\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\u5e76\u4e0d\u4e00\u5b9a\u9700\u8981\u5168\u90e8\u5b9e\u73b0\uff0c\u6709\u65f6\u5019\u53ea\u9700\u8981\u5b9e\u73b0\u5176\u4e2d\u7684\u90e8\u5206\u51fd\u6570\u5373\u53ef\u3002\u8b6c\u5982drivers/pinctrl/sirf/pinctrl-sirf.c\u9a71\u52a8\u4e2d\u7684\u4e0b\u9762\u4ee3\u7801\u90e8\u5206\uff1a\\r\\n\\r\\n```\\r\\nstatic struct irq_chip sirfsoc_irq_chip = {\\r\\n        .name = \\"sirf-gpio-irq\\",\\r\\n        .irq_ack = sirfsoc_gpio_irq_ack,\\r\\n        .irq_mask = sirfsoc_gpio_irq_mask,\\r\\n        .irq_unmask = sirfsoc_gpio_irq_unmask,\\r\\n        .irq_set_type = sirfsoc_gpio_irq_type,\\r\\n};\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u53ea\u5b9e\u73b0\u4e86\u5176\u4e2d\u7684ack\u3001mask\u3001unmask\u548cset_type\u6210\u5458\u51fd\u6570\uff0cack\u51fd\u6570\u7528\u4e8e\u6e05\u4e2d\u65ad\uff0cmask\u3001unmask\u7528\u4e8e\u4e2d\u65ad\u5c4f\u853d\u548c\u53d6\u6d88\u4e2d\u65ad\u5c4f\u853d\u3001set_type\u5219\u7528\u4e8e\u914d\u7f6e\u4e2d\u65ad\u7684\u89e6\u53d1\u65b9\u5f0f\uff0c\u5982\u9ad8\u7535\u5e73\u3001\u4f4e\u7535\u5e73\u3001\u4e0a\u5347\u6cbf\u3001\u4e0b\u964d\u6cbf\u7b49\u3002\u81f3\u4e8e\u5230enable_irq\uff08\uff09\u7684\u65f6\u5019\uff0c\u867d\u7136\u6ca1\u6709\u5b9e\u73b0irq_enable\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u5185\u6838\u4f1a\u95f4\u63a5\u8c03\u7528irq_unmask\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u8fd9\u70b9\u4ecekernel/irq/chip.c\u4e2d\u53ef\u4ee5\u770b\u51fa\uff1a\\r\\n\\r\\n```\\r\\nvoid irq_enable(struct irq_desc *desc)\\r\\n{\\r\\n        irq_state_clr_disabled(desc);\\r\\n        if (desc->irq_data.chip->irq_enable)\\r\\n                desc->irq_data.chip->irq_enable(&desc->irq_data);\\r\\n        else\\r\\n                desc->irq_data.chip->irq_unmask(&desc->irq_data);\\r\\n        irq_state_clr_masked(desc);\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u82af\u7247\u5185\u90e8\uff0c\u4e2d\u65ad\u63a7\u5236\u5668\u53ef\u80fd\u4e0d\u6b621\u4e2a\uff0c\u591a\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u4e4b\u95f4\u8fd8\u5f88\u53ef\u80fd\u662f\u7ea7\u8054\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u82af\u7247\u5185\u90e8\u6709\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u652f\u630132\u4e2a\u4e2d\u65ad\u6e90\uff0c\u5176\u4e2d\u67094\u4e2a\u6765\u6e90\u4e8eGPIO\u63a7\u5236\u5668\u5916\u56f4\u76844\u7ec4GPIO\uff0c\u6bcf\u7ec4GPIO\u4e0a\u53c8\u670932\u4e2a\u4e2d\u65ad\uff08\u8bb8\u591a\u82af\u7247\u7684GPIO\u63a7\u5236\u5668\u4e5f\u540c\u65f6\u662f\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\uff09\uff0c\u5176\u5173\u7cfb\u5982\u56fe20.4\u6240\u793a\u3002\\r\\n\\r\\n![1747233562390](./figure/1747233562390.png)\\r\\n\\r\\n\u56fe20.4\u3000SoC\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u5178\u578b\u5206\u5e03\\r\\n\\r\\n\u90a3\u4e48\uff0c\u4e00\u822c\u6765\u8bb2\uff0c\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0cgpio0_0~gpio0_31\u8fd9\u4e9b\u5f15\u811a\u672c\u8eab\u5728\u7b2c1\u7ea7\u4f1a\u4f7f\u7528\u4e2d\u65ad\u53f728\uff0c\u800c\u8fd9\u4e9b\u5f15\u811a\u672c\u8eab\u7684\u4e2d\u65ad\u53f7\u5728\u5b9e\u73b0\u4e0eGPIO\u63a7\u5236\u5668\u5bf9\u5e94\u7684irq_chip\u9a71\u52a8\u65f6\uff0c\u6211\u4eec\u53c8\u4f1a\u628a\u5b83\u6620\u5c04\u5230Linux\u7cfb\u7edf\u768432~63\u53f7\u4e2d\u65ad\u3002\u540c\u7406\uff0cgpio1_0~gpio1_31\u8fd9\u4e9b\u5f15\u811a\u672c\u8eab\u5728\u7b2c1\u7ea7\u4f1a\u4f7f\u7528\u4e2d\u65ad\u53f729\uff0c\u800c\u8fd9\u4e9b\u5f15\u811a\u672c\u8eab\u7684\u4e2d\u65ad\u53f7\u5728\u5b9e\u73b0\u4e0eGPIO\u63a7\u5236\u5668\u5bf9\u5e94\u7684irq_chip\u9a71\u52a8\u65f6\uff0c\u6211\u4eec\u53c8\u4f1a\u628a\u5b83\u6620\u5c04\u5230Linux\u7cfb\u7edf\u768464~95\u53f7\u4e2d\u65ad\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5bf9\u4e8e\u4e2d\u65ad\u53f7\u7684\u4f7f\u7528\u8005\u800c\u8a00\uff0c\u65e0\u987b\u770b\u5230\u8fd9\u79cd2\u7ea7\u6620\u5c04\u5173\u7cfb\u3002\u5982\u679c\u67d0\u8bbe\u5907\u60f3\u7533\u8bf7\u4e0egpio1_0\u8fd9\u4e2a\u5f15\u811a\u5bf9\u5e94\u7684\u4e2d\u65ad\uff0c\u5b83\u53ea\u9700\u8981\u7533\u8bf764\u53f7\u4e2d\u65ad\u5373\u53ef\u3002\u8fd9\u4e2a\u5173\u7cfb\u56fe\u770b\u8d77\u6765\u5982\u56fe20.5\u6240\u793a\u3002\\r\\n\\r\\n\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u4e0a\u8ff0\u56fe20.4\u548c20.5\u4e2d\u6240\u6d89\u53ca\u7684\u4e2d\u65ad\u53f7\u7684\u6570\u503c\uff0c\u65e0\u8bba\u662fbase\u8fd8\u662f\u5177\u4f53\u67d0\u4e2aGPIO\u5bf9\u5e94\u7684\u4e2d\u65ad\u53f7\u662f\u591a\u5c11\uff0c\u90fd\u4e0d\u4e00\u5b9a\u662f\u5982\u56fe20.4\u548c\u56fe20.5\u6240\u63cf\u8ff0\u7684\u7b80\u5355\u7ebf\u6027\u6620\u5c04\u3002Linux\u4f7f\u7528IRQ Domain\u6765\u63cf\u8ff0\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u6240\u7ba1\u7406\u7684\u4e2d\u65ad\u6e90\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u90fd\u6709\u81ea\u5df1\u7684Domain\u3002\u6211\u4eec\u53ef\u4ee5\u5c06IRQ Domain\u770b\u4f5c\u662fIRQ\u63a7\u5236\u5668\u7684\u8f6f\u4ef6\u62bd\u8c61\u3002\u5728\u6dfb\u52a0IRQ Domain\u7684\u65f6\u5019\uff0c\u5185\u6838\u4e2d\u5b58\u5728\u7684\u6620\u5c04\u65b9\u6cd5\u6709\uff1airq_domain_add_legacy\uff08\uff09\u3001irq_domain_add_linear\uff08\uff09\u3001irq_domain_add_tree\uff08\uff09\u7b49\u3002\\r\\n\\r\\n![1747233631119](./figure/1747233631119.png)\\r\\n\\r\\n\u56fe20.5\u3000\u4e2d\u65ad\u7ea7\u8054\u4e0e\u6620\u5c04\\r\\n\\r\\nirq_domain_add_legacy\uff08\uff09\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u8fc7\u65f6\u7684\u65b9\u6cd5\uff0c\u5b83\u4e00\u822c\u662f\u7531IRQ\u63a7\u5236\u5668\u9a71\u52a8\u76f4\u63a5\u6307\u5b9a\u4e2d\u65ad\u6e90\u786c\u4ef6\u610f\u4e49\u4e0a\u7684\u504f\u79fb\uff08\u4e00\u822c\u79f0\u4e3ahwirq\uff09\u548cLinux\u903b\u8f91\u4e0a\u7684\u4e2d\u65ad\u53f7\u7684\u6620\u5c04\u5173\u7cfb\u3002\u7c7b\u4f3c\u56fe20.5\u7684\u6307\u5b9a\u6620\u5c04\u53ef\u4ee5\u88ab\u8fd9\u79cd\u65b9\u6cd5\u5f04\u51fa\u6765\u3002irq_domain_add_linear\uff08\uff09\u5219\u5728\u4e2d\u65ad\u6e90\u548cirq_desc\u4e4b\u95f4\u5efa\u7acb\u7ebf\u6027\u6620\u5c04\uff0c\u5185\u6838\u9488\u5bf9\u8fd9\u4e2aIRQ Domain\u7ef4\u62a4\u4e86\u4e00\u4e2ahwirq\u548cLinux\u903b\u8f91IRQ\u4e4b\u95f4\u5173\u7cfb\u7684\u4e00\u4e2a\u8868\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5176\u5b9e\u4e5f\u5b8c\u5168\u4e0d\u5173\u5fc3\u903b\u8f91\u4e2d\u65ad\u53f7\u4e86\uff1birq_domain_add_tree\uff08\uff09\u5219\u66f4\u52a0\u7075\u6d3b\uff0c\u903b\u8f91\u4e2d\u65ad\u53f7\u548chwirq\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u662f\u7528\u4e00\u68f5radix\u6811\u6765\u63cf\u8ff0\u7684\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u67e5\u627e\u7684\u65b9\u6cd5\u6765\u5bfb\u627ehwirq\u548cLinux\u903b\u8f91IRQ\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e00\u822c\u9002\u5408\u67d0\u4e2d\u65ad\u63a7\u5236\u5668\u652f\u6301\u975e\u5e38\u591a\u4e2d\u65ad\u6e90\u7684\u60c5\u51b5\u3002\\r\\n\\r\\n\u5b9e\u9645\u4e0a\uff0c\u5728\u5f53\u524d\u7684\u5185\u6838\u4e2d\uff0c\u4e2d\u65ad\u53f7\u66f4\u591a\u7684\u662f\u4e00\u4e2a\u903b\u8f91\u6982\u5ff5\uff0c\u5177\u4f53\u6570\u503c\u662f\u591a\u5c11\u4e0d\u662f\u5f88\u5173\u952e\u3002\u4eba\u4eec\u66f4\u591a\u7684\u662f\u5173\u5fc3\u5728\u8bbe\u5907\u6811\u4e2d\u8bbe\u7f6e\u6b63\u786e\u7684interrupt_parrent\u548c\u76f8\u5bf9\u8be5interrupt_parent\u7684\u504f\u79fb\u3002\\r\\n\\r\\n\u4ee5drivers/pinctrl/sirf/pinctrl-sirf.c\u7684irq_chip\u90e8\u5206\u4e3a\u4f8b\uff0c\u5728sirfsoc_gpio_probe\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u6bcf\u7ec4GPIO\u7684\u4e2d\u65ad\u90fd\u901a\u8fc7gpiochip_set_chained_irqchip\uff08\uff09\u7ea7\u8054\u5230\u4e0a\u4e00\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u4e2d\u65ad\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.5\u3000\u4e8c\u7ea7GPIO\u4e2d\u65ad\u7ea7\u8054\u5230\u4e00\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\\r\\n\\r\\n```\\r\\n 1static int sirfsoc_gpio_probe(struct device_node *np)\\r\\n 2{\\r\\n 3...\\r\\n 4for (i = 0; i < SIRFSOC_GPIO_NO_OF_BANKS; i++) {\\r\\n 5       bank = &sgpio->sgpio_bank[i];\\r\\n 6       spin_lock_init(&bank->lock);\\r\\n 7       bank->parent_irq = platform_get_irq(pdev, i);\\r\\n 8       if (bank->parent_irq < 0) {\\r\\n 9               err = bank->parent_irq;\\r\\n10               goto out_banks;\\r\\n11       }\\r\\n12\\r\\n13       gpiochip_set_chained_irqchip(&sgpio->chip.gc,\\r\\n14               &sirfsoc_irq_chip,\\r\\n15               bank->parent_irq,\\r\\n16               sirfsoc_gpio_handle_irq);\\r\\n17}\\r\\n18\\r\\n19...\\r\\n20}\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8eSIRFSOC_GPIO_NO_OF_BANKS\u8fd9\u4e48\u591a\u7ec4GPIO\u8fdb\u884c\u5faa\u73af\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7b2c15\u884c\u7684bank->parent_irq\u662f\u4e0e\u8fd9\u4e00\u7ec4GPIO\u5bf9\u5e94\u7684\u201c\u4e0a\u7ea7\u201d\u4e2d\u65ad\u53f7\uff0csirfsoc_gpio_handle_irq\uff08\uff09\u5219\u662f\u4e0ebank->parent_irq\u5bf9\u5e94\u7684\u201c\u4e0a\u7ea7\u201d\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002\u800csirfsoc_gpio_handle_irq\uff08\uff09\u8fd9\u4e2a\u201c\u4e0a\u7ea7\u201d\u51fd\u6570\u6700\u7ec8\u8fd8\u662f\u8981\u8c03\u7528GPIO\u8fd9\u4e00\u7ea7\u522b\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002\\r\\n\\r\\n\u5728sirfsoc_gpio_handle_irq\uff08\uff09\u51fd\u6570\u7684\u5165\u53e3\u5904\u8c03\u7528chained_irq_enter\uff08\uff09\u6697\u793a\u81ea\u8eab\u8fdb\u5165\u94fe\u5f0fIRQ\u5904\u7406\uff0c\u5728\u51fd\u6570\u4f53\u5185\u5224\u51b3\u5177\u4f53\u7684GPIO\u4e2d\u65ad\uff0c\u5e76\u901a\u8fc7generic_handle_irq\uff08\uff09\u8c03\u7528\u6700\u7ec8\u7684\u5916\u8bbe\u9a71\u52a8\u4e2d\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\uff0c\u6700\u540e\u8c03\u7528chained_irq_exit\uff08\uff09\u6697\u793a\u81ea\u8eab\u9000\u51fa\u94fe\u5f0fIRQ\u5904\u7406\uff0c\u5982\u4ee3\u7801\u6e05\u535520.6\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.6\u3000\u201c\u4e0a\u7ea7\u201d\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u6d3e\u751f\u5230\u4e0b\u7ea7\\r\\n\\r\\n```\\r\\n 1static void sirfsoc_gpio_handle_irq(unsigned int irq, struct irq_desc *desc)\\r\\n 2{\\r\\n 3...\\r\\n 4chained_irq_enter(chip, desc);\\r\\n 5\\r\\n 6while (status) {\\r\\n 7       ctrl = readl(sgpio->chip.regs + SIRFSOC_GPIO_CTRL(bank->id, idx));\\r\\n 8\\r\\n 9       /*\\r\\n10        * Here we must check whether the corresponding GPIO\u2019s interrupt\\r\\n11        * has been enabled, otherwise just skip it\\r\\n12        */\\r\\n13       if ((status & 0x1) && (ctrl & SIRFSOC_GPIO_CTL_INTR_EN_MASK)) {\\r\\n14              generic_handle_irq(irq_find_mapping(gc->irqdomain, idx +\\r\\n15                             bank->id * SIRFSOC_GPIO_BANK_SIZE));\\r\\n16       }\\r\\n17\\r\\n18       idx++;\\r\\n19       status = status >> 1;\\r\\n20}\\r\\n21\\r\\n22chained_irq_exit(chip, desc);\\r\\n23}\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u7528\u4e00\u4e2a\u5b9e\u4f8b\u6765\u5448\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5047\u8bbeGPIO0_0~31\u5bf9\u5e94\u4e0a\u7ea7\u4e2d\u65ad\u53f728\uff0c\u800c\u5916\u8bbeA\u4f7f\u7528\u4e86GPIO0_5\uff08\u5373\u7b2c0\u7ec4GPIO\u7684\u7b2c5\u4e2a\uff09\uff0c\u5e76\u5047\u5b9a\u5916\u8bbeA\u7684\u4e2d\u65ad\u53f7\u4e3a37\uff0c\u537332+5\uff0c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u4e3adeva_isr\uff08\uff09\u3002\u90a3\u4e48\uff0c\u5f53GPIO0_5\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u5019\uff0c\u5185\u6838\u7684\u8c03\u7528\u987a\u5e8f\u662f\uff1asirfsoc_gpio_handle_irq\uff08\uff09->generic_handle_irq\uff08\uff09->deva_isr\uff08\uff09\u3002\u5982\u679c\u786c\u4ef6\u7684\u4e2d\u65ad\u7cfb\u7edf\u6709\u66f4\u6df1\u7684\u5c42\u6b21\uff0c\u8fd9\u79cd\u8f6f\u4ef6\u4e0a\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u7ea7\u8054\u5b9e\u9645\u4e0a\u53ef\u4ee5\u6709\u66f4\u6df1\u7684\u7ea7\u522b\u3002\\r\\n\\r\\n\u5728\u4e0a\u8ff0\u5b9e\u4f8b\u4e2d\uff0cGPIO0_0~31\u7684interrupt_parrent\u5b9e\u9645\u662f\u4e0a\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u800c\u5916\u8bbeA\u7684interrupt_parrent\u5c31\u662fGPIO0\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u5728\u8bbe\u5907\u6811\u4e2d\u8fdb\u884c\u5448\u73b0\u3002\\r\\n\\r\\n\u5f88\u591a\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\u5b9a\u4e49\u5448\u73b0\u51fa\u7b80\u5355\u7684\u89c4\u5f8b\uff0c\u5982\u6709\u4e00\u4e2amask\u5bc4\u5b58\u5668\uff0c\u5176\u4e2d\u6bcf1\u4f4d\u53ef\u5c4f\u853d1\u4e2a\u4e2d\u65ad\u7b49\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u65e0\u987b\u5b9e\u73b01\u4e2a\u5b8c\u6574\u7684irq_chip\u9a71\u52a8\uff0c\u800c\u53ef\u4ee5\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684\u901a\u7528irq_chip\u9a71\u52a8\u67b6\u6784irq_chip_generic\uff0c\u8fd9\u6837\u53ea\u9700\u8981\u5b9e\u73b0\u6781\u5c11\u91cf\u7684\u4ee3\u7801\uff0c\u5982drivers/irqchip/irq-sirfsoc.c\u4e2d\uff0c\u7528\u4e8e\u6ce8\u518cCSR SiRFprimaII\u5185\u90e8\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u4ee3\u7801\uff08\u89c1\u4ee3\u7801\u6e05\u535520.7\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.7\u3000\u4f7f\u7528generic\u7684irq_chip\u6846\u67b6\\r\\n\\r\\n```\\r\\n 1static __init void\\r\\n 2sirfsoc_alloc_gc(void __iomem *base, unsigned int irq_start, unsigned int num)\\r\\n 3{\\r\\n 4        struct irq_chip_generic *gc;\\r\\n 5        struct irq_chip_type *ct;\\r\\n 6        int ret;\\r\\n 7        unsigned int clr = IRQ_NOREQUEST | IRQ_NOPROBE | IRQ_NOAUTOEN;\\r\\n 8        unsigned int set = IRQ_LEVEL;\\r\\n 9\\r\\n10        ret = irq_alloc_domain_generic_chips(sirfsoc_irqdomain,num, 1, \\"irq_sirfsoc\\",\\r\\n11               handle_level_irq, clr, set, IRQ_GC_INIT_MASK_CACHE);\\r\\n12\\r\\n13        gc = irq_get_domain_generic_chip(sirfsoc_irqdomain, irq_start);\\r\\n14        gc->reg_base = base;\\r\\n15        ct = gc->chip_types;\\r\\n16        ct->chip.irq_mask = irq_gc_mask_clr_bit;\\r\\n17        ct->chip.irq_unmask = irq_gc_mask_set_bit;\\r\\n18        ct->regs.mask = SIRFSOC_INT_RISC_MASK0;\\r\\n19}\\r\\n```\\r\\n\\r\\nirq_chip\u9a71\u52a8\u7684\u5165\u53e3\u58f0\u660e\u65b9\u6cd5\u5f62\u5982\uff1a\\r\\n\\r\\n```\\r\\nIRQCHIP_DECLARE(sirfsoc_intc, \\"sirf,prima2-intc\\", sirfsoc_irq_init);\\r\\n```\\r\\n\\r\\nsirf\uff0cprima2-intc\u662f\u8bbe\u5907\u6811\u4e2d\u4e2d\u65ad\u63a7\u5236\u5668\u7684compatible\u5b57\u6bb5\uff0csirfsoc_irq_init\u662f\u5339\u914d\u8fd9\u4e2acompatible\u5b57\u6bb5\u540e\u8fd0\u884c\u7684\u521d\u59cb\u5316\u51fd\u6570\u3002\\r\\n\\r\\n\u7279\u522b\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u76ee\u524d\u591a\u6570\u4e3b\u6d41ARM\u82af\u7247\u5185\u90e8\u7684\u4e00\u7ea7\u4e2d\u65ad\u63a7\u5236\u5668\u90fd\u4f7f\u7528\u4e86ARM\u516c\u53f8\u7684GIC\uff0c\u6211\u4eec\u51e0\u4e4e\u4e0d\u9700\u8981\u5b9e\u73b0\u4efb\u4f55\u4ee3\u7801\uff0c\u53ea\u9700\u8981\u5728\u8bbe\u5907\u6811\u4e2d\u6dfb\u52a0\u76f8\u5173\u7684\u8282\u70b9\u3002\\r\\n\\r\\n\u5982\u5728arch/arm/boot/dts/exynos5250.dtsi\u4e2d\u5373\u542b\u6709\uff1a\\r\\n\\r\\n```\\r\\ngic:interrupt-controller@10481000 {\\r\\n        compatible = \\"arm,cortex-a9-gic\\";\\r\\n        #interrupt-cells = <3>;\\r\\n        interrupt-controller;\\r\\n        reg = <0x10481000 0x1000>, <0x10482000 0x2000>;\\r\\n};\\r\\n```\\r\\n\\r\\n\u6253\u5f00drivers/irqchip/irq-gic.c\uff0c\u53d1\u73b0GIC\u9a71\u52a8\u7684\u5165\u53e3\u58f0\u660e\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nIRQCHIP_DECLARE(gic_400, \\"arm,gic-400\\", gic_of_init);\\r\\nIRQCHIP_DECLARE(cortex_a15_gic, \\"arm,cortex-a15-gic\\", gic_of_init);\\r\\nIRQCHIP_DECLARE(cortex_a9_gic, \\"arm,cortex-a9-gic\\", gic_of_init);\\r\\nIRQCHIP_DECLARE(cortex_a7_gic, \\"arm,cortex-a7-gic\\", gic_of_init);\\r\\nIRQCHIP_DECLARE(msm_8660_qgic, \\"qcom,msm-8660-qgic\\", gic_of_init);\\r\\nIRQCHIP_DECLARE(msm_qgic2, \\"qcom,msm-qgic2\\", gic_of_init);\\r\\n```\\r\\n\\r\\n\u8fd9\u8bf4\u660edrivers/irqchip/irq-gic.c\u8fd9\u4e2a\u9a71\u52a8\u53ef\u4ee5\u517c\u5bb9arm\uff0cgic-400\u3001arm\uff0ccortex-a15-gic\u3001arm\uff0ccortex-a7-gic\u7b49\uff0c\u4f46\u662f\u521d\u59cb\u5316\u51fd\u6570\u90fd\u662f\u7edf\u4e00\u7684gic_of_init\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf","description":"Linux\u63d0\u4f9b\u4e86\u5b8c\u6210\u91cf\uff08Completion\uff0c\u5173\u4e8e\u8fd9\u4e2a\u540d\u8bcd\uff0c\u81f3\u4eca\u6ca1\u6709\u597d\u7684\u7ffb\u8bd1\uff0c\u7b14\u8005\u5c06\u5176\u8bd1\u4e3a\u201c\u5b8c\u6210\u91cf\u201d\uff09\uff0c\u5b83\u7528\u4e8e\u4e00\u4e2a\u6267\u884c\u5355\u5143\u7b49\u5f85\u53e6\u4e00\u4e2a\u6267\u884c\u5355\u5143\u6267\u884c\u5b8c\u67d0\u4e8b\u3002","date":"2025-09-15T14:44:14.297Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.205,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.3\u3000\u4e2d\u65ad\u63a7\u5236\u5668\u9a71\u52a8"},"nextItem":{"title":"6.3.1\u3000\u5934\u6587\u4ef6\u3001\u5b8f\u53ca\u8bbe\u5907\u7ed3\u6784\u4f53","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.3\u3000globalmem\u8bbe\u5907\u9a71\u52a8"}},"content":"Linux\u63d0\u4f9b\u4e86\u5b8c\u6210\u91cf\uff08Completion\uff0c\u5173\u4e8e\u8fd9\u4e2a\u540d\u8bcd\uff0c\u81f3\u4eca\u6ca1\u6709\u597d\u7684\u7ffb\u8bd1\uff0c\u7b14\u8005\u5c06\u5176\u8bd1\u4e3a\u201c\u5b8c\u6210\u91cf\u201d\uff09\uff0c\u5b83\u7528\u4e8e\u4e00\u4e2a\u6267\u884c\u5355\u5143\u7b49\u5f85\u53e6\u4e00\u4e2a\u6267\u884c\u5355\u5143\u6267\u884c\u5b8c\u67d0\u4e8b\u3002\\r\\n\\r\\nLinux\u4e2d\u4e0e\u5b8c\u6210\u91cf\u76f8\u5173\u7684\u64cd\u4f5c\u4e3b\u8981\u6709\u4ee5\u4e0b4\u79cd\u3002\\r\\n\\r\\n1.\u5b9a\u4e49\u5b8c\u6210\u91cf\\r\\n\\r\\n\u4e0b\u5217\u4ee3\u7801\u5b9a\u4e49\u540d\u4e3amy_completion\u7684\u5b8c\u6210\u91cf\uff1a\\r\\n\\r\\n```\\r\\nstruct completion my_completion;\\r\\n```\\r\\n\\r\\n2.\u521d\u59cb\u5316\u5b8c\u6210\u91cf\\r\\n\\r\\n\u4e0b\u5217\u4ee3\u7801\u521d\u59cb\u5316\u6216\u8005\u91cd\u65b0\u521d\u59cb\u5316my_completion\u8fd9\u4e2a\u5b8c\u6210\u91cf\u7684\u503c\u4e3a0\uff08\u5373\u6ca1\u6709\u5b8c\u6210\u7684\u72b6\u6001\uff09\uff1a\\r\\n\\r\\n```\\r\\ninit_completion(&my_completion);\\r\\nreinit_completion(&my_completion)\\r\\n```\\r\\n\\r\\n3.\u7b49\u5f85\u5b8c\u6210\u91cf\\r\\n\\r\\n\u4e0b\u5217\u51fd\u6570\u7528\u4e8e\u7b49\u5f85\u4e00\u4e2a\u5b8c\u6210\u91cf\u88ab\u5524\u9192\uff1a\\r\\n\\r\\n```\\r\\nvoid wait_for_completion(struct completion *c);\\r\\n```\\r\\n\\r\\n4.\u5524\u9192\u5b8c\u6210\u91cf\\r\\n\\r\\n\u4e0b\u9762\u4e24\u4e2a\u51fd\u6570\u7528\u4e8e\u5524\u9192\u5b8c\u6210\u91cf\uff1a\\r\\n\\r\\n```\\r\\nvoid complete(struct completion *c);\\r\\nvoid complete_all(struct completion *c);\\r\\n```\\r\\n\\r\\n\u524d\u8005\u53ea\u5524\u9192\u4e00\u4e2a\u7b49\u5f85\u7684\u6267\u884c\u5355\u5143\uff0c\u540e\u8005\u91ca\u653e\u6240\u6709\u7b49\u5f85\u540c\u4e00\u5b8c\u6210\u91cf\u7684\u6267\u884c\u5355\u5143\u3002\\r\\n\\r\\n\u5b8c\u6210\u91cf\u7528\u4e8e\u540c\u6b65\u7684\u6d41\u7a0b\u4e00\u822c\u5982\u4e0b\uff1a\\r\\n\\r\\n![1743172384218](./figure/1743172384218.png)"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.3\u3000globalmem\u8bbe\u5907\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.3\u3000globalmem\u8bbe\u5907\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.3\u3000globalmem\u8bbe\u5907\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.3\u3000globalmem\u8bbe\u5907\u9a71\u52a8.md","title":"6.3.1\u3000\u5934\u6587\u4ef6\u3001\u5b8f\u53ca\u8bbe\u5907\u7ed3\u6784\u4f53","description":"\u5728globalmem\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u5e94\u5305\u542b\u5b83\u8981\u4f7f\u7528\u7684\u5934\u6587\u4ef6\uff0c\u5e76\u5b9a\u4e49globalmem\u8bbe\u5907\u7ed3\u6784\u4f53\u53ca\u76f8\u5173\u5b8f\u3002","date":"2025-09-15T14:44:14.285Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":20.655,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.8\u3000\u5b8c\u6210\u91cf"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA"}},"content":"\u5728globalmem\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u5e94\u5305\u542b\u5b83\u8981\u4f7f\u7528\u7684\u5934\u6587\u4ef6\uff0c\u5e76\u5b9a\u4e49globalmem\u8bbe\u5907\u7ed3\u6784\u4f53\u53ca\u76f8\u5173\u5b8f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.8\u3000globalmem\u8bbe\u5907\u7ed3\u6784\u4f53\u548c\u5b8f\\r\\n\\r\\n```\\r\\n 1#include <linux/module.h>\\r\\n 2#include <linux/fs.h>\\r\\n 3#include <linux/init.h>\\r\\n 4#include <linux/cdev.h>\\r\\n 5#include <linux/slab.h>\\r\\n 6#include <linux/uaccess.h>\\r\\n 7\\r\\n 8#define GLOBALMEM_SIZE   0x1000\\r\\n 9#define MEM_CLEAR 0x1\\r\\n10#define GLOBALMEM_MAJOR 230\\r\\n11\\r\\n12static int globalmem_major = GLOBALMEM_MAJOR;\\r\\n13module_param(globalmem_major, int, S_IRUGO);\\r\\n14\\r\\n15struct globalmem_dev {\\r\\n16 struct cdev cdev;\\r\\n17 unsigned char mem[GLOBALMEM_SIZE];\\r\\n18};\\r\\n19\\r\\n20struct globalmem_dev *globalmem_devp;\\r\\n```\\r\\n\\r\\n\u4ece\u7b2c15~18\u884c\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9a\u4e49\u7684globalmem_dev\u8bbe\u5907\u7ed3\u6784\u4f53\u5305\u542b\u4e86\u5bf9\u5e94\u4e8eglobalmem\u5b57\u7b26\u8bbe\u5907\u7684cdev\u3001\u4f7f\u7528\u7684\u5185\u5b58mem[GLOBALMEM_SIZE]\u3002\u5f53\u7136\uff0c\u7a0b\u5e8f\u4e2d\u5e76\u4e0d\u4e00\u5b9a\u8981\u628amem[GLOBALMEM_SIZE]\u548ccdev\u5305\u542b\u5728\u4e00\u4e2a\u8bbe\u5907\u7ed3\u6784\u4f53\u4e2d\uff0c\u4f46\u8fd9\u6837\u5b9a\u4e49\u7684\u597d\u5904\u5728\u4e8e\uff0c\u5b83\u501f\u7528\u4e86\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u201c\u5c01\u88c5\u201d\u7684\u601d\u60f3\uff0c\u4f53\u73b0\u4e86\u4e00\u79cd\u826f\u597d\u7684\u7f16\u7a0b\u4e60\u60ef\u3002\\r\\n\\r\\n# 6.3.2\u3000\u52a0\u8f7d\u4e0e\u5378\u8f7d\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\nglobalmem\u8bbe\u5907\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u9075\u5faa\u4ee3\u7801\u6e05\u53556.5\u7684\u7c7b\u4f3c\u6a21\u677f\uff0c\u5176\u5b9e\u73b0\u7684\u5de5\u4f5c\u4e0e\u4ee3\u7801\u6e05\u53556.5\u5b8c\u5168\u4e00\u81f4\uff0c\u5982\u4ee3\u7801\u6e05\u53556.9\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.9\u3000globalmem\u8bbe\u5907\u9a71\u52a8\u6a21\u5757\u7684\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static void globalmem_setup_cdev(struct globalmem_dev *dev, int index)\\r\\n 2{\\r\\n 3  int err, devno = MKDEV(globalmem_major, index);\\r\\n 4\\r\\n 5  cdev_init(&dev->cdev, &globalmem_fops);\\r\\n 6  dev->cdev.owner = THIS_MODULE;\\r\\n 7  err = cdev_add(&dev->cdev, devno, 1);\\r\\n 8  if (err)\\r\\n 9       printk(KERN_NOTICE \\"Error %d adding globalmem%d\\", err, index);\\r\\n10}\\r\\n11\\r\\n12static int __init globalmem_init(void)\\r\\n13{\\r\\n14  int ret;\\r\\n15  dev_t devno = MKDEV(globalmem_major, 0);\\r\\n16\\r\\n17  if (globalmem_major)\\r\\n18       ret = register_chrdev_region(devno, 1, \\"globalmem\\");\\r\\n19  else {\\r\\n20       ret = alloc_chrdev_region(&devno, 0, 1, \\"globalmem\\");\\r\\n21       globalmem_major = MAJOR(devno);\\r\\n22  }\\r\\n23  if (ret < 0)\\r\\n24      return ret;\\r\\n25\\r\\n26  globalmem_devp = kzalloc(sizeof(struct globalmem_dev), GFP_KERNEL);\\r\\n27  if (!globalmem_devp) {\\r\\n28       ret = -ENOMEM;\\r\\n29       goto fail_malloc;\\r\\n30  }\\r\\n31\\r\\n32  globalmem_setup_cdev(globalmem_devp, 0);\\r\\n33  return 0;\\r\\n34\\r\\n35  fail_malloc:\\r\\n36  unregister_chrdev_region(devno, 1);\\r\\n37  return ret;\\r\\n38}\\r\\n39module_init(globalmem_init);\\r\\n```\\r\\n\\r\\n\u7b2c1~10\u884c\u7684globalmem_setup_cdev\uff08\uff09\u51fd\u6570\u5b8c\u6210cdev\u7684\u521d\u59cb\u5316\u548c\u6dfb\u52a0\uff0c17~22\u884c\u5b8c\u6210\u4e86\u8bbe\u5907\u53f7\u7684\u7533\u8bf7\uff0c\u7b2c26\u884c\u8c03\u7528kzalloc\uff08\uff09\u7533\u8bf7\u4e86\u4e00\u4efdglobalmem_dev\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e76\u6e050\u3002\u5728cdev_init\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u4e0eglobalmem\u7684cdev\u5173\u8054\u7684file_operations\u7ed3\u6784\u4f53\u5982\u4ee3\u7801\u6e05\u53556.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.10\u3000globalmem\u8bbe\u5907\u9a71\u52a8\u7684\u6587\u4ef6\u64cd\u4f5c\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n1static const struct file_operations globalmem_fops = {\\r\\n2   .owner = THIS_MODULE,\\r\\n3   .llseek = globalmem_llseek,\\r\\n4   .read = globalmem_read,\\r\\n5   .write = globalmem_write,\\r\\n6   .unlocked_ioctl = globalmem_ioctl,\\r\\n7   .open = globalmem_open,\\r\\n8   .release = globalmem_release,\\r\\n9};\\r\\n```\\r\\n\\r\\n# 6.3.3\u3000\u8bfb\u5199\u51fd\u6570\\r\\n\\r\\nglobalmem\u8bbe\u5907\u9a71\u52a8\u7684\u8bfb\u5199\u51fd\u6570\u4e3b\u8981\u662f\u8ba9\u8bbe\u5907\u7ed3\u6784\u4f53\u7684mem[]\u6570\u7ec4\u4e0e\u7528\u6237\u7a7a\u95f4\u4ea4\u4e92\u6570\u636e\uff0c\u5e76\u968f\u7740\u8bbf\u95ee\u7684\u5b57\u8282\u6570\u53d8\u66f4\u66f4\u65b0\u6587\u4ef6\u8bfb\u5199\u504f\u79fb\u4f4d\u7f6e\u3002\u8bfb\u548c\u5199\u51fd\u6570\u7684\u5b9e\u73b0\u5206\u522b\u5982\u4ee3\u7801\u6e05\u53556.11\u548c6.12\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.11\u3000globalmem\u8bbe\u5907\u9a71\u52a8\u7684\u8bfb\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static ssize_t globalmem_read(struct file *filp, char __user * buf, size_t size,\\r\\n 2              loff_t * ppos)\\r\\n 3{\\r\\n 4 unsigned long p = *ppos;\\r\\n 5 unsigned int count = size;\\r\\n 6 int ret = 0;\\r\\n 7 struct globalmem_dev *dev = filp->private_data;\\r\\n 8\\r\\n 9 if (p >= GLOBALMEM_SIZE)\\r\\n10      return 0;\\r\\n11 if (count > GLOBALMEM_SIZE - p)\\r\\n12     count = GLOBALMEM_SIZE - p;\\r\\n13\\r\\n14 if (copy_to_user(buf, dev->mem + p, count)) {\\r\\n15     ret = -EFAULT;\\r\\n16 } else {\\r\\n17     *ppos += count;\\r\\n18     ret = count;\\r\\n19\\r\\n20     printk(KERN_INFO \\"read %u bytes(s) from %lu\\\\n\\", count, p);\\r\\n21 }\\r\\n22\\r\\n23 return ret;\\r\\n24}\\r\\n```\\r\\n\\r\\n*ppos\u662f\u8981\u8bfb\u7684\u4f4d\u7f6e\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\uff0c\u5982\u679c\u8be5\u504f\u79fb\u5927\u4e8e\u6216\u7b49\u4e8eGLOBALMEM_SIZE\uff0c\u610f\u5473\u7740\u5df2\u7ecf\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\uff0c\u6240\u4ee5\u8fd4\u56de0\uff08EOF\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.12\u3000globalmem\u8bbe\u5907\u9a71\u52a8\u7684\u5199\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static ssize_t globalmem_write(struct file *filp, const char __user * buf,\\r\\n 2                size_t size, loff_t * ppos)\\r\\n 3{\\r\\n 4 unsigned long p = *ppos;\\r\\n 5 unsigned int count = size;\\r\\n 6 int ret = 0;\\r\\n 7 struct globalmem_dev *dev = filp->private_data;\\r\\n 8\\r\\n 9 if (p >= GLOBALMEM_SIZE)\\r\\n10     return 0;\\r\\n11 if (count > GLOBALMEM_SIZE - p)\\r\\n12     count = GLOBALMEM_SIZE - p;\\r\\n13\\r\\n14 if (copy_from_user(dev->mem + p, buf, count))\\r\\n15     ret = -EFAULT;\\r\\n16 else {\\r\\n17     *ppos += count;\\r\\n18     ret = count;\\r\\n19\\r\\n20     printk(KERN_INFO \\"written %u bytes(s) from %lu\\\\n\\", count, p);\\r\\n21 }\\r\\n22\\r\\n23 return ret;\\r\\n24}\\r\\n```\\r\\n\\r\\n# 6.3.4\u3000seek\u51fd\u6570\\r\\n\\r\\nseek\uff08\uff09\u51fd\u6570\u5bf9\u6587\u4ef6\u5b9a\u4f4d\u7684\u8d77\u59cb\u5730\u5740\u53ef\u4ee5\u662f\u6587\u4ef6\u5f00\u5934\uff08SEEK_SET\uff0c0\uff09\u3001\u5f53\u524d\u4f4d\u7f6e\uff08SEEK_CUR\uff0c1\uff09\u548c\u6587\u4ef6\u5c3e\uff08SEEK_END\uff0c2\uff09\uff0c\u5047\u8bbeglobalmem\u652f\u6301\u4ece\u6587\u4ef6\u5f00\u5934\u548c\u5f53\u524d\u4f4d\u7f6e\u7684\u76f8\u5bf9\u504f\u79fb\u3002\\r\\n\\r\\n\u5728\u5b9a\u4f4d\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u68c0\u67e5\u7528\u6237\u8bf7\u6c42\u7684\u5408\u6cd5\u6027\uff0c\u82e5\u4e0d\u5408\u6cd5\uff0c\u51fd\u6570\u8fd4\u56de-EINVAL\uff0c\u5408\u6cd5\u65f6\u66f4\u65b0\u6587\u4ef6\u7684\u5f53\u524d\u4f4d\u7f6e\u5e76\u8fd4\u56de\u8be5\u4f4d\u7f6e\uff0c\u5982\u4ee3\u7801\u6e05\u53556.13\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.13\u3000globalmem\u8bbe\u5907\u9a71\u52a8\u7684seek\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static loff_t globalmem_llseek(struct file *filp, loff_t offset, int orig)\\r\\n 2{\\r\\n 3  loff_t ret = 0;\\r\\n 4  switch (orig) {\\r\\n 5  case 0: /* \u4ece\u6587\u4ef6\u5f00\u5934\u4f4d\u7f6eseek */\\r\\n 6       if (offset< 0) {\\r\\n 7            ret = -EINVAL;\\r\\n 8            break;\\r\\n 9       }\\r\\n10       if ((unsigned int)offset > GLOBALMEM_SIZE) {\\r\\n11            ret = -EINVAL;\\r\\n12            break;\\r\\n13       }\\r\\n14       filp->f_pos = (unsigned int)offset;\\r\\n15       ret = filp->f_pos;\\r\\n16       break;\\r\\n17  case 1: /* \u4ece\u6587\u4ef6\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cbseek */\\r\\n18       if ((filp->f_pos + offset) > GLOBALMEM_SIZE) {\\r\\n19            ret = -EINVAL;\\r\\n20            break;\\r\\n21       }\\r\\n22       if ((filp->f_pos + offset) < 0) {\\r\\n23            ret = -EINVAL;\\r\\n24            break;\\r\\n25       }\\r\\n26       filp->f_pos += offset;\\r\\n27       ret = filp->f_pos;\\r\\n28       break;\\r\\n29  default:\\r\\n30       ret = -EINVAL;\\r\\n31       break;\\r\\n32  }\\r\\n33  return ret;\\r\\n34}\\r\\n```\\r\\n\\r\\n# 6.3.5\u3000ioctl\u51fd\u6570\\r\\n\\r\\n## 1.globalmem\u8bbe\u5907\u9a71\u52a8\u7684ioctl\uff08\uff09\u51fd\u6570\\r\\n\\r\\nglobalmem\u8bbe\u5907\u9a71\u52a8\u7684ioctl\uff08\uff09\u51fd\u6570\u63a5\u53d7MEM_CLEAR\u547d\u4ee4\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5c06\u5168\u5c40\u5185\u5b58\u7684\u6709\u6548\u6570\u636e\u957f\u5ea6\u6e050\uff0c\u5bf9\u4e8e\u8bbe\u5907\u4e0d\u652f\u6301\u7684\u547d\u4ee4\uff0cioctl\uff08\uff09\u51fd\u6570\u5e94\u8be5\u8fd4\u56de-EINVAL\uff0c\u5982\u4ee3\u7801\u6e05\u53556.14\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.14\u3000globalmem\u8bbe\u5907\u9a71\u52a8\u7684I/O\u63a7\u5236\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static long globalmem_ioctl(struct file *filp, unsigned int cmd,\\r\\n 2                unsigned long arg)\\r\\n 3{\\r\\n 4  struct globalmem_dev *dev = filp->private_data;\\r\\n 5\\r\\n 6  switch (cmd) {\\r\\n 7  case MEM_CLEAR:\\r\\n 8       memset(dev->mem, 0, GLOBALMEM_SIZE);\\r\\n 9       printk(KERN_INFO \\"globalmem is set to zero\\\\n\\");\\r\\n10       break;\\r\\n11\\r\\n12  default:\\r\\n13       return -EINVAL;\\r\\n14  }\\r\\n15\\r\\n16  return 0;\\r\\n17}\\r\\n```\\r\\n\\r\\n\u5728\u4e0a\u8ff0\u7a0b\u5e8f\u4e2d\uff0cMEM_CLEAR\u88ab\u5b8f\u5b9a\u4e49\u4e3a0x01\uff0c\u5b9e\u9645\u4e0a\u8fd9\u5e76\u4e0d\u662f\u4e00\u79cd\u503c\u5f97\u63a8\u8350\u7684\u65b9\u6cd5\uff0c\u7b80\u5355\u5730\u5bf9\u547d\u4ee4\u5b9a\u4e49\u4e3a0x0\u30010x1\u30010x2\u7b49\u7c7b\u4f3c\u503c\u4f1a\u5bfc\u81f4\u4e0d\u540c\u7684\u8bbe\u5907\u9a71\u52a8\u62e5\u6709\u76f8\u540c\u7684\u547d\u4ee4\u53f7\u3002\u5982\u679c\u8bbe\u5907A\u3001B\u90fd\u652f\u63010x0\u30010x1\u30010x2\u8fd9\u6837\u7684\u547d\u4ee4\uff0c\u5c31\u4f1a\u9020\u6210\u547d\u4ee4\u7801\u7684\u6c61\u67d3\u3002\u56e0\u6b64\uff0cLinux\u5185\u6838\u63a8\u8350\u91c7\u7528\u4e00\u5957\u7edf\u4e00\u7684ioctl\uff08\uff09\u547d\u4ee4\u751f\u6210\u65b9\u5f0f\\r\\n\\r\\n## 2.ioctl\uff08\uff09\u547d\u4ee4\\r\\n\\r\\nLinux\u5efa\u8bae\u4ee5\u5982\u56fe6.2\u6240\u793a\u7684\u65b9\u5f0f\u5b9a\u4e49ioctl\uff08\uff09\u7684\u547d\u4ee4\u3002\\r\\n\\r\\n![1742913948756](./figure/1742913948756.png)\\r\\n\\r\\n\u56fe6.2\u3000I/O\u63a7\u5236\u547d\u4ee4\u7684\u7ec4\u6210\\r\\n\\r\\n\u547d\u4ee4\u7801\u7684\u8bbe\u5907\u7c7b\u578b\u5b57\u6bb5\u4e3a\u4e00\u4e2a\u201c\u5e7b\u6570\u201d\uff0c\u53ef\u4ee5\u662f0~0xff\u7684\u503c\uff0c\u5185\u6838\u4e2d\u7684ioctl-number.txt\u7ed9\u51fa\u4e86\u4e00\u4e9b\u63a8\u8350\u7684\u548c\u5df2\u7ecf\u88ab\u4f7f\u7528\u7684\u201c\u5e7b\u6570\u201d\uff0c\u65b0\u8bbe\u5907\u9a71\u52a8\u5b9a\u4e49\u201c\u5e7b\u6570\u201d\u7684\u65f6\u5019\u8981\u907f\u514d\u4e0e\u5176\u51b2\u7a81\u3002\\r\\n\\r\\n\u547d\u4ee4\u7801\u7684\u5e8f\u5217\u53f7\u4e5f\u662f8\u4f4d\u5bbd\u3002\\r\\n\\r\\n\u547d\u4ee4\u7801\u7684\u65b9\u5411\u5b57\u6bb5\u4e3a2\u4f4d\uff0c\u8be5\u5b57\u6bb5\u8868\u793a\u6570\u636e\u4f20\u9001\u7684\u65b9\u5411\uff0c\u53ef\u80fd\u7684\u503c\u662f_IOC_NONE\uff08\u65e0\u6570\u636e\u4f20\u8f93\uff09\u3001_IOC_READ\uff08\u8bfb\uff09\u3001_IOC_WRITE\uff08\u5199\uff09\u548c_IOC_READ|_IOC_WRITE\uff08\u53cc\u5411\uff09\u3002\u6570\u636e\u4f20\u9001\u7684\u65b9\u5411\u662f\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u770b\u7684\u3002\\r\\n\\r\\n\u547d\u4ee4\u7801\u7684\u6570\u636e\u957f\u5ea6\u5b57\u6bb5\u8868\u793a\u6d89\u53ca\u7684\u7528\u6237\u6570\u636e\u7684\u5927\u5c0f\uff0c\u8fd9\u4e2a\u6210\u5458\u7684\u5bbd\u5ea6\u4f9d\u8d56\u4e8e\u4f53\u7cfb\u7ed3\u6784\uff0c\u901a\u5e38\u662f13\u6216\u800514\u4f4d\u3002\\r\\n\\r\\n\u5185\u6838\u8fd8\u5b9a\u4e49\u4e86_IO\uff08\uff09\u3001_IOR\uff08\uff09\u3001_IOW\uff08\uff09\u548c_IOWR\uff08\uff09\u8fd94\u4e2a\u5b8f\u6765\u8f85\u52a9\u751f\u6210\u547d\u4ee4\uff0c\u8fd94\u4e2a\u5b8f\u7684\u901a\u7528\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u53556.15\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.15\u3000_IO\uff08\uff09\u3001_IOR\uff08\uff09\u3001_IOW\uff08\uff09\u548c_IOWR\uff08\uff09\u5b8f\u5b9a\u4e49\\r\\n\\r\\n```\\r\\n 1#define _IO(type,nr)         _IOC(_IOC_NONE,(type),(nr),0)\\r\\n 2#define _IOR(type,nr,size) _IOC(_IOC_READ,(type),(nr),\\\\\\r\\n 3                                 (_IOC_TYPECHECK(size)))\\r\\n 4#define _IOW(type,nr,size)  _IOC(_IOC_WRITE,(type),(nr),\\\\\\r\\n 5                                 (_IOC_TYPECHECK(size)))\\r\\n 6#define _IOWR(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),  \\\\\\r\\n 7                                 (_IOC_TYPECHECK(size)))\\r\\n 8/* _IO\u3001_IOR\u7b49\u4f7f\u7528\u7684_IOC\u5b8f*/\\r\\n 9#define _IOC(dir,type,nr,size) \\\\\\r\\n10     (((dir)  << _IOC_DIRSHIFT) | \\\\\\r\\n11     ((type) << _IOC_TYPESHIFT) | \\\\\\r\\n12     ((nr)   << _IOC_NRSHIFT) | \\\\\\r\\n13     ((size) << _IOC_SIZESHIFT))\\r\\n```\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0c\u8fd9\u51e0\u4e2a\u5b8f\u7684\u4f5c\u7528\u662f\u6839\u636e\u4f20\u5165\u7684type\uff08\u8bbe\u5907\u7c7b\u578b\u5b57\u6bb5\uff09\u3001nr\uff08\u5e8f\u5217\u53f7\u5b57\u6bb5\uff09\u3001size\uff08\u6570\u636e\u957f\u5ea6\u5b57\u6bb5\uff09\u548c\u5b8f\u540d\u9690\u542b\u7684\u65b9\u5411\u5b57\u6bb5\u79fb\u4f4d\u7ec4\u5408\u751f\u6210\u547d\u4ee4\u7801\u3002\\r\\n\\r\\n\u7531\u4e8eglobalmem\u7684MEM_CLEAR\u547d\u4ee4\u4e0d\u6d89\u53ca\u6570\u636e\u4f20\u8f93\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define GLOBALMEM_MAGIC \'g\'\\r\\n#define MEM_CLEAR _IO(GLOBALMEM_MAGIC,0)\\r\\n```\\r\\n\\r\\n## 3.\u9884\u5b9a\u4e49\u547d\u4ee4\\r\\n\\r\\n\u5185\u6838\u4e2d\u9884\u5b9a\u4e49\u4e86\u4e00\u4e9bI/O\u63a7\u5236\u547d\u4ee4\uff0c\u5982\u679c\u67d0\u8bbe\u5907\u9a71\u52a8\u4e2d\u5305\u542b\u4e86\u4e0e\u9884\u5b9a\u4e49\u547d\u4ee4\u4e00\u6837\u7684\u547d\u4ee4\u7801\uff0c\u8fd9\u4e9b\u547d\u4ee4\u4f1a\u4f5c\u4e3a\u9884\u5b9a\u4e49\u547d\u4ee4\u88ab\u5185\u6838\u5904\u7406\u800c\u4e0d\u662f\u88ab\u8bbe\u5907\u9a71\u52a8\u5904\u7406\uff0c\u4e0b\u9762\u5217\u4e3e\u4e00\u4e9b\u5e38\u7528\u7684\u9884\u5b9a\u4e49\u547d\u4ee4\u3002\\r\\n\\r\\nFIOCLEX\uff1a\u5373File IOctl Close on Exec\uff0c\u5bf9\u6587\u4ef6\u8bbe\u7f6e\u4e13\u7528\u6807\u5fd7\uff0c\u901a\u77e5\u5185\u6838\u5f53exec\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u53d1\u751f\u65f6\u81ea\u52a8\u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\u3002\\r\\n\\r\\nFIONCLEX\uff1a\u5373File IOctl Not Close on Exec\uff0c\u4e0eFIOCLEX\u6807\u5fd7\u76f8\u53cd\uff0c\u6e05\u9664\u7531FIOCLEX\u547d\u4ee4\u8bbe\u7f6e\u7684\u6807\u5fd7\u3002\\r\\n\\r\\nFIOQSIZE\uff1a\u83b7\u5f97\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u5927\u5c0f\uff0c\u5f53\u7528\u4e8e\u8bbe\u5907\u6587\u4ef6\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2aENOTTY\u9519\u8bef\\r\\n\\r\\nFIONBIO\uff1a\u5373File IOctl Non-Blocking I/O\uff0c\u8fd9\u4e2a\u8c03\u7528\u4fee\u6539\u5728filp->f_flags\u4e2d\u7684O_NONBLOCK\u6807\u5fd7\u3002\\r\\n\\r\\nFIOCLEX\u3001FIONCLEX\u3001FIOQSIZE\u548cFIONBIO\u8fd9\u4e9b\u5b8f\u5b9a\u4e49\u5728\u5185\u6838\u7684include/uapi/asm-generic/ioctls.h\u6587\u4ef6\u4e2d\u3002\\r\\n\\r\\n# 6.3.6\u3000\u4f7f\u7528\u6587\u4ef6\u79c1\u6709\u6570\u636e\\r\\n\\r\\n6.3.1~6.3.5\u8282\u7ed9\u51fa\u7684\u4ee3\u7801\u5b8c\u6574\u5730\u5b9e\u73b0\u4e86\u9884\u671f\u7684globalmem\u96cf\u5f62\uff0c\u4ee3\u7801\u6e05\u53556.11\u7684\u7b2c7\u884c\uff0c\u4ee3\u7801\u6e05\u53556.12\u7684\u7b2c7\u884c\uff0c\u4ee3\u7801\u6e05\u53556.14\u7684\u7b2c4\u884c\uff0c\u90fd\u4f7f\u7528\u4e86struct globalmem_dev*dev=filp->private_data\u83b7\u53d6globalmem_dev\u7684\u5b9e\u4f8b\u6307\u9488\u3002\u5b9e\u9645\u4e0a\uff0c\u5927\u591a\u6570Linux\u9a71\u52a8\u9075\u5faa\u4e00\u4e2a\u201c\u6f5c\u89c4\u5219\u201d\uff0c\u90a3\u5c31\u662f\u5c06\u6587\u4ef6\u7684\u79c1\u6709\u6570\u636eprivate_data\u6307\u5411\u8bbe\u5907\u7ed3\u6784\u4f53\uff0c\u518d\u7528read\uff08\uff09\u3001write\uff08\uff09\u3001ioctl\uff08\uff09\u3001llseek\uff08\uff09\u7b49\u51fd\u6570\u901a\u8fc7private_data\u8bbf\u95ee\u8bbe\u5907\u7ed3\u6784\u4f53\u3002\u79c1\u6709\u6570\u636e\u7684\u6982\u5ff5\u5728Linux\u9a71\u52a8\u7684\u5404\u4e2a\u5b50\u7cfb\u7edf\u4e2d\u5e7f\u6cdb\u5b58\u5728\uff0c\u5b9e\u9645\u4e0a\u4f53\u73b0\u4e86Linux\u7684\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u601d\u60f3\u3002\u5bf9\u4e8eglobalmem\u9a71\u52a8\u800c\u8a00\uff0c\u79c1\u6709\u6570\u636e\u7684\u8bbe\u7f6e\u662f\u5728globalmem_open\uff08\uff09\u4e2d\u5b8c\u6210\u7684\uff0c\u5982\u4ee3\u7801\u6e05\u53556.16\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.16\u3000globalmem\u8bbe\u5907\u9a71\u52a8\u7684open\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int globalmem_open(struct inode *inode, struct file *filp)\\r\\n 2{\\r\\n 3   filp->private_data = globalmem_devp;\\r\\n 4   return 0;\\r\\n 5}\\r\\n```\\r\\n\\r\\n\u4e3a\u4e86\u8ba9\u8bfb\u8005\u5efa\u7acb\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u5168\u8c8c\u89c6\u56fe\uff0c\u4ee3\u7801\u6e05\u53556.17\u5217\u51fa\u4e86\u5b8c\u6574\u7684\u4f7f\u7528\u6587\u4ef6\u79c1\u6709\u6570\u636e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8\uff0c\u672c\u7a0b\u5e8f\u4f4d\u4e8e\u672c\u4e66\u914d\u5957\u865a\u62df\u673a\u4ee3\u7801\u7684/kernel/drivers/globalmem/ch6\u76ee\u5f55\u4e0b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.17\u3000\u4f7f\u7528\u6587\u4ef6\u79c1\u6709\u6570\u636e\u7684globalmem\u7684\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n```\\r\\n  1/*\\r\\n  2 * a simple char device driver: globalmem without mutex\\r\\n  3 *\\r\\n  4 * Copyright (C) 2014 Barry Song  (baohua@kernel.org)\\r\\n  5 *\\r\\n  6 * Licensed under GPLv2 or later.\\r\\n  7 */\\r\\n  8\\r\\n  9#include <linux/module.h>\\r\\n 10#include <linux/fs.h>\\r\\n 11#include <linux/init.h>\\r\\n 12#include <linux/cdev.h>\\r\\n 13#include <linux/slab.h>\\r\\n 14#include <linux/uaccess.h>\\r\\n 15\\r\\n 16#define GLOBALMEM_SIZE   0x1000\\r\\n 17#define MEM_CLEAR 0x1\\r\\n 18#define GLOBALMEM_MAJOR 230\\r\\n 19\\r\\n 20static int globalmem_major = GLOBALMEM_MAJOR;\\r\\n 21module_param(globalmem_major, int, S_IRUGO);\\r\\n 22\\r\\n 23struct globalmem_dev {\\r\\n 24   struct cdev cdev;\\r\\n 25   unsigned char mem[GLOBALMEM_SIZE];\\r\\n 26};\\r\\n 27\\r\\n 28struct globalmem_dev *globalmem_devp;\\r\\n 29\\r\\n 30static int globalmem_open(struct inode *inode, struct file *filp)\\r\\n 31{\\r\\n 32   filp->private_data = globalmem_devp;\\r\\n 33   return 0;\\r\\n 34}\\r\\n 35\\r\\n 36static int globalmem_release(struct inode *inode, struct file *filp)\\r\\n 37{\\r\\n 38   return 0;\\r\\n 39}\\r\\n 40\\r\\n 41static long globalmem_ioctl(struct file *filp, unsigned int cmd,\\r\\n 42               unsigned long arg)\\r\\n 43{\\r\\n 44 struct globalmem_dev *dev = filp->private_data;\\r\\n 45\\r\\n 46 switch (cmd) {\\r\\n 47 case MEM_CLEAR:\\r\\n 48      memset(dev->mem, 0, GLOBALMEM_SIZE);\\r\\n 49      printk(KERN_INFO \\"globalmem is set to zero\\\\n\\");\\r\\n 50      break;\\r\\n 51\\r\\n 52 default:\\r\\n 53      return -EINVAL;\\r\\n 54 }\\r\\n 55\\r\\n 56 return 0;\\r\\n 57}\\r\\n 58\\r\\n 59static ssize_t globalmem_read(struct file *filp, char __user * buf, size_t size,\\r\\n 60                 loff_t * ppos)\\r\\n 61{\\r\\n 62 unsigned long p = *ppos;\\r\\n 63 unsigned int count = size;\\r\\n 64 int ret = 0;\\r\\n 65 struct globalmem_dev *dev = filp->private_data;\\r\\n 66\\r\\n 67 if (p >= GLOBALMEM_SIZE)\\r\\n 68      return 0;\\r\\n 69 if (count > GLOBALMEM_SIZE - p)\\r\\n 70      count = GLOBALMEM_SIZE - p;\\r\\n 71\\r\\n 72 if (copy_to_user(buf, dev->mem + p, count)) {\\r\\n 73      ret = -EFAULT;\\r\\n 74 } else {\\r\\n 75      *ppos += count;\\r\\n 76      ret = count;\\r\\n 77\\r\\n 78      printk(KERN_INFO \\"read %u bytes(s) from %lu\\\\n\\", count, p);\\r\\n 79 }\\r\\n 80\\r\\n 81 return ret;\\r\\n 82}\\r\\n 83\\r\\n 84static ssize_t globalmem_write(struct file *filp, const char __user * buf,\\r\\n 85                  size_t size, loff_t * ppos)\\r\\n 86{\\r\\n 87 unsigned long p = *ppos;\\r\\n 88 unsigned int count = size;\\r\\n 89 int ret = 0;\\r\\n 90 struct globalmem_dev *dev = filp->private_data;\\r\\n 91\\r\\n 92 if (p >= GLOBALMEM_SIZE)\\r\\n 93      return 0;\\r\\n 94 if (count > GLOBALMEM_SIZE - p)\\r\\n 95      count = GLOBALMEM_SIZE - p;\\r\\n 96\\r\\n 97 if (copy_from_user(dev->mem + p, buf, count))\\r\\n 98      ret = -EFAULT;\\r\\n 99 else {\\r\\n100      *ppos += count;\\r\\n101      ret = count;\\r\\n102\\r\\n103      printk(KERN_INFO \\"written %u bytes(s) from %lu\\\\n\\", count, p);\\r\\n104 }\\r\\n105\\r\\n106 return ret;\\r\\n107}\\r\\n108\\r\\n109static loff_t globalmem_llseek(struct file *filp, loff_t offset, int orig)\\r\\n110{\\r\\n111 loff_t ret = 0;\\r\\n112 switch (orig) {\\r\\n113 case 0:\\r\\n114      if (offset < 0) {\\r\\n115           ret = -EINVAL;\\r\\n116           break;\\r\\n117      }\\r\\n118      if ((unsigned int)offset > GLOBALMEM_SIZE) {\\r\\n119           ret = -EINVAL;\\r\\n120           break;\\r\\n121      }\\r\\n122      filp->f_pos = (unsigned int)offset;\\r\\n123      ret = filp->f_pos;\\r\\n124      break;\\r\\n125 case 1:\\r\\n126      if ((filp->f_pos + offset) > GLOBALMEM_SIZE) {\\r\\n127           ret = -EINVAL;\\r\\n128           break;\\r\\n129      }\\r\\n130      if ((filp->f_pos + offset) < 0) {\\r\\n131           ret = -EINVAL;\\r\\n132           break;\\r\\n133      }\\r\\n134      filp->f_pos += offset;\\r\\n135      ret = filp->f_pos;\\r\\n136      break;\\r\\n137 default:\\r\\n138      ret = -EINVAL;\\r\\n139      break;\\r\\n140 }\\r\\n141 return ret;\\r\\n142}\\r\\n143\\r\\n144static const struct file_operations globalmem_fops = {\\r\\n145 .owner = THIS_MODULE,\\r\\n146 .llseek = globalmem_llseek,\\r\\n147 .read = globalmem_read,\\r\\n148 .write = globalmem_write,\\r\\n149 .unlocked_ioctl = globalmem_ioctl,\\r\\n150 .open = globalmem_open,\\r\\n151 .release = globalmem_release,\\r\\n152};\\r\\n153\\r\\n154static void globalmem_setup_cdev(struct globalmem_dev *dev, int index)\\r\\n155{\\r\\n156 int err, devno = MKDEV(globalmem_major, index);\\r\\n157\\r\\n158 cdev_init(&dev->cdev, &globalmem_fops);\\r\\n159 dev->cdev.owner = THIS_MODULE;\\r\\n160 err = cdev_add(&dev->cdev, devno, 1);\\r\\n161 if (err)\\r\\n162      printk(KERN_NOTICE \\"Error %d adding globalmem%d\\", err, index);\\r\\n163}\\r\\n164\\r\\n165static int __init globalmem_init(void)\\r\\n166{\\r\\n167 int ret;\\r\\n168 dev_t devno = MKDEV(globalmem_major, 0);\\r\\n169\\r\\n170 if (globalmem_major)\\r\\n171      ret = register_chrdev_region(devno, 1, \\"globalmem\\");\\r\\n172 else {\\r\\n173      ret = alloc_chrdev_region(&devno, 0, 1, \\"globalmem\\");\\r\\n174      globalmem_major = MAJOR(devno);\\r\\n175 }\\r\\n176 if (ret < 0)\\r\\n177      return ret;\\r\\n178\\r\\n179 globalmem_devp = kzalloc(sizeof(struct globalmem_dev), GFP_KERNEL);\\r\\n180 if (!globalmem_devp) {\\r\\n181      ret = -ENOMEM;\\r\\n182      goto fail_malloc;\\r\\n183 }\\r\\n184\\r\\n185 globalmem_setup_cdev(globalmem_devp, 0);\\r\\n186 return 0;\\r\\n187\\r\\n188 fail_malloc:\\r\\n189 unregister_chrdev_region(devno, 1);\\r\\n190 return ret;\\r\\n191}\\r\\n192module_init(globalmem_init);\\r\\n193\\r\\n194static void __exit globalmem_exit(void)\\r\\n195{\\r\\n196 cdev_del(&globalmem_devp->cdev);\\r\\n197 kfree(globalmem_devp);\\r\\n198 unregister_chrdev_region(MKDEV(globalmem_major, 0), 1);\\r\\n199}\\r\\n200module_exit(globalmem_exit);\\r\\n201\\r\\n202MODULE_AUTHOR(\\"Barry Song <baohua@kernel.org>\\");\\r\\n203MODULE_LICENSE(\\"GPL v2\\"); \\r\\n```\\r\\n\\r\\n\u5982\u679cglobalmem\u4e0d\u53ea\u5305\u62ec\u4e00\u4e2a\u8bbe\u5907\uff0c\u800c\u662f\u540c\u65f6\u5305\u62ec\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u8bbe\u5907\uff0c\u91c7\u7528private_data\u7684\u4f18\u52bf\u5c31\u4f1a\u96c6\u4e2d\u663e\u73b0\u51fa\u6765\u3002\u5728\u4e0d\u5bf9\u4ee3\u7801\u6e05\u53556.17\u4e2d\u7684globalmem_read\uff08\uff09\u3001globalmem_write\uff08\uff09\u3001globalmem_ioctl\uff08\uff09\u7b49\u91cd\u8981\u51fd\u6570\u53caglobalmem_fops\u7ed3\u6784\u4f53\u7b49\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u4efb\u4f55\u4fee\u6539\u7684\u524d\u63d0\u4e0b\uff0c\u53ea\u662f\u7b80\u5355\u5730\u4fee\u6539globalmem_init\uff08\uff09\u3001globalmem_exit\uff08\uff09\u548cglobalmem_open\uff08\uff09\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u5730\u8ba9globalmem\u9a71\u52a8\u4e2d\u5305\u542bN\u4e2a\u540c\u6837\u7684\u8bbe\u5907\uff08\u6b21\u8bbe\u5907\u53f7\u5206\u4e3a0~N\uff09\uff0c\u5982\u4ee3\u7801\u6e05\u53556.18\u5217\u51fa\u4e86\u652f\u6301\u591a\u4e2a\u5b9e\u4f8b\u7684globalmem\u548c\u652f\u6301\u5355\u5b9e\u4f8b\u7684globalmem\u9a71\u52a8\u7684\u5dee\u5f02\u90e8\u5206\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.18\u3000\u652f\u6301N\u4e2aglobalmem\u8bbe\u5907\u7684globalmem\u9a71\u52a8\\r\\n\\r\\n```\\r\\n 1#define GLOBALMEM_SIZE   0x1000\\r\\n 2#define MEM_CLEAR 0x1\\r\\n 3#define GLOBALMEM_MAJOR 230\\r\\n 4#define DEVICE_NUM   10\\r\\n 5\\r\\n 6static int globalmem_open(struct inode *inode, struct file *filp)\\r\\n 7{\\r\\n 8  struct globalmem_dev *dev = container_of(inode->i_cdev,\\r\\n 9                struct globalmem_dev, cdev);\\r\\n10  filp->private_data = dev;\\r\\n11  return 0;\\r\\n12}\\r\\n13\\r\\n14static int __init globalmem_init(void)\\r\\n15{\\r\\n16  int ret;\\r\\n17  int i;\\r\\n18  dev_t devno = MKDEV(globalmem_major, 0);\\r\\n19\\r\\n20  if (globalmem_major)\\r\\n21       ret = register_chrdev_region(devno, DEVICE_NUM, \\"globalmem\\");\\r\\n22  else {\\r\\n23       ret = alloc_chrdev_region(&devno, 0, DEVICE_NUM, \\"globalmem\\");\\r\\n24       globalmem_major = MAJOR(devno);\\r\\n25  }\\r\\n26  if (ret < 0)\\r\\n27       return ret;\\r\\n28\\r\\n29  globalmem_devp = kzalloc(sizeof(struct globalmem_dev) * DEVICE_NUM, GFP_KERNEL);\\r\\n30  if (!globalmem_devp) {\\r\\n31       ret = -ENOMEM;\\r\\n32       goto fail_malloc;\\r\\n33 }\\r\\n34\\r\\n35  for (i = 0; i < DEVICE_NUM; i++)\\r\\n36       globalmem_setup_cdev(globalmem_devp + i, i);\\r\\n37\\r\\n38  return 0;\\r\\n39\\r\\n40fail_malloc:\\r\\n41  unregister_chrdev_region(devno, DEVICE_NUM);\\r\\n42  return ret;\\r\\n43}\\r\\n44module_init(globalmem_init);\\r\\n45\\r\\n46static void __exit globalmem_exit(void)\\r\\n47{\\r\\n48  int i;\\r\\n49  for (i = 0; i < DEVICE_NUM; i++)\\r\\n50       cdev_del(&(globalmem_devp + i)->cdev);\\r\\n51  kfree(globalmem_devp);\\r\\n52  unregister_chrdev_region(MKDEV(globalmem_major, 0), DEVICE_NUM);\\r\\n53}\\r\\n54module_exit(globalmem_exit);\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53556.18\u7b2c8\u884c\u8c03\u7528\u7684container_of\uff08\uff09\u7684\u4f5c\u7528\u662f\u901a\u8fc7\u7ed3\u6784\u4f53\u6210\u5458\u7684\u6307\u9488\u627e\u5230\u5bf9\u5e94\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff0c\u8fd9\u4e2a\u6280\u5de7\u5728Linux\u5185\u6838\u7f16\u7a0b\u4e2d\u5341\u5206\u5e38\u7528\u3002\u5728container_of\uff08inode->i_cdev\uff0cstruct globalmem_dev\uff0ccdev\uff09\u8bed\u53e5\u4e2d\uff0c\u4f20\u7ed9container_of\uff08\uff09\u7684\u7b2c1\u4e2a\u53c2\u6570\u662f\u7ed3\u6784\u4f53\u6210\u5458\u7684\u6307\u9488\uff0c\u7b2c2\u4e2a\u53c2\u6570\u4e3a\u6574\u4e2a\u7ed3\u6784\u4f53\u7684\u7c7b\u578b\uff0c\u7b2c3\u4e2a\u53c2\u6570\u4e3a\u4f20\u5165\u7684\u7b2c1\u4e2a\u53c2\u6570\u5373\u7ed3\u6784\u4f53\u6210\u5458\u7684\u7c7b\u578b\uff0ccontainer_of\uff08\uff09\u8fd4\u56de\u503c\u4e3a\u6574\u4e2a\u7ed3\u6784\u4f53\u7684\u6307\u9488\u3002\\r\\n\\r\\n\u4ece\u4ee3\u7801\u6e05\u53556.18\u53ef\u4ee5\u770b\u51fa\uff0c\u6211\u4eec\u4ec5\u4ec5\u8fdb\u884c\u4e86\u6781\u5176\u5c11\u91cf\u7684\u66f4\u6539\u5c31\u4f7f\u5f97globalmem\u9a71\u52a8\u652f\u6301\u591a\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u770b\u51fa\u79c1\u6709\u6570\u636e\u7684\u9b54\u529b\u3002\u5b8c\u6574\u7684\u4ee3\u7801\u4f4d\u4e8ekernel/drivers/globalmem/ch6/multi_globalmem.c\u4e0b\u3002\u9ad8\u4eaeglobalmem.c\u548cmulti_globalmem.c\uff08\u4ee5\u201c-\u201d\u548c\u201c+\u201d\u5f00\u5934\u7684\u4ee3\u7801\uff09\u7684\u533a\u522b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n@@ -29,7 +30,9 @@ struct globalmem_dev *globalmem_devp;\\r\\n static int globalmem_open(struct inode *inode, struct file *filp)\\r\\n {\\r\\n-    filp->private_data = globalmem_devp;\\r\\n+    struct globalmem_dev *dev = container_of(inode->i_cdev,\\r\\n+                    struct globalmem_dev, cdev);\\r\\n+    filp->private_data = dev;\\r\\n     return 0;\\r\\n }\\r\\n@@ -165,37 +168,42 @@ static void globalmem_setup_cdev(struct globalmem_dev *dev,\\r\\n    int index)\\r\\n static int __init globalmem_init(void)\\r\\n {\\r\\n     int ret;\\r\\n+    int i;\\r\\n     dev_t devno = MKDEV(globalmem_major, 0);\\r\\n     if (globalmem_major)\\r\\n-         ret = register_chrdev_region(devno, 1, \\"globalmem\\");\\r\\n+         ret = register_chrdev_region(devno, DEVICE_NUM, \\"globalmem\\");\\r\\n     else {\\r\\n-         ret = alloc_chrdev_region(&devno, 0, 1, \\"globalmem\\");\\r\\n+         ret = alloc_chrdev_region(&devno, 0, DEVICE_NUM, \\"globalmem\\");\\r\\n          globalmem_major = MAJOR(devno);\\r\\n     }\\r\\n     if (ret < 0)\\r\\n          return ret;\\r\\n-    globalmem_devp = kzalloc(sizeof(struct globalmem_dev), GFP_KERNEL);\\r\\n+    globalmem_devp = kzalloc(sizeof(struct globalmem_dev) * DEVICE_NUM, GFP_KERNEL);\\r\\n     if (!globalmem_devp) {\\r\\n          ret = -ENOMEM;\\r\\n          goto fail_malloc;\\r\\n     }\\r\\n-    globalmem_setup_cdev(globalmem_devp, 0);\\r\\n+    for (i = 0; i < DEVICE_NUM; i++)\\r\\n+         globalmem_setup_cdev(globalmem_devp + i, i);\\r\\n+\\r\\n     return 0;\\r\\n- fail_malloc:\\r\\n-    unregister_chrdev_region(devno, 1);\\r\\n+fail_malloc:\\r\\n+    unregister_chrdev_region(devno, DEVICE_NUM);\\r\\n     return ret;\\r\\n }\\r\\n module_init(globalmem_init);\\r\\n static void __exit globalmem_exit(void)\\r\\n {\\r\\n-    cdev_del(&globalmem_devp->cdev);\\r\\n+    int i;\\r\\n+    for (i = 0; i < DEVICE_NUM; i++)\\r\\n+         cdev_del(&(globalmem_devp + i)->cdev);\\r\\n     kfree(globalmem_devp);\\r\\n-    unregister_chrdev_region(MKDEV(globalmem_major, 0), 1);\\r\\n+    unregister_chrdev_region(MKDEV(globalmem_major, 0), DEVICE_NUM);\\r\\n }\\r\\n module_exit(globalmem_exit);\\r\\n```\\r\\n\\r\\n# 6.4\u3000globalmem\u9a71\u52a8\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u7684\u9a8c\u8bc1\\r\\n\\r\\n\u5728globalmem\u7684\u6e90\u4ee3\u7801\u76ee\u5f55\u901a\u8fc7\u201cmake\u201d\u547d\u4ee4\u7f16\u8bd1globalmem\u7684\u9a71\u52a8\uff0c\u5f97\u5230globalmem.ko\u6587\u4ef6\u3002\u8fd0\u884c\\r\\n\\r\\n```\\r\\nbaohua@baohua-VirtualBox:~/develop/training/kernel/drivers/globalmem/ch6$ sudo\\r\\n    insmod globalmem.ko\\r\\n```\\r\\n\\r\\n\u547d\u4ee4\u52a0\u8f7d\u6a21\u5757\uff0c\u901a\u8fc7\u201clnsmod\u201d\u547d\u4ee4\uff0c\u53d1\u73b0globalmem\u6a21\u5757\u5df2\u88ab\u52a0\u8f7d\u3002\u518d\u901a\u8fc7\u201ccat/proc/devices\u201d\u547d\u4ee4\u67e5\u770b\uff0c\u53d1\u73b0\u591a\u51fa\u4e86\u4e3b\u8bbe\u5907\u53f7\u4e3a230\u7684\u201cglobalmem\u201d\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\uff1a\\r\\n\\r\\n```\\r\\n$ cat /proc/devices\\r\\nCharacter devices:\\r\\n  1mem\\r\\n  4/dev/vc/0\\r\\n  4tty\\r\\n  4ttyS\\r\\n  5/dev/tty\\r\\n  5/dev/console\\r\\n  5/dev/ptmx\\r\\n  7vcs\\r\\n 10misc\\r\\n 13input\\r\\n 14sound\\r\\n 21sg\\r\\n 29fb\\r\\n116alsa\\r\\n128ptm\\r\\n136pts\\r\\n180usb\\r\\n189usb_device\\r\\n202cpu/msr\\r\\n203cpu/cpuid\\r\\n226drm\\r\\n230globalmem\\r\\n249hidraw\\r\\n250usbmon\\r\\n251bsg\\r\\n252ptp\\r\\n253pps\\r\\n254rtc\\r\\n```\\r\\n\\r\\n\u63a5\u4e0b\u6765\uff0c\u901a\u8fc7\u547d\u4ee4\\r\\n\\r\\n```\\r\\n#mknod /dev/globalmem c 230 0\\r\\n```\\r\\n\\r\\n\u521b\u5efa\u201c/dev/globalmem\u201d\u8bbe\u5907\u8282\u70b9\uff0c\u5e76\u901a\u8fc7\u201cecho\'hello world\'>/dev/globalmem\u201d\u547d\u4ee4\u548c\u201ccat/dev/globalmem\u201d\u547d\u4ee4\u5206\u522b\u9a8c\u8bc1\u8bbe\u5907\u7684\u5199\u548c\u8bfb\uff0c\u7ed3\u679c\u8bc1\u660e\u201chello world\u201d\u5b57\u7b26\u4e32\u88ab\u6b63\u786e\u5730\u5199\u5165\u4e86globalmem\u5b57\u7b26\u8bbe\u5907\uff1a\\r\\n\\r\\n```\\r\\n# echo \\"hello world\\" > /dev/globalmem\\r\\n# cat /dev/globalmem\\r\\nhello world\\r\\n```\\r\\n\\r\\n\u5982\u679c\u542f\u7528\u4e86sysfs\u6587\u4ef6\u7cfb\u7edf\uff0c\u5c06\u53d1\u73b0\u591a\u51fa\u4e86/sys/module/globalmem\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u4e0b\u7684\u6811\u5f62\u7ed3\u6784\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n.\u251c\u2500\u2500\\r\\n coresize\u251c\u2500\u2500\\r\\n holders\u251c\u2500\u2500\\r\\n initsize\u251c\u2500\u2500\\r\\n initstate\u251c\u2500\u2500\\r\\n notes\u251c\u2500\u2500\\r\\n parameters\u2502\\r\\n   \u2514\u2500\u2500\\r\\nglobalmem_major\u251c\u2500\u2500\\r\\n refcnt\u251c\u2500\u2500\\r\\n sections\u2502\\r\\n   \u2514\u2500\u2500\\r\\n __param\u251c\u2500\u2500\\r\\n taint\u2514\u2500\u2500\\r\\n uevent\\r\\n```\\r\\n\\r\\nrefcnt\u8bb0\u5f55\u4e86globalmem\u6a21\u5757\u7684\u5f15\u7528\u8ba1\u6570\uff0csections\u4e0b\u5305\u542b\u7684\u51e0\u4e2a\u6587\u4ef6\u5219\u7ed9\u51fa\u4e86globalmem\u6240\u5305\u542b\u7684BSS\u3001\u6570\u636e\u6bb5\u548c\u4ee3\u7801\u6bb5\u7b49\u7684\u5730\u5740\u53ca\u5176\u4ed6\u4fe1\u606f\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u4ee3\u7801\u6e05\u53556.18\u7ed9\u51fa\u7684\u652f\u6301N\u4e2aglobalmem\u8bbe\u5907\u7684\u9a71\u52a8\uff0c\u5728\u52a0\u8f7d\u6a21\u5757\u540e\u9700\u521b\u5efa\u591a\u4e2a\u8bbe\u5907\u8282\u70b9\uff0c\u5982\u8fd0\u884cmknod/dev/globalmem0c 2300\u4f7f\u5f97/dev/globalmem0\u5bf9\u5e94\u4e3b\u8bbe\u5907\u53f7\u4e3aglobalmem_major\u3001\u6b21\u8bbe\u5907\u53f7\u4e3a0\u7684\u8bbe\u5907\uff0c\u8fd0\u884cmknod/dev/globalmem1c 2301\u4f7f\u5f97/dev/globalmem1\u5bf9\u5e94\u4e3b\u8bbe\u5907\u53f7\u4e3aglobalmem_major\u3001\u6b21\u8bbe\u5907\u53f7\u4e3a1\u7684\u8bbe\u5907\u3002\u5206\u522b\u8bfb\u5199/dev/globalmem0\u548c/dev/globalmem1\uff0c\u53d1\u73b0\u90fd\u8bfb\u5199\u5230\u4e86\u6b63\u786e\u7684\u5bf9\u5e94\u7684\u8bbe\u5907\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA","description":"DMA\u662f\u4e00\u79cd\u65e0\u987bCPU\u7684\u53c2\u4e0e\u5c31\u53ef\u4ee5\u8ba9\u5916\u8bbe\u4e0e\u7cfb\u7edf\u5185\u5b58\u4e4b\u95f4\u8fdb\u884c\u53cc\u5411\u6570\u636e\u4f20\u8f93\u7684\u786c\u4ef6\u673a\u5236\u3002\u4f7f\u7528DMA\u53ef\u4ee5\u4f7f\u7cfb\u7edfCPU\u4ece\u5b9e\u9645\u7684I/O\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6446\u8131\u51fa\u6765\uff0c\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u7cfb\u7edf\u7684\u541e\u5410\u7387\u3002DMA\u901a\u5e38\u4e0e\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\uff0c\u7279\u522b\u662f\u5916\u8bbe\u7684\u603b\u7ebf\u6280\u672f\u5bc6\u5207\u76f8\u5173\u3002","date":"2025-09-15T14:44:14.269Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":17.95,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"6.3.1\u3000\u5934\u6587\u4ef6\u3001\u5b8f\u53ca\u8bbe\u5907\u7ed3\u6784\u4f53","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.3\u3000globalmem\u8bbe\u5907\u9a71\u52a8"},"nextItem":{"title":"13.2.1\u3000block_device_operations\u7ed3\u6784\u4f53","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.2\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784"}},"content":"DMA\u662f\u4e00\u79cd\u65e0\u987bCPU\u7684\u53c2\u4e0e\u5c31\u53ef\u4ee5\u8ba9\u5916\u8bbe\u4e0e\u7cfb\u7edf\u5185\u5b58\u4e4b\u95f4\u8fdb\u884c\u53cc\u5411\u6570\u636e\u4f20\u8f93\u7684\u786c\u4ef6\u673a\u5236\u3002\u4f7f\u7528DMA\u53ef\u4ee5\u4f7f\u7cfb\u7edfCPU\u4ece\u5b9e\u9645\u7684I/O\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u6446\u8131\u51fa\u6765\uff0c\u4ece\u800c\u5927\u5927\u63d0\u9ad8\u7cfb\u7edf\u7684\u541e\u5410\u7387\u3002DMA\u901a\u5e38\u4e0e\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\uff0c\u7279\u522b\u662f\u5916\u8bbe\u7684\u603b\u7ebf\u6280\u672f\u5bc6\u5207\u76f8\u5173\u3002\\r\\n\\r\\nDMA\u65b9\u5f0f\u7684\u6570\u636e\u4f20\u8f93\u7531DMA\u63a7\u5236\u5668\uff08DMAC\uff09\u63a7\u5236\uff0c\u5728\u4f20\u8f93\u671f\u95f4\uff0cCPU\u53ef\u4ee5\u5e76\u53d1\u5730\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002\u5f53DMA\u7ed3\u675f\u540e\uff0cDMAC\u901a\u8fc7\u4e2d\u65ad\u901a\u77e5CPU\u6570\u636e\u4f20\u8f93\u5df2\u7ecf\u7ed3\u675f\uff0c\u7136\u540e\u7531CPU\u6267\u884c\u76f8\u5e94\u7684\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u8fdb\u884c\u540e\u5904\u7406\u3002\\r\\n\\r\\n# 11.6.1\u3000DMA\u4e0eCache\u4e00\u81f4\u6027\\r\\n\\r\\nCache\u548cDMA\u672c\u8eab\u4f3c\u4e4e\u662f\u4e24\u4e2a\u6beb\u4e0d\u76f8\u5173\u7684\u4e8b\u7269\u3002Cache\u88ab\u7528\u4f5cCPU\u9488\u5bf9\u5185\u5b58\u7684\u7f13\u5b58\uff0c\u5229\u7528\u7a0b\u5e8f\u7684\u7a7a\u95f4\u5c40\u90e8\u6027\u548c\u65f6\u95f4\u5c40\u90e8\u6027\u539f\u7406\uff0c\u8fbe\u5230\u8f83\u9ad8\u7684\u547d\u4e2d\u7387\uff0c\u4ece\u800c\u907f\u514dCPU\u6bcf\u6b21\u90fd\u5fc5\u987b\u8981\u4e0e\u76f8\u5bf9\u6162\u901f\u7684\u5185\u5b58\u4ea4\u4e92\u6570\u636e\u6765\u63d0\u9ad8\u6570\u636e\u7684\u8bbf\u95ee\u901f\u7387\u3002DMA\u53ef\u4ee5\u4f5c\u4e3a\u5185\u5b58\u4e0e\u5916\u8bbe\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u5728\u8fd9\u79cd\u4f20\u8f93\u65b9\u5f0f\u4e4b\u4e0b\uff0c\u6570\u636e\u5e76\u4e0d\u9700\u8981\u7ecf\u8fc7CPU\u4e2d\u8f6c\u3002\\r\\n\\r\\nCache\u548cDMA\u672c\u8eab\u4f3c\u4e4e\u662f\u4e24\u4e2a\u6beb\u4e0d\u76f8\u5173\u7684\u4e8b\u7269\u3002Cache\u88ab\u7528\u4f5cCPU\u9488\u5bf9\u5185\u5b58\u7684\u7f13\u5b58\uff0c\u5229\u7528\u7a0b\u5e8f\u7684\u7a7a\u95f4\u5c40\u90e8\u6027\u548c\u65f6\u95f4\u5c40\u90e8\u6027\u539f\u7406\uff0c\u8fbe\u5230\u8f83\u9ad8\u7684\u547d\u4e2d\u7387\uff0c\u4ece\u800c\u907f\u514dCPU\u6bcf\u6b21\u90fd\u5fc5\u987b\u8981\u4e0e\u76f8\u5bf9\u6162\u901f\u7684\u5185\u5b58\u4ea4\u4e92\u6570\u636e\u6765\u63d0\u9ad8\u6570\u636e\u7684\u8bbf\u95ee\u901f\u7387\u3002DMA\u53ef\u4ee5\u4f5c\u4e3a\u5185\u5b58\u4e0e\u5916\u8bbe\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u7684\u65b9\u5f0f\uff0c\u5728\u8fd9\u79cd\u4f20\u8f93\u65b9\u5f0f\u4e4b\u4e0b\uff0c\u6570\u636e\u5e76\u4e0d\u9700\u8981\u7ecf\u8fc7CPU\u4e2d\u8f6c\u3002\\r\\n\\r\\n![1743864132158](./figure/1743864132158.png)\\r\\n\\r\\n\u56fe11.12\u3000DMA\u76ee\u7684\u5730\u5740\u4e0eCache\u5bf9\u8c61\u6ca1\u6709\u91cd\u53e0\\r\\n\\r\\n![1743864150147](./figure/1743864150147.png)\\r\\n\\r\\n\u56fe11.13\u3000DMA\u76ee\u7684\u5730\u5740\u4e0eCache\u5bf9\u8c61\u6709\u91cd\u53e0\\r\\n\\r\\n\u6240\u8c13Cache\u6570\u636e\u4e0e\u5185\u5b58\u6570\u636e\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u662f\u6307\u5728\u91c7\u7528Cache\u7684\u7cfb\u7edf\u4e2d\uff0c\u540c\u6837\u4e00\u4e2a\u6570\u636e\u53ef\u80fd\u65e2\u5b58\u5728\u4e8eCache\u4e2d\uff0c\u4e5f\u5b58\u5728\u4e8e\u4e3b\u5b58\u4e2d\uff0cCache\u4e0e\u4e3b\u5b58\u4e2d\u7684\u6570\u636e\u4e00\u6837\u5219\u5177\u6709\u4e00\u81f4\u6027\uff0c\u6570\u636e\u82e5\u4e0d\u4e00\u6837\u5219\u5177\u6709\u4e0d\u4e00\u81f4\u6027\u3002\\r\\n\\r\\n\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0cCache\u4e0e\u5185\u5b58\u7684\u4e00\u81f4\u6027\u95ee\u9898\u7ecf\u5e38\u88ab\u521d\u5b66\u8005\u9057\u5fd8\u3002\u5728\u53d1\u751fCache\u4e0e\u5185\u5b58\u4e0d\u4e00\u81f4\u6027\u9519\u8bef\u540e\uff0c\u9a71\u52a8\u5c06\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u5982\u679c\u6ca1\u6709\u76f8\u5173\u7684\u80cc\u666f\u77e5\u8bc6\uff0c\u5de5\u7a0b\u5e08\u51e0\u4e4e\u65e0\u6cd5\u5b9a\u4f4d\u9519\u8bef\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8fd9\u65f6\u6240\u6709\u7684\u7a0b\u5e8f\u770b\u8d77\u6765\u90fd\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002Cache\u7684\u4e0d\u4e00\u81f4\u6027\u95ee\u9898\u5e76\u4e0d\u662f\u53ea\u53d1\u751f\u5728DMA\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u9645\u4e0a\uff0c\u5b83\u8fd8\u5b58\u5728\u4e8eCache\u4f7f\u80fd\u548c\u5173\u95ed\u7684\u65f6\u523b\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5e26MMU\u529f\u80fd\u7684ARM\u5904\u7406\u5668\uff0c\u5728\u5f00\u542fMMU\u4e4b\u524d\uff0c\u9700\u8981\u5148\u7f6eCache\u65e0\u6548\uff0c\u5bf9\u4e8eTLB\uff0c\u4e5f\u662f\u5982\u6b64\uff0c\u4ee3\u7801\u6e05\u535511.12\u7ed9\u51fa\u7684\u8fd9\u6bb5\u6c47\u7f16\u53ef\u7528\u6765\u5b8c\u6210\u6b64\u4efb\u52a1\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.12\u3000\u7f6eARM\u7684Cache\u65e0\u6548\\r\\n\\r\\n```\\r\\n1/* \u4f7fcache\u65e0\u6548*/\\r\\n2\\"mov    r0, #0\\\\n\\"\\r\\n3\\"mcr    p15, 0, r0, c7, c7, 0\\\\n\\"     /* \u4f7f\u6570\u636e\u548c\u6307\u4ee4cache\u65e0\u6548*/\\r\\n4\\"mcr    p15, 0, r0, c7, c10, 4\\\\n\\"    /* \u653e\u7a7a\u5199\u7f13\u51b2 */\\r\\n5\\"mcr    p15, 0, r0, c8, c7, 0\\\\n\\"     /* \u4f7fTLB\u65e0\u6548 */\\r\\n```\\r\\n\\r\\n# 11.6.2\u3000Linux\u4e0b\u7684DMA\u7f16\u7a0b\\r\\n\\r\\n\u9996\u5148DMA\u672c\u8eab\u4e0d\u5c5e\u4e8e\u4e00\u79cd\u7b49\u540c\u4e8e\u5b57\u7b26\u8bbe\u5907\u3001\u5757\u8bbe\u5907\u548c\u7f51\u7edc\u8bbe\u5907\u7684\u5916\u8bbe\uff0c\u5b83\u53ea\u662f\u4e00\u79cd\u5916\u8bbe\u4e0e\u5185\u5b58\u4ea4\u4e92\u6570\u636e\u7684\u65b9\u5f0f\u3002\u56e0\u6b64\uff0c\u672c\u8282\u7684\u6807\u9898\u4e0d\u662f\u201cLinux\u4e0b\u7684DMA\u9a71\u52a8\u201d\u800c\u662f\u201cLinux\u4e0b\u7684DMA\u7f16\u7a0b\u201d\u3002\\r\\n\\r\\n\u5185\u5b58\u4e2d\u7528\u4e8e\u4e0e\u5916\u8bbe\u4ea4\u4e92\u6570\u636e\u7684\u4e00\u5757\u533a\u57df\u79f0\u4e3aDMA\u7f13\u51b2\u533a\uff0c\u5728\u8bbe\u5907\u4e0d\u652f\u6301scatter/gather\uff08\u5206\u6563/\u805a\u96c6\uff0c\u7b80\u79f0SG\uff09\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0cDMA\u7f13\u51b2\u533a\u5728\u7269\u7406\u4e0a\u5fc5\u987b\u662f\u8fde\u7eed\u7684\u3002\\r\\n\\r\\n## 1.DMA\u533a\u57df\\r\\n\\r\\n\u5bf9\u4e8ex86\u7cfb\u7edf\u7684ISA\u8bbe\u5907\u800c\u8a00\uff0c\u5176DMA\u64cd\u4f5c\u53ea\u80fd\u572816MB\u4ee5\u4e0b\u7684\u5185\u5b58\u4e2d\u8fdb\u884c\uff0c\u56e0\u6b64\uff0c\u5728\u4f7f\u7528kmalloc\uff08\uff09\u3001__get_free_pages\uff08\uff09\u53ca\u5176\u7c7b\u4f3c\u51fd\u6570\u7533\u8bf7DMA\u7f13\u51b2\u533a\u65f6\u5e94\u4f7f\u7528GFP_DMA\u6807\u5fd7\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u83b7\u5f97\u7684\u5185\u5b58\u4f4d\u4e8eDMA\u533a\u57df\u4e2d\uff0c\u5e76\u5177\u5907DMA\u80fd\u529b\u3002\\r\\n\\r\\n\u5728\u5185\u6838\u4e2d\u5b9a\u4e49\u4e86__get_free_pages\uff08\uff09\u9488\u5bf9DMA\u7684\u201c\u5feb\u6377\u65b9\u5f0f\u201d__get_dma_pages\uff08\uff09\uff0c\u5b83\u5728\u7533\u8bf7\u6807\u5fd7\u4e2d\u6dfb\u52a0\u4e86GFP_DMA\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\n#define _ _get_dma_pages(gfp_mask, order) \\\\\\r\\n        __get_free_pages((gfp_mask) | GFP_DMA,(order))\\r\\n```\\r\\n\\r\\n\u5982\u679c\u4e0d\u60f3\u4f7f\u7528log2size\uff08\u5373order\uff09\u4e3a\u53c2\u6570\u7533\u8bf7DMA\u5185\u5b58\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u53e6\u4e00\u4e2a\u51fd\u6570dma_mem_alloc\uff08\uff09\uff0c\u5176\u6e90\u4ee3\u7801\u5982\u4ee3\u7801\u6e05\u535511.13\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.13\u3000dma_mem_alloc\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n1static unsigned long dma_mem_alloc(int size)\\r\\n2{\\r\\n3  int order = get_order(size);        /* \u5927\u5c0f->\u6307\u6570*/\\r\\n4  return _ _get_dma_pages(GFP_KERNEL, order);\\r\\n5}\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8e\u5927\u591a\u6570\u73b0\u4ee3\u5d4c\u5165\u5f0f\u5904\u7406\u5668\u800c\u8a00\uff0cDMA\u64cd\u4f5c\u53ef\u4ee5\u5728\u6574\u4e2a\u5e38\u89c4\u5185\u5b58\u533a\u57df\u8fdb\u884c\uff0c\u56e0\u6b64DMA\u533a\u57df\u5c31\u76f4\u63a5\u8986\u76d6\u4e86\u5e38\u89c4\u5185\u5b58\u3002\\r\\n\\r\\n## 2.\u865a\u62df\u5730\u5740\u3001\u7269\u7406\u5730\u5740\u548c\u603b\u7ebf\u5730\u5740\\r\\n\\r\\n\u57fa\u4e8eDMA\u7684\u786c\u4ef6\u4f7f\u7528\u7684\u662f\u603b\u7ebf\u5730\u5740\u800c\u4e0d\u662f\u7269\u7406\u5730\u5740\uff0c\u603b\u7ebf\u5730\u5740\u662f\u4ece\u8bbe\u5907\u89d2\u5ea6\u4e0a\u770b\u5230\u7684\u5185\u5b58\u5730\u5740\uff0c\u7269\u7406\u5730\u5740\u5219\u662f\u4eceCPU MMU\u63a7\u5236\u5668\u5916\u56f4\u89d2\u5ea6\u4e0a\u770b\u5230\u7684\u5185\u5b58\u5730\u5740\uff08\u4eceCPU\u6838\u89d2\u5ea6\u770b\u5230\u7684\u662f\u865a\u62df\u5730\u5740\uff09\u3002\u867d\u7136\u5728PC\u4e0a\uff0c\u5bf9\u4e8eISA\u548cPCI\u800c\u8a00\uff0c\u603b\u7ebf\u5730\u5740\u5373\u4e3a\u7269\u7406\u5730\u5740\uff0c\u4f46\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5e73\u53f0\u90fd\u662f\u5982\u6b64\u3002\u56e0\u4e3a\u6709\u65f6\u5019\u63a5\u53e3\u603b\u7ebf\u901a\u8fc7\u6865\u63a5\u7535\u8def\u8fde\u63a5\uff0c\u6865\u63a5\u7535\u8def\u4f1a\u5c06I/O\u5730\u5740\u6620\u5c04\u4e3a\u4e0d\u540c\u7684\u7269\u7406\u5730\u5740\u3002\u4f8b\u5982\uff0c\u5728PReP\uff08PowerPC Reference Platform\uff09\u7cfb\u7edf\u4e2d\uff0c\u7269\u7406\u5730\u57400\u5728\u8bbe\u5907\u7aef\u770b\u8d77\u6765\u662f0x80000000\uff0c\u800c0\u901a\u5e38\u53c8\u88ab\u6620\u5c04\u4e3a\u865a\u62df\u5730\u57400xC0000000\uff0c\u6240\u4ee5\u540c\u4e00\u5730\u5740\u5c31\u5177\u5907\u4e86\u4e09\u91cd\u8eab\u4efd\uff1a\u7269\u7406\u5730\u57400\u3001\u603b\u7ebf\u5730\u57400x80000000\u53ca\u865a\u62df\u5730\u57400xC0000000\u3002\u8fd8\u6709\u4e00\u4e9b\u7cfb\u7edf\u63d0\u4f9b\u4e86\u9875\u9762\u6620\u5c04\u673a\u5236\uff0c\u5b83\u80fd\u5c06\u4efb\u610f\u7684\u9875\u9762\u6620\u5c04\u4e3a\u8fde\u7eed\u7684\u5916\u8bbe\u603b\u7ebf\u5730\u5740\u3002\u5185\u6838\u63d0\u4f9b\u4e86\u5982\u4e0b\u51fd\u6570\u4ee5\u8fdb\u884c\u7b80\u5355\u7684\u865a\u62df\u5730\u5740/\u603b\u7ebf\u5730\u5740\u8f6c\u6362\uff1a\\r\\n\\r\\n```\\r\\nunsigned long virt_to_bus(volatile void *address);\\r\\nvoid *bus_to_virt(unsigned long address);\\r\\n```\\r\\n\\r\\n\u5728\u4f7f\u7528IOMMU\u6216\u53cd\u5f39\u7f13\u51b2\u533a\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0a\u8ff0\u51fd\u6570\u4e00\u822c\u4e0d\u4f1a\u6b63\u5e38\u5de5\u4f5c\u3002\u800c\u4e14\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5e76\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002\u5982\u56fe11.14\u6240\u793a\uff0cIOMMU\u7684\u5de5\u4f5c\u539f\u7406\u4e0eCPU\u5185\u7684MMU\u975e\u5e38\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u9488\u5bf9\u7684\u662f\u5916\u8bbe\u603b\u7ebf\u5730\u5740\u548c\u5185\u5b58\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u5316\u3002\u7531\u4e8eIOMMU\u53ef\u4ee5\u4f7f\u5f97\u5916\u8bbeDMA\u5f15\u64ce\u770b\u5230\u201c\u865a\u62df\u5730\u5740\u201d\uff0c\u56e0\u6b64\u5728\u4f7f\u7528IOMMU\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u4fee\u6539\u6620\u5c04\u5bc4\u5b58\u5668\u540e\uff0c\u53ef\u4ee5\u4f7f\u5f97SG\u4e2d\u5206\u6bb5\u7684\u7f13\u51b2\u533a\u5730\u5740\u5bf9\u5916\u8bbe\u53d8\u5f97\u8fde\u7eed\u3002\\r\\n\\r\\n![1743864403446](./figure/1743864403446.png)\\r\\n\\r\\n\u56fe11.14\u3000MMU\u4e0eIOMMU\\r\\n\\r\\n## 3.DMA\u5730\u5740\u63a9\u7801\\r\\n\\r\\n\u8bbe\u5907\u5e76\u4e0d\u4e00\u5b9a\u80fd\u5728\u6240\u6709\u7684\u5185\u5b58\u5730\u5740\u4e0a\u6267\u884cDMA\u64cd\u4f5c\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5e94\u8be5\u901a\u8fc7\u4e0b\u5217\u51fd\u6570\u6267\u884cDMA\u5730\u5740\u63a9\u7801\uff1a\\r\\n\\r\\n```\\r\\nint dma_set_mask(struct device *dev, u64 mask);\\r\\n```\\r\\n\\r\\n\u4f8b\u5982\uff0c\u5bf9\u4e8e\u53ea\u80fd\u572824\u4f4d\u5730\u5740\u4e0a\u6267\u884cDMA\u64cd\u4f5c\u7684\u8bbe\u5907\u800c\u8a00\uff0c\u5c31\u5e94\u8be5\u8c03\u7528dma_set_mask\uff08dev\uff0c0xffffff\uff09\u3002\\r\\n\\r\\n\u5176\u5b9e\u8be5API\u672c\u8d28\u4e0a\u5c31\u662f\u4fee\u6539device\u7ed3\u6784\u4f53\u4e2d\u7684dma_mask\u6210\u5458\uff0c\u5982ARM\u5e73\u53f0\u7684\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint arm_dma_set_mask(struct device *dev, u64 dma_mask)\\r\\n{\\r\\n        if (!dev->dma_mask || !dma_supported(dev, dma_mask))\\r\\n                return -EIO;\\r\\n        *dev->dma_mask = dma_mask;\\r\\n        return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728device\u7ed3\u6784\u4f53\u4e2d\uff0c\u9664\u4e86\u6709dma_mask\u4ee5\u5916\uff0c\u8fd8\u6709\u4e00\u4e2acoherent_dma_mask\u6210\u5458\u3002dma_mask\u662f\u8bbe\u5907DMA\u53ef\u4ee5\u5bfb\u5740\u7684\u8303\u56f4\uff0c\u800ccoherent_dma_mask\u4f5c\u7528\u4e8e\u7533\u8bf7\u4e00\u81f4\u6027\u7684DMA\u7f13\u51b2\u533a\u3002\\r\\n\\r\\n## 4.\u4e00\u81f4\u6027DMA\u7f13\u51b2\u533a\\r\\n\\r\\nDMA\u6620\u5c04\u5305\u62ec\u4e24\u4e2a\u65b9\u9762\u7684\u5de5\u4f5c\uff1a\u5206\u914d\u4e00\u7247DMA\u7f13\u51b2\u533a\uff1b\u4e3a\u8fd9\u7247\u7f13\u51b2\u533a\u4ea7\u751f\u8bbe\u5907\u53ef\u8bbf\u95ee\u7684\u5730\u5740\u3002\u540c\u65f6\uff0cDMA\u6620\u5c04\u4e5f\u5fc5\u987b\u8003\u8651Cache\u4e00\u81f4\u6027\u95ee\u9898\u3002\u5185\u6838\u4e2d\u63d0\u4f9b\u4e86\u5982\u4e0b\u51fd\u6570\u4ee5\u5206\u914d\u4e00\u4e2aDMA\u4e00\u81f4\u6027\u7684\u5185\u5b58\u533a\u57df\uff1a\\r\\n\\r\\n```\\r\\nvoid * dma_alloc_coherent(struct device *dev, size_t size, dma_addr_t *handle,\\r\\n    gfp_t gfp);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3a\u7533\u8bf7\u5230\u7684DMA\u7f13\u51b2\u533a\u7684\u865a\u62df\u5730\u5740\uff0c\u6b64\u5916\uff0c\u8be5\u51fd\u6570\u8fd8\u901a\u8fc7\u53c2\u6570handle\u8fd4\u56deDMA\u7f13\u51b2\u533a\u7684\u603b\u7ebf\u5730\u5740\u3002handle\u7684\u7c7b\u578b\u4e3adma_addr_t\uff0c\u4ee3\u8868\u7684\u662f\u603b\u7ebf\u5730\u5740\u3002\\r\\n\\r\\ndma_alloc_coherent\uff08\uff09\u7533\u8bf7\u4e00\u7247DMA\u7f13\u51b2\u533a\uff0c\u4ee5\u8fdb\u884c\u5730\u5740\u6620\u5c04\u5e76\u4fdd\u8bc1\u8be5\u7f13\u51b2\u533a\u7684Cache\u4e00\u81f4\u6027\u3002\u4e0edma_alloc_coherent\uff08\uff09\u5bf9\u5e94\u7684\u91ca\u653e\u51fd\u6570\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid dma_free_coherent(struct device *dev, size_t size, void *cpu_addr,\\r\\n    dma_addr_t handle);\\r\\n```\\r\\n\\r\\n\u4ee5\u4e0b\u51fd\u6570\u7528\u4e8e\u5206\u914d\u4e00\u4e2a\u5199\u5408\u5e76\uff08Writecombining\uff09\u7684DMA\u7f13\u51b2\u533a\uff1a\\r\\n\\r\\n```\\r\\nvoid * dma_alloc_writecombine(struct device *dev, size_t size, dma_addr_t\\r\\n    *handle, gfp_t gfp);\\r\\n```\\r\\n\\r\\n\u4e0edma_alloc_writecombine\uff08\uff09\u5bf9\u5e94\u7684\u91ca\u653e\u51fd\u6570dma_free_writecombine\uff08\uff09\u5b9e\u9645\u4e0a\u5c31\u662fdma_free_coherent\uff08\uff09\uff0c\u5b83\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define dma_free_writecombine(dev,size,cpu_addr,handle) \\\\\\r\\n         dma_free_coherent(dev,size,cpu_addr,handle)\\r\\n```\\r\\n\\r\\n\u6b64\u5916\uff0cLinux\u5185\u6838\u8fd8\u63d0\u4f9b\u4e86PCI\u8bbe\u5907\u7533\u8bf7DMA\u7f13\u51b2\u533a\u7684\u51fd\u6570pci_alloc_consistent\uff08\uff09\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid * pci_alloc_consistent(struct pci_dev *pdev, size_t size, dma_addr_t *dma_addrp);\\r\\n```\\r\\n\\r\\n\u5bf9\u5e94\u7684\u91ca\u653e\u51fd\u6570\u4e3apci_free_consistent\uff08\uff09\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid pci_free_consistent(struct pci_dev *pdev, size_t size, void *cpu_addr,\\r\\n    dma_addr_t dma_addr);\\r\\n```\\r\\n\\r\\n\u8fd9\u91cc\u6211\u4eec\u8981\u5f3a\u8c03\u7684\u662f\uff0cdma_alloc_xxx\uff08\uff09\u51fd\u6570\u867d\u7136\u662f\u4ee5dma_alloc_\u5f00\u5934\u7684\uff0c\u4f46\u662f\u5176\u7533\u8bf7\u7684\u533a\u57df\u4e0d\u4e00\u5b9a\u5728DMA\u533a\u57df\u91cc\u9762\u3002\u4ee532\u4f4dARM\u5904\u7406\u5668\u4e3a\u4f8b\uff0c\u5f53coherent_dma_mask\u5c0f\u4e8e0xffffffff\u65f6\uff0c\u624d\u4f1a\u8bbe\u7f6eGFP_DMA\u6807\u8bb0\uff0c\u5e76\u4eceDMA\u533a\u57df\u53bb\u7533\u8bf7\u5185\u5b58\u3002\\r\\n\\r\\n\u5728\u6211\u4eec\u4f7f\u7528ARM\u7b49\u5d4c\u5165\u5f0fLinux\u7cfb\u7edf\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u5934\u75bc\u7684\u95ee\u9898\u662fGPU\u3001Camera\u3001HDMI\u7b49\u90fd\u9700\u8981\u9884\u7559\u5927\u91cf\u8fde\u7eed\u5185\u5b58\uff0c\u8fd9\u90e8\u5206\u5185\u5b58\u5e73\u65f6\u4e0d\u7528\uff0c\u4f46\u662f\u4e00\u822c\u7684\u505a\u6cd5\u53c8\u5fc5\u987b\u5148\u9884\u7559\u7740\u3002\u76ee\u524d\uff0cMarek Szyprowski\u548cMichal Nazarewicz\u5b9e\u73b0\u4e86\u4e00\u5957\u5168\u65b0\u7684CMA\uff0c\uff08Contiguous Memory Allocator\uff09\u3002\u901a\u8fc7\u8fd9\u5957\u673a\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230\u4e0d\u9884\u7559\u5185\u5b58\uff0c\u8fd9\u4e9b\u5185\u5b58\u5e73\u65f6\u662f\u53ef\u7528\u7684\uff0c\u53ea\u6709\u5f53\u9700\u8981\u7684\u65f6\u5019\u624d\u88ab\u5206\u914d\u7ed9Camera\u3001HDMI\u7b49\u8bbe\u5907\u3002\\r\\n\\r\\nCMA\u5bf9\u4e0a\u5448\u73b0\u7684\u63a5\u53e3\u662f\u6807\u51c6\u7684DMA\uff0c\u4e5f\u662f\u4e00\u81f4\u6027\u7f13\u51b2\u533aAPI\u3002\u5173\u4e8eCMA\u7684\u8fdb\u4e00\u6b65\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u53c2\u8003http://lwn.net/Articles/486301/ \u7684\u6587\u6863\u300aA deep dive into CMA\u300b\u3002\\r\\n\\r\\n## 5.\u6d41\u5f0fDMA\u6620\u5c04\\r\\n\\r\\n\u5e76\u4e0d\u662f\u6240\u6709\u7684DMA\u7f13\u51b2\u533a\u90fd\u662f\u9a71\u52a8\u7533\u8bf7\u7684\uff0c\u5982\u679c\u662f\u9a71\u52a8\u7533\u8bf7\u7684\uff0c\u7528\u4e00\u81f4\u6027DMA\u7f13\u51b2\u533a\u81ea\u7136\u6700\u65b9\u4fbf\uff0c\u8fd9\u76f4\u63a5\u8003\u8651\u4e86Cache\u4e00\u81f4\u6027\u95ee\u9898\u3002\u4f46\u662f\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u7f13\u51b2\u533a\u6765\u81ea\u5185\u6838\u7684\u8f83\u4e0a\u5c42\uff08\u5982\u7f51\u5361\u9a71\u52a8\u4e2d\u7684\u7f51\u7edc\u62a5\u6587\u3001\u5757\u8bbe\u5907\u9a71\u52a8\u4e2d\u8981\u5199\u5165\u8bbe\u5907\u7684\u6570\u636e\u7b49\uff09\uff0c\u4e0a\u5c42\u5f88\u53ef\u80fd\u7528\u666e\u901a\u7684kmalloc\uff08\uff09\u3001__get_free_pages\uff08\uff09\u7b49\u65b9\u6cd5\u7533\u8bf7\uff0c\u8fd9\u65f6\u5019\u5c31\u8981\u4f7f\u7528\u6d41\u5f0fDMA\u6620\u5c04\u3002\u6d41\u5f0fDMA\u7f13\u51b2\u533a\u4f7f\u7528\u7684\u4e00\u822c\u6b65\u9aa4\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u8fdb\u884c\u6d41\u5f0fDMA\u6620\u5c04\u3002\\r\\n\\r\\n2\uff09\u6267\u884cDMA\u64cd\u4f5c\u3002\\r\\n\\r\\n3\uff09\u8fdb\u884c\u6d41\u5f0fDMA\u53bb\u6620\u5c04\u3002\\r\\n\\r\\n\u6d41\u5f0fDMA\u6620\u5c04\u64cd\u4f5c\u5728\u672c\u8d28\u4e0a\u5927\u591a\u5c31\u662f\u8fdb\u884cCache\u7684\u4f7f\u65e0\u6548\u6216\u6e05\u9664\u64cd\u4f5c\uff0c\u4ee5\u89e3\u51b3Cache\u4e00\u81f4\u6027\u95ee\u9898\u3002\\r\\n\\r\\n\u76f8\u5bf9\u4e8e\u4e00\u81f4\u6027DMA\u6620\u5c04\u800c\u8a00\uff0c\u6d41\u5f0fDMA\u6620\u5c04\u7684\u63a5\u53e3\u8f83\u4e3a\u590d\u6742\u3002\u5bf9\u4e8e\u5355\u4e2a\u5df2\u7ecf\u5206\u914d\u7684\u7f13\u51b2\u533a\u800c\u8a00\uff0c\u4f7f\u7528dma_map_single\uff08\uff09\u53ef\u5b9e\u73b0\u6d41\u5f0fDMA\u6620\u5c04\uff0c\u8be5\u51fd\u6570\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ndma_addr_t dma_map_single(struct device *dev, void *buffer, size_t size,\\r\\nenum dma_data_direction direction);\\r\\n```\\r\\n\\r\\n\u5982\u679c\u6620\u5c04\u6210\u529f\uff0c\u8fd4\u56de\u7684\u662f\u603b\u7ebf\u5730\u5740\uff0c\u5426\u5219\uff0c\u8fd4\u56deNULL\u3002\u7b2c4\u4e2a\u53c2\u6570\u4e3aDMA\u7684\u65b9\u5411\uff0c\u53ef\u80fd\u7684\u503c\u5305\u62ecDMA_TO_DEVICE\u3001DMA_FROM_DEVICE\u3001DMA_BIDIRECTIONAL\u548cDMA_NONE\u3002\\r\\n\\r\\ndma_map_single\uff08\uff09\u7684\u53cd\u51fd\u6570\u4e3adma_unmap_single\uff08\uff09\uff0c\u539f\u578b\u662f\uff1a\\r\\n\\r\\n```\\r\\nvoid dma_unmap_single(struct device *dev, dma_addr_t dma_addr, size_t size,\\r\\nenum dma_data_direction direction);\\r\\n```\\r\\n\\r\\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u8bbe\u5907\u9a71\u52a8\u4e0d\u5e94\u8be5\u8bbf\u95eeunmap\u7684\u6d41\u5f0fDMA\u7f13\u51b2\u533a\uff0c\u5982\u679c\u4e00\u5b9a\u8981\u8fd9\u4e48\u505a\uff0c\u53ef\u5148\u4f7f\u7528\u5982\u4e0b\u51fd\u6570\u83b7\u5f97DMA\u7f13\u51b2\u533a\u7684\u62e5\u6709\u6743\uff1a\\r\\n\\r\\n```\\r\\nvoid dma_sync_single_for_cpu(struct device *dev, dma_handle_t bus_addr,\\r\\nsize_t size, enum dma_data_direction direction);\\r\\n```\\r\\n\\r\\n\u5728\u9a71\u52a8\u8bbf\u95ee\u5b8cDMA\u7f13\u51b2\u533a\u540e\uff0c\u5e94\u8be5\u5c06\u5176\u6240\u6709\u6743\u8fd4\u8fd8\u7ed9\u8bbe\u5907\uff0c\u8fd9\u53ef\u901a\u8fc7\u5982\u4e0b\u51fd\u6570\u5b8c\u6210\uff1a\\r\\n\\r\\n```\\r\\nvoid dma_sync_single_for_device(struct device *dev, dma_handle_t bus_addr,\\r\\nsize_t size, enum dma_data_direction direction);\\r\\n```\\r\\n\\r\\n\u5982\u679c\u8bbe\u5907\u8981\u6c42\u8f83\u5927\u7684DMA\u7f13\u51b2\u533a\uff0c\u5728\u5176\u652f\u6301SG\u6a21\u5f0f\u7684\u60c5\u51b5\u4e0b\uff0c\u7533\u8bf7\u591a\u4e2a\u76f8\u5bf9\u8f83\u5c0f\u7684\u4e0d\u8fde\u7eed\u7684DMA\u7f13\u51b2\u533a\u901a\u5e38\u662f\u9632\u6b62\u7533\u8bf7\u592a\u5927\u7684\u8fde\u7eed\u7269\u7406\u7a7a\u95f4\u7684\u65b9\u6cd5\u3002\u5728Linux\u5185\u6838\u4e2d\uff0c\u4f7f\u7528\u5982\u4e0b\u51fd\u6570\u6620\u5c04SG\uff1a\\r\\n\\r\\n```\\r\\nint dma_map_sg(struct device *dev, struct scatterlist *sg, int nents,\\r\\nenum dma_data_direction direction);\\r\\n```\\r\\n\\r\\nnents\u662f\u6563\u5217\u8868\uff08scatterlist\uff09\u5165\u53e3\u7684\u6570\u91cf\uff0c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662fDMA\u7f13\u51b2\u533a\u7684\u6570\u91cf\uff0c\u53ef\u80fd\u5c0f\u4e8enents\u3002\u5bf9\u4e8escatterlist\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\uff0cdma_map_sg\uff08\uff09\u4e3a\u8bbe\u5907\u4ea7\u751f\u6070\u5f53\u7684\u603b\u7ebf\u5730\u5740\uff0c\u5b83\u4f1a\u5408\u5e76\u7269\u7406\u4e0a\u4e34\u8fd1\u7684\u5185\u5b58\u533a\u57df\u3002\\r\\n\\r\\nscatterlist\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535511.14\u6240\u793a\uff0c\u5b83\u5305\u542b\u4e86\u4e0escatterlist\u5bf9\u5e94\u7684\u9875\u7ed3\u6784\u4f53\u6307\u9488\u3001\u7f13\u51b2\u533a\u5728\u9875\u4e2d\u7684\u504f\u79fb\uff08offset\uff09\u3001\u7f13\u51b2\u533a\u957f\u5ea6\uff08length\uff09\u4ee5\u53ca\u603b\u7ebf\u5730\u5740\uff08dma_address\uff09\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.14\u3000scatterlist\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct scatterlist {\\r\\n 2#ifdef CONFIG_DEBUG_SG\\r\\n 3       unsigned long   sg_magic;\\r\\n 4#endif\\r\\n 5       unsigned long   page_link;\\r\\n 6       unsigned int    offset;\\r\\n 7       unsigned int    length;\\r\\n 8       dma_addr_t      dma_address;\\r\\n 9#ifdef CONFIG_NEED_SG_DMA_LENGTH\\r\\n10       unsigned int    dma_length;\\r\\n11#endif\\r\\n12};\\r\\n```\\r\\n\\r\\n\u6267\u884cdma_map_sg\uff08\uff09\u540e\uff0c\u901a\u8fc7sg_dma_address\uff08\uff09\u53ef\u8fd4\u56descatterlist\u5bf9\u5e94\u7f13\u51b2\u533a\u7684\u603b\u7ebf\u5730\u5740\uff0csg_dma_len\uff08\uff09\u53ef\u8fd4\u56descatterlist\u5bf9\u5e94\u7f13\u51b2\u533a\u7684\u957f\u5ea6\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ndma_addr_t sg_dma_address(struct scatterlist *sg);\\r\\nunsigned int sg_dma_len(struct scatterlist *sg);\\r\\n```\\r\\n\\r\\n\u5728DMA\u4f20\u8f93\u7ed3\u675f\u540e\uff0c\u53ef\u901a\u8fc7dma_map_sg\uff08\uff09\u7684\u53cd\u51fd\u6570dma_unmap_sg\uff08\uff09\u9664\u53bbDMA\u6620\u5c04\uff1a\\r\\n\\r\\n```\\r\\nvoid dma_unmap_sg(struct device *dev, struct scatterlist *list,\\r\\nint nents, enum dma_data_direction direction);\\r\\n```\\r\\n\\r\\nSG\u6620\u5c04\u5c5e\u4e8e\u6d41\u5f0fDMA\u6620\u5c04\uff0c\u4e0e\u5355\u4e00\u7f13\u51b2\u533a\u60c5\u51b5\u4e0b\u7684\u6d41\u5f0fDMA\u6620\u5c04\u7c7b\u4f3c\uff0c\u5982\u679c\u8bbe\u5907\u9a71\u52a8\u4e00\u5b9a\u8981\u8bbf\u95ee\u6620\u5c04\u60c5\u51b5\u4e0b\u7684SG\u7f13\u51b2\u533a\uff0c\u5e94\u8be5\u5148\u8c03\u7528\u5982\u4e0b\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nvoid dma_sync_sg_for_cpu(struct device *dev, struct scatterlist *sg,\\r\\nint nents, enum dma_data_direction direction);\\r\\n```\\r\\n\\r\\n\u8bbf\u95ee\u5b8c\u540e\uff0c\u901a\u8fc7\u4e0b\u5217\u51fd\u6570\u5c06\u6240\u6709\u6743\u8fd4\u56de\u7ed9\u8bbe\u5907\uff1a\\r\\n\\r\\n```\\r\\nvoid dma_sync_sg_for_device(struct device *dev, struct scatterlist *sg,\\r\\nint nents, enum dma_data_direction direction);\\r\\n```\\r\\n\\r\\n\u5728Linux\u7cfb\u7edf\u4e2d\u53ef\u4ee5\u7528\u4e00\u4e2a\u76f8\u5bf9\u7b80\u5355\u7684\u65b9\u6cd5\u9884\u5148\u5206\u914d\u7f13\u51b2\u533a\uff0c\u90a3\u5c31\u662f\u540c\u6b65\u201cmem=\u201d\u53c2\u6570\u9884\u7559\u5185\u5b58\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5185\u5b58\u4e3a64MB\u7684\u7cfb\u7edf\uff0c\u901a\u8fc7\u7ed9\u5176\u4f20\u9012mem=62MB\u547d\u4ee4\u884c\u53c2\u6570\u53ef\u4ee5\u4f7f\u5f97\u9876\u90e8\u76842MB\u5185\u5b58\u88ab\u9884\u7559\u51fa\u6765\u4f5c\u4e3aI/O\u5185\u5b58\u4f7f\u7528\uff0c\u8fd92MB\u5185\u5b58\u53ef\u4ee5\u88ab\u9759\u6001\u6620\u5c04\uff0c\u4e5f\u53ef\u4ee5\u88ab\u6267\u884cioremap\uff08\uff09\u3002\\r\\n\\r\\n## 6.dmaengine\u6807\u51c6API\\r\\n\\r\\nLinux\u5185\u6838\u76ee\u524d\u63a8\u8350\u4f7f\u7528dmaengine\u7684\u9a71\u52a8\u67b6\u6784\u6765\u7f16\u5199DMA\u63a7\u5236\u5668\u7684\u9a71\u52a8\uff0c\u540c\u65f6\u5916\u8bbe\u7684\u9a71\u52a8\u4f7f\u7528\u6807\u51c6\u7684dmaengine API\u8fdb\u884cDMA\u7684\u51c6\u5907\u3001\u53d1\u8d77\u548c\u5b8c\u6210\u65f6\u7684\u56de\u8c03\u5de5\u4f5c\u3002\\r\\n\\r\\n\u548c\u4e2d\u65ad\u4e00\u6837\uff0c\u5728\u4f7f\u7528DMA\u4e4b\u524d\uff0c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u9700\u9996\u5148\u5411dmaengine\u7cfb\u7edf\u7533\u8bf7DMA\u901a\u9053\uff0c\u7533\u8bf7DMA\u901a\u9053\u7684\u51fd\u6570\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nstruct dma_chan *dma_request_slave_channel(struct device *dev, const char *name);\\r\\nstruct dma_chan *__dma_request_channel(const dma_cap_mask_t *mask,\\r\\n                                         dma_filter_fn fn, void *fn_param);\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u5b8cDMA\u901a\u9053\u540e\uff0c\u5e94\u8be5\u5229\u7528\u5982\u4e0b\u51fd\u6570\u91ca\u653e\u8be5\u901a\u9053\uff1a\\r\\n\\r\\n```\\r\\nvoid dma_release_channel(struct dma_chan *chan);\\r\\n```\\r\\n\\r\\n\u4e4b\u540e\uff0c\u4e00\u822c\u901a\u8fc7\u5982\u4ee3\u7801\u6e05\u535511.15\u7684\u65b9\u6cd5\u521d\u59cb\u5316\u5e76\u53d1\u8d77\u4e00\u6b21DMA\u64cd\u4f5c\u3002\u5b83\u901a\u8fc7dmaengine_prep_slave_single\uff08\uff09\u51c6\u5907\u597d\u4e00\u4e9bDMA\u63cf\u8ff0\u7b26\uff0c\u5e76\u586b\u5145\u5176\u5b8c\u6210\u56de\u8c03\u4e3axxx_dma_fini_callback\uff08\uff09\uff0c\u4e4b\u540e\u901a\u8fc7dmaengine_submit\uff08\uff09\u628a\u8fd9\u4e2a\u63cf\u8ff0\u7b26\u63d2\u5165\u961f\u5217\uff0c\u518d\u901a\u8fc7dma_async_issue_pending\uff08\uff09\u53d1\u8d77\u8fd9\u6b21DMA\u52a8\u4f5c\u3002DMA\u5b8c\u6210\u540e\uff0cxxx_dma_fini_callback\uff08\uff09\u51fd\u6570\u4f1a\u88abdmaengine\u9a71\u52a8\u81ea\u52a8\u8c03\u7528\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535511.15\u3000\u5229\u7528dmaengine API\u53d1\u8d77\u4e00\u6b21DMA\u64cd\u4f5c\\r\\n\\r\\n```\\r\\n 1static void xxx_dma_fini_callback(void *data)\\r\\n 2{\\r\\n 3        struct completion *dma_complete = data;\\r\\n 4\\r\\n 5        complete(dma_complete);\\r\\n 6}\\r\\n 7\\r\\n 8issue_xxx_dma(...)\\r\\n 9{\\r\\n10      rx_desc = dmaengine_prep_slave_single(xxx->rx_chan,\\r\\n11              xxx->dst_start, t->len, DMA_DEV_TO_MEM,\\r\\n12              DMA_PREP_INTERRUPT | DMA_CTRL_ACK);\\r\\n13      rx_desc->callback = xxx_dma_fini_callback;\\r\\n14      rx_desc->callback_param = &xxx->rx_done;\\r\\n15\\r\\n16      dmaengine_submit(rx_desc);\\r\\n17      dma_async_issue_pending(xxx->rx_chan);\\r\\n18}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.2\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.2\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.2\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.2\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784.md","title":"13.2.1\u3000block_device_operations\u7ed3\u6784\u4f53","description":"\u5728\u5757\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u6709\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2dfileoperations\u7ed3\u6784\u4f53\u7684blockdevice_operations\u7ed3\u6784\u4f53\uff0c\u5b83\u662f\u5bf9\u5757\u8bbe\u5907\u64cd\u4f5c\u7684\u96c6\u5408\uff0c\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535513.1\u6240\u793a\u3002","date":"2025-09-15T14:44:14.265Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":15.725,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/11.6\u3000DMA"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7"}},"content":"\u5728\u5757\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u6709\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2dfile_operations\u7ed3\u6784\u4f53\u7684block_device_operations\u7ed3\u6784\u4f53\uff0c\u5b83\u662f\u5bf9\u5757\u8bbe\u5907\u64cd\u4f5c\u7684\u96c6\u5408\uff0c\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535513.1\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.1\u3000block_device_operations\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct block_device_operations {\\r\\n 2       int (*open) (struct block_device *, fmode_t);\\r\\n 3       void (*release) (struct gendisk *, fmode_t);\\r\\n 4       int (*rw_page)(struct block_device *, sector_t, struct page *, int rw);\\r\\n 5       int (*ioctl) (struct block_device *, fmode_t, unsigned, unsigned long);\\r\\n 6       int (*compat_ioctl) (struct block_device *, fmode_t, unsigned, unsigned long);\\r\\n 7       int (*direct_access) (struct block_device *, sector_t,\\r\\n 8                                         void **, unsigned long *);\\r\\n 9       unsigned int (*check_events) (struct gendisk *disk,\\r\\n10                                unsigned int clearing);\\r\\n11       /* ->media_changed() is DEPRECATED, use ->check_events() instead */\\r\\n12       int (*media_changed) (struct gendisk *);\\r\\n13       void (*unlock_native_capacity) (struct gendisk *);\\r\\n14       int (*revalidate_disk) (struct gendisk *);\\r\\n15       int (*getgeo)(struct block_device *, struct hd_geometry *);\\r\\n16       /* this callback is with swap_lock and sometimes page table lock held */\\r\\n17       void (*swap_slot_free_notify) (struct block_device *, unsigned long);\\r\\n18       struct module *owner;\\r\\n19};\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u5bf9\u5176\u4e3b\u8981\u6210\u5458\u51fd\u6570\u8fdb\u884c\u5206\u6790\u3002\\r\\n\\r\\n1.\u6253\u5f00\u548c\u91ca\u653e\\r\\n\\r\\n```\\r\\nint (*open) (struct block_device *, fmode_t);\\r\\nvoid (*release) (struct gendisk *, fmode_t);\\r\\n```\\r\\n\\r\\n\u4e0e\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7c7b\u4f3c\uff0c\u5f53\u8bbe\u5907\u88ab\u6253\u5f00\u548c\u5173\u95ed\u65f6\u5c06\u8c03\u7528\u5b83\u4eec\u3002\\r\\n\\r\\n2.I/O\u63a7\u5236\\r\\n\\r\\n```\\r\\nint (*ioctl) (struct block_device *, fmode_t, unsigned, unsigned long);\\r\\nint (*compat_ioctl) (struct block_device *, fmode_t, unsigned, unsigned long);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u662fioctl\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0\uff0c\u5757\u8bbe\u5907\u5305\u542b\u5927\u91cf\u7684\u6807\u51c6\u8bf7\u6c42\uff0c\u8fd9\u4e9b\u6807\u51c6\u8bf7\u6c42\u7531Linux\u901a\u7528\u5757\u8bbe\u5907\u5c42\u5904\u7406\uff0c\u56e0\u6b64\u5927\u90e8\u5206\u5757\u8bbe\u5907\u9a71\u52a8\u7684ioctl\uff08\uff09\u51fd\u6570\u76f8\u5f53\u77ed\u3002\u5f53\u4e00\u4e2a64\u4f4d\u7cfb\u7edf\u5185\u768432\u4f4d\u8fdb\u7a0b\u8c03\u7528ioctl\uff08\uff09\u7684\u65f6\u5019\uff0c\u8c03\u7528\u7684\u662fcompat_ioctl\uff08\uff09\u3002\\r\\n\\r\\n3.\u4ecb\u8d28\u6539\u53d8\\r\\n\\r\\n```\\r\\nint (*media_changed) (struct gendisk *gd);\\r\\n```\\r\\n\\r\\n\u88ab\u5185\u6838\u8c03\u7528\u4ee5\u68c0\u67e5\u9a71\u52a8\u5668\u4e2d\u7684\u4ecb\u8d28\u662f\u5426\u5df2\u7ecf\u6539\u53d8\uff0c\u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u975e0\u503c\uff0c\u5426\u5219\u8fd4\u56de0\u3002\u8fd9\u4e2a\u51fd\u6570\u4ec5\u9002\u7528\u4e8e\u652f\u6301\u53ef\u79fb\u52a8\u4ecb\u8d28\u7684\u9a71\u52a8\u5668\uff0c\u901a\u5e38\u9700\u8981\u5728\u9a71\u52a8\u4e2d\u589e\u52a0\u4e00\u4e2a\u8868\u793a\u4ecb\u8d28\u72b6\u6001\u662f\u5426\u6539\u53d8\u7684\u6807\u5fd7\u53d8\u91cf\uff0c\u975e\u53ef\u79fb\u52a8\u8bbe\u5907\u7684\u9a71\u52a8\u4e0d\u9700\u8981\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u3002\\r\\n\\r\\n```\\r\\nunsigned int (*check_events) (struct gendisk *disk,\\r\\n                              unsigned int clearing);\\r\\n```\\r\\n\\r\\nmedia_changed\uff08\uff09\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u76ee\u524d\u5df2\u7ecf\u8fc7\u65f6\u4e86\uff0c\u5df2\u88abcheck_events\uff08\uff09\u66ff\u4ee3\u3002Tejun Heo<tj@kernel.org>\u5728\u5185\u6838\u63d0\u4ea4\u4e86\u4e00\u4e2a\u8865\u4e01\uff0c\u5b8c\u6210\u4e86\u201cimplement in-kernel gendisk events handling\u201d\u7684\u5de5\u4f5c\uff0c\u8fd9\u4e2a\u8865\u4e01\u5bf9\u5e94\u7684commit ID\u662f77ea887e\u3002\u8001\u7684Linux\u5728\u7528\u6237\u7a7a\u95f4\u91cc\u8f6e\u8be2\u53ef\u79fb\u52a8\u78c1\u76d8\u4ecb\u8d28\u662f\u5426\u5b58\u5728\uff0c\u800c\u65b0\u7684\u5185\u6838\u5219\u5728\u5185\u6838\u7a7a\u95f4\u91cc\u8f6e\u8be2\u3002check_events\uff08\uff09\u51fd\u6570\u68c0\u67e5\u6709\u6ca1\u6709\u6302\u8d77\u7684\u4e8b\u4ef6\uff0c\u5982\u679c\u6709DISK_EVENT_MEDIA_CHANGE\u548cDISK_EVENT_EJECT_REQUEST\u4e8b\u4ef6\uff0c\u5c31\u8fd4\u56de\u3002\\r\\n\\r\\n4.\u4f7f\u4ecb\u8d28\u6709\u6548\\r\\n\\r\\n```\\r\\nint (*revalidate_disk) (struct gendisk *gd);\\r\\n```\\r\\n\\r\\nrevalidate_disk\uff08\uff09\u51fd\u6570\u88ab\u8c03\u7528\u6765\u54cd\u5e94\u4e00\u4e2a\u4ecb\u8d28\u6539\u53d8\uff0c\u5b83\u7ed9\u9a71\u52a8\u4e00\u4e2a\u673a\u4f1a\u6765\u8fdb\u884c\u5fc5\u8981\u7684\u5de5\u4f5c\u4ee5\u4f7f\u65b0\u4ecb\u8d28\u51c6\u5907\u597d\u3002\\r\\n\\r\\n5.\u83b7\u5f97\u9a71\u52a8\u5668\u4fe1\u606f\\r\\n\\r\\n```\\r\\nint (*getgeo)(struct block_device *, struct hd_geometry *);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u6839\u636e\u9a71\u52a8\u5668\u7684\u51e0\u4f55\u4fe1\u606f\u586b\u5145\u4e00\u4e2ahd_geometry\u7ed3\u6784\u4f53\uff0chd_geometry\u7ed3\u6784\u4f53\u5305\u542b\u78c1\u5934\u3001\u6247\u533a\u3001\u67f1\u9762\u7b49\u4fe1\u606f\uff0c\u5176\u5b9a\u4e49\u4e8einclude/linux/hdreg.h\u5934\u6587\u4ef6\u4e2d\u3002\\r\\n\\r\\n6.\u6a21\u5757\u6307\u9488\\r\\n\\r\\n```\\r\\nstruct module *owner;\\r\\n```\\r\\n\\r\\n\u4e00\u4e2a\u6307\u5411\u62e5\u6709\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u6a21\u5757\u7684\u6307\u9488\uff0c\u5b83\u901a\u5e38\u88ab\u521d\u59cb\u5316\u4e3aTHIS_MODULE\u3002\\r\\n\\r\\n# 13.2.2\u3000gendisk\u7ed3\u6784\u4f53\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u4f7f\u7528gendisk\uff08\u901a\u7528\u78c1\u76d8\uff09\u7ed3\u6784\u4f53\u6765\u8868\u793a\u4e00\u4e2a\u72ec\u7acb\u7684\u78c1\u76d8\u8bbe\u5907\uff08\u6216\u5206\u533a\uff09\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535513.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.2\u3000gendisk\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct gendisk {\\r\\n 2        /* major, first_minor and minors are input parameters only,\\r\\n 3         * don\'t use directly.  Use disk_devt() and disk_max_parts().\\r\\n 4         */\\r\\n 5        int major;        /* major number of driver */\\r\\n 6        int first_minor;\\r\\n 7        int minors;       /* maximum number of minors, =1for\\r\\n 8                           * disks that can\'t be partitioned. */\\r\\n 9\\r\\n10        char disk_name[DISK_NAME_LEN];    /* name of major driver */\\r\\n11        char *(*devnode)(struct gendisk *gd, umode_t *mode);\\r\\n12\\r\\n13        unsigned int events;              /* supported events */\\r\\n14        unsigned int async_events;        /* async events, subset of all */\\r\\n15\\r\\n16        /* Array of pointers to partitions indexed by partno.\\r\\n17         * Protected with matching bdev lock but stat and other\\r\\n18         * non-critical accesses use RCU.  Always access through\\r\\n19         * helpers.\\r\\n20         */\\r\\n21        struct disk_part_tbl __rcu *part_tbl;\\r\\n22        struct hd_struct part0;\\r\\n23\\r\\n24        const struct block_device_operations *fops;\\r\\n25        struct request_queue *queue;\\r\\n26        void *private_data;\\r\\n27\\r\\n28        int flags;\\r\\n29        struct device *driverfs_dev;  // FIXME: remove\\r\\n30        struct kobject *slave_dir;\\r\\n31\\r\\n32        struct timer_rand_state *random;\\r\\n33        atomic_t sync_io;          /* RAID */\\r\\n34        struct disk_events *ev;\\r\\n35#ifdef  CONFIG_BLK_DEV_INTEGRITY\\r\\n36        struct blk_integrity *integrity;\\r\\n37#endif\\r\\n38        int node_id;\\r\\n39};\\r\\n```\\r\\n\\r\\nmajor\u3001first_minor\u548cminors\u5171\u540c\u8868\u5f81\u4e86\u78c1\u76d8\u7684\u4e3b\u3001\u6b21\u8bbe\u5907\u53f7\uff0c\u540c\u4e00\u4e2a\u78c1\u76d8\u7684\u5404\u4e2a\u5206\u533a\u5171\u4eab\u4e00\u4e2a\u4e3b\u8bbe\u5907\u53f7\uff0c\u800c\u6b21\u8bbe\u5907\u53f7\u5219\u4e0d\u540c\u3002fops\u4e3ablock_device_operations\uff0c\u5373\u4e0a\u8282\u63cf\u8ff0\u7684\u5757\u8bbe\u5907\u64cd\u4f5c\u96c6\u5408\u3002queue\u662f\u5185\u6838\u7528\u6765\u7ba1\u7406\u8fd9\u4e2a\u8bbe\u5907\u7684I/O\u8bf7\u6c42\u961f\u5217\u7684\u6307\u9488\u3002private_data\u53ef\u7528\u4e8e\u6307\u5411\u78c1\u76d8\u7684\u4efb\u4f55\u79c1\u6709\u6570\u636e\uff0c\u7528\u6cd5\u4e0e\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8file\u7ed3\u6784\u4f53\u7684private_data\u7c7b\u4f3c\u3002hd_struct\u6210\u5458\u8868\u793a\u4e00\u4e2a\u5206\u533a\uff0c\u800cdisk_part_tbl\u6210\u5458\u7528\u4e8e\u5bb9\u7eb3\u5206\u533a\u8868\uff0cpart0\u548cpart_tbl\u4e24\u8005\u7684\u5173\u7cfb\u5728\u4e8e\uff1a\\r\\n\\r\\n```\\r\\ndisk->part_tbl->part[0] = &disk->part0;\\r\\n```\\r\\n\\r\\nLinux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7ec4\u51fd\u6570\u6765\u64cd\u4f5cgendisk\uff0c\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\n## 1.\u5206\u914dgendisk\\r\\n\\r\\ngendisk\u7ed3\u6784\u4f53\u662f\u4e00\u4e2a\u52a8\u6001\u5206\u914d\u7684\u7ed3\u6784\u4f53\uff0c\u5b83\u9700\u8981\u7279\u522b\u7684\u5185\u6838\u64cd\u4f5c\u6765\u521d\u59cb\u5316\uff0c\u9a71\u52a8\u4e0d\u80fd\u81ea\u5df1\u5206\u914d\u8fd9\u4e2a\u7ed3\u6784\u4f53\uff0c\u800c\u5e94\u8be5\u4f7f\u7528\u4e0b\u5217\u51fd\u6570\u6765\u5206\u914dgendisk\uff1a\\r\\n\\r\\n```\\r\\nstruct gendisk *alloc_disk(int minors);\\r\\n```\\r\\n\\r\\nminors\u53c2\u6570\u662f\u8fd9\u4e2a\u78c1\u76d8\u4f7f\u7528\u7684\u6b21\u8bbe\u5907\u53f7\u7684\u6570\u91cf\uff0c\u4e00\u822c\u4e5f\u5c31\u662f\u78c1\u76d8\u5206\u533a\u7684\u6570\u91cf\uff0c\u6b64\u540eminors\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\\r\\n\\r\\n## 2.\u589e\u52a0gendisk\\r\\n\\r\\ngendisk\u7ed3\u6784\u4f53\u88ab\u5206\u914d\u4e4b\u540e\uff0c\u7cfb\u7edf\u8fd8\u4e0d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u78c1\u76d8\uff0c\u9700\u8981\u8c03\u7528\u5982\u4e0b\u51fd\u6570\u6765\u6ce8\u518c\u8fd9\u4e2a\u78c1\u76d8\u8bbe\u5907\u3002\\r\\n\\r\\n```\\r\\nvoid add_disk(struct gendisk *disk);\\r\\n```\\r\\n\\r\\n## 3.\u91ca\u653egendisk\\r\\n\\r\\n\u5f53\u4e0d\u518d\u9700\u8981\u78c1\u76d8\u65f6\uff0c\u5e94\u5f53\u4f7f\u7528\u5982\u4e0b\u51fd\u6570\u91ca\u653egendisk\u3002\\r\\n\\r\\n```\\r\\nvoid del_gendisk(struct gendisk *gp);\\r\\n```\\r\\n\\r\\n## 4.gendisk\u5f15\u7528\u8ba1\u6570\\r\\n\\r\\n```\\r\\nstruct kobject *get_disk(struct gendisk *disk);\\r\\nvoid put_disk(struct gendisk *disk);\\r\\n```\\r\\n\\r\\n\u524d\u8005\u6700\u7ec8\u4f1a\u8c03\u7528\u201ckobject_get\uff08&disk_to_dev\uff08disk\uff09->kobj\uff09\uff1b\u201d\uff0c\u800c\u540e\u8005\u5219\u4f1a\u8c03\u7528\u201ckobject_put\uff08&disk_to_dev\uff08disk\uff09->kobj\uff09\uff1b\u201d\u3002\\r\\n\\r\\n# 13.2.3\u3000bio\u3001request\u548crequest_queue\\r\\n\\r\\n\u901a\u5e38\u4e00\u4e2abio\u5bf9\u5e94\u4e0a\u5c42\u4f20\u9012\u7ed9\u5757\u5c42\u7684I/O\u8bf7\u6c42\u3002\u6bcf\u4e2abio\u7ed3\u6784\u4f53\u5b9e\u4f8b\u53ca\u5176\u5305\u542b\u7684bvec_iter\u3001bio_vec\u7ed3\u6784\u4f53\u5b9e\u4f8b\u63cf\u8ff0\u4e86\u8be5I/O\u8bf7\u6c42\u7684\u5f00\u59cb\u6247\u533a\u3001\u6570\u636e\u65b9\u5411\uff08\u8bfb\u8fd8\u662f\u5199\uff09\u3001\u6570\u636e\u653e\u5165\u7684\u9875\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535513.3\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.3\u3000bio\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct bvec_iter {\\r\\n 2        sector_t                bi_sector;   /* device address in 512byte\\r\\n 3                                             sectors */\\r\\n 4        unsigned int            bi_size;     /* residual I/O count */\\r\\n 5\\r\\n 6        unsigned int            bi_idx;      /* current index into bvl_vec */\\r\\n 7\\r\\n 8        unsigned int            bi_bvec_done;      /* number of bytes completed\\r\\n 9                                                    in current bvec */\\r\\n10};\\r\\n11\\r\\n12/*\\r\\n13 * main unit of I/O for the block layer and lower layers (ie drivers and\\r\\n14 * stacking drivers)\\r\\n15 */\\r\\n16struct bio {\\r\\n17        struct bio              *bi_next;   /* request queue link */\\r\\n18        struct block_device     *bi_bdev;\\r\\n19        unsigned long           bi_flags;   /* status, command, etc */\\r\\n20        unsigned long           bi_rw;      /* bottom bits READ/WRITE,\\r\\n21                                           * top bits priority\\r\\n22                                           */\\r\\n23\\r\\n24        struct bvec_iter        bi_iter;\\r\\n25\\r\\n26        /* Number of segments in this BIO after\\r\\n27         * physical address coalescing is performed.\\r\\n28         */\\r\\n29        unsigned int            bi_phys_segments;\\r\\n30\\r\\n31        ...\\r\\n32\\r\\n33        struct bio_vec          *bi_io_vec;  /* the actual vec list */\\r\\n34\\r\\n35        struct bio_set          *bi_pool;\\r\\n36\\r\\n37        /*\\r\\n38         * We can inline a number of vecs at the end of the bio, to avoid\\r\\n39         * double allocations for a small number of bio_vecs. This member\\r\\n40         * MUST obviously be kept at the very end of the bio.\\r\\n41         */\\r\\n42        struct bio_vec          bi_inline_vecs[0];\\r\\n43};\\r\\n```\\r\\n\\r\\n\u4e0ebio\u5bf9\u5e94\u7684\u6570\u636e\u6bcf\u6b21\u5b58\u653e\u7684\u5185\u5b58\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\uff0cbio_vec\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0\u4e0e\u8fd9\u4e2abio\u8bf7\u6c42\u5bf9\u5e94\u7684\u6240\u6709\u7684\u5185\u5b58\uff0c\u5b83\u53ef\u80fd\u4e0d\u603b\u662f\u5728\u4e00\u4e2a\u9875\u9762\u91cc\u9762\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e2a\u5411\u91cf\uff0c\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535513.4\u6240\u793a\u3002\u5411\u91cf\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5b9e\u9645\u662f\u4e00\u4e2a[page\uff0coffset\uff0clen]\uff0c\u6211\u4eec\u4e00\u822c\u4e5f\u79f0\u5b83\u4e3a\u4e00\u4e2a\u7247\u6bb5\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.4\u3000bio_vec\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n1struct bio_vec {\\r\\n2       struct page     *bv_page;\\r\\n3       unsigned int    bv_len;\\r\\n4       unsigned int    bv_offset;\\r\\n5};\\r\\n```\\r\\n\\r\\nI/O\u8c03\u5ea6\u7b97\u6cd5\u53ef\u5c06\u8fde\u7eed\u7684bio\u5408\u5e76\u6210\u4e00\u4e2a\u8bf7\u6c42\u3002\u8bf7\u6c42\u662fbio\u7ecf\u7531I/O\u8c03\u5ea6\u8fdb\u884c\u8c03\u6574\u540e\u7684\u7ed3\u679c\uff0c\u8fd9\u662f\u8bf7\u6c42\u548cbio\u7684\u533a\u522b\u3002\u56e0\u6b64\uff0c\u4e00\u4e2arequest\u53ef\u4ee5\u5305\u542b\u591a\u4e2abio\u3002\u5f53bio\u88ab\u63d0\u4ea4\u7ed9I/O\u8c03\u5ea6\u5668\u65f6\uff0cI/O\u8c03\u5ea6\u5668\u53ef\u80fd\u4f1a\u5c06\u8fd9\u4e2abio\u63d2\u5165\u73b0\u5b58\u7684\u8bf7\u6c42\u4e2d\uff0c\u4e5f\u53ef\u80fd\u751f\u6210\u65b0\u7684\u8bf7\u6c42\u3002\\r\\n\\r\\n\u6bcf\u4e2a\u5757\u8bbe\u5907\u6216\u8005\u5757\u8bbe\u5907\u7684\u5206\u533a\u90fd\u5bf9\u5e94\u6709\u81ea\u8eab\u7684request_queue\uff0c\u4eceI/O\u8c03\u5ea6\u5668\u5408\u5e76\u548c\u6392\u5e8f\u51fa\u6765\u7684\u8bf7\u6c42\u4f1a\u88ab\u5206\u53d1\uff08Dispatch\uff09\u5230\u8bbe\u5907\u7ea7\u7684request_queue\u3002\u56fe13.3\u63cf\u8ff0\u4e86request_queue\u3001request\u3001bio\u3001bio_vec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\\r\\n\\r\\n![1744553662621](./figure/1744553662621.png)\\r\\n\\r\\n\u56fe13.3\u3000request_queue\u3001request\u3001bio\u548cbio_vec\\r\\n\\r\\n\u4e0b\u9762\u770b\u4e00\u4e0b\u9a71\u52a8\u4e2d\u6d89\u53ca\u7684\u5904\u7406bio\u3001request\u548crequest_queue\u7684\u4e3b\u8981API\u3002\\r\\n\\r\\n\uff081\uff09\u521d\u59cb\u5316\u8bf7\u6c42\u961f\u5217\\r\\n\\r\\n```\\r\\nrequest_queue_t *blk_init_queue(request_fn_proc *rfn, spinlock_t *lock);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u7684\u6307\u9488\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u63a7\u5236\u8bbf\u95ee\u961f\u5217\u6743\u9650\u7684\u81ea\u65cb\u9501\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u53d1\u751f\u5185\u5b58\u5206\u914d\u7684\u884c\u4e3a\uff0c\u5b83\u53ef\u80fd\u4f1a\u5931\u8d25\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u68c0\u67e5\u5b83\u7684\u8fd4\u56de\u503c\u3002\u8fd9\u4e2a\u51fd\u6570\u4e00\u822c\u5728\u5757\u8bbe\u5907\u9a71\u52a8\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u8c03\u7528\u3002\\r\\n\\r\\n\uff082\uff09\u6e05\u9664\u8bf7\u6c42\u961f\u5217\\r\\n\\r\\n```\\r\\nvoid blk_cleanup_queue(request_queue_t * q);\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u51fd\u6570\u5b8c\u6210\u5c06\u8bf7\u6c42\u961f\u5217\u8fd4\u56de\u7ed9\u7cfb\u7edf\u7684\u4efb\u52a1\uff0c\u4e00\u822c\u5728\u5757\u8bbe\u5907\u9a71\u52a8\u5378\u8f7d\u8fc7\u7a0b\u4e2d\u8c03\u7528\u3002\\r\\n\\r\\n\uff083\uff09\u5206\u914d\u8bf7\u6c42\u961f\u5217\\r\\n\\r\\n```\\r\\nrequest_queue_t *blk_alloc_queue(int gfp_mask);\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8eRAMDISK\u8fd9\u79cd\u5b8c\u5168\u968f\u673a\u8bbf\u95ee\u7684\u975e\u673a\u68b0\u8bbe\u5907\uff0c\u5e76\u4e0d\u9700\u8981\u8fdb\u884c\u590d\u6742\u7684I/O\u8c03\u5ea6\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u53ef\u4ee5\u76f4\u63a5\u201c\u8e22\u5f00\u201dI/O\u8c03\u5ea6\u5668\uff0c\u4f7f\u7528\u5982\u4e0b\u51fd\u6570\u6765\u7ed1\u5b9a\u8bf7\u6c42\u961f\u5217\u548c\u201c\u5236\u9020\u8bf7\u6c42\u201d\u51fd\u6570\uff08make_request_fn\uff09\u3002\\r\\n\\r\\n```\\r\\nvoid blk_queue_make_request(request_queue_t * q, make_request_fn * mfn);\\r\\n```\\r\\n\\r\\nblk_alloc_queue\uff08\uff09\u548cblk_queue_make_request\uff08\uff09\u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u7684\u903b\u8f91\u4e00\u822c\u662f\uff1a\\r\\n\\r\\n```\\r\\nxxx_queue = blk_alloc_queue(GFP_KERNEL);\\r\\nblk_queue_make_request(xxx_queue, xxx_make_request);\\r\\n```\\r\\n\\r\\n\uff084\uff09\u63d0\u53d6\u8bf7\u6c42\\r\\n\\r\\n```\\r\\nstruct request * blk_peek_request(struct request_queue *q);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u7528\u4e8e\u8fd4\u56de\u4e0b\u4e00\u4e2a\u8981\u5904\u7406\u7684\u8bf7\u6c42\uff08\u7531I/O\u8c03\u5ea6\u5668\u51b3\u5b9a\uff09\uff0c\u5982\u679c\u6ca1\u6709\u8bf7\u6c42\u5219\u8fd4\u56deNULL\u3002\u5b83\u4e0d\u4f1a\u6e05\u9664\u8bf7\u6c42\uff0c\u800c\u662f\u4ecd\u7136\u5c06\u8fd9\u4e2a\u8bf7\u6c42\u4fdd\u7559\u5728\u961f\u5217\u4e0a\u3002\u539f\u5148\u7684\u8001\u7684\u51fd\u6570elv_next_request\uff08\uff09\u5df2\u7ecf\u4e0d\u518d\u5b58\u5728\u3002\\r\\n\\r\\n\uff085\uff09\u542f\u52a8\u8bf7\u6c42\\r\\n\\r\\n```\\r\\nvoid blk_start_request(struct request *req);\\r\\n```\\r\\n\\r\\n\u4ece\u8bf7\u6c42\u961f\u5217\u4e2d\u79fb\u9664\u8bf7\u6c42\u3002\u539f\u5148\u7684\u8001\u7684API blkdev_dequeue_request\uff08\uff09\u4f1a\u5728blk_start_request\uff08\uff09\u5185\u90e8\u88ab\u8c03\u7528\u3002\\r\\n\\r\\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528blk_fetch_request\uff08\uff09\u51fd\u6570\uff0c\u5b83\u540c\u65f6\u505a\u5b8c\u4e86blk_peek_request\uff08\uff09\u548cblk_start_request\uff08\uff09\u7684\u5de5\u4f5c\uff0c\u5982\u4ee3\u7801\u6e05\u535513.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.5\u3000blk_fetch_request\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n1struct request *blk_fetch_request(struct request_queue *q)\\r\\n2{\\r\\n3       struct request *rq;\\r\\n4\\r\\n5       rq = blk_peek_request(q);\\r\\n6       if (rq)\\r\\n7               blk_start_request(rq);\\r\\n8       return rq;\\r\\n9}\\r\\n```\\r\\n\\r\\n\uff086\uff09\u904d\u5386bio\u548c\u7247\u6bb5\\r\\n\\r\\n```\\r\\n#define __rq_for_each_bio(_bio, rq)    \\\\\\r\\n        if ((rq->bio))                 \\\\\\r\\n                for (_bio = (rq)->bio; _bio; _bio = _bio->bi_next)\\r\\n```\\r\\n\\r\\n__rq_for_each_bio\uff08\uff09\u904d\u5386\u4e00\u4e2a\u8bf7\u6c42\u7684\u6240\u6709bio\u3002\\r\\n\\r\\n```\\r\\n#define __bio_for_each_segment(bvl, bio, iter, start)          \\\\\\r\\n        for (iter = (start);                                   \\\\\\r\\n             (iter).bi_size &&                                 \\\\\\r\\n                ((bvl = bio_iter_iovec((bio), (iter))), 1);    \\\\\\r\\n             bio_advance_iter((bio), &(iter), (bvl).bv_len))\\r\\n#define bio_for_each_segment(bvl, bio, iter)                   \\\\\\r\\n        __bio_for_each_segment(bvl, bio, iter, (bio)->bi_iter)\\r\\n```\\r\\n\\r\\nbio_for_each_segment\uff08\uff09\u904d\u5386\u4e00\u4e2abio\u7684\u6240\u6709bio_vec\u3002\\r\\n\\r\\n```\\r\\n#define rq_for_each_segment(bvl, _rq, _iter)               \\\\\\r\\n        __rq_for_each_bio(_iter.bio, _rq)                  \\\\\\r\\n                bio_for_each_segment(bvl, _iter.bio, _iter.iter)\\r\\n```\\r\\n\\r\\nrq_for_each_segment\uff08\uff09\u8fed\u4ee3\u904d\u5386\u4e00\u4e2a\u8bf7\u6c42\u6240\u6709bio\u4e2d\u7684\u6240\u6709segment\u3002\\r\\n\\r\\n\uff087\uff09\u62a5\u544a\u5b8c\u6210\\r\\n\\r\\n```\\r\\nvoid __blk_end_request_all(struct request *rq, int error);\\r\\nvoid blk_end_request_all(struct request *rq, int error);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4e24\u4e2a\u51fd\u6570\u7528\u4e8e\u62a5\u544a\u8bf7\u6c42\u662f\u5426\u5b8c\u6210\uff0cerror\u4e3a0\u8868\u793a\u6210\u529f\uff0c\u5c0f\u4e8e0\u8868\u793a\u5931\u8d25\u3002__blk_end_request_all\uff08\uff09\u9700\u8981\u5728\u6301\u6709\u961f\u5217\u9501\u7684\u573a\u666f\u4e0b\u8c03\u7528\u3002\\r\\n\\r\\n\u7c7b\u4f3c\u7684\u51fd\u6570\u8fd8\u6709blk_end_request_cur\uff08\uff09\u3001blk_end_request_err\uff08\uff09\u3001__blk_end_request\uff08\uff09\u3001__blk_end_request_all\uff08\uff09\u3001__blk_end_request_cur\uff08\uff09\u4ee5\u53ca__blk_end_request_err\uff08\uff09\u3002\u5176\u4e2dxxx_end_request_cur\uff08\uff09\u53ea\u662f\u8868\u660e\u5b8c\u6210\u4e86request\u4e2d\u5f53\u524d\u7684\u90a3\u4e2achunk\uff0c\u4e5f\u5c31\u662f\u5b8c\u6210\u4e86\u5f53\u524d\u7684bio_cur_bytes\uff08rq->bio\uff09\u7684\u4f20\u8f93\u3002\\r\\n\\r\\n\u82e5\u6211\u4eec\u7528blk_queue_make_request\uff08\uff09\u7ed5\u5f00I/O\u8c03\u5ea6\uff0c\u4f46\u662f\u5728bio\u5904\u7406\u5b8c\u6210\u540e\u5e94\u8be5\u4f7f\u7528bio_endio\uff08\uff09\u51fd\u6570\u901a\u77e5\u5904\u7406\u7ed3\u675f\uff1a\\r\\n\\r\\n```\\r\\nvoid bio_endio(struct bio *bio, int error);\\r\\n```\\r\\n\\r\\n\u5982\u679c\u662fI/O\u64cd\u4f5c\u6545\u969c\uff0c\u53ef\u4ee5\u8c03\u7528\u5feb\u6377\u51fd\u6570bio_io_error\uff08\uff09\uff0c\u5b83\u5b9a\u4e49\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n#define bio_io_error(bio) bio_endio((bio), -EIO)\\r\\n```\\r\\n\\r\\n# 13.2.4\u3000I/O\u8c03\u5ea6\u5668\\r\\n\\r\\nLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u5305\u542b4\u4e2aI/O\u8c03\u5ea6\u5668\uff0c\u5b83\u4eec\u5206\u522b\u662fNoop I/O\u8c03\u5ea6\u5668\u3001Anticipatory I/O\u8c03\u5ea6\u5668\u3001Deadline I/O\u8c03\u5ea6\u5668\u4e0eCFQ I/O\u8c03\u5ea6\u5668\u3002\u5176\u4e2d\uff0cAnticipatory I/O\u8c03\u5ea6\u5668\u7b97\u6cd5\u5df2\u7ecf\u57282010\u5e74\u4ece\u5185\u6838\u4e2d\u53bb\u6389\u4e86\u3002\\r\\n\\r\\nNoop I/O\u8c03\u5ea6\u5668\u662f\u4e00\u4e2a\u7b80\u5316\u7684\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u8be5\u7b97\u6cd5\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355FIFO\u961f\u5217\uff0c\u5b83\u53ea\u8fdb\u884c\u6700\u57fa\u672c\u7684\u5408\u5e76\uff0c\u6bd4\u8f83\u9002\u5408\u57fa\u4e8eFlash\u7684\u5b58\u50a8\u5668\u3002\\r\\n\\r\\nAnticipatory I/O\u8c03\u5ea6\u5668\u7b97\u6cd5\u63a8\u8fdfI/O\u8bf7\u6c42\uff0c\u4ee5\u671f\u80fd\u5bf9\u5b83\u4eec\u8fdb\u884c\u6392\u5e8f\uff0c\u83b7\u5f97\u6700\u9ad8\u7684\u6548\u7387\u3002\u5728\u6bcf\u6b21\u5904\u7406\u5b8c\u8bfb\u8bf7\u6c42\u4e4b\u540e\uff0c\u4e0d\u662f\u7acb\u5373\u8fd4\u56de\uff0c\u800c\u662f\u7b49\u5f85\u51e0\u4e2a\u5fae\u79d2\u3002\u5728\u8fd9\u6bb5\u65f6\u95f4\u5185\uff0c\u4efb\u4f55\u6765\u81ea\u4e34\u8fd1\u533a\u57df\u7684\u8bf7\u6c42\u90fd\u88ab\u7acb\u5373\u6267\u884c\u3002\u8d85\u65f6\u4ee5\u540e\uff0c\u7ee7\u7eed\u539f\u6765\u7684\u5904\u7406\u3002\\r\\n\\r\\nDeadline I/O\u8c03\u5ea6\u5668\u662f\u9488\u5bf9Anticipatory I/O\u8c03\u5ea6\u5668\u7684\u7f3a\u70b9\u8fdb\u884c\u6539\u5584\u800c\u5f97\u6765\u7684\uff0c\u5b83\u8bd5\u56fe\u628a\u6bcf\u6b21\u8bf7\u6c42\u7684\u5ef6\u8fdf\u964d\u81f3\u6700\u4f4e\uff0c\u8be5\u7b97\u6cd5\u91cd\u6392\u4e86\u8bf7\u6c42\u7684\u987a\u5e8f\u6765\u63d0\u9ad8\u6027\u80fd\u3002\u5b83\u4f7f\u7528\u8f6e\u8be2\u7684\u8c03\u5ea6\u5668\uff0c\u7b80\u6d01\u5c0f\u5de7\uff0c\u63d0\u4f9b\u4e86\u6700\u5c0f\u7684\u8bfb\u53d6\u5ef6\u8fdf\u548c\u5c1a\u4f73\u7684\u541e\u5410\u91cf\uff0c\u7279\u522b\u9002\u5408\u4e8e\u8bfb\u53d6\u8f83\u591a\u7684\u73af\u5883\uff08\u6bd4\u5982\u6570\u636e\u5e93\uff09\u3002\\r\\n\\r\\nCFQ I/O\u8c03\u5ea6\u5668\u4e3a\u7cfb\u7edf\u5185\u7684\u6240\u6709\u4efb\u52a1\u5206\u914d\u5747\u5300\u7684I/O\u5e26\u5bbd\uff0c\u63d0\u4f9b\u4e00\u4e2a\u516c\u5e73\u7684\u5de5\u4f5c\u73af\u5883\uff0c\u5728\u591a\u5a92\u4f53\u5e94\u7528\u4e2d\uff0c\u80fd\u4fdd\u8bc1\u97f3\u3001\u89c6\u9891\u53ca\u65f6\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\\r\\n\\r\\n\u5185\u68384.0-rc1block\u76ee\u5f55\u4e2d\u7684noop-iosched.c\u3001deadline-iosched.c\u548ccfq-iosched.c\u6587\u4ef6\u5206\u522b\u5b9e\u73b0\u4e86IOSCHED_NOOP\u3001IOSCHED_DEADLINE\u548cIOSCHED_CFQ\u8c03\u5ea6\u7b97\u6cd5\u3002as-iosched.c\u8fd9\u4e2a\u6587\u4ef6\u76ee\u524d\u5df2\u7ecf\u4e0d\u518d\u5b58\u5728\u3002\u5f53\u524d\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u7684\u8c03\u5ea6\u5668\u662fCFQ\u3002\\r\\n\\r\\n\u53ef\u4ee5\u901a\u8fc7\u7ed9\u5185\u6838\u6dfb\u52a0\u542f\u52a8\u53c2\u6570\uff0c\u9009\u62e9\u6240\u4f7f\u7528\u7684I/O\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nkernel elevator=deadline\\r\\n```\\r\\n\\r\\n\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u5982\u4e0b\u7684\u547d\u4ee4\uff0c\u6539\u53d8\u4e00\u4e2a\u8bbe\u5907\u7684\u8c03\u5ea6\u5668\uff1a\\r\\n\\r\\n```\\r\\necho SCHEDULER > /sys/block/DEVICE/queue/scheduler\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7","description":"Linux\u7684\u201c/proc/kallsyms\u201d\u6587\u4ef6\u5bf9\u5e94\u7740\u5185\u6838\u7b26\u53f7\u8868\uff0c\u5b83\u8bb0\u5f55\u4e86\u7b26\u53f7\u4ee5\u53ca\u7b26\u53f7\u6240\u5728\u7684\u5185\u5b58\u5730\u5740\u3002","date":"2025-09-15T14:44:14.265Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.19,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"13.2.1\u3000block_device_operations\u7ed3\u6784\u4f53","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.2\u3000Linux\u5757\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784"},"nextItem":{"title":"16.2.1\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u7684\u6574\u4f53\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.2\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8"}},"content":"Linux\u7684\u201c/proc/kallsyms\u201d\u6587\u4ef6\u5bf9\u5e94\u7740\u5185\u6838\u7b26\u53f7\u8868\uff0c\u5b83\u8bb0\u5f55\u4e86\u7b26\u53f7\u4ee5\u53ca\u7b26\u53f7\u6240\u5728\u7684\u5185\u5b58\u5730\u5740\u3002\\r\\n\\r\\n\u6a21\u5757\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u5b8f\u5bfc\u51fa\u7b26\u53f7\u5230\u5185\u6838\u7b26\u53f7\u8868\u4e2d\uff1a\\r\\n\\r\\n```\\r\\nEXPORT_SYMBOL(\u7b26\u53f7\u540d\\r\\n\\r\\n\\r\\n);\\r\\nEXPORT_SYMBOL_GPL(\u7b26\u53f7\u540d\\r\\n\\r\\n\\r\\n);\\r\\n```\\r\\n\\r\\n\u5bfc\u51fa\u7684\u7b26\u53f7\u53ef\u4ee5\u88ab\u5176\u4ed6\u6a21\u5757\u4f7f\u7528\uff0c\u53ea\u9700\u4f7f\u7528\u524d\u58f0\u660e\u4e00\u4e0b\u5373\u53ef\u3002EXPORT_SYMBOL_GPL\uff08\uff09\u53ea\u9002\u7528\u4e8e\u5305\u542bGPL\u8bb8\u53ef\u6743\u7684\u6a21\u5757\u3002\u4ee3\u7801\u6e05\u53554.5\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5bfc\u51fa\u6574\u6570\u52a0\u3001\u51cf\u8fd0\u7b97\u51fd\u6570\u7b26\u53f7\u7684\u5185\u6838\u6a21\u5757\u7684\u4f8b\u5b50\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53554.5\u3000\u5185\u6838\u6a21\u5757\u4e2d\u7684\u7b26\u53f7\u5bfc\u51fa\\r\\n\\r\\n```\\r\\n 1 #include <linux/init.h>\\r\\n 2 #include <linux/module.h>\\r\\n 3\\r\\n 4 int add_integar(int a, int b)\\r\\n 5 {\\r\\n 6   return a + b;\\r\\n 7 }\\r\\n 8 EXPORT_SYMBOL_GPL(add_integar);\\r\\n 9\\r\\n10 int sub_integar(int a, int b)\\r\\n11 {\\r\\n12   return a - b;\\r\\n13 }\\r\\n14 EXPORT_SYMBOL_GPL(sub_integar);\\r\\n15\\r\\n16 MODULE_LICENSE(\\"GPL v2\\");\\r\\n```\\r\\n\\r\\n\u4ece\u201c/proc/kallsyms\u201d\u6587\u4ef6\u4e2d\u627e\u51faadd_integar\u3001sub_integar\u7684\u76f8\u5173\u4fe1\u606f\\r\\n\\r\\n```\\r\\n# grep integar /proc/kallsyms\\r\\ne679402c r __ksymtab_sub_integar    [export_symb]\\r\\ne679403c r __kstrtab_sub_integar    [export_symb]\\r\\ne6794038 r __kcrctab_sub_integar    [export_symb]\\r\\ne6794024 r __ksymtab_add_integar    [export_symb]\\r\\ne6794048 r __kstrtab_add_integar    [export_symb]\\r\\ne6794034 r __kcrctab_add_integar    [export_symb]\\r\\ne6793000 t add_integar    [export_symb]\\r\\ne6793010 t sub_integar    [export_symb]\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.2\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.2\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.2\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.2\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8.md","title":"16.2.1\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u7684\u6574\u4f53\u7ed3\u6784","description":"USB\u4e3b\u673a\u63a7\u5236\u5668\u6709\u8fd9\u4e9b\u89c4\u683c\uff1aOHCI\uff08Open Host Controller Interface\uff09\u3001UHCI\uff08Universal Host Controller Interface\uff09\u3001EHCI\uff08Enhanced Host Controller Interface\uff09\u548cxHCI\uff08eXtensible Host Controller Interface\uff09\u3002OHCI\u9a71\u52a8\u7a0b\u5e8f\u7528\u6765\u4e3a\u975ePC\u7cfb\u7edf\u4e0a\u4ee5\u53ca\u5e26\u6709SiS\u548cALi\u82af\u7247\u7ec4\u7684PC\u4e3b\u677f\u4e0a\u7684USB\u82af\u7247\u63d0\u4f9b\u652f\u6301\u3002UHCI\u9a71\u52a8\u7a0b\u5e8f\u591a\u7528\u6765\u4e3a\u5927\u591a\u6570\u5176\u4ed6PC\u4e3b\u677f\uff08\u5305\u62ecIntel\u548cVia\uff09\u4e0a\u7684USB\u82af\u7247\u63d0\u4f9b\u652f\u6301\u3002EHCI\u7531USB 2.0\u89c4\u8303\u6240\u63d0\u51fa\uff0c\u5b83\u517c\u5bb9\u4e8eOHCI\u548cUHCI\u3002\u7531\u4e8eUHCI\u7684\u786c\u4ef6\u7ebf\u8def\u6bd4OHCI\u7b80\u5355\uff0c\u6240\u4ee5\u6210\u672c\u8f83\u4f4e\uff0c\u4f46\u9700\u8981\u8f83\u590d\u6742\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0cCPU\u8d1f\u8377\u7a0d\u91cd\u3002xHCI\uff0c\u5373\u53ef\u6269\u5c55\u7684\u4e3b\u673a\u63a7\u5236\u5668\u63a5\u53e3\u662fIntel\u516c\u53f8\u5f00\u53d1\u7684\u4e00\u4e2aUSB\u4e3b\u673a\u63a7\u5236\u5668\u63a5\u53e3\uff0c\u5b83\u76ee\u524d\u4e3b\u8981\u662f\u9762\u5411USB 3.0\u7684\uff0c\u540c\u65f6\u5b83\u4e5f\u652f\u6301USB 2.0\u53ca\u4ee5\u4e0b\u7684\u8bbe\u5907\u3002","date":"2025-09-15T14:44:14.249Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":8.765,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.6\u3000\u5bfc\u51fa\u7b26\u53f7"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5"}},"content":"USB\u4e3b\u673a\u63a7\u5236\u5668\u6709\u8fd9\u4e9b\u89c4\u683c\uff1aOHCI\uff08Open Host Controller Interface\uff09\u3001UHCI\uff08Universal Host Controller Interface\uff09\u3001EHCI\uff08Enhanced Host Controller Interface\uff09\u548cxHCI\uff08eXtensible Host Controller Interface\uff09\u3002OHCI\u9a71\u52a8\u7a0b\u5e8f\u7528\u6765\u4e3a\u975ePC\u7cfb\u7edf\u4e0a\u4ee5\u53ca\u5e26\u6709SiS\u548cALi\u82af\u7247\u7ec4\u7684PC\u4e3b\u677f\u4e0a\u7684USB\u82af\u7247\u63d0\u4f9b\u652f\u6301\u3002UHCI\u9a71\u52a8\u7a0b\u5e8f\u591a\u7528\u6765\u4e3a\u5927\u591a\u6570\u5176\u4ed6PC\u4e3b\u677f\uff08\u5305\u62ecIntel\u548cVia\uff09\u4e0a\u7684USB\u82af\u7247\u63d0\u4f9b\u652f\u6301\u3002EHCI\u7531USB 2.0\u89c4\u8303\u6240\u63d0\u51fa\uff0c\u5b83\u517c\u5bb9\u4e8eOHCI\u548cUHCI\u3002\u7531\u4e8eUHCI\u7684\u786c\u4ef6\u7ebf\u8def\u6bd4OHCI\u7b80\u5355\uff0c\u6240\u4ee5\u6210\u672c\u8f83\u4f4e\uff0c\u4f46\u9700\u8981\u8f83\u590d\u6742\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0cCPU\u8d1f\u8377\u7a0d\u91cd\u3002xHCI\uff0c\u5373\u53ef\u6269\u5c55\u7684\u4e3b\u673a\u63a7\u5236\u5668\u63a5\u53e3\u662fIntel\u516c\u53f8\u5f00\u53d1\u7684\u4e00\u4e2aUSB\u4e3b\u673a\u63a7\u5236\u5668\u63a5\u53e3\uff0c\u5b83\u76ee\u524d\u4e3b\u8981\u662f\u9762\u5411USB 3.0\u7684\uff0c\u540c\u65f6\u5b83\u4e5f\u652f\u6301USB 2.0\u53ca\u4ee5\u4e0b\u7684\u8bbe\u5907\u3002\\r\\n\\r\\n## 1.\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u7528usb_hcd\u7ed3\u6784\u4f53\u63cf\u8ff0USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\uff0c\u5b83\u5305\u542bUSB\u4e3b\u673a\u63a7\u5236\u5668\u7684\u201c\u5bb6\u52a1\u201d\u4fe1\u606f\u3001\u786c\u4ef6\u8d44\u6e90\u3001\u72b6\u6001\u63cf\u8ff0\u548c\u7528\u4e8e\u64cd\u4f5c\u4e3b\u673a\u63a7\u5236\u5668\u7684hc_driver\u7b49\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535516.6\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.6\u3000usb_hcd\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_hcd {\\r\\n 2   struct usb_bus         self;           /* hcd is-a bus */\\r\\n 3   struct kref        kref;               /* reference counter */\\r\\n 4\\r\\n 5   const char         *product_desc;      /* product/vendor string */\\r\\n 6   int            speed;                  /* Speed for this roothub.\\r\\n 7                           * May be different from\\r\\n 8                           * hcd->driver->flags & HCD_MASK\\r\\n 9                           */\\r\\n10   char           irq_descr[24];          /* driver + bus # */\\r\\n11\\r\\n12   struct timer_list rh_timer;            /* drives root-hub polling */\\r\\n13   struct urb     *status_urb;            /* the current status urb */\\r\\n14#ifdef CONfiG_PM\\r\\n15   struct work_struct    wakeup_work;     /* for remote wakeup */\\r\\n16#endif\\r\\n17\\r\\n18   const struct hc_driver    *driver;     /* hw-specific hooks */\\r\\n19\\r\\n20   struct usb_phy        *usb_phy;\\r\\n21   struct phy        *phy;\\r\\n22\\r\\n23   unsigned long     flags;\\r\\n24\\r\\n25   \u2026\\r\\n26\\r\\n27   /* The HC driver\'s private data is stored at the end of\\r\\n28   * this structure.\\r\\n29   */\\r\\n30   unsigned long hcd_priv[0]\\r\\n31            __attribute__ ((aligned(sizeof(s64))));\\r\\n32};\\r\\n```\\r\\n\\r\\nusb_hcd\u7ed3\u6784\u4f53\u4e2d\u7b2c18\u884c\u7684hc_driver\u6210\u5458\u975e\u5e38\u91cd\u8981\uff0c\u5b83\u5305\u542b\u5177\u4f53\u7684\u7528\u4e8e\u64cd\u4f5c\u4e3b\u673a\u63a7\u5236\u5668\u7684\u94a9\u5b50\u51fd\u6570\uff0c\u5373\u201chw-specific hooks\u201d\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535516.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.7\u3000hc_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct hc_driver {\\r\\n 2   const char   *description;          /* \\"ehci-hcd\\" etc */\\r\\n 3   const char   *product_desc;         /* product/vendor string */\\r\\n 4   size_t       hcd_priv_size;         /* size of private data */\\r\\n 5\\r\\n 6   /* irq handler */\\r\\n 7   irqreturn_t(*irq) (struct usb_hcd *hcd);\\r\\n 8\\r\\n 9   int flags;\\r\\n10\\r\\n11   /* called to init HCD and root hub */\\r\\n12   int (*reset) (struct usb_hcd *hcd);\\r\\n13   int (*start) (struct usb_hcd *hcd);\\r\\n14   ...\\r\\n15   /* cleanly make HCD stop writing memory and doing I/O */\\r\\n16   void (*stop) (struct usb_hcd *hcd);\\r\\n17\\r\\n18   /* shutdown HCD */\\r\\n19   void (*shutdown) (struct usb_hcd *hcd);\\r\\n20\\r\\n21   /* return current frame number */\\r\\n22   int (*get_frame_number) (struct usb_hcd *hcd);\\r\\n23\\r\\n24   /* manage i/o requests, device state */\\r\\n25   int (*urb_enqueue)(struct usb_hcd *hcd,\\r\\n26                      struct urb *urb, gfp_t mem_flags);\\r\\n27   int (*urb_dequeue)(struct usb_hcd *hcd,\\r\\n28               struct urb *urb, int status);\\r\\n29   ...\\r\\n30        /* Allocate endpoint resources and add them to a new schedule */\\r\\n31   int (*add_endpoint)(struct usb_hcd *, struct usb_device *,\\r\\n32               struct usb_host_endpoint *);\\r\\n33        /* Drop an endpoint from a new schedule */\\r\\n34   int (*drop_endpoint)(struct usb_hcd *, struct usb_device *,\\r\\n35                        struct usb_host_endpoint *);\\r\\n36\\r\\n37   int (*check_bandwidth)(struct usb_hcd *, struct usb_device *);\\r\\n38   void (*reset_bandwidth)(struct usb_hcd *, struct usb_device *);\\r\\n39        /* Returns the hardware-chosen device address */\\r\\n40   int (*address_device)(struct usb_hcd *, struct usb_device *udev);\\r\\n41   ...\\r\\n42   int (*set_usb2_hw_lpm)(struct usb_hcd *, struct usb_device *, int);\\r\\n43   /* USB 3.0 Link Power Management */\\r\\n44        /* Returns the USB3 hub-encoded value for the U1/U2 timeout. */\\r\\n45   int (*enable_usb3_lpm_timeout)(struct usb_hcd *,\\r\\n46           struct usb_device *, enum usb3_link_state state);\\r\\n47   int (*disable_usb3_lpm_timeout)(struct usb_hcd *,\\r\\n48           struct usb_device *, enum usb3_link_state state);\\r\\n49   int (*find_raw_port_number)(struct usb_hcd *, int);\\r\\n50   /* Call for power on/off the port if necessary */\\r\\n51   int (*port_power)(struct usb_hcd *hcd, int portnum, bool enable);\\r\\n52};\\r\\n```\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u4f7f\u7528\u5982\u4e0b\u51fd\u6570\u6765\u521b\u5efaHCD\uff1a\\r\\n\\r\\n```\\r\\nstruct usb_hcd *usb_create_hcd (const struct hc_driver *driver,\\r\\n      struct device *dev, char *bus_name);\\r\\n```\\r\\n\\r\\n\u5982\u4e0b\u51fd\u6570\u88ab\u7528\u6765\u589e\u52a0\u548c\u79fb\u9664HCD\uff1a\\r\\n\\r\\n```\\r\\nint usb_add_hcd(struct usb_hcd *hcd,\\r\\n       unsigned int irqnum, unsigned long irqflags);\\r\\nvoid usb_remove_hcd(struct usb_hcd *hcd);\\r\\n```\\r\\n\\r\\n\u7b2c25\u884c\u7684urb_enqueue\uff08\uff09\u51fd\u6570\u975e\u5e38\u5173\u952e\uff0c\u5b9e\u9645\u4e0a\uff0c\u4e0a\u5c42\u901a\u8fc7usb_submit_urb\uff08\uff09\u63d0\u4ea41\u4e2aUSB\u8bf7\u6c42\u540e\uff0c\u8be5\u51fd\u6570\u8c03\u7528usb_hcd_submit_urb\uff08\uff09\uff0c\u5e76\u6700\u7ec8\u8c03\u7528\u81f3usb_hcd\u7684driver\u6210\u5458\uff08hc_driver\u7c7b\u578b\uff09\u7684urb_enqueue\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n## 2.EHCI\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\\r\\n\\r\\nEHCI HCD\u9a71\u52a8\u5c5e\u4e8eHCD\u9a71\u52a8\u7684\u5b9e\u4f8b\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2aehci_hcd\u7ed3\u6784\u4f53\uff0c\u901a\u5e38\u4f5c\u4e3a\u4ee3\u7801\u6e05\u535516.6\u5b9a\u4e49\u7684usb_hcd\u7ed3\u6784\u4f53\u7684\u79c1\u6709\u6570\u636e\uff08hcd_priv\uff09\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u4f4d\u4e8edrivers/usb/host/ehci.h\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535516.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.8\u3000ehci_hcd\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct ehci_hcd {                      /* one per controller */\\r\\n 2   /* timing support */\\r\\n 3   enum ehci_hrtimer_event    next_hrtimer_event;\\r\\n 4   unsigned     enabled_hrtimer_events;\\r\\n 5   ktime_t          hr_timeouts[EHCI_HRTIMER_NUM_EVENTS];\\r\\n 6   struct hrtimer       hrtimer;\\r\\n 7\\r\\n 8   int          PSS_poll_count;\\r\\n 9   int          ASS_poll_count;\\r\\n10   int          died_poll_count;\\r\\n11   ...\\r\\n12   /* general schedule support */\\r\\n13   bool         scanning:1;\\r\\n14   bool         need_rescan:1;\\r\\n15   bool         intr_unlinking:1;\\r\\n16   bool         iaa_in_progress:1;\\r\\n17   bool         async_unlinking:1;\\r\\n18   bool         shutdown:1;\\r\\n19   struct ehci_qh        *qh_scan_next;\\r\\n20\\r\\n21   /* async schedule support */\\r\\n22   struct ehci_qh        *async;\\r\\n23   struct ehci_qh        *dummy;         /* For AMD quirk use */\\r\\n24   struct list_head  async_unlink;\\r\\n25   struct list_head  async_idle;\\r\\n26   unsigned     async_unlink_cycle;\\r\\n27   unsigned     async_count;             /* async activity count */\\r\\n28\\r\\n29   /* periodic schedule support */\\r\\n30#define    DEFAULT_I_TDPS       1024   /* some HCs can do less */\\r\\n31   unsigned      periodic_size;\\r\\n32   __hc32            *periodic;          /* hw periodic table */\\r\\n33   dma_addr_t        periodic_dma;\\r\\n34   struct list_head  intr_qh_list;\\r\\n35   unsigned     i_thresh;                /* uframes HC might cache */\\r\\n36   ...\\r\\n37   /* bandwidth usage */\\r\\n38#define EHCI_BANDWIDTH_SIZE 64\\r\\n39#define EHCI_BANDWIDTH_FRAMES   (EHCI_BANDWIDTH_SIZE >> 3)\\r\\n40   u8           bandwidth[EHCI_BANDWIDTH_SIZE];\\r\\n41                         /* us allocated per uframe */\\r\\n42   u8           tt_budget[EHCI_BANDWIDTH_SIZE];\\r\\n43                         /* us budgeted per uframe */\\r\\n44   struct list_head tt_list;\\r\\n45\\r\\n46   /* platform-specific data -- must come last */\\r\\n47   unsigned long    priv[0] __aligned(sizeof(s64));\\r\\n48};\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u5982\u4e0b\u5185\u8054\u51fd\u6570\u53ef\u5b9e\u73b0usb_hcd\u548cehci_hcd\u7684\u76f8\u4e92\u8f6c\u6362\uff1a\\r\\n\\r\\n```\\r\\nstruct ehci_hcd *hcd_to_ehci (struct usb_hcd *hcd);\\r\\nstruct usb_hcd *ehci_to_hcd (const struct ohci_hcd *ohci);\\r\\n```\\r\\n\\r\\n\u4eceusb_hcd\u5f97\u5230ehci_hcd\u53ea\u662f\u53d6\u5f97\u201c\u79c1\u6709\u201d\u6570\u636e\uff0c\u800c\u4eceehci_hcd\u5f97\u5230usb_hcd\u5219\u662f\u901a\u8fc7container_of\uff08\uff09\u4ece\u7ed3\u6784\u4f53\u6210\u5458\u83b7\u5f97\u7ed3\u6784\u4f53\u6307\u9488\u3002\\r\\n\\r\\n\u4f7f\u7528\u5982\u4e0b\u51fd\u6570\u53ef\u521d\u59cb\u5316EHCI\u4e3b\u673a\u63a7\u5236\u5668\uff1a\\r\\n\\r\\n```\\r\\nstatic int ehci_init(struct usb_hcd *hcd);\\r\\n```\\r\\n\\r\\n\u5982\u4e0b\u51fd\u6570\u5206\u522b\u7528\u4e8e\u5f00\u542f\u3001\u505c\u6b62\u53ca\u590d\u4f4dEHCI\u63a7\u5236\u5668\uff1a\\r\\n\\r\\n```\\r\\nstatic int ehci_run (struct usb_hcd *hcd);\\r\\nstatic void ehci_stop (struct usb_hcd *hcd);\\r\\nstatic int ehci_reset (struct ehci_hcd *ehci);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u5728drivers/usb/host/ehci-hcd.c\u6587\u4ef6\u4e2d\u88ab\u586b\u5145\u7ed9\u4e86\u4e00\u4e2ahc_driver\u7ed3\u6784\u4f53\u7684generic\u7684\u5b9e\u4f8behci_hc_driver\u3002\\r\\n\\r\\n```\\r\\nstatic const struct hc_driver ehci_hc_driver = {\\r\\n       ...\\r\\n       .reset =             ehci_setup,\\r\\n       .start =             ehci_run,\\r\\n       .stop =              ehci_stop,\\r\\n       .shutdown =          ehci_shutdown,\\r\\n}\\r\\n```\\r\\n\\r\\ndrivers/usb/host/ehci-hcd.c\u5b9e\u73b0\u4e86\u7edd\u5927\u591a\u6570ECHI\u4e3b\u673a\u9a71\u52a8\u7684\u5de5\u4f5c\uff0c\u5177\u4f53\u7684EHCI\u5b9e\u4f8b\u7b80\u5355\u5730\u8c03\u7528\\r\\n\\r\\n```\\r\\nvoid ehci_init_driver(struct hc_driver *drv,\\r\\n             const struct ehci_driver_overrides *over);\\r\\n```\\r\\n\\r\\n\u521d\u59cb\u5316hc_driver\u5373\u53ef\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u88abgeneric\u7684ehci_hc_driver\u5b9e\u4f8b\u590d\u5236\u7ed9\u6bcf\u4e2a\u5177\u4f53\u5e95\u5c42\u9a71\u52a8\u7684\u5b9e\u4f8b\uff0c\u5f53\u7136\u5e95\u5c42\u9a71\u52a8\u53ef\u4ee5\u901a\u8fc7\u7b2c2\u4e2a\u53c2\u6570\uff0c\u5373ehci_driver_overrides\u91cd\u5199\u4e2d\u95f4\u5c42\u7684reset\uff08\uff09\u3001port_power\uff08\uff09\u8fd92\u4e2a\u51fd\u6570\uff0c\u53e6\u5916\u4e5f\u53ef\u4ee5\u586b\u5145\u4e00\u4e9b\u989d\u5916\u7684\u79c1\u6709\u6570\u636e\uff0c\u8fd9\u4e00\u70b9\u4ece\u4ee3\u7801\u6e05\u535516.9ehci_init_driver\uff08\uff09\u7684\u5b9e\u73b0\u4e2d\u53ef\u4ee5\u770b\u51fa\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.9\u3000ehci_init_driver\u7684\u5b9e\u73b0\\r\\n\\r\\n```\\r\\n 1void ehci_init_driver(struct hc_driver *drv,\\r\\n 2               const struct ehci_driver_overrides *over)\\r\\n 3{\\r\\n 4        /* Copy the generic table to drv and then apply the overrides */\\r\\n 5        *drv = ehci_hc_driver;\\r\\n 6\\r\\n 7        if (over) {\\r\\n 8               drv->hcd_priv_size += over->extra_priv_size;\\r\\n 9               if (over->reset)\\r\\n10                      drv->reset = over->reset;\\r\\n11               if (over->port_power)\\r\\n12                      drv->port_power = over->port_power;\\r\\n13         }\\r\\n14 }\\r\\n```\\r\\n\\r\\n# 16.2.2\u3000\u5b9e\u4f8b\uff1aChipidea USB\u4e3b\u673a\u9a71\u52a8\\r\\n\\r\\nChipidea\u7684USB IP\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u5e94\u7528\u6bd4\u8f83\u5e7f\u6cdb\uff0c\u5b83\u7684\u9a71\u52a8\u4f4d\u4e8edrivers/usb/chipidea/\u76ee\u5f55\u4e0b\\r\\n\\r\\n\u5f53Chipidea USB\u9a71\u52a8\u7684\u5185\u6838\u4ee3\u7801drivers/usb/chipidea/core.c\u4e2d\u7684ci_hdrc_probe\uff08\uff09\u88ab\u6267\u884c\u540e\uff08\u5373\u4e00\u4e2aplatform_device\u4e0eci_hdrc_driver\u8fd9\u4e2aplatform_driver\u5339\u914d\u4e0a\u4e86\uff09\uff0c\u5b83\u4f1a\u8c03\u7528drivers/usb/chipidea/host.c\u4e2d\u7684ci_hdrc_host_init\uff08\uff09\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5b8c\u6210hc_driver\u7684\u521d\u59cb\u5316\u5e76\u8d4b\u503c\u4e00\u7cfb\u5217\u4e0eChipidea\u5e73\u53f0\u76f8\u5173\u7684\u79c1\u6709\u6570\u636e\uff0c\u5982\u4ee3\u7801\u6e05\u535516.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.10\u3000Chipidea USB host\u9a71\u52a8\u521d\u59cb\u5316\\r\\n\\r\\n```\\r\\n 1int ci_hdrc_host_init(struct ci_hdrc *ci)\\r\\n 2{\\r\\n 3        struct ci_role_driver *rdrv;\\r\\n 4\\r\\n 5        if (!hw_read(ci, CAP_DCCPARAMS, DCCPARAMS_HC))\\r\\n 6               return -ENXIO;\\r\\n 7\\r\\n 8        rdrv = devm_kzalloc(ci->dev, sizeof(struct ci_role_driver), GFP_KERNEL);\\r\\n 9        if (!rdrv)\\r\\n10               return -ENOMEM;\\r\\n11\\r\\n12        rdrv->start    = host_start;\\r\\n13        rdrv->stop     = host_stop;\\r\\n14        rdrv->irq      = host_irq;\\r\\n15        rdrv->name     = \\"host\\";\\r\\n16        ci->roles[CI_ROLE_HOST] = rdrv;\\r\\n17\\r\\n18        ehci_init_driver(&ci_ehci_hc_driver, &ehci_ci_overrides);\\r\\n19\\r\\n20        return 0;\\r\\n21 }\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5","description":"\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u7531\u4e8e\u76ee\u6807\u673a\u8d44\u6e90\u6709\u9650\uff0c\u56e0\u6b64\u5f80\u5f80\u5728\u4e3b\u673a\u4e0a\u5148\u7f16\u8bd1\u597d\u7a0b\u5e8f\uff0c\u518d\u5728\u76ee\u6807\u673a\u4e0a\u8fd0\u884c\u3002\u7528\u6237\u6240\u6709\u7684\u5f00\u53d1\u5de5\u4f5c\u90fd\u5728\u4e3b\u673a\u5f00\u53d1\u73af\u5883\u4e0b\u5b8c\u6210\uff0c\u5305\u62ec\u7f16\u7801\u3001\u7f16\u8bd1\u3001\u8fde\u63a5\u3001\u4e0b\u8f7d\u548c\u8c03\u8bd5\u7b49\u3002\u76ee\u6807\u673a\u548c\u4e3b\u673a\u901a\u8fc7\u4e32\u53e3\u3001\u4ee5\u592a\u7f51\u3001\u4eff\u771f\u5668\u6216\u5176\u4ed6\u901a\u4fe1\u624b\u6bb5\u901a\u4fe1\uff0c\u4e3b\u673a\u7528\u8fd9\u4e9b\u63a5\u53e3\u63a7\u5236\u76ee\u6807\u673a\uff0c\u8c03\u8bd5\u76ee\u6807\u673a\u4e0a\u7684\u7a0b\u5e8f\u3002","date":"2025-09-15T14:44:14.237Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.64,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"16.2.1\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u7684\u6574\u4f53\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.2\u3000USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4"}},"content":"\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u7531\u4e8e\u76ee\u6807\u673a\u8d44\u6e90\u6709\u9650\uff0c\u56e0\u6b64\u5f80\u5f80\u5728\u4e3b\u673a\u4e0a\u5148\u7f16\u8bd1\u597d\u7a0b\u5e8f\uff0c\u518d\u5728\u76ee\u6807\u673a\u4e0a\u8fd0\u884c\u3002\u7528\u6237\u6240\u6709\u7684\u5f00\u53d1\u5de5\u4f5c\u90fd\u5728\u4e3b\u673a\u5f00\u53d1\u73af\u5883\u4e0b\u5b8c\u6210\uff0c\u5305\u62ec\u7f16\u7801\u3001\u7f16\u8bd1\u3001\u8fde\u63a5\u3001\u4e0b\u8f7d\u548c\u8c03\u8bd5\u7b49\u3002\u76ee\u6807\u673a\u548c\u4e3b\u673a\u901a\u8fc7\u4e32\u53e3\u3001\u4ee5\u592a\u7f51\u3001\u4eff\u771f\u5668\u6216\u5176\u4ed6\u901a\u4fe1\u624b\u6bb5\u901a\u4fe1\uff0c\u4e3b\u673a\u7528\u8fd9\u4e9b\u63a5\u53e3\u63a7\u5236\u76ee\u6807\u673a\uff0c\u8c03\u8bd5\u76ee\u6807\u673a\u4e0a\u7684\u7a0b\u5e8f\u3002\\r\\n\\r\\n\u8c03\u8bd5\u5d4c\u5165\u5f0fLinux\u5185\u6838\u7684\u65b9\u6cd5\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u76ee\u6807\u673a\u201c\u63d2\u6869\u201d\uff0c\u5982\u6253\u4e0aKGDB\u8865\u4e01\uff0c\u8fd9\u6837\u4e3b\u673a\u4e0a\u7684GDB\u53ef\u4e0e\u76ee\u6807\u673a\u7684KGDB\u901a\u8fc7\u4e32\u53e3\u6216\u7f51\u53e3\u901a\u4fe1\u3002\\r\\n\\r\\n2\uff09\u4f7f\u7528\u4eff\u771f\u5668\uff0c\u4eff\u771f\u5668\u53ef\u76f4\u63a5\u8fde\u63a5\u76ee\u6807\u673a\u7684JTAG/BDM\uff0c\u8fd9\u6837\u4e3b\u673a\u7684GDB\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e0e\u4eff\u771f\u5668\u7684\u901a\u4fe1\u6765\u63a7\u5236\u76ee\u6807\u673a\u3002\\r\\n\\r\\n3\uff09\u5728\u76ee\u6807\u677f\u4e0a\u901a\u8fc7printk\uff08\uff09\u3001Oops\u3001strace\u7b49\u8f6f\u4ef6\u65b9\u6cd5\u8fdb\u884c\u201c\u89c2\u5bdf\u201d\u8c03\u8bd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u5177\u5907\u67e5\u770b\u548c\u4fee\u6539\u6570\u636e\u7ed3\u6784\u3001\u65ad\u70b9\u3001\u5355\u6b65\u7b49\u529f\u80fd\u3002\\r\\n\\r\\n21.4~21.7\u8282\u5c06\u5bf9\u8fd9\u4e9b\u8c03\u8bd5\u65b9\u6cd5\u8fdb\u884c\u4e00\u4e00\u8bb2\u89e3\u3002\\r\\n\\r\\n\u4e0d\u7ba1\u662f\u76ee\u6807\u673a\u201c\u63d2\u6869\u201d\u8fd8\u662f\u4f7f\u7528\u4eff\u771f\u5668\u8fde\u63a5\u76ee\u6807\u673aJTAG/SWD/BDM\uff0c\u5728\u4e3b\u673a\u4e0a\uff0c\u8c03\u8bd5\u5de5\u5177\u4e00\u822c\u90fd\u91c7\u7528GDB\u3002\\r\\n\\r\\nGDB\u53ef\u4ee5\u76f4\u63a5\u628aLinux\u5185\u6838\u5f53\u6210\u4e00\u4e2a\u6574\u4f53\u6765\u8c03\u8bd5\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u53ef\u4ee5\u88abQEMU\u6a21\u62df\u51fa\u6765\u3002\u8fdb\u5165\u672c\u4e66\u914d\u5957Ubuntu\u7684/home/baohua/develop/linux/extra\u76ee\u5f55\u4e0b\uff0c\u4fee\u6539run-nolcd.sh\u7684\u811a\u672c\uff0c\u5c06\u5176\u4ece\\r\\n\\r\\n```\\r\\n   qemu-system-arm -nographic -sd vexpress.img -M vexpress-a9 -m 512M -kernel\\r\\nzImage -dtb vexpress-v2p-ca9.dtb  -smp 4 -append \\"init=/linuxrc root=/dev/\\r\\nmmcblk0p1 rw rootwait e  arlyprintk console=ttyAMA0\\" 2>/dev/null\\r\\n```\\r\\n\\r\\n\u6539\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n   qemu-system-arm \u2013s \u2013S -nographic -sd vexpress.img -M vexpress-a9 -m 512M -kernel\\r\\nzImage -dtb vexpress-v2p-ca9.dtb  -smp 4 -append \\"init=/linuxrc root=/dev/\\r\\nmmcblk0p1 rw rootwait e  arlyprintk console=ttyAMA0\\" 2>/dev/null\\r\\n```\\r\\n\\r\\n\u5373\u6dfb\u52a0-s\u2013S\u9009\u9879\uff0c\u5219\u4f1a\u4f7f\u5d4c\u5165\u5f0fARM Linux\u7cfb\u7edf\u7b49\u5f85GDB\u8fdc\u7a0b\u8fde\u5165\u3002\u5728\u7ec8\u7aef1\u8fd0\u884c\u65b0\u7684./run-nolcd.sh\uff0c\u8fd9\u6837\u5d4c\u5165\u5f0fARM Linux\u7684\u6a21\u62df\u5e73\u53f0\u57281234\u7aef\u53e3\u4fa6\u542c\u3002\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef2\uff0c\u8fdb\u5165/home/baohua/develop/linux/\uff0c\u6267\u884c\u5982\u4e0b\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nbaohua@baohua-VirtualBox:~/develop/linux$ arm-linux-gnueabihf-gdb ./vmlinux\\r\\nGNU gdb (crosstool-NG linaro-1.13.1-4.8-2013.05 - Linaro GCC 2013.05) 7.6-2013.05\\r\\nCopyright (C) 2013 Free Software Foundation, Inc.\\r\\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\\r\\nThis is free software: you are free to change and redistribute it.\\r\\nThere is NO WARRANTY, to the extent permitted by law.  Type \\"show copying\\"\\r\\nand \\"show warranty\\" for details.\\r\\nThis GDB was configured as \\"--host=i686-build_pc-linux-gnu --target=arm-linux-gnueabihf\\".\\r\\nFor bug reporting instructions, please see:\\r\\n<https://bugs.launchpad.net/gcc-linaro>...\\r\\nReading symbols from /home/baohua/develop/linux/vmlinux...done.\\r\\n(gdb)\\r\\n```\\r\\n\\r\\n\u63a5\u4e0b\u6765\u6211\u4eec\u8fdc\u7a0b\u8fde\u63a5127.0.0.1\uff1a1234\\r\\n\\r\\n```\\r\\n(gdb) target remote 127.0.0.1:1234\\r\\nRemote debugging using 127.0.0.1:1234\\r\\n0x60000000 in ?? ()\\r\\n```\\r\\n\\r\\n\u8bbe\u7f6e\u4e00\u4e2a\u65ad\u70b9\u5230start_kernel\uff08\uff09\u3002\\r\\n\\r\\n```\\r\\n(gdb) b start_kernel\\r\\nBreakpoint 1 at 0x805fd8ac: file init/main.c, line 490.\\r\\n```\\r\\n\\r\\n\u7ee7\u7eed\u8fd0\u884c\uff1a\\r\\n\\r\\n```\\r\\n(gdb) c\\r\\nContinuing.\\r\\nBreakpoint 1, start_kernel () at init/main.c:490\\r\\n490  {\\r\\n(gdb)\\r\\n```\\r\\n\\r\\n\u65ad\u70b9\u505c\u5728\u4e86\u5185\u6838\u542f\u52a8\u8fc7\u7a0b\u4e2d\u7684start_kernel\uff08\uff09\u51fd\u6570\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u6309\u4e0bCtrl+X\uff0cA\u952e\uff0c\u53ef\u4ee5\u770b\u5230\u4ee3\u7801\uff0c\u5982\u56fe21.4\u6240\u793a\u3002\\r\\n\\r\\n\u8fdb\u4e00\u6b65\uff0c\u53ef\u4ee5\u770b\u770bjiffies\u503c\u4e4b\u7c7b\u7684\uff1a\\r\\n\\r\\n```\\r\\n(gdb) p jiffies\\r\\n$1 = 775612\\r\\n(gdb) c\\r\\nContinuing.\\r\\n^C\\r\\nProgram received signal SIGINT, Interrupt.\\r\\ncpu_v7_do_idle () at arch/arm/mm/proc-v7.S:74\\r\\n74       ret lr\\r\\n(gdb) p jiffies\\r\\n$2 = 775687\\r\\n(gdb)\\r\\n```\\r\\n\\r\\n![1747576833697](./figure/1747576833697.png)\\r\\n\\r\\n\u56fe21.4\u3000GDB\u8c03\u8bd5\u5185\u6838\\r\\n\\r\\n\u5c3d\u7ba1\u91c7\u7528\u201c\u63d2\u6869\u201d\u548c\u4eff\u771f\u5668\u7ed3\u5408GDB\u7684\u65b9\u5f0f\u53ef\u4ee5\u67e5\u770b\u548c\u4fee\u6539\u6570\u636e\u7ed3\u6784\u3001\u65ad\u70b9\u3001\u5355\u6b65\u7b49\uff0c\u800cprintk\uff08\uff09\u8fd9\u79cd\u6700\u539f\u59cb\u7684\u65b9\u6cd5\u5374\u5e94\u7528\u5f97\u66f4\u5e7f\u6cdb\u3002\\r\\n\\r\\nprintk\uff08\uff09\u8fd9\u79cd\u65b9\u6cd5\u5f88\u539f\u59cb\uff0c\u4f46\u662f\u4e00\u822c\u53ef\u4ee5\u89e3\u51b3\u5de5\u7a0b\u4e2d95%\u4ee5\u4e0a\u7684\u95ee\u9898\u3002\u56e0\u6b64\u5177\u4f53\u4f55\u65f6\u6253\u5370\uff0c\u4ee5\u53ca\u6253\u5370\u4ec0\u4e48\u4e1c\u897f\uff0c\u9700\u8981\u5de5\u7a0b\u5e08\u9010\u6b65\u5efa\u7acb\u654f\u9510\u7684\u55c5\u89c9\u3002\u52a0\u6df1\u5bf9\u5185\u6838\u7684\u8ba4\u77e5\uff0c\u6df1\u5165\u7406\u89e3\u81ea\u5df1\u6b63\u5728\u8c03\u8bd5\u7684\u6a21\u5757\uff0c\u8fd9\u624d\u662f\u5feb\u901f\u89e3\u51b3\u95ee\u9898\u7684\u201c\u738b\u9053\u201d\u3002\u5de5\u5177\u53ea\u662f\u4e00\u4e2a\u8f85\u52a9\u624b\u6bb5\uff0c\u65e0\u6cd5\u4ee3\u66ff\u5de5\u7a0b\u5e08\u7684\u601d\u7ef4\u3002\\r\\n\\r\\n\u5de5\u7a0b\u5e08\u4e0d\u80fd\u62b1\u7740\u5f97\u8fc7\u4e14\u8fc7\u7684\u5fc3\u6001\uff0c\u4e5f\u4e0d\u80fd\u603b\u662f\u4e00\u77e5\u534a\u89e3\u5730\u8fdb\u884c\u4f4e\u6c34\u5e73\u7684\u91cd\u590d\u5efa\u8bbe\u3002\u6c42\u77e5\u6b32\u671b\u5bf9\u5de5\u7a0b\u5e08\u6280\u672f\u6c34\u5e73\u7684\u63d0\u5347\u6709\u7740\u6700\u5173\u952e\u7684\u4f5c\u7528\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4","description":"\u6709\u4e86\u8bbe\u5907\u6811\u540e\uff0c\u4e0d\u518d\u9700\u8981\u5927\u91cf\u7684\u677f\u7ea7\u4fe1\u606f\uff0c\u8b6c\u5982\u8fc7\u53bb\u7ecf\u5e38\u5728arch/arm/plat-xxx\u548carch/arm/mach-xxx\u4e2d\u5b9e\u65bd\u5982\u4e0b\u4e8b\u60c5\u3002","date":"2025-09-15T14:44:14.233Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":7.54,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.2\u3000Linux\u5185\u6838\u8c03\u8bd5"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b"}},"content":"\u6709\u4e86\u8bbe\u5907\u6811\u540e\uff0c\u4e0d\u518d\u9700\u8981\u5927\u91cf\u7684\u677f\u7ea7\u4fe1\u606f\uff0c\u8b6c\u5982\u8fc7\u53bb\u7ecf\u5e38\u5728arch/arm/plat-xxx\u548carch/arm/mach-xxx\u4e2d\u5b9e\u65bd\u5982\u4e0b\u4e8b\u60c5\u3002\\r\\n\\r\\n# 1.\u6ce8\u518cplatform_device\uff0c\u7ed1\u5b9aresource\uff0c\u5373\u5185\u5b58\u3001IRQ\u7b49\u677f\u7ea7\u4fe1\u606f\\r\\n\\r\\n\u901a\u8fc7\u8bbe\u5907\u6811\u540e\uff0c\u5f62\u5982\uff1a\\r\\n\\r\\n```\\r\\nstatic struct resource xxx_resources[] = {\\r\\n       [0] = {\\r\\n               .start  = \u2026\\r\\n,\\r\\n               .end    = \u2026\\r\\n,\\r\\n               .flags   = IORESOURCE_MEM,\\r\\n       },\\r\\n       [1] = {\\r\\n               .start  = \u2026\\r\\n,\\r\\n               .end    = \u2026\\r\\n,\\r\\n               .flags   = IORESOURCE_IRQ,\\r\\n        },\\r\\n};\\r\\nstatic struct platform_device xxx_device = {\\r\\n        .name           = \\"xxx\\",\\r\\n        .id             = -1,\\r\\n        .dev            = {\\r\\n                                .platform_data          = &xxx_data,\\r\\n        },\\r\\n        .resource       = xxx_resources,\\r\\n        .num_resources  = ARRAY_SIZE(xxx_resources),\\r\\n};\\r\\n```\\r\\n\\r\\n\u4e4b\u7c7b\u7684platform_device\u4ee3\u7801\u90fd\u4e0d\u518d\u9700\u8981\uff0c\u5176\u4e2dplatform_device\u4f1a\u7531\u5185\u6838\u81ea\u52a8\u5c55\u5f00\u3002\u800c\u8fd9\u4e9bresource\u5b9e\u9645\u6765\u6e90\u4e8e.dts\u4e2d\u8bbe\u5907\u8282\u70b9\u7684reg\u3001interrupts\u5c5e\u6027\u3002\\r\\n\\r\\n\u5178\u578b\u7684\uff0c\u5927\u591a\u6570\u603b\u7ebf\u90fd\u4e0e\u201csimple_bus\u201d\u517c\u5bb9\uff0c\u800c\u5728\u4e0eSoC\u5bf9\u5e94\u7684\u8bbe\u5907\u7684.init_machine\u6210\u5458\u51fd\u6570\u4e2d\uff0c\u8c03\u7528of_platform_bus_probe\uff08NULL\uff0cxxx_of_bus_ids\uff0cNULL\uff09\uff1b\u5373\u53ef\u81ea\u52a8\u5c55\u5f00\u6240\u6709\u7684platform_device\u3002\\r\\n\\r\\n# 2.\u6ce8\u518ci2c_board_info\uff0c\u6307\u5b9aIRQ\u7b49\u677f\u7ea7\u4fe1\u606f\\r\\n\\r\\n\u5f62\u5982\uff1a\\r\\n\\r\\n```\\r\\nstatic struct i2c_board_info __initdata afeb9260_i2c_devices[] = {\\r\\n        {\\r\\n                I2C_BOARD_INFO(\\"tlv320aic23\\", 0x1a),\\r\\n        }, {\\r\\n                I2C_BOARD_INFO(\\"fm3130\\", 0x68),\\r\\n        }, {\\r\\n                I2C_BOARD_INFO(\\"24c64\\", 0x50),\\r\\n        },\\r\\n};\\r\\n```\\r\\n\\r\\n\u4e4b\u7c7b\u7684i2c_board_info\u4ee3\u7801\u76ee\u524d\u4e0d\u518d\u9700\u8981\u51fa\u73b0\uff0c\u73b0\u5728\u53ea\u9700\u8981\u628atlv320aic23\u3001fm3130\u300124c64\u8fd9\u4e9b\u8bbe\u5907\u8282\u70b9\u586b\u5145\u4f5c\u4e3a\u76f8\u5e94\u7684I2 C\u63a7\u5236\u5668\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5373\u53ef\uff0c\u7c7b\u4f3c\u4e8e\u524d\u9762\u7684\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\n        i2c@1,0 {\\r\\ncompatible = \\"acme,a1234-i2c-bus\\";\\r\\n            \u2026\\r\\n            rtc@58 {\\r\\ncompatible = \\"maxim,ds1338\\";\\r\\nreg = <58>;\\r\\ninterrupts = < 7 3 >;\\r\\n            };\\r\\n        };\\r\\n```\\r\\n\\r\\n\u8bbe\u5907\u6811\u4e2d\u7684I2 C\u5ba2\u6237\u7aef\u4f1a\u901a\u8fc7\u5728I2 C host\u9a71\u52a8\u7684probe\uff08\uff09\u51fd\u6570\u4e2d\u8c03\u7528\u7684of_i2c_register_devices\uff08&i2c_dev->adapter\uff09\uff1b\u88ab\u81ea\u52a8\u5c55\u5f00\u3002\\r\\n\\r\\n# 3.\u6ce8\u518cspi_board_info\uff0c\u6307\u5b9aIRQ\u7b49\u677f\u7ea7\u4fe1\u606f\\r\\n\\r\\n\u5f62\u5982\uff1a\\r\\n\\r\\n```\\r\\nstatic struct spi_board_info afeb9260_spi_devices[] = {\\r\\n        {       /* DataFlash chip */\\r\\n                .modalias       = \\"mtd_dataflash\\",\\r\\n                .chip_select    = 1,\\r\\n                .max_speed_hz   = 15 * 1000 * 1000,\\r\\n                .bus_num        = 0,\\r\\n        },\\r\\n};\\r\\n```\\r\\n\\r\\n\u4e4b\u7c7b\u7684spi_board_info\u4ee3\u7801\u76ee\u524d\u4e0d\u518d\u9700\u8981\u51fa\u73b0\uff0c\u4e0eI2 C\u7c7b\u4f3c\uff0c\u73b0\u5728\u53ea\u9700\u8981\u628amtd_dataflash\u4e4b\u7c7b\u7684\u8282\u70b9\u4f5c\u4e3aSPI\u63a7\u5236\u5668\u7684\u5b50\u8282\u70b9\u5373\u53ef\uff0cSPI host\u9a71\u52a8\u7684probe\uff08\uff09\u51fd\u6570\u901a\u8fc7spi_register_master\uff08\uff09\u6ce8\u518c\u4e3b\u673a\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u5c55\u5f00\u4f9d\u9644\u4e8e\u5b83\u7684\u4ece\u673a\uff0cspear1310-evb.dts\u4e2d\u7684st\uff0cm25p80SPI\u63a5\u53e3\u7684NOR Flash\u8282\u70b9\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nspi0: spi@e0100000 {\\r\\nstatus = \\"okay\\";\\r\\nnum-cs = <3>;\\r\\n        m25p80@1 {\\r\\ncompatible = \\"st,m25p80\\";\\r\\n                \u2026\\r\\n        };\\r\\n}\\r\\n```\\r\\n\\r\\n# 4.\u591a\u4e2a\u9488\u5bf9\u4e0d\u540c\u7535\u8def\u677f\u7684\u8bbe\u5907\uff0c\u4ee5\u53ca\u76f8\u5173\u7684\u56de\u8c03\u51fd\u6570\\r\\n\\r\\n\u5728\u8fc7\u53bb\uff0cARM Linux\u9488\u5bf9\u4e0d\u540c\u7684\u7535\u8def\u677f\u4f1a\u5efa\u7acb\u7531MACHINE_START\u548cMACHINE_END\u5305\u56f4\u7684\u8bbe\u5907\uff0c\u5f15\u5165\u8bbe\u5907\u6811\u4e4b\u540e\uff0cMACHINE_START\u53d8\u66f4\u4e3aDT_MACHINE_START\uff0c\u5176\u4e2d\u542b\u6709\u4e00\u4e2a.dt_compat\u6210\u5458\uff0c\u7528\u4e8e\u8868\u660e\u76f8\u5173\u7684\u8bbe\u5907\u4e0e.dts\u4e2d\u6839\u8282\u70b9\u7684\u517c\u5bb9\u5c5e\u6027\u7684\u517c\u5bb9\u5173\u7cfb\u3002\\r\\n\\r\\n\u8fd9\u6837\u53ef\u4ee5\u663e\u8457\u6539\u5584\u4ee3\u7801\u7684\u7ed3\u6784\u5e76\u51cf\u5c11\u5197\u4f59\u7684\u4ee3\u7801\uff0c\u5728\u4e0d\u652f\u6301\u8bbe\u5907\u6811\u7684\u60c5\u51b5\u4e0b\uff0c\u5149\u662f\u4e00\u4e2aS3C24xx\u5c31\u5b58\u5728\u591a\u4e2a\u677f\u6587\u4ef6\uff0c\u8b6c\u5982mach-amlm5900.c\u3001mach-gta02.c\u3001mach-smdk2410.c\u3001mach-qt2410.c\u3001mach-rx3715.c\u7b49\uff0c\u5176\u7d2f\u8ba1\u7684\u4ee3\u7801\u91cf\u662f\u76f8\u5f53\u5927\u7684\uff0c\u677f\u7ea7\u4fe1\u606f\u90fd\u7528C\u8bed\u8a00\u6765\u5b9e\u73b0\u3002\u800c\u91c7\u7528\u8bbe\u5907\u6811\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u591a\u4e2aSoC\u548c\u677f\u5b50\u4f7f\u7528\u540c\u4e00\u4e2aDT_MACHINE\u548c\u677f\u6587\u4ef6\uff0c\u677f\u5b50\u548c\u677f\u5b50\u4e4b\u95f4\u7684\u5dee\u5f02\u66f4\u591a\u53ea\u662f\u901a\u8fc7\u4e0d\u540c\u7684.dts\u6587\u4ef6\u6765\u4f53\u73b0\u3002\\r\\n\\r\\n# 5.\u8bbe\u5907\u4e0e\u9a71\u52a8\u7684\u5339\u914d\u65b9\u5f0f\\r\\n\\r\\n\u4f7f\u7528\u8bbe\u5907\u6811\u540e\uff0c\u9a71\u52a8\u9700\u8981\u4e0e\u5728.dts\u4e2d\u63cf\u8ff0\u7684\u8bbe\u5907\u8282\u70b9\u8fdb\u884c\u5339\u914d\uff0c\u4ece\u800c\u4f7f\u9a71\u52a8\u7684probe\uff08\uff09\u51fd\u6570\u6267\u884c\u3002\u65b0\u7684\u9a71\u52a8\u3001\u8bbe\u5907\u7684\u5339\u914d\u53d8\u6210\u4e86\u8bbe\u5907\u6811\u8282\u70b9\u7684\u517c\u5bb9\u5c5e\u6027\u548c\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684OF\u5339\u914d\u8868\u7684\u5339\u914d\u3002\\r\\n\\r\\n# 6.\u8bbe\u5907\u7684\u5e73\u53f0\u6570\u636e\u5c5e\u6027\u5316\\r\\n\\r\\n\u5728Linux 2.6\u4e0b\uff0c\u9a71\u52a8\u4e60\u60ef\u81ea\u5b9a\u4e49platform_data\uff0c\u5728arch/arm/mach-xxx\u6ce8\u518cplatform_device\u3001i2c_board_info\u3001spi_board_info\u7b49\u7684\u65f6\u5019\u7ed1\u5b9aplatform_data\uff0c\u800c\u540e\u9a71\u52a8\u901a\u8fc7\u6807\u51c6API\u83b7\u53d6\u5e73\u53f0\u6570\u636e\u3002\u8b6c\u5982\uff0c\u5728arch/arm/mach-at91/board-sam9263ek.c\u4e0b\u7528\u5982\u4e0b\u4ee3\u7801\u6ce8\u518cgpio_keys\u8bbe\u5907\uff0c\u5b83\u901a\u8fc7gpio_keys_platform_data\u7ed3\u6784\u4f53\u6765\u5b9a\u4e49platform_data\u3002\\r\\n\\r\\n```\\r\\nstatic struct gpio_keys_button ek_buttons[] = {\\r\\n   {    /* BP1, \\"leftclic\\" */\\r\\n        .code          = BTN_LEFT,\\r\\n        .gpio          = AT91_PIN_PC5,\\r\\n        .active_low    = 1,\\r\\n        .desc          = \\"left_click\\",\\r\\n        .wakeup        = 1,\\r\\n   },\\r\\n   {    /* BP2, \\"rightclic\\" */\\r\\n        ...\\r\\n   }\\r\\n};\\r\\nstatic struct gpio_keys_platform_data ek_button_data = {\\r\\n   .buttons       = ek_buttons,\\r\\n   .nbuttons      = ARRAY_SIZE(ek_buttons),\\r\\n};\\r\\nstatic struct platform_device ek_button_device = {\\r\\n   .name          = \\"gpio-keys\\",\\r\\n   .id            = -1,\\r\\n   .num_resources = 0,\\r\\n   .dev           = {\\r\\n           .platform_data= &ek_button_data,\\r\\n   }\\r\\n};\\r\\n```\\r\\n\\r\\n\u8bbe\u5907\u9a71\u52a8drivers/input/keyboard/gpio_keys.c\u5219\u901a\u8fc7\u5982\u4e0b\u7b80\u5355\u65b9\u6cd5\u53d6\u5f97\u8fd9\u4e2a\u4fe1\u606f\u3002\\r\\n\\r\\n```\\r\\nstatic int gpio_keys_probe(struct platform_device *pdev)\\r\\n{\\r\\nstruct device *dev = &pdev->dev;\\r\\nconst struct gpio_keys_platform_data *pdata = dev_get_platdata(dev);\\r\\n        ...\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u8f6c\u79fb\u5230\u8bbe\u5907\u6811\u540e\uff0cplatform_data\u4fbf\u4e0d\u518d\u559c\u6b22\u653e\u5728arch/arm/mach-xxx\u4e2d\u4e86\uff0c\u5b83\u9700\u8981\u4ece\u8bbe\u5907\u6811\u7684\u5c5e\u6027\u4e2d\u83b7\u53d6\uff0c\u6bd4\u5982\u4e00\u4e2a\u7535\u8def\u677f\u4e0a\u6709gpio_keys\uff0c\u5219\u53ea\u9700\u8981\u5728\u8bbe\u5907\u6811\u4e2d\u6dfb\u52a0\u7c7b\u4f3carch/arm/boot/dts/exynos4210-origen.dts\u4e2d\u7684\u5982\u4ee3\u7801\u6e05\u535518.17\u6240\u793a\u7684\u4fe1\u606f\u5219\u53ef\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.17\u3000\u5728\u8bbe\u5907\u6811\u4e2d\u6dfb\u52a0GPIO\u6309\u952e\u4fe1\u606f\\r\\n\\r\\n```\\r\\n 1gpio_keys {\\r\\n 2        compatible = \\"gpio-keys\\";\\r\\n 3        #address-cells = <1>;\\r\\n 4        #size-cells = <0>;\\r\\n 5\\r\\n 6        up {\\r\\n 7               label = \\"Up\\";\\r\\n 8               gpios = <&gpx2 0 1>;\\r\\n 9               linux,code = <KEY_UP>;\\r\\n10               gpio-key,wakeup;\\r\\n11        };\\r\\n12\\r\\n13        down {\\r\\n14               label = \\"Down\\";\\r\\n15               gpios = <&gpx2 1 1>;\\r\\n16               linux,code = <KEY_DOWN>;\\r\\n17               gpio-key,wakeup;\\r\\n18        };\\r\\n19        ...\\r\\n20};\\r\\n```\\r\\n\\r\\n\u800cdrivers/input/keyboard/gpio_keys.c\u5219\u901a\u8fc7\u4ee5of_\u5f00\u5934\u7684\u8bfb\u5c5e\u6027\u7684API\u6765\u8bfb\u53d6\u8fd9\u4e9b\u4fe1\u606f\uff0c\u5e76\u7ec4\u7ec7\u51fagpio_keys_platform_data\u7ed3\u6784\u4f53\uff0c\u5982\u4ee3\u7801\u6e05\u535518.18\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.18\u3000\u5728GPIO\u6309\u952e\u9a71\u52a8\u4e2d\u83b7\u53d6.dts\u4e2d\u7684\u952e\u63cf\\r\\n\\r\\n```\\r\\n 1static struct gpio_keys_platform_data *\\r\\n 2gpio_keys_get_devtree_pdata(struct device *dev)\\r\\n 3{\\r\\n 4         struct device_node *node, *pp;\\r\\n 5         struct gpio_keys_platform_data *pdata;\\r\\n 6         struct gpio_keys_button *button;\\r\\n 7         int error;\\r\\n 8         int nbuttons;\\r\\n 9         int i;\\r\\n10\\r\\n11         node = dev->of_node;\\r\\n12         if (!node)\\r\\n13                 return ERR_PTR(-ENODEV);\\r\\n14\\r\\n15         nbuttons = of_get_child_count(node);\\r\\n16         if (nbuttons == 0)\\r\\n17                 return ERR_PTR(-ENODEV);\\r\\n18\\r\\n19         pdata = devm_kzalloc(dev,\\r\\n20                              sizeof(*pdata) + nbuttons * sizeof(*button),\\r\\n21                              GFP_KERNEL);\\r\\n22         if (!pdata)\\r\\n23                 return ERR_PTR(-ENOMEM);\\r\\n24\\r\\n25         pdata->buttons = (struct gpio_keys_button *)(pdata + 1);\\r\\n26         pdata->nbuttons = nbuttons;\\r\\n27\\r\\n28         pdata->rep = !!of_get_property(node, \\"autorepeat\\", NULL);\\r\\n29\\r\\n30         i = 0;\\r\\n31         for_each_child_of_node(node, pp) {\\r\\n32                 int gpio;\\r\\n33                 enum of_gpio_flags flags;\\r\\n34\\r\\n35                 if (!of_find_property(pp, \\"gpios\\", NULL)) {\\r\\n36                         pdata->nbuttons--;\\r\\n37                         dev_warn(dev, \\"Found button without gpios\\\\n\\");\\r\\n38                         continue;\\r\\n39                 }\\r\\n40\\r\\n41                 gpio = of_get_gpio_flags(pp, 0, &flags);\\r\\n42                 if (gpio < 0) {\\r\\n43                         error = gpio;\\r\\n44                         if (error != -EPROBE_DEFER)\\r\\n45                                 dev_err(dev,\\r\\n46                                         \\"Failed to get gpio flags, error: %d\\\\n\\",\\r\\n47                                         error);\\r\\n48                         return ERR_PTR(error);\\r\\n49                 }\\r\\n50\\r\\n51                 button = &pdata->buttons[i++];\\r\\n52\\r\\n53                 button->gpio = gpio;\\r\\n54                 button->active_low = flags & OF_GPIO_ACTIVE_LOW;\\r\\n55\\r\\n56                 if (of_property_read_u32(pp, \\"linux,code\\", &button->code)) {\\r\\n57                         dev_err(dev, \\"Button without keycode: 0x%x\\\\n\\",\\r\\n58                                 button->gpio);\\r\\n59                         return ERR_PTR(-EINVAL);\\r\\n60                 }\\r\\n61\\r\\n62                 button->desc = of_get_property(pp, \\"label\\", NULL);\\r\\n63\\r\\n64                 if (of_property_read_u32(pp, \\"linux,input-type\\", &button->type))\\r\\n65                         button->type = EV_KEY;\\r\\n66\\r\\n67                 button->wakeup = !!of_get_property(pp, \\"gpio-key,wakeup\\", NULL);\\r\\n68\\r\\n69                 if (of_property_read_u32(pp, \\"debounce-interval\\",\\r\\n70                                          &button->debounce_interval))\\r\\n71                         button->debounce_interval = 5;\\r\\n72         }\\r\\n73\\r\\n74         if (pdata->nbuttons == 0)\\r\\n75                 return ERR_PTR(-EINVAL);\\r\\n76\\r\\n77         return pdata;\\r\\n78}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u901a\u8fc7\u7b2c31\u884c\u7684for_each_child_of_node\uff08\uff09\u904d\u5386gpio_keys\u8282\u70b9\u4e0b\u7684\u6240\u6709\u5b50\u8282\u70b9\uff0c\u5e76\u901a\u8fc7of_get_gpio_flags\uff08\uff09\u3001of_property_read_u32\uff08\uff09\u7b49API\u8bfb\u53d6\u51fa\u6765\u4e0e\u5404\u4e2a\u5b50\u8282\u70b9\u5bf9\u5e94\u7684GPIO\u3001\u4e0e\u6bcf\u4e2aGPIO\u5bf9\u5e94\u7684\u952e\u76d8\u952e\u503c\u7b49\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b","description":"\u7f51\u7edc\u8bbe\u5907\u63a5\u6536\u6570\u636e\u7684\u4e3b\u8981\u65b9\u6cd5\u662f\u7531\u4e2d\u65ad\u5f15\u53d1\u8bbe\u5907\u7684\u4e2d\u65ad\u5904\u7406\u51fd\u6570\uff0c\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u5224\u65ad\u4e2d\u65ad\u7c7b\u578b\uff0c\u5982\u679c\u4e3a\u63a5\u6536\u4e2d\u65ad\uff0c\u5219\u8bfb\u53d6\u63a5\u6536\u5230\u7684\u6570\u636e\uff0c\u5206\u914dskbuffer\u6570\u636e\u7ed3\u6784\u548c\u6570\u636e\u7f13\u51b2\u533a\uff0c\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u590d\u5236\u5230\u6570\u636e\u7f13\u51b2\u533a\uff0c\u5e76\u8c03\u7528netifrx\uff08\uff09\u51fd\u6570\u5c06sk_buffer\u4f20\u9012\u7ed9\u4e0a\u5c42\u534f\u8bae\u3002\u4ee3\u7801\u6e05\u535514.9\u6240\u793a\u4e3a\u5b8c\u6210\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u51fd\u6570\u6a21\u677f\u3002","date":"2025-09-15T14:44:14.221Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":6.495,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.3\u3000\u7531\u8bbe\u5907\u6811\u5f15\u53d1\u7684BSP\u548c\u9a71\u52a8\u53d8\u66f4"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK"}},"content":"\u7f51\u7edc\u8bbe\u5907\u63a5\u6536\u6570\u636e\u7684\u4e3b\u8981\u65b9\u6cd5\u662f\u7531\u4e2d\u65ad\u5f15\u53d1\u8bbe\u5907\u7684\u4e2d\u65ad\u5904\u7406\u51fd\u6570\uff0c\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u5224\u65ad\u4e2d\u65ad\u7c7b\u578b\uff0c\u5982\u679c\u4e3a\u63a5\u6536\u4e2d\u65ad\uff0c\u5219\u8bfb\u53d6\u63a5\u6536\u5230\u7684\u6570\u636e\uff0c\u5206\u914dsk_buffer\u6570\u636e\u7ed3\u6784\u548c\u6570\u636e\u7f13\u51b2\u533a\uff0c\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u590d\u5236\u5230\u6570\u636e\u7f13\u51b2\u533a\uff0c\u5e76\u8c03\u7528netif_rx\uff08\uff09\u51fd\u6570\u5c06sk_buffer\u4f20\u9012\u7ed9\u4e0a\u5c42\u534f\u8bae\u3002\u4ee3\u7801\u6e05\u535514.9\u6240\u793a\u4e3a\u5b8c\u6210\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u51fd\u6570\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.9\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static void xxx_interrupt(int irq, void *dev_id)\\r\\n 2{\\r\\n 3  ...\\r\\n 4  switch (status &ISQ_EVENT_MASK) {\\r\\n 5  case ISQ_RECEIVER_EVENT:\\r\\n 6      /* \u83b7\u53d6\u6570\u636e\u5305*/\\r\\n 7      xxx_rx(dev);\\r\\n 8      break;\\r\\n 9      /* \u5176\u4ed6\u7c7b\u578b\u7684\u4e2d\u65ad*/\\r\\n10  }\\r\\n11}\\r\\n12static void xxx_rx(struct xxx_device *dev)\\r\\n13{\\r\\n14  ...\\r\\n15  length = get_rev_len (...);\\r\\n16  /* \u5206\u914d\u65b0\u7684\u5957\u63a5\u5b57\u7f13\u51b2\u533a*/\\r\\n17  skb = dev_alloc_skb(length + 2);\\r\\n18\\r\\n19  skb_reserve(skb, 2); /* \u5bf9\u9f50*/\\r\\n20  skb->dev = dev;\\r\\n21\\r\\n22  /* \u8bfb\u53d6\u786c\u4ef6\u4e0a\u63a5\u6536\u5230\u7684\u6570\u636e*/\\r\\n23  insw(ioaddr + RX_FRAME_PORT, skb_put(skb, length), length >> 1);\\r\\n24  if (length &1)\\r\\n25    skb->data[length - 1] = inw(ioaddr + RX_FRAME_PORT);\\r\\n26\\r\\n27  /* \u83b7\u53d6\u4e0a\u5c42\u534f\u8bae\u7c7b\u578b*/\\r\\n28  skb->protocol = eth_type_trans(skb, dev);\\r\\n29\\r\\n30  /* \u628a\u6570\u636e\u5305\u4ea4\u7ed9\u4e0a\u5c42*/\\r\\n31  netif_rx(skb);\\r\\n32\\r\\n33  /* \u8bb0\u5f55\u63a5\u6536\u65f6\u95f4\u6233*/\\r\\n34  dev->last_rx = jiffies;\\r\\n35  ...\\r\\n36}\\r\\n```\\r\\n\\r\\n\u4ece\u4e0a\u8ff0\u4ee3\u7801\u7684\u7b2c4~7\u884c\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53\u8bbe\u5907\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5224\u65ad\u4e2d\u65ad\u7c7b\u578b\u4e3a\u6570\u636e\u5305\u63a5\u6536\u4e2d\u65ad\u65f6\uff0c\u5b83\u8c03\u7528\u7b2c12~36\u884c\u5b9a\u4e49\u7684xxx_rx\uff08\uff09\u51fd\u6570\u5b8c\u6210\u66f4\u6df1\u5165\u7684\u6570\u636e\u5305\u63a5\u6536\u5de5\u4f5c\u3002xxx_rx\uff08\uff09\u51fd\u6570\u4ee3\u7801\u4e2d\u7684\u7b2c15\u884c\u4ece\u786c\u4ef6\u8bfb\u53d6\u5230\u63a5\u6536\u6570\u636e\u5305\u6709\u6548\u6570\u636e\u7684\u957f\u5ea6\uff0c\u7b2c16~19\u884c\u5206\u914dsk_buff\u548c\u6570\u636e\u7f13\u51b2\u533a\uff0c\u7b2c22~25\u884c\u8bfb\u53d6\u786c\u4ef6\u4e0a\u63a5\u6536\u5230\u7684\u6570\u636e\u5e76\u653e\u5165\u6570\u636e\u7f13\u51b2\u533a\uff0c\u7b2c27~28\u884c\u89e3\u6790\u63a5\u6536\u6570\u636e\u5305\u4e0a\u5c42\u534f\u8bae\u7684\u7c7b\u578b\uff0c\u6700\u540e\uff0c\u7b2c30~31\u884c\u4ee3\u7801\u5c06\u6570\u636e\u5305\u4e0a\u4ea4\u7ed9\u4e0a\u5c42\u534f\u8bae\u3002\\r\\n\\r\\n\u5982\u679c\u662fNAPI\u517c\u5bb9\u7684\u8bbe\u5907\u9a71\u52a8\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7poll\u65b9\u5f0f\u63a5\u6536\u6570\u636e\u5305\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u4e3a\u8be5\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u4f5c\u4e3anetif_napi_add\uff08\uff09\u53c2\u6570\u7684xxx_poll\uff08\uff09\u51fd\u6570\uff0c\u5982\u4ee3\u7801\u6e05\u535514.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.10\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684xxx_poll\uff08\uff09\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static int xxx_poll(struct napi_struct *napi, int budget)\\r\\n 2{\\r\\n 3  int npackets = 0;\\r\\n 4  struct sk_buff *skb;\\r\\n 5  struct xxx_priv *priv = container_of(napi, struct xxx_priv, napi);\\r\\n 6  struct xxx_packet *pkt;\\r\\n 7\\r\\n 8  while (npackets < budget && priv->rx_queue) {\\r\\n 9    /* \u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u6570\u636e\u5305*/\\r\\n10    pkt = xxx_dequeue_buf(dev);\\r\\n11\\r\\n12    /* \u63a5\u4e0b\u6765\u7684\u5904\u7406\u548c\u4e2d\u65ad\u89e6\u53d1\u7684\u6570\u636e\u5305\u63a5\u6536\u4e00\u81f4*/\\r\\n13    skb = dev_alloc_skb(pkt->datalen + 2);\\r\\n14    ...\\r\\n15    skb_reserve(skb, 2);\\r\\n16    memcpy(skb_put(skb, pkt->datalen), pkt->data, pkt->datalen);\\r\\n17    skb->dev = dev;\\r\\n18    skb->protocol = eth_type_trans(skb, dev);\\r\\n19    /* \u8c03\u7528netif_receive_skb\uff0c\u800c\u4e0d\u662fnet_rx, \u5c06\u6570\u636e\u5305\u4ea4\u7ed9\u4e0a\u5c42\u534f\u8bae*/\\r\\n20    netif_receive_skb(skb);\\r\\n21\\r\\n22    /* \u66f4\u6539\u7edf\u8ba1\u6570\u636e*/\\r\\n23    priv->stats.rx_packets++;\\r\\n24    priv->stats.rx_bytes += pkt->datalen;\\r\\n25    xxx_release_buffer(pkt);\\r\\n26    npackets++;\\r\\n27  }\\r\\n28  if (npackets < budget) {\\r\\n29      napi_complete(napi);\\r\\n30      xxx_enable_rx_int (\u2026); /* \u518d\u6b21\u542f\u52a8\u7f51\u7edc\u8bbe\u5907\u7684\u63a5\u6536\u4e2d\u65ad*/\\r\\n31  }\\r\\n32  return npackets;\\r\\n33}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684budget\u662f\u5728\u521d\u59cb\u5316\u9636\u6bb5\u5206\u914d\u7ed9\u63a5\u53e3\u7684weight\u503c\uff0cxxx_poll\uff08\uff09\u51fd\u6570\u6bcf\u6b21\u53ea\u80fd\u63a5\u6536\u6700\u591abudget\u4e2a\u6570\u636e\u5305\u3002\u7b2c8\u884c\u7684while\uff08\uff09\u5faa\u73af\u8bfb\u53d6\u8bbe\u5907\u7684\u63a5\u6536\u7f13\u51b2\u533a\uff0c\u540c\u65f6\u8bfb\u53d6\u6570\u636e\u5305\u5e76\u63d0\u4ea4\u7ed9\u4e0a\u5c42\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u548c\u4e2d\u65ad\u89e6\u53d1\u7684\u6570\u636e\u5305\u63a5\u6536\u8fc7\u7a0b\u4e00\u81f4\uff0c\u4f46\u662f\u6700\u540e\u4f7f\u7528\u7684\u662fnetif_receive_skb\uff08\uff09\u51fd\u6570\u800c\u4e0d\u662fnetif_rx\uff08\uff09\u51fd\u6570\u5c06\u6570\u636e\u5305\u63d0\u4ea4\u7ed9\u4e0a\u5c42\u3002\u8fd9\u91cc\u4f53\u73b0\u51fa\u4e86\u4e2d\u65ad\u5904\u7406\u673a\u5236\u548c\u8f6e\u8be2\u673a\u5236\u4e4b\u95f4\u7684\u5dee\u522b\u3002\\r\\n\\r\\n\u5f53\u4e00\u4e2a\u8f6e\u8be2\u8fc7\u7a0b\u7ed3\u675f\u65f6\uff0c\u7b2c29\u884c\u4ee3\u7801\u8c03\u7528napi_complete\uff08\uff09\u5ba3\u5e03\u8fd9\u4e00\u6d88\u606f\uff0c\u800c\u7b2c30\u884c\u4ee3\u7801\u5219\u518d\u6b21\u542f\u52a8\u7f51\u7edc\u8bbe\u5907\u7684\u63a5\u6536\u4e2d\u65ad\u3002\\r\\n\\r\\n\u867d\u7136NAPI\u517c\u5bb9\u7684\u8bbe\u5907\u9a71\u52a8\u4ee5xxx_poll\uff08\uff09\u65b9\u5f0f\u63a5\u6536\u6570\u636e\u5305\uff0c\u4f46\u662f\u4ecd\u7136\u9700\u8981\u9996\u6b21\u6570\u636e\u5305\u63a5\u6536\u4e2d\u65ad\u6765\u89e6\u53d1\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u4e0e\u6570\u636e\u5305\u7684\u4e2d\u65ad\u63a5\u6536\u65b9\u5f0f\u4e0d\u540c\u7684\u662f\uff0c\u4ee5\u8f6e\u8be2\u65b9\u5f0f\u63a5\u6536\u6570\u636e\u5305\u65f6\uff0c\u5f53\u7b2c\u4e00\u6b21\u4e2d\u65ad\u53d1\u751f\u540e\uff0c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u8981\u7981\u6b62\u8bbe\u5907\u7684\u6570\u636e\u5305\u63a5\u6536\u4e2d\u65ad\u5e76\u8c03\u5ea6NAPI\uff0c\u5982\u4ee3\u7801\u6e05\u535514.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535514.11\u3000\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7684poll\u4e2d\u65ad\u5904\u7406\\r\\n\\r\\n```\\r\\n 1static void xxx_interrupt(int irq, void *dev_id)\\r\\n 2{\\r\\n 3  switch (status &ISQ_EVENT_MASK) {\\r\\n 4  case ISQ_RECEIVER_EVENT:\\r\\n 5      \u2026 /* \u83b7\u53d6\u6570\u636e\u5305*/\\r\\n 6      xxx_disable_rx_int(...);  /* \u7981\u6b62\u63a5\u6536\u4e2d\u65ad*/\\r\\n 7      napi_schedule(&priv->napi);\\r\\n 8      break;\\r\\n 9    \u2026 /* \u5176\u4ed6\u7c7b\u578b\u7684\u4e2d\u65ad*/\\r\\n10  }\\r\\n11}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c7\u884c\u7684napi_schedule\uff08\uff09\u51fd\u6570\u88ab\u8f6e\u8be2\u65b9\u5f0f\u9a71\u52a8\u7684\u4e2d\u65ad\u7a0b\u5e8f\u8c03\u7528\uff0c\u5c06\u8bbe\u5907\u7684poll\u65b9\u6cd5\u6dfb\u52a0\u5230\u7f51\u7edc\u5c42\u7684poll\u5904\u7406\u961f\u5217\u4e2d\uff0c\u6392\u961f\u5e76\u4e14\u51c6\u5907\u63a5\u6536\u6570\u636e\u5305\uff0c\u6700\u7ec8\u89e6\u53d1\u4e00\u4e2aNET_RX_SOFTIRQ\u8f6f\u4e2d\u65ad\uff0c\u4ece\u800c\u901a\u77e5\u7f51\u7edc\u5c42\u63a5\u6536\u6570\u636e\u5305\u3002\u56fe14.3\u6240\u793a\u4e3aNAPI\u9a71\u52a8\u7a0b\u5e8f\u5404\u90e8\u5206\u7684\u8c03\u7528\u5173\u7cfb\u3002\\r\\n\\r\\n![1744902006741](./figure/1744902006741.png)\\r\\n\\r\\n\u56fe14.3\u3000NAPI\u9a71\u52a8\u7a0b\u5e8f\u5404\u90e8\u5206\u7684\u8c03\u7528\u5173\u7cfb\\r\\n\\r\\n\u5728\u652f\u6301NAPI\u7684\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u901a\u5e38\u8fd8\u4f1a\u8fdb\u884c\u5982\u4e0b\u4e0eNAPI\u76f8\u5173\u7684\u5de5\u4f5c\u3002\\r\\n\\r\\n1\uff09\u5728\u79c1\u6709\u6570\u636e\u7ed3\u6784\u4f53\uff08\u5982xxx_priv\uff09\u4e2d\u589e\u52a0\u4e00\u4e2a\u6210\u5458\uff1a\\r\\n\\r\\n```\\r\\nstruct napi_struct napi;\\r\\n```\\r\\n\\r\\n\u5728\u4ee3\u7801\u4e2d\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u4f7f\u7528container_of\uff08\uff09\u901a\u8fc7NAPI\u6210\u5458\u53cd\u5411\u83b7\u5f97\u5bf9\u5e94\u7684xxx_priv\u6307\u9488\u3002\\r\\n\\r\\n2\uff09\u901a\u5e38\u4f1a\u5728\u8bbe\u5907\u9a71\u52a8\u521d\u59cb\u5316\u65f6\u8c03\u7528\uff1a\\r\\n\\r\\n```\\r\\nnetif_napi_add(dev, napi, xxx_poll, XXX_NET_NAPI_WEIGHT);\\r\\n```\\r\\n\\r\\n3\uff09\u901a\u5e38\u4f1a\u5728net_device\u7ed3\u6784\u4f53\u7684open\uff08\uff09\u548cstop\uff08\uff09\u6210\u5458\u51fd\u6570\u4e2d\u5206\u522b\u8c03\u7528napi_enable\uff08\uff09\u548cnapi_disable\uff08\uff09\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK","description":"DEBUGLL\u5bf9\u5e94\u5185\u6838\u7684Kernel low-level debugging\u529f\u80fd\uff0cEARLYPRINTK\u5219\u5bf9\u5e94\u5185\u6838\u4e2d\u4e00\u4e2a\u65e9\u671f\u7684\u63a7\u5236\u53f0\u3002\u4e3a\u4e86\u5728\u5185\u6838\u7684drivers/tty/serial\u4e0b\u7684\u63a7\u5236\u53f0\u9a71\u52a8\u521d\u59cb\u5316\u4e4b\u524d\u652f\u6301\u6253\u5370\uff0c\u53ef\u4ee5\u9009\u62e9DEBUGLL\u548cEARLYPRINTK\u8fd9\u4e24\u4e2a\u914d\u7f6e\u9009\u9879\u3002\u53e6\u5916\uff0c\u4e5f\u9700\u8981\u5728bootargs\u4e2d\u8bbe\u7f6eearlyprintk\u7684\u9009\u9879\u3002","date":"2025-09-15T14:44:14.213Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.92,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/14.6\u3000\u6570\u636e\u63a5\u6536\u6d41\u7a0b"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784"}},"content":"DEBUG_LL\u5bf9\u5e94\u5185\u6838\u7684Kernel low-level debugging\u529f\u80fd\uff0cEARLY_PRINTK\u5219\u5bf9\u5e94\u5185\u6838\u4e2d\u4e00\u4e2a\u65e9\u671f\u7684\u63a7\u5236\u53f0\u3002\u4e3a\u4e86\u5728\u5185\u6838\u7684drivers/tty/serial\u4e0b\u7684\u63a7\u5236\u53f0\u9a71\u52a8\u521d\u59cb\u5316\u4e4b\u524d\u652f\u6301\u6253\u5370\uff0c\u53ef\u4ee5\u9009\u62e9DEBUG_LL\u548cEARLY_PRINTK\u8fd9\u4e24\u4e2a\u914d\u7f6e\u9009\u9879\u3002\u53e6\u5916\uff0c\u4e5f\u9700\u8981\u5728bootargs\u4e2d\u8bbe\u7f6eearlyprintk\u7684\u9009\u9879\u3002\\r\\n\\r\\n\u5bf9\u4e8eLDDD3_vexpress\u800c\u8a00\uff0c\u6ca1\u6709DEBUG_LL\u548cEARLY_PRINTK\u7684\u65f6\u5019\uff0c\u6211\u4eec\u770b\u5230\u7684\u5185\u6838\u6700\u65e9\u7684\u6253\u5370\u662f\uff1a\\r\\n\\r\\n```\\r\\nBooting Linux on physical CPU 0x0\\r\\nInitializing cgroup subsys cpuset\\r\\nLinux version \u2026\\r\\n```\\r\\n\\r\\n\u5982\u679c\u6211\u4eec\u4f7f\u80fdDEBUG_LL\u548cEARLY_PRINTK\uff0c\u9009\u62e9\u5982\u56fe21.5\u6240\u793a\u7684\u201cUse PL011UART0at 0x10009000\uff08V2P-CA9core tile\uff09\u201d\u8fd9\u4e2a\u4f4e\u7ea7\u522b\u8c03\u8bd5\u53e3\uff0c\u5e76\u5728bootargs\u4e2d\u8bbe\u7f6eearlyprintk\uff0c\u5219\u6211\u4eec\u770b\u5230\u4e86\u66f4\u65e9\u7684\u6253\u5370\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\nUncompressing Linux... done, booting the kernel.\\r\\n```\\r\\n\\r\\n![1747578131194](./figure/1747578131194.png)\\r\\n\\r\\n\u56fe21.5\u3000\u9009\u62e9\u4f4e\u7ea7\u522b\u8c03\u8bd5UART"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784","description":"\u6574\u4e2a\u8bbe\u5907\u6811\u7275\u6d89\u9762\u6bd4\u8f83\u5e7f\uff0c\u5373\u589e\u52a0\u4e86\u65b0\u7684\u7528\u4e8e\u63cf\u8ff0\u8bbe\u5907\u786c\u4ef6\u4fe1\u606f\u7684\u6587\u672c\u683c\u5f0f\uff0c\u53c8\u589e\u52a0\u4e86\u7f16\u8bd1\u8fd9\u4e2a\u6587\u672c\u7684\u5de5\u5177\uff0c\u540c\u65f6Bootloader\u4e5f\u9700\u8981\u652f\u6301\u5c06\u7f16\u8bd1\u540e\u7684\u8bbe\u5907\u6811\u4f20\u9012\u7ed9Linux\u5185\u6838\u3002","date":"2025-09-15T14:44:14.197Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":41.33,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/21.4\u3000DEBUG_LL\u548cEARLY_PRINTK"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3"}},"content":"\u6574\u4e2a\u8bbe\u5907\u6811\u7275\u6d89\u9762\u6bd4\u8f83\u5e7f\uff0c\u5373\u589e\u52a0\u4e86\u65b0\u7684\u7528\u4e8e\u63cf\u8ff0\u8bbe\u5907\u786c\u4ef6\u4fe1\u606f\u7684\u6587\u672c\u683c\u5f0f\uff0c\u53c8\u589e\u52a0\u4e86\u7f16\u8bd1\u8fd9\u4e2a\u6587\u672c\u7684\u5de5\u5177\uff0c\u540c\u65f6Bootloader\u4e5f\u9700\u8981\u652f\u6301\u5c06\u7f16\u8bd1\u540e\u7684\u8bbe\u5907\u6811\u4f20\u9012\u7ed9Linux\u5185\u6838\u3002\\r\\n\\r\\n# 18.2.1DTS\u3001DTC\u548cDTB\u7b49\\r\\n\\r\\n## 1.DTS\\r\\n\\r\\n\u6587\u4ef6.dts\u662f\u4e00\u79cdASCII\u6587\u672c\u683c\u5f0f\u7684\u8bbe\u5907\u6811\u63cf\u8ff0\uff0c\u6b64\u6587\u672c\u683c\u5f0f\u975e\u5e38\u4eba\u6027\u5316\uff0c\u9002\u5408\u4eba\u7c7b\u7684\u9605\u8bfb\u4e60\u60ef\u3002\u57fa\u672c\u4e0a\uff0c\u5728ARM Linux\u4e2d\uff0c\u4e00\u4e2a.dts\u6587\u4ef6\u5bf9\u5e94\u4e00\u4e2aARM\u7684\u8bbe\u5907\uff0c\u4e00\u822c\u653e\u7f6e\u5728\u5185\u6838\u7684arch/arm/boot/dts/\u76ee\u5f55\u4e2d\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728arch/powerpc/boot/dts\u3001arch/powerpc/boot/dts\u3001arch/c6x/boot/dts\u3001arch/openrisc/boot/dts\u7b49\u76ee\u5f55\u4e2d\uff0c\u4e5f\u5b58\u5728\u5927\u91cf\u7684.dts\u6587\u4ef6\uff0c\u8fd9\u8bc1\u660eDTS\u7edd\u5bf9\u4e0d\u662fARM\u7684\u4e13\u5229\u3002\\r\\n\\r\\n\u7531\u4e8e\u4e00\u4e2aSoC\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u8bbe\u5907\uff08\u4e00\u4e2aSoC\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u4ea7\u54c1\u548c\u7535\u8def\u677f\uff09\uff0c\u8fd9\u4e9b.dts\u6587\u4ef6\u52bf\u5fc5\u987b\u5305\u542b\u8bb8\u591a\u5171\u540c\u7684\u90e8\u5206\uff0cLinux\u5185\u6838\u4e3a\u4e86\u7b80\u5316\uff0c\u628aSoC\u516c\u7528\u7684\u90e8\u5206\u6216\u8005\u591a\u4e2a\u8bbe\u5907\u5171\u540c\u7684\u90e8\u5206\u4e00\u822c\u63d0\u70bc\u4e3a.dtsi\uff0c\u7c7b\u4f3c\u4e8eC\u8bed\u8a00\u7684\u5934\u6587\u4ef6\u3002\u5176\u4ed6\u7684\u8bbe\u5907\u5bf9\u5e94\u7684.dts\u5c31\u5305\u62ec\u8fd9\u4e2a.dtsi\u3002\u8b6c\u5982\uff0c\u5bf9\u4e8eVEXPRESS\u800c\u8a00\uff0cvexpress-v2m.dtsi\u5c31\u88abvexpress-v2p-ca9.dts\u6240\u5f15\u7528\uff0cvexpress-v2p-ca9.dts\u6709\u5982\u4e0b\u4e00\u884c\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\n/include/ \\"vexpress-v2m.dtsi\\"\\r\\n```\\r\\n\\r\\n\u5f53\u7136\uff0c\u548cC\u8bed\u8a00\u7684\u5934\u6587\u4ef6\u7c7b\u4f3c\uff0c.dtsi\u4e5f\u53ef\u4ee5\u5305\u62ec\u5176\u4ed6\u7684.dtsi\uff0c\u8b6c\u5982\u51e0\u4e4e\u6240\u6709\u7684ARM SoC\u7684.dtsi\u90fd\u5f15\u7528\u4e86skeleton.dtsi\u3002\\r\\n\\r\\n\u6587\u4ef6.dts\uff08\u6216\u8005\u5176\u5305\u62ec\u7684.dtsi\uff09\u7684\u57fa\u672c\u5143\u7d20\u5373\u4e3a\u524d\u6587\u6240\u8ff0\u7684\u8282\u70b9\u548c\u5c5e\u6027\uff0c\u4ee3\u7801\u6e05\u535518.1\u7ed9\u51fa\u4e86\u4e00\u4e2a\u8bbe\u5907\u6811\u7ed3\u6784\u7684\u6a21\u7248\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.1\u3000\u8bbe\u5907\u6811\u7ed3\u6784\u6a21\u7248\\r\\n\\r\\n```\\r\\n 1/ {\\r\\n 2      node1 {\\r\\n 3          a-string-property = \\"A string\\";\\r\\n 4          a-string-list-property = \\"first string\\", \\"second string\\";\\r\\n 5          a-byte-data-property = [0x01 0x23 0x34 0x56];\\r\\n 6          child-node1 {\\r\\n 7              first-child-property;\\r\\n 8              second-child-property = <1>;\\r\\n 9              a-string-property = \\"Hello, world\\";\\r\\n10          };\\r\\n11          child-node2 {\\r\\n12          };\\r\\n13      };\\r\\n14      node2 {\\r\\n15          an-empty-property;\\r\\n16          a-cell-property = <1 2 3 4>; /* each number (cell) is a uint32 */\\r\\n17          child-node1 {\\r\\n18          };\\r\\n19      };\\r\\n20};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0.dts\u6587\u4ef6\u5e76\u6ca1\u6709\u4ec0\u4e48\u771f\u5b9e\u7684\u7528\u9014\uff0c\u4f46\u5b83\u57fa\u672c\u8868\u5f81\u4e86\u4e00\u4e2a\u8bbe\u5907\u6811\u6e90\u6587\u4ef6\u7684\u7ed3\u6784\uff1a\\r\\n\\r\\n1\u4e2aroot\u8282\u70b9\\"/\\"\uff1broot\u8282\u70b9\u4e0b\u9762\u542b\u4e00\u7cfb\u5217\u5b50\u8282\u70b9\uff0c\u672c\u4f8b\u4e2d\u4e3anode1\u548cnode2\uff1b\u8282\u70b9node1\u4e0b\u53c8\u542b\u6709\u4e00\u7cfb\u5217\u5b50\u8282\u70b9\uff0c\u672c\u4f8b\u4e2d\u4e3achild-node1\u548cchild-node2\uff1b\u5404\u8282\u70b9\u90fd\u6709\u4e00\u7cfb\u5217\u5c5e\u6027\u3002\u8fd9\u4e9b\u5c5e\u6027\u53ef\u80fd\u4e3a\u7a7a\uff0c\u5982an-empty-property\uff1b\u53ef\u80fd\u4e3a\u5b57\u7b26\u4e32\uff0c\u5982a-string-property\uff1b\u53ef\u80fd\u4e3a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5982a-string-list-property\uff1b\u53ef\u80fd\u4e3aCells\uff08\u7531u32\u6574\u6570\u7ec4\u6210\uff09\uff0c\u5982second-child-property\uff1b\u53ef\u80fd\u4e3a\u4e8c\u8fdb\u5236\u6570\uff0c\u5982a-byte-data-property\u3002\\r\\n\\r\\n\u4e0b\u9762\u4ee5\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u8bbe\u5907\u4e3a\u4f8b\u6765\u770b\u5982\u4f55\u5199\u4e00\u4e2a.dts\u6587\u4ef6\u3002\u5982\u56fe18.1\u6240\u793a\uff0c\u5047\u8bbe\u6b64\u8bbe\u5907\u7684\u914d\u7f6e\u5982\u4e0b\uff1a\\r\\n\\r\\n![1745506107529](./figure/1745506107529.png)\\r\\n\\r\\n\u56fe18.1\u3000\u8bbe\u5907\u6811\u53c2\u8003\u786c\u4ef6\u7ed3\u6784\u56fe\\r\\n\\r\\n1\u4e2a\u53cc\u6838ARM Cortex-A932\u4f4d\u5904\u7406\u5668\uff1bARM\u672c\u5730\u603b\u7ebf\u4e0a\u7684\u5185\u5b58\u6620\u5c04\u533a\u57df\u5206\u5e03\u6709\u4e24\u4e2a\u4e32\u53e3\uff08\u5206\u522b\u4f4d\u4e8e0x101F1000\u548c0x101F2000\uff09\u3001GPIO\u63a7\u5236\u5668\uff08\u4f4d\u4e8e0x101F3000\uff09\u3001SPI\u63a7\u5236\u5668\uff08\u4f4d\u4e8e0x10170000\uff09\u3001\u4e2d\u65ad\u63a7\u5236\u5668\uff08\u4f4d\u4e8e0x10140000\uff09\u548c\u4e00\u4e2a\u5916\u90e8\u603b\u7ebf\u6865\uff1b\u5916\u90e8\u603b\u7ebf\u6865\u4e0a\u53c8\u8fde\u63a5\u4e86SMC SMC91111\u4ee5\u592a\u7f51\uff08\u4f4d\u4e8e0x10100000\uff09\u3001I2 C\u63a7\u5236\u5668\uff08\u4f4d\u4e8e0x10160000\uff09\u300164MB NOR Flash\uff08\u4f4d\u4e8e0x30000000\uff09\uff1b\u5916\u90e8\u603b\u7ebf\u6865\u4e0a\u8fde\u63a5\u7684I2 C\u63a7\u5236\u5668\u6240\u5bf9\u5e94\u7684I2 C\u603b\u7ebf\u4e0a\u53c8\u8fde\u63a5\u4e86Maxim DS1338\u5b9e\u65f6\u949f\uff08I2 C\u5730\u5740\u4e3a0x58\uff09\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u56fe18.1\u6240\u793a\u786c\u4ef6\u7ed3\u6784\u56fe\uff0c\u5982\u679c\u7528\u201c.dts\u201d\u63cf\u8ff0\uff0c\u5219\u5176\u5bf9\u5e94\u7684\u201c.dts\u201d\u6587\u4ef6\u5982\u4ee3\u7801\u6e05\u535518.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.2\u3000\u53c2\u8003\u786c\u4ef6\u7684\u8bbe\u5907\u6811\u6587\u4ef6\\r\\n\\r\\n```\\r\\n 1/ {\\r\\n 2      compatible = \\"acme,coyotes-revenge\\";\\r\\n 3      #address-cells = <1>;\\r\\n 4      #size-cells = <1>;\\r\\n 5      interrupt-parent = <&intc>;\\r\\n 6\\r\\n 7      cpus {\\r\\n 8          #address-cells = <1>;\\r\\n 9          #size-cells = <0>;\\r\\n10          cpu@0 {\\r\\n11              compatible = \\"arm,cortex-a9\\";\\r\\n12              reg = <0>;\\r\\n13          };\\r\\n14          cpu@1 {\\r\\n15              compatible = \\"arm,cortex-a9\\";\\r\\n16              reg = <1>;\\r\\n17          };\\r\\n18      };\\r\\n19\\r\\n20      serial@101f0000 {\\r\\n21          compatible = \\"arm,pl011\\";\\r\\n22          reg = <0x101f0000 0x1000 >;\\r\\n23          interrupts = < 1 0 >;\\r\\n24      };\\r\\n25\\r\\n26      serial@101f2000 {\\r\\n27          compatible = \\"arm,pl011\\";\\r\\n28          reg = <0x101f2000 0x1000 >;\\r\\n29          interrupts = < 2 0 >;\\r\\n30      };\\r\\n31\\r\\n32      gpio@101f3000 {\\r\\n33          compatible = \\"arm,pl061\\";\\r\\n34          reg = <0x101f3000 0x1000\\r\\n35                 0x101f4000 0x0010>;\\r\\n36          interrupts = < 3 0 >;\\r\\n37      };\\r\\n38\\r\\n39      intc: interrupt-controller@10140000 {\\r\\n40          compatible = \\"arm,pl190\\";\\r\\n41          reg = <0x10140000 0x1000 >;\\r\\n42          interrupt-controller;\\r\\n43          #interrupt-cells = <2>;\\r\\n44      };\\r\\n45\\r\\n46      spi@10115000 {\\r\\n47          compatible = \\"arm,pl022\\";\\r\\n48          reg = <0x10115000 0x1000 >;\\r\\n49          interrupts = < 4 0 >;\\r\\n50      };\\r\\n51\\r\\n52      external-bus {\\r\\n53          #address-cells = <2>\\r\\n54          #size-cells = <1>;\\r\\n55          ranges = <0 0  0x10100000  0x10000     // Chipselect 1, Ethernet\\r\\n56                    1 0  0x10160000  0x10000        // Chipselect 2, i2c controller\\r\\n57                    2 0  0x30000000  0x1000000>; // Chipselect 3, NOR Flash\\r\\n58\\r\\n59          ethernet@0,0 {\\r\\n60              compatible = \\"smc,smc91c111\\";\\r\\n61              reg = <0 0 0x1000>;\\r\\n62              interrupts = < 5 2 >;\\r\\n63          };\\r\\n64\\r\\n65          i2c@1,0 {\\r\\n66              compatible = \\"acme,a1234-i2c-bus\\";\\r\\n67              #address-cells = <1>;\\r\\n68              #size-cells = <0>;\\r\\n69              reg = <1 0 0x1000>;\\r\\n70              interrupts = < 6 2 >;\\r\\n71              rtc@58 {\\r\\n72                  compatible = \\"maxim,ds1338\\";\\r\\n73                  reg = <58>;\\r\\n74                  interrupts = < 7 3 >;\\r\\n75              };\\r\\n76          };\\r\\n77\\r\\n78          flash@2,0 {\\r\\n79              compatible = \\"samsung,k8f1315ebm\\", \\"cfi-flash\\";\\r\\n80              reg = <2 0 0x4000000>;\\r\\n81          };\\r\\n82      };\\r\\n83};\\r\\n```\\r\\n\\r\\n\u5728\u4e0a\u8ff0.dts\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u770b\u51faexternal-bus\u662f\u6839\u8282\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u800cI2 C\u53c8\u662fexternal-bus\u7684\u5b50\u8282\u70b9\uff0cRTC\u53c8\u8fdb\u4e00\u6b65\u662fI2 C\u7684\u5b50\u8282\u70b9\u3002\u6bcf\u4e00\u7ea7\u8282\u70b9\u90fd\u6709\u4e00\u4e9b\u5c5e\u6027\u4fe1\u606f\uff0c\u672c\u7ae0\u540e\u7eed\u90e8\u5206\u4f1a\u8fdb\u884c\u8be6\u7ec6\u89e3\u91ca\u3002\\r\\n\\r\\n## 2.DTC\uff08Device Tree Compiler\uff09\\r\\n\\r\\nDTC\u662f\u5c06.dts\u7f16\u8bd1\u4e3a.dtb\u7684\u5de5\u5177\u3002DTC\u7684\u6e90\u4ee3\u7801\u4f4d\u4e8e\u5185\u6838\u7684scripts/dtc\u76ee\u5f55\u4e2d\uff0c\u5728Linux\u5185\u6838\u4f7f\u80fd\u4e86\u8bbe\u5907\u6811\u7684\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5185\u6838\u7684\u65f6\u5019\u4e3b\u673a\u5de5\u5177DTC\u4f1a\u88ab\u7f16\u8bd1\u51fa\u6765\uff0c\u5bf9\u5e94\u4e8escripts/dtc/Makefile\u4e2d\u201chostprogs-y\uff1a=dtc\u201d\u8fd9\u4e00hostprogs\u7684\u7f16\u8bd1\u76ee\u6807\u3002\\r\\n\\r\\n\u5f53\u7136\uff0cDTC\u4e5f\u53ef\u4ee5\u5728Ubuntu\u4e2d\u5355\u72ec\u5b89\u88c5\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nsudo apt-get install device-tree-compiler\\r\\n```\\r\\n\\r\\n\u5728Linux\u5185\u6838\u7684arch/arm/boot/dts/Makefile\u4e2d\uff0c\u63cf\u8ff0\u4e86\u5f53\u67d0\u79cdSoC\u88ab\u9009\u4e2d\u540e\uff0c\u54ea\u4e9b.dtb\u6587\u4ef6\u4f1a\u88ab\u7f16\u8bd1\u51fa\u6765\uff0c\u5982\u4e0eVEXPRESS\u5bf9\u5e94\u7684.dtb\u5305\u62ec\uff1a\\r\\n\\r\\n```\\r\\ndtb-$(CONfiG_ARCH_VEXPRESS) += vexpress-v2p-ca5s.dtb \\\\\\r\\nvexpress-v2p-ca9.dtb \\\\\\r\\nvexpress-v2p-ca15-tc1.dtb \\\\\\r\\nvexpress-v2p-ca15_a7.dtb \\\\\\r\\nxenvm-4.2.dtb\\r\\n```\\r\\n\\r\\n\u5728Linux\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5355\u72ec\u7f16\u8bd1\u8bbe\u5907\u6811\u6587\u4ef6\u3002\u5f53\u6211\u4eec\u5728Linux\u5185\u6838\u4e0b\u8fd0\u884cmake dtbs\u65f6\uff0c\u82e5\u6211\u4eec\u4e4b\u524d\u9009\u62e9\u4e86ARCH_VEXPRESS\uff0c\u4e0a\u8ff0.dtb\u90fd\u4f1a\u7531\u5bf9\u5e94\u7684.dts\u7f16\u8bd1\u51fa\u6765\uff0c\u56e0\u4e3aarch/arm/Makefile\u4e2d\u542b\u6709\u4e00\u4e2a.dtbs\u7f16\u8bd1\u76ee\u6807\u9879\u76ee\u3002\\r\\n\\r\\nDTC\u9664\u4e86\u53ef\u4ee5\u7f16\u8bd1.dts\u6587\u4ef6\u4ee5\u5916\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u201c\u53cd\u6c47\u7f16\u201d.dtb\u6587\u4ef6\u4e3a.dts\u6587\u4ef6\uff0c\u5176\u6307\u4ee4\u683c\u5f0f\u4e3a\uff1a\\r\\n\\r\\n```\\r\\n./scripts/dtc/dtc -I dtb -O dts -o xxx.dts arch/arm/boot/dts/xxx.dtb\\r\\n```\\r\\n\\r\\n## 3.DTB\uff08Device Tree Blob\uff09\\r\\n\\r\\n\u6587\u4ef6.dtb\u662f.dts\u88abDTC\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u8bbe\u5907\u6811\u63cf\u8ff0\uff0c\u53ef\u7531Linux\u5185\u6838\u89e3\u6790\uff0c\u5f53\u7136U-Boot\u8fd9\u6837\u7684bootloader\u4e5f\u662f\u53ef\u4ee5\u8bc6\u522b.dtb\u7684\u3002\\r\\n\\r\\n\u901a\u5e38\u5728\u6211\u4eec\u4e3a\u7535\u8def\u677f\u5236\u4f5cNAND\u3001SD\u542f\u52a8\u6620\u50cf\u65f6\uff0c\u4f1a\u4e3a.dtb\u6587\u4ef6\u5355\u72ec\u7559\u4e0b\u4e00\u4e2a\u5f88\u5c0f\u7684\u533a\u57df\u4ee5\u5b58\u653e\u4e4b\uff0c\u4e4b\u540ebootloader\u5728\u5f15\u5bfc\u5185\u6838\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5148\u8bfb\u53d6\u8be5.dtb\u5230\u5185\u5b58\u3002\\r\\n\\r\\nLinux\u5185\u6838\u4e5f\u652f\u6301\u4e00\u79cd\u53d8\u901a\u7684\u6a21\u5f0f\uff0c\u53ef\u4ee5\u4e0d\u628a.dtb\u6587\u4ef6\u5355\u72ec\u5b58\u653e\uff0c\u800c\u662f\u76f4\u63a5\u548czImage\u7ed1\u5b9a\u5728\u4e00\u8d77\u505a\u6210\u4e00\u4e2a\u6620\u50cf\u6587\u4ef6\uff0c\u7c7b\u4f3ccat zImage xxx.dtb>zImage_with_dtb\u7684\u6548\u679c\u3002\u5f53\u7136\u5185\u6838\u7f16\u8bd1\u65f6\u5019\u8981\u4f7f\u80fdCONFIG_ARM_APPENDED_DTB\u8fd9\u4e2a\u9009\u9879\uff0c\u4ee5\u652f\u6301\u201cUse appended device tree blob to zImage\u201d\uff08\u89c1Linux\u5185\u6838\u4e2d\u7684\u83dc\u5355\uff09\u3002\\r\\n\\r\\n## 4.\u7ed1\u5b9a\uff08Binding\uff09\\r\\n\\r\\n\u5bf9\u4e8e\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\u548c\u5c5e\u6027\u5177\u4f53\u662f\u5982\u4f55\u6765\u63cf\u8ff0\u8bbe\u5907\u7684\u786c\u4ef6\u7ec6\u8282\u7684\uff0c\u4e00\u822c\u9700\u8981\u6587\u6863\u6765\u8fdb\u884c\u8bb2\u89e3\uff0c\u6587\u6863\u7684\u540e\u7f00\u540d\u4e00\u822c\u4e3a.txt\u3002\u5728\u8fd9\u4e2a.txt\u6587\u4ef6\u4e2d\uff0c\u9700\u8981\u63cf\u8ff0\u5bf9\u5e94\u8282\u70b9\u7684\u517c\u5bb9\u6027\u3001\u5fc5\u9700\u7684\u5c5e\u6027\u548c\u53ef\u9009\u7684\u5c5e\u6027\u3002\\r\\n\\r\\n\u8fd9\u4e9b\u6587\u6863\u4f4d\u4e8e\u5185\u6838\u7684Documentation/devicetree/bindings\u76ee\u5f55\u4e0b\uff0c\u5176\u4e0b\u53c8\u5206\u4e3a\u5f88\u591a\u5b50\u76ee\u5f55\u3002\u8b6c\u5982\uff0cDocumentation/devicetree/bindings/i2c/i2c-xiic.txt\u63cf\u8ff0\u4e86Xilinx\u7684I2 C\u63a7\u5236\u5668\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nXilinx IIC controller:\\r\\nRequired properties:\\r\\n- compatible : Must be \\"xlnx,xps-iic-2.00.a\\"\\r\\n- reg : IIC register location and length\\r\\n- interrupts : IIC controller unterrupt\\r\\n- #address-cells = <1>\\r\\n- #size-cells = <0>\\r\\nOptional properties:\\r\\n- Child nodes conforming to i2c bus binding\\r\\nExample:\\r\\n        axi_iic_0: i2c@40800000 {\\r\\ncompatible = \\"xlnx,xps-iic-2.00.a\\";\\r\\ninterrupts = < 1 2 >;\\r\\nreg = < 0x40800000 0x10000 >;\\r\\n                #size-cells = <0>;\\r\\n                #address-cells = <1>;\\r\\n        };\\r\\n```\\r\\n\\r\\n\u57fa\u672c\u53ef\u4ee5\u770b\u51fa\uff0c\u8bbe\u5907\u6811\u7ed1\u5b9a\u6587\u6863\u7684\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a\\r\\n\\r\\n- \xb7\u5173\u4e8e\u8be5\u6a21\u5757\u6700\u57fa\u672c\u7684\u63cf\u8ff0\u3002\\r\\n- \xb7\u5fc5\u9700\u5c5e\u6027\uff08Required Properties\uff09\u7684\u63cf\u8ff0\u3002\\r\\n- \xb7\u53ef\u9009\u5c5e\u6027\uff08Optional Properties\uff09\u7684\u63cf\u8ff0\u3002\\r\\n- \xb7\u4e00\u4e2a\u5b9e\u4f8b\u3002\\r\\n\\r\\nLinux\u5185\u6838\u4e0b\u7684scripts/checkpatch.pl\u4f1a\u8fd0\u884c\u4e00\u4e2a\u68c0\u67e5\uff0c\u5982\u679c\u6709\u4eba\u5728\u8bbe\u5907\u6811\u4e2d\u65b0\u6dfb\u52a0\u4e86compatible\u5b57\u7b26\u4e32\uff0c\u800c\u6ca1\u6709\u6dfb\u52a0\u76f8\u5e94\u7684\u6587\u6863\u8fdb\u884c\u89e3\u91ca\uff0ccheckpatch\u7a0b\u5e8f\u4f1a\u62a5\u51fa\u8b66\u544a\uff1aUNDOCUMENTED_DT_STRINGDT compatible string xxx appears un-documented\uff0c\u56e0\u6b64\u7a0b\u5e8f\u5458\u8981\u517b\u6210\u53ca\u65f6\u5199DT Binding\u6587\u6863\u7684\u4e60\u60ef\u3002\\r\\n\\r\\n## 5.Bootloader\\r\\n\\r\\nUboot\u8bbe\u5907\u4ecev1.1.3\u5f00\u59cb\u652f\u6301\u8bbe\u5907\u6811\uff0c\u5176\u5bf9ARM\u7684\u652f\u6301\u5219\u662f\u548cARM\u5185\u6838\u652f\u6301\u8bbe\u5907\u6811\u540c\u671f\u5b8c\u6210\u3002\\r\\n\\r\\n\u4e3a\u4e86\u4f7f\u80fd\u8bbe\u5907\u6811\uff0c\u9700\u8981\u5728\u7f16\u8bd1Uboot\u7684\u65f6\u5019\u5728config\u6587\u4ef6\u4e2d\u52a0\u5165\uff1a\\r\\n\\r\\n```\\r\\n#define CONfiG_OF_LIBFDT\\r\\n```\\r\\n\\r\\n\u5728Uboot\u4e2d\uff0c\u53ef\u4ee5\u4eceNAND\u3001SD\u6216\u8005TFTP\u7b49\u4efb\u610f\u4ecb\u8d28\u4e2d\u5c06.dtb\u8bfb\u5165\u5185\u5b58\uff0c\u5047\u8bbe.dtb\u653e\u5165\u7684\u5185\u5b58\u5730\u5740\u4e3a0x71000000\uff0c\u4e4b\u540e\u53ef\u5728Uboot\u4e2d\u8fd0\u884cfdt addr\u547d\u4ee4\u8bbe\u7f6e.dtb\u7684\u5730\u5740\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nUBoot> fdt addr 0x71000000\\r\\n```\\r\\n\\r\\nfdt\u7684\u5176\u4ed6\u547d\u4ee4\u5c31\u53d8\u5f97\u53ef\u4ee5\u4f7f\u7528\uff0c\u5982fdt resize\u3001fdt print\u7b49\u3002\\r\\n\\r\\n\u5bf9\u4e8eARM\u6765\u8bb2\uff0c\u53ef\u4ee5\u901a\u8fc7bootz kernel_addr initrd_address dtb_address\u7684\u547d\u4ee4\u6765\u542f\u52a8\u5185\u6838\uff0c\u5373dtb_address\u4f5c\u4e3abootz\u6216\u8005bootm\u7684\u6700\u540e\u4e00\u6b21\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u5185\u6838\u6620\u50cf\u7684\u5730\u5740\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3ainitrd\u7684\u5730\u5740\uff0c\u82e5\u4e0d\u5b58\u5728initrd\uff0c\u53ef\u4ee5\u7528\u201c-\u201d\u7b26\u53f7\u4ee3\u66ff\u3002\\r\\n\\r\\n# 18.2.2\u6839\u8282\u70b9\u517c\u5bb9\u6027\\r\\n\\r\\n\u4e0a\u8ff0.dts\u6587\u4ef6\u4e2d\uff0c\u7b2c2\u884c\u6839\u8282\u70b9\\"/\\"\u7684\u517c\u5bb9\u5c5e\u6027compatible=\\"acme\uff0ccoyotes-revenge\\"\uff1b\u5b9a\u4e49\u4e86\u6574\u4e2a\u7cfb\u7edf\uff08\u8bbe\u5907\u7ea7\u522b\uff09\u7684\u540d\u79f0\uff0c\u5b83\u7684\u7ec4\u7ec7\u5f62\u5f0f\u4e3a\uff1amanufacturer\uff0cmodel\u3002\\r\\n\\r\\nLinux\u5185\u6838\u901a\u8fc7\u6839\u8282\u70b9\\"/\\"\u7684\u517c\u5bb9\u5c5e\u6027\u5373\u53ef\u5224\u65ad\u5b83\u542f\u52a8\u7684\u662f\u4ec0\u4e48\u8bbe\u5907\u3002\u5728\u771f\u5b9e\u9879\u76ee\u4e2d\uff0c\u8fd9\u4e2a\u9876\u5c42\u8bbe\u5907\u7684\u517c\u5bb9\u5c5e\u6027\u4e00\u822c\u5305\u62ec\u4e24\u4e2a\u6216\u8005\u4e24\u4e2a\u4ee5\u4e0a\u7684\u517c\u5bb9\u6027\u5b57\u7b26\u4e32\uff0c\u9996\u4e2a\u517c\u5bb9\u6027\u5b57\u7b26\u4e32\u662f\u677f\u5b50\u7ea7\u522b\u7684\u540d\u5b57\uff0c\u540e\u9762\u4e00\u4e2a\u517c\u5bb9\u6027\u662f\u82af\u7247\u7ea7\u522b\uff08\u6216\u8005\u82af\u7247\u7cfb\u5217\u7ea7\u522b\uff09\u7684\u540d\u5b57\u3002\\r\\n\\r\\n\u8b6c\u5982\u677f\u5b50arch/arm/boot/dts/vexpress-v2p-ca9.dts\u517c\u5bb9\u4e8earm\uff0cvexpress\uff0cv2p-ca9\u548c\u201carm\uff0cvexpress\u201d\uff1a\\r\\n\\r\\n```\\r\\ncompatible = \\"arm,vexpress,v2p-ca9\\", \\"arm,vexpress\\";\\r\\n```\\r\\n\\r\\n\u677f\u5b50arch/arm/boot/dts/vexpress-v2p-ca5s.dts\u7684\u517c\u5bb9\u6027\u5219\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ncompatible = \\"arm,vexpress,v2p-ca5s\\", \\"arm,vexpress\\";\\r\\n```\\r\\n\\r\\n\u677f\u5b50arch/arm/boot/dts/vexpress-v2p-ca15_a7.dts\u7684\u517c\u5bb9\u6027\u4e3a\uff1a\\r\\n\\r\\n```\\r\\ncompatible = \\"arm,vexpress,v2p-ca15_a7\\", \\"arm,vexpress\\";\\r\\n```\\r\\n\\r\\n\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0a\u8ff0\u5404\u4e2a\u7535\u8def\u677f\u7684\u5171\u6027\u662f\u517c\u5bb9\u4e8earm\uff0cvexpress\uff0c\u800c\u7279\u6027\u662f\u5206\u522b\u517c\u5bb9\u4e8earm\uff0cvexpress\uff0cv2p-ca9\u3001arm\uff0cvexpress\uff0cv2p-ca5s\u548carm\uff0cvexpress\uff0cv2p-ca15_a7\u3002\\r\\n\\r\\n\u8fdb\u4e00\u6b65\u5730\u770b\uff0carch/arm/boot/dts/exynos4210-origen.dts\u7684\u517c\u5bb9\u6027\u5b57\u6bb5\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\ncompatible = \\"insignal,origen\\", \\"samsung,exynos4210\\", \\"samsung,exynos4\\";\\r\\n```\\r\\n\\r\\n\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u677f\u5b50\u540d\u5b57\uff08\u5f88\u7279\u5b9a\uff09\uff0c\u7b2c2\u4e2a\u5b57\u7b26\u4e32\u662f\u82af\u7247\u540d\u5b57\uff08\u6bd4\u8f83\u7279\u5b9a\uff09\uff0c\u7b2c3\u4e2a\u5b57\u6bb5\u662f\u82af\u7247\u7cfb\u5217\u7684\u540d\u5b57\uff08\u6bd4\u8f83\u901a\u7528\uff09\u3002\\r\\n\\r\\n\u4f5c\u4e3a\u7c7b\u6bd4\uff0carch/arm/boot/dts/exynos4210-universal_c210.dts\u7684\u517c\u5bb9\u6027\u5b57\u6bb5\u5219\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\ncompatible = \\"samsung,universal_c210\\", \\"samsung,exynos4210\\", \\"samsung,exynos4\\";\\r\\n```\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0c\u5b83\u4e0eexynos4210-origen.dts\u7684\u533a\u522b\u53ea\u5728\u4e8e\u7b2c1\u4e2a\u5b57\u7b26\u4e32\uff08\u7279\u5b9a\u7684\u677f\u5b50\u540d\u5b57\uff09\u4e0d\u4e00\u6837\uff0c\u540e\u9762\u82af\u7247\u540d\u548c\u82af\u7247\u7cfb\u5217\u7684\u540d\u5b57\u90fd\u4e00\u6837\u3002\\r\\n\\r\\n\u5728Linux 2.6\u5185\u6838\u4e2d\uff0cARM Linux\u9488\u5bf9\u4e0d\u540c\u7684\u7535\u8def\u677f\u4f1a\u5efa\u7acb\u7531MACHINE_START\u548cMACHINE_END\u5305\u56f4\u8d77\u6765\u7684\u9488\u5bf9\u8fd9\u4e2a\u8bbe\u5907\u7684\u4e00\u7cfb\u5217\u56de\u8c03\u51fd\u6570\uff0c\u5982\u4ee3\u7801\u6e05\u535518.3\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.3\u3000ARM Linux 2.6\u65f6\u4ee3\u7684\u8bbe\u5907\\r\\n\\r\\n```\\r\\n 1MACHINE_START(VEXPRESS, \\"ARM-Versatile Express\\")\\r\\n 2         .atag_offset    = 0x100,\\r\\n 3         .smp            = smp_ops(vexpress_smp_ops),\\r\\n 4         .map_io         = v2m_map_io,\\r\\n 5         .init_early     = v2m_init_early,\\r\\n 6         .init_irq       = v2m_init_irq,\\r\\n 7         .timer          = &v2m_timer,\\r\\n 8         .handle_irq     = gic_handle_irq,\\r\\n 9         .init_machine   = v2m_init,\\r\\n10         .restart        = vexpress_restart,\\r\\n11MACHINE_END\\r\\n```\\r\\n\\r\\n\u8fd9\u4e9b\u4e0d\u540c\u7684\u8bbe\u5907\u4f1a\u6709\u4e0d\u540c\u7684MACHINE ID\uff0cUboot\u5728\u542f\u52a8Linux\u5185\u6838\u65f6\u4f1a\u5c06MACHINE ID\u5b58\u653e\u5728r1\u5bc4\u5b58\u5668\uff0cLinux\u542f\u52a8\u65f6\u4f1a\u5339\u914dBootloader\u4f20\u9012\u7684MACHINE ID\u548cMACHINE_START\u58f0\u660e\u7684MACHINE ID\uff0c\u7136\u540e\u6267\u884c\u76f8\u5e94\u8bbe\u5907\u7684\u4e00\u7cfb\u5217\u521d\u59cb\u5316\u51fd\u6570\u3002\\r\\n\\r\\nARM Linux 3.x\u5728\u5f15\u5165\u8bbe\u5907\u6811\u4e4b\u540e\uff0cMACHINE_START\u53d8\u66f4\u4e3aDT_MACHINE_START\uff0c\u5176\u4e2d\u542b\u6709\u4e00\u4e2a.dt_compat\u6210\u5458\uff0c\u7528\u4e8e\u8868\u660e\u76f8\u5173\u7684\u8bbe\u5907\u4e0e.dts\u4e2d\u6839\u8282\u70b9\u7684\u517c\u5bb9\u5c5e\u6027\u517c\u5bb9\u5173\u7cfb\u3002\u5982\u679cBootloader\u4f20\u9012\u7ed9\u5185\u6838\u7684\u8bbe\u5907\u6811\u4e2d\u6839\u8282\u70b9\u7684\u517c\u5bb9\u5c5e\u6027\u51fa\u73b0\u5728\u67d0\u8bbe\u5907\u7684.dt_compat\u8868\u4e2d\uff0c\u76f8\u5173\u7684\u8bbe\u5907\u5c31\u4e0e\u5bf9\u5e94\u7684\u517c\u5bb9\u5339\u914d\uff0c\u4ece\u800c\u5f15\u53d1\u8fd9\u4e00\u8bbe\u5907\u7684\u4e00\u7cfb\u5217\u521d\u59cb\u5316\u51fd\u6570\u88ab\u6267\u884c\u3002\u4e00\u4e2a\u5178\u578b\u7684DT_MACHINE\u5982\u4ee3\u7801\u6e05\u535518.4\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.4\u3000ARM Linux 3.x\u65f6\u4ee3\u7684\u8bbe\u5907\\r\\n\\r\\n```\\r\\n 1static const char * const v2m_dt_match[] __initconst = {\\r\\n 2         \\"arm,vexpress\\",\\r\\n 3         \\"xen,xenvm\\",\\r\\n 4         NULL,\\r\\n 5};\\r\\n 6DT_MACHINE_START(VEXPRESS_DT, \\"ARM-Versatile Express\\")\\r\\n 7         .dt_compat      = v2m_dt_match,\\r\\n 8         .smp            = smp_ops(vexpress_smp_ops),\\r\\n 9         .map_io         = v2m_dt_map_io,\\r\\n10         .init_early     = v2m_dt_init_early,\\r\\n11         .init_irq       = v2m_dt_init_irq,\\r\\n12         .timer          = &v2m_dt_timer,\\r\\n13         .init_machine   = v2m_dt_init,\\r\\n14         .handle_irq     = gic_handle_irq,\\r\\n15         .restart        = vexpress_restart,\\r\\n16MACHINE_END\\r\\n```\\r\\n\\r\\nLinux\u5021\u5bfc\u9488\u5bf9\u591a\u4e2aSoC\u3001\u591a\u4e2a\u7535\u8def\u677f\u7684\u901a\u7528DT\u8bbe\u5907\uff0c\u5373\u4e00\u4e2aDT\u8bbe\u5907\u7684.dt_compat\u5305\u542b\u591a\u4e2a\u7535\u8def\u677f.dts\u6587\u4ef6\u7684\u6839\u8282\u70b9\u517c\u5bb9\u5c5e\u6027\u5b57\u7b26\u4e32\u3002\u4e4b\u540e\uff0c\u5982\u679c\u8fd9\u591a\u4e2a\u7535\u8def\u677f\u7684\u521d\u59cb\u5316\u5e8f\u5217\u4e0d\u4e00\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7int of_machine_is_compatible\uff08const char*compat\uff09API\u5224\u65ad\u5177\u4f53\u7684\u7535\u8def\u677f\u662f\u4ec0\u4e48\u3002\u5728Linux\u5185\u6838\u4e2d\uff0c\u5e38\u5e38\u4f7f\u7528\u5982\u4e0bAPI\u6765\u5224\u65ad\u6839\u8282\u70b9\u7684\u517c\u5bb9\u6027\uff1a\\r\\n\\r\\n```\\r\\nint of_machine_is_compatible(const char *compat);\\r\\n```\\r\\n\\r\\n\u6b64API\u5224\u65ad\u76ee\u524d\u8fd0\u884c\u7684\u677f\u5b50\u6216\u8005SoC\u7684\u517c\u5bb9\u6027\uff0c\u5b83\u5339\u914d\u7684\u662f\u8bbe\u5907\u6811\u6839\u8282\u70b9\u4e0b\u7684\u517c\u5bb9\u5c5e\u6027\u3002\u4f8b\u5982drivers/cpufreq/exynos-cpufreq.c\u4e2d\u5c31\u6709\u5224\u65ad\u8fd0\u884c\u7684CPU\u7c7b\u578b\u662fexynos4210\u3001exynos4212\u3001exynos4412\u8fd8\u662fexynos5250\u7684\u4ee3\u7801\uff0c\u8fdb\u800c\u5206\u522b\u5904\u7406\uff0c\u5982\u4ee3\u7801\u6e05\u535518.5\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.5\u3000of_machine_is_compatible\uff08\uff09\u7684\u6848\u4f8b\\r\\n\\r\\n```\\r\\n 1 static int exynos_cpufreq_probe(struct platform_device *pdev)\\r\\n 2 {\\r\\n 3         int ret = -EINVAL;\\r\\n 4\\r\\n 5         exynos_info = kzalloc(sizeof(*exynos_info), GFP_KERNEL);\\r\\n 6         if (!exynos_info)\\r\\n 7                 return -ENOMEM;\\r\\n 8\\r\\n 9         exynos_info->dev = &pdev->dev;\\r\\n10\\r\\n11         if (of_machine_is_compatible(\\"samsung,exynos4210\\")) {\\r\\n12                 exynos_info->type = EXYNOS_SOC_4210;\\r\\n13                 ret = exynos4210_cpufreq_init(exynos_info);\\r\\n14         } else if (of_machine_is_compatible(\\"samsung,exynos4212\\")) {\\r\\n15                 exynos_info->type = EXYNOS_SOC_4212;\\r\\n16                 ret = exynos4x12_cpufreq_init(exynos_info);\\r\\n17         } else if (of_machine_is_compatible(\\"samsung,exynos4412\\")) {\\r\\n18                 exynos_info->type = EXYNOS_SOC_4412;\\r\\n19                 ret = exynos4x12_cpufreq_init(exynos_info);\\r\\n20         } else if (of_machine_is_compatible(\\"samsung,exynos5250\\")) {\\r\\n21                 exynos_info->type = EXYNOS_SOC_5250;\\r\\n22                 ret = exynos5250_cpufreq_init(exynos_info);\\r\\n23         } else {\\r\\n24                 pr_err(\\"%s: Unknown SoC type\\\\n\\", __func__);\\r\\n25                 return -ENODEV;\\r\\n26         }\\r\\n27         ...\\r\\n28}\\r\\n```\\r\\n\\r\\n\u5982\u679c\u4e00\u4e2a\u517c\u5bb9\u5305\u542b\u591a\u4e2a\u5b57\u7b26\u4e32\uff0c\u8b6c\u5982\u5bf9\u4e8e\u524d\u9762\u4ecb\u7ecd\u7684\u6839\u8282\u70b9\u517c\u5bb9compatible=\\"samsung\uff0cuniversal_c210\\"\uff0c\\"samsung\uff0cexynos4210\\"\uff0c\\"samsung\uff0cexynos4\\"\u7684\u60c5\u51b5\uff0c\u5982\u4e0b3\u4e2a\u8868\u8fbe\u5f0f\u90fd\u662f\u6210\u7acb\u7684\u3002\\r\\n\\r\\n```\\r\\nof_machine_is_compatible(\\"samsung,universal_c210\\")\\r\\nof_machine_is_compatible(\\"samsung,exynos4210\\")\\r\\nof_machine_is_compatible(\\"samsung,exynos4\\")\\r\\n```\\r\\n\\r\\n# 18.2.3\u8bbe\u5907\u8282\u70b9\u517c\u5bb9\u6027\\r\\n\\r\\n\u5728.dts\u6587\u4ef6\u7684\u6bcf\u4e2a\u8bbe\u5907\u8282\u70b9\u4e2d\uff0c\u90fd\u6709\u4e00\u4e2a\u517c\u5bb9\u5c5e\u6027\uff0c\u517c\u5bb9\u5c5e\u6027\u7528\u4e8e\u9a71\u52a8\u548c\u8bbe\u5907\u7684\u7ed1\u5b9a\u3002\u517c\u5bb9\u5c5e\u6027\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u8868\u5f81\u4e86\u8282\u70b9\u4ee3\u8868\u7684\u786e\u5207\u8bbe\u5907\uff0c\u5f62\u5f0f\u4e3a\\"manufacturer\uff0cmodel\\"\uff0c\u5176\u540e\u7684\u5b57\u7b26\u4e32\u8868\u5f81\u53ef\u517c\u5bb9\u7684\u5176\u4ed6\u8bbe\u5907\u3002\u53ef\u4ee5\u8bf4\u524d\u9762\u7684\u662f\u7279\u6307\uff0c\u540e\u9762\u7684\u5219\u6db5\u76d6\u66f4\u5e7f\u7684\u8303\u56f4\u3002\u5982\u5728vexpress-v2m.dtsi\u4e2d\u7684Flash\u8282\u70b9\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nflash@0,00000000 {\\r\\ncompatible = \\"arm,vexpress-flash\\", \\"cfi-flash\\";\\r\\nreg = <0 0x00000000 0x04000000>,\\r\\n<1 0x00000000 0x04000000>;\\r\\nbank-width = <4>;\\r\\n };\\r\\n```\\r\\n\\r\\n\u517c\u5bb9\u5c5e\u6027\u7684\u7b2c2\u4e2a\u5b57\u7b26\u4e32\\"cfi-flash\\"\u660e\u663e\u6bd4\u7b2c1\u4e2a\u5b57\u7b26\u4e32\\"arm\uff0cvexpress-flash\\"\u6db5\u76d6\u7684\u8303\u56f4\u66f4\u5e7f\u3002\\r\\n\\r\\n\u518d\u5982\uff0cFreescale MPC8349SoC\u542b\u4e00\u4e2a\u4e32\u53e3\u8bbe\u5907\uff0c\u5b83\u5b9e\u73b0\u4e86\u56fd\u5bb6\u534a\u5bfc\u4f53\uff08National Sem-iconductor\uff09\u7684NS16550\u5bc4\u5b58\u5668\u63a5\u53e3\u3002\u5219MPC8349\u4e32\u53e3\u8bbe\u5907\u7684\u517c\u5bb9\u5c5e\u6027\u4e3acompatible=\\"fsl\uff0cmpc8349-uart\\"\uff0c\\"ns16550\\"\u3002\u5176\u4e2d\uff0cfsl\uff0cmpc8349-uart\u6307\u4ee3\u4e86\u786e\u5207\u7684\u8bbe\u5907\uff0cns16550\u4ee3\u8868\u8be5\u8bbe\u5907\u4e0eNS16550UART\u4fdd\u6301\u4e86\u5bc4\u5b58\u5668\u517c\u5bb9\u3002\u56e0\u6b64\uff0c\u8bbe\u5907\u8282\u70b9\u7684\u517c\u5bb9\u6027\u548c\u6839\u8282\u70b9\u7684\u517c\u5bb9\u6027\u662f\u7c7b\u4f3c\u7684\uff0c\u90fd\u662f\u201c\u4ece\u5177\u4f53\u5230\u62bd\u8c61\u201d\u3002\\r\\n\\r\\n\u4f7f\u7528\u8bbe\u5907\u6811\u540e\uff0c\u9a71\u52a8\u9700\u8981\u4e0e.dts\u4e2d\u63cf\u8ff0\u7684\u8bbe\u5907\u8282\u70b9\u8fdb\u884c\u5339\u914d\uff0c\u4ece\u800c\u4f7f\u9a71\u52a8\u7684probe\uff08\uff09\u51fd\u6570\u6267\u884c\u3002\u5bf9\u4e8eplatform_driver\u800c\u8a00\uff0c\u9700\u8981\u6dfb\u52a0\u4e00\u4e2aOF\u5339\u914d\u8868\uff0c\u5982\u524d\u6587\u7684.dts\u6587\u4ef6\u7684\\"acme\uff0ca1234-i2c-bus\\"\u517c\u5bb9I2 C\u63a7\u5236\u5668\u8282\u70b9\u7684OF\u5339\u914d\u8868\uff0c\u5177\u4f53\u4ee3\u7801\u6e05\u535518.6\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.6\u3000platform\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684of_match_table\\r\\n\\r\\n```\\r\\n 1static const struct of_device_id a1234_i2c_of_match[] = {\\r\\n 2          { .compatible = \\"acme,a1234-i2c-bus\\", },\\r\\n 3          {},\\r\\n 4};\\r\\n 5MODULE_DEVICE_TABLE(of, a1234_i2c_of_match);\\r\\n 6\\r\\n 7static struct platform_driver i2c_a1234_driver = {\\r\\n 8          .driver = {\\r\\n 9                  .name = \\"a1234-i2c-bus\\",\\r\\n10                  .owner = THIS_MODULE,\\r\\n11                  .of_match_table = a1234_i2c_of_match,\\r\\n12          },\\r\\n13          .probe = i2c_a1234_probe,\\r\\n14          .remove = i2c_a1234_remove,\\r\\n15};\\r\\n16module_platform_driver(i2c_a1234_driver);\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8eI2 C\u548cSPI\u4ece\u8bbe\u5907\u800c\u8a00\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u901a\u8fc7of_match_table\u6dfb\u52a0\u5339\u914d\u7684.dts\u4e2d\u7684\u76f8\u5173\u8282\u70b9\u7684\u517c\u5bb9\u5c5e\u6027\uff0c\u5982sound/soc/codecs/wm8753.c\u4e2d\u7684\u9488\u5bf9WolfsonWM8753\u7684of_match_table\uff0c\u5177\u4f53\u5982\u4ee3\u7801\u6e05\u535518.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.7\u3000I2 C\u3001SPI\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684of_match_table\\r\\n\\r\\n```\\r\\n 1static const struct of_device_id wm8753_of_match[] = {\\r\\n 2          { .compatible = \\"wlf,wm8753\\", },\\r\\n 3          { }\\r\\n 4};\\r\\n 5MODULE_DEVICE_TABLE(of, wm8753_of_match);\\r\\n 6static struct spi_driver wm8753_spi_driver = {\\r\\n 7          .driver = {\\r\\n 8                  .name   = \\"wm8753\\",\\r\\n 9                  .owner  = THIS_MODULE,\\r\\n10                  .of_match_table = wm8753_of_match,\\r\\n11          },\\r\\n12          .probe          = wm8753_spi_probe,\\r\\n13          .remove         = wm8753_spi_remove,\\r\\n14};\\r\\n15static struct i2c_driver wm8753_i2c_driver = {\\r\\n16          .driver = {\\r\\n17                  .name = \\"wm8753\\",\\r\\n18                  .owner = THIS_MODULE,\\r\\n19                  .of_match_table = wm8753_of_match,\\r\\n20          },\\r\\n21          .probe =    wm8753_i2c_probe,\\r\\n22          .remove =   wm8753_i2c_remove,\\r\\n23          .id_table = wm8753_i2c_id,\\r\\n24};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684\u7b2c2\u884c\u663e\u793aWM8753\u7684\u4f9b\u5e94\u5546\u662f\u201cwlf\u201d\uff0c\u5b83\u5176\u5b9e\u662f\u5bf9\u5e94\u4e8eWolfson Microe-lectronics\u7684\u524d\u7f00\u3002\u8be6\u7ec6\u7684\u524d\u7f00\u53ef\u89c1\u4e8e\u5185\u6838\u6587\u6863\uff1aDocumentation/devicetree/bindings/vendor-prefixes.txt\\r\\n\\r\\n\u5bf9\u4e8eI2 C\u3001SPI\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u63d0\u9192\u7684\u662f\uff0cI2 C\u548cSPI\u5916\u8bbe\u9a71\u52a8\u548c\u8bbe\u5907\u6811\u4e2d\u8bbe\u5907\u8282\u70b9\u7684\u517c\u5bb9\u5c5e\u6027\u8fd8\u6709\u4e00\u79cd\u5f31\u5f0f\u5339\u914d\u65b9\u6cd5\uff0c\u5c31\u662f\u201c\u522b\u540d\u201d\u5339\u914d\u3002\u517c\u5bb9\u5c5e\u6027\u7684\u7ec4\u7ec7\u5f62\u5f0f\u4e3amanufacturer\uff0cmodel\uff0c\u522b\u540d\u5176\u5b9e\u5c31\u662f\u53bb\u6389\u517c\u5bb9\u5c5e\u6027\u4e2dmanufacturer\u524d\u7f00\u540e\u7684model\u90e8\u5206\u3002\u5173\u4e8e\u8fd9\u4e00\u70b9\uff0c\u53ef\u67e5\u770bdrivers/spi/spi.c\u7684\u6e90\u4ee3\u7801\uff0c\u51fd\u6570spi_match_device\uff08\uff09\u66b4\u9732\u4e86\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u5982\u679c\u522b\u540d\u51fa\u73b0\u5728\u8bbe\u5907spi_driver\u7684id_table\u91cc\u9762\uff0c\u6216\u8005\u522b\u540d\u4e0espi_driver\u7684name\u5b57\u6bb5\u76f8\u540c\uff0cSPI\u8bbe\u5907\u548c\u9a71\u52a8\u90fd\u53ef\u4ee5\u5339\u914d\u4e0a\uff0c\u4ee3\u7801\u6e05\u535518.8\u663e\u793a\u4e86SPI\u7684\u522b\u540d\u5339\u914d\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.8\u3000SPI\u7684\u522b\u540d\u5339\u914d\\r\\n\\r\\n```\\r\\n 1static int spi_match_device(struct device *dev, struct device_driver *drv)\\r\\n 2{\\r\\n 3          const struct spi_device *spi = to_spi_device(dev);\\r\\n 4          const struct spi_driver *sdrv = to_spi_driver(drv);\\r\\n 5\\r\\n 6          /* Attempt an OF style match */\\r\\n 7          if (of_driver_match_device(dev, drv))\\r\\n 8                  return 1;\\r\\n 9\\r\\n10          /* Then try ACPI */\\r\\n11           if (acpi_driver_match_device(dev, drv))\\r\\n12                   return 1;\\r\\n13\\r\\n14           if (sdrv->id_table)\\r\\n15                   return !!spi_match_id(sdrv->id_table, spi);\\r\\n16\\r\\n17           return strcmp(spi->modalias, drv->name) == 0;\\r\\n18 }\\r\\n19static const struct spi_device_id *spi_match_id(const struct spi_device_id *id,\\r\\n20                                              const struct spi_device *sdev)\\r\\n21{\\r\\n22        while (id->name[0]) {\\r\\n23               if (!strcmp(sdev->modalias, id->name))\\r\\n24                       return id;\\r\\n25               id++;\\r\\n26        }\\r\\n27        return NULL;\\r\\n28}\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u8fd9\u4e2a\u522b\u540d\u5339\u914d\uff0c\u5b9e\u9645\u4e0a\uff0cSPI\u548cI2 C\u7684\u5916\u8bbe\u9a71\u52a8\u5373\u4f7f\u6ca1\u6709of_match_table\uff0c\u8fd8\u662f\u53ef\u4ee5\u548c\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\u5339\u914d\u4e0a\u7684\u3002\\r\\n\\r\\n\u4e00\u4e2a\u9a71\u52a8\u53ef\u4ee5\u5728of_match_table\u4e2d\u517c\u5bb9\u591a\u4e2a\u8bbe\u5907\uff0c\u5728Linux\u5185\u6838\u4e2d\u5e38\u5e38\u4f7f\u7528\u5982\u4e0bAPI\u6765\u5224\u65ad\u5177\u4f53\u7684\u8bbe\u5907\u662f\u4ec0\u4e48\uff1a\\r\\n\\r\\n```\\r\\nint of_device_is_compatible(const struct device_node *device,const char *compat);\\r\\n```\\r\\n\\r\\n\u6b64\u51fd\u6570\u7528\u4e8e\u5224\u65ad\u8bbe\u5907\u8282\u70b9\u7684\u517c\u5bb9\u5c5e\u6027\u662f\u5426\u5305\u542bcompat\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u3002\u8fd9\u4e2aAPI\u591a\u7528\u4e8e\u4e00\u4e2a\u9a71\u52a8\u652f\u6301\u4e24\u4e2a\u4ee5\u4e0a\u8bbe\u5907\u7684\u65f6\u5019\u3002\\r\\n\\r\\n\u5f53\u4e00\u4e2a\u9a71\u52a8\u652f\u6301\u4e24\u4e2a\u6216\u591a\u4e2a\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u4e0d\u540c.dts\u6587\u4ef6\u4e2d\u8bbe\u5907\u7684\u517c\u5bb9\u5c5e\u6027\u90fd\u4f1a\u5199\u5165\u9a71\u52a8OF\u5339\u914d\u8868\u3002\u56e0\u6b64\u9a71\u52a8\u53ef\u4ee5\u901a\u8fc7Bootloader\u4f20\u9012\u7ed9\u5185\u6838\u8bbe\u5907\u6811\u4e2d\u7684\u771f\u6b63\u8282\u70b9\u7684\u517c\u5bb9\u5c5e\u6027\u4ee5\u786e\u5b9a\u7a76\u7adf\u662f\u54ea\u4e00\u79cd\u8bbe\u5907\uff0c\u4ece\u800c\u6839\u636e\u4e0d\u540c\u7684\u8bbe\u5907\u7c7b\u578b\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\u3002\u5982arch/powerpc/platforms/83xx/usb.c\u4e2d\u7684mpc831x_usb_cfg\uff08\uff09\u5c31\u8fdb\u884c\u4e86\u7c7b\u4f3c\u5904\u7406\uff1a\\r\\n\\r\\n```\\r\\nif (immr_node && (of_device_is_compatible(immr_node, \\"fsl,mpc8315-immr\\") ||\\r\\n                of_device_is_compatible(immr_node, \\"fsl,mpc8308-immr\\")))\\r\\n        clrsetbits_be32(immap + MPC83XX_SCCR_OFFS,\\r\\n                        MPC8315_SCCR_USB_MASK,\\r\\n                        MPC8315_SCCR_USB_DRCM_01);\\r\\nelse\\r\\n        clrsetbits_be32(immap + MPC83XX_SCCR_OFFS,\\r\\n                        MPC83XX_SCCR_USB_MASK,\\r\\n                        MPC83XX_SCCR_USB_DRCM_11);\\r\\n/* Configure pin mux for ULPI.  There is no pin mux for UTMI */\\r\\nif (prop && !strcmp(prop, \\"ulpi\\")) {\\r\\nif (of_device_is_compatible(immr_node, \\"fsl,mpc8308-immr\\")) {\\r\\n                clrsetbits_be32(immap + MPC83XX_SICRH_OFFS,\\r\\n                                MPC8308_SICRH_USB_MASK,\\r\\n                                MPC8308_SICRH_USB_ULPI);\\r\\n        } else if (of_device_is_compatible(immr_node, \\"fsl,mpc8315-immr\\")) {\\r\\n                clrsetbits_be32(immap + MPC83XX_SICRL_OFFS,\\r\\n                                MPC8315_SICRL_USB_MASK,\\r\\n                                MPC8315_SICRL_USB_ULPI);\\r\\n                clrsetbits_be32(immap + MPC83XX_SICRH_OFFS,\\r\\n                                MPC8315_SICRH_USB_MASK,\\r\\n                                MPC8315_SICRH_USB_ULPI);\\r\\n        } else {\\r\\n                clrsetbits_be32(immap + MPC83XX_SICRL_OFFS,\\r\\n                                MPC831X_SICRL_USB_MASK,\\r\\n                                MPC831X_SICRL_USB_ULPI);\\r\\n                clrsetbits_be32(immap + MPC83XX_SICRH_OFFS,\\r\\n                                MPC831X_SICRH_USB_MASK,\\r\\n                                MPC831X_SICRH_USB_ULPI);\\r\\n        }\\r\\n}\\r\\n```\\r\\n\\r\\n\u5b83\u6839\u636e\u5177\u4f53\u7684\u8bbe\u5907\u662ffsl\uff0cmpc8315-immr\u548cfsl\uff0cmpc8308-immr\u3001\u4e2d\u7684\u54ea\u4e00\u79cd\u6765\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\u3002\\r\\n\\r\\n\u5f53\u4e00\u4e2a\u9a71\u52a8\u53ef\u4ee5\u517c\u5bb9\u591a\u79cd\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u9664\u4e86of_device_is_compatible\uff08\uff09\u8fd9\u79cd\u5224\u65ad\u65b9\u6cd5\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u91c7\u7528\u5728\u9a71\u52a8\u7684of_device_id\u8868\u4e2d\u586b\u5145.data\u6210\u5458\u7684\u5f62\u5f0f\u3002\u8b6c\u5982\uff0carch/arm/mm/cache-l2x0.c\u652f\u6301\u201carm\uff0cl210-cache\u201d\u201carm\uff0cpl310-cache\u201d\u201carm\uff0cl220-cache\u201d\u7b49\u591a\u79cd\u8bbe\u5907\uff0c\u5176of_device_id\u8868\u5982\u4ee3\u7801\u6e05\u535518.9\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.9\u3000\u652f\u6301\u591a\u4e2a\u517c\u5bb9\u6027\u4ee5\u53ca.data\u6210\u5458\u7684of_device_id\u8868\\r\\n\\r\\n```\\r\\n 1#define L2C_ID(name, fns) { .compatible = name, .data = (void *)&fns }\\r\\n 2static const struct of_device_id l2x0_ids[] __initconst = {\\r\\n 3          L2C_ID(\\"arm,l210-cache\\", of_l2c210_data),\\r\\n 4          L2C_ID(\\"arm,l220-cache\\", of_l2c220_data),\\r\\n 5          L2C_ID(\\"arm,pl310-cache\\", of_l2c310_data),\\r\\n 6          L2C_ID(\\"brcm,bcm11351-a2-pl310-cache\\", of_bcm_l2x0_data),\\r\\n 7          L2C_ID(\\"marvell,aurora-outer-cache\\", of_aurora_with_outer_data),\\r\\n 8          L2C_ID(\\"marvell,aurora-system-cache\\", of_aurora_no_outer_data),\\r\\n 9          L2C_ID(\\"marvell,tauros3-cache\\", of_tauros3_data),\\r\\n10          /* Deprecated IDs */\\r\\n11          L2C_ID(\\"bcm,bcm11351-a2-pl310-cache\\", of_bcm_l2x0_data),\\r\\n12          {}\\r\\n13 };\\r\\n```\\r\\n\\r\\n\u5728\u9a71\u52a8\u4e2d\uff0c\u901a\u8fc7\u5982\u4ee3\u7801\u6e05\u535518.10\u7684\u65b9\u6cd5\u62ff\u5230\u4e86\u5bf9\u5e94\u4e8eL2\u7f13\u5b58\u7c7b\u578b\u7684.data\u6210\u5458\uff0c\u5176\u4e2d\u4e3b\u8981\u7528\u5230\u4e86of_match_node\uff08\uff09\u8fd9\u4e2aAPI\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.10\u3000\u901a\u8fc7of_match_node\uff08\uff09\u627e\u5230.data\\r\\n\\r\\n```\\r\\n 1int __init l2x0_of_init(u32 aux_val, u32 aux_mask)\\r\\n 2{\\r\\n 3          const struct l2c_init_data *data;\\r\\n 4          struct device_node *np;\\r\\n 5\\r\\n 6          np = of_find_matching_node(NULL, l2x0_ids);\\r\\n 7          if (!np)\\r\\n 8                  return -ENODEV;\\r\\n 9          \u2026\\r\\n10          data = of_match_node(l2x0_ids, np)->data;\\r\\n11}\\r\\n```\\r\\n\\r\\n\u5982\u679c\u7535\u8def\u677f\u7684.dts\u6587\u4ef6\u4e2dL2\u7f13\u5b58\u662farm\uff0cpl310-cache\uff0c\u90a3\u4e48\u4e0a\u8ff0\u4ee3\u7801\u7b2c10\u884c\u627e\u5230\u7684data\u5c31\u662fof_l2c310_data\uff0c\u5b83\u662fl2c_init_data\u7ed3\u6784\u4f53\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002l2c_init_data\u662f\u4e00\u4e2a\u7531L2\u7f13\u5b58\u9a71\u52a8\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5728\u5176\u5b9a\u4e49\u4e2d\u65e2\u53ef\u4ee5\u4fdd\u62a4\u6570\u636e\u6210\u5458\uff0c\u53c8\u53ef\u4ee5\u5305\u542b\u51fd\u6570\u6307\u9488\uff0c\u5982\u4ee3\u7801\u6e05\u535518.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.11\u3000\u4e0e\u517c\u5bb9\u5bf9\u5e94\u7684\u7279\u5b9adata\u5b9e\u4f8b\\r\\n\\r\\n```\\r\\n 1struct l2c_init_data {\\r\\n 2          const char *type;\\r\\n 3          unsigned way_size_0;\\r\\n 4          unsigned num_lock;\\r\\n 5          void (*of_parse)(const struct device_node *, u32 *, u32 *);\\r\\n 6          void (*enable)(void __iomem *, u32, unsigned);\\r\\n 7          void (*fixup)(void __iomem *, u32, struct outer_cache_fns *);\\r\\n 8          void (*save)(void __iomem *);\\r\\n 9          struct outer_cache_fns outer_cache;\\r\\n10};\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u8fd9\u79cd\u65b9\u6cd5\uff0c\u9a71\u52a8\u53ef\u4ee5\u628a\u4e0e\u67d0\u4e2a\u8bbe\u5907\u517c\u5bb9\u7684\u79c1\u6709\u6570\u636e\u5bfb\u627e\u51fa\u6765\uff0c\u5982\u6b64\u4f53\u73b0\u4e86\u4e00\u79cd\u9762\u5411\u5bf9\u8c61\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u907f\u514d\u4e86\u5927\u91cf\u7684if\uff0celse\u6216\u8005switch\uff0ccase\u8bed\u53e5\u3002\\r\\n\\r\\n# 18.2.4\u8bbe\u5907\u8282\u70b9\u53calabel\u7684\u547d\u540d\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.2\u7684.dts\u6587\u4ef6\u4e2d\uff0c\u6839\u8282\u70b9\u201c/\u201d\u7684cpus\u5b50\u8282\u70b9\u4e0b\u9762\u53c8\u5305\u542b\u4e24\u4e2acpu\u5b50\u8282\u70b9\uff0c\u63cf\u8ff0\u4e86\u6b64\u8bbe\u5907\u4e0a\u7684\u4e24\u4e2aCPU\uff0c\u5e76\u4e14\u4e24\u8005\u7684\u517c\u5bb9\u5c5e\u6027\u4e3a\uff1a\\"arm\uff0ccortex-a9\\"\u3002\u6ce8\u610fcpus\u548ccpus\u7684\u4e24\u4e2acpu\u5b50\u8282\u70b9\u7684\u547d\u540d\uff0c\u5b83\u4eec\u9075\u5faa\u7684\u7ec4\u7ec7\u5f62\u5f0f\u4e3a< name>[@< unit-address>]\uff0c<   >\u4e2d\u7684\u5185\u5bb9\u662f\u5fc5\u9009\u9879\uff0c[   ]\u4e2d\u7684\u5219\u4e3a\u53ef\u9009\u9879\u3002name\u662f\u4e00\u4e2aASCII\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u63cf\u8ff0\u8282\u70b9\u5bf9\u5e94\u7684\u8bbe\u5907\u7c7b\u578b\uff0c\u59823com Ethernet\u9002\u914d\u5668\u5bf9\u5e94\u7684\u8282\u70b9name\u5b9c\u4e3aethernet\uff0c\u800c\u4e0d\u662f3com509\u3002\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u63cf\u8ff0\u7684\u8bbe\u5907\u6709\u5730\u5740\uff0c\u5219\u5e94\u8be5\u7ed9\u51fa@unit-address\u3002\u591a\u4e2a\u76f8\u540c\u7c7b\u578b\u8bbe\u5907\u8282\u70b9\u7684name\u53ef\u4ee5\u4e00\u6837\uff0c\u53ea\u8981unit-address\u4e0d\u540c\u5373\u53ef\uff0c\u5982\u672c\u4f8b\u4e2d\u542b\u6709cpu@0\u3001cpu@1\u4ee5\u53caserial@101f0000\u4e0eserial@101f2000\u8fd9\u6837\u7684\u540c\u540d\u8282\u70b9\u3002\u8bbe\u5907\u7684unit-address\u5730\u5740\u4e5f\u7ecf\u5e38\u5728\u5176\u5bf9\u5e94\u8282\u70b9\u7684reg\u5c5e\u6027\u4e2d\u7ed9\u51fa\u3002\u5bf9\u4e8e\u6302\u5728\u5185\u5b58\u7a7a\u95f4\u7684\u8bbe\u5907\u800c\u8a00\uff0c@\u5b57\u7b26\u540e\u8ddf\u7684\u4e00\u822c\u5c31\u662f\u8be5\u8bbe\u5907\u5728\u5185\u5b58\u7a7a\u95f4\u7684\u57fa\u5730\u5740\uff0c\u8b6c\u5982arch/arm/boot/dts/exynos4210.dtsi\u4e2d\u5b58\u5728\u7684\uff1a\\r\\n\\r\\n```\\r\\nsysram@02020000 {       \\r\\ncompatible = \\"mmio-sram\\";     \\r\\nreg = <0x02020000 0x20000>;      \\r\\n\u2026\\r\\n}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u8282\u70b9\u7684reg\u5c5e\u6027\u7684\u5f00\u59cb\u4f4d\u7f6e\u4e0e@\u540e\u9762\u7684\u5730\u5740\u4e00\u6837\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u6302\u5728I2 C\u603b\u7ebf\u4e0a\u7684\u5916\u8bbe\u800c\u8a00\uff0c@\u540e\u9762\u4e00\u822c\u8ddf\u7684\u662f\u4ece\u8bbe\u5907\u7684I2 C\u5730\u5740\uff0c\u8b6c\u5982arch/arm/boot/dts/exynos4210-trats.dts\u4e2d\u7684mms114-touchscreen\uff1a\\r\\n\\r\\n```\\r\\ni2c@13890000 {\\r\\n       \u2026\\r\\n       mms114-touchscreen@48 {\\r\\n              compatible = \\"melfas,mms114\\";\\r\\n              reg = <0x48>;\\r\\n              \u2026\\r\\n       };\\r\\n};\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u8282\u70b9\u7684reg\u5c5e\u6027\u6807\u793a\u7684I2 C\u4ece\u5730\u5740\u4e0e@\u540e\u9762\u7684\u5730\u5740\u4e00\u6837\u3002\\r\\n\\r\\n\u5177\u4f53\u7684\u8282\u70b9\u547d\u540d\u89c4\u8303\u53ef\u89c1ePAPR\uff08embedded Power Architecture Platform Reference\uff09\u6807\u51c6\uff0c\u5728https://www.power.org \u4e2d\u53ef\u4e0b\u8f7d\u8be5\u6807\u51c6\u3002\\r\\n\\r\\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u8bbe\u5907\u8282\u70b9\u6dfb\u52a0label\uff0c\u4e4b\u540e\u53ef\u4ee5\u901a\u8fc7&label\u7684\u5f62\u5f0f\u8bbf\u95ee\u8fd9\u4e2alabel\uff0c\u8fd9\u79cd\u5f15\u7528\u662f\u901a\u8fc7phandle\uff08pointer handle\uff09\u8fdb\u884c\u7684\u3002\\r\\n\\r\\n\u4f8b\u5982\uff0c\u5728arch/arm/boot/dts/omap5.dtsi\u4e2d\uff0c\u7b2c3\u7ec4GPIO\u6709gpio3\u8fd9\u4e2alabel\uff0c\u5982\u4ee3\u7801\u6e05\u535518.12\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.12\u3000\u5728\u8bbe\u5907\u6811\u4e2d\u5b9a\u4e49label\\r\\n\\r\\n```\\r\\n 1gpio3: gpio@48057000 {\\r\\n 2         compatible = \\"ti,omap4-gpio\\";\\r\\n 3         reg = <0x48057000 0x200>;\\r\\n 4         interrupts = <GIC_SPI 31 IRQ_TYPE_LEVEL_HIGH>;\\r\\n 5         ti,hwmods = \\"gpio3\\";\\r\\n 6         gpio-controller;\\r\\n 7         #gpio-cells = <2>;\\r\\n 8         interrupt-controller;\\r\\n 9         #interrupt-cells = <2>;\\r\\n10 };\\r\\n```\\r\\n\\r\\n\u800chsusb2_phy\u8fd9\u4e2aUSB\u7684PHY\u590d\u4f4dGPIO\u7528\u7684\u662f\u8fd9\u7ec4GPIO\u4e2d\u7684\u4e00\u4e2a\uff0c\u6240\u4ee5\u5b83\u901a\u8fc7phandle\u5f15\u7528\u4e86\u201cgpio3\u201d\uff0c\u5982\u4ee3\u7801\u6e05\u535518.13\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.13\u3000\u901a\u8fc7phandle\u5f15\u7528\u5176\u4ed6\u8282\u70b9\\r\\n\\r\\n```\\r\\n 1/* HS USB Host PHY on PORT 2 */\\r\\n 2hsusb2_phy: hsusb2_phy {\\r\\n 3          compatible = \\"usb-nop-xceiv\\";\\r\\n 4          reset-gpios = <&gpio3 12 GPIO_ACTIVE_LOW>; /* gpio3_76 HUB_RESET */\\r\\n 5};\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.12\u7b2c1\u884c\u7684gpio3\u662fgpio@48057000\u8282\u70b9\u7684label\uff0c\u800c\u4ee3\u7801\u6e05\u535518.13\u7684hsusb2_phy\u5219\u901a\u8fc7&gpio3\u5f15\u7528\u4e86\u8fd9\u4e2a\u8282\u70b9\uff0c\u8868\u660e\u81ea\u5df1\u8981\u4f7f\u7528\u8fd9\u4e00\u7ec4GPIO\u4e2d\u7684\u7b2c12\u4e2aGPIO\u3002\u5f88\u663e\u7136\uff0c\u8fd9\u79cdphandle\u5f15\u7528\u5176\u5b9e\u8868\u660e\u786c\u4ef6\u4e4b\u95f4\u7684\u4e00\u79cd\u5173\u8054\u6027\u3002\\r\\n\\r\\n\u518d\u4e3e\u4e00\u4f8b\uff0c\u5728arch/arm/boot/dts/omap5.dtsi\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u7684label\uff0c\u4ece\u8fd9\u4e9b\u5b9e\u4f8b\u53ef\u4ee5\u770b\u51fa\uff0clabel\u4e60\u60ef\u4ee5<\u8bbe\u5907\u7c7b\u578b>< index>\u8fdb\u884c\u547d\u540d\uff1a\\r\\n\\r\\n```\\r\\ni2c1: i2c@48070000 {\\r\\n}\\r\\ni2c2: i2c@48072000 {\\r\\n}\\r\\ni2c3: i2c@48060000 {\\r\\n}\u2026\\r\\n```\\r\\n\\r\\n\u8bfb\u8005\u4e5f\u8bb8\u53d1\u73b0\u4e86\u4e00\u4e2a\u5947\u602a\u7684\u73b0\u8c61\uff0c\u5c31\u662f\u4ee3\u7801\u6e05\u535518.13\u4e2d\u5c45\u7136\u5f15\u7528\u4e86GPIO_ACTIVE_LOW\u8fd9\u4e2a\u7c7b\u4f3cC\u8bed\u8a00\u7684\u5b8f\u3002\u6587\u4ef6.dts\u7684\u7f16\u8bd1\u8fc7\u7a0b\u786e\u5b9e\u652f\u6301C\u7684\u9884\u5904\u7406\uff0c\u76f8\u5e94\u7684.dts\u6587\u4ef6\u4e5f\u5305\u62ec\u4e86\u5305\u542bGPIO_ACTIVE_LOW\u8fd9\u4e2a\u5b8f\u5b9a\u4e49\u7684\u5934\u6587\u4ef6\uff1a\\r\\n\\r\\n```\\r\\n#include <dt-bindings/gpio/gpio.h>\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8eARM\u800c\u8a00\uff0cdt-bindings\u5934\u6587\u4ef6\u4f4d\u4e8e\u5185\u6838\u7684arch/arm/boot/dts/include/dt-bindings\u76ee\u5f55\u4e2d\u3002\u89c2\u5bdf\u8be5\u76ee\u5f55\u7684\u5c5e\u6027\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\uff1a\\r\\n\\r\\n```\\r\\nbaohua@baohua-VirtualBox:~/develop/linux/arch/arm/boot/dts/include$ ls -l dt-\\r\\n    bindings\\r\\nlrwxrwxrwx 1 baohua baohua 34 11\u6708\\r\\n 28 00:16 dt-bindings -> ../../../../../\\r\\n    include/dt-bindings\\r\\n```\\r\\n\\r\\n\u4ece\u5185\u6838\u7684scripts/Makefile.lib\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u770b\u51fa\uff0c\u6587\u4ef6.dts\u7684\u7f16\u8bd1\u8fc7\u7a0b\u786e\u5b9e\u662f\u652f\u6301C\u9884\u5904\u7406\u7684\u3002\\r\\n\\r\\n```\\r\\ncmd_dtc = $(CPP) $(dtc_cpp_flags) -x assembler-with-cpp -o $(dtc-tmp) $< ; \\\\\\r\\n        $(objtree)/scripts/dtc/dtc -O dtb -o $@ -b 0 \\\\\\r\\n                -i $(dir $<) $(DTC_FLAGS) \\\\\\r\\n                -d $(depfile).dtc.tmp $(dtc-tmp) ; \\\\\\r\\ncat $(depfile).pre.tmp $(depfile).dtc.tmp > $(depfile)\\r\\n```\\r\\n\\r\\n\u5b83\u662f\u5148\u505a\u4e86$\uff08CPP\uff09$\uff08dtc_cpp_flags\uff09-x assembler-with-cpp-o$\uff08dtc-tmp\uff09$<\uff0c\u518d\u505a\u7684.dtc\u7f16\u8bd1\u3002\\r\\n\\r\\n# 18.2.5\u5730\u5740\u7f16\u7801\\r\\n\\r\\n\u53ef\u5bfb\u5740\u7684\u8bbe\u5907\u4f7f\u7528\u5982\u4e0b\u4fe1\u606f\u5728\u8bbe\u5907\u6811\u4e2d\u7f16\u7801\u5730\u5740\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\nreg\\r\\n    #address-cells\\r\\n    #size-cells\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0creg\u7684\u7ec4\u7ec7\u5f62\u5f0f\u4e3areg=<address1length1 [address2 length2] [ address3 length3]...>\uff0c\u5176\u4e2d\u7684\u6bcf\u4e00\u7ec4address length\u8868\u660e\u4e86\u8bbe\u5907\u4f7f\u7528\u7684\u4e00\u4e2a\u5730\u5740\u8303\u56f4\u3002address\u4e3a1\u4e2a\u6216\u591a\u4e2a32\u4f4d\u7684\u6574\u578b\uff08\u5373cell\uff09\uff0c\u800clength\u7684\u610f\u4e49\u5219\u610f\u5473\u7740\u4eceaddress\u5230address+length\u20131\u7684\u5730\u5740\u8303\u56f4\u90fd\u5c5e\u4e8e\u8be5\u8282\u70b9\u3002\u82e5#size-cells=0\uff0c\u5219length\u5b57\u6bb5\u4e3a\u7a7a\u3002\\r\\n\\r\\naddress\u548clength\u5b57\u6bb5\u662f\u53ef\u53d8\u957f\u7684\uff0c\u7236\u8282\u70b9\u7684#address-cells\u548c#size-cells\u5206\u522b\u51b3\u5b9a\u4e86\u5b50\u8282\u70b9reg\u5c5e\u6027\u7684address\u548clength\u5b57\u6bb5\u7684\u957f\u5ea6\u3002\\r\\n\\r\\n\u5728\u4ee3\u7801\u6e05\u535518.2\u4e2d\uff0c\u6839\u8282\u70b9\u7684#address-cells=<1>\uff1b\u548c#size-cells=<1>\uff1b\u51b3\u5b9a\u4e86serial\u3001gpio\u3001spi\u7b49\u8282\u70b9\u7684address\u548clength\u5b57\u6bb5\u7684\u957f\u5ea6\u5206\u522b\u4e3a1\u3002\\r\\n\\r\\ncpus\u8282\u70b9\u7684#address-cells=<1>\uff1b\u548c#size-cells=<0>\uff1b\u51b3\u5b9a\u4e86\u4e24\u4e2acpu\u5b50\u8282\u70b9\u7684address\u4e3a1\uff0c\u800clength\u4e3a\u7a7a\uff0c\u4e8e\u662f\u5f62\u6210\u4e86\u4e24\u4e2acpu\u7684reg=<0>\uff1b\u548creg=<1>\uff1b\u3002\\r\\n\\r\\nexternal-bus\u8282\u70b9\u7684#address-cells=<2>\u548c#size-cells=<1>\uff1b\u51b3\u5b9a\u4e86\u5176\u4e0b\u7684ethernet\u3001i2c\u3001flash\u7684reg\u5b57\u6bb5\u5f62\u5982reg=<0 0 0x1000>\uff1b\u3001reg=<1 0 0x1000>\uff1b\u548creg=<2 0 0x4000000>\uff1b\u3002\u5176\u4e2d\uff0caddress\u5b57\u6bb5\u957f\u5ea6\u4e3a2\uff0c\u5f00\u59cb\u7684\u7b2c\u4e00\u4e2acell\uff08\u5373\u201c<\u201d\u540e\u76840\u30011\u30012\uff09\u662f\u5bf9\u5e94\u7684\u7247\u9009\uff0c\u7b2c2\u4e2acell\uff08\u5373<0 0 0x1000>\u3001<1 0 0x1000>\u548c<2 00x1000000>\u4e2d\u95f4\u76840\uff0c0\uff0c0\uff09\u662f\u76f8\u5bf9\u8be5\u7247\u9009\u7684\u57fa\u5730\u5740\uff0c\u7b2c3\u4e2acell\uff08\u5373\u201c>\u201d\u524d\u76840x1000\u30010x1000\u30010x1000000\uff09\u4e3alength\u3002\\r\\n\\r\\n\u7279\u522b\u8981\u7559\u610f\u7684\u662fi2c\u8282\u70b9\u4e2d\u5b9a\u4e49\u7684#address-cells=<1>\uff1b\u548c#size-cells=<0>\uff1b\uff0c\u5176\u4f5c\u7528\u5230\u4e86I2 C\u603b\u7ebf\u4e0a\u8fde\u63a5\u7684RTC\uff0c\u5b83\u7684address\u5b57\u6bb5\u4e3a0x58\uff0c\u662fRTC\u8bbe\u5907\u7684I2 C\u5730\u5740\u3002\\r\\n\\r\\n\u6839\u8282\u70b9\u7684\u76f4\u63a5\u5b50\u4e66\u70b9\u63cf\u8ff0\u7684\u662fCPU\u7684\u89c6\u56fe\uff0c\u56e0\u6b64\u6839\u5b50\u8282\u70b9\u7684address\u533a\u57df\u5c31\u76f4\u63a5\u4f4d\u4e8eCPU\u7684\u5185\u5b58\u533a\u57df\u3002\u4f46\u662f\uff0c\u7ecf\u8fc7\u603b\u7ebf\u6865\u540e\u7684address\u5f80\u5f80\u9700\u8981\u7ecf\u8fc7\u8f6c\u6362\u624d\u80fd\u5bf9\u5e94CPU\u7684\u5185\u5b58\u6620\u5c04\u3002external-bus\u7684ranges\u5c5e\u6027\u5b9a\u4e49\u4e86\u7ecf\u8fc7external-bus\u6865\u540e\u7684\u5730\u5740\u8303\u56f4\u5982\u4f55\u6620\u5c04\u5230CPU\u7684\u5185\u5b58\u533a\u57df\u3002\\r\\n\\r\\n```\\r\\nranges = <0 0  0x10100000   0x10000     // Chipselect 1, Ethernet\\r\\n                  1 0  0x10160000   0x10000     // Chipselect 2, i2c controller\\r\\n                  2 0  0x30000000   0x1000000>; // Chipselect 3, NOR Flash\\r\\n```\\r\\n\\r\\nranges\u662f\u5730\u5740\u8f6c\u6362\u8868\uff0c\u5176\u4e2d\u7684\u6bcf\u4e2a\u9879\u76ee\u662f\u4e00\u4e2a\u5b50\u5730\u5740\u3001\u7236\u5730\u5740\u4ee5\u53ca\u5728\u5b50\u5730\u5740\u7a7a\u95f4\u7684\u5927\u5c0f\u7684\u6620\u5c04\u3002\u6620\u5c04\u8868\u4e2d\u7684\u5b50\u5730\u5740\u3001\u7236\u5730\u5740\u5206\u522b\u91c7\u7528\u5b50\u5730\u5740\u7a7a\u95f4\u7684#address-cells\u548c\u7236\u5730\u5740\u7a7a\u95f4\u7684#address-cells\u5927\u5c0f\u3002\u5bf9\u4e8e\u672c\u4f8b\u800c\u8a00\uff0c\u5b50\u5730\u5740\u7a7a\u95f4\u7684#address-cells\u4e3a2\uff0c\u7236\u5730\u5740\u7a7a\u95f4\u7684#address-cells\u503c\u4e3a1\uff0c\u56e0\u6b640 0 0x10100000 0x10000\u7684\u524d2\u4e2acell\u4e3aexternal-bus\u6865\u540eexternal-bus\u4e0a\u7247\u90090\u504f\u79fb0\uff0c\u7b2c3\u4e2acell\u8868\u793aexternal-bus\u4e0a\u7247\u90090\u504f\u79fb0\u7684\u5730\u5740\u7a7a\u95f4\u88ab\u6620\u5c04\u5230CPU\u7684\u672c\u5730\u603b\u7ebf\u76840x10100000\u4f4d\u7f6e\uff0c\u7b2c4\u4e2acell\u8868\u793a\u6620\u5c04\u7684\u5927\u5c0f\u4e3a0x10000\u3002ranges\u540e\u9762\u4e24\u4e2a\u9879\u76ee\u7684\u542b\u4e49\u53ef\u4ee5\u7c7b\u63a8\u3002\\r\\n\\r\\n# 18.2.6\u4e2d\u65ad\u8fde\u63a5\\r\\n\\r\\n\u8bbe\u5907\u6811\u4e2d\u8fd8\u53ef\u4ee5\u5305\u542b\u4e2d\u65ad\u8fde\u63a5\u4fe1\u606f\uff0c\u5bf9\u4e8e\u4e2d\u65ad\u63a7\u5236\u5668\u800c\u8a00\uff0c\u5b83\u63d0\u4f9b\u5982\u4e0b\u5c5e\u6027\uff1a\\r\\n\\r\\ninterrupt-controller\u2013\u8fd9\u4e2a\u5c5e\u6027\u4e3a\u7a7a\uff0c\u4e2d\u65ad\u63a7\u5236\u5668\u5e94\u8be5\u52a0\u4e0a\u6b64\u5c5e\u6027\u8868\u660e\u81ea\u5df1\u7684\u8eab\u4efd\uff1b\\r\\n\\r\\n#interrupt-cells\u2013\u4e0e#address-cells\u548c#size-cells\u76f8\u4f3c\uff0c\u5b83\u8868\u660e\u8fde\u63a5\u6b64\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u8bbe\u5907\u7684\u4e2d\u65ad\u5c5e\u6027\u7684cell\u5927\u5c0f\u3002\\r\\n\\r\\n\u5728\u6574\u4e2a\u8bbe\u5907\u6811\u4e2d\uff0c\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u5c5e\u6027\u8fd8\u5305\u62ec\uff1a\\r\\n\\r\\ninterrupt-parent\u2013\u8bbe\u5907\u8282\u70b9\u901a\u8fc7\u5b83\u6765\u6307\u5b9a\u5b83\u6240\u4f9d\u9644\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u7684phandle\uff0c\u5f53\u8282\u70b9\u6ca1\u6709\u6307\u5b9ainterrupt-parent\u65f6\uff0c\u5219\u4ece\u7236\u7ea7\u8282\u70b9\u7ee7\u627f\u3002\u5bf9\u4e8e\u672c\u4f8b\uff08\u4ee3\u7801\u6e05\u535518.2\uff09\u800c\u8a00\uff0c\u6839\u8282\u70b9\u6307\u5b9a\u4e86interrupt-parent=<&intc>\uff1b\uff0c\u5176\u5bf9\u5e94\u4e8eintc\uff1ainterrupt-controller@10140000\uff0c\u800c\u6839\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5e76\u672a\u6307\u5b9ainterrupt-parent\uff0c\u56e0\u6b64\u5b83\u4eec\u90fd\u7ee7\u627f\u4e86intc\uff0c\u5373\u4f4d\u4e8e0x10140000\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u4e2d\u3002\\r\\n\\r\\ninterrupts\u2013\u7528\u5230\u4e86\u4e2d\u65ad\u7684\u8bbe\u5907\u8282\u70b9\uff0c\u901a\u8fc7\u5b83\u6307\u5b9a\u4e2d\u65ad\u53f7\u3001\u89e6\u53d1\u65b9\u6cd5\u7b49\uff0c\u8fd9\u4e2a\u5c5e\u6027\u5177\u4f53\u542b\u6709\u591a\u5c11\u4e2acell\uff0c\u7531\u5b83\u4f9d\u9644\u7684\u4e2d\u65ad\u63a7\u5236\u5668\u8282\u70b9\u7684#interrupt-cells\u5c5e\u6027\u51b3\u5b9a\u3002\u800c\u6bcf\u4e2acell\u5177\u4f53\u53c8\u662f\u4ec0\u4e48\u542b\u4e49\uff0c\u4e00\u822c\u7531\u9a71\u52a8\u7684\u5b9e\u73b0\u51b3\u5b9a\uff0c\u800c\u4e14\u4e5f\u4f1a\u5728\u8bbe\u5907\u6811\u7684\u7ed1\u5b9a\u6587\u6863\u4e2d\u8bf4\u660e\u3002\u8b6c\u5982\uff0c\u5bf9\u4e8eARM GIC\u4e2d\u65ad\u63a7\u5236\u5668\u800c\u8a00\uff0c#interrupt-cells\u4e3a3\uff0c3\u4e2acell\u7684\u5177\u4f53\u542b\u4e49\u5728Documentation/devicetree/bindings/arm/gic.txt\u4e2d\u5c31\u6709\u5982\u4e0b\u6587\u5b57\u8bf4\u660e\uff1a\\r\\n\\r\\n```\\r\\nThe 1st cell is the interrupt type; 0 for SPI interrupts, 1 for PPI\\r\\ninterrupts.\\r\\nThe 2nd cell contains the interrupt number for the interrupt type.\\r\\nSPI interrupts are in the range [0-987].  PPI interrupts are in the\\r\\nrange [0-15].\\r\\nThe 3rd cell is the flags, encoded as follows:\\r\\nbits[3:0] trigger type and level flags.\\r\\n              1 = low-to-high edge triggered\\r\\n              2 = high-to-low edge triggered\\r\\n              4 = active high level-sensitive\\r\\n              8 = active low level-sensitive\\r\\nbits[15:8] PPI interrupt cpu mask.  Each bit corresponds to each of\\r\\nthe 8 possible cpus attached to the GIC.  A bit set to \'1\' indicated\\r\\nthe interrupt is wired to that CPU.  Only valid for PPI interrupts.\\r\\n```\\r\\n\\r\\n\u53e6\u5916\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u4e2a\u8bbe\u5907\u8fd8\u53ef\u80fd\u7528\u5230\u591a\u4e2a\u4e2d\u65ad\u53f7\u3002\u5bf9\u4e8eARM GIC\u800c\u8a00\uff0c\u82e5\u67d0\u8bbe\u5907\u4f7f\u7528\u4e86SPI\u7684168\u53f7\u3001169\u53f7\u4e24\u4e2a\u4e2d\u65ad\uff0c\u800c\u4e14\u90fd\u662f\u9ad8\u7535\u5e73\u89e6\u53d1\uff0c\u5219\u8be5\u8bbe\u5907\u8282\u70b9\u7684\u4e2d\u65ad\u5c5e\u6027\u53ef\u5b9a\u4e49\u4e3ainterrupts=<01684>\uff0c<01694>\uff1b\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u5e73\u53f0\u8bbe\u5907\u800c\u8a00\uff0c\u7b80\u5355\u7684\u901a\u8fc7\u5982\u4e0bAPI\u5c31\u53ef\u4ee5\u6307\u5b9a\u60f3\u53d6\u54ea\u4e00\u4e2a\u4e2d\u65ad\uff0c\u5176\u4e2d\u7684\u53c2\u6570num\u5c31\u662f\u4e2d\u65ad\u7684index\u3002\\r\\n\\r\\n```\\r\\nint platform_get_irq(struct platform_device *dev, unsigned int num);\\r\\n```\\r\\n\\r\\n\u5f53\u7136\u5728.dts\u6587\u4ef6\u4e2d\u53ef\u4ee5\u5bf9\u4e2d\u65ad\u8fdb\u884c\u547d\u540d\uff0c\u800c\u540e\u5728\u9a71\u52a8\u4e2d\u901a\u8fc7platform_get_irq_byname\uff08\uff09\u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u4e2d\u65ad\u53f7\u3002\u8b6c\u5982\u4ee3\u7801\u6e05\u535518.14\u6f14\u793a\u4e86\u5728drivers/dma/fsl-edma.c\u4e2d\u901a\u8fc7platform_get_irq_byname\uff08\uff09\u83b7\u53d6IRQ\uff0c\u4ee5\u53caarch/arm/boot/dts/vf610.dtsi\u4e0efsl-edma\u9a71\u52a8\u5bf9\u5e94\u8282\u70b9\u7684\u4e2d\u65ad\u63cf\u8ff0\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.14\u3000\u8bbe\u5907\u6811\u4e2d\u7684\u4e2d\u65ad\u540d\u79f0\u4ee5\u53ca\u9a71\u52a8\u83b7\u53d6\u4e2d\u65ad\\r\\n\\r\\n```\\r\\n 1static int\\r\\n 2fsl_edma_irq_init(struct platform_device *pdev,struct fsl_edma_engine *fsl_edma)\\r\\n 3{\\r\\n 4     fsl_edma->txirq = platform_get_irq_byname(pdev, \\"edma-tx\\");\\r\\n 5     fsl_edma->errirq = platform_get_irq_byname(pdev, \\"edma-err\\");\\r\\n 6}\\r\\n 7\\r\\n 8edma0: dma-controller@40018000 {\\r\\n 9           #dma-cells = <2>;\\r\\n10           compatible = \\"fsl,vf610-edma\\";\\r\\n11           reg = <0x40018000 0x2000>,\\r\\n12                   <0x40024000 0x1000>,\\r\\n13                   <0x40025000 0x1000>;\\r\\n14           interrupts = <0 8 IRQ_TYPE_LEVEL_HIGH>,\\r\\n15                           <0 9 IRQ_TYPE_LEVEL_HIGH>;\\r\\n16           interrupt-names = \\"edma-tx\\", \\"edma-err\\";\\r\\n17           dma-channels = <32>;\\r\\n18           clock-names = \\"dmamux0\\", \\"dmamux1\\";\\r\\n19           clocks = <&clks VF610_CLK_DMAMUX0>,\\r\\n20                   <&clks VF610_CLK_DMAMUX1>;\\r\\n21};\\r\\n```\\r\\n\\r\\n\u7b2c4\u884c\u3001\u7b2c5\u884c\u7684platform_get_irq_byname\uff08\uff09\u7684\u7b2c2\u4e2a\u53c2\u6570\u4e0e.dts\u4e2d\u7684interrupt-names\u662f\u4e00\u81f4\u7684\u3002\\r\\n\\r\\n# 18.2.7GPIO\u3001\u65f6\u949f\u3001pinmux\u8fde\u63a5\\r\\n\\r\\n\u9664\u4e86\u4e2d\u65ad\u4ee5\u5916\uff0c\u5728ARM Linux\u4e2d\u65f6\u949f\u3001GPIO\u3001pinmux\u90fd\u53ef\u4ee5\u901a\u8fc7.dts\u4e2d\u7684\u8282\u70b9\u548c\u5c5e\u6027\u8fdb\u884c\u63cf\u8ff0\u3002\\r\\n\\r\\n## 1.GPIO\\r\\n\\r\\n\u8b6c\u5982\uff0c\u5bf9\u4e8eGPIO\u63a7\u5236\u5668\u800c\u8a00\uff0c\u5176\u5bf9\u5e94\u7684\u8bbe\u5907\u8282\u70b9\u9700\u58f0\u660egpio-controller\u5c5e\u6027\uff0c\u5e76\u8bbe\u7f6e#gpio-cells\u7684\u5927\u5c0f\u3002\u8b6c\u5982\uff0c\u5bf9\u4e8e\u517c\u5bb9\u6027\u4e3afsl\uff0cimx28-pinctrl\u7684pinctrl\u9a71\u52a8\u800c\u8a00\uff0c\u5176GPIO\u63a7\u5236\u5668\u7684\u8bbe\u5907\u8282\u70b9\u7c7b\u4f3c\u4e8e\uff1a\\r\\n\\r\\n```\\r\\npinctrl@80018000 {\\r\\ncompatible = \\"fsl,imx28-pinctrl\\", \\"simple-bus\\";\\r\\nreg = <0x80018000 2000>;\\r\\n        gpio0: gpio@0 {\\r\\n\\t\\tcompatible = \\"fsl,imx28-gpio\\";\\r\\n\\t\\tinterrupts = <127>;\\r\\n\\t\\tgpio-controller;\\r\\n                #gpio-cells = <2>;\\r\\n\\t\\t\\t\\tinterrupt-controller;\\r\\n                #interrupt-cells = <2>;\\r\\n        };\\r\\n        gpio1: gpio@1 {\\r\\n\\t\\t\\tcompatible = \\"fsl,imx28-gpio\\";\\r\\n\\t\\t\\tinterrupts = <126>;\\r\\n\\t\\t\\tgpio-controller;\\r\\n                #gpio-cells = <2>;\\r\\n\\t\\t\\tinterrupt-controller;\\r\\n                #interrupt-cells = <2>;\\r\\n        };\\r\\n        ...\\r\\n};\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\uff0c#gpio-\u3000cells\u4e3a2\uff0c\u7b2c1\u4e2acell\u4e3aGPIO\u53f7\uff0c\u7b2c2\u4e2a\u4e3aGPIO\u7684\u6781\u6027\u3002\u4e3a0\u7684\u65f6\u5019\u662f\u9ad8\u7535\u5e73\u6709\u6548\uff0c\u4e3a1\u7684\u65f6\u5019\u5219\u662f\u4f4e\u7535\u5e73\u6709\u6548\u3002\\r\\n\\r\\n\u4f7f\u7528GPIO\u7684\u8bbe\u5907\u5219\u901a\u8fc7\u5b9a\u4e49\u547d\u540dxxx-gpios\u5c5e\u6027\u6765\u5f15\u7528GPIO\u63a7\u5236\u5668\u7684\u8bbe\u5907\u8282\u70b9\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nsdhci@c8000400 {\\r\\n\\tstatus = \\"okay\\";\\r\\n\\tcd-gpios = <&gpio01 0>;\\r\\n\\twp-gpios = <&gpio02 0>;\\r\\n\\tpower-gpios = <&gpio03 0>;\\r\\n\\tbus-width = <4>;\\r\\n        };\\r\\n```\\r\\n\\r\\n\u800c\u5177\u4f53\u7684\u8bbe\u5907\u9a71\u52a8\u5219\u901a\u8fc7\u7c7b\u4f3c\u5982\u4e0b\u7684\u65b9\u6cd5\u6765\u83b7\u53d6GPIO\uff1a\\r\\n\\r\\n```\\r\\ncd_gpio = of_get_named_gpio(np, \\"cd-gpios\\", 0);\\r\\nwp_gpio = of_get_named_gpio(np, \\"wp-gpios\\", 0);\\r\\npower_gpio = of_get_named_gpio(np, \\"power-gpios\\", 0);\\r\\n```\\r\\n\\r\\nof_get_named_gpio\uff08\uff09\u8fd9\u4e2aAPI\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nstatic inline int of_get_named_gpio(struct device_node *np,\\r\\nconst char *propname, int index);\\r\\n```\\r\\n\\r\\n\u5728.dts\u548c\u8bbe\u5907\u9a71\u52a8\u4e0d\u5173\u5fc3GPIO\u540d\u5b57\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7of_get_gpio\uff08\uff09\u83b7\u53d6GPIO\uff0c\u6b64\u51fd\u6570\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstatic inline int of_get_gpio(struct device_node *np, int index);\\r\\n```\\r\\n\\r\\n\u5982\u5bf9\u4e8ecompatible=\\"gpio-control-nand\\"\u7684\u57fa\u4e8eGPIO\u7684NAND\u63a7\u5236\u5668\u800c\u8a00\uff0c\u5728.dts\u4e2d\u4f1a\u5b9a\u4e49\u591a\u4e2agpio\u5c5e\u6027\uff1a\\r\\n\\r\\n```\\r\\ngpio-nand@1,0 {\\r\\ncompatible = \\"gpio-control-nand\\";\\r\\nreg = <1 0x0000 0x2>;\\r\\n       #address-cells = <1>;\\r\\n       #size-cells = <1>;\\r\\ngpios = <&banka 1 0     /* rdy */\\r\\n\\t\\t&banka 2 0     /* nce */\\r\\n\\t\\t&banka 3 0     /* ale */\\r\\n\\t\\t&banka 4 0     /* cle */\\r\\n                0              /* nwp */>;\\r\\n       partition@0 {\\r\\n       ...\\r\\n       };\\r\\n};\\r\\n```\\r\\n\\r\\n\u5728\u76f8\u5e94\u7684\u9a71\u52a8\u4ee3\u7801drivers/mtd/nand/gpio.c\u4e2d\u662f\u8fd9\u6837\u83b7\u53d6\u8fd9\u4e9bGPIO\u7684\uff1a\\r\\n\\r\\n```\\r\\nplat->gpio_rdy = of_get_gpio(dev->of_node, 0);\\r\\nplat->gpio_nce = of_get_gpio(dev->of_node, 1);\\r\\nplat->gpio_ale = of_get_gpio(dev->of_node, 2);\\r\\nplat->gpio_cle = of_get_gpio(dev->of_node, 3);\\r\\nplat->gpio_nwp = of_get_gpio(dev->of_node, 4);\\r\\n```\\r\\n\\r\\n## 2.\u65f6\u949f\\r\\n\\r\\n\u65f6\u949f\u548cGPIO\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u65f6\u949f\u63a7\u5236\u5668\u7684\u8282\u70b9\u88ab\u4f7f\u7528\u65f6\u949f\u7684\u6a21\u5757\u5f15\u7528\uff1a\\r\\n\\r\\n```\\r\\nclocks = <&clks 138>, <&clks 140>, <&clks 141>;\\r\\nclock-names = \\"uart\\", \\"general\\", \\"noc\\";\\r\\n```\\r\\n\\r\\n\u800c\u9a71\u52a8\u4e2d\u5219\u4f7f\u7528\u4e0a\u8ff0\u7684clock-names\u5c5e\u6027\u4f5c\u4e3aclk_get\uff08\uff09\u6216devm_clk_get\uff08\uff09\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6765\u7533\u8bf7\u65f6\u949f\uff0c\u8b6c\u5982\u83b7\u53d6\u7b2c2\u4e2a\u65f6\u949f\uff1a\\r\\n\\r\\n```\\r\\ndevm_clk_get(&pdev->dev, \\"general\\");\\r\\n```\\r\\n\\r\\n<&clks 138>\u91cc\u7684138\u8fd9\u4e2aindex\u662f\u4e0e\u76f8\u5e94\u65f6\u949f\u9a71\u52a8\u4e2dclk\u7684\u8868\u7684\u987a\u5e8f\u5bf9\u5e94\u7684\uff0c\u5f88\u591a\u5f00\u53d1\u8005\u4e5f\u8ba4\u4e3a\u8fd9\u79cd\u6570\u5b57\u51fa\u73b0\u5728\u8bbe\u5907\u6811\u4e2d\u4e0d\u592a\u597d\uff0c\u56e0\u6b64\u4ed6\u4eec\u628aclk\u7684index\u4f5c\u4e3a\u5b8f\u5b9a\u4e49\u5230\u4e86arch/arm/boot/dts/include/dt-bindings/clock\u4e2d\u3002\u8b6c\u5982include/dt-bindings/clock/imx6qdl-clock.h\u4e2d\u5b58\u5728\u8fd9\u6837\u7684\u5b8f\uff1a\\r\\n\\r\\n```\\r\\n#define IMX6QDL_CLK_STEP                        16\\r\\n#define IMX6QDL_CLK_PLL1_SW                     17\\r\\n#define IMX6QDL_CLK_ARM                         104\\r\\n```\\r\\n\\r\\n\u800carch/arm/boot/dts/imx6q.dtsi\u5219\u662f\u8fd9\u6837\u5f15\u7528\u5b83\u4eec\u7684\uff1a\\r\\n\\r\\n```\\r\\nclocks = <&clks IMX6QDL_CLK_ARM>,\\r\\n<&clks IMX6QDL_CLK_PLL2_PFD2_396M>,\\r\\n<&clks IMX6QDL_CLK_STEP>,\\r\\n<&clks IMX6QDL_CLK_PLL1_SW>,\\r\\n<&clks IMX6QDL_CLK_PLL1_SYS>;\\r\\n```\\r\\n\\r\\n## 3.pinmux\\r\\n\\r\\n\u5728\u8bbe\u5907\u6811\u4e2d\uff0c\u67d0\u4e2a\u8bbe\u5907\u8282\u70b9\u4f7f\u7528\u7684pinmux\u7684\u5f15\u811a\u7fa4\u662f\u901a\u8fc7phandle\u6765\u6307\u5b9a\u7684\u3002\u8b6c\u5982\u5728arch/arm/boot/dts/atlas6.dtsi\u7684pinctrl\u8282\u70b9\u4e2d\u5305\u542b\u6240\u6709\u5f15\u811a\u7fa4\u7684\u63cf\u8ff0\uff0c\u5982\u4ee3\u7801\u6e05\u535518.15\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.15\u3000\u8bbe\u5907\u6811\u4e2dpinctrl\u63a7\u5236\u5668\u7684\u5f15\u811a\u7fa4\\r\\n\\r\\n```\\r\\n 1gpio: pinctrl@b0120000 {\\r\\n 2         #gpio-cells = <2>;\\r\\n 3         #interrupt-cells = <2>;\\r\\n 4         compatible = \\"sirf,atlas6-pinctrl\\";\\r\\n 5         \u2026\\r\\n 6\\r\\n 7         lcd_16pins_a: lcd0@0 {\\r\\n 8                lcd {\\r\\n 9                       sirf,pins = \\"lcd_16bitsgrp\\";\\r\\n10                       sirf,function = \\"lcd_16bits\\";\\r\\n11                };\\r\\n12         };\\r\\n13         \u2026\\r\\n14         spi0_pins_a: spi0@0 {\\r\\n15                spi {\\r\\n16                       sirf,pins = \\"spi0grp\\";\\r\\n17                       sirf,function = \\"spi0\\";\\r\\n18                };\\r\\n19         };\\r\\n20         spi1_pins_a: spi1@0 {\\r\\n21                spi {\\r\\n22                       sirf,pins = \\"spi1grp\\";\\r\\n23                       sirf,function = \\"spi1\\";\\r\\n24                };\\r\\n25         };\\r\\n26         \u2026\\r\\n27};\\r\\n```\\r\\n\\r\\n\u800cSPI0\u8fd9\u4e2a\u786c\u4ef6\u5b9e\u9645\u4e0a\u9700\u8981\u7528\u5230spi0_pins_a\u5bf9\u5e94\u7684spi0grp\u8fd9\u4e00\u7ec4\u5f15\u811a\uff0c\u56e0\u6b64\u5728atlas6-evb.dts\u4e2d\u901a\u8fc7pinctrl-0\u5f15\u7528\u4e86\u5b83\uff0c\u5982\u4ee3\u7801\u6e05\u535518.16\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535518.16\u3000\u7ed9\u8bbe\u5907\u8282\u70b9\u6307\u5b9a\u5f15\u811a\u7fa4\\r\\n\\r\\n```\\r\\n 1 spi@b00d0000 {\\r\\n 2          status = \\"okay\\";\\r\\n 3          pinctrl-names = \\"default\\";\\r\\n 4          pinctrl-0 = <&spi0_pins_a>;\\r\\n 5          \u2026\\r\\n 6};\\r\\n```\\r\\n\\r\\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u53ef\u4ee5\u52fe\u52d2\u51fa\u4e00\u4e2a\u8bbe\u5907\u6811\u7684\u5168\u5c40\u89c6\u56fe\uff0c\u56fe18.2\u663e\u793a\u4e86\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\u3001\u5c5e\u6027\u3001label\u4ee5\u53caphandle\u7b49\u4fe1\u606f\u3002\\r\\n\\r\\n![1745764867271](./figure/1745764867271.png)\\r\\n\\r\\n\u56fe18.2\u3000\u8bbe\u5907\u6811\u7684\u5168\u666f\u89c6\u56fe"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3","description":"\u79fb\u690dLinux\u5230\u5168\u65b0\u7684SMP SoC\u4e0a\uff0c\u9700\u5728\u5e95\u5c42\u63d0\u4f9b\u5b9a\u65f6\u5668\u8282\u62cd\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u3001SMP\u542f\u52a8\u3001GPIO\u3001\u65f6\u949f\u3001pinctrl\u7b49\u529f\u80fd\uff0c\u8fd9\u4e9b\u5e95\u5c42\u7684\u529f\u80fd\u88ab\u5c01\u88c5\u597d\u540e\uff0c\u5176\u4ed6\u8bbe\u5907\u9a71\u52a8\u53ea\u80fd\u8c03\u7528\u5185\u6838\u63d0\u4f9b\u7684\u901a\u7528API\u3002\u8fd9\u826f\u597d\u5730\u4f53\u73b0\u4e86\u5185\u6838\u7684\u5206\u5c42\u8bbe\u8ba1\uff0c\u5373\u9a71\u52a8\u90fd\u8c03\u7528\u4e0e\u786c\u4ef6\u65e0\u5173\u7684\u901a\u7528API\uff0c\u800c\u8fd9\u4e9bAPI\u7684\u5e95\u5c42\u5b9e\u73b0\u5219\u66f4\u591a\u7684\u662f\u586b\u5145\u5185\u6838\u89c4\u6574\u597d\u7684\u56de\u8c03\u51fd\u6570\u3002","date":"2025-09-15T14:44:14.193Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.095,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/18.2\u3000\u8bbe\u5907\u6811\u7684\u7ec4\u6210\u548c\u7ed3\u6784"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8"}},"content":"\u79fb\u690dLinux\u5230\u5168\u65b0\u7684SMP SoC\u4e0a\uff0c\u9700\u5728\u5e95\u5c42\u63d0\u4f9b\u5b9a\u65f6\u5668\u8282\u62cd\u3001\u4e2d\u65ad\u63a7\u5236\u5668\u3001SMP\u542f\u52a8\u3001GPIO\u3001\u65f6\u949f\u3001pinctrl\u7b49\u529f\u80fd\uff0c\u8fd9\u4e9b\u5e95\u5c42\u7684\u529f\u80fd\u88ab\u5c01\u88c5\u597d\u540e\uff0c\u5176\u4ed6\u8bbe\u5907\u9a71\u52a8\u53ea\u80fd\u8c03\u7528\u5185\u6838\u63d0\u4f9b\u7684\u901a\u7528API\u3002\u8fd9\u826f\u597d\u5730\u4f53\u73b0\u4e86\u5185\u6838\u7684\u5206\u5c42\u8bbe\u8ba1\uff0c\u5373\u9a71\u52a8\u90fd\u8c03\u7528\u4e0e\u786c\u4ef6\u65e0\u5173\u7684\u901a\u7528API\uff0c\u800c\u8fd9\u4e9bAPI\u7684\u5e95\u5c42\u5b9e\u73b0\u5219\u66f4\u591a\u7684\u662f\u586b\u5145\u5185\u6838\u89c4\u6574\u597d\u7684\u56de\u8c03\u51fd\u6570\u3002\\r\\n\\r\\nLinux\u5185\u6838\u793e\u533a\u9488\u5bf9pinctrl\u3001\u65f6\u949f\u3001GPIO\u3001DMA\u63d0\u4f9b\u72ec\u7acb\u7684\u5b50\u7cfb\u7edf\uff0c\u65e2\u7ed9\u5177\u4f53\u7684\u8bbe\u5907\u9a71\u52a8\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684API\uff0c\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4e86\u8bbe\u5907\u9a71\u52a8\u7684\u8de8\u5e73\u53f0\u6027\uff0c\u53c8\u4e3a\u6bcf\u4e2aSoC\u548c\u8bbe\u5907\u5b9e\u73b0\u8fd9\u4e9b\u5e95\u5c42API\u5b9a\u4e49\u597d\u4e86\u6761\u6761\u6846\u6846\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u6700\u5927\u7a0b\u5ea6\u4e0a\u907f\u514d\u6bcf\u4e2a\u786c\u4ef6\u5b9e\u73b0\u8fc7\u591a\u7684\u5197\u4f59\u4ee3\u7801\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8","description":"\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u591a\u6838\u7684ARM\u82af\u7247\u800c\u8a00\uff0c\u5728Bootrom\u4ee3\u7801\u4e2d\uff0c\u6bcf\u4e2aCPU\u90fd\u4f1a\u8bc6\u522b\u81ea\u8eabID\uff0c\u5982\u679cID\u662f0\uff0c\u5219\u5f15\u5bfcBootloader\u548cLinux\u5185\u6838\u6267\u884c\uff0c\u5982\u679cID\u4e0d\u662f0\uff0c\u5219Bootrom\u4e00\u822c\u5728\u4e0a\u7535\u65f6\u5c06\u81ea\u8eab\u7f6e\u4e8eWFI\u6216\u8005WFE\u72b6\u6001\uff0c\u5e76\u7b49\u5f85CPU0\u7ed9\u5176\u53d1CPU\u6838\u95f4\u4e2d\u65ad\u6216\u4e8b\u4ef6\uff08\u4e00\u822c\u901a\u8fc7SEV\u6307\u4ee4\uff09\u4ee5\u5524\u9192\u5b83\u3002\u4e00\u4e2a\u5178\u578b\u7684\u591a\u6838Linux\u542f\u52a8\u8fc7\u7a0b\u5982\u56fe20.6\u6240\u793a\u3002","date":"2025-09-15T14:44:14.193Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":9.185,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.10\u3000\u603b\u7ed3"},"nextItem":{"title":"8.2.1\u3000\u8f6e\u8be2\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.2\u3000\u8f6e\u8be2\u64cd\u4f5c"}},"content":"\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u5bf9\u4e8e\u591a\u6838\u7684ARM\u82af\u7247\u800c\u8a00\uff0c\u5728Bootrom\u4ee3\u7801\u4e2d\uff0c\u6bcf\u4e2aCPU\u90fd\u4f1a\u8bc6\u522b\u81ea\u8eabID\uff0c\u5982\u679cID\u662f0\uff0c\u5219\u5f15\u5bfcBootloader\u548cLinux\u5185\u6838\u6267\u884c\uff0c\u5982\u679cID\u4e0d\u662f0\uff0c\u5219Bootrom\u4e00\u822c\u5728\u4e0a\u7535\u65f6\u5c06\u81ea\u8eab\u7f6e\u4e8eWFI\u6216\u8005WFE\u72b6\u6001\uff0c\u5e76\u7b49\u5f85CPU0\u7ed9\u5176\u53d1CPU\u6838\u95f4\u4e2d\u65ad\u6216\u4e8b\u4ef6\uff08\u4e00\u822c\u901a\u8fc7SEV\u6307\u4ee4\uff09\u4ee5\u5524\u9192\u5b83\u3002\u4e00\u4e2a\u5178\u578b\u7684\u591a\u6838Linux\u542f\u52a8\u8fc7\u7a0b\u5982\u56fe20.6\u6240\u793a\u3002\\r\\n\\r\\n\u88abCPU0\u5524\u9192\u7684CPUn\u53ef\u4ee5\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u70ed\u63d2\u62d4\uff0c\u8b6c\u5982\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5373\u53ef\u5378\u8f7dCPU1\uff0c\u5e76\u4e14\u5c06CPU1\u4e0a\u7684\u4efb\u52a1\u5168\u90e8\u8fc1\u79fb\u5230\u5176\u4ed6CPU\u4e2d\uff1a\\r\\n\\r\\n```\\r\\n# echo 0 > /sys/devices/system/cpu/cpu1/online\\r\\n```\\r\\n\\r\\n\u540c\u7406\uff0c\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u518d\u6b21\u542f\u52a8CPU1\uff1a\\r\\n\\r\\n```\\r\\n# echo 1 > /sys/devices/system/cpu/cpu1/online\\r\\n```\\r\\n\\r\\n\u4e4b\u540eCPU1\u4f1a\u4e3b\u52a8\u53c2\u4e0e\u7cfb\u7edf\u4e2d\u5404\u4e2aCPU\u4e4b\u95f4\u8981\u8fd0\u884c\u4efb\u52a1\u7684\u8d1f\u8f7d\u5747\u8861\u5de5\u4f5c\u3002\\r\\n\\r\\n![1747234215141](./figure/1747234215141.png)\\r\\n\\r\\n\u56fe20.6\u3000\u4e00\u4e2a\u5178\u578b\u7684\u591a\u6838Linux\u542f\u52a8\u8fc7\u7a0b\\r\\n\\r\\nCPU0\u5524\u9192\u5176\u4ed6CPU\u7684\u52a8\u4f5c\u5728\u5185\u6838\u4e2d\u88ab\u5c01\u88c5\u4e3a\u4e00\u4e2asmp_operations\u7684\u7ed3\u6784\u4f53\uff0c\u5bf9\u4e8eARM\u800c\u8a00\uff0c\u5b83\u5b9a\u4e49\u4e8earch/arm/include/asm/smp.h\u4e2d\u3002\u8be5\u7ed3\u6784\u4f53\u7684\u6210\u5458\u51fd\u6570\u5982\u4ee3\u7801\u6e05\u535520.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.8\u3000smp_operations\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct smp_operations {\\r\\n 2#ifdef CONFIG_SMP\\r\\n 3        /*\\r\\n 4         * Setup the set of possible CPUs (via set_cpu_possible)\\r\\n 5         */\\r\\n 6        void (*smp_init_cpus)(void);\\r\\n 7        /*\\r\\n 8         * Initialize cpu_possible map, and enable coherency\\r\\n 9         */\\r\\n10        void (*smp_prepare_cpus)(unsigned int max_cpus);\\r\\n11\\r\\n12        /*\\r\\n13         * Perform platform specific initialisation of the specified CPU.\\r\\n14         */\\r\\n15        void (*smp_secondary_init)(unsigned int cpu);\\r\\n16        /*\\r\\n17         * Boot a secondary CPU, and assign it the specified idle task.\\r\\n18         * This also gives us the initial stack to use for this CPU.\\r\\n19         */\\r\\n20        int  (*smp_boot_secondary)(unsigned int cpu, struct task_struct *idle);\\r\\n21#ifdef CONFIG_HOTPLUG_CPU\\r\\n22        int  (*cpu_kill)(unsigned int cpu);\\r\\n23        void (*cpu_die)(unsigned int cpu);\\r\\n24        int  (*cpu_disable)(unsigned int cpu);\\r\\n25#endif\\r\\n26#endif\\r\\n27};\\r\\n```\\r\\n\\r\\n\u6211\u4eec\u4ecearch/arm/mach-vexpress/v2m.c\u4e2d\u770b\u5230VEXPRESS\u7535\u8def\u677f\u7528\u5230\u7684smp_ops\uff08\uff09\u4e3avexpress_smp_ops\uff1a\\r\\n\\r\\n```\\r\\nDT_MACHINE_START(VEXPRESS_DT, \\"ARM-Versatile Express\\")\\r\\n        .dt_compat      = v2m_dt_match,\\r\\n        .smp            = smp_ops(vexpress_smp_ops),\\r\\n        .map_io         = v2m_dt_map_io,\\r\\n        \u2026\\r\\nMACHINE_END\\r\\n```\\r\\n\\r\\n\u901a\u8fc7arch/arm/mach-vexpress/platsmp.c\u7684\u5b9e\u73b0\u4ee3\u7801\u53ef\u4ee5\u770b\u51fa\uff0csmp_operations\u7684\u6210\u5458\u51fd\u6570smp_init_cpus\uff08\uff09\uff0c\u5373vexpress_smp_init_cpus\uff08\uff09\u8c03\u7528\u7684ct_ca9x4_init_cpu_map\uff08\uff09\u4f1a\u63a2\u6d4bSoC\u5185CPU\u6838\u7684\u4e2a\u6570\uff0c\u5e76\u901a\u8fc7set_cpu_possible\uff08\uff09\u8bbe\u7f6e\u8fd9\u4e9bCPU\u53ef\u89c1\u3002\\r\\n\\r\\n\u800csmp_operations\u7684\u6210\u5458\u51fd\u6570smp_prepare_cpus\uff08\uff09\uff0c\u5373vexpress_smp_prepare_cpus\uff08\uff09\u5219\u4f1a\u901a\u8fc7v2m_flags_set\uff08virt_to_phys\uff08versatile_secondary_startup\uff09\uff09\u8bbe\u7f6e\u5176\u4ed6CPU\u7684\u542f\u52a8\u5730\u5740\u4e3aversatile_secondary_startup\uff0c\u5982\u4ee3\u7801\u6e05\u535520.9\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.9\u3000\u5728smp_prepare_cpus\uff08\uff09\u4e2d\u8bbe\u7f6eCPU1...n\u7684\u542f\u52a8\u5730\u5740\\r\\n\\r\\n```\\r\\n 1static void __init vexpress_smp_prepare_cpus(unsigned int max_cpus)\\r\\n 2{\\r\\n 3        \u2026\\r\\n 4\\r\\n 5        /*\\r\\n 6         * Write the address of secondary startup into the\\r\\n 7         * system-wide flags register. The boot monitor waits\\r\\n 8         * until it receives a soft interrupt, and then the\\r\\n 9         * secondary CPU branches to this address.\\r\\n10         */\\r\\n11        v2m_flags_set(virt_to_phys(versatile_secondary_startup));\\r\\n12}\\r\\n```\\r\\n\\r\\n\u6ce8\u610f\u8fd9\u90e8\u5206\u7684\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u662f\u4e0eSoC\u76f8\u5173\u7684\uff0c\u7531\u82af\u7247\u7684\u8bbe\u8ba1\u4ee5\u53ca\u82af\u7247\u5185\u90e8\u7684Bootrom\u51b3\u5b9a\u3002\u5bf9\u4e8eVEXPRESS\u6765\u8bb2\uff0c\u8bbe\u7f6e\u65b9\u6cd5\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nvoid __init v2m_flags_set(u32 data)\\r\\n{\\r\\n        writel(~0, v2m_sysreg_base + V2M_SYS_FLAGSCLR);\\r\\n        writel(data, v2m_sysreg_base + V2M_SYS_FLAGSSET);\\r\\n}\\r\\n```\\r\\n\\r\\n\u5373\u586b\u5145v2m_sysreg_base+V2M_SYS_FLAGSCLR\u6807\u8bb0\u6e05\u9664\u5bc4\u5b58\u5668\u4e3a0xFFFFFFFF\uff0c\u5c06CPU1...n\u521d\u59cb\u542f\u52a8\u6267\u884c\u7684\u6307\u4ee4\u5730\u5740\u586b\u5165v2m_sysreg_base+V2M_SYS_FLAGSSET\u5bc4\u5b58\u5668\u3002\u8fd9\u4e24\u4e2a\u5730\u5740\u7531\u82af\u7247\u5b9e\u73b0\u65f6\u5185\u90e8\u7684Bootrom\u7a0b\u5e8f\u8bbe\u5b9a\u7684\u3002\u586b\u5165CPU1...n\u7684\u8d77\u59cb\u5730\u5740\u90fd\u901a\u8fc7virt_to_phys\uff08\uff09\u8f6c\u5316\u4e3a\u7269\u7406\u5730\u5740\uff0c\u56e0\u4e3a\u6b64\u65f6CPU1...n\u7684MMU\u5c1a\u672a\u5f00\u542f\u3002\\r\\n\\r\\n\u6bd4\u8f83\u5173\u952e\u7684\u662fsmp_operations\u7684\u6210\u5458\u51fd\u6570smp_boot_secondary\uff08\uff09\uff0c\u5bf9\u4e8e\u672c\u4f8b\u800c\u8a00\u4e3aversatile_boot_secondary\uff08\uff09\uff0c\u5b83\u5b8c\u6210CPU\u7684\u6700\u7ec8\u5524\u9192\u5de5\u4f5c\uff0c\u5982\u4ee3\u7801\u6e05\u535520.10\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.10\u3000CPU0\u901a\u8fc7\u4e2d\u65ad\u5524\u9192\u5176\u4ed6CPU\\r\\n\\r\\n```\\r\\n 1static void write_pen_release(int val)\\r\\n 2{\\r\\n 3pen_release = val;\\r\\n 4smp_wmb();\\r\\n 5sync_cache_w(&pen_release);\\r\\n 6}\\r\\n 7\\r\\n 8int versatile_boot_secondary(unsigned int cpu, struct task_struct *idle)\\r\\n 9{\\r\\n10unsigned long timeout;\\r\\n11...\\r\\n12/*\\r\\n13 * This is really belt and braces; we hold unintended secondary\\r\\n14 * CPUs in the holding pen until we\u2019re ready for them.  However,\\r\\n15 * since we haven\u2019t sent them a soft interrupt, they shouldn\u2019t\\r\\n16 * be there.\\r\\n17 */\\r\\n18write_pen_release(cpu_logical_map(cpu));\\r\\n19\\r\\n20/*\\r\\n21 * Send the secondary CPU a soft interrupt, thereby causing\\r\\n22 * the boot monitor to read the system wide flags register,\\r\\n23 * and branch to the address found there.\\r\\n24 */\\r\\n25arch_send_wakeup_ipi_mask(cpumask_of(cpu));\\r\\n26\\r\\n27timeout = jiffies + (1 * HZ);\\r\\n28while (time_before(jiffies, timeout)) {\\r\\n29        smp_rmb();\\r\\n30        if (pen_release == -1)\\r\\n31               break;\\r\\n32\\r\\n33        udelay(10);\\r\\n34}\\r\\n35...\\r\\n36return pen_release != -1   -ENOSYS : 0;\\r\\n37}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c18\u884c\u8c03\u7528\u7684write_pen_release\uff08\uff09\u4f1a\u5c06pen_release\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u8981\u5524\u9192\u7684CPU\u6838\u7684CPU\u53f7cpu_logical_map\uff08cpu\uff09\uff0c\u800c\u540e\u901a\u8fc7arch_send_wakeup_ipi_mask\uff08\uff09\u7ed9\u8981\u5524\u9192\u7684CPU\u53d1IPI\u4e2d\u65ad\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u88ab\u5524\u9192\u7684CPU\u4f1a\u9000\u51faWFI\u72b6\u6001\u5e76\u4ece\u524d\u9762smp_operations\u4e2d\u7684smp_prepare_cpus\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u5373vexpress_smp_prepare_cpus\uff08\uff09\u91cc\u901a\u8fc7v2m_flags_set\uff08\uff09\u8bbe\u7f6e\u7684\u8d77\u59cb\u5730\u5740versatile_secondary_startup\u5f00\u59cb\u6267\u884c\uff0c\u5982\u679c\u987a\u5229\u7684\u8bdd\uff0c\u8be5CPU\u4f1a\u5c06\u539f\u5148\u4e3a\u6b63\u6570\u7684pen_release\u5199\u4e3a-1\uff0c\u4ee5\u4fbfCPU0\u4ece\u7b49\u5f85pen_release\u6210\u4e3a-1\u7684\u5faa\u73af\uff08\u89c1\u7b2c28~34\u884c\uff09\u4e2d\u8df3\u51fa\u3002\\r\\n\\r\\nversatile_secondary_startup\u5b9e\u73b0\u4e8earch/arm/plat-versatile/headsmp.S\u4e2d\uff0c\u662f\u4e00\u6bb5\u6c47\u7f16\uff0c\u5982\u4ee3\u7801\u6e05\u535520.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.11\u3000\u88ab\u5524\u9192CPU\u7684\u6267\u884c\u5165\u53e3\\r\\n\\r\\n```\\r\\n 1ENTRY(versatile_secondary_startup)\\r\\n 2        mrc     p15, 0, r0, c0, c0, 5\\r\\n 3        and     r0, r0, #15\\r\\n 4        adr     r4, 1f\\r\\n 5        ldmia   r4, {r5, r6}\\r\\n 6        sub     r4, r4, r5\\r\\n 7        add     r6, r6, r4\\r\\n 8pen:    ldr     r7, [r6]\\r\\n 9        cmp     r7, r0\\r\\n10        bne     pen\\r\\n11\\r\\n12        /*\\r\\n13         * we\u2019ve been released from the holding pen: secondary_stack\\r\\n14         * should now contain the SVC stack for this core\\r\\n15         */\\r\\n16        b       secondary_startup\\r\\n17\\r\\n18        .align\\r\\n191:      .long   .\\r\\n20        .long   pen_release\\r\\n21ENDPROC(versatile_secondary_startup)\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c8~10\u884c\u7684\u5faa\u73af\u662f\u7b49\u5f85pen_release\u53d8\u91cf\u6210\u4e3aCPU0\u8bbe\u7f6e\u7684cpu_logical_map\uff08cpu\uff09\uff0c\u4e00\u822c\u76f4\u63a5\u5c31\u6210\u7acb\u4e86\u3002\u7b2c16\u884c\u5219\u8c03\u7528\u5185\u6838\u901a\u7528\u7684secondary_startup\uff08\uff09\u51fd\u6570\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u521d\u59cb\u5316\uff08\u5982MMU\u7b49\uff09\uff0c\u6700\u7ec8\u65b0\u7684\u88ab\u5524\u9192\u7684CPU\u5c06\u8c03\u7528smp_operations\u7684smp_secondary_init\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u5bf9\u4e8e\u672c\u4f8b\u4e3aversatile_secondary_init\uff08\uff09\uff0c\u5982\u4ee3\u7801\u6e05\u535520.12\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.12\u3000\u88ab\u5524\u9192\u7684CPU\u6062\u590dpen_release\uff08\uff09\\r\\n\\r\\n```\\r\\n 1void versatile_secondary_init(unsigned int cpu)\\r\\n 2{\\r\\n 3        /*\\r\\n 4         * let the primary processor know we\u2019re out of the\\r\\n 5         * pen, then head off into the C entry point\\r\\n 6         */\\r\\n 7        write_pen_release(-1);\\r\\n 8\\r\\n 9        /*\\r\\n10         * Synchronise with the boot thread.\\r\\n11         */\\r\\n12        spin_lock(&boot_lock);\\r\\n13        spin_unlock(&boot_lock);\\r\\n14}\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u4ee3\u7801\u7b2c7\u884c\u4f1a\u5c06pen_release\u5199\u4e3a-1\uff0c\u4e8e\u662fCPU0\u8fd8\u5728\u6267\u884c\u7684\u4ee3\u7801\u6e05\u535520.10\u91ccversatile_boot_secondary\uff08\uff09\u51fd\u6570\u4e2d\u7684\u5982\u4e0b\u5faa\u73af\u5c31\u9000\u51fa\u4e86\uff1a\\r\\n\\r\\n```\\r\\nwhile (time_before(jiffies, timeout)) {\\r\\n        smp_rmb();\\r\\n        if (pen_release == -1)\\r\\n                break;\\r\\n        udelay(10);\\r\\n}\\r\\n```\\r\\n\\r\\n\u8fd9\u6837CPU0\u5c31\u77e5\u9053\u76ee\u6807CPU\u5df2\u7ecf\u88ab\u6b63\u786e\u5730\u5524\u9192\uff0c\u6b64\u540eCPU0\u548c\u65b0\u5524\u9192\u7684\u5176\u4ed6CPU\u5404\u81ea\u8fd0\u884c\u3002\u6574\u4e2a\u7cfb\u7edf\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u8fdb\u884c\u5b9e\u65f6\u8fdb\u7a0b\u548c\u6b63\u5e38\u8fdb\u7a0b\u7684\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\u3002\\r\\n\\r\\n\u56fe20.7\u603b\u7ed3\u6027\u5730\u63cf\u8ff0\u4e86\u524d\u6587\u63d0\u5230\u7684vexpress_smp_prepare_cpus\uff08\uff09\u3001versatile_boot_secondary\uff08\uff09\u3001write_pen_release\uff08\uff09\u3001versatile_secondary_startup\uff08\uff09\u3001versatile_secondary_init\uff08\uff09\u8fd9\u4e9b\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u3002\\r\\n\\r\\n![1747234563927](./figure/1747234563927.png)\\r\\n\\r\\n\u56fe20.7\u3000CPU0\u5524\u9192\u5176\u4ed6CPU\u8fc7\u7a0b\\r\\n\\r\\nCPU\u70ed\u63d2\u62d4\u7684\u5b9e\u73b0\u4e5f\u662f\u4e0e\u82af\u7247\u76f8\u5173\u7684\uff0c\u5bf9\u4e8eVEXPRESS\u800c\u8a00\uff0c\u5b9e\u73b0\u4e86smp_operations\u7684cpu_die\uff08\uff09\u6210\u5458\u51fd\u6570\uff0c\u5373vexpress_cpu_die\uff08\uff09\u3002\u5b83\u4f1a\u5728\u8fdb\u884cCPUn\u7684\u62d4\u9664\u64cd\u4f5c\u65f6\u5c06CPUn\u6295\u5165\u4f4e\u529f\u8017\u7684WFI\u72b6\u6001\uff0c\u76f8\u5173\u4ee3\u7801\u4f4d\u4e8earch/arm/mach-vexpress/hotplug.c\u4e2d\uff0c\u5982\u4ee3\u7801\u6e05\u535520.13\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.13\u3000smp_operations\u7684cpu_die\uff08\uff09\u6210\u5458\u51fd\u6570\u6848\u4f8b\\r\\n\\r\\n```\\r\\n 1void __ref vexpress_cpu_die(unsigned int cpu)\\r\\n 2{\\r\\n 3        int spurious = 0;\\r\\n 4\\r\\n 5        /*\\r\\n 6         * we\u2019re ready for shutdown now, so do it\\r\\n 7         */\\r\\n 8        cpu_enter_lowpower();\\r\\n 9        platform_do_lowpower(cpu, &spurious);\\r\\n10\\r\\n11        /*\\r\\n12         * bring this CPU back into the world of cache\\r\\n13         * coherency, and then restore interrupts\\r\\n14         */\\r\\n15        cpu_leave_lowpower();\\r\\n16\\r\\n17        if (spurious)\\r\\n18                pr_warn(\\"CPU%u: %u spurious wakeup calls\\\\n\\", cpu, spurious);\\r\\n19}\\r\\n20static inline void platform_do_lowpower(unsigned int cpu, int *spurious)\\r\\n21{\\r\\n22        /*\\r\\n23         * there is no power-control hardware on this platform, so all\\r\\n24         * we can do is put the core into WFI; this is safe as the calling\\r\\n25         * code will have already disabled interrupts\\r\\n26         */\\r\\n27        for (;;) {\\r\\n28                wfi();\\r\\n29\\r\\n30                if (pen_release == cpu_logical_map(cpu)) {\\r\\n31                        /*\\r\\n32                         * OK, proper wakeup, we\'re done\\r\\n33                         */\\r\\n34                        break;\\r\\n35                }\\r\\n36\\r\\n37                /*\\r\\n38                 * Getting here, means that we have come out of WFI without\\r\\n39                 * having been woken up - this shouldn\u2019t happen\\r\\n40                 *\\r\\n41                 * Just note it happening - when we\u2019re woken, we can report\\r\\n42                 * its occurrence.\\r\\n43                 */\\r\\n44                (*spurious)++;\\r\\n45        }\\r\\n46}\\r\\n```\\r\\n\\r\\nCPUn\u7761\u7720\u4e8ewfi\uff08\uff09\uff0c\u4e4b\u540e\u518d\u6b21\u5728\u7ebf\u7684\u65f6\u5019\uff0c\u53c8\u4f1a\u56e0\u4e3aCPU0\u7ed9\u5b83\u53d1\u51fa\u7684IPI\u800c\u4ecewfi\uff08\uff09\u51fd\u6570\u8fd4\u56de\u7ee7\u7eed\u6267\u884c\uff0c\u9192\u6765\u65f6CPUn\u4e5f\u5224\u65ad\u201cpen_release==cpu_logical_map\uff08cpu\uff09\u201d\u662f\u5426\u6210\u7acb\uff0c\u4ee5\u786e\u5b9a\u8be5\u6b21\u9192\u6765\u786e\u5b9e\u662f\u7531CPU0\u5524\u9192\u7684\u4e00\u6b21\u6b63\u5e38\u9192\u6765\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.2\u3000\u8f6e\u8be2\u64cd\u4f5c","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.2\u3000\u8f6e\u8be2\u64cd\u4f5c","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.2\u3000\u8f6e\u8be2\u64cd\u4f5c.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.2\u3000\u8f6e\u8be2\u64cd\u4f5c.md","title":"8.2.1\u3000\u8f6e\u8be2\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528","description":"\u5728\u7528\u6237\u7a0b\u5e8f\u4e2d\uff0cselect\uff08\uff09\u548cpoll\uff08\uff09\u4e5f\u662f\u4e0e\u8bbe\u5907\u963b\u585e\u4e0e\u975e\u963b\u585e\u8bbf\u95ee\u606f\u606f\u76f8\u5173\u7684\u8bba\u9898\u3002\u4f7f\u7528\u975e\u963b\u585eI/O\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u4f1a\u4f7f\u7528select\uff08\uff09\u548cpoll\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u67e5\u8be2\u662f\u5426\u53ef\u5bf9\u8bbe\u5907\u8fdb\u884c\u65e0\u963b\u585e\u7684\u8bbf\u95ee\u3002select\uff08\uff09\u548cpoll\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u6700\u7ec8\u4f1a\u4f7f\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684poll\uff08\uff09\u51fd\u6570\u88ab\u6267\u884c\uff0c\u5728Linux2.5.45\u5185\u6838\u4e2d\u8fd8\u5f15\u5165\u4e86epoll\uff08\uff09\uff0c\u5373\u6269\u5c55\u7684poll\uff08\uff09\u3002","date":"2025-09-15T14:44:14.181Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":9.655,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.4\u3000SMP\u591a\u6838\u542f\u52a8\u4ee5\u53caCPU\u70ed\u63d2\u62d4\u9a71\u52a8"},"nextItem":{"title":"10.6.1\u3000\u77ed\u5ef6\u8fdf","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.6\u3000\u5185\u6838\u5ef6\u65f6"}},"content":"\u5728\u7528\u6237\u7a0b\u5e8f\u4e2d\uff0cselect\uff08\uff09\u548cpoll\uff08\uff09\u4e5f\u662f\u4e0e\u8bbe\u5907\u963b\u585e\u4e0e\u975e\u963b\u585e\u8bbf\u95ee\u606f\u606f\u76f8\u5173\u7684\u8bba\u9898\u3002\u4f7f\u7528\u975e\u963b\u585eI/O\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u4f1a\u4f7f\u7528select\uff08\uff09\u548cpoll\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u67e5\u8be2\u662f\u5426\u53ef\u5bf9\u8bbe\u5907\u8fdb\u884c\u65e0\u963b\u585e\u7684\u8bbf\u95ee\u3002select\uff08\uff09\u548cpoll\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u6700\u7ec8\u4f1a\u4f7f\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684poll\uff08\uff09\u51fd\u6570\u88ab\u6267\u884c\uff0c\u5728Linux2.5.45\u5185\u6838\u4e2d\u8fd8\u5f15\u5165\u4e86epoll\uff08\uff09\uff0c\u5373\u6269\u5c55\u7684poll\uff08\uff09\u3002\\r\\n\\r\\nselect\uff08\uff09\u548cpoll\uff08\uff09\u7cfb\u7edf\u8c03\u7528\u7684\u672c\u8d28\u4e00\u6837\uff0c\u524d\u8005\u5728BSD UNIX\u4e2d\u5f15\u5165\uff0c\u540e\u8005\u5728System V\u4e2d\u5f15\u5165\u3002\\r\\n\\r\\n## 8.2.2\u3000\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u8f6e\u8be2\u7f16\u7a0b\\r\\n\\r\\n\u5e94\u7528\u7a0b\u5e8f\u4e2d\u6700\u5e7f\u6cdb\u7528\u5230\u7684\u662fBSD UNIX\u4e2d\u5f15\u5165\u7684select\uff08\uff09\u7cfb\u7edf\u8c03\u7528\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint select(int numfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds,\\r\\n    struct timeval *timeout);\\r\\n```\\r\\n\\r\\n\u5176\u4e2dreadfds\u3001writefds\u3001exceptfds\u5206\u522b\u662f\u88abselect\uff08\uff09\u76d1\u89c6\u7684\u8bfb\u3001\u5199\u548c\u5f02\u5e38\u5904\u7406\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\uff0cnumfds\u7684\u503c\u662f\u9700\u8981\u68c0\u67e5\u7684\u53f7\u7801\u6700\u9ad8\u7684fd\u52a01\u3002readfds\u6587\u4ef6\u96c6\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6587\u4ef6\u53d8\u5f97\u53ef\u8bfb\uff0cselect\uff08\uff09\u8fd4\u56de\uff1b\u540c\u7406\uff0cwritefds\u6587\u4ef6\u96c6\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6587\u4ef6\u53d8\u5f97\u53ef\u5199\uff0cselect\u4e5f\u8fd4\u56de\u3002\\r\\n\\r\\n\u5982\u56fe8.3\u6240\u793a\uff0c\u7b2c\u4e00\u6b21\u5bf9n\u4e2a\u6587\u4ef6\u8fdb\u884cselect\uff08\uff09\u7684\u65f6\u5019\uff0c\u82e5\u4efb\u4f55\u4e00\u4e2a\u6587\u4ef6\u6ee1\u8db3\u8981\u6c42\uff0cselect\uff08\uff09\u5c31\u76f4\u63a5\u8fd4\u56de\uff1b\u7b2c2\u6b21\u518d\u8fdb\u884cselect\uff08\uff09\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u6587\u4ef6\u6ee1\u8db3\u8bfb\u5199\u8981\u6c42\uff0cselect\uff08\uff09\u7684\u8fdb\u7a0b\u963b\u585e\u4e14\u7761\u7720\u3002\u7531\u4e8e\u8c03\u7528select\uff08\uff09\u7684\u65f6\u5019\uff0c\u6bcf\u4e2a\u9a71\u52a8\u7684poll\uff08\uff09\u63a5\u53e3\u90fd\u4f1a\u88ab\u8c03\u7528\u5230\uff0c\u5b9e\u9645\u4e0a\u6267\u884cselect\uff08\uff09\u7684\u8fdb\u7a0b\u88ab\u6302\u5230\u4e86\u6bcf\u4e2a\u9a71\u52a8\u7684\u7b49\u5f85\u961f\u5217\u4e0a\uff0c\u53ef\u4ee5\u88ab\u4efb\u4f55\u4e00\u4e2a\u9a71\u52a8\u5524\u9192\u3002\u5982\u679cFDn\u53d8\u5f97\u53ef\u8bfb\u5199\uff0cselect\uff08\uff09\u8fd4\u56de\u3002\\r\\n\\r\\n![image-20250329105541292](./figure/image-20250329105541292.png)\\r\\n\\r\\n\u56fe8.3\u3000\u591a\u8def\u590d\u7528select\uff08\uff09\\r\\n\\r\\ntimeout\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411struct timeval\u7c7b\u578b\u7684\u6307\u9488\uff0c\u5b83\u53ef\u4ee5\u4f7fselect\uff08\uff09\u5728\u7b49\u5f85timeout\u65f6\u95f4\u540e\u82e5\u4ecd\u7136\u6ca1\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u51c6\u5907\u597d\u5219\u8d85\u65f6\u8fd4\u56de\u3002struct timeval\u6570\u636e\u7ed3\u6784\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u53558.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.7\u3000timeval\u7ed3\u6784\u4f53\u5b9a\u4e49\\r\\n\\r\\n```\\r\\n 1struct timeval  {\\r\\n 2   int tv_sec;     /* \u79d2*/\\r\\n 3   int tv_usec;    /* \u5fae\u79d2 */\\r\\n 4};\\r\\n```\\r\\n\\r\\n\u4e0b\u5217\u64cd\u4f5c\u7528\u6765\u8bbe\u7f6e\u3001\u6e05\u9664\u3001\u5224\u65ad\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\uff1a\\r\\n\\r\\n```\\r\\nFD_ZERO(fd_set *set)\\r\\n```\\r\\n\\r\\n\u6e05\u9664\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\uff1b\\r\\n\\r\\n```\\r\\nFD_SET(int fd,fd_set *set)\\r\\n```\\r\\n\\r\\n\u5c06\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u52a0\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u4e2d\uff1b\\r\\n\\r\\n```\\r\\nFD_CLR(int fd,fd_set *set)\\r\\n```\\r\\n\\r\\n\u5c06\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u4e2d\u6e05\u9664\uff1b\\r\\n\\r\\n```\\r\\nFD_ISSET(int fd,fd_set *set)\\r\\n```\\r\\n\\r\\n\u5224\u65ad\u6587\u4ef6\u63cf\u8ff0\u7b26\u662f\u5426\u88ab\u7f6e\u4f4d\u3002\\r\\n\\r\\npoll\uff08\uff09\u7684\u529f\u80fd\u548c\u5b9e\u73b0\u539f\u7406\u4e0eselect\uff08\uff09\u76f8\u4f3c\uff0c\u5176\u51fd\u6570\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint poll(struct pollfd *fds, nfds_t nfds, int timeout);\\r\\n```\\r\\n\\r\\n\u5f53\u591a\u8def\u590d\u7528\u7684\u6587\u4ef6\u6570\u91cf\u5e9e\u5927\u3001I/O\u6d41\u91cf\u9891\u7e41\u7684\u65f6\u5019\uff0c\u4e00\u822c\u4e0d\u592a\u9002\u5408\u4f7f\u7528select\uff08\uff09\u548cpoll\uff08\uff09\uff0c\u6b64\u79cd\u60c5\u51b5\u4e0b\uff0cselect\uff08\uff09\u548cpoll\uff08\uff09\u7684\u6027\u80fd\u8868\u73b0\u8f83\u5dee\uff0c\u6211\u4eec\u5b9c\u4f7f\u7528epoll\u3002epoll\u7684\u6700\u5927\u597d\u5904\u662f\u4e0d\u4f1a\u968f\u7740fd\u7684\u6570\u76ee\u589e\u957f\u800c\u964d\u4f4e\u6548\u7387\uff0cselect\uff08\uff09\u5219\u4f1a\u968f\u7740fd\u7684\u6570\u91cf\u589e\u5927\u6027\u80fd\u4e0b\u964d\u660e\u663e\u3002\\r\\n\\r\\n\u4e0eepoll\u76f8\u5173\u7684\u7528\u6237\u7a7a\u95f4\u7f16\u7a0b\u63a5\u53e3\u5305\u62ec\\r\\n\\r\\n```\\r\\nint epoll_create(int size);\\r\\n```\\r\\n\\r\\n\u521b\u5efa\u4e00\u4e2aepoll\u7684\u53e5\u67c4\uff0csize\u7528\u6765\u544a\u8bc9\u5185\u6838\u8981\u76d1\u542c\u591a\u5c11\u4e2afd\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u521b\u5efa\u597depoll\u53e5\u67c4\u540e\uff0c\u5b83\u672c\u8eab\u4e5f\u4f1a\u5360\u7528\u4e00\u4e2afd\u503c\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u5b8cepoll\u540e\uff0c\u5fc5\u987b\u8c03\u7528close\uff08\uff09\u5173\u95ed\u3002\\r\\n\\r\\n```\\r\\nint epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);\\r\\n```\\r\\n\\r\\n\u544a\u8bc9\u5185\u6838\u8981\u76d1\u542c\u4ec0\u4e48\u7c7b\u578b\u7684\u4e8b\u4ef6\u3002\\r\\n\\r\\n\u7b2c1\u4e2a\u53c2\u6570\u662fepoll_create\uff08\uff09\u7684\u8fd4\u56de\u503c\uff0c\\r\\n\\r\\n\u7b2c2\u4e2a\u53c2\u6570\u8868\u793a\u52a8\u4f5c\uff0c\u5305\u542b\uff1a\\r\\n\\r\\n- EPOLL_CTL_ADD\uff1a\u6ce8\u518c\u65b0\u7684fd\u5230epfd\u4e2d\u3002\\r\\n- EPOLL_CTL_MOD\uff1a\u4fee\u6539\u5df2\u7ecf\u6ce8\u518c\u7684fd\u7684\u76d1\u542c\u4e8b\u4ef6\u3002\\r\\n- EPOLL_CTL_DEL\uff1a\u4eceepfd\u4e2d\u5220\u9664\u4e00\u4e2afd\u3002\\r\\n\\r\\n\u7b2c3\u4e2a\u53c2\u6570\u662f\u9700\u8981\u76d1\u542c\u7684fd\uff0c\\r\\n\\r\\n\u7b2c4\u4e2a\u53c2\u6570\u662f\u544a\u8bc9\u5185\u6838\u9700\u8981\u76d1\u542c\u7684\u4e8b\u4ef6\u7c7b\u578b\uff0cstruct epoll_event\u7ed3\u6784\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nstruct epoll_event {\\r\\n  __uint32_t events;  /* Epoll events */\\r\\n  epoll_data_t data;  /* User data variable */\\r\\n};\\r\\n```\\r\\n\\r\\nevents\u53ef\u4ee5\u662f\u4ee5\u4e0b\u51e0\u4e2a\u5b8f\u7684\u201c\u6216\u201d\uff1a\\r\\n\\r\\n- EPOLLIN\uff1a\u8868\u793a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u8bfb\u3002\\r\\n- EPOLLOUT\uff1a\u8868\u793a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u5199\u3002\\r\\n- EPOLLPRI\uff1a\u8868\u793a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6709\u7d27\u6025\u7684\u6570\u636e\u53ef\u8bfb\uff08\u8fd9\u91cc\u5e94\u8be5\u8868\u793a\u7684\u662f\u6709socket\u5e26\u5916\u6570\u636e\u5230\u6765\uff09\u3002\\r\\n- EPOLLERR\uff1a\u8868\u793a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u53d1\u751f\u9519\u8bef\u3002\\r\\n- EPOLLHUP\uff1a\u8868\u793a\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u6302\u65ad\u3002\\r\\n- EPOLLET\uff1a\u5c06epoll\u8bbe\u4e3a\u8fb9\u7f18\u89e6\u53d1\uff08Edge Triggered\uff09\u6a21\u5f0f\uff0c\u8fd9\u662f\u76f8\u5bf9\u4e8e\u6c34\u5e73\u89e6\u53d1\uff08Level Triggered\uff09\u6765\u8bf4\u7684\u3002LT\uff08Level Triggered\uff09\u662f\u7f3a\u7701\u7684\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5728LT\u60c5\u51b5\u4e0b\uff0c\u5185\u6838\u544a\u8bc9\u7528\u6237\u4e00\u4e2afd\u662f\u5426\u5c31\u7eea\u4e86\uff0c\u4e4b\u540e\u7528\u6237\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5c31\u7eea\u7684fd\u8fdb\u884cI/O\u64cd\u4f5c\u3002\u4f46\u662f\u5982\u679c\u7528\u6237\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u8be5\u4e8b\u4ef6\u5e76\u4e0d\u4f1a\u4e22\u5931\uff0c\u800cET\uff08Edge-Triggered\uff09\u662f\u9ad8\u901f\u5de5\u4f5c\u65b9\u5f0f\uff0c\u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u5f53fd\u4ece\u672a\u5c31\u7eea\u53d8\u4e3a\u5c31\u7eea\u65f6\uff0c\u5185\u6838\u901a\u8fc7epoll\u544a\u8bc9\u7528\u6237\uff0c\u7136\u540e\u5b83\u4f1a\u5047\u8bbe\u7528\u6237\u77e5\u9053fd\u5df2\u7ecf\u5c31\u7eea\uff0c\u5e76\u4e14\u4e0d\u4f1a\u518d\u4e3a\u90a3\u4e2afd\u53d1\u9001\u66f4\u591a\u7684\u5c31\u7eea\u901a\u77e5\u3002\\r\\n- EPOLLONESHOT\uff1a\u610f\u5473\u7740\u4e00\u6b21\u6027\u76d1\u542c\uff0c\u5f53\u76d1\u542c\u5b8c\u8fd9\u6b21\u4e8b\u4ef6\u4e4b\u540e\uff0c\u5982\u679c\u8fd8\u9700\u8981\u7ee7\u7eed\u76d1\u542c\u8fd9\u4e2afd\u7684\u8bdd\uff0c\u9700\u8981\u518d\u6b21\u628a\u8fd9\u4e2afd\u52a0\u5165\u5230epoll\u961f\u5217\u91cc\u3002\\r\\n\\r\\n```\\r\\nint epoll_wait(int epfd, struct epoll_event * events, int maxevents, int timeout);\\r\\n```\\r\\n\\r\\n\u7b49\u5f85\u4e8b\u4ef6\u7684\u4ea7\u751f\uff0c\u5176\u4e2devents\u53c2\u6570\u662f\u8f93\u51fa\u53c2\u6570\uff0c\u7528\u6765\u4ece\u5185\u6838\u5f97\u5230\u4e8b\u4ef6\u7684\u96c6\u5408\uff0cmaxevents\u544a\u8bc9\u5185\u6838\u672c\u6b21\u6700\u591a\u6536\u591a\u5c11\u4e8b\u4ef6\uff0cmaxevents\u7684\u503c\u4e0d\u80fd\u5927\u4e8e\u521b\u5efaepoll_create\uff08\uff09\u65f6\u7684size\uff0c\u53c2\u6570timeout\u662f\u8d85\u65f6\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c0\u610f\u5473\u7740\u7acb\u5373\u8fd4\u56de\uff0c-1\u610f\u5473\u7740\u6c38\u4e45\u7b49\u5f85\uff09\u3002\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u9700\u8981\u5904\u7406\u7684\u4e8b\u4ef6\u6570\u76ee\uff0c\u5982\u8fd4\u56de0\uff0c\u5219\u8868\u793a\u5df2\u8d85\u65f6\u3002\\r\\n\\r\\n\u4f4d\u4e8ehttps://www.kernel.org/doc/ols/2004/ols2004v1-pages-215-226.pdf \u7684\u6587\u6863\u300aComparing and Evaluating epoll\uff0cselect\uff0cand poll Event Mechanisms\u300b\u5bf9\u6bd4\u4e86select\u3001epoll\u3001poll\u4e4b\u95f4\u7684\u4e00\u4e9b\u6027\u80fd\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5f53\u6d89\u53ca\u7684fd\u6570\u91cf\u8f83\u5c11\u7684\u65f6\u5019\uff0c\u4f7f\u7528select\u662f\u5408\u9002\u7684\uff1b\u5982\u679c\u6d89\u53ca\u7684fd\u5f88\u591a\uff0c\u5982\u5728\u5927\u89c4\u6a21\u5e76\u53d1\u7684\u670d\u52a1\u5668\u4e2d\u4fa6\u542c\u8bb8\u591asocket\u7684\u65f6\u5019\uff0c\u5219\u4e0d\u592a\u9002\u5408\u9009\u7528select\uff0c\u800c\u9002\u5408\u9009\u7528epoll\u3002\\r\\n\\r\\n# 8.2.3\u3000\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684\u8f6e\u8be2\u7f16\u7a0b\\r\\n\\r\\n\u8bbe\u5907\u9a71\u52a8\u4e2dpoll\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u662f\uff1a\\r\\n\\r\\n```\\r\\nunsigned int(*poll)(struct file * filp, struct poll_table* wait);\\r\\n```\\r\\n\\r\\n\u7b2c1\u4e2a\u53c2\u6570\u4e3afile\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u7b2c2\u4e2a\u53c2\u6570\u4e3a\u8f6e\u8be2\u8868\u6307\u9488\u3002\u8fd9\u4e2a\u51fd\u6570\u5e94\u8be5\u8fdb\u884c\u4e24\u9879\u5de5\u4f5c\u3002\\r\\n\\r\\n1\uff09\u5bf9\u53ef\u80fd\u5f15\u8d77\u8bbe\u5907\u6587\u4ef6\u72b6\u6001\u53d8\u5316\u7684\u7b49\u5f85\u961f\u5217\u8c03\u7528poll_wait\uff08\uff09\u51fd\u6570\uff0c\u5c06\u5bf9\u5e94\u7684\u7b49\u5f85\u961f\u5217\u5934\u90e8\u6dfb\u52a0\u5230poll_table\u4e2d\u3002\\r\\n\\r\\n2\uff09\u8fd4\u56de\u8868\u793a\u662f\u5426\u80fd\u5bf9\u8bbe\u5907\u8fdb\u884c\u65e0\u963b\u585e\u8bfb\u3001\u5199\u8bbf\u95ee\u7684\u63a9\u7801\u3002\\r\\n\\r\\n\u7528\u4e8e\u5411poll_table\u6ce8\u518c\u7b49\u5f85\u961f\u5217\u7684\u5173\u952epoll_wait\uff08\uff09\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nvoid poll_wait(struct file *filp, wait_queue_heat_t *queue, poll_table * wait);\\r\\n```\\r\\n\\r\\npoll_wait\uff08\uff09\u51fd\u6570\u7684\u540d\u79f0\u975e\u5e38\u5bb9\u6613\u8ba9\u4eba\u4ea7\u751f\u8bef\u4f1a\uff0c\u4ee5\u4e3a\u5b83\u548cwait_event\uff08\uff09\u7b49\u4e00\u6837\uff0c\u4f1a\u963b\u585e\u5730\u7b49\u5f85\u67d0\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u5176\u5b9e\u8fd9\u4e2a\u51fd\u6570\u5e76\u4e0d\u4f1a\u5f15\u8d77\u963b\u585e\u3002poll_wait\uff08\uff09\u51fd\u6570\u6240\u505a\u7684\u5de5\u4f5c\u662f\u628a\u5f53\u524d\u8fdb\u7a0b\u6dfb\u52a0\u5230wait\u53c2\u6570\u6307\u5b9a\u7684\u7b49\u5f85\u5217\u8868\uff08poll_table\uff09\u4e2d\uff0c\u5b9e\u9645\u4f5c\u7528\u662f\u8ba9\u5524\u9192\u53c2\u6570queue\u5bf9\u5e94\u7684\u7b49\u5f85\u961f\u5217\u53ef\u4ee5\u5524\u9192\u56e0select\uff08\uff09\u800c\u7761\u7720\u7684\u8fdb\u7a0b\u3002\\r\\n\\r\\n\u9a71\u52a8\u7a0b\u5e8fpoll\uff08\uff09\u51fd\u6570\u5e94\u8be5\u8fd4\u56de\u8bbe\u5907\u8d44\u6e90\u7684\u53ef\u83b7\u53d6\u72b6\u6001\uff0c\u5373POLLIN\u3001POLLOUT\u3001POLLPRI\u3001POLLERR\u3001POLLNVAL\u7b49\u5b8f\u7684\u4f4d\u201c\u6216\u201d\u7ed3\u679c\u3002\u6bcf\u4e2a\u5b8f\u7684\u542b\u4e49\u90fd\u8868\u660e\u8bbe\u5907\u7684\u4e00\u79cd\u72b6\u6001\uff0c\u5982POLLIN\uff08\u5b9a\u4e49\u4e3a0x0001\uff09\u610f\u5473\u7740\u8bbe\u5907\u53ef\u4ee5\u65e0\u963b\u585e\u5730\u8bfb\uff0cPOLLOUT\uff08\u5b9a\u4e49\u4e3a0x0004\uff09\u610f\u5473\u7740\u8bbe\u5907\u53ef\u4ee5\u65e0\u963b\u585e\u5730\u5199\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53558.8\u3000poll\uff08\uff09\u51fd\u6570\u5178\u578b\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1 static unsigned int xxx_poll(struct file *filp, poll_table *wait)\\r\\n 2 {\\r\\n 3  unsigned int mask = 0;\\r\\n 4  struct xxx_dev *dev = filp->private_data;      /* \u83b7\u5f97\u8bbe\u5907\u7ed3\u6784\u4f53\u6307\u9488*/\\r\\n 5\\r\\n 6  ...\\r\\n 7  poll_wait(filp, &dev->r_wait, wait);           /* \u52a0\u5165\u8bfb\u7b49\u5f85\u961f\u5217 */\\r\\n 8  poll_wait(filp, &dev->w_wait, wait);           /* \u52a0\u5165\u5199\u7b49\u5f85\u961f\u5217*/\\r\\n 9\\r\\n10  if (...)                                       /* \u53ef\u8bfb*/\\r\\n11      mask |= POLLIN | POLLRDNORM;               /* \u6807\u793a\u6570\u636e\u53ef\u83b7\u5f97\uff08\u5bf9\u7528\u6237\u53ef\u8bfb\uff09*/\\r\\n12\\r\\n13  if (...)                                       /* \u53ef\u5199 */\\r\\n14      mask |= POLLOUT | POLLWRNORM;              /* \u6807\u793a\u6570\u636e\u53ef\u5199\u5165*/\\r\\n15  ...\\r\\n16  return mask;\\r\\n17}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.6\u3000\u5185\u6838\u5ef6\u65f6","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.6\u3000\u5185\u6838\u5ef6\u65f6","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.6\u3000\u5185\u6838\u5ef6\u65f6.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.6\u3000\u5185\u6838\u5ef6\u65f6.md","title":"10.6.1\u3000\u77ed\u5ef6\u8fdf","description":"Linux\u5185\u6838\u4e2d\u63d0\u4f9b\u4e86\u4e0b\u52173\u4e2a\u51fd\u6570\u4ee5\u5206\u522b\u8fdb\u884c\u7eb3\u79d2\u3001\u5fae\u79d2\u548c\u6beb\u79d2\u5ef6\u8fdf\uff1a","date":"2025-09-15T14:44:14.165Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.865,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"8.2.1\u3000\u8f6e\u8be2\u7684\u6982\u5ff5\u4e0e\u4f5c\u7528","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/8.2\u3000\u8f6e\u8be2\u64cd\u4f5c"},"nextItem":{"title":"5.2.1\u3000Linux\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.2\u3000Linux\u6587\u4ef6\u7cfb\u7edf"}},"content":"Linux\u5185\u6838\u4e2d\u63d0\u4f9b\u4e86\u4e0b\u52173\u4e2a\u51fd\u6570\u4ee5\u5206\u522b\u8fdb\u884c\u7eb3\u79d2\u3001\u5fae\u79d2\u548c\u6beb\u79d2\u5ef6\u8fdf\uff1a\\r\\n\\r\\n```\\r\\nvoid ndelay(unsigned long nsecs);\\r\\nvoid udelay(unsigned long usecs);\\r\\nvoid mdelay(unsigned long msecs);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u5ef6\u8fdf\u7684\u5b9e\u73b0\u539f\u7406\u672c\u8d28\u4e0a\u662f\u5fd9\u7b49\u5f85\uff0c\u5b83\u6839\u636eCPU\u9891\u7387\u8fdb\u884c\u4e00\u5b9a\u6b21\u6570\u7684\u5faa\u73af\u3002\u6709\u65f6\u5019\uff0c\u4eba\u4eec\u5728\u8f6f\u4ef6\u4e2d\u8fdb\u884c\u4e0b\u9762\u7684\u5ef6\u8fdf\uff1a\\r\\n\\r\\n```\\r\\nvoid delay(unsigned int time)\\r\\n{\\r\\n    while(time--);\\r\\n}\\r\\n```\\r\\n\\r\\nndelay\uff08\uff09\u3001udelay\uff08\uff09\u548cmdelay\uff08\uff09\u51fd\u6570\u7684\u5b9e\u73b0\u65b9\u5f0f\u539f\u7406\u4e0e\u6b64\u7c7b\u4f3c\u3002\u5185\u6838\u5728\u542f\u52a8\u65f6\uff0c\u4f1a\u8fd0\u884c\u4e00\u4e2a\u5ef6\u8fdf\u5faa\u73af\u6821\u51c6\uff08Delay Loop Calibration\uff09\uff0c\u8ba1\u7b97\u51falpj\uff08Loops Per Jiffy\uff09\uff0c\u5185\u6838\u542f\u52a8\u65f6\u4f1a\u6253\u5370\u5982\u4e0b\u7c7b\u4f3c\u4fe1\u606f\uff1a\\r\\n\\r\\n```\\r\\nCalibrating delay loop... 530.84 BogoMIPS (lpj=1327104)\\r\\n```\\r\\n\\r\\n\u5982\u679c\u6211\u4eec\u76f4\u63a5\u5728bootloader\u4f20\u9012\u7ed9\u5185\u6838\u7684bootargs\u4e2d\u8bbe\u7f6elpj=1327104\uff0c\u5219\u53ef\u4ee5\u7701\u6389\u8fd9\u4e2a\u6821\u51c6\u7684\u8fc7\u7a0b\uff0c\u8282\u7701\u7ea6\u767e\u6beb\u79d2\u7ea7\u7684\u5f00\u673a\u65f6\u95f4\u3002\\r\\n\\r\\n\u6beb\u79d2\u65f6\u5ef6\uff08\u4ee5\u53ca\u66f4\u5927\u7684\u79d2\u65f6\u5ef6\uff09\u5df2\u7ecf\u6bd4\u8f83\u5927\u4e86\uff0c\u5728\u5185\u6838\u4e2d\uff0c\u6700\u597d\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528mdelay\uff08\uff09\u51fd\u6570\uff0c\u8fd9\u5c06\u8017\u8d39CPU\u8d44\u6e90\uff0c\u5bf9\u4e8e\u6beb\u79d2\u7ea7\u4ee5\u4e0a\u7684\u65f6\u5ef6\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u4e0b\u8ff0\u51fd\u6570\uff1a\\r\\n\\r\\n```\\r\\nvoid msleep(unsigned int millisecs);\\r\\nunsigned long msleep_interruptible(unsigned int millisecs);\\r\\nvoid ssleep(unsigned int seconds);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u5c06\u4f7f\u5f97\u8c03\u7528\u5b83\u7684\u8fdb\u7a0b\u7761\u7720\u53c2\u6570\u6307\u5b9a\u7684\u65f6\u95f4\u4e3amillisecs\uff0cmsleep\uff08\uff09\u3001ssleep\uff08\uff09\u4e0d\u80fd\u88ab\u6253\u65ad\uff0c\u800cmsleep_interruptible\uff08\uff09\u5219\u53ef\u4ee5\u88ab\u6253\u65ad\u3002\\r\\n\\r\\n\u53d7\u7cfb\u7edfHz\u4ee5\u53ca\u8fdb\u7a0b\u8c03\u5ea6\u7684\u5f71\u54cd\uff0cmsleep\uff08\uff09\u7c7b\u4f3c\u51fd\u6570\u7684\u7cbe\u5ea6\u662f\u6709\u9650\u7684\u3002\\r\\n\\r\\n# 10.6.2\u3000\u957f\u5ef6\u8fdf\\r\\n\\r\\n\u5728\u5185\u6838\u4e2d\u8fdb\u884c\u5ef6\u8fdf\u7684\u4e00\u4e2a\u5f88\u76f4\u89c2\u7684\u65b9\u6cd5\u662f\u6bd4\u8f83\u5f53\u524d\u7684jiffies\u548c\u76ee\u6807jiffies\uff08\u8bbe\u7f6e\u4e3a\u5f53\u524djiffies\u52a0\u4e0a\u65f6\u95f4\u95f4\u9694\u7684jiffies\uff09\uff0c\u76f4\u5230\u672a\u6765\u7684jiffies\u8fbe\u5230\u76ee\u6807jiffies\u3002\u4ee3\u7801\u6e05\u535510.15\u7ed9\u51fa\u4e86\u4f7f\u7528\u5fd9\u7b49\u5f85\u5148\u5ef6\u8fdf100\u4e2ajiffies\u518d\u5ef6\u8fdf2s\u7684\u5b9e\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.15\u3000\u5fd9\u7b49\u5f85\u65f6\u5ef6\u5b9e\u4f8b\\r\\n\\r\\n```\\r\\n1/* \u5ef6\u8fdf100\u4e2ajiffies */\\r\\n2unsigned long delay = jiffies + 100;\\r\\n3while(time_before(jiffies, delay));\\r\\n4\\r\\n5/* \u518d\u5ef6\u8fdf2s */\\r\\n6unsigned long delay = jiffies + 2*Hz;\\r\\n7while(time_before(jiffies, delay));\\r\\n```\\r\\n\\r\\n\u4e0etime_before\uff08\uff09\u5bf9\u5e94\u7684\u8fd8\u6709\u4e00\u4e2atime_after\uff08\uff09\uff0c\u5b83\u4eec\u5728\u5185\u6838\u4e2d\u5b9a\u4e49\u4e3a\uff08\u5b9e\u9645\u4e0a\u53ea\u662f\u5c06\u4f20\u5165\u7684\u672a\u6765\u65f6\u95f4jiffies\u548c\u88ab\u8c03\u7528\u65f6\u7684jiffies\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u6bd4\u8f83\uff09\uff1a\\r\\n\\r\\n```\\r\\n#define time_after(a,b)        \\\\\\r\\n    (typecheck(unsigned long, a) && \\\\\\r\\n     typecheck(unsigned long, b) && \\\\\\r\\n     ((long)(b) - (long)(a) < 0))\\r\\n#define time_before(a,b)    time_after(b,a)\\r\\n```\\r\\n\\r\\n\u4e3a\u4e86\u9632\u6b62\u5728time_before\uff08\uff09\u548ctime_after\uff08\uff09\u7684\u6bd4\u8f83\u8fc7\u7a0b\u4e2d\u7f16\u8bd1\u5668\u5bf9jiffies\u7684\u4f18\u5316\uff0c\u5185\u6838\u5c06\u5176\u5b9a\u4e49\u4e3avolatile\u53d8\u91cf\uff0c\u8fd9\u5c06\u4fdd\u8bc1\u6bcf\u6b21\u90fd\u4f1a\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u3002\u56e0\u6b64volatile\u66f4\u591a\u7684\u4f5c\u7528\u8fd8\u662f\u907f\u514d\u8fd9\u79cd\u8bfb\u5408\u5e76\u3002\\r\\n\\r\\n# 10.6.3\u3000\u7761\u7740\u5ef6\u8fdf\\r\\n\\r\\n\u7761\u7740\u5ef6\u8fdf\u65e0\u7591\u662f\u6bd4\u5fd9\u7b49\u5f85\u66f4\u597d\u7684\u65b9\u5f0f\uff0c\u7761\u7740\u5ef6\u8fdf\u662f\u5728\u7b49\u5f85\u7684\u65f6\u95f4\u5230\u6765\u4e4b\u524d\u8fdb\u7a0b\u5904\u4e8e\u7761\u7720\u72b6\u6001\uff0cCPU\u8d44\u6e90\u88ab\u5176\u4ed6\u8fdb\u7a0b\u4f7f\u7528\u3002schedule_timeout\uff08\uff09\u53ef\u4ee5\u4f7f\u5f53\u524d\u4efb\u52a1\u4f11\u7720\u81f3\u6307\u5b9a\u7684jiffies\u4e4b\u540e\u518d\u91cd\u65b0\u88ab\u8c03\u5ea6\u6267\u884c\uff0cmsleep\uff08\uff09\u548cmsleep_interruptible\uff08\uff09\u5728\u672c\u8d28\u4e0a\u90fd\u662f\u4f9d\u9760\u5305\u542b\u4e86schedule_timeout\uff08\uff09\u7684schedule_timeout_uninterruptible\uff08\uff09\u548cschedule_timeout_interruptible\uff08\uff09\u6765\u5b9e\u73b0\u7684\uff0c\u5982\u4ee3\u7801\u6e05\u535510.16\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.16\u3000schedule_timeout\uff08\uff09\u7684\u4f7f\u7528\\r\\n\\r\\n```\\r\\n 1void msleep(unsigned int msecs)\\r\\n 2{\\r\\n 3   unsigned long timeout = msecs_to_jiffies(msecs) + 1;\\r\\n 4\\r\\n 5   while (timeout)\\r\\n 6      timeout = schedule_timeout_uninterruptible(timeout);\\r\\n 7}\\r\\n 8\\r\\n 9unsigned long msleep_interruptible(unsigned int msecs)\\r\\n10{\\r\\n11   unsigned long timeout = msecs_to_jiffies(msecs) + 1;\\r\\n12\\r\\n13   while (timeout && !signal_pending(current))\\r\\n14      timeout = schedule_timeout_interruptible(timeout);\\r\\n15  return jiffies_to_msecs(timeout);\\r\\n16}\\r\\n```\\r\\n\\r\\n\u5b9e\u9645\u4e0a\uff0cschedule_timeout\uff08\uff09\u7684\u5b9e\u73b0\u539f\u7406\u662f\u5411\u7cfb\u7edf\u6dfb\u52a0\u4e00\u4e2a\u5b9a\u65f6\u5668\uff0c\u5728\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u4e2d\u5524\u9192\u4e0e\u53c2\u6570\u5bf9\u5e94\u7684\u8fdb\u7a0b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.16\u4e2d\u7b2c6\u884c\u548c\u7b2c14\u884c\u5206\u522b\u8c03\u7528schedule_timeout_uninterruptible\uff08\uff09\u548cschedule_timeout_interruptible\uff08\uff09\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u533a\u522b\u5728\u4e8e\u524d\u8005\u5728\u8c03\u7528schedule_timeout\uff08\uff09\u4e4b\u524d\u7f6e\u8fdb\u7a0b\u72b6\u6001\u4e3aTASK_INTERRUPTIBLE\uff0c\u540e\u8005\u7f6e\u8fdb\u7a0b\u72b6\u6001\u4e3aTASK_UNINTERRUPTIBLE\uff0c\u5982\u4ee3\u7801\u6e05\u535510.17\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535510.17\u3000schedule_timeout_interruptible\uff08\uff09\u548cschedule_timeout_interruptible\uff08\uff09\\r\\n\\r\\n```\\r\\n 1signed long __sched schedule_timeout_interruptible(signed long timeout)\\r\\n 2{\\r\\n 3  __set_current_state(TASK_INTERRUPTIBLE);\\r\\n 4  return schedule_timeout(timeout);\\r\\n 5}\\r\\n 6\\r\\n 7signed long __sched schedule_timeout_uninterruptible(signed long timeout)\\r\\n 8{\\r\\n 9  __set_current_state(TASK_UNINTERRUPTIBLE);\\r\\n10  return schedule_timeout(timeout);\\r\\n11}\\r\\n```\\r\\n\\r\\n\u53e6\u5916\uff0c\u4e0b\u9762\u4e24\u4e2a\u51fd\u6570\u53ef\u4ee5\u5c06\u5f53\u524d\u8fdb\u7a0b\u6dfb\u52a0\u5230\u7b49\u5f85\u961f\u5217\u4e2d\uff0c\u4ece\u800c\u5728\u7b49\u5f85\u961f\u5217\u4e0a\u7761\u7720\u3002\u5f53\u8d85\u65f6\u53d1\u751f\u65f6\uff0c\u8fdb\u7a0b\u5c06\u88ab\u5524\u9192\uff08\u540e\u8005\u53ef\u4ee5\u5728\u8d85\u65f6\u524d\u88ab\u6253\u65ad\uff09\uff1a\\r\\n\\r\\n```\\r\\nsleep_on_timeout(wait_queue_head_t *q, unsigned long timeout);\\r\\ninterruptible_sleep_on_timeout(wait_queue_head_t*q, unsigned long timeout);\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.2\u3000Linux\u6587\u4ef6\u7cfb\u7edf","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.2\u3000Linux\u6587\u4ef6\u7cfb\u7edf","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.2\u3000Linux\u6587\u4ef6\u7cfb\u7edf.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.2\u3000Linux\u6587\u4ef6\u7cfb\u7edf.md","title":"5.2.1\u3000Linux\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u7ed3\u6784","description":"\u8fdb\u5165Linux\u6839\u76ee\u5f55\uff08\u5373\u201c/\u201d\uff0cLinux\u6587\u4ef6\u7cfb\u7edf\u7684\u5165\u53e3\uff0c\u4e5f\u662f\u5904\u4e8e\u6700\u9ad8\u4e00\u7ea7\u7684\u76ee\u5f55\uff09\uff0c\u8fd0\u884c\u201cls\u2013l\u201d\u547d\u4ee4\uff0c\u770b\u5230Linux\u5305\u542b\u4ee5\u4e0b\u76ee\u5f55\u3002","date":"2025-09-15T14:44:14.153Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":9.475,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"10.6.1\u3000\u77ed\u5ef6\u8fdf","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/10.6\u3000\u5185\u6838\u5ef6\u65f6"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf"}},"content":"\u8fdb\u5165Linux\u6839\u76ee\u5f55\uff08\u5373\u201c/\u201d\uff0cLinux\u6587\u4ef6\u7cfb\u7edf\u7684\u5165\u53e3\uff0c\u4e5f\u662f\u5904\u4e8e\u6700\u9ad8\u4e00\u7ea7\u7684\u76ee\u5f55\uff09\uff0c\u8fd0\u884c\u201cls\u2013l\u201d\u547d\u4ee4\uff0c\u770b\u5230Linux\u5305\u542b\u4ee5\u4e0b\u76ee\u5f55\u3002\\r\\n\\r\\n## 1./bin\\r\\n\\r\\n\u5305\u542b\u57fa\u672c\u547d\u4ee4\uff0c\u5982ls\u3001cp\u3001mkdir\u7b49\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u90fd\u662f\u53ef\u6267\u884c\u7684\u3002\\r\\n\\r\\n## 2./sbin\\r\\n\\r\\n\u5305\u542b\u7cfb\u7edf\u547d\u4ee4\uff0c\u5982modprobe\u3001hwclock\u3001ifconfig\u7b49\uff0c\u5927\u591a\u662f\u6d89\u53ca\u7cfb\u7edf\u7ba1\u7406\u7684\u547d\u4ee4\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u90fd\u662f\u53ef\u6267\u884c\u7684\u3002\\r\\n\\r\\n## 3./dev\\r\\n\\r\\n\u8bbe\u5907\u6587\u4ef6\u5b58\u50a8\u76ee\u5f55\uff0c\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u6587\u4ef6\u7684\u8bfb\u5199\u548c\u63a7\u5236\u4ee5\u8bbf\u95ee\u5b9e\u9645\u7684\u8bbe\u5907\u3002\\r\\n\\r\\n## 4./etc\\r\\n\\r\\n\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\u7684\u6240\u5728\u5730\uff0c\u4e00\u4e9b\u670d\u52a1\u5668\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u5728\u8fd9\u91cc\uff0c\u5982\u7528\u6237\u8d26\u53f7\u53ca\u5bc6\u7801\u914d\u7f6e\u6587\u4ef6\u3002busybox\u7684\u542f\u52a8\u811a\u672c\u4e5f\u5b58\u653e\u5728\u8be5\u76ee\u5f55\u3002\\r\\n\\r\\n## 5./lib\\r\\n\\r\\n\u7cfb\u7edf\u5e93\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\u7b49\u3002\\r\\n\\r\\n## 6./mnt\\r\\n\\r\\n/mnt\u8fd9\u4e2a\u76ee\u5f55\u4e00\u822c\u662f\u7528\u4e8e\u5b58\u653e\u6302\u8f7d\u50a8\u5b58\u8bbe\u5907\u7684\u6302\u8f7d\u76ee\u5f55\uff0c\u6bd4\u5982\u542b\u6709cdrom\u7b49\u76ee\u5f55\u3002\u53ef\u4ee5\u53c2\u770b/etc/fstab\u7684\u5b9a\u4e49\u3002\u6709\u65f6\u6211\u4eec\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u5f00\u673a\u81ea\u52a8\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u628a\u6302\u8f7d\u70b9\u653e\u5728\u8fd9\u91cc\u3002\\r\\n\\r\\n## 7./opt\\r\\n\\r\\nopt\u662f\u201c\u53ef\u9009\u201d\u7684\u610f\u601d\uff0c\u6709\u4e9b\u8f6f\u4ef6\u5305\u4f1a\u88ab\u5b89\u88c5\u5728\u8fd9\u91cc\u3002\\r\\n\\r\\n## 8./proc\\r\\n\\r\\n\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u65f6\uff0c\u8fdb\u7a0b\u53ca\u5185\u6838\u4fe1\u606f\uff08\u6bd4\u5982CPU\u3001\u786c\u76d8\u5206\u533a\u3001\u5185\u5b58\u4fe1\u606f\u7b49\uff09\u5b58\u653e\u5728\u8fd9\u91cc\u3002/proc\u76ee\u5f55\u4e3a\u4f2a\u6587\u4ef6\u7cfb\u7edfproc\u7684\u6302\u8f7d\u76ee\u5f55\uff0cproc\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u5b58\u5728\u4e8e\u5185\u5b58\u4e4b\u4e2d\u3002\\r\\n\\r\\n## 9./tmp\\r\\n\\r\\n\u7528\u6237\u8fd0\u884c\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u6709\u65f6\u4f1a\u4ea7\u751f\u4e34\u65f6\u6587\u4ef6\uff0c/tmp\u7528\u6765\u5b58\u653e\u4e34\u65f6\u6587\u4ef6\u3002\\r\\n\\r\\n## 10./usr\\r\\n\\r\\n\u8fd9\u4e2a\u662f\u7cfb\u7edf\u5b58\u653e\u7a0b\u5e8f\u7684\u76ee\u5f55\uff0c\u6bd4\u5982\u7528\u6237\u547d\u4ee4\u3001\u7528\u6237\u5e93\u7b49\u3002\\r\\n\\r\\n## 11./var\\r\\n\\r\\nvar\u8868\u793a\u7684\u662f\u53d8\u5316\u7684\u610f\u601d\uff0c\u8fd9\u4e2a\u76ee\u5f55\u7684\u5185\u5bb9\u7ecf\u5e38\u53d8\u52a8\uff0c\u5982/var\u7684/var/log\u76ee\u5f55\u88ab\u7528\u6765\u5b58\u653e\u7cfb\u7edf\u65e5\u5fd7\u3002\\r\\n\\r\\n## 12./sys\\r\\n\\r\\nLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u6240\u652f\u6301\u7684sysfs\u6587\u4ef6\u7cfb\u7edf\u88ab\u6620\u5c04\u5728\u6b64\u76ee\u5f55\u4e0a\u3002Linux\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u4e2d\u7684\u603b\u7ebf\u3001\u9a71\u52a8\u548c\u8bbe\u5907\u90fd\u53ef\u4ee5\u5728sysfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u8282\u70b9\u3002\u5f53\u5185\u6838\u68c0\u6d4b\u5230\u5728\u7cfb\u7edf\u4e2d\u51fa\u73b0\u4e86\u65b0\u8bbe\u5907\u540e\uff0c\u5185\u6838\u4f1a\u5728sysfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e3a\u8be5\u65b0\u8bbe\u5907\u751f\u6210\u4e00\u9879\u65b0\u7684\u8bb0\u5f55\u3002\\r\\n\\r\\n# 5.2.2\u3000Linux\u6587\u4ef6\u7cfb\u7edf\u4e0e\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n\u56fe5.1\u6240\u793a\u4e3aLinux\u4e2d\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u3001\u78c1\u76d8/Flash\u6587\u4ef6\u7cfb\u7edf\u53ca\u4e00\u822c\u7684\u8bbe\u5907\u6587\u4ef6\u4e0e\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\\r\\n\\r\\n![image-20250324223448543](./figure/image-20250324223448543.png)\\r\\n\\r\\n\u56fe5.1\u3000\u6587\u4ef6\u7cfb\u7edf\u4e0e\u8bbe\u5907\u9a71\u52a8\u4e4b\u95f4\u7684\u5173\u7cfb\\r\\n\\r\\n\u5e94\u7528\u7a0b\u5e8f\u548cVFS\u4e4b\u95f4\u7684\u63a5\u53e3\u662f\u7cfb\u7edf\u8c03\u7528\uff0c\u800cVFS\u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ee5\u53ca\u8bbe\u5907\u6587\u4ef6\u4e4b\u95f4\u7684\u63a5\u53e3\u662ffile_operations\u7ed3\u6784\u4f53\u6210\u5458\u51fd\u6570\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5305\u542b\u5bf9\u6587\u4ef6\u8fdb\u884c\u6253\u5f00\u3001\u5173\u95ed\u3001\u8bfb\u5199\u3001\u63a7\u5236\u7684\u4e00\u7cfb\u5217\u6210\u5458\u51fd\u6570\uff0c\u5173\u7cfb\u5982\u56fe5.2\u6240\u793a\u3002\\r\\n\\r\\n![1742826912565](./figure/1742826912565.png)\\r\\n\\r\\n\u56fe5.2\u3000\u5e94\u7528\u7a0b\u5e8f\u3001VFS\u4e0e\u8bbe\u5907\u9a71\u52a8\\r\\n\\r\\n\u5728\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u4e2d\uff0c\u4e00\u822c\u800c\u8a00\uff0c\u4f1a\u5173\u5fc3file\u548cinode\u8fd9\u4e24\u4e2a\u7ed3\u6784\u4f53\u3002\\r\\n\\r\\n## 1.file\u7ed3\u6784\u4f53\\r\\n\\r\\nfile\u7ed3\u6784\u4f53\u4ee3\u8868\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u7cfb\u7edf\u4e2d\u6bcf\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u5728\u5185\u6838\u7a7a\u95f4\u90fd\u6709\u4e00\u4e2a\u5173\u8054\u7684struct file\u3002\u5b83\u7531\u5185\u6838\u5728\u6253\u5f00\u6587\u4ef6\u65f6\u521b\u5efa\uff0c\u5e76\u4f20\u9012\u7ed9\u5728\u6587\u4ef6\u4e0a\u8fdb\u884c\u64cd\u4f5c\u7684\u4efb\u4f55\u51fd\u6570\u3002\u5728\u6587\u4ef6\u7684\u6240\u6709\u5b9e\u4f8b\u90fd\u5173\u95ed\u540e\uff0c\u5185\u6838\u91ca\u653e\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002\u5728\u5185\u6838\u548c\u9a71\u52a8\u6e90\u4ee3\u7801\u4e2d\uff0cstruct file\u7684\u6307\u9488\u901a\u5e38\u88ab\u547d\u540d\u4e3afile\u6216filp\uff08\u5373file pointer\uff09\u3002\u4ee3\u7801\u6e05\u53555.3\u7ed9\u51fa\u4e86\u6587\u4ef6\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53555.3\u3000\u6587\u4ef6\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\nstruct file {\\r\\n\\tunion {\\r\\n\\t\\tstruct llist_node\\tfu_llist;\\r\\n\\t\\tstruct rcu_head \\tfu_rcuhead;\\r\\n\\t} f_u;\\r\\n\\tstruct path\\t\\tf_path;\\r\\n\\tstruct inode\\t\\t*f_inode;\\t/* cached value */\\r\\n\\tconst struct file_operations\\t*f_op;\\r\\n\\r\\n\\t/*\\r\\n\\t * Protects f_ep_links, f_flags.\\r\\n\\t * Must not be taken from IRQ context.\\r\\n\\t */\\r\\n\\tspinlock_t\\t\\tf_lock;\\r\\n\\tenum rw_hint\\t\\tf_write_hint;\\r\\n\\tatomic_long_t\\t\\tf_count;\\r\\n\\tunsigned int \\t\\tf_flags;\\r\\n\\tfmode_t\\t\\t\\tf_mode;\\r\\n\\tstruct mutex\\t\\tf_pos_lock;\\r\\n\\tloff_t\\t\\t\\tf_pos;\\r\\n\\tstruct fown_struct\\tf_owner;\\r\\n\\tconst struct cred\\t*f_cred;\\r\\n\\tstruct file_ra_state\\tf_ra;\\r\\n\\r\\n\\tu64\\t\\t\\tf_version;\\r\\n#ifdef CONFIG_SECURITY\\r\\n\\tvoid\\t\\t\\t*f_security;\\r\\n#endif\\r\\n\\t/* needed for tty driver, and maybe others */\\r\\n\\tvoid\\t\\t\\t*private_data;\\r\\n\\r\\n#ifdef CONFIG_EPOLL\\r\\n\\t/* Used by fs/eventpoll.c to link all the hooks to this file */\\r\\n\\tstruct list_head\\tf_ep_links;\\r\\n\\tstruct list_head\\tf_tfile_llink;\\r\\n#endif /* #ifdef CONFIG_EPOLL */\\r\\n\\tstruct address_space\\t*f_mapping;\\r\\n\\terrseq_t\\t\\tf_wb_err;\\r\\n} __randomize_layout\\r\\n  __attribute__((aligned(4)));\\t/* lest something weird decides that 2 is OK */\\r\\n```\\r\\n\\r\\n\u6587\u4ef6\u8bfb/\u5199\u6a21\u5f0fmode\u3001\u6807\u5fd7f_flags\u90fd\u662f\u8bbe\u5907\u9a71\u52a8\u5173\u5fc3\u7684\u5185\u5bb9\uff0c\u800c\u79c1\u6709\u6570\u636e\u6307\u9488private_data\u5728\u8bbe\u5907\u9a71\u52a8\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\uff0c\u5927\u591a\u88ab\u6307\u5411\u8bbe\u5907\u9a71\u52a8\u81ea\u5b9a\u4e49\u4ee5\u7528\u4e8e\u63cf\u8ff0\u8bbe\u5907\u7684\u7ed3\u6784\u4f53\u3002\\r\\n\\r\\n\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u7528\u4e8e\u5224\u65ad\u4ee5\u963b\u585e\u8fd8\u662f\u975e\u963b\u585e\u65b9\u5f0f\u6253\u5f00\u8bbe\u5907\u6587\u4ef6\uff1a\\r\\n\\r\\n```\\r\\nif (file->f_flags & O_NONBLOCK)     /* \u975e\u963b\u585e*/\\r\\n      pr_debug(\\"open: non-blocking\\\\n\\");\\r\\nelse                                /* \u963b\u585e*/\\r\\n      pr_debug(\\"open: blocking\\\\n\\");\\r\\n```\\r\\n\\r\\n## 2.inode\u7ed3\u6784\u4f53\\r\\n\\r\\nVFS inode\u5305\u542b\u6587\u4ef6\u8bbf\u95ee\u6743\u9650\u3001\u5c5e\u4e3b\u3001\u7ec4\u3001\u5927\u5c0f\u3001\u751f\u6210\u65f6\u95f4\u3001\u8bbf\u95ee\u65f6\u95f4\u3001\u6700\u540e\u4fee\u6539\u65f6\u95f4\u7b49\u4fe1\u606f\u3002\u5b83\u662fLinux\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\u7684\u6700\u57fa\u672c\u5355\u4f4d\uff0c\u4e5f\u662f\u6587\u4ef6\u7cfb\u7edf\u8fde\u63a5\u4efb\u4f55\u5b50\u76ee\u5f55\u3001\u6587\u4ef6\u7684\u6865\u6881\uff0cinode\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u53555.4\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53555.4\u3000inode\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\nstruct inode {\\r\\n\\tumode_t\\t\\t\\ti_mode;\\r\\n\\tunsigned short\\t\\ti_opflags;\\r\\n\\tkuid_t\\t\\t\\ti_uid;\\r\\n\\tkgid_t\\t\\t\\ti_gid;\\r\\n\\tunsigned int\\t\\ti_flags;\\r\\n\\r\\n#ifdef CONFIG_FS_POSIX_ACL\\r\\n\\tstruct posix_acl\\t*i_acl;\\r\\n\\tstruct posix_acl\\t*i_default_acl;\\r\\n#endif\\r\\n\\r\\n\\tconst struct inode_operations\\t*i_op;\\r\\n\\tstruct super_block\\t*i_sb;\\r\\n\\tstruct address_space\\t*i_mapping;\\r\\n\\r\\n#ifdef CONFIG_SECURITY\\r\\n\\tvoid\\t\\t\\t*i_security;\\r\\n#endif\\r\\n\\r\\n\\t/* Stat data, not accessed from path walking */\\r\\n\\tunsigned long\\t\\ti_ino;\\r\\n\\t/*\\r\\n\\t * Filesystems may only read i_nlink directly.  They shall use the\\r\\n\\t * following functions for modification:\\r\\n\\t *\\r\\n\\t *    (set|clear|inc|drop)_nlink\\r\\n\\t *    inode_(inc|dec)_link_count\\r\\n\\t */\\r\\n\\tunion {\\r\\n\\t\\tconst unsigned int i_nlink;\\r\\n\\t\\tunsigned int __i_nlink;\\r\\n\\t};\\r\\n\\tdev_t\\t\\t\\ti_rdev;\\r\\n\\tloff_t\\t\\t\\ti_size;\\r\\n\\tstruct timespec64\\ti_atime;\\r\\n\\tstruct timespec64\\ti_mtime;\\r\\n\\tstruct timespec64\\ti_ctime;\\r\\n\\tspinlock_t\\t\\ti_lock;\\t/* i_blocks, i_bytes, maybe i_size */\\r\\n\\tunsigned short          i_bytes;\\r\\n\\tu8\\t\\t\\ti_blkbits;\\r\\n\\tu8\\t\\t\\ti_write_hint;\\r\\n\\tblkcnt_t\\t\\ti_blocks;\\r\\n\\r\\n#ifdef __NEED_I_SIZE_ORDERED\\r\\n\\tseqcount_t\\t\\ti_size_seqcount;\\r\\n#endif\\r\\n\\r\\n\\t/* Misc */\\r\\n\\tunsigned long\\t\\ti_state;\\r\\n\\tstruct rw_semaphore\\ti_rwsem;\\r\\n\\r\\n\\tunsigned long\\t\\tdirtied_when;\\t/* jiffies of first dirtying */\\r\\n\\tunsigned long\\t\\tdirtied_time_when;\\r\\n\\r\\n\\tstruct hlist_node\\ti_hash;\\r\\n\\tstruct list_head\\ti_io_list;\\t/* backing dev IO list */\\r\\n#ifdef CONFIG_CGROUP_WRITEBACK\\r\\n\\tstruct bdi_writeback\\t*i_wb;\\t\\t/* the associated cgroup wb */\\r\\n\\r\\n\\t/* foreign inode detection, see wbc_detach_inode() */\\r\\n\\tint\\t\\t\\ti_wb_frn_winner;\\r\\n\\tu16\\t\\t\\ti_wb_frn_avg_time;\\r\\n\\tu16\\t\\t\\ti_wb_frn_history;\\r\\n#endif\\r\\n\\tstruct list_head\\ti_lru;\\t\\t/* inode LRU list */\\r\\n\\tstruct list_head\\ti_sb_list;\\r\\n\\tstruct list_head\\ti_wb_list;\\t/* backing dev writeback list */\\r\\n\\tunion {\\r\\n\\t\\tstruct hlist_head\\ti_dentry;\\r\\n\\t\\tstruct rcu_head\\t\\ti_rcu;\\r\\n\\t};\\r\\n\\tatomic64_t\\t\\ti_version;\\r\\n\\tatomic_t\\t\\ti_count;\\r\\n\\tatomic_t\\t\\ti_dio_count;\\r\\n\\tatomic_t\\t\\ti_writecount;\\r\\n#ifdef CONFIG_IMA\\r\\n\\tatomic_t\\t\\ti_readcount; /* struct files open RO */\\r\\n#endif\\r\\n\\tconst struct file_operations\\t*i_fop;\\t/* former ->i_op->default_file_ops */\\r\\n\\tstruct file_lock_context\\t*i_flctx;\\r\\n\\tstruct address_space\\ti_data;\\r\\n\\tstruct list_head\\ti_devices;\\r\\n\\tunion {\\r\\n\\t\\tstruct pipe_inode_info\\t*i_pipe;\\r\\n\\t\\tstruct block_device\\t*i_bdev;\\r\\n\\t\\tstruct cdev\\t\\t*i_cdev;\\r\\n\\t\\tchar\\t\\t\\t*i_link;\\r\\n\\t\\tunsigned\\t\\ti_dir_seq;\\r\\n\\t};\\r\\n\\r\\n\\t__u32\\t\\t\\ti_generation;\\r\\n\\r\\n#ifdef CONFIG_FSNOTIFY\\r\\n\\t__u32\\t\\t\\ti_fsnotify_mask; /* all events this inode cares about */\\r\\n\\tstruct fsnotify_mark_connector __rcu\\t*i_fsnotify_marks;\\r\\n#endif\\r\\n\\r\\n#if IS_ENABLED(CONFIG_FS_ENCRYPTION)\\r\\n\\tstruct fscrypt_info\\t*i_crypt_info;\\r\\n#endif\\r\\n\\r\\n\\tvoid\\t\\t\\t*i_private; /* fs or device private pointer */\\r\\n} __randomize_layout;\\r\\n\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8e\u8868\u793a\u8bbe\u5907\u6587\u4ef6\u7684inode\u7ed3\u6784\uff0ci_rdev\u5b57\u6bb5\u5305\u542b\u8bbe\u5907\u7f16\u53f7\u3002Linux\u5185\u6838\u8bbe\u5907\u7f16\u53f7\u5206\u4e3a\u4e3b\u8bbe\u5907\u7f16\u53f7\u548c\u6b21\u8bbe\u5907\u7f16\u53f7\uff0c\u524d\u8005\u4e3adev_t\u7684\u9ad812\u4f4d\uff0c\u540e\u8005\u4e3adev_t\u7684\u4f4e20\u4f4d\u3002\u4e0b\u5217\u64cd\u4f5c\u7528\u4e8e\u4ece\u4e00\u4e2ainode\u4e2d\u83b7\u5f97\u4e3b\u8bbe\u5907\u53f7\u548c\u6b21\u8bbe\u5907\u53f7\uff1a\\r\\n\\r\\n```\\r\\nunsigned int iminor(struct inode *inode);\\r\\nunsigned int imajor(struct inode *inode);\\r\\n```\\r\\n\\r\\n\u67e5\u770b/proc/devices\u6587\u4ef6\u53ef\u4ee5\u83b7\u77e5\u7cfb\u7edf\u4e2d\u6ce8\u518c\u7684\u8bbe\u5907\uff0c\u7b2c1\u5217\u4e3a\u4e3b\u8bbe\u5907\u53f7\uff0c\u7b2c2\u5217\u4e3a\u8bbe\u5907\u540d\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nCharacter devices:\\r\\n   1 mem\\r\\n   2 pty\\r\\n   3 ttyp\\r\\n   4 /dev/vc/0\\r\\n   4 tty\\r\\n   5 /dev/tty\\r\\n   5 /dev/console\\r\\n   5 /dev/ptmx\\r\\n   7 vcs\\r\\n  10 misc\\r\\n  13 input\\r\\n  21 sg\\r\\n  29 fb\\r\\n 128 ptm\\r\\n 136 pts\\r\\n 171 ieee1394\\r\\n 180 usb\\r\\n 189 usb_device\\r\\nBlock devices:\\r\\n   1 ramdisk\\r\\n   2 fd\\r\\n   8 sd\\r\\n   9 md\\r\\n  22 ide1\\r\\n ...\\r\\n```\\r\\n\\r\\n\u67e5\u770b/dev\u76ee\u5f55\u53ef\u4ee5\u83b7\u77e5\u7cfb\u7edf\u4e2d\u5305\u542b\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u65e5\u671f\u7684\u524d\u4e24\u5217\u7ed9\u51fa\u4e86\u5bf9\u5e94\u8bbe\u5907\u7684\u4e3b\u8bbe\u5907\u53f7\u548c\u6b21\u8bbe\u5907\u53f7\uff1a\\r\\n\\r\\n```\\r\\ncrw-rw----    1 root     uucp       4,  64 Jan 30  2003 /dev/ttyS0\\r\\nbrw-rw----    1 root     disk       8,   0 Jan 30  2003 /dev/sda\\r\\n```\\r\\n\\r\\n\u4e3b\u8bbe\u5907\u53f7\u662f\u4e0e\u9a71\u52a8\u5bf9\u5e94\u7684\u6982\u5ff5\uff0c\u540c\u4e00\u7c7b\u8bbe\u5907\u4e00\u822c\u4f7f\u7528\u76f8\u540c\u7684\u4e3b\u8bbe\u5907\u53f7\uff0c\u4e0d\u540c\u7c7b\u7684\u8bbe\u5907\u4e00\u822c\u4f7f\u7528\u4e0d\u540c\u7684\u4e3b\u8bbe\u5907\u53f7\uff08\u4f46\u662f\u4e5f\u4e0d\u6392\u9664\u5728\u540c\u4e00\u4e3b\u8bbe\u5907\u53f7\u4e0b\u5305\u542b\u6709\u4e00\u5b9a\u5dee\u5f02\u7684\u8bbe\u5907\uff09\u3002\u56e0\u4e3a\u540c\u4e00\u9a71\u52a8\u53ef\u652f\u6301\u591a\u4e2a\u540c\u7c7b\u8bbe\u5907\uff0c\u56e0\u6b64\u7528\u6b21\u8bbe\u5907\u53f7\u6765\u63cf\u8ff0\u4f7f\u7528\u8be5\u9a71\u52a8\u7684\u8bbe\u5907\u7684\u5e8f\u53f7\uff0c\u5e8f\u53f7\u4e00\u822c\u4ece0\u5f00\u59cb\u3002\\r\\n\\r\\n\u5185\u6838Documents\u76ee\u5f55\u4e0b\u7684devices.txt\u6587\u4ef6\u63cf\u8ff0\u4e86Linux\u8bbe\u5907\u53f7\u7684\u5206\u914d\u60c5\u51b5\uff0c\u5b83\u7531LANANA\uff08the Linux Assigned Names and Numbers authority\uff0c\u7f51\u5740\u4e3ahttp://www.lanana.org/ \uff09\u7ec4\u7ec7\u7ef4\u62a4\uff0cTorben Mathiasen\uff08device@lanana.org\uff09\u662f\u5176\u4e2d\u7684\u4e3b\u8981\u7ef4\u62a4\u8005\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf","description":"\u4fe1\u53f7\u91cf\uff08Semaphore\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6700\u5178\u578b\u7684\u7528\u4e8e\u540c\u6b65\u548c\u4e92\u65a5\u7684\u624b\u6bb5\uff0c\u4fe1\u53f7\u91cf\u7684\u503c\u53ef\u4ee5\u662f0\u30011\u6216\u8005n\u3002\u4fe1\u53f7\u91cf\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7ecf\u5178\u6982\u5ff5PV\u64cd\u4f5c\u5bf9\u5e94\u3002","date":"2025-09-15T14:44:14.149Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.54,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"5.2.1\u3000Linux\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/5.2\u3000Linux\u6587\u4ef6\u7cfb\u7edf"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8"}},"content":"\u4fe1\u53f7\u91cf\uff08Semaphore\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6700\u5178\u578b\u7684\u7528\u4e8e\u540c\u6b65\u548c\u4e92\u65a5\u7684\u624b\u6bb5\uff0c\u4fe1\u53f7\u91cf\u7684\u503c\u53ef\u4ee5\u662f0\u30011\u6216\u8005n\u3002\u4fe1\u53f7\u91cf\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u7ecf\u5178\u6982\u5ff5PV\u64cd\u4f5c\u5bf9\u5e94\u3002\\r\\n\\r\\nP\uff08S\uff09\uff1a\\r\\n\\r\\n\u2460\u5c06\u4fe1\u53f7\u91cfS\u7684\u503c\u51cf1\uff0c\u5373S=S-1\uff1b\\r\\n\\r\\n\u2461\u5982\u679cS\u22650\uff0c\u5219\u8be5\u8fdb\u7a0b\u7ee7\u7eed\u6267\u884c\uff1b\u5426\u5219\u8be5\u8fdb\u7a0b\u7f6e\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c\u6392\u5165\u7b49\u5f85\u961f\u5217\u3002\\r\\n\\r\\nV\uff08S\uff09\uff1a\\r\\n\\r\\n\u2460\u5c06\u4fe1\u53f7\u91cfS\u7684\u503c\u52a01\uff0c\u5373S=S+1\uff1b\\r\\n\\r\\n\u2461\u5982\u679cS>0\uff0c\u5524\u9192\u961f\u5217\u4e2d\u7b49\u5f85\u4fe1\u53f7\u91cf\u7684\u8fdb\u7a0b\u3002\\r\\n\\r\\nLinux\u4e2d\u4e0e\u4fe1\u53f7\u91cf\u76f8\u5173\u7684\u64cd\u4f5c\u4e3b\u8981\u6709\u4e0b\u9762\u51e0\u79cd\u3002\\r\\n\\r\\n1.\u5b9a\u4e49\u4fe1\u53f7\u91cf\\r\\n\\r\\n\u4e0b\u5217\u4ee3\u7801\u5b9a\u4e49\u540d\u79f0\u4e3asem\u7684\u4fe1\u53f7\u91cf\uff1a\\r\\n\\r\\n```\\r\\nstruct semaphore sem;\\r\\n```\\r\\n\\r\\n2.\u521d\u59cb\u5316\u4fe1\u53f7\u91cf\\r\\n\\r\\n```\\r\\nvoid sema_init(struct semaphore *sem, int val);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u521d\u59cb\u5316\u4fe1\u53f7\u91cf\uff0c\u5e76\u8bbe\u7f6e\u4fe1\u53f7\u91cfsem\u7684\u503c\u4e3aval\u3002\\r\\n\\r\\n3.\u83b7\u5f97\u4fe1\u53f7\u91cf\\r\\n\\r\\n```\\r\\nvoid down(struct semaphore * sem);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7528\u4e8e\u83b7\u5f97\u4fe1\u53f7\u91cfsem\uff0c\u5b83\u4f1a\u5bfc\u81f4\u7761\u7720\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u3002\\r\\n\\r\\n```\\r\\nint down_interruptible(struct semaphore * sem);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u529f\u80fd\u4e0edown\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u4e3a\uff0c\u56e0\u4e3adown\uff08\uff09\u8fdb\u5165\u7761\u7720\u72b6\u6001\u7684\u8fdb\u7a0b\u4e0d\u80fd\u88ab\u4fe1\u53f7\u6253\u65ad\uff0c\u4f46\u56e0\u4e3adown_interruptible\uff08\uff09\u8fdb\u5165\u7761\u7720\u72b6\u6001\u7684\u8fdb\u7a0b\u80fd\u88ab\u4fe1\u53f7\u6253\u65ad\uff0c\u4fe1\u53f7\u4e5f\u4f1a\u5bfc\u81f4\u8be5\u51fd\u6570\u8fd4\u56de\uff0c\u8fd9\u65f6\u5019\u51fd\u6570\u7684\u8fd4\u56de\u503c\u975e0\u3002\\r\\n\\r\\n```\\r\\nint down_trylock(struct semaphore * sem);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u5c1d\u8bd5\u83b7\u5f97\u4fe1\u53f7\u91cfsem\uff0c\u5982\u679c\u80fd\u591f\u7acb\u523b\u83b7\u5f97\uff0c\u5b83\u5c31\u83b7\u5f97\u8be5\u4fe1\u53f7\u91cf\u5e76\u8fd4\u56de0\uff0c\u5426\u5219\uff0c\u8fd4\u56de\u975e0\u503c\u3002\u5b83\u4e0d\u4f1a\u5bfc\u81f4\u8c03\u7528\u8005\u7761\u7720\uff0c\u53ef\u4ee5\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u3002\\r\\n\\r\\n\u5728\u4f7f\u7528down_interruptible\uff08\uff09\u83b7\u53d6\u4fe1\u53f7\u91cf\u65f6\uff0c\u5bf9\u8fd4\u56de\u503c\u4e00\u822c\u4f1a\u8fdb\u884c\u68c0\u67e5\uff0c\u5982\u679c\u975e0\uff0c\u901a\u5e38\u7acb\u5373\u8fd4\u56de-ERESTARTSYS\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\nif (down_interruptible(&sem))\\r\\n    return  -ERESTARTSYS;\\r\\n```\\r\\n\\r\\n4.\u91ca\u653e\u4fe1\u53f7\u91cf\\r\\n\\r\\n```\\r\\nvoid up(struct semaphore * sem);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u91ca\u653e\u4fe1\u53f7\u91cfsem\uff0c\u5524\u9192\u7b49\u5f85\u8005\u3002\\r\\n\\r\\n\u4f5c\u4e3a\u4e00\u79cd\u53ef\u80fd\u7684\u4e92\u65a5\u624b\u6bb5\uff0c\u4fe1\u53f7\u91cf\u53ef\u4ee5\u4fdd\u62a4\u4e34\u754c\u533a\uff0c\u5b83\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u81ea\u65cb\u9501\u7c7b\u4f3c\u3002\u4e0e\u81ea\u65cb\u9501\u76f8\u540c\uff0c\u53ea\u6709\u5f97\u5230\u4fe1\u53f7\u91cf\u7684\u8fdb\u7a0b\u624d\u80fd\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\u3002\u4f46\u662f\uff0c\u4e0e\u81ea\u65cb\u9501\u4e0d\u540c\u7684\u662f\uff0c\u5f53\u83b7\u53d6\u4e0d\u5230\u4fe1\u53f7\u91cf\u65f6\uff0c\u8fdb\u7a0b\u4e0d\u4f1a\u539f\u5730\u6253\u8f6c\u800c\u662f\u8fdb\u5165\u4f11\u7720\u7b49\u5f85\u72b6\u6001\u3002\u7528\u4f5c\u4e92\u65a5\u65f6\uff0c\u4fe1\u53f7\u91cf\u4e00\u822c\u8fd9\u6837\u88ab\u4f7f\u7528\uff1a\\r\\n\\r\\n![1743087820346](./figure/1743087820346.png)\\r\\n\\r\\n![1743087835064](./figure/1743087835064.png)\\r\\n\\r\\n\u7531\u4e8e\u65b0\u7684Linux\u5185\u6838\u503e\u5411\u4e8e\u76f4\u63a5\u4f7f\u7528mutex\u4f5c\u4e3a\u4e92\u65a5\u624b\u6bb5\uff0c\u4fe1\u53f7\u91cf\u7528\u4f5c\u4e92\u65a5\u4e0d\u518d\u88ab\u63a8\u8350\u4f7f\u7528\u3002\\r\\n\\r\\n\u4fe1\u53f7\u91cf\u4e5f\u53ef\u4ee5\u7528\u4e8e\u540c\u6b65\uff0c\u4e00\u4e2a\u8fdb\u7a0bA\u6267\u884cdown\uff08\uff09\u7b49\u5f85\u4fe1\u53f7\u91cf\uff0c\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0bB\u6267\u884cup\uff08\uff09\u91ca\u653e\u4fe1\u53f7\u91cf\uff0c\u8fd9\u6837\u8fdb\u7a0bA\u5c31\u540c\u6b65\u5730\u7b49\u5f85\u4e86\u8fdb\u7a0bB\u3002\u5176\u8fc7\u7a0b\u7c7b\u4f3c\uff1a\\r\\n\\r\\n![1743087864651](./figure/1743087864651.png)\\r\\n\\r\\n\u6b64\u5916\uff0c\u5bf9\u4e8e\u5173\u5fc3\u5177\u4f53\u6570\u503c\u7684\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\u95ee\u9898\uff0c\u4f7f\u7528\u4fe1\u53f7\u91cf\u5219\u8f83\u4e3a\u5408\u9002\u3002\u56e0\u4e3a\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\u95ee\u9898\u4e5f\u662f\u4e00\u79cd\u540c\u6b65\u95ee\u9898\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8","description":"\u5728\u4e00\u4e2aSoC\u4e2d\uff0c\u6676\u632f\u3001PLL\u3001\u9a71\u52a8\u548c\u95e8\u7b49\u4f1a\u5f62\u6210\u4e00\u4e2a\u65f6\u949f\u6811\u5f62\u7ed3\u6784\uff0c\u5728Linux 2.6\u4e2d\uff0c\u4e5f\u5b58\u6709clkgetrate\uff08\uff09\u3001clksetrate\uff08\uff09\u3001clkgetparent\uff08\uff09\u3001clksetparent\uff08\uff09\u7b49\u901a\u7528API\uff0c\u4f46\u662f\u8fd9\u4e9bAPI\u7531\u6bcf\u4e2aSoC\u5355\u72ec\u5b9e\u73b0\uff0c\u800c\u4e14\u5404\u4e2aSoC\u4f9b\u5e94\u5546\u5728\u5b9e\u73b0\u65b9\u9762\u7684\u5dee\u5f02\u5f88\u5927\uff0c\u4e8e\u662f\u5185\u6838\u589e\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u901a\u7528\u65f6\u949f\u6846\u67b6\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u788e\u7247\u5316\u95ee\u9898\u3002\u4e4b\u6240\u4ee5\u79f0\u4e3a\u901a\u7528\u65f6\u949f\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u901a\u7528\u4e3b\u8981\u4f53\u73b0\u5728\uff1a","date":"2025-09-15T14:44:14.137Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":9.07,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/7.6\u3000\u4fe1\u53f7\u91cf"},"nextItem":{"title":"16.3.1\u3000USB\u8bbe\u5907\u9a71\u52a8\u7684\u6574\u4f53\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.3\u3000USB\u8bbe\u5907\u9a71\u52a8"}},"content":"\u5728\u4e00\u4e2aSoC\u4e2d\uff0c\u6676\u632f\u3001PLL\u3001\u9a71\u52a8\u548c\u95e8\u7b49\u4f1a\u5f62\u6210\u4e00\u4e2a\u65f6\u949f\u6811\u5f62\u7ed3\u6784\uff0c\u5728Linux 2.6\u4e2d\uff0c\u4e5f\u5b58\u6709clk_get_rate\uff08\uff09\u3001clk_set_rate\uff08\uff09\u3001clk_get_parent\uff08\uff09\u3001clk_set_parent\uff08\uff09\u7b49\u901a\u7528API\uff0c\u4f46\u662f\u8fd9\u4e9bAPI\u7531\u6bcf\u4e2aSoC\u5355\u72ec\u5b9e\u73b0\uff0c\u800c\u4e14\u5404\u4e2aSoC\u4f9b\u5e94\u5546\u5728\u5b9e\u73b0\u65b9\u9762\u7684\u5dee\u5f02\u5f88\u5927\uff0c\u4e8e\u662f\u5185\u6838\u589e\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u901a\u7528\u65f6\u949f\u6846\u67b6\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u788e\u7247\u5316\u95ee\u9898\u3002\u4e4b\u6240\u4ee5\u79f0\u4e3a\u901a\u7528\u65f6\u949f\uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u901a\u7528\u4e3b\u8981\u4f53\u73b0\u5728\uff1a\\r\\n\\r\\n1\uff09\u7edf\u4e00\u7684clk\u7ed3\u6784\u4f53\uff0c\u7edf\u4e00\u7684\u5b9a\u4e49\u4e8eclk.h\u4e2d\u7684clk API\uff0c\u8fd9\u4e9bAPI\u4f1a\u8c03\u7528\u7edf\u4e00\u7684clk_ops\u4e2d\u7684\u56de\u8c03\u51fd\u6570\uff1b\u8fd9\u4e2a\u7edf\u4e00\u7684clk\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535520.22\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.22\u3000clk\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct clk {\\r\\n 2        const char              *name;\\r\\n 3        const struct clk_ops    *ops;\\r\\n 4        struct clk_hw           *hw;\\r\\n 5        char                    **parent_names;\\r\\n 6        struct clk              **parents;\\r\\n 7        struct clk              *parent;\\r\\n 8        struct hlist_head       children;\\r\\n 9        struct hlist_node       child_node;\\r\\n10        ...\\r\\n11};\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7b2c3\u884c\u7684clk_ops\u5b9a\u4e49\u662f\u5173\u4e8e\u65f6\u949f\u4f7f\u80fd\u3001\u7981\u6b62\u3001\u8ba1\u7b97\u9891\u7387\u7b49\u7684\u64cd\u4f5c\u96c6\uff0c\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535520.23\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.23\u3000clk_ops\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct clk_ops {\\r\\n 2               int             (*prepare)(struct clk_hw *hw);\\r\\n 3               void            (*unprepare)(struct clk_hw *hw);\\r\\n 4               int             (*enable)(struct clk_hw *hw);\\r\\n 5               void            (*disable)(struct clk_hw *hw);\\r\\n 6               int             (*is_enabled)(struct clk_hw *hw);\\r\\n 7               unsigned long   (*recalc_rate)(struct clk_hw *hw,\\r\\n 8                                               unsigned long parent_rate);\\r\\n 9               long            (*round_rate)(struct clk_hw *hw, unsigned long,\\r\\n10                                               unsigned long *);\\r\\n11               int             (*set_parent)(struct clk_hw *hw, u8 index);\\r\\n12               u8              (*get_parent)(struct clk_hw *hw);\\r\\n13               int             (*set_rate)(struct clk_hw *hw, unsigned long);\\r\\n14               void            (*init)(struct clk_hw *hw);\\r\\n15};\\r\\n```\\r\\n\\r\\n2\uff09\u5bf9\u5177\u4f53\u7684SoC\u5982\u4f55\u53bb\u5b9e\u73b0\u9488\u5bf9\u81ea\u5df1SoC\u7684clk\u9a71\u52a8\uff0c\u5982\u4f55\u63d0\u4f9b\u786c\u4ef6\u7279\u5b9a\u7684\u56de\u8c03\u51fd\u6570\u7684\u65b9\u6cd5\u4e5f\u8fdb\u884c\u4e86\u7edf\u4e00\u3002\\r\\n\\r\\n\u5728\u4ee3\u7801\u6e05\u535520.22\u8fd9\u4e2a\u901a\u7528\u7684clk\u7ed3\u6784\u4f53\u4e2d\uff0c\u7b2c4\u884c\u7684clk_hw\u662f\u8054\u7cfbclk_ops\u4e2d\u56de\u8c03\u51fd\u6570\u548c\u5177\u4f53\u786c\u4ef6\u7ec6\u8282\u7684\u7ebd\u5e26\uff0cclk_hw\u4e2d\u53ea\u5305\u542b\u901a\u7528\u65f6\u949f\u7ed3\u6784\u4f53\u7684\u6307\u9488\u4ee5\u53ca\u5177\u4f53\u786c\u4ef6\u7684init\u6570\u636e\uff0c\u5982\u4ee3\u7801\u6e05\u535520.24\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.24\u3000clk_hw\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct clk_hw {\\r\\n 2         struct clk *clk;\\r\\n 3         const struct clk_init_data *init;\\r\\n 4};\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684clk_init_data\u5305\u542b\u4e86\u5177\u4f53\u65f6\u949f\u7684\u540d\u79f0\u3001\u53ef\u80fd\u7684\u7236\u7ea7\u65f6\u949f\u7684\u540d\u79f0\u5217\u8868parent_names\u3001\u53ef\u80fd\u7684\u7236\u7ea7\u65f6\u949f\u6570\u91cfnum_parents\u7b49\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e9b\u540d\u79f0\u7684\u5339\u914d\u5bf9\u5efa\u7acb\u65f6\u949f\u95f4\u7684\u7236\u5b50\u5173\u7cfb\u529f\u4e0d\u53ef\u6ca1\uff0c\u5982\u4ee3\u7801\u6e05\u535520.25\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.25\u3000clk_init_data\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct clk_init_data {\\r\\n 2        const char              *name;\\r\\n 3        const struct clk_ops    *ops;\\r\\n 4        const char              **parent_names;\\r\\n 5        u8                      num_parents;\\r\\n 6        unsigned long           flags;\\r\\n 7};\\r\\n```\\r\\n\\r\\n\u4ececlk\u6838\u5fc3\u5c42\u5230\u5177\u4f53\u82af\u7247clk\u9a71\u52a8\u7684\u8c03\u7528\u987a\u5e8f\u4e3a\uff1a\\r\\n\\r\\nclk_enable\uff08clk\uff09\uff1b[\u63d2\u56fe] clk->ops->enable\uff08clk->hw\uff09\uff1b\\r\\n\\r\\n\u901a\u7528\u7684clk API\uff08\u5982clk_enable\uff09\u5728\u8c03\u7528\u5e95\u5c42clk\u7ed3\u6784\u4f53\u7684clk_ops\u6210\u5458\u51fd\u6570\uff08\u5982clk->ops->enable\uff09\u65f6\uff0c\u4f1a\u5c06clk->hw\u4f20\u9012\u8fc7\u53bb\u3002\\r\\n\\r\\n\u4e00\u822c\u5728\u5177\u4f53\u7684\u9a71\u52a8\u4e2d\u4f1a\u5b9a\u4e49\u9488\u5bf9\u7279\u5b9aclk\uff08\u5982foo\uff09\u7684\u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u4e2d\u5305\u542bclk_hw\u6210\u5458\u4ee5\u53ca\u786c\u4ef6\u79c1\u6709\u6570\u636e\uff1a\\r\\n\\r\\n```\\r\\nstruct clk_foo {\\r\\n       struct clk_hw hw;\\r\\n       ... hardware specific data goes here ...\\r\\n};\\r\\n```\\r\\n\\r\\n\u5e76\u5b9a\u4e49to_clk_foo\uff08\uff09\u5b8f\uff0c\u4ee5\u4fbf\u901a\u8fc7clk_hw\u83b7\u53d6clk_foo\uff1a\\r\\n\\r\\n```\\r\\n#define to_clk_foo(_hw) container_of(_hw, struct clk_foo, hw)\\r\\n```\\r\\n\\r\\n\u5728\u9488\u5bf9clk_foo\u7684clk_ops\u7684\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5\u901a\u8fc7clk_hw\u548cto_clk_foo\u6700\u7ec8\u83b7\u5f97\u786c\u4ef6\u79c1\u6709\u6570\u636e\uff0c\u5e76\u8bbf\u95ee\u786c\u4ef6\u8bfb\u5199\u5bc4\u5b58\u5668\u4ee5\u6539\u53d8\u65f6\u949f\u7684\u72b6\u6001\uff1a\\r\\n\\r\\n```\\r\\nstruct clk_ops clk_foo_ops {\\r\\n       .enable         = &clk_foo_enable;\\r\\n       .disable        = &clk_foo_disable;\\r\\n};\\r\\nint clk_foo_enable(struct clk_hw *hw)\\r\\n{\\r\\n       struct clk_foo *foo;\\r\\n       foo = to_clk_foo(hw);\\r\\n       /* \u8bbf\u95ee\u786c\u4ef6\u8bfb\u5199\u5bc4\u5b58\u5668\u4ee5\u6539\u53d8\u65f6\u949f\u7684\u72b6\u6001*/\\r\\n       \u2026\\r\\n       return 0;\\r\\n};\\r\\n```\\r\\n\\r\\n\u5728\u5177\u4f53\u7684clk\u9a71\u52a8\u4e2d\uff0c\u9700\u8981\u901a\u8fc7clk_register\uff08\uff09\u4ee5\u53ca\u5b83\u7684\u53d8\u4f53\u6ce8\u518c\u786c\u4ef6\u4e0a\u6240\u6709\u7684clk\uff0c\u901a\u8fc7clk_register_clkdev\uff08\uff09\u6ce8\u518cclk\u7684\u4e00\u4e2alookup\uff08\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7con_id\u6216\u8005dev_id\u5b57\u7b26\u4e32\u5bfb\u627e\u5230\u8fd9\u4e2aclk\uff09\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstruct clk *clk_register(struct device *dev, struct clk_hw *hw);\\r\\nint clk_register_clkdev(struct clk *clk, const char *con_id,\\r\\n         const char *dev_fmt, ...);\\r\\n```\\r\\n\\r\\n\u53e6\u5916\uff0c\u9488\u5bf9\u4e0d\u540c\u7684clk\u7c7b\u578b\uff08\u5982\u56fa\u5b9a\u9891\u7387\u7684clk\u3001clk\u95e8\u3001clk\u9a71\u52a8\u7b49\uff09\uff0cclk\u5b50\u7cfb\u7edf\u53c8\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5feb\u6377\u51fd\u6570\u4ee5\u5b8c\u6210clk_register\uff08\uff09\u7684\u8fc7\u7a0b\uff1a\\r\\n\\r\\n```\\r\\nstruct clk *clk_register_fixed_rate(struct device *dev, const char *name,\\r\\n                const char *parent_name, unsigned long flags,\\r\\n                unsigned long fixed_rate);\\r\\nstruct clk *clk_register_gate(struct device *dev, const char *name,\\r\\n                const char *parent_name, unsigned long flags,\\r\\n                void __iomem *reg, u8 bit_idx,\\r\\n                u8 clk_gate_flags, spinlock_t *lock);\\r\\nstruct clk *clk_register_divider(struct device *dev, const char *name,\\r\\n                const char *parent_name, unsigned long flags,\\r\\n                void __iomem *reg, u8 shift, u8 width,\\r\\n                u8 clk_divider_flags, spinlock_t *lock);\\r\\n```\\r\\n\\r\\n\u4ee5drivers/clk/clk-prima2.c\u4e3a\u4f8b\uff0c\u4e0e\u8be5\u9a71\u52a8\u5bf9\u5e94\u7684\u82af\u7247SiRFprimaII\u7684\u5916\u56f4\u63a5\u4e86\u4e00\u4e2a26MHz\u7684\u6676\u632f\u548c\u4e00\u4e2a32.768kHz\u7684RTC\u6676\u632f\uff0c\u572826MHz\u6676\u632f\u7684\u540e\u9762\u53c8\u67093\u4e2aPLL\uff0c\u5f53\u7136PLL\u540e\u9762\u53c8\u63a5\u4e86\u66f4\u591a\u7684clk\u8282\u70b9\uff0c\u5219\u5b83\u7684\u76f8\u5173\u9a71\u52a8\u4ee3\u7801\u5982\u6e05\u535520.26\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.26\u3000clk\u9a71\u52a8\u6848\u4f8b\\r\\n\\r\\n```\\r\\n 1static unsigned long pll_clk_recalc_rate(struct clk_hw *hw,\\r\\n 2unsigned long parent_rate)\\r\\n 3{\\r\\n 4unsigned long fin = parent_rate;\\r\\n 5struct clk_pll *clk = to_pllclk(hw);\\r\\n 6\u2026\\r\\n 7}\\r\\n 8\\r\\n 9static long pll_clk_round_rate(struct clk_hw *hw, unsigned long rate,\\r\\n10unsigned long *parent_rate)\\r\\n11{\\r\\n12\u2026\\r\\n13}\\r\\n14\\r\\n15static int pll_clk_set_rate(struct clk_hw *hw, unsigned long rate,\\r\\n16unsigned long parent_rate)\\r\\n17{\\r\\n18\u2026\\r\\n19}\\r\\n20\\r\\n21static struct clk_ops std_pll_ops = {\\r\\n22.recalc_rate = pll_clk_recalc_rate,\\r\\n23.round_rate = pll_clk_round_rate,\\r\\n24.set_rate = pll_clk_set_rate,\\r\\n25};\\r\\n26\\r\\n27static const char *pll_clk_parents[] = {\\r\\n28\\"osc\\",\\r\\n29};\\r\\n30\\r\\n31static struct clk_init_data clk_pll1_init = {\\r\\n32.name = \\"pll1\\",\\r\\n33.ops = &std_pll_ops,\\r\\n34.parent_names = pll_clk_parents,\\r\\n35.num_parents = ARRAY_SIZE(pll_clk_parents),\\r\\n36};\\r\\n37\\r\\n38static struct clk_init_data clk_pll2_init = {\\r\\n39.name = \\"pll2\\",\\r\\n40.ops = &std_pll_ops,\\r\\n41.parent_names = pll_clk_parents,\\r\\n42.num_parents = ARRAY_SIZE(pll_clk_parents),\\r\\n43};\\r\\n44\\r\\n45static struct clk_init_data clk_pll3_init = {\\r\\n46.name = \\"pll3\\",\\r\\n47.ops = &std_pll_ops,\\r\\n48.parent_names = pll_clk_parents,\\r\\n49.num_parents = ARRAY_SIZE(pll_clk_parents),\\r\\n50};\\r\\n51\\r\\n52static struct clk_pll clk_pll1 = {\\r\\n53.regofs = SIRFSOC_CLKC_PLL1_CFG0,\\r\\n54.hw = {\\r\\n55        .init = &clk_pll1_init,\\r\\n56},\\r\\n57};\\r\\n58\\r\\n59static struct clk_pll clk_pll2 = {\\r\\n60.regofs = SIRFSOC_CLKC_PLL2_CFG0,\\r\\n61.hw = {\\r\\n62        .init = &clk_pll2_init,\\r\\n63},\\r\\n64};\\r\\n65\\r\\n66static struct clk_pll clk_pll3 = {\\r\\n67.regofs = SIRFSOC_CLKC_PLL3_CFG0,\\r\\n68.hw = {\\r\\n69        .init = &clk_pll3_init,\\r\\n70},\\r\\n71};\\r\\n72void __init sirfsoc_of_clk_init(void)\\r\\n73{\\r\\n74\u2026\\r\\n75\\r\\n76/* These are always available (RTC and 26MHz OSC)*/\\r\\n77clk = clk_register_fixed_rate(NULL, \\"rtc\\", NULL,\\r\\n78       CLK_IS_ROOT, 32768);\\r\\n79BUG_ON(!clk);\\r\\n80clk = clk_register_fixed_rate(NULL, \\"osc\\", NULL,\\r\\n81       CLK_IS_ROOT, 26000000);\\r\\n82BUG_ON(!clk);\\r\\n83\\r\\n84clk = clk_register(NULL, &clk_pll1.hw);\\r\\n85BUG_ON(!clk);\\r\\n86clk = clk_register(NULL, &clk_pll2.hw);\\r\\n87BUG_ON(!clk);\\r\\n88clk = clk_register(NULL, &clk_pll3.hw);\\r\\n89BUG_ON(!clk);\\r\\n90\u2026\\r\\n91}\\r\\n```\\r\\n\\r\\n\u53e6\u5916\uff0c\u76ee\u524d\u5185\u6838\u66f4\u52a0\u5021\u5bfc\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u8bbe\u5907\u6811\u6765\u63cf\u8ff0\u7535\u8def\u677f\u4e0a\u7684\u65f6\u949f\u6811\uff0c\u4ee5\u53ca\u65f6\u949f\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u7ed1\u5b9a\u5173\u7cfb\u3002\u901a\u5e38\u6211\u4eec\u9700\u8981\u5728clk\u63a7\u5236\u5668\u7684\u8282\u70b9\u4e2d\u5b9a\u4e49#clock-cells\u5c5e\u6027\uff0c\u5e76\u4e14\u5728clk\u9a71\u52a8\u4e2d\u901a\u8fc7of_clk_add_provider\uff08\uff09\u6ce8\u518c\u65f6\u949f\u63a7\u5236\u5668\u4e3a\u4e00\u4e2a\u65f6\u949f\u6811\u7684\u63d0\u4f9b\u8005\uff08Provider\uff09\uff0c\u5e76\u5efa\u7acb\u7cfb\u7edf\u4e2d\u5404\u4e2a\u65f6\u949f\u548c\u7d22\u5f15\u7684\u6620\u5c04\u8868\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\n       Clock                   ID\\r\\n       ---------------------------\\r\\n       rtc                     0\\r\\n       osc                     1\\r\\n       pll1                    2\\r\\n       pll2                    3\\r\\n       pll3                    4\\r\\n       mem                     5\\r\\n       sys                     6\\r\\n       security                7\\r\\n       dsp                     8\\r\\n       gps                     9\\r\\n       mf                      10\\r\\n       \u2026\\r\\n```\\r\\n\\r\\n\u5728\u6bcf\u4e2a\u5177\u4f53\u7684\u8bbe\u5907\u4e2d\uff0c\u5bf9\u5e94\u7684.dts\u8282\u70b9\u4e0a\u7684clocks=<&clks index>\u5c5e\u6027\u6307\u5411\u5176\u5f15\u7528\u7684clk\u63a7\u5236\u5668\u8282\u70b9\u4ee5\u53ca\u4f7f\u7528\u7684\u65f6\u949f\u7684\u7d22\u5f15\uff0c\u5982\uff1a\\r\\n\\r\\n```\\r\\ngps@a8010000 {\\r\\n        compatible = \\"sirf,prima2-gps\\";\\r\\n        reg = <0xa8010000 0x10000>;\\r\\n        interrupts = <7>;\\r\\n        clocks = <&clks 9>;\\r\\n};\\r\\n```\\r\\n\\r\\n\u8981\u7279\u522b\u5f3a\u8c03\u7684\u662f\uff0c\u5728\u5177\u4f53\u7684\u8bbe\u5907\u9a71\u52a8\u4e2d\uff0c\u4e00\u5b9a\u8981\u901a\u8fc7\u901a\u7528clk API\u6765\u64cd\u4f5c\u6240\u6709\u7684\u65f6\u949f\uff0c\u800c\u4e0d\u8981\u76f4\u63a5\u901a\u8fc7\u8bfb\u5199clk\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\u6765\u8fdb\u884c\uff0c\u8fd9\u4e9bAPI\u5305\u62ec\uff1a\\r\\n\\r\\n```\\r\\nstruct clk *clk_get(struct device *dev, const char *id);\\r\\nstruct clk *devm_clk_get(struct device *dev, const char *id);\\r\\nint clk_enable(struct clk *clk);\\r\\nint clk_prepare(struct clk *clk);\\r\\nvoid clk_unprepare(struct clk *clk);\\r\\nvoid clk_disable(struct clk *clk);\\r\\nstatic inline int clk_prepare_enable(struct clk *clk);\\r\\nstatic inline void clk_disable_unprepare(struct clk *clk);\\r\\nunsigned long clk_get_rate(struct clk *clk);\\r\\nint clk_set_rate(struct clk *clk, unsigned long rate);\\r\\nstruct clk *clk_get_parent(struct clk *clk);\\r\\nint clk_set_parent(struct clk *clk, struct clk *parent);\\r\\n```\\r\\n\\r\\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u540d\u79f0\u4e2d\u542b\u6709prepare\u3001unprepare\u5b57\u7b26\u4e32\u7684API\u662f\u5185\u6838\u540e\u6765\u624d\u52a0\u5165\u7684\uff0c\u8fc7\u53bb\u53ea\u6709clk_enable\uff08\uff09\u548cclk_disable\uff08\uff09\u3002\u53ea\u6709clk_enable\uff08\uff09\u548cclk_disable\uff08\uff09\u5e26\u6765\u7684\u95ee\u9898\u662f\uff0c\u6709\u65f6\u5019\uff0c\u67d0\u4e9b\u786c\u4ef6\u4f7f\u80fd/\u7981\u6b62\u65f6\u949f\u53ef\u80fd\u4f1a\u5f15\u8d77\u7761\u7720\u4ee5\u4f7f\u5f97\u4f7f\u80fd/\u7981\u6b62\u4e0d\u80fd\u5728\u539f\u5b50\u4e0a\u4e0b\u6587\u8fdb\u884c\u3002\u52a0\u4e0aprepare\u540e\uff0c\u628a\u8fc7\u53bb\u7684clk_enable\uff08\uff09\u5206\u89e3\u6210\u4e0d\u53ef\u5728\u539f\u5b50\u4e0a\u4e0b\u6587\u8c03\u7528\u7684clk_prepare\uff08\uff09\uff08\u8be5\u51fd\u6570\u53ef\u80fd\u7761\u7720\uff09\u548c\u53ef\u4ee5\u5728\u539f\u5b50\u4e0a\u4e0b\u6587\u8c03\u7528\u7684clk_enable\uff08\uff09\u3002\u800cclk_prepare_enable\uff08\uff09\u5219\u540c\u65f6\u5b8c\u6210\u51c6\u5907\u548c\u4f7f\u80fd\u7684\u5de5\u4f5c\uff0c\u5f53\u7136\u4e5f\u53ea\u80fd\u5728\u53ef\u80fd\u7761\u7720\u7684\u4e0a\u4e0b\u6587\u8c03\u7528\u8be5API\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.3\u3000USB\u8bbe\u5907\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.3\u3000USB\u8bbe\u5907\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.3\u3000USB\u8bbe\u5907\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.3\u3000USB\u8bbe\u5907\u9a71\u52a8.md","title":"16.3.1\u3000USB\u8bbe\u5907\u9a71\u52a8\u7684\u6574\u4f53\u7ed3\u6784","description":"\u8fd9\u91cc\u6240\u8bf4\u7684USB\u8bbe\u5907\u9a71\u52a8\u6307\u7684\u662f\u4ece\u4e3b\u673a\u89d2\u5ea6\u6765\u770b\uff0c\u600e\u6837\u8bbf\u95ee\u88ab\u63d2\u5165\u7684USB\u8bbe\u5907\uff0c\u800c\u4e0d\u662f\u6307USB\u8bbe\u5907\u5185\u90e8\u672c\u8eab\u8fd0\u884c\u7684\u56fa\u4ef6\u7a0b\u5e8f\u3002Linux\u7cfb\u7edf\u5b9e\u73b0\u4e86\u51e0\u7c7b\u901a\u7528\u7684USB\u8bbe\u5907\u9a71\u52a8\uff08\u4e5f\u79f0\u5ba2\u6237\u9a71\u52a8\uff09\uff0c\u5212\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u8bbe\u5907\u7c7b\u3002","date":"2025-09-15T14:44:14.125Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":39.745,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.8\u3000\u65f6\u949f\u9a71\u52a8"},"nextItem":{"title":"9.3.1\u3000\u5728globalfifo\u9a71\u52a8\u4e2d\u589e\u52a0\u5f02\u6b65\u901a\u77e5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.3\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u9a71\u52a8"}},"content":"\u8fd9\u91cc\u6240\u8bf4\u7684USB\u8bbe\u5907\u9a71\u52a8\u6307\u7684\u662f\u4ece\u4e3b\u673a\u89d2\u5ea6\u6765\u770b\uff0c\u600e\u6837\u8bbf\u95ee\u88ab\u63d2\u5165\u7684USB\u8bbe\u5907\uff0c\u800c\u4e0d\u662f\u6307USB\u8bbe\u5907\u5185\u90e8\u672c\u8eab\u8fd0\u884c\u7684\u56fa\u4ef6\u7a0b\u5e8f\u3002Linux\u7cfb\u7edf\u5b9e\u73b0\u4e86\u51e0\u7c7b\u901a\u7528\u7684USB\u8bbe\u5907\u9a71\u52a8\uff08\u4e5f\u79f0\u5ba2\u6237\u9a71\u52a8\uff09\uff0c\u5212\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u8bbe\u5907\u7c7b\u3002\\r\\n\\r\\n- \xb7\u97f3\u9891\u8bbe\u5907\u7c7b\u3002\\r\\n- \xb7\u901a\u4fe1\u8bbe\u5907\u7c7b\u3002\\r\\n- \xb7HID\uff08\u4eba\u673a\u63a5\u53e3\uff09\u8bbe\u5907\u7c7b\u3002\\r\\n- \xb7\u663e\u793a\u8bbe\u5907\u7c7b\u3002\\r\\n- \xb7\u6d77\u91cf\u5b58\u50a8\u8bbe\u5907\u7c7b\u3002\\r\\n- \xb7\u7535\u6e90\u8bbe\u5907\u7c7b\u3002\\r\\n- \xb7\u6253\u5370\u8bbe\u5907\u7c7b\u3002\\r\\n- \xb7\u96c6\u7ebf\u5668\u8bbe\u5907\u7c7b\u3002\\r\\n\\r\\n\u4e00\u822c\u7684\u901a\u7528Linux\u8bbe\u5907\uff08\u5982U\u76d8\u3001USB\u9f20\u6807\u3001USB\u952e\u76d8\u7b49\uff09\u90fd\u4e0d\u9700\u8981\u5de5\u7a0b\u5e08\u518d\u7f16\u5199\u9a71\u52a8\uff0c\u800c\u5de5\u7a0b\u5e08\u9700\u8981\u7f16\u5199\u7684\u662f\u7279\u5b9a\u5382\u5546\u3001\u7279\u5b9a\u82af\u7247\u7684\u9a71\u52a8\uff0c\u800c\u4e14\u5f80\u5f80\u4e5f\u53ef\u4ee5\u53c2\u8003\u5df2\u7ecf\u5728\u5185\u6838\u4e2d\u63d0\u4f9b\u7684\u9a71\u52a8\u6a21\u677f\u3002\\r\\n\\r\\nLinux\u5185\u6838\u4e3a\u5404\u7c7bUSB\u8bbe\u5907\u5206\u914d\u4e86\u76f8\u5e94\u7684\u8bbe\u5907\u53f7\uff0c\u5982ACM USB\u8c03\u5236\u89e3\u8c03\u5668\u7684\u4e3b\u8bbe\u5907\u53f7\u4e3a166\uff08\u9ed8\u8ba4\u8bbe\u5907\u540d/dev/ttyACMn\uff09\u3001USB\u6253\u5370\u673a\u7684\u4e3b\u8bbe\u5907\u53f7\u4e3a180\uff0c\u6b21\u8bbe\u5907\u53f7\u4e3a0~15\uff08\u9ed8\u8ba4\u8bbe\u5907\u540d/dev/lpn\uff09\u3001USB\u4e32\u53e3\u7684\u4e3b\u8bbe\u5907\u53f7\u4e3a188\uff08\u9ed8\u8ba4\u8bbe\u5907\u540d/dev/ttyUSBn\uff09\u7b49\uff0c\u8be6\u89c1http://www.lanana.org/ \u7f51\u7ad9\u7684\u8bbe\u5907\u5217\u8868\u3002\\r\\n\\r\\n\u5728debugfs\u4e0b\uff0c/sys/kernel/debug/usb/devices\u5305\u542b\u4e86USB\u7684\u8bbe\u5907\u4fe1\u606f\uff0c\u5728Ubuntu\u4e0a\u63d2\u5165\u4e00\u4e2aU\u76d8\u540e\uff0c\u6211\u4eec\u5728/sys/kernel/debug/usb/devices\u4e2d\u53ef\u770b\u5230\u7c7b\u4f3c\u4fe1\u606f\u3002\\r\\n\\r\\n```\\r\\n$ sudo cat /sys/kernel/debug/usb/devices\\r\\nT:  Bus=02 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12   MxCh= 8\\r\\nB:  Alloc=  2/900 us ( 0%), #Int=  1, #Iso=  0\\r\\nD:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1\\r\\nP:  Vendor=1d6b ProdID=0001 Rev= 4.00\\r\\nS:  Manufacturer=Linux 4.0.0-rc1 ohci_hcd\\r\\nS:  Product=OHCI PCI host controller\\r\\nS:  SerialNumber=0000:00:06.0\\r\\nC:* #Ifs= 1 Cfg#= 1 Atr=e0 MxPwr=  0mA\\r\\nI:* If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub\\r\\nE:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms\u2026\\r\\nT:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=480  MxCh= 0\\r\\nD:  Ver= 2.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1\\r\\nP:  Vendor=0930 ProdID=6545 Rev= 1.00\\r\\nS:  Manufacturer=Kingston\\r\\nS:  Product=DataTraveler 3.0\\r\\nS:  SerialNumber=60A44C3FAE22EEA0797900F7\\r\\nC:* #Ifs= 1 Cfg#= 1 Atr=80 MxPwr=498mA\\r\\nI:* If#= 0 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage\\r\\nE:  Ad=81(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms\\r\\nE:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u5206\u6790\u4e0a\u8ff0\u8bb0\u5f55\u4fe1\u606f\uff0c\u53ef\u4ee5\u5f97\u5230\u7cfb\u7edf\u4e2dUSB\u7684\u5b8c\u6574\u4fe1\u606f\u3002USBView\uff08http://www.kroah.com/linux-usb/ \uff09\u662f\u4e00\u4e2a\u56fe\u5f62\u5316\u7684GTK\u5de5\u5177\uff0c\u53ef\u4ee5\u663e\u793aUSB\u4fe1\u606f\u3002\\r\\n\\r\\n\u6b64\u5916\uff0c\u5728sysfs\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u540c\u6837\u5305\u542b\u4e86USB\u76f8\u5173\u4fe1\u606f\u7684\u63cf\u8ff0\uff0c\u4f46\u53ea\u9650\u4e8e\u63a5\u53e3\u7ea7\u522b\u3002USB\u8bbe\u5907\u548cUSB\u63a5\u53e3\u5728sysfs\u4e2d\u5747\u8868\u793a\u4e3a\u5355\u72ec\u7684USB\u8bbe\u5907\uff0c\u5176\u76ee\u5f55\u547d\u540d\u89c4\u5219\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\n\u6839\u96c6\u7ebf\u5668\\r\\n-\u96c6\u7ebf\u5668\u7aef\u53e3\u53f7\uff08\\r\\n-\u96c6\u7ebf\u5668\u7aef\u53e3\u53f7\\r\\n-...\uff09\\r\\n:\u914d\u7f6e\\r\\n.\u63a5\u53e3\\r\\n```\\r\\n\\r\\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a/sys/bus/usb\u76ee\u5f55\u4e0b\u7684\u6811\u5f62\u7ed3\u6784\u5b9e\u4f8b\uff0c\u5176\u4e2d\u7684\u591a\u6570\u6587\u4ef6\u90fd\u662f\u951a\u5b9a\u5230/sys/devices\u53ca/sys/drivers\u4e2d\u76f8\u5e94\u6587\u4ef6\u7684\u94fe\u63a5\u3002\\r\\n\\r\\n```\\r\\n.\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n devices\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n 1-0:1.0 -> ../../../devices/pci0000:00/0000:00:0b.0/usb1/1-0:1.0\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n 1-1 -> ../../../devices/pci0000:00/0000:00:0b.0/usb1/1-1\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n 1-1:1.0 -> ../../../devices/pci0000:00/0000:00:0b.0/usb1/1-1/1-1:1.0\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n 2-0:1.0 -> ../../../devices/pci0000:00/0000:00:06.0/usb2/2-0:1.0\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n 2-1 -> ../../../devices/pci0000:00/0000:00:06.0/usb2/2-1\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n 2-1:1.0 -> ../../../devices/pci0000:00/0000:00:06.0/usb2/2-1/2-1:1.0\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n usb1 -> ../../../devices/pci0000:00/0000:00:0b.0/usb1\u2502\\r\\n\\r\\n\\r\\n   \u2514\u2500\u2500\\r\\n\\r\\n\\r\\n usb2 -> ../../../devices/pci0000:00/0000:00:06.0/usb2\u251c\u2500\u2500\\r\\n\\r\\n\\r\\n drivers\u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n hub\u2502\\r\\n\\r\\n\\r\\n   \u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n 1-0:1.0 -> ../../../../devices/pci0000:00/0000:00:0b.0/usb1/1-0:1.0\u2502\\r\\n\\r\\n\\r\\n   \u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n 2-0:1.0 -> ../../../../devices/pci0000:00/0000:00:06.0/usb2/2-0:1.0\u2502\\r\\n\\r\\n\\r\\n   \u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n\\r\\n\\r\\n bind\u2502\\r\\n\\r\\n\\r\\n   \u2502\\r\\n\\r\\n\\r\\n   \u251c\u2500\u2500\\r\\n module -> ../../../../module/usbcore\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n new_id\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n remove_id\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n uevent\u2502\\r\\n   \u2502\\r\\n   \u2514\u2500\u2500\\r\\n unbind\u2502\\r\\n   \u251c\u2500\u2500\\r\\n usb\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n 1-1 -> ../../../../devices/pci0000:00/0000:00:0b.0/usb1/1-1\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n 2-1 -> ../../../../devices/pci0000:00/0000:00:06.0/usb2/2-1\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n bind\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n uevent\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n unbind\u2502\\r\\n   \u2502\\r\\n   \u251c\u2500\u2500\\r\\n usb1 -> ../../../../devices/pci0000:00/0000:00:0b.0/usb1\u2502\\r\\n   \u2502\\r\\n   \u2514\u2500\u2500\\r\\n\\r\\n usb2 -> ../../../../devices/pci0000:00/0000:00:06.0/usb2\\r\\n```\\r\\n\\r\\n\u6b63\u5982tty_driver\u3001i2c_driver\u7b49\uff0c\u5728Linux\u5185\u6838\u4e2d\uff0c\u4f7f\u7528usb_driver\u7ed3\u6784\u4f53\u63cf\u8ff0\u4e00\u4e2aUSB\u8bbe\u5907\u9a71\u52a8\uff0cusb_driver\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535516.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.11\u3000usb_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_driver {\\r\\n 2        const char *name;\\r\\n 3\\r\\n 4        int (*probe) (struct usb_interface *intf,\\r\\n 5                    const struct usb_device_id *id);\\r\\n 6\\r\\n 7        void (*disconnect) (struct usb_interface *intf);\\r\\n 8\\r\\n 9        int (*unlocked_ioctl) (struct usb_interface *intf, unsigned int code,\\r\\n10                     void *buf);\\r\\n11\\r\\n12        int (*suspend) (struct usb_interface *intf, pm_message_t message);\\r\\n13        int (*resume) (struct usb_interface *intf);\\r\\n14        int (*reset_resume)(struct usb_interface *intf);\\r\\n15\\r\\n16        int (*pre_reset)(struct usb_interface *intf);\\r\\n17        int (*post_reset)(struct usb_interface *intf);\\r\\n18\\r\\n19        const struct usb_device_id *id_table;\\r\\n20\\r\\n21        struct usb_dynids dynids;\\r\\n22        struct usbdrv_wrap drvwrap;\\r\\n23        unsigned int no_dynamic_id:1;\\r\\n24        unsigned int supports_autosuspend:1;\\r\\n25        unsigned int disable_hub_initiated_lpm:1;\\r\\n26        unsigned int soft_unbind:1;\\r\\n27};\\r\\n```\\r\\n\\r\\n\u5728\u7f16\u5199\u65b0\u7684USB\u8bbe\u5907\u9a71\u52a8\u65f6\uff0c\u4e3b\u8981\u5e94\u8be5\u5b8c\u6210\u7684\u5de5\u4f5c\u662fprobe\uff08\uff09\u548cdisconnect\uff08\uff09\u51fd\u6570\uff0c\u5373\u63a2\u6d4b\u548c\u65ad\u5f00\u51fd\u6570\uff0c\u5b83\u4eec\u5206\u522b\u5728\u8bbe\u5907\u88ab\u63d2\u5165\u548c\u62d4\u51fa\u7684\u65f6\u5019\u8c03\u7528\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u548c\u91ca\u653e\u8f6f\u786c\u4ef6\u8d44\u6e90\u3002\u5bf9usb_driver\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u53ef\u901a\u8fc7\u4e0b\u9762\u4e24\u4e2a\u51fd\u6570\u5b8c\u6210\uff1a\\r\\n\\r\\n```\\r\\nint usb_register(struct usb_driver *new_driver)\\r\\nvoid usb_deregister(struct usb_driver *driver);\\r\\n```\\r\\n\\r\\nusb_driver\u7ed3\u6784\u4f53\u4e2d\u7684id_table\u6210\u5458\u63cf\u8ff0\u4e86\u8fd9\u4e2aUSB\u9a71\u52a8\u6240\u652f\u6301\u7684USB\u8bbe\u5907\u5217\u8868\uff0c\u5b83\u6307\u5411\u4e00\u4e2ausb_device_id\u6570\u7ec4\uff0cusb_device_id\u7ed3\u6784\u4f53\u5305\u542b\u6709USB\u8bbe\u5907\u7684\u5236\u9020\u5546ID\u3001\u4ea7\u54c1ID\u3001\u4ea7\u54c1\u7248\u672c\u3001\u8bbe\u5907\u7c7b\u3001\u63a5\u53e3\u7c7b\u7b49\u4fe1\u606f\u53ca\u5176\u8981\u5339\u914d\u6807\u5fd7\u6210\u5458match_flags\uff08\u6807\u660e\u8981\u4e0e\u54ea\u4e9b\u6210\u5458\u5339\u914d\uff0c\u5305\u542bDEV_LO\u3001DEV_HI\u3001DEV_CLASS\u3001DEV_SUBCLASS\u3001DEV_PROTOCOL\u3001INT_CLASS\u3001INT_SUBCLASS\u3001INT_PROTOCOL\uff09\u3002\u53ef\u4ee5\u501f\u52a9\u4e0b\u9762\u4e00\u7ec4\u5b8f\u6765\u751f\u6210usb_device_id\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\uff1a\\r\\n\\r\\n```\\r\\nUSB_DEVICE(vendor, product)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u6839\u636e\u5236\u9020\u5546ID\u548c\u4ea7\u54c1ID\u751f\u6210\u4e00\u4e2ausb_device_id\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\uff0c\u5728\u6570\u7ec4\u4e2d\u589e\u52a0\u8be5\u5143\u7d20\u5c06\u610f\u5473\u7740\u8be5\u9a71\u52a8\u53ef\u652f\u6301\u4e0e\u5236\u9020\u5546ID\u3001\u4ea7\u54c1ID\u5339\u914d\u7684\u8bbe\u5907\u3002\\r\\n\\r\\n```\\r\\nUSB_DEVICE_VER(vendor, product, lo, hi)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u6839\u636e\u5236\u9020\u5546ID\u3001\u4ea7\u54c1ID\u3001\u4ea7\u54c1\u7248\u672c\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c\u751f\u6210\u4e00\u4e2ausb_device_id\u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\uff0c\u5728\u6570\u7ec4\u4e2d\u589e\u52a0\u8be5\u5143\u7d20\u5c06\u610f\u5473\u7740\u8be5\u9a71\u52a8\u53ef\u652f\u6301\u4e0e\u5236\u9020\u5546ID\u3001\u4ea7\u54c1ID\u5339\u914d\u548clo~hi\u8303\u56f4\u5185\u7248\u672c\u7684\u8bbe\u5907\u3002\\r\\n\\r\\n```\\r\\nUSB_DEVICE_INFO(class, subclass, protocol)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5339\u914d\u8bbe\u5907\u6307\u5b9a\u7c7b\u578b\u7684usb_device_id\u7ed3\u6784\u4f53\u5b9e\u4f8b\u3002\\r\\n\\r\\n```\\r\\nUSB_INTERFACE_INFO(class, subclass, protocol)\\r\\n```\\r\\n\\r\\n\u8be5\u5b8f\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5339\u914d\u63a5\u53e3\u6307\u5b9a\u7c7b\u578b\u7684usb_device_id\u7ed3\u6784\u4f53\u5b9e\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.12\u6240\u793a\u4e3a\u4e24\u4e2a\u7528\u4e8e\u63cf\u8ff0\u67d0USB\u9a71\u52a8\u652f\u6301\u7684USB\u8bbe\u5907\u7684usb_device_id\u7ed3\u6784\u4f53\u6570\u7ec4\u5b9e\u4f8b\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.12\u3000usb_device_id\u7ed3\u6784\u4f53\u6570\u7ec4\u5b9e\u4f8b\\r\\n\\r\\n```\\r\\n 1/* \u672c\u9a71\u52a8\u652f\u6301\u7684USB\u8bbe\u5907\u5217\u8868*/\\r\\n 2\\r\\n 3/* \u5b9e\u4f8b1 */\\r\\n 4static struct usb_device_id id_table [] = {\\r\\n 5   { USB_DEVICE(VENDOR_ID, PRODUCT_ID) },\\r\\n 6   { },\\r\\n 7};\\r\\n 8MODULE_DEVICE_TABLE (usb, id_table);\\r\\n 9\\r\\n10/* \u5b9e\u4f8b2 */\\r\\n11static struct usb_device_id id_table [] = {\\r\\n12   { .idVendor = 0x10D2, .match_flags = USB_DEVICE_ID_MATCH_VENDOR, },\\r\\n13   { },\\r\\n14};\\r\\n15MODULE_DEVICE_TABLE (usb, id_table);\\r\\n```\\r\\n\\r\\n\u5f53USB\u6838\u5fc3\u68c0\u6d4b\u5230\u67d0\u4e2a\u8bbe\u5907\u7684\u5c5e\u6027\u548c\u67d0\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u7684usb_device_id\u7ed3\u6784\u4f53\u6240\u643a\u5e26\u7684\u4fe1\u606f\u4e00\u81f4\u65f6\uff0c\u8fd9\u4e2a\u9a71\u52a8\u7a0b\u5e8f\u7684probe\uff08\uff09\u51fd\u6570\u5c31\u88ab\u6267\u884c\uff08\u5982\u679c\u8fd9\u4e2aUSB\u9a71\u52a8\u662f\u4e2a\u6a21\u5757\u7684\u8bdd\uff0c\u76f8\u5173\u7684.ko\u8fd8\u5e94\u88abLinux\u81ea\u52a8\u52a0\u8f7d\uff09\u3002\u62d4\u6389\u8bbe\u5907\u6216\u8005\u5378\u6389\u9a71\u52a8\u6a21\u5757\u540e\uff0cUSB\u6838\u5fc3\u5c31\u6267\u884cdisconnect\uff08\uff09\u51fd\u6570\u6765\u54cd\u5e94\u8fd9\u4e2a\u52a8\u4f5c\u3002\\r\\n\\r\\n\u4e0a\u8ff0usb_driver\u7ed3\u6784\u4f53\u4e2d\u7684\u51fd\u6570\u662fUSB\u8bbe\u5907\u9a71\u52a8\u4e2d\u4e0eUSB\u76f8\u5173\u7684\u90e8\u5206\uff0c\u800cUSB\u53ea\u662f\u4e00\u4e2a\u603b\u7ebf\uff0cUSB\u8bbe\u5907\u9a71\u52a8\u771f\u6b63\u7684\u4e3b\u4f53\u5de5\u4f5c\u4ecd\u7136\u662fUSB\u8bbe\u5907\u672c\u8eab\u6240\u5c5e\u7c7b\u578b\u7684\u9a71\u52a8\uff0c\u5982\u5b57\u7b26\u8bbe\u5907\u3001tty\u8bbe\u5907\u3001\u5757\u8bbe\u5907\u3001\u8f93\u5165\u8bbe\u5907\u7b49\u3002\u56e0\u6b64USB\u8bbe\u5907\u9a71\u52a8\u5305\u542b\u5176\u4f5c\u4e3a\u603b\u7ebf\u4e0a\u6302\u63a5\u8bbe\u5907\u7684\u9a71\u52a8\u548c\u672c\u8eab\u6240\u5c5e\u8bbe\u5907\u7c7b\u578b\u7684\u9a71\u52a8\u4e24\u90e8\u5206\u3002\\r\\n\\r\\n\u4e0eplatform_driver\u3001i2c_driver\u7c7b\u4f3c\uff0cusb_driver\u8d77\u5230\u4e86\u201c\u7275\u7ebf\u201d\u7684\u4f5c\u7528\uff0c\u5373\u5728probe\uff08\uff09\u91cc\u6ce8\u518c\u76f8\u5e94\u7684\u5b57\u7b26\u3001tty\u7b49\u8bbe\u5907\uff0c\u5728disconnect\uff08\uff09\u6ce8\u9500\u76f8\u5e94\u7684\u5b57\u7b26\u3001tty\u7b49\u8bbe\u5907\uff0c\u800c\u539f\u5148\u5bf9\u8bbe\u5907\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u4e00\u822c\u76f4\u63a5\u53d1\u751f\u5728\u6a21\u5757\u52a0\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u4e2d\u3002\\r\\n\\r\\n\u5c3d\u7ba1USB\u672c\u8eab\u6240\u5c5e\u8bbe\u5907\u9a71\u52a8\u7684\u7ed3\u6784\u4e0e\u5176\u6302\u4e0d\u6302\u5728USB\u603b\u7ebf\u4e0a\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff0c\u4f46\u662f\u636e\u6b64\u5728\u8bbf\u95ee\u65b9\u5f0f\u4e0a\u5374\u6709\u5f88\u5927\u7684\u53d8\u5316\uff0c\u4f8b\u5982\uff0c\u5bf9\u4e8eUSB\u63a5\u53e3\u7684\u5b57\u7b26\u8bbe\u5907\u800c\u8a00\uff0c\u5c3d\u7ba1\u4ecd\u7136\u662fwrite\uff08\uff09\u3001read\uff08\uff09\u3001ioctl\uff08\uff09\u8fd9\u4e9b\u51fd\u6570\uff0c\u4f46\u662f\u5728\u8fd9\u4e9b\u51fd\u6570\u4e2d\uff0c\u8d2f\u7a7f\u59cb\u7ec8\u7684\u662f\u79f0\u4e3aURB\u7684USB\u8bf7\u6c42\u5757\u3002\\r\\n\\r\\n\u5982\u56fe16.3\u6240\u793a\uff0c\u5728\u8fd9\u68f5\u6811\u91cc\uff0c\u6211\u4eec\u628a\u6811\u6839\u6bd4\u4f5c\u4e3b\u673a\u63a7\u5236\u5668\uff0c\u6811\u53f6\u6bd4\u4f5c\u5177\u4f53\u7684USB\u8bbe\u5907\uff0c\u6811\u5e72\u548c\u6811\u679d\u5c31\u662fUSB\u603b\u7ebf\u3002\u6811\u53f6\u672c\u8eab\u4e0e\u6811\u679d\u901a\u8fc7usb_driver\u8fde\u63a5\uff0c\u800c\u6811\u53f6\u672c\u8eab\u7684\u9a71\u52a8\uff08\u8bfb\u5199\u3001\u63a7\u5236\uff09\u5219\u9700\u8981\u901a\u8fc7\u5176\u6811\u53f6\u8bbe\u5907\u672c\u8eab\u6240\u5c5e\u7c7b\u8bbe\u5907\u9a71\u52a8\u6765\u5b8c\u6210\u3002\u6811\u6839\u548c\u6811\u53f6\u4e4b\u95f4\u7684\u201c\u901a\u4fe1\u201d\u4f9d\u9760\u5728\u6811\u5e72\u548c\u6811\u679d\u91cc\u201c\u6d41\u6dcc\u201d\u7684URB\u6765\u5b8c\u6210\u3002\\r\\n\\r\\n![1745247374129](./figure/1745247374129.png)\\r\\n\\r\\n\u56fe16.3\u3000USB\u8bbe\u5907\u9a71\u52a8\u7ed3\u6784\\r\\n\\r\\n\u7531\u6b64\u53ef\u89c1\uff0cusb_driver\u672c\u8eab\u53ea\u662f\u6709\u627e\u5230USB\u8bbe\u5907\u3001\u7ba1\u7406USB\u8bbe\u5907\u8fde\u63a5\u548c\u65ad\u5f00\u7684\u4f5c\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u516c\u53f8\u5165\u53e3\u5904\u7684\u201c\u6253\u5361\u673a\u201d\uff0c\u53ef\u4ee5\u83b7\u5f97\u5458\u5de5\uff08USB\u8bbe\u5907\uff09\u7684\u4e0a/\u4e0b\u73ed\u60c5\u51b5\u3002\u6811\u53f6\u548c\u5458\u5de5\u4e00\u6837\uff0c\u53ef\u4ee5\u662f\u7814\u53d1\u5de5\u7a0b\u5e08\u4e5f\u53ef\u4ee5\u662f\u9500\u552e\u5de5\u7a0b\u5e08\uff0c\u800c\u4f5c\u4e3aUSB\u8bbe\u5907\u7684\u6811\u53f6\u53ef\u4ee5\u662f\u5b57\u7b26\u6811\u53f6\u3001\u7f51\u7edc\u6811\u53f6\u6216\u5757\u6811\u53f6\uff0c\u56e0\u6b64\u5fc5\u987b\u5b9e\u73b0\u76f8\u5e94\u8bbe\u5907\u7c7b\u7684\u9a71\u52a8\u3002\\r\\n\\r\\n# 16.3.2\u3000USB\u8bf7\u6c42\u5757\\r\\n\\r\\n## 1.urb\u7ed3\u6784\u4f53\\r\\n\\r\\nUSB\u8bf7\u6c42\u5757\uff08USB Request Block\uff0cURB\uff09\u662fUSB\u8bbe\u5907\u9a71\u52a8\u4e2d\u7528\u6765\u63cf\u8ff0\u4e0eUSB\u8bbe\u5907\u901a\u4fe1\u6240\u7528\u7684\u57fa\u672c\u8f7d\u4f53\u548c\u6838\u5fc3\u6570\u636e\u7ed3\u6784\uff0c\u975e\u5e38\u7c7b\u4f3c\u4e8e\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u4e2d\u7684sk_buff\u7ed3\u6784\u4f53\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.13\u3000URB\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct urb {\\r\\n 2        ...\\r\\n 3        /* public: documented fields in the urb that can be used by drivers */\\r\\n 4        struct list_head urb_list;      /* list head for use by the urb\'s\\r\\n 5                                      * current owner */\\r\\n 6        ...\\r\\n 7        struct usb_host_endpoint *ep;   /* (internal) pointer to endpoint */\\r\\n 8        unsigned int pipe;              /* (in) pipe information */\\r\\n 9        unsigned int stream_id;         /* (in) stream ID */\\r\\n10        int status;                     /* (return) non-ISO status */\\r\\n11        unsigned int transfer_flags;    /* (in) URB_SHORT_NOT_OK | ...*/\\r\\n12        void *transfer_buffer;          /* (in) associated data buffer */\\r\\n13        dma_addr_t transfer_dma;        /* (in) dma addr for transfer_buffer */\\r\\n14        struct scatterlist *sg;         /* (in) scatter gather buffer list */\\r\\n15        int num_mapped_sgs;             /* (internal) mapped sg entries */\\r\\n16        int num_sgs;                    /* (in) number of entries in the sg list */\\r\\n17        u32 transfer_buffer_length;     /* (in) data buffer length */\\r\\n18        u32 actual_length;              /* (return) actual transfer length */\\r\\n19        unsigned char *setup_packet;    /* (in) setup packet (control only) */\\r\\n20        dma_addr_t setup_dma;           /* (in) dma addr for setup_packet */\\r\\n21        int start_frame;                /* (modify) start frame (ISO) */\\r\\n22        int number_of_packets;          /* (in) number of ISO packets */\\r\\n23        int interval;                   /* (modify) transfer interval\\r\\n24                                       * (INT/ISO) */\\r\\n25        int error_count;                /* (return) number of ISO errors */\\r\\n26        void *context;                  /* (in) context for completion */\\r\\n27        usb_complete_t complete;        /* (in) completion routine */\\r\\n28        struct usb_iso_packet_descriptor iso_frame_desc[0];\\r\\n29                                        /* (in) ISO ONLY */\\r\\n30};\\r\\n```\\r\\n\\r\\n## 2.URB\u5904\u7406\u6d41\u7a0b\\r\\n\\r\\nUSB\u8bbe\u5907\u4e2d\u7684\u6bcf\u4e2a\u7aef\u70b9\u90fd\u5904\u7406\u4e00\u4e2aURB\u961f\u5217\uff0c\u5728\u961f\u5217\u88ab\u6e05\u7a7a\u4e4b\u524d\uff0c\u4e00\u4e2aURB\u7684\u5178\u578b\u751f\u547d\u5468\u671f\u5982\u4e0b\u3002\\r\\n\\r\\n### 1\uff09\u88ab\u4e00\u4e2aUSB\u8bbe\u5907\u9a71\u52a8\u521b\u5efa\u3002\\r\\n\\r\\n\u521b\u5efaURB\u7ed3\u6784\u4f53\u7684\u51fd\u6570\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nstruct urb *usb_alloc_urb(int iso_packets, gfp_t mem_flags);\\r\\n```\\r\\n\\r\\niso_packets\u662f\u8fd9\u4e2aURB\u5e94\u5f53\u5305\u542b\u7684\u7b49\u65f6\u6570\u636e\u5305\u7684\u6570\u76ee\uff0c\u82e5\u4e3a0\u8868\u793a\u4e0d\u521b\u5efa\u7b49\u65f6\u6570\u636e\u5305\u3002mem_flags\u53c2\u6570\u662f\u5206\u914d\u5185\u5b58\u7684\u6807\u5fd7\uff0c\u548ckmalloc\uff08\uff09\u51fd\u6570\u7684\u5206\u914d\u6807\u5fd7\u53c2\u6570\u542b\u4e49\u76f8\u540c\u3002\u5982\u679c\u5206\u914d\u6210\u529f\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2aURB\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u5426\u5219\u8fd4\u56de0\u3002\\r\\n\\r\\nURB\u7ed3\u6784\u4f53\u5728\u9a71\u52a8\u4e2d\u4e0d\u5b9c\u9759\u6001\u521b\u5efa\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u7834\u574fUSB\u6838\u5fc3\u7ed9URB\u4f7f\u7528\u7684\u5f15\u7528\u8ba1\u6570\u65b9\u6cd5\u3002\\r\\n\\r\\nusb_alloc_urb\uff08\uff09\u7684\u201c\u53cd\u51fd\u6570\u201d\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid usb_free_urb(struct urb *urb);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7528\u4e8e\u91ca\u653e\u7531usb_alloc_urb\uff08\uff09\u5206\u914d\u7684URB\u7ed3\u6784\u4f53\u3002\\r\\n\\r\\n```\\r\\nvoid usb_free_urb(struct urb *urb);\\r\\n```\\r\\n\\r\\n\u8be5\u51fd\u6570\u7528\u4e8e\u91ca\u653e\u7531usb_alloc_urb\uff08\uff09\u5206\u914d\u7684URB\u7ed3\u6784\u4f53\u3002\\r\\n\\r\\n### 2\uff09\u521d\u59cb\u5316\uff0c\u88ab\u5b89\u6392\u7ed9\u4e00\u4e2a\u7279\u5b9aUSB\u8bbe\u5907\u7684\u7279\u5b9a\u7aef\u70b9\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u4e2d\u65adURB\uff0c\u4f7f\u7528usb_fill_int_urb\uff08\uff09\u51fd\u6570\u6765\u521d\u59cb\u5316URB\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\nvoid usb_fill_int_urb(struct urb *urb, struct usb_device *dev,\\r\\n unsigned int pipe, void *transfer_buffer,\\r\\n int buffer_length, usb_complete_t complete,\\r\\n void *context, int interval);\\r\\n```\\r\\n\\r\\nURB\u53c2\u6570\u6307\u5411\u8981\u88ab\u521d\u59cb\u5316\u7684URB\u7684\u6307\u9488\uff1bdev\u6307\u5411\u8fd9\u4e2aURB\u8981\u88ab\u53d1\u9001\u5230\u7684USB\u8bbe\u5907\uff1bpipe\u662f\u8fd9\u4e2aURB\u8981\u88ab\u53d1\u9001\u5230\u7684USB\u8bbe\u5907\u7684\u7279\u5b9a\u7aef\u70b9\uff1btransfer_buffer\u662f\u6307\u5411\u53d1\u9001\u6570\u636e\u6216\u63a5\u6536\u6570\u636e\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0c\u548cURB\u4e00\u6837\uff0c\u5b83\u4e5f\u4e0d\u80fd\u662f\u9759\u6001\u7f13\u51b2\u533a\uff0c\u5fc5\u987b\u4f7f\u7528kmalloc\uff08\uff09\u6765\u5206\u914d\uff1bbuffer_length\u662ftransfer_buffer\u6307\u9488\u6240\u6307\u5411\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff1bcomplete\u6307\u9488\u6307\u5411\u5f53\u8fd9\u4e2aURB\u5b8c\u6210\u65f6\u88ab\u8c03\u7528\u7684\u5b8c\u6210\u5904\u7406\u51fd\u6570\uff1bcontext\u662f\u5b8c\u6210\u5904\u7406\u51fd\u6570\u7684\u201c\u4e0a\u4e0b\u6587\u201d\uff1binterval\u662f\u8fd9\u4e2aURB\u5e94\u5f53\u88ab\u8c03\u5ea6\u7684\u95f4\u9694\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u53c2\u6570\u4e2d\u7684pipe\u4f7f\u7528usb_sndintpipe\uff08\uff09\u6216usb_rcvintpipe\uff08\uff09\u521b\u5efa\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u6279\u91cfURB\uff0c\u4f7f\u7528usb_fill_bulk_urb\uff08\uff09\u51fd\u6570\u6765\u521d\u59cb\u5316\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\nvoid usb_fill_bulk_urb(struct urb *urb, struct usb_device *dev,\\r\\n unsigned int pipe, void *transfer_buffer,\\r\\n int buffer_length, usb_complete_t complete,\\r\\n void *context);\\r\\n```\\r\\n\\r\\n\u9664\u4e86\u6ca1\u6709\u5bf9\u5e94\u4e8e\u8c03\u5ea6\u95f4\u9694\u7684interval\u53c2\u6570\u4ee5\u5916\uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570\u548cusb_fill_int_urb\uff08\uff09\u51fd\u6570\u7684\u53c2\u6570\u542b\u4e49\u76f8\u540c\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u53c2\u6570\u4e2d\u7684pipe\u4f7f\u7528usb_sndbulkpipe\uff08\uff09\u6216\u8005usb_rcvbulkpipe\uff08\uff09\u51fd\u6570\u6765\u521b\u5efa\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u63a7\u5236URB\uff0c\u4f7f\u7528usb_fill_control_urb\uff08\uff09\u51fd\u6570\u6765\u521d\u59cb\u5316\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\nvoid usb_fill_control_urb(struct urb *urb, struct usb_device *dev,\\r\\n unsigned int pipe, unsigned char *setup_packet,\\r\\n void *transfer_buffer, int buffer_length,\\r\\n usb_complete_t complete, void *context);\\r\\n```\\r\\n\\r\\n\u9664\u4e86\u589e\u52a0\u4e86\u65b0\u7684setup_packet\u53c2\u6570\u4ee5\u5916\uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570\u548cusb_fill_bulk_urb\uff08\uff09\u51fd\u6570\u7684\u53c2\u6570\u542b\u4e49\u76f8\u540c\u3002setup_packet\u53c2\u6570\u6307\u5411\u5373\u5c06\u88ab\u53d1\u9001\u5230\u7aef\u70b9\u7684\u8bbe\u7f6e\u6570\u636e\u5305\u3002\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u53c2\u6570\u4e2d\u7684pipe\u4f7f\u7528usb_sndctrlpipe\uff08\uff09\u6216usb_rcvictrlpipe\uff08\uff09\u51fd\u6570\u6765\u521b\u5efa\u3002\\r\\n\\r\\n\u7b49\u65f6URB\u6ca1\u6709\u50cf\u4e2d\u65ad\u3001\u63a7\u5236\u548c\u6279\u91cfURB\u7684\u521d\u59cb\u5316\u51fd\u6570usb_fill_iso_urb\uff08\uff09\uff0c\u6211\u4eec\u53ea\u80fd\u624b\u52a8\u5bf9\u5b83\u521d\u59cb\u5316\uff0c\u800c\u540e\u624d\u80fd\u63d0\u4ea4\u7ed9USB\u6838\u5fc3\u3002\u4ee3\u7801\u6e05\u535516.14\u7ed9\u51fa\u4e86\u521d\u59cb\u5316\u7b49\u65f6URB\u7684\u4f8b\u5b50\uff0c\u5b83\u6765\u81eadrivers/media/usb/uvc/uvc_video.c\u6587\u4ef6\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.14\u3000\u521d\u59cb\u5316\u7b49\u65f6URB\\r\\n\\r\\n```\\r\\n 1        for (i = 0; i < UVC_URBS; ++i) {\\r\\n 2               urb = usb_alloc_urb(npackets, gfp_flags);\\r\\n 3               if (urb == NULL) {\\r\\n 4                      uvc_uninit_video(stream, 1);\\r\\n 5                      return -ENOMEM;\\r\\n 6               }\\r\\n 7\\r\\n 8               urb->dev = stream->dev->udev;\\r\\n 9               urb->context = stream;\\r\\n10               urb->pipe = usb_rcvisocpipe(stream->dev->udev,\\r\\n11                                 ep->desc.bEndpointAddress);\\r\\n12#ifndef CONfiG_DMA_NONCOHERENT\\r\\n13               urb->transfer_flags = URB_ISO_ASAP | URB_NO_TRANSFER_DMA_MAP;\\r\\n14               urb->transfer_dma = stream->urb_dma[i];\\r\\n15#else\\r\\n16               urb->transfer_flags = URB_ISO_ASAP;\\r\\n17#endif\\r\\n18               urb->interval = ep->desc.bInterval;\\r\\n19               urb->transfer_buffer = stream->urb_buffer[i];\\r\\n20               urb->complete = uvc_video_complete;\\r\\n21               urb->number_of_packets = npackets;\\r\\n22               urb->transfer_buffer_length = size;\\r\\n23\\r\\n24               for (j = 0; j < npackets; ++j) {\\r\\n25                      urb->iso_frame_desc[j].offset = j * psize;\\r\\n26                      urb->iso_frame_desc[j].length = psize;\\r\\n27               }\\r\\n28\\r\\n29               stream->urb[i] = urb;\\r\\n30        }\\r\\n```\\r\\n\\r\\n### 3\uff09\u88abUSB\u8bbe\u5907\u9a71\u52a8\u63d0\u4ea4\u7ed9USB\u6838\u5fc3\u3002\\r\\n\\r\\n\u5728\u5b8c\u6210\u7b2c1\uff09\u30012\uff09\u6b65\u7684\u521b\u5efa\u548c\u521d\u59cb\u5316URB\u540e\uff0cURB\u4fbf\u53ef\u4ee5\u63d0\u4ea4\u7ed9USB\u6838\u5fc3\u4e86\uff0c\u53ef\u901a\u8fc7usb_submit_urb\uff08\uff09\u51fd\u6570\u6765\u5b8c\u6210\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\nint usb_submit_urb(struct urb *urb, gfp_t mem_flags);\\r\\n```\\r\\n\\r\\nURB\u53c2\u6570\u662f\u6307\u5411URB\u7684\u6307\u9488\uff0cmem_flags\u53c2\u6570\u4e0e\u4f20\u9012\u7ed9kmalloc\uff08\uff09\u51fd\u6570\u53c2\u6570\u7684\u610f\u4e49\u76f8\u540c\uff0c\u5b83\u7528\u4e8e\u544a\u77e5USB\u6838\u5fc3\u5982\u4f55\u5728\u6b64\u65f6\u5206\u914d\u5185\u5b58\u7f13\u51b2\u533a\u3002\\r\\n\\r\\n\u5728\u63d0\u4ea4URB\u5230USB\u6838\u5fc3\u540e\uff0c\u76f4\u5230\u5b8c\u6210\u51fd\u6570\u88ab\u8c03\u7528\u4e4b\u524d\uff0c\u4e0d\u8981\u8bbf\u95eeURB\u4e2d\u7684\u4efb\u4f55\u6210\u5458\u3002\\r\\n\\r\\nusb_submit_urb\uff08\uff09\u5728\u539f\u5b50\u4e0a\u4e0b\u6587\u548c\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u90fd\u53ef\u4ee5\u88ab\u8c03\u7528\uff0cmem_flags\u53d8\u91cf\u9700\u6839\u636e\u8c03\u7528\u73af\u5883\u8fdb\u884c\u76f8\u5e94\u7684\u8bbe\u7f6e\uff0c\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\n- \xb7GFP_ATOMIC\uff1a\u5728\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u3001\u5e95\u534a\u90e8\u3001tasklet\u3001\u5b9a\u65f6\u5668\u5904\u7406\u51fd\u6570\u4ee5\u53caURB\u5b8c\u6210\u51fd\u6570\u4e2d\uff0c\u5728\u8c03\u7528\u8005\u6301\u6709\u81ea\u65cb\u9501\u6216\u8005\u8bfb\u5199\u9501\u65f6\u4ee5\u53ca\u5f53\u9a71\u52a8\u5c06current->state\u4fee\u6539\u4e3a\u975eTASK_RUNNING\u65f6\uff0c\u5e94\u4f7f\u7528\u6b64\u6807\u5fd7\u3002\\r\\n- \xb7GFP_NOIO\uff1a\u5728\u5b58\u50a8\u8bbe\u5907\u7684\u5757I/O\u548c\u9519\u8bef\u5904\u7406\u8def\u5f84\u4e2d\uff0c\u5e94\u4f7f\u7528\u6b64\u6807\u5fd7\uff1b\\r\\n- \xb7GFP_KERNEL\uff1a\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u7406\u7531\u4f7f\u7528GFP_ATOMIC\u548cGFP_NOIO\uff0c\u5c31\u4f7f\u7528GFP_KERNEL\u3002\\r\\n\\r\\n\u5982\u679cusb_submit_urb\uff08\uff09\u8c03\u7528\u6210\u529f\uff0c\u5373URB\u7684\u63a7\u5236\u6743\u88ab\u79fb\u4ea4\u7ed9USB\u6838\u5fc3\uff0c\u8be5\u51fd\u6570\u8fd4\u56de0\uff1b\u5426\u5219\uff0c\u8fd4\u56de\u9519\u8bef\u53f7\u3002\\r\\n\\r\\n### 4\uff09\u63d0\u4ea4\u7531USB\u6838\u5fc3\u6307\u5b9a\u7684USB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u3002\\r\\n\\r\\n### 5\uff09\u88abUSB\u4e3b\u673a\u63a7\u5236\u5668\u5904\u7406\uff0c\u8fdb\u884c\u4e00\u6b21\u5230USB\u8bbe\u5907\u7684\u4f20\u9001\u3002\\r\\n\\r\\n\u7b2c4\uff09~5\uff09\u6b65\u7531USB\u6838\u5fc3\u548c\u4e3b\u673a\u63a7\u5236\u5668\u5b8c\u6210\uff0c\u4e0d\u53d7USB\u8bbe\u5907\u9a71\u52a8\u7684\u63a7\u5236\u3002\\r\\n\\r\\n### 6\uff09\u5f53URB\u5b8c\u6210\uff0cUSB\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u901a\u77e5USB\u8bbe\u5907\u9a71\u52a8\u3002\\r\\n\\r\\n\u5728\u5982\u4e0b3\u79cd\u60c5\u51b5\u4e0b\uff0cURB\u5c06\u7ed3\u675f\uff0cURB\u5b8c\u6210\u56de\u8c03\u51fd\u6570\u5c06\u88ab\u8c03\u7528\uff08\u5b8c\u6210\u56de\u8c03\u662f\u901a\u8fc7usb_fill_xxx_urb\u7684\u53c2\u6570\u4f20\u5165\u7684\uff09\u3002\u5728\u5b8c\u6210\u56de\u8c03\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u8981\u8fdb\u884curb->status\u7684\u5224\u65ad\u3002\\r\\n\\r\\n- \xb7URB\u88ab\u6210\u529f\u53d1\u9001\u7ed9\u8bbe\u5907\uff0c\u5e76\u4e14\u8bbe\u5907\u8fd4\u56de\u6b63\u786e\u7684\u786e\u8ba4\u3002\u5982\u679curb->status\u4e3a0\uff0c\u610f\u5473\u7740\u5bf9\u4e8e\u4e00\u4e2a\u8f93\u51faURB\uff0c\u6570\u636e\u88ab\u6210\u529f\u53d1\u9001\uff1b\u5bf9\u4e8e\u4e00\u4e2a\u8f93\u5165URB\uff0c\u8bf7\u6c42\u7684\u6570\u636e\u88ab\u6210\u529f\u6536\u5230\u3002\\r\\n- \xb7\u5982\u679c\u53d1\u9001\u6570\u636e\u5230\u8bbe\u5907\u6216\u4ece\u8bbe\u5907\u63a5\u6536\u6570\u636e\u65f6\u53d1\u751f\u4e86\u9519\u8bef\uff0curb->status\u5c06\u8bb0\u5f55\u9519\u8bef\u503c\u3002\\r\\n- \xb7URB\u88ab\u4eceUSB\u6838\u5fc3\u201c\u53bb\u9664\u8fde\u63a5\u201d\uff0c\u8fd9\u53d1\u751f\u5728\u9a71\u52a8\u901a\u8fc7usb_unlink_urb\uff08\uff09\u6216usb_kill_urb\uff08\uff09\u51fd\u6570\u53d6\u6d88\u6216URB\u867d\u5df2\u63d0\u4ea4\u800cUSB\u8bbe\u5907\u88ab\u62d4\u51fa\u7684\u60c5\u51b5\u4e0b\\r\\n\\r\\nusb_unlink_urb\uff08\uff09\u548cusb_kill_urb\uff08\uff09\u8fd9\u4e24\u4e2a\u51fd\u6570\u7528\u4e8e\u53d6\u6d88\u5df2\u63d0\u4ea4\u7684URB\uff0c\u5176\u53c2\u6570\u4e3a\u8981\u88ab\u53d6\u6d88\u7684URB\u6307\u9488\u3002usb_unlink_urb\uff08\uff09\u662f\u5f02\u6b65\u7684\uff0c\u641e\u5b9a\u540e\u5bf9\u5e94\u7684\u5b8c\u6210\u56de\u8c03\u4f1a\u88ab\u8c03\u7528\uff1b\u800cusb_kill_urb\uff08\uff09\u4f1a\u5f7b\u5e95\u7ec8\u6b62URB\u7684\u751f\u547d\u5468\u671f\u5e76\u7b49\u5f85\u8fd9\u4e00\u884c\u4e3a\uff0c\u5b83\u901a\u5e38\u5728\u8bbe\u5907\u7684disconnect\uff08\uff09\u51fd\u6570\u4e2d\u88ab\u8c03\u7528\u3002\\r\\n\\r\\n\u5f53URB\u751f\u547d\u7ed3\u675f\u65f6\uff08\u5904\u7406\u5b8c\u6210\u6216\u88ab\u89e3\u9664\u94fe\u63a5\uff09\uff0c\u5728URB\u7684\u5b8c\u6210\u56de\u8c03\u4e2d\u901a\u8fc7URB\u7ed3\u6784\u4f53\u7684status\u6210\u5458\u53ef\u4ee5\u83b7\u77e5\u5176\u539f\u56e0\uff0c\u59820\u8868\u793a\u4f20\u8f93\u6210\u529f\uff0c-ENOENT\u8868\u793a\u88abusb_kill_urb\uff08\uff09\u6740\u6b7b\uff0c-ECONNRESET\u8868\u793a\u88abusb_unlink_urb\uff08\uff09\u6740\u6b7b\uff0c-EPROTO\u8868\u793a\u4f20\u8f93\u4e2d\u53d1\u751f\u4e86bitstuff\u9519\u8bef\u6216\u8005\u786c\u4ef6\u672a\u80fd\u53ca\u65f6\u6536\u5230\u54cd\u5e94\u6570\u636e\u5305\uff0c-ENODEV\u8868\u793aUSB\u8bbe\u5907\u5df2\u88ab\u79fb\u9664\uff0c-EXDEV\u8868\u793a\u7b49\u65f6\u4f20\u8f93\u4ec5\u5b8c\u6210\u4e86\u4e00\u90e8\u5206\u7b49\u3002\\r\\n\\r\\n\u5bf9\u4ee5\u4e0aURB\u7684\u5904\u7406\u6b65\u9aa4\u8fdb\u884c\u4e00\u4e2a\u603b\u7ed3\uff0c\u56fe16.4\u7ed9\u51fa\u4e86\u4e00\u4e2aURB\u7684\u5b8c\u6574\u5904\u7406\u6d41\u7a0b\uff0c\u865a\u7ebf\u6846\u7684usb_unlink_urb\uff08\uff09\u548cusb_kill_urb\uff08\uff09\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u53d1\u751f\uff0c\u5b83\u4eec\u53ea\u662f\u5728URB\u6b63\u5728\u88abUSB\u6838\u5fc3\u548c\u4e3b\u673a\u63a7\u5236\u5668\u5904\u7406\u65f6\u53c8\u88ab\u9a71\u52a8\u7a0b\u5e8f\u53d6\u6d88\u7684\u60c5\u51b5\u4e0b\u624d\u53d1\u751f\u3002\\r\\n\\r\\n![1745247828456](./figure/1745247828456.png)\\r\\n\\r\\n\u56fe16.4\u3000URB\u5904\u7406\u6d41\u7a0b\\r\\n\\r\\n## 3.\u7b80\u5355\u7684\u6279\u91cf\u4e0e\u63a7\u5236URB\\r\\n\\r\\n\u6709\u65f6USB\u9a71\u52a8\u7a0b\u5e8f\u53ea\u662f\u4eceUSB\u8bbe\u5907\u4e0a\u63a5\u6536\u6216\u5411USB\u8bbe\u5907\u53d1\u9001\u4e00\u4e9b\u7b80\u5355\u7684\u6570\u636e\uff0c\u8fd9\u65f6\u5019\uff0c\u6ca1\u6709\u5fc5\u8981\u5c06URB\u521b\u5efa\u3001\u521d\u59cb\u5316\u3001\u63d0\u4ea4\u3001\u5b8c\u6210\u5904\u7406\u7684\u6574\u4e2a\u6d41\u7a0b\u8d70\u4e00\u904d\uff0c\u800c\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u66f4\u7b80\u5355\u7684\u51fd\u6570\uff0c\u5982\u4e0b\u6240\u793a\u3002\\r\\n\\r\\n### \uff081\uff09usb_bulk_msg\uff08\uff09\\r\\n\\r\\n```\\r\\nint usb_bulk_msg(struct usb_device *usb_dev, unsigned int pipe,\\r\\n                 void *data, int len, int *actual_length,\\r\\n                 int timeout);\\r\\n```\\r\\n\\r\\nusb_dev\u53c2\u6570\u4e3a\u6279\u91cf\u6d88\u606f\u8981\u53d1\u9001\u7684USB\u8bbe\u5907\u7684\u6307\u9488\uff0cpipe\u4e3a\u6279\u91cf\u6d88\u606f\u8981\u53d1\u9001\u5230\u7684USB\u8bbe\u5907\u7684\u7aef\u70b9\uff0cdata\u53c2\u6570\u4e3a\u6307\u5411\u8981\u53d1\u9001\u6216\u63a5\u6536\u7684\u6570\u636e\u7f13\u51b2\u533a\u7684\u6307\u9488\uff0clen\u53c2\u6570\u4e3adata\u53c2\u6570\u6240\u6307\u5411\u7684\u7f13\u51b2\u533a\u7684\u957f\u5ea6\uff0cactual_length\u7528\u4e8e\u8fd4\u56de\u5b9e\u9645\u53d1\u9001\u6216\u63a5\u6536\u7684\u5b57\u8282\u6570\uff0ctimeout\u662f\u53d1\u9001\u8d85\u65f6\uff0c\u4ee5jiffies\u4e3a\u5355\u4f4d\uff0c0\u610f\u5473\u7740\u6c38\u8fdc\u7b49\u5f85\u3002\\r\\n\\r\\n\u5982\u679c\u51fd\u6570\u8c03\u7528\u6210\u529f\uff0c\u8fd4\u56de0\uff1b\u5426\u5219\uff0c\u8fd4\u56de1\u4e2a\u8d1f\u7684\u9519\u8bef\u503c\\r\\n\\r\\n## \uff082\uff09usb_control_msg\uff08\uff09\u51fd\u6570\\r\\n\\r\\nusb_control_msg\uff08\uff09\u51fd\u6570\u4e0eusb_bulk_msg\uff08\uff09\u51fd\u6570\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5b83\u63d0\u4f9b\u7ed9\u9a71\u52a8\u53d1\u9001\u548c\u7ed3\u675fUSB\u63a7\u5236\u4fe1\u606f\u800c\u4e0d\u662f\u6279\u91cf\u4fe1\u606f\u7684\u80fd\u529b\uff0c\u8be5\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint usb_control_msg(struct usb_device *dev, unsigned int pipe, __u8 request,\\r\\n                    __u8 requesttype, __u16 value, __u16 index, void *data,\\r\\n                    __u16 size, int timeout);\\r\\n```\\r\\n\\r\\ndev\u6307\u5411\u63a7\u5236\u6d88\u606f\u53d1\u5f80\u7684USB\u8bbe\u5907\uff0cpipe\u662f\u63a7\u5236\u6d88\u606f\u8981\u53d1\u5f80\u7684USB\u8bbe\u5907\u7684\u7aef\u70b9\uff0crequest\u662f\u8fd9\u4e2a\u63a7\u5236\u6d88\u606f\u7684USB\u8bf7\u6c42\u503c\uff0crequesttype\u662f\u8fd9\u4e2a\u63a7\u5236\u6d88\u606f\u7684USB\u8bf7\u6c42\u7c7b\u578b\uff0cvalue\u662f\u8fd9\u4e2a\u63a7\u5236\u6d88\u606f\u7684USB\u6d88\u606f\u503c\uff0cindex\u662f\u8fd9\u4e2a\u63a7\u5236\u6d88\u606f\u7684USB\u6d88\u606f\u7d22\u5f15\u503c\uff0cdata\u6307\u5411\u8981\u53d1\u9001\u6216\u63a5\u6536\u7684\u6570\u636e\u7f13\u51b2\u533a\uff0csize\u662fdata\u53c2\u6570\u6240\u6307\u5411\u7684\u7f13\u51b2\u533a\u7684\u5927\u5c0f\uff0ctimeout\u662f\u53d1\u9001\u8d85\u65f6\uff0c\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c0\u610f\u5473\u7740\u6c38\u8fdc\u7b49\u5f85\u3002\\r\\n\\r\\n\u53c2\u6570request\u3001requesttype\u3001value\u548cindex\u4e0eUSB\u89c4\u8303\u4e2d\u5b9a\u4e49\u7684USB\u63a7\u5236\u6d88\u606f\u76f4\u63a5\u5bf9\u5e94\u3002\\r\\n\\r\\n\u5982\u679c\u51fd\u6570\u8c03\u7528\u6210\u529f\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u53d1\u9001\u5230\u8bbe\u5907\u6216\u4ece\u8bbe\u5907\u63a5\u6536\u5230\u7684\u5b57\u8282\u6570\uff1b\u5426\u5219\uff0c\u8fd4\u56de\u4e00\u4e2a\u8d1f\u7684\u9519\u8bef\u503c\u3002\\r\\n\\r\\n\u5bf9usb_bulk_msg\uff08\uff09\u548cusb_control_msg\uff08\uff09\u51fd\u6570\u7684\u4f7f\u7528\u8981\u7279\u522b\u614e\u91cd\uff0c\u7531\u4e8e\u5b83\u4eec\u662f\u540c\u6b65\u7684\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u548c\u6301\u6709\u81ea\u65cb\u9501\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002\u800c\u4e14\uff0c\u8be5\u51fd\u6570\u4e5f\u4e0d\u80fd\u88ab\u4efb\u4f55\u5176\u4ed6\u51fd\u6570\u53d6\u6d88\uff0c\u56e0\u6b64\uff0c\u52a1\u5fc5\u8981\u4f7f\u5f97\u9a71\u52a8\u7a0b\u5e8f\u7684disconnect\uff08\uff09\u51fd\u6570\u638c\u63e1\u8db3\u591f\u7684\u4fe1\u606f\uff0c\u4ee5\u5224\u65ad\u548c\u7b49\u5f85\u8be5\u8c03\u7528\u7684\u7ed3\u675f\u3002\\r\\n\\r\\n# 16.3.3\u3000\u63a2\u6d4b\u548c\u65ad\u5f00\u51fd\u6570\\r\\n\\r\\n\u5728USB\u8bbe\u5907\u9a71\u52a8usb_driver\u7ed3\u6784\u4f53\u7684probe\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u5e94\u8be5\u5b8c\u6210\u5982\u4e0b\u5de5\u4f5c\u3002\\r\\n\\r\\n- \xb7\u63a2\u6d4b\u8bbe\u5907\u7684\u7aef\u70b9\u5730\u5740\u3001\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u521d\u59cb\u5316\u4efb\u4f55\u53ef\u80fd\u7528\u4e8e\u63a7\u5236USB\u8bbe\u5907\u7684\u6570\u636e\u7ed3\u6784\u3002\\r\\n- \xb7\u628a\u5df2\u521d\u59cb\u5316\u7684\u6570\u636e\u7ed3\u6784\u7684\u6307\u9488\u4fdd\u5b58\u5230\u63a5\u53e3\u8bbe\u5907\u4e2d\u3002\\r\\n\\r\\nusb_set_intfdata\uff08\uff09\u51fd\u6570\u53ef\u4ee5\u8bbe\u7f6eusb_interface\u7684\u79c1\u6709\u6570\u636e\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid usb_set_intfdata (struct usb_interface *intf, void *data);\\r\\n```\\r\\n\\r\\n\u8fd9\u4e2a\u51fd\u6570\u7684\u201c\u53cd\u51fd\u6570\u201d\u7528\u4e8e\u5f97\u5230usb_interface\u7684\u79c1\u6709\u6570\u636e\uff0c\u5176\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nvoid *usb_get_intfdata (struct usb_interface *intf);\\r\\n```\\r\\n\\r\\n- \xb7\u6ce8\u518cUSB\u8bbe\u5907\u3002\\r\\n\\r\\n\u5982\u679c\u662f\u7b80\u5355\u7684\u5b57\u7b26\u8bbe\u5907\uff0c\u5219\u53ef\u8c03\u7528usb_register_dev\uff08\uff09\uff0c\u8fd9\u4e2a\u51fd\u6570\u7684\u539f\u578b\u4e3a\uff1a\\r\\n\\r\\n```\\r\\nint usb_register_dev(struct usb_interface *intf,\\r\\n                     struct usb_class_driver *class_driver);\\r\\n```\\r\\n\\r\\n\u4e0a\u8ff0\u51fd\u6570\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3ausb_class_driver\u7ed3\u6784\u4f53\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535516.15\u6240\u793a\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.15\u3000usb_class_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct usb_class_driver {\\r\\n 2        char *name;\\r\\n 3        char *(*devnode)(struct device *dev, umode_t *mode);\\r\\n 4        const struct file_operations *fops;\\r\\n 5        int minor_base;\\r\\n 6};\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8e\u5b57\u7b26\u8bbe\u5907\u800c\u8a00\uff0cusb_class_driver\u7ed3\u6784\u4f53\u7684fops\u6210\u5458\u4e2d\u7684write\uff08\uff09\u3001read\uff08\uff09\u3001ioctl\uff08\uff09\u7b49\u51fd\u6570\u7684\u5730\u4f4d\u5b8c\u5168\u7b49\u540c\u4e8e\u672c\u4e66\u7b2c6\u7ae0\u4e2d\u7684file_operations\u6210\u5458\u51fd\u6570\u3002\\r\\n\\r\\n\u5982\u679c\u662f\u5176\u4ed6\u7c7b\u578b\u7684\u8bbe\u5907\uff0c\u5982tty\u8bbe\u5907\uff0c\u5219\u8c03\u7528\u5bf9\u5e94\u8bbe\u5907\u7684\u6ce8\u518c\u51fd\u6570\u3002\\r\\n\\r\\n\u5728USB\u8bbe\u5907\u9a71\u52a8usb_driver\u7ed3\u6784\u4f53\u7684probe\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u5e94\u8be5\u5b8c\u6210\u5982\u4e0b\u5de5\u4f5c\u3002\\r\\n\\r\\n- \xb7\u91ca\u653e\u6240\u6709\u4e3a\u8bbe\u5907\u5206\u914d\u7684\u8d44\u6e90\u3002\\r\\n- \xb7\u8bbe\u7f6e\u63a5\u53e3\u8bbe\u5907\u7684\u6570\u636e\u6307\u9488\u4e3aNULL\u3002\\r\\n- \xb7\u6ce8\u9500USB\u8bbe\u5907\u3002\\r\\n\\r\\n\u5bf9\u4e8e\u5b57\u7b26\u8bbe\u5907\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528usb_register_dev\uff08\uff09\u51fd\u6570\u7684\u201c\u53cd\u51fd\u6570\u201d\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n```\\r\\nvoid usb_deregister_dev(struct usb_interface *intf,\\r\\n                        struct usb_class_driver *class_driver);\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8e\u5176\u4ed6\u7c7b\u578b\u7684\u8bbe\u5907\uff0c\u5982tty\u8bbe\u5907\uff0c\u5219\u8c03\u7528\u5bf9\u5e94\u8bbe\u5907\u7684\u6ce8\u9500\u51fd\u6570\u3002\\r\\n\\r\\n# 16.3.4\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\\r\\n\\r\\nLinux\u5185\u6838\u6e90\u4ee3\u7801\u4e2d\u7684driver/usb/usb-skeleton.c\u6587\u4ef6\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6700\u57fa\u7840\u7684USB\u9a71\u52a8\u7a0b\u5e8f\uff0c\u5373USB\u9aa8\u67b6\u7a0b\u5e8f\uff0c\u5b83\u53ef\u88ab\u770b\u4f5c\u4e00\u4e2a\u6700\u7b80\u5355\u7684USB\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b\u3002\u5c3d\u7ba1\u5177\u4f53\u7684USB\u8bbe\u5907\u9a71\u52a8\u5343\u5dee\u4e07\u522b\uff0c\u4f46\u5176\u9aa8\u67b6\u5219\u4e07\u53d8\u4e0d\u79bb\u5176\u5b97\\r\\n\\r\\n\u9996\u5148\u770b\u770bUSB\u9aa8\u67b6\u7a0b\u5e8f\u7684usb_driver\u7ed3\u6784\u4f53\u5b9a\u4e49\uff0c\u5982\u4ee3\u7801\u6e05\u535516.16\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.16\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684usb_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1static struct usb_driver skel_driver = {\\r\\n 2        .name =         \\"skeleton\\",\\r\\n 3        .probe =        skel_probe,\\r\\n 4        .disconnect =   skel_disconnect,\\r\\n 5        .suspend =      skel_suspend,\\r\\n 6        .resume =       skel_resume,\\r\\n 7        .pre_reset =    skel_pre_reset,\\r\\n 8        .post_reset =   skel_post_reset,\\r\\n 9        .id_table =     skel_table,\\r\\n10        .supports_autosuspend = 1,\\r\\n11};\\r\\n```\\r\\n\\r\\n\u4ece\u4e0a\u8ff0\u4ee3\u7801\u7b2c9\u884c\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u6240\u652f\u6301\u7684USB\u8bbe\u5907\u7684\u5217\u8868\u6570\u7ec4\u4e3askel_table[]\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535516.17\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.17\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684id_table\\r\\n\\r\\n```\\r\\n 1static struct usb_device_id skel_table [] = {\\r\\n 2    { USB_DEVICE(USB_SKEL_VENDOR_ID, USB_SKEL_PRODUCT_ID) },\\r\\n 3    { }                  /* Terminating entry */\\r\\n 4};\\r\\n 5MODULE_DEVICE_TABLE(usb, skel_table);\\r\\n```\\r\\n\\r\\n\u5bf9\u4e0a\u8ff0usb_driver\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u53d1\u751f\u5728USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\u5185\uff0c\u5176\u5206\u522b\u8c03\u7528\u4e86usb_register\uff08\uff09\u548cusb_deregister\uff08\uff09\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u6ce8\u518c\u548c\u6ce8\u9500\u7684\u4ee3\u7801\u5374\u4e0d\u7528\u5199\u51fa\u6765\uff0c\u76f4\u63a5\u7528\u4e00\u4e2a\u5feb\u6377\u5b8fmodule_usb_driver\u5373\u53ef\uff0c\u5982\u4ee3\u7801\u6e05\u535516.18\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.18\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u6a21\u5757\u52a0\u8f7d\\r\\n\\r\\n```\\r\\n 1static struct usb_driver skel_driver = {\\r\\n 2        .name =        \\"skeleton\\",\\r\\n 3        .probe =       skel_probe,\\r\\n 4        .disconnect =   skel_disconnect,\\r\\n 5        .suspend =     skel_suspend,\\r\\n 6        .resume =      skel_resume,\\r\\n 7        .pre_reset =    skel_pre_reset,\\r\\n 8        .post_reset =   skel_post_reset,\\r\\n 9        .id_table =     skel_table,\\r\\n10        .supports_autosuspend = 1,\\r\\n11};\\r\\n12\\r\\n13module_usb_driver(skel_driver);\\r\\n```\\r\\n\\r\\n\u5728usb_driver\u7684probe\uff08\uff09\u6210\u5458\u51fd\u6570\u4e2d\uff0c\u4f1a\u6839\u636eusb_interface\u7684\u6210\u5458\u5bfb\u627e\u7b2c\u4e00\u4e2a\u6279\u91cf\u8f93\u5165\u548c\u8f93\u51fa\u7aef\u70b9\uff0c\u5c06\u7aef\u70b9\u5730\u5740\u3001\u7f13\u51b2\u533a\u7b49\u4fe1\u606f\u5b58\u5165\u4e3aUSB\u9aa8\u67b6\u7a0b\u5e8f\u5b9a\u4e49\u7684usb_skel\u7ed3\u6784\u4f53\u4e2d\uff0c\u5e76\u5c06usb_skel\u5b9e\u4f8b\u7684\u6307\u9488\u4f20\u5165usb_set_intfdata\uff08\uff09\u4e2d\u4ee5\u4f5c\u4e3aUSB\u63a5\u53e3\u7684\u79c1\u6709\u6570\u636e\uff0c\u6700\u540e\uff0c\u5b83\u4f1a\u6ce8\u518cUSB\u8bbe\u5907\uff0c\u5982\u4ee3\u7801\u6e05\u535516.19\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.19\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684probe\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int skel_probe(struct usb_interface *interface,\\r\\n 2            const struct usb_device_id *id)\\r\\n 3{\\r\\n 4   struct usb_skel *dev;\\r\\n 5   struct usb_host_interface *iface_desc;\\r\\n 6   struct usb_endpoint_descriptor *endpoint;\\r\\n 7   size_t buffer_size;\\r\\n 8   int i;\\r\\n 9   int retval = -ENOMEM;\\r\\n10\\r\\n11   /* allocate memory for our device state and initialize it */\\r\\n12   dev = kzalloc(sizeof(*dev), GFP_KERNEL);\\r\\n13   ...\\r\\n14   kref_init(&dev->kref);\\r\\n15   sema_init(&dev->limit_sem, WRITES_IN_FLIGHT);\\r\\n16   mutex_init(&dev->io_mutex);\\r\\n17   spin_lock_init(&dev->err_lock);\\r\\n18   init_usb_anchor(&dev->submitted);\\r\\n19   init_waitqueue_head(&dev->bulk_in_wait);\\r\\n20\\r\\n21   dev->udev = usb_get_dev(interface_to_usbdev(interface));\\r\\n22   dev->interface = interface;\\r\\n23\\r\\n24   /* set up the endpoint information */\\r\\n25   /* use only the first bulk-in and bulk-out endpoints */\\r\\n26   iface_desc = interface->cur_altsetting;\\r\\n27   for (i = 0; i < iface_desc->desc.bNumEndpoints; ++i) {\\r\\n28       endpoint = &iface_desc->endpoint[i].desc;\\r\\n29\\r\\n30       if (!dev->bulk_in_endpointAddr &&\\r\\n31          usb_endpoint_is_bulk_in(endpoint)) {\\r\\n32           /* we found a bulk in endpoint */\\r\\n33           buffer_size = usb_endpoint_maxp(endpoint);\\r\\n34           dev->bulk_in_size = buffer_size;\\r\\n35           dev->bulk_in_endpointAddr = endpoint->bEndpointAddress;\\r\\n36           dev->bulk_in_buffer = kmalloc(buffer_size, GFP_KERNEL);\\r\\n37           ...\\r\\n38           dev->bulk_in_urb = usb_alloc_urb(0, GFP_KERNEL);\\r\\n39           ...\\r\\n40       }\\r\\n41\\r\\n42       if (!dev->bulk_out_endpointAddr &&\\r\\n43          usb_endpoint_is_bulk_out(endpoint)) {\\r\\n44           /* we found a bulk out endpoint */\\r\\n45           dev->bulk_out_endpointAddr = endpoint->bEndpointAddress;\\r\\n46       }\\r\\n47   }\\r\\n48   ...\\r\\n49\\r\\n50   /* save our data pointer in this interface device */\\r\\n51   usb_set_intfdata(interface, dev);\\r\\n52\\r\\n53   /* we can register the device now, as it is ready */\\r\\n54   retval = usb_register_dev(interface, &skel_class);\\r\\n55   ...\\r\\n56   return 0;\\r\\n57   ...\\r\\n58}\\r\\n```\\r\\n\\r\\nusb_skel\u7ed3\u6784\u4f53\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2a\u79c1\u6709\u6570\u636e\u7ed3\u6784\u4f53\uff0c\u5176\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535516.20\u6240\u793a\uff0c\u5e94\u8be5\u6839\u636e\u5177\u4f53\u7684\u8bbe\u5907\u91cf\u8eab\u5b9a\u5236\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.20\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u81ea\u5b9a\u4e49\u6570\u636e\u7ed3\u6784usb_skel\\r\\n\\r\\n```\\r\\n 1struct usb_skel {\\r\\n 2        struct usb_device      *udev;         /* the usb device for this device */\\r\\n 3        struct usb_interface   *interface;    /* the interface for this device */\\r\\n 4        struct semaphore limit_sem;    /* limiting the number of writes in progress */\\r\\n 5        struct usb_anchor submitted;   /* in case we need to retract our submissions */\\r\\n 6        struct urb  *bulk_in_urb;             /* the urb to read data with */\\r\\n 7        unsigned char  *bulk_in_buffer;       /* the buffer to receive data */\\r\\n 8        size_t bulk_in_size;                  /* the size of the receive buffer */\\r\\n 9        size_t  bulk_in_filled;               /* number of bytes in the buffer */\\r\\n10        size_t   bulk_in_copied;              /* already copied to user space */\\r\\n11        __u8 bulk_in_endpointAddr;         /* the address of the bulk in endpoint */\\r\\n12        __u8  bulk_out_endpointAddr;        /* the address of the bulk out endpoint */\\r\\n13        int                  errors;          /* the last request tanked */\\r\\n14        bool                 ongoing_read;    /* a read is going on */\\r\\n15        spinlock_t            err_lock;       /* lock for errors */\\r\\n16        struct kref           kref;\\r\\n17        struct mutex          io_mutex;       /* synchronize I/O with disconnect */\\r\\n18        wait_queue_head_t      bulk_in_wait;     /* to wait for an ongoing read */\\r\\n19};\\r\\n```\\r\\n\\r\\nUSB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u65ad\u5f00\u51fd\u6570\u4f1a\u5b8c\u6210\u4e0eprobe\uff08\uff09\u51fd\u6570\u76f8\u53cd\u7684\u5de5\u4f5c\uff0c\u5373\u8bbe\u7f6e\u63a5\u53e3\u6570\u636e\u4e3aNULL\uff0c\u6ce8\u9500USB\u8bbe\u5907\uff0c\u5982\u4ee3\u7801\u6e05\u535516.21\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.21\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u65ad\u5f00\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static void skel_disconnect(struct usb_interface *interface)\\r\\n 2{\\r\\n 3        struct usb_skel *dev;\\r\\n 4        int minor = interface->minor;\\r\\n 5\\r\\n 6        dev = usb_get_intfdata(interface);\\r\\n 7        usb_set_intfdata(interface, NULL);\\r\\n 8\\r\\n 9        /* give back our minor */\\r\\n10        usb_deregister_dev(interface, &skel_class);\\r\\n11\\r\\n12        /* prevent more I/O from starting */\\r\\n13        mutex_lock(&dev->io_mutex);\\r\\n14        dev->interface = NULL;\\r\\n15        mutex_unlock(&dev->io_mutex);\\r\\n16\\r\\n17        usb_kill_anchored_urbs(&dev->submitted);\\r\\n18\\r\\n19        /* decrement our usage count */\\r\\n20        kref_put(&dev->kref, skel_delete);\\r\\n21\\r\\n22        dev_info(&interface->dev, \\"USB Skeleton #%d now disconnected\\", minor);\\r\\n23}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.19\u7b2c54\u884cusb_register_dev\uff08interface\uff0c&skel_class\uff09\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5305\u542b\u4e86\u5b57\u7b26\u8bbe\u5907\u7684file_operations\u7ed3\u6784\u4f53\u6307\u9488\uff0c\u800c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u5b9e\u73b0\u4e5f\u662fUSB\u5b57\u7b26\u8bbe\u5907\u7684\u53e6\u4e00\u4e2a\u7ec4\u6210\u6210\u5206\u3002\u4ee3\u7801\u6e05\u535516.22\u7ed9\u51fa\u4e86USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\u64cd\u4f5cfile_operations\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.22\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\u64cd\u4f5c\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1static const struct file_operations skel_fops = {\\r\\n 2        .owner =       THIS_MODULE,\\r\\n 3        .read =        skel_read,\\r\\n 4        .write =       skel_write,\\r\\n 5        .open =        skel_open,\\r\\n 6        .release =     skel_release,\\r\\n 7        .flush =        skel_flush,\\r\\n 8        .llseek =      noop_llseek,\\r\\n 9};\\r\\n```\\r\\n\\r\\n\u7531\u4e8e\u53ea\u662f\u4e00\u4e2a\u8c61\u5f81\u6027\u7684\u9aa8\u67b6\u7a0b\u5e8f\uff0copen\uff08\uff09\u6210\u5458\u51fd\u6570\u7684\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\uff0c\u5b83\u6839\u636eusb_driver\u548c\u6b21\u8bbe\u5907\u53f7\u901a\u8fc7usb_find_interface\uff08\uff09\u83b7\u5f97USB\u63a5\u53e3\uff0c\u4e4b\u540e\u901a\u8fc7usb_get_intfdata\uff08\uff09\u83b7\u5f97\u63a5\u53e3\u7684\u79c1\u6709\u6570\u636e\u5e76\u8d4b\u4e88file->private_data\uff0c\u5982\u4ee3\u7801\u6e05\u535516.23\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.23\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u5b57\u7b26\u8bbe\u5907open\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int skel_open(struct inode *inode, struct file *file)\\r\\n 2{\\r\\n 3        struct usb_skel *dev;\\r\\n 4        struct usb_interface *interface;\\r\\n 5        int subminor;\\r\\n 6        int retval = 0;\\r\\n 7\\r\\n 8        subminor = iminor(inode);\\r\\n 9\\r\\n10        interface = usb_find_interface(&skel_driver, subminor);\\r\\n11        ...\\r\\n12        dev = usb_get_intfdata(interface);\\r\\n13        ...\\r\\n14\\r\\n15        retval = usb_autopm_get_interface(interface);\\r\\n16        if (retval)\\r\\n17               goto exit;\\r\\n18\\r\\n19        /* increment our usage count for the device */\\r\\n20        kref_get(&dev->kref);\\r\\n21\\r\\n22        /* save our object in the file\'s private structure */\\r\\n23        file->private_data = dev;\\r\\n24\\r\\n25exit:\\r\\n26        return retval;\\r\\n27}\\r\\n```\\r\\n\\r\\n\u7531\u4e8e\u5728open\uff08\uff09\u51fd\u6570\u4e2d\u5e76\u6ca1\u6709\u7533\u8bf7\u4efb\u4f55\u8f6f\u4ef6\u548c\u786c\u4ef6\u8d44\u6e90\uff0c\u6240\u4ee5\u4e0eopen\uff08\uff09\u51fd\u6570\u5bf9\u5e94\u7684release\uff08\uff09\u51fd\u6570\u4e0d\u7528\u8fdb\u884c\u8d44\u6e90\u7684\u91ca\u653e\uff0c\u800c\u53ea\u9700\u8fdb\u884c\u51cf\u5c11\u5728open\uff08\uff09\u4e2d\u589e\u52a0\u7684\u5f15\u7528\u8ba1\u6570\u7b49\u5de5\u4f5c\u3002\\r\\n\\r\\n\u63a5\u4e0b\u6765\u8981\u5206\u6790\u7684\u662f\u8bfb\u5199\u51fd\u6570\uff0c\u524d\u9762\u5df2\u7ecf\u63d0\u5230\uff0c\u5728\u8bbf\u95eeUSB\u8bbe\u5907\u7684\u65f6\u5019\uff0c\u8d2f\u7a7f\u5176\u4e2d\u7684\u201c\u4e2d\u67a2\u795e\u7ecf\u201d\u662fURB\u7ed3\u6784\u4f53\u3002\\r\\n\\r\\n\u5728skel_write\uff08\uff09\u51fd\u6570\u4e2d\u8fdb\u884c\u7684\u5173\u4e8eURB\u7684\u64cd\u4f5c\u4e0e16.3.2\u5c0f\u8282\u7684\u63cf\u8ff0\u5b8c\u5168\u5bf9\u5e94\uff0c\u5373\u8fdb\u884c\u4e86URB\u7684\u5206\u914d\uff08\u8c03\u7528usb_alloc_urb\uff08\uff09\uff09\u3001\u521d\u59cb\u5316\uff08\u8c03\u7528usb_fill_bulk_urb\uff08\uff09\uff09\u548c\u63d0\u4ea4\uff08\u8c03\u7528usb_submit_urb\uff08\uff09\uff09\u7684\u64cd\u4f5c\uff0c\u5982\u4ee3\u7801\u6e05\u535516.24\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.24\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u5b57\u7b26\u8bbe\u5907\u5199\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static ssize_t skel_write(struct file *file, const char *user_buffer,\\r\\n 2               size_t count, loff_t *ppos)\\r\\n 3{\\r\\n 4    struct usb_skel *dev;\\r\\n 5    int retval = 0;\\r\\n 6    struct urb *urb = NULL;\\r\\n 7    char *buf = NULL;\\r\\n 8    size_t writesize = min(count, (size_t)MAX_TRANSFER);\\r\\n 9\\r\\n10    dev = file->private_data;\\r\\n11    ...\\r\\n12    spin_lock_irq(&dev->err_lock);\\r\\n13    retval = dev->errors;\\r\\n14    ...\\r\\n15    spin_unlock_irq(&dev->err_lock);\\r\\n16    ...\\r\\n17\\r\\n18    /* create a urb, and a buffer for it, and copy the data to the urb */\\r\\n19    urb = usb_alloc_urb(0, GFP_KERNEL);\\r\\n20 ...\\r\\n21\\r\\n22    buf = usb_alloc_coherent(dev->udev, writesize, GFP_KERNEL,\\r\\n23                    &urb->transfer_dma);\\r\\n24    ...\\r\\n25\\r\\n26    if (copy_from_user(buf, user_buffer, writesize)) {\\r\\n27         retval = -EFAULT;\\r\\n28         goto error;\\r\\n29    }\\r\\n30\\r\\n31    /* this lock makes sure we don\'t submit URBs to gone devices */\\r\\n32    mutex_lock(&dev->io_mutex);\\r\\n33    ...\\r\\n34\\r\\n35    /* initialize the urb properly */\\r\\n36    usb_fill_bulk_urb(urb, dev->udev,\\r\\n37               usb_sndbulkpipe(dev->udev, dev->bulk_out_endpointAddr),\\r\\n38               buf, writesize, skel_write_bulk_callback, dev);\\r\\n39    urb->transfer_flags |= URB_NO_TRANSFER_DMA_MAP;\\r\\n40    usb_anchor_urb(urb, &dev->submitted);\\r\\n41\\r\\n42    /* send the data out the bulk port */\\r\\n43    retval = usb_submit_urb(urb, GFP_KERNEL);\\r\\n44    mutex_unlock(&dev->io_mutex);\\r\\n45    ...\\r\\n46    usb_free_urb(urb);\\r\\n47\\r\\n48    return writesize;\\r\\n49    ...\\r\\n50}\\r\\n```\\r\\n\\r\\n\u5728\u5199\u51fd\u6570\u4e2d\u53d1\u8d77\u7684URB\u7ed3\u675f\u540e\uff0c\u7b2c38\u884c\u586b\u5165\u7684\u5b8c\u6210\u51fd\u6570skel_write_bulk_callback\uff08\uff09\u5c06\u88ab\u8c03\u7528\uff0c\u5b83\u4f1a\u8fdb\u884curb->status\u7684\u5224\u65ad\uff0c\u5982\u4ee3\u7801\u6e05\u535516.25\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.25\u3000USB\u9aa8\u67b6\u7a0b\u5e8f\u7684\u5b57\u7b26\u8bbe\u5907\u5199\u64cd\u4f5c\u5b8c\u6210\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static void skel_write_bulk_callback(struct urb *urb)\\r\\n 2{\\r\\n 3        struct usb_skel *dev;\\r\\n 4\\r\\n 5        dev = urb->context;\\r\\n 6\\r\\n 7        /* sync/async unlink faults aren\'t errors */\\r\\n 8        if (urb->status) {\\r\\n 9               if (!(urb->status == -ENOENT ||\\r\\n10                   urb->status == -ECONNRESET ||\\r\\n11                   urb->status == -ESHUTDOWN))\\r\\n12                      dev_err(&dev->interface->dev,\\r\\n13                            \\"%s - nonzero write bulk status received: %d\\\\n\\",\\r\\n14                            __func__, urb->status);\\r\\n15\\r\\n16               spin_lock(&dev->err_lock);\\r\\n17               dev->errors = urb->status;\\r\\n18               spin_unlock(&dev->err_lock);\\r\\n19        }\\r\\n20\\r\\n21        /* free up our allocated buffer */\\r\\n22        usb_free_coherent(urb->dev, urb->transfer_buffer_length,\\r\\n23                      urb->transfer_buffer, urb->transfer_dma);\\r\\n24        up(&dev->limit_sem);\\r\\n25}\\r\\n```\\r\\n\\r\\n# 16.3.5\u3000\u5b9e\u4f8b\uff1aUSB\u952e\u76d8\u9a71\u52a8\\r\\n\\r\\n\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u952e\u76d8\u88ab\u8ba4\u5b9a\u4e3a\u6807\u51c6\u8f93\u5165\u8bbe\u5907\uff0c\u5bf9\u4e8e\u4e00\u4e2aUSB\u952e\u76d8\u800c\u8a00\uff0c\u5176\u9a71\u52a8\u4e3b\u8981\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1ausb_driver\u7684\u6210\u5458\u51fd\u6570\u4ee5\u53ca\u8f93\u5165\u8bbe\u5907\u9a71\u52a8\u7684input_event\u83b7\u53d6\u548c\u62a5\u544a\u3002\\r\\n\\r\\n\u5728USB\u952e\u76d8\u8bbe\u5907\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\u4e2d\uff0c\u5c06\u5206\u522b\u6ce8\u518c\u548c\u6ce8\u9500\u5bf9\u5e94\u4e8eUSB\u952e\u76d8\u7684usb_driver\u7ed3\u6784\u4f53usb_kbd_driver\uff0c\u4ee3\u7801\u6e05\u535516.26\u6240\u793a\u4e3a\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\u4ee5\u53causb_driver\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.26\u3000USB\u952e\u76d8\u8bbe\u5907\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\u4ee5\u53causb_driver\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1static struct usb_device_id usb_kbd_id_table [] = {\\r\\n 2        { USB_INTERFACE_INFO(USB_INTERFACE_CLASS_HID, USB_INTERFACE_SUBCLASS_BOOT,\\r\\n 3               USB_INTERFACE_PROTOCOL_KEYBOARD) },\\r\\n 4        { }                                      /* Terminating entry */\\r\\n 5};\\r\\n 6\\r\\n 7MODULE_DEVICE_TABLE (usb, usb_kbd_id_table);\\r\\n 8\\r\\n 9static struct usb_driver usb_kbd_driver = {\\r\\n10        .name =        \\"usbkbd\\",\\r\\n11        .probe =       usb_kbd_probe,\\r\\n12        .disconnect =   usb_kbd_disconnect,\\r\\n13        .id_table =    usb_kbd_id_table,\\r\\n14};\\r\\n15\\r\\n16module_usb_driver(usb_kbd_driver);\\r\\n```\\r\\n\\r\\n\u5728usb_driver\u7684probe\uff08\uff09\u51fd\u6570\u4e2d\uff0c\u5c06\u8fdb\u884c\u8f93\u5165\u8bbe\u5907\u7684\u521d\u59cb\u5316\u548c\u6ce8\u518c\uff0cUSB\u952e\u76d8\u8981\u4f7f\u7528\u7684\u4e2d\u65adURB\u548c\u63a7\u5236URB\u7684\u521d\u59cb\u5316\uff0c\u5e76\u8bbe\u7f6e\u63a5\u53e3\u7684\u79c1\u6709\u6570\u636e\uff0c\u5982\u4ee3\u7801\u6e05\u535516.27\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.27\u3000USB\u952e\u76d8\u8bbe\u5907\u9a71\u52a8\u7684probe\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int usb_kbd_probe(struct usb_interface *iface,\\r\\n 2             const struct usb_device_id *id)\\r\\n 3{\\r\\n 4    struct usb_device *dev = interface_to_usbdev(iface);\\r\\n 5    struct usb_host_interface *interface;\\r\\n 6    struct usb_endpoint_descriptor *endpoint;\\r\\n 7    struct usb_kbd *kbd;\\r\\n 8    struct input_dev *input_dev;\\r\\n 9    ...\\r\\n10    interface = iface->cur_altsetting;\\r\\n11\\r\\n12    endpoint = &interface->endpoint[0].desc;\\r\\n13\\r\\n14    pipe = usb_rcvintpipe(dev, endpoint->bEndpointAddress);\\r\\n15    maxp = usb_maxpacket(dev, pipe, usb_pipeout(pipe));\\r\\n16\\r\\n17    kbd = kzalloc(sizeof(struct usb_kbd), GFP_KERNEL);\\r\\n18    input_dev = input_allocate_device();\\r\\n19\\r\\n20    if (usb_kbd_alloc_mem(dev, kbd))\\r\\n21        goto fail2;\\r\\n22\\r\\n23    kbd->usbdev = dev;\\r\\n24    kbd->dev = input_dev;\\r\\n25    ...\\r\\n26    usb_make_path(dev, kbd->phys, sizeof(kbd->phys));\\r\\n27    strlcat(kbd->phys, \\"/input0\\", sizeof(kbd->phys));\\r\\n28\\r\\n29    input_dev->name = kbd->name;\\r\\n30    input_dev->phys = kbd->phys;\\r\\n31    usb_to_input_id(dev, &input_dev->id);\\r\\n32    input_dev->dev.parent = &iface->dev;\\r\\n33\\r\\n34    input_set_drvdata(input_dev, kbd);\\r\\n35\\r\\n36    input_dev->evbit[0] = BIT_MASK(EV_KEY) | BIT_MASK(EV_LED) |\\r\\n37        BIT_MASK(EV_REP);\\r\\n38    ...\\r\\n39    input_dev->event = usb_kbd_event;\\r\\n40    input_dev->open = usb_kbd_open;\\r\\n41    input_dev->close = usb_kbd_close;\\r\\n42\\r\\n43    usb_fill_int_urb(kbd->irq, dev, pipe,\\r\\n44              kbd->new, (maxp > 8   8 : maxp),\\r\\n45              usb_kbd_irq, kbd, endpoint->bInterval);\\r\\n46    kbd->irq->transfer_dma = kbd->new_dma;\\r\\n47    kbd->irq->transfer_flags |= URB_NO_TRANSFER_DMA_MAP;\\r\\n48    ...\\r\\n49    usb_fill_control_urb(kbd->led, dev, usb_sndctrlpipe(dev, 0),\\r\\n50                 (void *) kbd->cr, kbd->leds, 1,\\r\\n51                 usb_kbd_led, kbd);\\r\\n52    kbd->led->transfer_dma = kbd->leds_dma;\\r\\n53    kbd->led->transfer_flags |= URB_NO_TRANSFER_DMA_MAP;\\r\\n54\\r\\n55    error = input_register_device(kbd->dev);\\r\\n56    if (error)\\r\\n57        goto fail2;\\r\\n58\\r\\n59    usb_set_intfdata(iface, kbd);\\r\\n60    device_set_wakeup_enable(&dev->dev, 1);\\r\\n61    return 0;\\r\\n62    ...\\r\\n63}\\r\\n```\\r\\n\\r\\n\u5728usb_driver\u7684\u65ad\u5f00\u51fd\u6570\u4e2d\uff0c\u5c06\u8bbe\u7f6e\u63a5\u53e3\u79c1\u6709\u6570\u636e\u4e3aNULL\u3001\u7ec8\u6b62\u5df2\u63d0\u4ea4\u7684URB\u5e76\u6ce8\u9500\u8f93\u5165\u8bbe\u5907\uff0c\u5982\u4ee3\u7801\u6e05\u535516.28\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.28\u3000USB\u952e\u76d8\u8bbe\u5907\u9a71\u52a8\u7684\u65ad\u5f00\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static void usb_kbd_disconnect(struct usb_interface *intf)\\r\\n 2{\\r\\n 3   struct usb_kbd *kbd = usb_get_intfdata (intf);\\r\\n 4\\r\\n 5   usb_set_intfdata(intf, NULL);\\r\\n 6   if (kbd) {\\r\\n 7       usb_kill_urb(kbd->irq);\\r\\n 8       input_unregister_device(kbd->dev);\\r\\n 9       usb_kill_urb(kbd->led);\\r\\n10        usb_kbd_free_mem(interface_to_usbdev(intf), kbd);\\r\\n11       kfree(kbd);\\r\\n12   }\\r\\n13}\\r\\n```\\r\\n\\r\\n\u952e\u76d8\u4e3b\u8981\u4f9d\u8d56\u4e8e\u4e2d\u65ad\u4f20\u8f93\u6a21\u5f0f\uff0c\u5728\u952e\u76d8\u4e2d\u65adURB\u7684\u5b8c\u6210\u51fd\u6570usb_kbd_irq\uff08\uff09\u4e2d\uff08\u901a\u8fc7\u4ee3\u7801\u6e05\u535516.27\u7684\u7b2c45\u884c\u53ef\u4ee5\u770b\u51fa\uff09\uff0c\u5c06\u4f1a\u901a\u8fc7input_report_key\uff08\uff09\u62a5\u544a\u6309\u952e\u4e8b\u4ef6\uff0c\u901a\u8fc7input_sync\uff08\uff09\u62a5\u544a\u540c\u6b65\u4e8b\u4ef6\uff0c\u5982\u4ee3\u7801\u6e05\u535516.29\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535516.29\u3000USB\u952e\u76d8\u8bbe\u5907\u9a71\u52a8\u7684\u4e2d\u65adURB\u5b8c\u6210\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static void usb_kbd_irq(struct urb *urb)\\r\\n 2{\\r\\n 3   ...\\r\\n 4   for (i = 0; i < 8; i++)\\r\\n 5       input_report_key(kbd->dev, usb_kbd_keycode[i + 224], (kbd->new[0] >> i) & 1);\\r\\n 6\\r\\n 7   for (i = 2; i < 8; i++) {\\r\\n 8\\r\\n 9       if (kbd->old[i]>3 && memscan(kbd->new + 2, kbd->old[i], 6)==kbd->new + 8) {\\r\\n10           if (usb_kbd_keycode[kbd->old[i]])\\r\\n11               input_report_key(kbd->dev, usb_kbd_keycode[kbd->old[i]], 0);\\r\\n12           else\\r\\n13               hid_info(urb->dev,\\r\\n14                    \\"Unknown key (scancode %#x) released.\\\\n\\",\\r\\n15                    kbd->old[i]);\\r\\n16       }\\r\\n17\\r\\n18       if (kbd->new[i] > 3&&memscan(kbd->old + 2, kbd->new[i], 6)==kbd->old + 8) {\\r\\n19           if (usb_kbd_keycode[kbd->new[i]])\\r\\n20               input_report_key(kbd->dev, usb_kbd_keycode[kbd->new[i]], 1);\\r\\n21           else\\r\\n22               hid_info(urb->dev,\\r\\n23                    \\"Unknown key (scancode %#x) pressed.\\\\n\\",\\r\\n24                    kbd->new[i]);\\r\\n25       }\\r\\n26   }\\r\\n27\\r\\n28   input_sync(kbd->dev);\\r\\n29\\r\\n30   ...\\r\\n31}\\r\\n```\\r\\n\\r\\n\u4eceUSB\u952e\u76d8\u9a71\u52a8\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u770b\u5230\u4e86usb_driver\u672c\u8eab\u53ea\u662f\u8d77\u4e00\u4e2a\u6302\u63a5\u603b\u7ebf\u7684\u4f5c\u7528\uff0c\u800c\u5177\u4f53\u8bbe\u5907\u7c7b\u578b\u7684\u9a71\u52a8\u4ecd\u7136\u662f\u5de5\u4f5c\u7684\u4e3b\u4f53\uff0c\u4f8b\u5982\u952e\u76d8\u5c31\u662finput\u3001USB\u4e32\u53e3\u5c31\u662ftty\uff0c\u53ea\u662f\u5728\u8fd9\u4e9b\u8bbe\u5907\u5e95\u5c42\u8fdb\u884c\u786c\u4ef6\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u8c03\u7528\u7684\u90fd\u662f\u4e0eURB\u76f8\u5173\u7684\u63a5\u53e3\uff0c\u8fd9\u5957USB\u6838\u5fc3\u5c42API\u2014URB\u7684\u5b58\u5728\u4f7f\u6211\u4eec\u65e0\u987b\u5173\u5fc3\u5e95\u5c42USB\u4e3b\u673a\u63a7\u5236\u5668\u7684\u5177\u4f53\u7ec6\u8282\uff0c\u56e0\u6b64\uff0cUSB\u8bbe\u5907\u9a71\u52a8\u4e5f\u53d8\u5f97\u4e0e\u5e73\u53f0\u65e0\u5173\uff0c\u540c\u6837\u7684\u9a71\u52a8\u53ef\u5e94\u7528\u4e8e\u4e0d\u540c\u7684SoC\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.3\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.3\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.3\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.3\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u9a71\u52a8.md","title":"9.3.1\u3000\u5728globalfifo\u9a71\u52a8\u4e2d\u589e\u52a0\u5f02\u6b65\u901a\u77e5","description":"\u9996\u5148\uff0c\u53c2\u8003\u4ee3\u7801\u6e05\u53559.3\uff0c\u5e94\u8be5\u5c06\u5f02\u6b65\u7ed3\u6784\u4f53\u6307\u9488\u6dfb\u52a0\u5230globalfifo_dev\u8bbe\u5907\u7ed3\u6784\u4f53\u5185\uff0c\u5982\u4ee3\u7801\u6e05\u53559.7\u6240\u793a\u3002","date":"2025-09-15T14:44:14.121Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.125,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"16.3.1\u3000USB\u8bbe\u5907\u9a71\u52a8\u7684\u6574\u4f53\u7ed3\u6784","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/16.3\u3000USB\u8bbe\u5907\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570"}},"content":"\u9996\u5148\uff0c\u53c2\u8003\u4ee3\u7801\u6e05\u53559.3\uff0c\u5e94\u8be5\u5c06\u5f02\u6b65\u7ed3\u6784\u4f53\u6307\u9488\u6dfb\u52a0\u5230globalfifo_dev\u8bbe\u5907\u7ed3\u6784\u4f53\u5185\uff0c\u5982\u4ee3\u7801\u6e05\u53559.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.7\u3000\u589e\u52a0\u5f02\u6b65\u901a\u77e5\u540e\u7684globalfifo\u8bbe\u5907\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct globalfifo_dev {\\r\\n 2   struct cdev cdev;\\r\\n 3   unsigned int current_len;\\r\\n 4   unsigned char mem[GLOBALFIFO_SIZE];\\r\\n 5   struct mutex mutex;\\r\\n 6   wait_queue_head_t r_wait;\\r\\n 7   wait_queue_head_t w_wait;\\r\\n 8   struct fasync_struct *async_queue;\\r\\n 9};\\r\\n```\\r\\n\\r\\n\u53c2\u8003\u4ee3\u7801\u6e05\u53559.4\u7684fasync\uff08\uff09\u51fd\u6570\u6a21\u677f\uff0cglobalfifo\u7684\u8fd9\u4e2a\u51fd\u6570\u5982\u4ee3\u7801\u6e05\u53559.8\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.8\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u8bbe\u5907\u9a71\u52a8fasync\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int globalfifo_fasync(int fd, struct file *filp, int mode)\\r\\n 2{\\r\\n 3   struct globalfifo_dev *dev = filp->private_data;\\r\\n 4   return fasync_helper(fd, filp, mode, &dev->async_queue);\\r\\n 5}\\r\\n```\\r\\n\\r\\n\u5728globalfifo\u8bbe\u5907\u88ab\u6b63\u786e\u5199\u5165\u4e4b\u540e\uff0c\u5b83\u53d8\u5f97\u53ef\u8bfb\uff0c\u8fd9\u4e2a\u65f6\u5019\u9a71\u52a8\u5e94\u91ca\u653eSIGIO\u4fe1\u53f7\uff0c\u4ee5\u4fbf\u5e94\u7528\u7a0b\u5e8f\u6355\u83b7\uff0c\u4ee3\u7801\u6e05\u53559.9\u7ed9\u51fa\u4e86\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u8bbe\u5907\u9a71\u52a8\u7684\u5199\u51fd\u6570\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.9\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u8bbe\u5907\u9a71\u52a8\u5199\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static ssize_t globalfifo_write(struct file *filp, const char __user *buf,\\r\\n 2                  size_t count, loff_t *ppos)\\r\\n 3{\\r\\n 4  struct globalfifo_dev *dev = filp->private_data;\\r\\n 5  int ret;\\r\\n 6  DECLARE_WAITQUEUE(wait, current);\\r\\n 7\\r\\n 8  mutex_lock(&dev->mutex);\\r\\n 9  add_wait_queue(&dev->w_wait, &wait);\\r\\n10\\r\\n11  while (dev->current_len == GLOBALFIFO_SIZE) {\\r\\n12       if (filp->f_flags & O_NONBLOCK) {\\r\\n13            ret = -EAGAIN;\\r\\n14            goto out;\\r\\n15       }\\r\\n16       __set_current_state(TASK_INTERRUPTIBLE);\\r\\n17\\r\\n18       mutex_unlock(&dev->mutex);\\r\\n19\\r\\n20       schedule();\\r\\n21       if (signal_pending(current)) {\\r\\n22            ret = -ERESTARTSYS;\\r\\n23            goto out2;\\r\\n24       }\\r\\n25\\r\\n26       mutex_lock(&dev->mutex);\\r\\n27  }\\r\\n28\\r\\n29  if (count > GLOBALFIFO_SIZE - dev->current_len)\\r\\n30       count = GLOBALFIFO_SIZE - dev->current_len;\\r\\n31\\r\\n32  if (copy_from_user(dev->mem + dev->current_len, buf, count)) {\\r\\n33       ret = -EFAULT;\\r\\n34       goto out;\\r\\n35  } else {\\r\\n36       dev->current_len += count;\\r\\n37       printk(KERN_INFO \\"written %d bytes(s),current_len:%d\\\\n\\", count,\\r\\n38              dev->current_len);\\r\\n39\\r\\n40       wake_up_interruptible(&dev->r_wait);\\r\\n41\\r\\n42       if (dev->async_queue) {\\r\\n43            kill_fasync(&dev->async_queue, SIGIO, POLL_IN);\\r\\n44            printk(KERN_DEBUG \\"%s kill SIGIO\\\\n\\", __func__);\\r\\n45       }\\r\\n46\\r\\n47       ret = count;\\r\\n48  }\\r\\n49\\r\\n50 out:\\r\\n51  mutex_unlock(&dev->mutex);\\r\\n52 out2:\\r\\n53  remove_wait_queue(&dev->w_wait, &wait);\\r\\n54  set_current_state(TASK_RUNNING);\\r\\n55  return ret;\\r\\n56}\\r\\n```\\r\\n\\r\\n\u53c2\u8003\u4ee3\u7801\u6e05\u53559.6\uff0c\u589e\u52a0\u5f02\u6b65\u901a\u77e5\u540e\u7684globalfifo\u8bbe\u5907\u9a71\u52a8\u7684release\uff08\uff09\u51fd\u6570\u4e2d\u9700\u8c03\u7528globalfifo_fasync\uff08\uff09\u51fd\u6570\u5c06\u6587\u4ef6\u4ece\u5f02\u6b65\u901a\u77e5\u5217\u8868\u4e2d\u5220\u9664\uff0c\u4ee3\u7801\u6e05\u53559.10\u7ed9\u51fa\u4e86\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo_release\uff08\uff09\u51fd\u6570\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.10\u3000\u589e\u52a0\u5f02\u6b65\u901a\u77e5\u540e\u7684globalfifo\u8bbe\u5907\u9a71\u52a8release\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int globalfifo_release(struct inode *inode, struct file *filp)\\r\\n 2{\\r\\n 3  globalfifo_fasync(-1, filp, 0);\\r\\n 4  return 0;\\r\\n 5}\\r\\n```\\r\\n\\r\\n# 9.3.2\u3000\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u9a8c\u8bc1globalfifo\u7684\u5f02\u6b65\u901a\u77e5\\r\\n\\r\\n\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e0e\u4ee3\u7801\u6e05\u53559.2\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u7f16\u5199\u4e00\u4e2a\u5728\u7528\u6237\u7a7a\u95f4\u9a8c\u8bc1globalfifo\u5f02\u6b65\u901a\u77e5\u7684\u7a0b\u5e8f\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u5728\u63a5\u6536\u5230\u7531globalfifo\u53d1\u51fa\u7684\u4fe1\u53f7\u540e\u5c06\u8f93\u51fa\u4fe1\u53f7\u503c\uff0c\u5982\u4ee3\u7801\u6e05\u53559.11\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53559.11\u3000\u76d1\u63a7globalfifo\u5f02\u6b65\u901a\u77e5\u4fe1\u53f7\u7684\u5e94\u7528\u7a0b\u5e8f\\r\\n\\r\\n```\\r\\n 1static void signalio_handler(int signum)\\r\\n 2{\\r\\n 3   printf(\\"receive a signal from globalfifo,signalnum:%d\\\\n\\", signum);\\r\\n 4}\\r\\n 5\\r\\n 6void main(void)\\r\\n 7{\\r\\n 8  int fd, oflags;\\r\\n 9  fd = open(\\"/dev/globalfifo\\", O_RDWR, S_IRUSR | S_IWUSR);\\r\\n10  if (fd != -1) {\\r\\n11       signal(SIGIO, signalio_handler);\\r\\n12       fcntl(fd, F_SETOWN, getpid());\\r\\n13       oflags = fcntl(fd, F_GETFL);\\r\\n14       fcntl(fd, F_SETFL, oflags | FASYNC);\\r\\n15       while (1) {\\r\\n16            sleep(100);\\r\\n17       }\\r\\n18  } else {\\r\\n19       printf(\\"device open failure\\\\n\\");\\r\\n20  }\\r\\n21}\\r\\n```\\r\\n\\r\\n\u672c\u4e66\u4ee3\u7801/kernel/drivers/globalfifo/ch9\u5305\u542b\u4e86\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u9a71\u52a8\u4ee5\u53ca\u4ee3\u7801\u6e05\u53559.11\u5bf9\u5e94\u7684globalfifo_test.c\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u5728\u8be5\u76ee\u5f55\u8fd0\u884cmake\u5c06\u5f97\u5230globalfifo.ko\u548cglobalfifo_test\u3002\\r\\n\\r\\n\u6309\u7167\u4e0e\u7b2c8\u7ae0\u76f8\u540c\u7684\u65b9\u6cd5\u52a0\u8f7d\u65b0\u7684globalfifo\u8bbe\u5907\u9a71\u52a8\u5e76\u521b\u5efa\u8bbe\u5907\u6587\u4ef6\u8282\u70b9\uff0c\u8fd0\u884c\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u6bcf\u5f53\u901a\u8fc7echo\u5411/dev/globalfifo\u5199\u5165\u65b0\u7684\u6570\u636e\u65f6\uff0csignalio_handler\uff08\uff09\u5c06\u4f1a\u88ab\u8c03\u7528\uff1a\\r\\n\\r\\n```\\r\\nbaohua@baohua-VirtualBox:~/develop/training/kernel/drivers/globalfifo/ch9$ sudo su\\r\\n# ./globalfifo_test&\\r\\n[1] 25251\\r\\n# echo 1 > /dev/globalfifo\\r\\nreceive a signal from globalfifo,signalnum:29    -> globalfifo_test\u7a0b\u5e8f\u6253\u5370\\r\\n# echo hello > /dev/globalfifo\\r\\nreceive a signal from globalfifo,signalnum:29   -> globalfifo_test\u7a0b\u5e8f\u6253\u5370\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570","description":"Linux\u5185\u6838\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e00\u822c\u4ee5init\u6807\u8bc6\u58f0\u660e\uff0c\u5178\u578b\u7684\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u7684\u5f62\u5f0f\u5982\u4ee3\u7801\u6e05\u53554.2\u6240\u793a\u3002","date":"2025-09-15T14:44:14.089Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.37,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"9.3.1\u3000\u5728globalfifo\u9a71\u52a8\u4e2d\u589e\u52a0\u5f02\u6b65\u901a\u77e5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.3\u3000\u652f\u6301\u5f02\u6b65\u901a\u77e5\u7684globalfifo\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0"}},"content":"Linux\u5185\u6838\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4e00\u822c\u4ee5__init\u6807\u8bc6\u58f0\u660e\uff0c\u5178\u578b\u7684\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u7684\u5f62\u5f0f\u5982\u4ee3\u7801\u6e05\u53554.2\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53554.2\u3000\u5185\u6838\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\\r\\n\\r\\n```\\r\\n1 static int _ _init initialization_function(void)\\r\\n2 {\\r\\n3     /* \u521d\u59cb\u5316\u4ee3\u7801\\r\\n\\r\\n\\r\\n */\\r\\n4 }\\r\\n5 module_init(initialization_function);\\r\\n```\\r\\n\\r\\n\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4ee5\u201cmodule_init\uff08\u51fd\u6570\u540d\uff09\u201d\u7684\u5f62\u5f0f\u88ab\u6307\u5b9a\u3002\u5b83\u8fd4\u56de\u6574\u578b\u503c\uff0c\u82e5\u521d\u59cb\u5316\u6210\u529f\uff0c\u5e94\u8fd4\u56de0\u3002\u800c\u5728\u521d\u59cb\u5316\u5931\u8d25\u65f6\uff0c\u5e94\u8be5\u8fd4\u56de\u9519\u8bef\u7f16\u7801\u3002\u5728Linux\u5185\u6838\u91cc\uff0c\u9519\u8bef\u7f16\u7801\u662f\u4e00\u4e2a\u63a5\u8fd1\u4e8e0\u7684\u8d1f\u503c\uff0c\u5728<linux/errno.h>\u4e2d\u5b9a\u4e49\uff0c\u5305\u542b-ENODEV\u3001-ENOMEM\u4e4b\u7c7b\u7684\u7b26\u53f7\u503c\u3002\u603b\u662f\u8fd4\u56de\u76f8\u5e94\u7684\u9519\u8bef\u7f16\u7801\u662f\u79cd\u975e\u5e38\u597d\u7684\u4e60\u60ef\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u6837\uff0c\u7528\u6237\u7a0b\u5e8f\u624d\u53ef\u4ee5\u5229\u7528perror\u7b49\u65b9\u6cd5\u628a\u5b83\u4eec\u8f6c\u6362\u6210\u6709\u610f\u4e49\u7684\u9519\u8bef\u4fe1\u606f\u5b57\u7b26\u4e32\u3002\\r\\n\\r\\n\u5728Linux\u5185\u6838\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528request_module\uff08const char*fmt\uff0c\u2026\uff09\u51fd\u6570\u52a0\u8f7d\u5185\u6838\u6a21\u5757\uff0c\u9a71\u52a8\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u4e0b\u5217\u4ee3\u7801\uff1a\\r\\n\\r\\n```\\r\\nrequest_module(module_name);\\r\\n```\\r\\n\\r\\n\u7075\u6d3b\u5730\u52a0\u8f7d\u5176\u4ed6\u5185\u6838\u6a21\u5757\u3002\\r\\n\\r\\n\u5728Linux\u4e2d\uff0c\u6240\u6709\u6807\u8bc6\u4e3a__init\u7684\u51fd\u6570\u5982\u679c\u76f4\u63a5\u7f16\u8bd1\u8fdb\u5165\u5185\u6838\uff0c\u6210\u4e3a\u5185\u6838\u955c\u50cf\u7684\u4e00\u90e8\u5206\uff0c\u5728\u8fde\u63a5\u7684\u65f6\u5019\u90fd\u4f1a\u653e\u5728.init.text\u8fd9\u4e2a\u533a\u6bb5\u5185\u3002\\r\\n\\r\\n```\\r\\n#define _ _init        _ _attribute_ _ ((_ _section_ _ (\\".init.text\\")))\\r\\n```\\r\\n\\r\\n\u6240\u6709\u7684__init\u51fd\u6570\u5728\u533a\u6bb5.initcall.init\u4e2d\u8fd8\u4fdd\u5b58\u4e86\u4e00\u4efd\u51fd\u6570\u6307\u9488\uff0c\u5728\u521d\u59cb\u5316\u65f6\u5185\u6838\u4f1a\u901a\u8fc7\u8fd9\u4e9b\u51fd\u6570\u6307\u9488\u8c03\u7528\u8fd9\u4e9b__init\u51fd\u6570\uff0c\u5e76\u5728\u521d\u59cb\u5316\u5b8c\u6210\u540e\uff0c\u91ca\u653einit\u533a\u6bb5\uff08\u5305\u62ec.init.text\u3001.initcall.init\u7b49\uff09\u7684\u5185\u5b58\u3002\\r\\n\\r\\n\u9664\u4e86\u51fd\u6570\u4ee5\u5916\uff0c\u6570\u636e\u4e5f\u53ef\u4ee5\u88ab\u5b9a\u4e49\u4e3a__initdata\uff0c\u5bf9\u4e8e\u53ea\u662f\u521d\u59cb\u5316\u9636\u6bb5\u9700\u8981\u7684\u6570\u636e\uff0c\u5185\u6838\u5728\u521d\u59cb\u5316\u5b8c\u540e\uff0c\u4e5f\u53ef\u4ee5\u91ca\u653e\u5b83\u4eec\u5360\u7528\u7684\u5185\u5b58\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c06hello_data\u5b9a\u4e49\u4e3a__initdata\uff1a\\r\\n\\r\\n```\\r\\nstatic int hello_data __initdata = 1;\\r\\nstatic int __init hello_init(void)\\r\\n{\\r\\n     printk(KERN_INFO \\"Hello, world %d\\\\n\\", hello_data);\\r\\n     return 0;\\r\\n}\\r\\nmodule_init(hello_init);\\r\\nstatic void __exit hello_exit(void)\\r\\n{\\r\\n    printk(KERN_INFO \\"Goodbye, world\\\\n\\");\\r\\n}\\r\\nmodule_exit(hello_exit);\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0","description":"\u4ece\u672c\u7ae0\u5f00\u59cb\uff0c\u540e\u7eed\u7684\u6570\u7ae0\u90fd\u5c06\u57fa\u4e8e\u865a\u62df\u7684globalmem\u8bbe\u5907\u8fdb\u884c\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u8bb2\u89e3\u3002globalmem\u610f\u5473\u7740\u201c\u5168\u5c40\u5185\u5b58\u201d\uff0c\u5728globalmem\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2d\u4f1a\u5206\u914d\u4e00\u7247\u5927\u5c0f\u4e3aGLOBALMEM_SIZE\uff084KB\uff09\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u5728\u9a71\u52a8\u4e2d\u63d0\u4f9b\u9488\u5bf9\u8be5\u7247\u5185\u5b58\u7684\u8bfb\u5199\u3001\u63a7\u5236\u548c\u5b9a\u4f4d\u51fd\u6570\uff0c\u4ee5\u4f9b\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u80fd\u901a\u8fc7Linux\u7cfb\u7edf\u8c03\u7528\u83b7\u53d6\u6216\u8bbe\u7f6e\u8fd9\u7247\u5185\u5b58\u7684\u5185\u5bb9\u3002","date":"2025-09-15T14:44:14.089Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":1.005,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.3\u3000\u6a21\u5757\u52a0\u8f7d\u51fd\u6570"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3"}},"content":"\u4ece\u672c\u7ae0\u5f00\u59cb\uff0c\u540e\u7eed\u7684\u6570\u7ae0\u90fd\u5c06\u57fa\u4e8e\u865a\u62df\u7684globalmem\u8bbe\u5907\u8fdb\u884c\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u8bb2\u89e3\u3002globalmem\u610f\u5473\u7740\u201c\u5168\u5c40\u5185\u5b58\u201d\uff0c\u5728globalmem\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e2d\u4f1a\u5206\u914d\u4e00\u7247\u5927\u5c0f\u4e3aGLOBALMEM_SIZE\uff084KB\uff09\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u5728\u9a71\u52a8\u4e2d\u63d0\u4f9b\u9488\u5bf9\u8be5\u7247\u5185\u5b58\u7684\u8bfb\u5199\u3001\u63a7\u5236\u548c\u5b9a\u4f4d\u51fd\u6570\uff0c\u4ee5\u4f9b\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u80fd\u901a\u8fc7Linux\u7cfb\u7edf\u8c03\u7528\u83b7\u53d6\u6216\u8bbe\u7f6e\u8fd9\u7247\u5185\u5b58\u7684\u5185\u5bb9\u3002\\r\\n\\r\\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u865a\u62df\u7684globalmem\u8bbe\u5907\u51e0\u4e4e\u6ca1\u6709\u4efb\u4f55\u5b9e\u7528\u4ef7\u503c\uff0c\u4ec5\u4ec5\u662f\u4e00\u79cd\u4e3a\u4e86\u8bb2\u89e3\u95ee\u9898\u7684\u65b9\u4fbf\u800c\u51ed\u7a7a\u5236\u9020\u7684\u8bbe\u5907\u3002\\r\\n\\r\\n\u672c\u7ae0\u5c06\u7ed9\u51faglobalmem\u8bbe\u5907\u9a71\u52a8\u7684\u96cf\u5f62\uff0c\u800c\u540e\u7eed\u7ae0\u8282\u4f1a\u5728\u8fd9\u4e2a\u96cf\u5f62\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u5e76\u53d1\u4e0e\u540c\u6b65\u63a7\u5236\u7b49\u590d\u6742\u529f\u80fd\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3","description":"\u672c\u7ae0\u4e3b\u8981\u8bb2\u8ff0\u4e86Linux\u4e2d\u7684\u5f02\u6b65I/O\uff0c\u5f02\u6b65I/O\u53ef\u4ee5\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u5728\u7b49\u5f85I/O\u64cd\u4f5c\u7684\u540c\u65f6\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\u3002","date":"2025-09-15T14:44:14.089Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.97,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/6.2\u3000globalmem\u865a\u62df\u8bbe\u5907\u5b9e\u4f8b\u63cf\u8ff0"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8"}},"content":"\u672c\u7ae0\u4e3b\u8981\u8bb2\u8ff0\u4e86Linux\u4e2d\u7684\u5f02\u6b65I/O\uff0c\u5f02\u6b65I/O\u53ef\u4ee5\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u5728\u7b49\u5f85I/O\u64cd\u4f5c\u7684\u540c\u65f6\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\u3002\\r\\n\\r\\n\u4f7f\u7528\u4fe1\u53f7\u53ef\u4ee5\u5b9e\u73b0\u8bbe\u5907\u9a71\u52a8\u4e0e\u7528\u6237\u7a0b\u5e8f\u4e4b\u95f4\u7684\u5f02\u6b65\u901a\u77e5\uff0c\u603b\u4f53\u800c\u8a00\uff0c\u8bbe\u5907\u9a71\u52a8\u548c\u7528\u6237\u7a7a\u95f4\u8981\u5206\u522b\u5b8c\u62103\u9879\u5bf9\u5e94\u7684\u5de5\u4f5c\uff0c\u7528\u6237\u7a7a\u95f4\u8bbe\u7f6e\u6587\u4ef6\u7684\u62e5\u6709\u8005\u3001FASYNC\u6807\u5fd7\u53ca\u6355\u83b7\u4fe1\u53f7\uff0c\u5185\u6838\u7a7a\u95f4\u54cd\u5e94\u5bf9\u6587\u4ef6\u7684\u62e5\u6709\u8005\u3001FASYNC\u6807\u5fd7\u7684\u8bbe\u7f6e\u5e76\u5728\u8d44\u6e90\u53ef\u83b7\u5f97\u65f6\u91ca\u653e\u4fe1\u53f7\u3002\\r\\n\\r\\nLinux 2.6\u4ee5\u540e\u7684\u5185\u6838\u5305\u542b\u5bf9AIO\u7684\u652f\u6301\uff0c\u5b83\u4e3a\u7528\u6237\u7a7a\u95f4\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u5f02\u6b65I/O\u63a5\u53e3\u3002\u53e6\u5916\uff0cglibc\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0d\u4f9d\u8d56\u4e8e\u5185\u6838\u7684\u7528\u6237\u7a7a\u95f4\u7684AIO\u652f\u6301\u3002"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8","description":"\u5728drivers/gpio\u4e0b\u5b9e\u73b0\u4e86\u901a\u7528\u7684\u57fa\u4e8egpiolib\u7684GPIO\u9a71\u52a8\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u7528\u4e8e\u63cf\u8ff0\u5e95\u5c42GPIO\u63a7\u5236\u5668\u7684gpiochip\u7ed3\u6784\u4f53\uff0c\u5e76\u8981\u6c42\u5177\u4f53\u7684SoC\u5b9e\u73b0gpiochip\u7ed3\u6784\u4f53\u7684\u6210\u5458\u51fd\u6570\uff0c\u6700\u540e\u901a\u8fc7gpiochipadd\uff08\uff09\u6ce8\u518cgpiochip\u3002GPIO\u9a71\u52a8\u53ef\u4ee5\u5b58\u5728\u4e8edrivers/gpio\u76ee\u5f55\u4e2d\uff0c\u4f46\u662f\u5728GPIO\u517c\u6709\u591a\u79cd\u529f\u80fd\u4e14\u9700\u8981\u590d\u6742\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0cGPIO\u7684\u9a71\u52a8\u90e8\u5206\u5f80\u5f80\u76f4\u63a5\u79fb\u5230drivers/pinctrl\u76ee\u5f55\u4e0b\u5e76\u8fde\u540cpinmux\u4e00\u8d77\u5b9e\u73b0\uff0c\u800c\u4e0d\u5b58\u5728\u4e8edrivers/gpio\u76ee\u5f55\u4e2d\u3002","date":"2025-09-15T14:44:14.077Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":4.235,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/9.5\u3000\u603b\u7ed3"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0"}},"content":"\u5728drivers/gpio\u4e0b\u5b9e\u73b0\u4e86\u901a\u7528\u7684\u57fa\u4e8egpiolib\u7684GPIO\u9a71\u52a8\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u901a\u7528\u7684\u7528\u4e8e\u63cf\u8ff0\u5e95\u5c42GPIO\u63a7\u5236\u5668\u7684gpio_chip\u7ed3\u6784\u4f53\uff0c\u5e76\u8981\u6c42\u5177\u4f53\u7684SoC\u5b9e\u73b0gpio_chip\u7ed3\u6784\u4f53\u7684\u6210\u5458\u51fd\u6570\uff0c\u6700\u540e\u901a\u8fc7gpiochip_add\uff08\uff09\u6ce8\u518cgpio_chip\u3002GPIO\u9a71\u52a8\u53ef\u4ee5\u5b58\u5728\u4e8edrivers/gpio\u76ee\u5f55\u4e2d\uff0c\u4f46\u662f\u5728GPIO\u517c\u6709\u591a\u79cd\u529f\u80fd\u4e14\u9700\u8981\u590d\u6742\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\uff0cGPIO\u7684\u9a71\u52a8\u90e8\u5206\u5f80\u5f80\u76f4\u63a5\u79fb\u5230drivers/pinctrl\u76ee\u5f55\u4e0b\u5e76\u8fde\u540cpinmux\u4e00\u8d77\u5b9e\u73b0\uff0c\u800c\u4e0d\u5b58\u5728\u4e8edrivers/gpio\u76ee\u5f55\u4e2d\u3002\\r\\n\\r\\ngpio_chip\u7ed3\u6784\u4f53\u5c01\u88c5\u4e86\u5e95\u5c42\u786c\u4ef6\u7684GPIO enable\uff08\uff09/disable\uff08\uff09\u7b49\u64cd\u4f5c\uff0c\u5b83\u7684\u5b9a\u4e49\u5982\u4ee3\u7801\u6e05\u535520.15\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535520.15\u3000gpio_chip\u7ed3\u6784\u4f53\\r\\n\\r\\n```\\r\\n 1struct gpio_chip {\\r\\n 2        const char           *label;\\r\\n 3        struct device        *dev;\\r\\n 4        struct module        *owner;\\r\\n 5\\r\\n 6        int                  (*request)(struct gpio_chip *chip,\\r\\n 7                                             unsigned offset);\\r\\n 8        void                 (*free)(struct gpio_chip *chip,\\r\\n 9                                             unsigned offset);\\r\\n10\\r\\n11        int                  (*direction_input)(struct gpio_chip *chip,\\r\\n12                                             unsigned offset);\\r\\n13        int                  (*get)(struct gpio_chip *chip,\\r\\n14                                             unsigned offset);\\r\\n15        int                  (*direction_output)(struct gpio_chip *chip,\\r\\n16                                             unsigned offset, int value);\\r\\n17        int                  (*set_debounce)(struct gpio_chip *chip,\\r\\n18                                        unsigned offset, unsigned debounce);\\r\\n19\\r\\n20        void                 (*set)(struct gpio_chip *chip,\\r\\n21                                             unsigned offset, int value);\\r\\n22\\r\\n23        int                  (*to_irq)(struct gpio_chip *chip,\\r\\n24                                             unsigned offset);\\r\\n25\\r\\n26        void                 (*dbg_show)(struct seq_file *s,\\r\\n27                                             struct gpio_chip *chip);\\r\\n28        int                  base;\\r\\n29        u16                  ngpio;\\r\\n30        const char           *const *names;\\r\\n31        unsigned             can_sleep:1;\\r\\n32        unsigned             exported:1;\\r\\n33\\r\\n34#if defined(CONFIG_OF_GPIO)\\r\\n35        /*\\r\\n36         * If CONFIG_OF is enabled, then all GPIO controllers described in the\\r\\n37         * device tree automatically may have an OF translation\\r\\n38         */\\r\\n39        struct device_node *of_node;\\r\\n40        int of_gpio_n_cells;\\r\\n41        int (*of_xlate)(struct gpio_chip *gc,\\r\\n42                        const struct of_phandle_args *gpiospec, u32 *flags);\\r\\n43#endif\\r\\n44};\\r\\n```\\r\\n\\r\\n\u901a\u8fc7\u8fd9\u5c42\u5c01\u88c5\uff0c\u6bcf\u4e2a\u5177\u4f53\u7684\u8981\u7528\u5230GPIO\u7684\u8bbe\u5907\u9a71\u52a8\u90fd\u4f7f\u7528\u901a\u7528\u7684GPIO API\u6765\u64cd\u4f5cGPIO\uff0c\u8fd9\u4e9bAPI\u4e3b\u8981\u7528\u4e8eGPIO\u7684\u7533\u8bf7\u3001\u91ca\u653e\u548c\u8bbe\u7f6e\uff1a\\r\\n\\r\\n```\\r\\nint gpio_request(unsigned gpio, const char *label);\\r\\nvoid gpio_free(unsigned gpio);\\r\\nint gpio_direction_input(unsigned gpio);\\r\\nint gpio_direction_output(unsigned gpio, int value);\\r\\nint gpio_set_debounce(unsigned gpio, unsigned debounce);\\r\\nint gpio_get_value_cansleep(unsigned gpio);\\r\\nvoid gpio_set_value_cansleep(unsigned gpio, int value);\\r\\nint gpio_request_one(unsigned gpio, unsigned long flags, const char *label);\\r\\nint gpio_request_array(const struct gpio *array, size_t num);\\r\\nvoid gpio_free_array(const struct gpio *array, size_t num);\\r\\nint devm_gpio_request(struct device *dev, unsigned gpio, const char *label);\\r\\nint devm_gpio_request_one(struct device *dev, unsigned gpio,\\r\\n                         unsigned long flags, const char *label);\\r\\nvoid devm_gpio_free(struct device *dev, unsigned int gpio);\\r\\n```\\r\\n\\r\\n\u6ce8\u610f\uff1a \u5185\u6838\u4e2d\u9488\u5bf9\u5185\u5b58\u3001IRQ\u3001\u65f6\u949f\u3001GPIO\u3001pinctrl\u3001Regulator\u90fd\u6709\u4ee5devm_\u5f00\u5934\u7684API\uff0c\u4f7f\u7528\u8fd9\u90e8\u5206API\u7684\u65f6\u5019\uff0c\u5185\u6838\u4f1a\u6709\u7c7b\u4f3c\u4e8eJava\u7684\u8d44\u6e90\u81ea\u52a8\u56de\u6536\u673a\u5236\uff0c\u56e0\u6b64\u5728\u4ee3\u7801\u4e2d\u8fdb\u884c\u51fa\u9519\u5904\u7406\u65f6\uff0c\u65e0\u987b\u91ca\u653e\u76f8\u5173\u7684\u8d44\u6e90\u3002\\r\\n\\r\\n\u5bf9\u4e8eGPIO\u800c\u8a00\uff0c\u7279\u522b\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u5185\u6838\u4f1a\u521b\u5efa/sys\u8282\u70b9/sys/class/gpio/gpioN/\uff0c\u901a\u8fc7\u5b83\u6211\u4eec\u53ef\u4ee5echo\u503c\u4ece\u800c\u6539\u53d8GPIO\u7684\u65b9\u5411\u3001\u8bbe\u7f6e\u5e76\u83b7\u53d6GPIO\u7684\u503c\u3002\\r\\n\\r\\n\u5728\u62e5\u6709\u8bbe\u5907\u6811\u652f\u6301\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5907\u6811\u6765\u63cf\u8ff0\u67d0GPIO\u63a7\u5236\u5668\u63d0\u4f9b\u7684GPIO\u5f15\u811a\u88ab\u5177\u4f53\u8bbe\u5907\u4f7f\u7528\u7684\u60c5\u51b5\u3002\u5728GPIO\u63a7\u5236\u5668\u5bf9\u5e94\u7684\u8282\u70b9\u4e2d\uff0c\u9700\u5b9a\u4e49#gpio-cells\u548cgpio-controller\u5c5e\u6027\uff0c\u5177\u4f53\u7684\u8bbe\u5907\u8282\u70b9\u5219\u901a\u8fc7xxx-gpios\u5c5e\u6027\u6765\u5f15\u7528GPIO\u63a7\u5236\u5668\u8282\u70b9\u53caGPIO\u5f15\u811a\u3002\\r\\n\\r\\n\u5982VEXPRESS\u7535\u8def\u677fDT\u6587\u4ef6arch/arm/boot/dts/vexpress-v2m.dtsi\u4e2d\u6709\u5982\u4e0bGPIO\u63a7\u5236\u5668\u8282\u70b9\uff1a\\r\\n\\r\\n```\\r\\nv2m_sysreg: sysreg@00000 {\\r\\n        compatible = \\"arm,vexpress-sysreg\\";\\r\\n        reg = <0x00000 0x1000>;\\r\\n        gpio-controller;\\r\\n        #gpio-cells = <2>;\\r\\n};\\r\\n```\\r\\n\\r\\nVEXPRESS\u7535\u8def\u677f\u4e0a\u7684MMC\u63a7\u5236\u5668\u4f1a\u4f7f\u7528\u8be5\u8282\u70b9GPIO\u63a7\u5236\u5668\u63d0\u4f9b\u7684GPIO\u5f15\u811a\uff0c\u5219\u5177\u4f53\u7684mmci@05000\u8bbe\u5907\u8282\u70b9\u4f1a\u901a\u8fc7-gpios\u5c5e\u6027\u5f15\u7528GPIO\uff1a\\r\\n\\r\\n```\\r\\nmmci@05000 {\\r\\n        compatible = \\"arm,pl180\\", \\"arm,primecell\\";\\r\\n        reg = <0x05000 0x1000>;\\r\\n        interrupts = <9 10>;\\r\\n        cd-gpios = <&v2m_sysreg 0 0>;\\r\\n        wp-gpios = <&v2m_sysreg 1 0>;\\r\\n        \u2026\\r\\n\\r\\n};\\r\\n```\\r\\n\\r\\n\u5176\u4e2d\u7684cd-gpios\u7528\u4e8eSD/MMC\u5361\u7684\u63a2\u6d4b\uff0c\u800cwp-gpios\u7528\u4e8e\u5199\u4fdd\u62a4\uff0cMMC\u4e3b\u673a\u63a7\u5236\u5668\u9a71\u52a8\u4f1a\u901a\u8fc7\u5982\u4e0b\u65b9\u6cd5\u83b7\u53d6\u8fd9\u4e24\u4e2aGPIO\uff0c\u8be6\u89c1\u4e8edrivers/mmc/host/mmci.c\uff1a\\r\\n\\r\\n```\\r\\nstatic void mmci_dt_populate_generic_pdata(struct device_node *np,\\r\\n                                        struct mmci_platform_data *pdata)\\r\\n{\\r\\n        ...\\r\\n        pdata->gpio_wp = of_get_named_gpio(np, \\"wp-gpios\\", 0);\\r\\n        pdata->gpio_cd = of_get_named_gpio(np, \\"cd-gpios\\", 0);\\r\\n        ...\\r\\n}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0","description":"\u5728Linux\u5185\u6838\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528MODULEAUTHOR\u3001MODULEDESCRIPTION\u3001MODULEVERSION\u3001MODULEDEVICETABLE\u3001MODULEALIAS\u5206\u522b\u58f0\u660e\u6a21\u5757\u7684\u4f5c\u8005\u3001\u63cf\u8ff0\u3001\u7248\u672c\u3001\u8bbe\u5907\u8868\u548c\u522b\u540d\uff0c\u4f8b\u5982\uff1a","date":"2025-09-15T14:44:14.065Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.665,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/20.6\u3000GPIO\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8"}},"content":"\u5728Linux\u5185\u6838\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528MODULE_AUTHOR\u3001MODULE_DESCRIPTION\u3001MODULE_VERSION\u3001MODULE_DEVICE_TABLE\u3001MODULE_ALIAS\u5206\u522b\u58f0\u660e\u6a21\u5757\u7684\u4f5c\u8005\u3001\u63cf\u8ff0\u3001\u7248\u672c\u3001\u8bbe\u5907\u8868\u548c\u522b\u540d\uff0c\u4f8b\u5982\uff1a\\r\\n\\r\\n```\\r\\nMODULE_AUTHOR(author);\\r\\nMODULE_DESCRIPTION(description);\\r\\nMODULE_VERSION(version_string);\\r\\nMODULE_DEVICE_TABLE(table_info);\\r\\nMODULE_ALIAS(alternate_name);\\r\\n```\\r\\n\\r\\n\u5bf9\u4e8eUSB\u3001PCI\u7b49\u8bbe\u5907\u9a71\u52a8\uff0c\u901a\u5e38\u4f1a\u521b\u5efa\u4e00\u4e2aMODULE_DEVICE_TABLE\uff0c\u4ee5\u8868\u660e\u8be5\u9a71\u52a8\u6a21\u5757\u6240\u652f\u6301\u7684\u8bbe\u5907\uff0c\u5982\u4ee3\u7801\u6e05\u53554.6\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u53554.6\u3000\u9a71\u52a8\u6240\u652f\u6301\u7684\u8bbe\u5907\u5217\u8868\\r\\n\\r\\n```\\r\\n1 /* table of devices that work with this driver */\\r\\n2 static struct usb_device_id skel_table [] = {\\r\\n3 { USB_DEVICE(USB_SKEL_VENDOR_ID,\\r\\n4       USB_SKEL_PRODUCT_ID) },\\r\\n5     { } /* terminating enttry */\\r\\n6 };\\r\\n7\\r\\n8 MODULE_DEVICE_TABLE (usb, skel_table);\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8","description":"I2 C\u8bbe\u5907\u9a71\u52a8\u8981\u4f7f\u7528i2cdriver\u548ci2cclient\u6570\u636e\u7ed3\u6784\u5e76\u586b\u5145i2cdriver\u4e2d\u7684\u6210\u5458\u51fd\u6570\u3002i2cclient\u4e00\u822c\u88ab\u5305\u542b\u5728\u8bbe\u5907\u7684\u79c1\u6709\u4fe1\u606f\u7ed3\u6784\u4f53yyydata\u4e2d\uff0c\u800ci2cdriver\u5219\u9002\u5408\u88ab\u5b9a\u4e49\u4e3a\u5168\u5c40\u53d8\u91cf\u5e76\u521d\u59cb\u5316\uff0c\u4ee3\u7801\u6e05\u535515.12\u6240\u793a\u4e3a\u5df2\u88ab\u521d\u59cb\u5316\u7684i2c_driver\u3002","date":"2025-09-15T14:44:14.053Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":7.825,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/4.7\u3000\u6a21\u5757\u58f0\u660e\u4e0e\u63cf\u8ff0"},"nextItem":{"title":"2.6.1\u3000\u65f6\u5e8f\u5206\u6790\u7684\u6982\u5ff5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.6\u3000\u786c\u4ef6\u65f6\u5e8f\u5206\u6790"}},"content":"I2 C\u8bbe\u5907\u9a71\u52a8\u8981\u4f7f\u7528i2c_driver\u548ci2c_client\u6570\u636e\u7ed3\u6784\u5e76\u586b\u5145i2c_driver\u4e2d\u7684\u6210\u5458\u51fd\u6570\u3002i2c_client\u4e00\u822c\u88ab\u5305\u542b\u5728\u8bbe\u5907\u7684\u79c1\u6709\u4fe1\u606f\u7ed3\u6784\u4f53yyy_data\u4e2d\uff0c\u800ci2c_driver\u5219\u9002\u5408\u88ab\u5b9a\u4e49\u4e3a\u5168\u5c40\u53d8\u91cf\u5e76\u521d\u59cb\u5316\uff0c\u4ee3\u7801\u6e05\u535515.12\u6240\u793a\u4e3a\u5df2\u88ab\u521d\u59cb\u5316\u7684i2c_driver\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.12\u3000\u88ab\u521d\u59cb\u5316\u7684i2c_driver\\r\\n\\r\\n```\\r\\n1static struct i2c_driver yyy_driver = {\\r\\n2   .driver = {\\r\\n3     .name = \\"yyy\\",\\r\\n4   } ,\\r\\n5   .probe            = yyy_probe,\\r\\n6   .remove           = yyy_remove,\\r\\n7   .id_table         = yyy_id,\\r\\n8};\\r\\n```\\r\\n\\r\\n# 15.4.1\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\\r\\n\\r\\nI2 C\u8bbe\u5907\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u901a\u8fc7I2 C\u6838\u5fc3\u7684i2c_add_driver\uff08\uff09API\u51fd\u6570\u6dfb\u52a0i2c_driver\u7684\u5de5\u4f5c\uff0c\u800c\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u9700\u8981\u505a\u76f8\u53cd\u7684\u5de5\u4f5c\uff1a\u901a\u8fc7I2 C\u6838\u5fc3\u7684i2c_del_driver\uff08\uff09\u51fd\u6570\u5220\u9664i2c_driver\u3002\u4ee3\u7801\u6e05\u535515.13\u6240\u793a\u4e3aI2 C\u8bbe\u5907\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\u6a21\u677f\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.13\u3000I2 C\u5916\u8bbe\u9a71\u52a8\u7684\u6a21\u5757\u52a0\u8f7d\u4e0e\u5378\u8f7d\u51fd\u6570\u6a21\u677f\\r\\n\\r\\n```\\r\\n 1static int __init yyy_init(void)\\r\\n 2{\\r\\n 3          return i2c_add_driver(&yyy_driver);\\r\\n 4}\\r\\n 5module_initcall(yyy_init);\\r\\n 6\\r\\n 7static void __exit yyy_exit(void)\\r\\n 8{\\r\\n 9          i2c_del_driver(&yyy_driver);\\r\\n10}\\r\\n11module_exit(yyy_exit);\\r\\n```\\r\\n\\r\\n# 15.4.2\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8\u7684\u6570\u636e\u4f20\u8f93\\r\\n\\r\\n\u5728I2 C\u8bbe\u5907\u4e0a\u8bfb\u5199\u6570\u636e\u7684\u65f6\u5e8f\u4e14\u6570\u636e\u901a\u5e38\u901a\u8fc7i2c_msg\u6570\u7ec4\u8fdb\u884c\u7ec4\u7ec7\uff0c\u6700\u540e\u901a\u8fc7i2c_transfer\uff08\uff09\u51fd\u6570\u5b8c\u6210\uff0c\u4ee3\u7801\u6e05\u535515.14\u6240\u793a\u4e3a\u4e00\u4e2a\u8bfb\u53d6\u6307\u5b9a\u504f\u79fboffs\u7684\u5bc4\u5b58\u5668\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.14\u3000I2 C\u8bbe\u5907\u9a71\u52a8\u7684\u6570\u636e\u4f20\u8f93\u8303\u4f8b\\r\\n\\r\\n```\\r\\n 1struct i2c_msg msg[2];\\r\\n 2   /* \u7b2c\u4e00\u6761\u6d88\u606f\u662f\u5199\u6d88\u606f*/\\r\\n 3   msg[0].addr = client->addr;\\r\\n 4   msg[0].flags = 0;\\r\\n 5   msg[0].len = 1;\\r\\n 6   msg[0].buf = &offs;\\r\\n 7   /* \u7b2c\u4e8c\u6761\u6d88\u606f\u662f\u8bfb\u6d88\u606f*/\\r\\n 8   msg[1].addr = client->addr;\\r\\n 9   msg[1].flags = I2C_M_RD;\\r\\n10   msg[1].len = sizeof(buf);\\r\\n11   msg[1].buf = &buf[0];\\r\\n12\\r\\n13   i2c_transfer(client->adapter, msg, 2);\\r\\n```\\r\\n\\r\\n# 15.4.3\u3000Linux\u7684i2c-dev.c\u6587\u4ef6\u5206\u6790\\r\\n\\r\\ni2c-dev.c\u6587\u4ef6\u5b8c\u5168\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u4e2aI2 C\u8bbe\u5907\u9a71\u52a8\uff0c\u4e0d\u8fc7\uff0c\u5b83\u5b9e\u73b0\u7684i2c_client\u662f\u865a\u62df\u3001\u4e34\u65f6\u7684\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u4fbf\u4e8e\u4ece\u7528\u6237\u7a7a\u95f4\u64cd\u4f5cI2 C\u5916\u8bbe\u3002i2c-dev.c\u9488\u5bf9\u6bcf\u4e2aI2 C\u9002\u914d\u5668\u751f\u6210\u4e00\u4e2a\u4e3b\u8bbe\u5907\u53f7\u4e3a89\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u5b9e\u73b0\u4e86i2c_driver\u7684\u6210\u5458\u51fd\u6570\u4ee5\u53ca\u6587\u4ef6\u64cd\u4f5c\u63a5\u53e3\uff0c\u56e0\u6b64i2c-dev.c\u7684\u4e3b\u4f53\u662f\u201ci2c_driver\u6210\u5458\u51fd\u6570+\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u201d\u3002\\r\\n\\r\\ni2c-dev.c\u63d0\u4f9b\u7684i2cdev_read\uff08\uff09\u3001i2cdev_write\uff08\uff09\u51fd\u6570\u5bf9\u5e94\u4e8e\u7528\u6237\u7a7a\u95f4\u8981\u4f7f\u7528\u7684read\uff08\uff09\u548cwrite\uff08\uff09\u6587\u4ef6\u64cd\u4f5c\u63a5\u53e3\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u8c03\u7528I2 C\u6838\u5fc3\u7684i2c_master_recv\uff08\uff09\u548ci2c_master_send\uff08\uff09\u51fd\u6570\u6765\u6784\u9020\u4e00\u6761I2 C\u6d88\u606f\u5e76\u5f15\u53d1\u9002\u914d\u5668Algorithm\u901a\u4fe1\u51fd\u6570\u7684\u8c03\u7528\uff0c\u4ee5\u5b8c\u6210\u6d88\u606f\u7684\u4f20\u8f93\uff0c\u5b83\u4eec\u5bf9\u5e94\u4e8e\u5982\u56fe15.4\u6240\u793a\u7684\u65f6\u5e8f\u3002\\r\\n\\r\\n![1745070766336](./figure/1745070766336.png)\\r\\n\\r\\n\u56fe15.4\u3000i2cdev_read\uff08\uff09\u548ci2cdev_write\uff08\uff09\u51fd\u6570\u5bf9\u5e94\u7684\u65f6\u5e8f\\r\\n\\r\\n\u4f46\u662f\uff0c\u5f88\u9057\u61be\uff0c\u5927\u591a\u6570\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\u7684I2 C\u8bbe\u5907\u7684\u8bfb\u5199\u6d41\u7a0b\u5e76\u4e0d\u5bf9\u5e94\u4e8e\u4e00\u6761\u6d88\u606f\uff0c\u5f80\u5f80\u9700\u8981\u4e24\u6761\u751a\u81f3\u591a\u6761\u6d88\u606f\u6765\u8fdb\u884c\u4e00\u6b21\u8bfb\u5199\u5468\u671f\uff08\u5373\u5982\u56fe15.5\u6240\u793a\u7684\u91cd\u590d\u5f00\u59cb\u4f4d\u7684RepStart\u6a21\u5f0f\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u5e94\u7528\u5c42\u4ecd\u7136\u8c03\u7528read\uff08\uff09\u3001write\uff08\uff09\u6587\u4ef6API\u6765\u8bfb\u5199I2 C\u8bbe\u5907\uff0c\u5c06\u4e0d\u80fd\u6b63\u786e\u5730\u8bfb\u5199\u3002\\r\\n\\r\\n![1745070806688](./figure/1745070806688.png)\\r\\n\\r\\n\u56fe15.5\u3000RepStart\u6a21\u5f0f\\r\\n\\r\\n\u9274\u4e8e\u4e0a\u8ff0\u539f\u56e0\uff0ci2c-dev.c\u4e2d\u7684i2cdev_read\uff08\uff09\u548ci2cdev_write\uff08\uff09\u51fd\u6570\u4e0d\u5177\u5907\u592a\u5f3a\u7684\u901a\u7528\u6027\uff0c\u6ca1\u6709\u592a\u5927\u7684\u5b9e\u7528\u4ef7\u503c\uff0c\u53ea\u80fd\u9002\u7528\u4e8e\u975eRepStart\u6a21\u5f0f\u7684\u60c5\u51b5\u3002\u5bf9\u4e8e\u7531\u4e24\u6761\u4ee5\u4e0a\u6d88\u606f\u7ec4\u6210\u7684\u8bfb\u5199\uff0c\u5728\u7528\u6237\u7a7a\u95f4\u9700\u8981\u7ec4\u7ec7i2c_msg\u6d88\u606f\u6570\u7ec4\u5e76\u8c03\u7528I2C_RDWR IOCTL\u547d\u4ee4\u3002\u4ee3\u7801\u6e05\u535515.15\u6240\u793a\u4e3ai2cdev_ioctl\uff08\uff09\u51fd\u6570\u7684\u6846\u67b6\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.15\u3000i2c-dev_c\u4e2d\u7684i2cdev_ioctl\uff08\uff09\u51fd\u6570\\r\\n\\r\\n```\\r\\n 1static int i2cdev_ioctl(struct inode *inode, struct file *file,\\r\\n 2        unsigned int cmd, unsigned long arg)\\r\\n 3{\\r\\n 4   struct i2c_client *client = (struct i2c_client *)file->private_data;\\r\\n 5   ...\\r\\n 6   switch ( cmd ) {\\r\\n 7   case I2C_SLAVE:\\r\\n 8   case I2C_SLAVE_FORCE:\\r\\n 9        ...                           /* \u8bbe\u7f6e\u4ece\u8bbe\u5907\u5730\u5740*/\\r\\n10   case I2C_TENBIT:\\r\\n11        ...\\r\\n12   case I2C_PEC:\\r\\n13        ...\\r\\n14   case I2C_FUNCS:\\r\\n15        ...\\r\\n16   case I2C_RDWR:\\r\\n17       return i2cdev_ioctl_rdrw(client, arg);\\r\\n18   case I2C_SMBUS:\\r\\n19        ...\\r\\n20   case I2C_RETRIES:\\r\\n21        ...\\r\\n22   case I2C_TIMEOUT:\\r\\n23        ...\\r\\n24   default:\\r\\n25      return i2c_control(client,cmd,arg);\\r\\n26}\\r\\n27return 0;\\r\\n28}\\r\\n```\\r\\n\\r\\n\u5e38\u7528\u7684IOCTL\u5305\u62ecI2C_SLAVE\uff08\u8bbe\u7f6e\u4ece\u8bbe\u5907\u5730\u5740\uff09\u3001I2C_RETRIES\uff08\u6ca1\u6709\u6536\u5230\u8bbe\u5907ACK\u60c5\u51b5\u4e0b\u7684\u91cd\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1\uff09\u3001I2C_TIMEOU\uff08\u8d85\u65f6\uff09\u4ee5\u53caI2C_RDWR\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.16\u548c\u4ee3\u7801\u6e05\u535515.17\u6240\u793a\u4e3a\u76f4\u63a5\u901a\u8fc7read\uff08\uff09\u3001write\uff08\uff09\u63a5\u53e3\u548cO_RDWR IOCTL\u8bfb\u5199I2 C\u8bbe\u5907\u7684\u4f8b\u5b50\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.16\u3000\u76f4\u63a5\u901a\u8fc7read\uff08\uff09/write\uff08\uff09\u8bfb\u5199I2 C\u8bbe\u5907\\r\\n\\r\\n```\\r\\n 1#include <stdio.h>\\r\\n 2#include <linux/types.h>\\r\\n 3#include <fcntl.h>\\r\\n 4#include <unistd.h>\\r\\n 5#include <stdlib.h>\\r\\n 6#include <sys/types.h>\\r\\n 7#include <sys/ioctl.h>\\r\\n 8#include <linux/i2c.h>\\r\\n 9#include <linux/i2c-dev.h>\\r\\n10\\r\\n11int main(int argc, char **argv)\\r\\n12{\\r\\n13   unsigned int fd;\\r\\n14   unsigned short mem_addr;\\r\\n15   unsigned short size;\\r\\n16   unsigned short idx;\\r\\n17   #define BUFF_SIZE    32\\r\\n18   char buf[BUFF_SIZE];\\r\\n19   char cswap;\\r\\n20   union\\r\\n21   {\\r\\n22    unsigned short addr;\\r\\n23    char bytes[2];\\r\\n24}  tmp;\\r\\n25\\r\\n26   if (argc < 3) {\\r\\n27    printf(\\"Use:\\\\n%s /dev/i2c-x mem_addr size\\\\n\\", argv[0]);\\r\\n28    return 0;\\r\\n29   }\\r\\n30   sscanf(argv[2], \\"%d\\", &mem_addr);\\r\\n31   sscanf(argv[3], \\"%d\\", &size);\\r\\n32\\r\\n33   if (size > BUFF_SIZE)\\r\\n34    size = BUFF_SIZE;\\r\\n35\\r\\n36   fd = open(argv[1], O_RDWR);\\r\\n37\\r\\n38   if (!fd) {\\r\\n39    printf(\\"Error on opening the device file\\\\n\\");\\r\\n40    return 0;\\r\\n41   }\\r\\n42\\r\\n43   ioctl(fd, I2C_SLAVE, 0x50); /* \u8bbe\u7f6eEEPROM\u5730\u5740*/\\r\\n44   ioctl(fd, I2C_TIMEOUT, 1);  /* \u8bbe\u7f6e\u8d85\u65f6*/\\r\\n45   ioctl(fd, I2C_RETRIES, 1);  /* \u8bbe\u7f6e\u91cd\u8bd5\u6b21\u6570*/\\r\\n46\\r\\n47   for (idx = 0; idx < size; ++idx, ++mem_addr) {\\r\\n48    tmp.addr = mem_addr;\\r\\n49    cswap = tmp.bytes[0];\\r\\n50    tmp.bytes[0] = tmp.bytes[1];\\r\\n51    tmp.bytes[1] = cswap;\\r\\n52    write(fd, &tmp.addr, 2);\\r\\n53    read(fd, &buf[idx], 1);\\r\\n54   }\\r\\n55   buf[size] = 0;\\r\\n56   close(fd);\\r\\n57   printf(\\"Read %d char: %s\\\\n\\", size, buf);\\r\\n58   return 0;\\r\\n59}\\r\\n```\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535515.17\u3000\u901a\u8fc7O_RDWR IOCTL\u8bfb\u5199I2 C\u8bbe\u5907\\r\\n\\r\\n```\\r\\n 1#include <stdio.h>\\r\\n 2#include <linux/types.h>\\r\\n 3#include <fcntl.h>\\r\\n 4#include <unistd.h>\\r\\n 5#include <stdlib.h>\\r\\n 6#include <sys/types.h>\\r\\n 7#include <sys/ioctl.h>\\r\\n 8#include <errno.h>\\r\\n 9#include <assert.h>\\r\\n10#include <string.h>\\r\\n11#include <linux/i2c.h>\\r\\n12#include <linux/i2c-dev.h>\\r\\n13\\r\\n14int main(int argc, char **argv)\\r\\n15{\\r\\n16struct i2c_rdwr_ioctl_data work_queue;\\r\\n17unsigned int idx;\\r\\n18unsigned int fd;\\r\\n19unsigned int slave_address, reg_address;\\r\\n20unsigned char val;\\r\\n21int i;\\r\\n22int ret;\\r\\n23\\r\\n24if (argc < 4) {\\r\\n25      printf(\\"Usage:\\\\n%s /dev/i2c-x start_addr reg_addr\\\\n\\", argv[0]);\\r\\n26      return 0;\\r\\n27}\\r\\n28\\r\\n29fd = open(argv[1], O_RDWR);\\r\\n30\\r\\n31if (!fd) {\\r\\n32      printf(\\"Error on opening the device file\\\\n\\");\\r\\n33      return 0;\\r\\n34}\\r\\n35sscanf(argv[2], \\"%x\\", &slave_address);\\r\\n36sscanf(argv[3], \\"%x\\", &reg_address);\\r\\n37\\r\\n38work_queue.nmsgs = 2;         /* \u6d88\u606f\u6570\u91cf*/\\r\\n39work_queue.msgs = (struct i2c_msg*)malloc(work_queue.nmsgs *sizeof(struct\\r\\n40           i2c_msg));\\r\\n41if (!work_queue.msgs) {\\r\\n42       printf(\\"Memory alloc error\\\\n\\");\\r\\n43       close(fd);\\r\\n44       return 0;\\r\\n45}\\r\\n46\\r\\n47ioctl(fd, I2C_TIMEOUT, 2);    /* \u8bbe\u7f6e\u8d85\u65f6*/\\r\\n48ioctl(fd, I2C_RETRIES, 1);    /* \u8bbe\u7f6e\u91cd\u8bd5\u6b21\u6570*/\\r\\n49\\r\\n50for (i = reg_address; i < reg_address + 16; i++) {\\r\\n51       val = i;\\r\\n52      (work_queue.msgs[0]).len = 1;\\r\\n53      (work_queue.msgs[0]).addr = slave_address;\\r\\n54      (work_queue.msgs[0]).buf = &val;\\r\\n55\\r\\n56      (work_queue.msgs[1]).len = 1;\\r\\n57      (work_queue.msgs[1]).flags = I2C_M_RD;\\r\\n58      (work_queue.msgs[1]).addr = slave_address;\\r\\n59      (work_queue.msgs[1]).buf = &val;\\r\\n60\\r\\n61      ret = ioctl(fd, I2C_RDWR, (unsigned long) &work_queue);\\r\\n62      if (ret < 0)\\r\\n63      printf(\\"Error during I2C_RDWR ioctl with error code: %d\\\\n\\", ret);\\r\\n64else\\r\\n65      printf(\\"reg:%02x val:%02x\\\\n\\", i, val);\\r\\n66}\\r\\n67close(fd);\\r\\n68return ;\\r\\n69}\\r\\n```\\r\\n\\r\\n\u4f7f\u7528\u8be5\u5de5\u5177\u53ef\u6307\u5b9a\u8bfb\u53d6\u67d0I2 C\u63a7\u5236\u5668\u4e0a\u67d0I2 C\u4ece\u8bbe\u5907\u7684\u67d0\u5bc4\u5b58\u5668\uff0c\u5982\u8bfbI2 C\u63a7\u5236\u56680\u4e0a\u7684\u5730\u5740\u4e3a0x18\u7684\u4ece\u8bbe\u5907\uff0c\u4ece\u5bc4\u5b58\u56680x20\u5f00\u59cb\u8bfb\uff1a\\r\\n\\r\\n```\\r\\n# i2c-test /dev/i2c-0 0x18 0x20\\r\\nreg:20 val:07\\r\\nreg:21 val:00\\r\\nreg:22 val:00\\r\\nreg:23 val:00\\r\\nreg:24 val:00\\r\\nreg:25 val:00\\r\\nreg:26 val:00\\r\\nreg:27 val:00\\r\\nreg:28 val:00\\r\\nreg:29 val:00\\r\\nreg:2a val:00\\r\\nreg:2b val:00\\r\\nreg:2c val:00\\r\\nreg:2d val:00\\r\\nreg:2e val:00\\r\\nreg:2f val:00\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.6\u3000\u786c\u4ef6\u65f6\u5e8f\u5206\u6790","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.6\u3000\u786c\u4ef6\u65f6\u5e8f\u5206\u6790","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.6\u3000\u786c\u4ef6\u65f6\u5e8f\u5206\u6790.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.6\u3000\u786c\u4ef6\u65f6\u5e8f\u5206\u6790.md","title":"2.6.1\u3000\u65f6\u5e8f\u5206\u6790\u7684\u6982\u5ff5","description":"\u9a71\u52a8\u5de5\u7a0b\u5e08\u4e00\u822c\u4e0d\u9700\u8981\u5206\u6790\u786c\u4ef6\u7684\u65f6\u5e8f\uff0c\u4f46\u662f\u9274\u4e8e\u8bb8\u591a\u4f01\u4e1a\u5185\u9a71\u52a8\u5de5\u7a0b\u5e08\u8fd8\u9700\u8981\u627f\u62c5\u7535\u8def\u677f\u8c03\u8bd5\u7684\u4efb\u52a1\uff0c\u56e0\u6b64\uff0c\u638c\u63e1\u65f6\u5e8f\u5206\u6790\u7684\u65b9\u6cd5\u4e5f\u5c31\u6bd4\u8f83\u5fc5\u8981\u4e86","date":"2025-09-15T14:44:14.041Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.215,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/15.4\u3000Linux I2 C\u8bbe\u5907\u9a71\u52a8"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790"}},"content":"\u9a71\u52a8\u5de5\u7a0b\u5e08\u4e00\u822c\u4e0d\u9700\u8981\u5206\u6790\u786c\u4ef6\u7684\u65f6\u5e8f\uff0c\u4f46\u662f\u9274\u4e8e\u8bb8\u591a\u4f01\u4e1a\u5185\u9a71\u52a8\u5de5\u7a0b\u5e08\u8fd8\u9700\u8981\u627f\u62c5\u7535\u8def\u677f\u8c03\u8bd5\u7684\u4efb\u52a1\uff0c\u56e0\u6b64\uff0c\u638c\u63e1\u65f6\u5e8f\u5206\u6790\u7684\u65b9\u6cd5\u4e5f\u5c31\u6bd4\u8f83\u5fc5\u8981\u4e86\\r\\n\\r\\n\u5bf9\u9a71\u52a8\u5de5\u7a0b\u5e08\u6216\u786c\u4ef6\u5de5\u7a0b\u5e08\u800c\u8a00\uff0c\u65f6\u5e8f\u5206\u6790\u7684\u610f\u601d\u662f\u8ba9\u82af\u7247\u4e4b\u95f4\u7684\u8bbf\u95ee\u6ee1\u8db3\u82af\u7247\u6570\u636e\u624b\u518c\u4e2d\u65f6\u5e8f\u56fe\u4fe1\u53f7\u6709\u6548\u7684\u5148\u540e\u987a\u5e8f\u3001\u91c7\u6837\u5efa\u7acb\u65f6\u95f4\uff08Setup Time\uff09\u548c\u4fdd\u6301\u65f6\u95f4\uff08Hold Time\uff09\u7684\u8981\u6c42\uff0c\u5728\u7535\u8def\u677f\u5de5\u4f5c\u4e0d\u6b63\u5e38\u7684\u65f6\u5019\uff0c\u51c6\u786e\u5730\u5b9a\u4f4d\u65f6\u5e8f\u65b9\u9762\u7684\u95ee\u9898\u3002\\r\\n\\r\\n\u5efa\u7acb\u65f6\u95f4\u662f\u6307\u5728\u89e6\u53d1\u5668\u7684\u65f6\u949f\u4fe1\u53f7\u8fb9\u6cbf\u5230\u6765\u4ee5\u524d\uff0c\u6570\u636e\u5df2\u7ecf\u4fdd\u6301\u7a33\u5b9a\u4e0d\u53d8\u7684\u65f6\u95f4\uff0c\u5982\u679c\u5efa\u7acb\u65f6\u95f4\u4e0d\u591f\uff0c\u6570\u636e\u5c06\u4e0d\u80fd\u5728\u8fd9\u4e2a\u65f6\u949f\u8fb9\u6cbf\u88ab\u6253\u5165\u89e6\u53d1\u5668\uff1b\u4fdd\u6301\u65f6\u95f4\u662f\u6307\u5728\u89e6\u53d1\u5668\u7684\u65f6\u949f\u4fe1\u53f7\u8fb9\u6cbf\u5230\u6765\u4ee5\u540e\uff0c\u6570\u636e\u8fd8\u9700\u7a33\u5b9a\u4e0d\u53d8\u7684\u65f6\u95f4\uff0c\u5982\u679c\u4fdd\u6301\u65f6\u95f4\u4e0d\u591f\uff0c\u6570\u636e\u540c\u6837\u4e0d\u80fd\u88ab\u6253\u5165\u89e6\u53d1\u5668\u3002\u5982\u56fe2.25\u6240\u793a\uff0c\u6570\u636e\u7a33\u5b9a\u4f20\u8f93\u5fc5\u987b\u6ee1\u8db3\u5efa\u7acb\u65f6\u95f4\u548c\u4fdd\u6301\u65f6\u95f4\u7684\u8981\u6c42\uff0c\u5f53\u7136\uff0c\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5efa\u7acb\u65f6\u95f4\u548c\u4fdd\u6301\u65f6\u95f4\u7684\u503c\u53ef\u4ee5\u4e3a\u96f6\u3002\\r\\n\\r\\n![image-20250323212039668](./figure/image-20250323212039668.png)\\r\\n\\r\\n\u56fe2.25\u3000\u5efa\u7acb\u65f6\u95f4\u548c\u4fdd\u6301\u65f6\u95f4\\r\\n\\r\\n# 2.6.2\u3000\u5178\u578b\u7684\u786c\u4ef6\u65f6\u5e8f\\r\\n\\r\\n\u6700\u5178\u578b\u7684\u786c\u4ef6\u65f6\u5e8f\u662fSRAM\u7684\u8bfb\u5199\u65f6\u5e8f\uff0c\u5728\u8bfb/\u5199\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u7684\u4fe1\u53f7\u5305\u62ec\u5730\u5740\u3001\u6570\u636e\u3001\u7247\u9009\u3001\u8bfb/\u5199\u3001\u5b57\u8282\u4f7f\u80fd\u548c\u5c31\u7eea/\u5fd9\u3002\u5bf9\u4e8e\u4e00\u4e2a16\u4f4d\u300132\u4f4d\uff08\u751a\u81f364\u4f4d\uff09\u7684SRAM\uff0c\u5b57\u8282\u4f7f\u80fd\u8868\u660e\u54ea\u4e9b\u5b57\u8282\u88ab\u8bfb\u5199\u3002\\r\\n\\r\\n\u56fe2.26\u7ed9\u51fa\u4e86SRAM\u7684\u8bfb\u65f6\u5e8f\uff0c\u5199\u65f6\u5e8f\u4e0e\u6b64\u76f8\u4f3c\u3002\u9996\u5148\uff0c\u5730\u5740\u603b\u7ebf\u4e0a\u8f93\u51fa\u8981\u8bfb\uff08\u5199\uff09\u7684\u5730\u5740\uff0c\u7136\u540e\u53d1\u51faSRAM\u7247\u9009\u4fe1\u53f7\uff0c\u63a5\u7740\u8f93\u51fa\u8bfb\uff08\u5199\uff09\u4fe1\u53f7\uff0c\u4e4b\u540e\u8bfb\uff08\u5199\uff09\u4fe1\u53f7\u8981\u7ecf\u5386\u6570\u4e2a\u7b49\u5f85\u5468\u671f\u3002\u5f53SRAM\u8bfb\uff08\u5199\uff09\u901f\u5ea6\u6bd4\u8f83\u6162\u65f6\uff0c\u7b49\u5f85\u5468\u671f\u53ef\u4ee5\u7531MCU\u7684\u76f8\u5e94\u5bc4\u5b58\u5668\u8bbe\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5907\u5c31\u7eea/\u5fd9\uff08\u5982\u56fe2.27\u4e2d\u7684nWait\uff09\u5411CPU\u62a5\u544a\uff0c\u8fd9\u6837\uff0c\u8bfb\u5199\u8fc7\u7a0b\u4e2d\u4f1a\u81ea\u52a8\u6dfb\u52a0\u7b49\u5f85\u5468\u671f\u3002\\r\\n\\r\\n![image-20250323212118955](./figure/image-20250323212118955.png)\\r\\n\\r\\n\u56fe2.26\u3000SRAM\u8bfb\u65f6\u5e8f\u56fe\\r\\n\\r\\nNOR Flash\u548c\u8bb8\u591a\u5916\u8bbe\u63a7\u5236\u82af\u7247\u90fd\u4f7f\u7528\u4e86\u7c7b\u4f3cSRAM\u7684\u8bbf\u95ee\u65f6\u5e8f\uff0c\u56e0\u6b64\uff0c\u7262\u56fa\u638c\u63e1\u8fd9\u4e2a\u65f6\u5e8f\u610f\u4e49\u91cd\u5927\u3002\u4e00\u822c\uff0c\u5728\u82af\u7247\u6570\u636e\u624b\u518c\u7ed9\u51fa\u7684\u65f6\u5e8f\u56fe\u4e2d\uff0c\u4f1a\u7ed9\u51fa\u56fe\u4e2d\u5404\u6bb5\u65f6\u95f4\u7684\u542b\u4e49\u548c\u8981\u6c42\uff0c\u771f\u5b9e\u7684\u7535\u8def\u677f\u5fc5\u987b\u6ee1\u8db3\u82af\u7247\u6570\u636e\u624b\u518c\u4e2d\u63cf\u8ff0\u7684\u5efa\u7acb\u65f6\u95f4\u548c\u4fdd\u6301\u65f6\u95f4\u7684\u6700\u5c0f\u8981\u6c42"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790","description":"\u539f\u7406\u56fe\u5206\u6790\u7684\u542b\u4e49\u662f\u6307\u901a\u8fc7\u9605\u8bfb\u7535\u8def\u677f\u7684\u539f\u7406\u56fe\u83b7\u5f97\u5404\u79cd\u5b58\u50a8\u5668\u3001\u5916\u8bbe\u6240\u4f7f\u7528\u7684\u786c\u4ef6\u8d44\u6e90\u3001\u63a5\u53e3\u548c\u5f15\u811a\u8fde\u63a5\u5173\u7cfb\u3002\u82e5\u8981\u6574\u4f53\u7406\u89e3\u6574\u4e2a\u7535\u8def\u677f\u7684\u786c\u4ef6\u7ec4\u6210\uff0c\u539f\u7406\u56fe\u7684\u5206\u6790\u65b9\u6cd5\u662f\u4ee5\u4e3bCPU\u4e3a\u4e2d\u5fc3\u5411\u5b58\u50a8\u5668\u548c\u5916\u8bbe\u8f90\u5c04\uff0c\u6b65\u9aa4\u5982\u4e0b\u3002","date":"2025-09-15T14:44:14.029Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":2.54,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"2.6.1\u3000\u65f6\u5e8f\u5206\u6790\u7684\u6982\u5ff5","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.6\u3000\u786c\u4ef6\u65f6\u5e8f\u5206\u6790"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e"}},"content":"\u539f\u7406\u56fe\u5206\u6790\u7684\u542b\u4e49\u662f\u6307\u901a\u8fc7\u9605\u8bfb\u7535\u8def\u677f\u7684\u539f\u7406\u56fe\u83b7\u5f97\u5404\u79cd\u5b58\u50a8\u5668\u3001\u5916\u8bbe\u6240\u4f7f\u7528\u7684\u786c\u4ef6\u8d44\u6e90\u3001\u63a5\u53e3\u548c\u5f15\u811a\u8fde\u63a5\u5173\u7cfb\u3002\u82e5\u8981\u6574\u4f53\u7406\u89e3\u6574\u4e2a\u7535\u8def\u677f\u7684\u786c\u4ef6\u7ec4\u6210\uff0c\u539f\u7406\u56fe\u7684\u5206\u6790\u65b9\u6cd5\u662f\u4ee5\u4e3bCPU\u4e3a\u4e2d\u5fc3\u5411\u5b58\u50a8\u5668\u548c\u5916\u8bbe\u8f90\u5c04\uff0c\u6b65\u9aa4\u5982\u4e0b\u3002\\r\\n\\r\\n1\uff09\u9605\u8bfbCPU\u90e8\u5206\uff0c\u83b7\u77e5CPU\u7684\u54ea\u4e9b\u7247\u9009\u3001\u4e2d\u65ad\u548c\u96c6\u6210\u7684\u5916\u8bbe\u63a7\u5236\u5668\u5728\u4f7f\u7528\uff0c\u5217\u51fa\u8fd9\u4e9b\u5143\u7d20a\u3001b\u3001c\u3001\u2026\u3002\\r\\n\\r\\nCPU\u5f15\u811a\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u82af\u7247\u53ef\u80fd\u4f1a\u88ab\u5206\u6210\u51e0\u4e2a\u6a21\u5757\u5e76\u5355\u72ec\u753b\u5728\u539f\u7406\u56fe\u7684\u4e0d\u540c\u9875\u4e0a\uff0c\u8fd9\u65f6\u5e94\u8be5\u628a\u76f8\u5e94\u7684\u90e8\u5206\u90fd\u5206\u6790\u5230\u4f4d\u3002\\r\\n\\r\\n2\uff09\u5bf9\u7b2c1\u6b65\u4e2d\u5217\u51fa\u7684\u5143\u7d20\uff0c\u4ece\u539f\u7406\u56fe\u4e2d\u5bf9\u5e94\u7684\u5916\u8bbe\u548c\u5b58\u50a8\u5668\u7535\u8def\u4e2d\u5206\u6790\u51fa\u5b9e\u9645\u7684\u4f7f\u7528\u60c5\u51b5\u3002\\r\\n\\r\\n\u786c\u4ef6\u539f\u7406\u56fe\u4e2d\u5305\u542b\u5982\u4e0b\u5143\u7d20\u3002\\r\\n\\r\\n\xb7\u7b26\u53f7\uff08symbol\uff09\u3002\u7b26\u53f7\u63cf\u8ff0\u82af\u7247\u7684\u5916\u56f4\u5f15\u811a\u4ee5\u53ca\u5f15\u811a\u7684\u4fe1\u53f7\uff0c\u5bf9\u4e8e\u590d\u6742\u7684\u82af\u7247\uff0c\u53ef\u80fd\u4f1a\u88ab\u5206\u5272\u4e3a\u51e0\u4e2a\u7b26\u53f7\u3002\u5728\u7b26\u53f7\u4e2d\uff0c\u4e00\u822c\u628a\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4fe1\u53f7\u7fa4\u7684\u5f15\u811a\u6392\u5217\u5728\u4e00\u8d77\u3002\u56fe2.22\u6240\u793a\u4e3aNOR Flash AM29LV160DB\u548cNAND Flash K9F2G08\u7684\u7b26\u53f7\u3002\\r\\n\\r\\n![1742735930502](./figure/1742735930502.png)\\r\\n\\r\\n\u56fe2.22\u3000\u539f\u7406\u56fe\u4e2d\u7684\u7b26\u53f7\\r\\n\\r\\n\xb7\u7f51\u7edc\uff08net\uff09\u3002\u63cf\u8ff0\u82af\u7247\u3001\u63a5\u63d2\u4ef6\u548c\u5206\u79bb\u5143\u5668\u4ef6\u5f15\u811a\u4e4b\u95f4\u7684\u4e92\u8fde\u5173\u7cfb\uff0c\u6bcf\u4e2a\u7f51\u7edc\u9700\u8981\u6839\u636e\u4fe1\u53f7\u7684\u5b9a\u4e49\u8d4b\u4e88\u4e00\u4e2a\u5408\u9002\u7684\u540d\u5b57\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u7f51\u7edc\u53d6\u540d\u5b57\uff0cEDA\u8f6f\u4ef6\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u9ed8\u8ba4\u7684\u7f51\u7edc\u540d\u3002\u6dfb\u52a0\u7f51\u7edc\u540e\u7684AM29LV160DB\u5982\u56fe2.23\u6240\u793a\u3002\\r\\n\\r\\n\xb7\u63cf\u8ff0\u3002\u539f\u7406\u56fe\u4e2d\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u6587\u5b57\u6765\u8f85\u52a9\u63cf\u8ff0\u539f\u7406\u56fe\uff08\u7c7b\u4f3c\u6e90\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\uff09\uff0c\u5982\u6bcf\u9875\u9875\u811a\u4f1a\u6709\u8be5\u9875\u7684\u529f\u80fd\u63cf\u8ff0\uff0c\u5bf9\u91cd\u8981\u7684\u4fe1\u53f7\uff0c\u5728\u539f\u7406\u56fe\u7684\u76f8\u5e94\u7b26\u53f7\u548c\u7f51\u7edc\u4e2d\u4e5f\u4f1a\u9644\u5e26\u6587\u5b57\u8bf4\u660e\u3002\u56fe2.24\u4e2d\u7ed9\u51fa\u4e86\u539f\u7406\u56fe\u4e2d\u7684\u63cf\u8ff0\u793a\u4f8b\u3002\\r\\n\\r\\n![1742735964764](./figure/1742735964764.png)\\r\\n\\r\\n\u56fe2.23\u3000\u539f\u7406\u56fe\u4e2d\u7684\u7f51\u7edc\\r\\n\\r\\n![image-20250323211946809](./figure/image-20250323211946809.png)\\r\\n\\r\\n\u56fe2.24\u3000\u539f\u7406\u56fe\u4e2d\u7684\u63cf\u8ff0\u793a\u4f8b"},{"id":"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e.md","title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","description":"\u5757\u8bbe\u5907\u9a71\u52a8\u7684open\uff08\uff09\u51fd\u6570\u548c\u5176\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u5bf9\u7b49\u4f53\u4e0d\u592a\u76f8\u4f3c\uff0c\u524d\u8005\u4e0d\u4ee5\u76f8\u5173\u7684inode\u548cfile\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff08\u56e0\u4e3afile\u548cinode\u6982\u5ff5\u4f4d\u4e8e\u6587\u4ef6\u7cfb\u7edf\u5c42\u4e2d\uff09\u3002\u5728open\uff08\uff09\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7blockdevice\u53c2\u6570bdev\u83b7\u53d6privatedata\u3001\u5728release\uff08\uff09\u51fd\u6570\u4e2d\u5219\u901a\u8fc7gendisk\u53c2\u6570disk\u83b7\u53d6\uff0c\u5982\u4ee3\u7801\u6e05\u535513.7\u6240\u793a\u3002","date":"2025-09-15T14:44:14.021Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.77,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/2.5\u3000\u539f\u7406\u56fe\u5206\u6790"},"nextItem":{"title":"\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd","permalink":"/blog/\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd"}},"content":"\u5757\u8bbe\u5907\u9a71\u52a8\u7684open\uff08\uff09\u51fd\u6570\u548c\u5176\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7684\u5bf9\u7b49\u4f53\u4e0d\u592a\u76f8\u4f3c\uff0c\u524d\u8005\u4e0d\u4ee5\u76f8\u5173\u7684inode\u548cfile\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff08\u56e0\u4e3afile\u548cinode\u6982\u5ff5\u4f4d\u4e8e\u6587\u4ef6\u7cfb\u7edf\u5c42\u4e2d\uff09\u3002\u5728open\uff08\uff09\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7block_device\u53c2\u6570bdev\u83b7\u53d6private_data\u3001\u5728release\uff08\uff09\u51fd\u6570\u4e2d\u5219\u901a\u8fc7gendisk\u53c2\u6570disk\u83b7\u53d6\uff0c\u5982\u4ee3\u7801\u6e05\u535513.7\u6240\u793a\u3002\\r\\n\\r\\n\u4ee3\u7801\u6e05\u535513.7\u3000\u5728\u5757\u8bbe\u5907\u7684open\uff08\uff09/release\uff08\uff09\u51fd\u6570\u4e2d\u83b7\u53d6private_data\\r\\n\\r\\n```\\r\\n 1static int xxx_open(struct block_device *bdev, fmode_t mode)\\r\\n 2{\\r\\n 3 struct xxx_dev *dev = bdev->bd_disk->private_data;\\r\\n 4 ...\\r\\n 5  return 0;\\r\\n 6}\\r\\n 7\\r\\n 8static void xxx_release(struct gendisk *disk, fmode_t mode)\\r\\n 9{\\r\\n10 struct xxx_dev *dev = disk->private_data;\\r\\n11 ...\\r\\n12}\\r\\n```"},{"id":"/\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd","metadata":{"permalink":"/blog/\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd.md","source":"@site/blog/\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd.md","title":"\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd","description":"","date":"2025-09-15T14:44:14.009Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e","permalink":"/blog/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/13.4\u3000\u5757\u8bbe\u5907\u7684\u6253\u5f00\u4e0e\u91ca\u653e"},"nextItem":{"title":"\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91","permalink":"/blog/\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91"}},"content":""},{"id":"/\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91","metadata":{"permalink":"/blog/\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91.md","source":"@site/blog/\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91.md","title":"\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91","description":"\u5bb6\u5ead\u7684\u5e95\u5c42\u903b\u8f91\u662f\u7ecf\u6d4e\uff0c\u4e0d\u662f\u611f\u60c5","date":"2025-09-15T14:44:13.977Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.63,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd","permalink":"/blog/\u6280\u672f\u535a\u5ba2/AI\u76f8\u5173/AI\u6838\u5fc3\u6280\u80fd"},"nextItem":{"title":"\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b"}},"content":"\u5bb6\u5ead\u7684\u5e95\u5c42\u903b\u8f91\u662f\u7ecf\u6d4e\uff0c\u4e0d\u662f\u611f\u60c5 \\r\\n\\r\\n\u804c\u573a\u7684\u5e95\u5c42\u903b\u8f91\u662f\u4ef7\u503c\uff0c\u4e0d\u662f\u52aa\u529b \\r\\n\\r\\n\u6559\u80b2\u7684\u5e95\u5c42\u903b\u8f91\u662f\u57f9\u517b\uff0c\u4e0d\u662f\u5206\u6570 \\r\\n\\r\\n\u5065\u5eb7\u7684\u5e95\u5c42\u903b\u8f91\u662f\u81ea\u5f8b\uff0c\u4e0d\u662f\u533b\u7597 \\r\\n\\r\\n\u521b\u4e1a\u7684\u5e95\u5c42\u903b\u8f91\u662f\u5e02\u573a\uff0c\u4e0d\u662f\u4ea7\u54c1 \\r\\n\\r\\n\u6210\u4e8b\u7684\u5e95\u5c42\u903b\u8f91\u662f\u5b9e\u8df5\uff0c\u4e0d\u662f\u5b66\u4e60 \\r\\n\\r\\n\u8d5a\u94b1\u7684\u5e95\u5c42\u903b\u8f91\u662f\u9700\u6c42\uff0c\u4e0d\u662f\u8f9b\u82e6 \\r\\n\\r\\n\u6d41\u91cf\u7684\u5e95\u5c42\u903b\u8f91\u662f\u4eba\u6027\uff0c\u4e0d\u662f\u81ea\u55e8 \\r\\n\\r\\n\u6295\u8d44\u7684\u5e95\u5c42\u903b\u8f91\u662f\u98ce\u63a7\uff0c\u4e0d\u662f\u56de\u62a5"},{"id":"/\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b","metadata":{"permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b.md","source":"@site/blog/\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b.md","title":"\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b","description":"1753280662910","date":"2025-09-15T14:44:13.949Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.02,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91","permalink":"/blog/\u4eba\u751f\u54f2\u5b66/\u4eba\u751f\u7684\u5e95\u5c42\u903b\u8f91"},"nextItem":{"title":"\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f"}},"content":"![1753280662910](./figure/1753280662910.png)\\r\\n\\r\\n![1753280724485](./figure/1753280724485.png)\\r\\n\\r\\n![1753280745172](./figure/1753280745172.png)\\r\\n\\r\\n![image-20250723222611552](./figure/image-20250723222611552.png)"},{"id":"/\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f","metadata":{"permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f.md","source":"@site/blog/\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f.md","title":"\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f","description":"1753281068716","date":"2025-09-15T14:44:13.929Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.055,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/2025\u56fd\u5bb6\u751f\u80b2\u653f\u7b568\u5927\u8865\u8d34\u6c47\u603b"},"nextItem":{"title":"\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7"}},"content":"![1753281068716](./figure/1753281068716.png)\\r\\n\\r\\n![1753281089891](./figure/1753281089891.png)\\r\\n\\r\\n![1753281110880](./figure/1753281110880.png)\\r\\n\\r\\n![1753281141434](./figure/1753281141434.png)\\r\\n\\r\\n![image-20250723223249696](./figure/image-20250723223249696.png)\\r\\n\\r\\n![1753281185858](./figure/1753281185858.png)\\r\\n\\r\\n![1753281222507](./figure/1753281222507.png)\\r\\n\\r\\n![1753281240577](./figure/1753281240577.png)\\r\\n\\r\\n![1753281257406](./figure/1753281257406.png)\\r\\n\\r\\n![1753281297045](./figure/1753281297045.png)\\r\\n\\r\\n![1753281321610](./figure/1753281321610.png)"},{"id":"/\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7","metadata":{"permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7.md","source":"@site/blog/\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7.md","title":"\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7","description":"1753280848119","date":"2025-09-15T14:44:13.925Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.04,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u6000\u5b55\u6ce8\u610f"},"nextItem":{"title":"\u4e00\u3001\u5bbd11\u7c73\u6df19.8\u7c73","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u81ea\u5efa\u623f"}},"content":"![1753280848119](./figure/1753280848119.png)\\r\\n\\r\\n![image-20250723222752534](./figure/image-20250723222752534.png)\\r\\n\\r\\n![1753280888999](./figure/1753280888999.png)\\r\\n\\r\\n![1753280918268](./figure/1753280918268.png)\\r\\n\\r\\n![1753280934376](./figure/1753280934376.png)\\r\\n\\r\\n![1753280953307](./figure/1753280953307.png)\\r\\n\\r\\n![1753280989414](./figure/1753280989414.png)\\r\\n\\r\\n![1753281011903](./figure/1753281011903.png)"},{"id":"/\u4e2a\u4eba\u751f\u6d3b/\u81ea\u5efa\u623f","metadata":{"permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u81ea\u5efa\u623f","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u4e2a\u4eba\u751f\u6d3b/\u81ea\u5efa\u623f.md","source":"@site/blog/\u4e2a\u4eba\u751f\u6d3b/\u81ea\u5efa\u623f.md","title":"\u4e00\u3001\u5bbd11\u7c73\u6df19.8\u7c73","description":"\u6548\u679c\u56fe","date":"2025-09-15T14:44:13.589Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.05,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u987a\u4ea7"},"nextItem":{"title":"\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f"}},"content":"\u6548\u679c\u56fe\\r\\n\\r\\n![1753601227723](./figure/1753601227723.png)\\r\\n\\r\\n\u5e73\u9762\u5e03\u5c40\u56fe\\r\\n\\r\\n![image-20250727152747781](./figure/image-20250727152747781.png)"},{"id":"/\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f","metadata":{"permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f.md","source":"@site/blog/\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f.md","title":"\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f","description":"1753281371432","date":"2025-09-15T14:44:13.577Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.055,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4e00\u3001\u5bbd11\u7c73\u6df19.8\u7c73","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u81ea\u5efa\u623f"},"nextItem":{"title":"\u4f9d\u8d56\u5de5\u5177\u5b89\u88c5","permalink":"/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus2.4"}},"content":"![1753281371432](./figure/1753281371432.png)\\r\\n\\r\\n![1753281384408](./figure/1753281384408.png)\\r\\n\\r\\n![image-20250723223653484](./figure/image-20250723223653484.png)\\r\\n\\r\\n![1753281427975](./figure/1753281427975.png)\\r\\n\\r\\n![1753281444292](./figure/1753281444292.png)\\r\\n\\r\\n![1753281458287](./figure/1753281458287.png)\\r\\n\\r\\n![1753281473251](./figure/1753281473251.png)\\r\\n\\r\\n![1753281489948](./figure/1753281489948.png)\\r\\n\\r\\n![1753281505428](./figure/1753281505428.png)\\r\\n\\r\\n![1753281520308](./figure/1753281520308.png)\\r\\n\\r\\n![1753281535059](./figure/1753281535059.png)"},{"id":"/\u4e2a\u4eba\u535a\u5ba2/docusaurus2.4","metadata":{"permalink":"/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus2.4","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus2.4.md","source":"@site/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus2.4.md","title":"\u4f9d\u8d56\u5de5\u5177\u5b89\u88c5","description":"\u547d\u4ee4\u884c\u4f9d\u8d56\u5de5\u5177","date":"2025-09-15T14:44:13.521Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":5.385,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f","permalink":"/blog/\u4e2a\u4eba\u751f\u6d3b/\u5b55\u65e9\u671f"},"nextItem":{"title":"\u4f9d\u8d56\u5de5\u5177\u5b89\u88c5","permalink":"/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus3.7"}},"content":"\u547d\u4ee4\u884c\u4f9d\u8d56\u5de5\u5177\\r\\n\\r\\n```\\r\\n\\tapt install git make gcc g++ xz-utils\\r\\n```\\r\\n\\r\\n\u4e0b\u8f7dnodejs\\r\\n\\r\\n```\\r\\nhttps://nodejs.org/en/download\\r\\n```\\r\\n\\r\\n\u6211\u4e0b\u8f7d\u7684\u7248\u672c\u662f\\r\\n\\r\\n```\\r\\nnode-v22.14.0-linux-x64.tar.xz\\r\\n```\\r\\n\\r\\n\u4e0b\u8f7d\u540e\u89e3\u538b\u5230\u6307\u5b9a\u76ee\u5f55\uff0c\u7136\u540e\u4fee\u6539 ~/.bashrc \u6587\u4ef6\uff0c\u5c06 nodejs \u76f8\u5173\u53ef\u6267\u884c\u7a0b\u5e8f\u8def\u5f84\u6dfb\u52a0\u5230 PATH \u4e2d\u3002\u793a\u4f8b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nNODEJS=/home/szf/docusaurus/node-v22.14.0-linux-x64/bin\\r\\nexport PATH=$NODEJS:$PATH\\r\\n\\r\\n```\\r\\n\\r\\n# nodejs \u63d2\u4ef6\u5b89\u88c5\\r\\n\\r\\n\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\u5b89\u88c5\u4e4b\uff1a\\r\\n\\r\\n```\\r\\nnpx create-docusaurus@2.4 my-website classic\\r\\ncd ./my-website\\r\\nnpm install @cmfcmf/docusaurus-search-local --save-dev --registry=https://registry.npmmirror.com\\r\\nnpm install @node-rs/jieba --save-dev --registry=https://registry.npmmirror.com\\r\\nnpm install prism-react-renderer --save-dev --registry=https://registry.npmmirror.com\\r\\n```\\r\\n\\r\\n# \u9879\u76ee clone\\r\\n\\r\\n```\\r\\ngit clone https://github.com/shaozongfan/PuchengPeasant.github.io.git\\r\\n```\\r\\n\\r\\n\u514b\u9686 docusaurus \u9879\u76ee\u5230\u672c\u5730\uff0c\u5e76\u5c06PuchengPeasant.github.io\u62f7\u8d1d\u5230my-website\u76ee\u5f55\u4e0b\\r\\n\\r\\n\u5c06 node_modules\u62f7\u8d1d\u5230PuchengPeasant.github.io\u3002\\r\\n\\r\\n# \u7f16\u8bd1\u9879\u76ee\\r\\n\\r\\n\u8fdb\u5165 my-website\u76ee\u5f55\u4e2d\uff0c\u6267\u884c `npm run build`\u6765\u7f16\u8bd1\uff0c\u7f16\u8bd1\u6210\u529f\u7684\u4e3b\u8981\u65e5\u5fd7\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nrlk@rlk:my-website$ npm run build\\r\\n\\r\\n> my-website@0.0.0 build\\r\\n> docusaurus build\\r\\n\\r\\n[INFO] [en] Creating an optimized production build...\\r\\n\\r\\n\u2714 Client\\r\\n\\r\\n\\r\\n\u2714 Server\\r\\n  Compiled successfully in 1.60m\\r\\n\\r\\n\\r\\n\u2714 Client\\r\\n\\r\\n\\r\\n\u25cf Server \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 cache (99%) shutdown IdleFileCachePlugin\\r\\n stored\\r\\n\\r\\n[SUCCESS] Generated static files in \\"build\\".\\r\\n[INFO] Use `npm run serve` command to test your build locally.\\r\\n\\r\\n```\\r\\n\\r\\n# \u914d\u7f6e deploy\\r\\n\\r\\n### 1. \u751f\u6210SSH\u5bc6\\r\\n\\r\\n\u5982\u679c\u4f60\u8fd8\u6ca1\u6709SSH\u5bc6\u94a5\u5bf9\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u7ec8\u7aef\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u751f\u6210\u5b83\u4eec\uff1a\\r\\n\\r\\nbash\u590d\u5236\\r\\n\\r\\n```bash\\r\\nssh-keygen -t ed25519 -C \\"your_email@example.com\\"\\r\\n```\\r\\n\\r\\n- \u8fd9\u6761\u547d\u4ee4\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684SSH\u5bc6\u94a5\u5bf9\uff08\u516c\u94a5\u548c\u79c1\u94a5\uff09\u3002\\r\\n- \u6309\u7167\u63d0\u793a\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u4e3a\u5bc6\u94a5\u8bbe\u7f6e\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6309\u56de\u8f66\u952e\u7559\u7a7a\u3002\\r\\n- \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u516c\u94a5\u4f1a\u4fdd\u5b58\u5728`~/.ssh/id_ed25519.pub`\uff0c\u79c1\u94a5\u4f1a\u4fdd\u5b58\u5728`~/.ssh/id_ed25519`\u3002\\r\\n\\r\\n### 2. \u67e5\u770b\u516c\u94a5\\r\\n\\r\\n\u5728\u6dfb\u52a0SSH\u5bc6\u94a5\u5230GitHub\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u67e5\u770b\u516c\u94a5\u7684\u5185\u5bb9\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\uff1a\\r\\n\\r\\nbash\u590d\u5236\\r\\n\\r\\n```bash\\r\\ncat ~/.ssh/id_ed25519.pub\\r\\n```\\r\\n\\r\\n\u8fd9\u5c06\u663e\u793a\u4f60\u7684\u516c\u94a5\uff0c\u4f60\u9700\u8981\u590d\u5236\u8fd9\u90e8\u5206\u5185\u5bb9\u3002\\r\\n\\r\\n### 3. \u6dfb\u52a0SSH\u5bc6\u94a5\u5230GitHub\\r\\n\\r\\n1. \u767b\u5f55\u5230\u4f60\u7684GitHub\u8d26\u6237\u3002\\r\\n2. \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u5934\u50cf\uff0c\u9009\u62e9\u201cSettings\u201d\uff08\u8bbe\u7f6e\uff09\u3002\\r\\n3. \u5728\u8bbe\u7f6e\u9875\u9762\u7684\u4fa7\u8fb9\u680f\u4e2d\uff0c\u70b9\u51fb\u201cSSH and GPG keys\u201d\uff08SSH\u548cGPG\u5bc6\u94a5\uff09\u3002\\r\\n4. \u70b9\u51fb\u201cNew SSH key\u201d\uff08\u65b0\u5efaSSH\u5bc6\u94a5\uff09\u6309\u94ae\u3002\\r\\n5. \u5728\u201cTitle\u201d\uff08\u6807\u9898\uff09\u5b57\u6bb5\u4e2d\uff0c\u4e3a\u4f60\u7684\u5bc6\u94a5\u8bbe\u7f6e\u4e00\u4e2a\u63cf\u8ff0\u6027\u7684\u6807\u9898\uff0c\u4f8b\u5982\u4f60\u7684\u7b14\u8bb0\u672c\u7535\u8111\u7684\u540d\u79f0\u3002\\r\\n6. \u5728\u201cKey\u201d\uff08\u5bc6\u94a5\uff09\u5b57\u6bb5\u4e2d\uff0c\u7c98\u8d34\u4f60\u4e4b\u524d\u590d\u5236\u7684\u516c\u94a5\u5185\u5bb9\u3002\\r\\n7. \u70b9\u51fb\u201cAdd SSH key\u201d\uff08\u6dfb\u52a0SSH\u5bc6\u94a5\uff09\u6309\u94ae\u3002\\r\\n\\r\\n### 4. \u6d4b\u8bd5SSH\u5bc6\u94a5\\r\\n\\r\\n\u6dfb\u52a0SSH\u5bc6\u94a5\u540e\uff0c\u4f60\u5e94\u8be5\u6d4b\u8bd5\u5b83\u4ee5\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u5de5\u4f5c\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6d4b\u8bd5\uff1a\\r\\n\\r\\nbash\u590d\u5236\\r\\n\\r\\n```bash\\r\\nssh -T git@github.com\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n### 5.\u6267\u884c\u4e00\u6b21\u5982\u4e0b\u6b65\u9aa4\\r\\n\\r\\n\u4e00\u5b9a\u8981\u6267\u884c\u8fd9\u4e00\u6b65\uff0c\u5b8c\u6210\u8ba4\u8bc1\u8fc7\u7a0b\\r\\n\\r\\n```\\r\\n git clone --depth 1 --branch gh-pages git@github.com:shaozongfan/shaozongfan.github.io.git /tmp/shaozongfan.github.io.git-gh-pagesUOkBdR-tes\\r\\n```\\r\\n\\r\\n### 6.\u7ec8\u7aef\u8bbe\u7f6e\\r\\n\\r\\n```\\r\\n export USE_SSH=true\\r\\n```\\r\\n\\r\\n### 7.\u6267\u884c\\r\\n\\r\\n```\\r\\nnpm run deploy\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n# \u9047\u5230\u7684\u95ee\u9898\\r\\n\\r\\n1. \u7ec8\u7aef\u8bbe\u7f6e export USE_SSH=true\\r\\n2. \u6267\u884c `npm run deploy`\uff0c\u57fa\u7ebf\u6570\u636e\u5982\u4e0b\\r\\n\\r\\n```\\r\\n\\r\\n[INFO] `git commit -m \\"Deploy website - based on 8170f15060a5866dbc5c7cab1d586842e3480c74\\"` code: 0\\r\\nERROR: Permission to facebook/docusaurus.git denied to shaozongfan.\\r\\nfatal: Could not read from remote repository.\\r\\n\\r\\nPlease make sure you have the correct access rights\\r\\nand the repository exists.\\r\\n[INFO] `git push --force origin gh-pages` code: 128\\r\\n[ERROR] Deployment of the build output failed.\\r\\n[ERROR] Error: Running \\"git push\\" command failed. Does the GitHub user account you are using have push access to the repository?\\r\\n    at runDeploy (/home/szf/docusaurus/PuchengPeasant.github.io/node_modules/@docusaurus/core/lib/commands/deploy.js:158:19)\\r\\n    at async Command.deploy (/home/szf/docusaurus/PuchengPeasant.github.io/node_modules/@docusaurus/core/lib/commands/deploy.js:179:13)\\r\\n\\r\\n```\\r\\n\\r\\n# \u89e3\u51b3\u65b9\u6cd5\\r\\n\\r\\n\u4fee\u6539docusautus.config.js\u6587\u4ef6\\r\\n\\r\\n```\\r\\nconst config = {\\r\\n  title: \'My Site\',\\r\\n  tagline: \'Dinosaurs are cool\',\\r\\n  favicon: \'img/favicon.ico\',\\r\\n\\r\\n  // Set the production url of your site here\\r\\n  //url: \'https://github.com/shaozongfan/shaozongfan.github.io.git\',\\r\\n  //url: \'https://shaozongfan.github.io/PuchengPeasant.github.io/\',\\r\\n  url: \'https://shaozongfan.github.io\',\\r\\n ///url: \'https://your-docusaurus-test-site.com\',\\r\\n  // Set the /<baseUrl>/ pathname under which your site is served\\r\\n  // For GitHub pages deployment, it is often \'/<projectName>/\'\\r\\n  baseUrl: \'/\',\\r\\n\\r\\n  // GitHub pages deployment config.\\r\\n  // If you aren\'t using GitHub pages, you don\'t need these.\\r\\n  //organizationName: \'facebook\', // Usually your GitHub org/user name.\\r\\n  //projectName: \'docusaurus\', // Usually your repo name.\\r\\n\\r\\n  organizationName: \'shaozongfan\',\\r\\n  projectName: \'shaozongfan.github.io\',\\r\\n  deploymentBranch: \'gh-pages\',\\r\\n\\r\\n  trailingSlash:false,\\r\\n  onBrokenLinks: \'throw\',\\r\\n  onBrokenMarkdownLinks: \'warn\',\\r\\n\\r\\n  deploymentBranch: \'gh-pages\',\\r\\n  trailingSlash:false,\\r\\n  // Even if you don\'t use internalization, you can use this field to set useful\\r\\n  // metadata like html lang. For example, if your site is Chinese, you may want\\r\\n  // to replace \\"en\\" with \\"zh-Hans\\".\\r\\n  i18n: {\\r\\n    defaultLocale: \'en\',\\r\\n    locales: [\'en\'],\\r\\n  },\\r\\n\\r\\n```\\r\\n\\r\\n# \u56fd\u5185\u8bbf\u95eegithub\\r\\n\\r\\n```\\r\\nhttps://github.com/maxiaof/github-hosts\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\u9047\u5230\u7684\u95ee\u9898\\r\\n\\r\\n```\\r\\n[ERROR] Unable to build website for locale zh-Hans.\\r\\n[ERROR] Error: Docusaurus found broken links!\\r\\n\\r\\nPlease check the pages of your site in the list below, and make sure you don\'t reference any path that does not exist.\\r\\nNote: it\'s possible to ignore broken links with the \'onBrokenLinks\' Docusaurus configuration, and let the build pass.\\r\\n\\r\\nExhaustive list of all broken links found:\\r\\n\\r\\n- On source page path = /shaozongfan.github.io/:\\r\\n   -> linking to /shaozongfan.github.io/docs/intro\\r\\n\\r\\n    at reportMessage (/home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/utils/lib/jsUtils.js:88:19)\\r\\n    at handleBrokenLinks (/home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/core/lib/server/brokenLinks.js:153:35)\\r\\n    at async buildLocale (/home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/core/lib/commands/build.js:176:5)\\r\\n    at async tryToBuildLocale (/home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/core/lib/commands/build.js:37:20)\\r\\n    at async mapAsyncSequential (/home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/utils/lib/jsUtils.js:36:24)\\r\\n    at async build (/home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/core/lib/commands/build.js:72:21)\\r\\n\\r\\n```\\r\\n\\r\\n# \u89e3\u51b3\u65b9\u6cd5\\r\\n\\r\\n![a80a302a-63f8-40ac-af9b-23a4353e356b](./figure/a80a302a-63f8-40ac-af9b-23a4353e356b-1757599111058-11.png)\\r\\n\\r\\n\\r\\n\\r\\n# \u9047\u5230\u7684\u95ee\u9898\\r\\n\\r\\n```\\r\\nrlk@rlk:shaozongfan.github.io$ npm run build\\r\\n\\r\\n> longyu-website@0.0.0 build\\r\\n> docusaurus build\\r\\n\\r\\n[ERROR] Error: Cannot find module \'prism-react-renderer/themes/github\'\\r\\nRequire stack:\\r\\n- /home/rlk/docusaurus/shaozongfan.github.io/docusaurus.config.js\\r\\n- /home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/core/lib/server/config.js\\r\\n- /home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/core/lib/server/index.js\\r\\n- /home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/core/lib/commands/build.js\\r\\n- /home/rlk/docusaurus/shaozongfan.github.io/node_modules/@docusaurus/core/lib/index.js\\r\\n    at Module._resolveFilename (node:internal/modules/cjs/loader:1140:15)\\r\\n    at Module._load (node:internal/modules/cjs/loader:981:27)\\r\\n    at Module.require (node:internal/modules/cjs/loader:1231:19)\\r\\n    at require (node:internal/modules/helpers:177:18)\\r\\n    at Object.<anonymous> (/home/rlk/docusaurus/shaozongfan.github.io/docusaurus.config.js:4:24)\\r\\n    at Module._compile (node:internal/modules/cjs/loader:1364:14)\\r\\n    at Module._extensions..js (node:internal/modules/cjs/loader:1422:10)\\r\\n    at Module.load (node:internal/modules/cjs/loader:1203:32)\\r\\n    at Module._load (node:internal/modules/cjs/loader:1019:12)\\r\\n    at Module.require (node:internal/modules/cjs/loader:1231:19)\\r\\n\\r\\n```\\r\\n\\r\\n# \u89e3\u51b3\u65b9\u6cd5\\r\\n\\r\\n```\\r\\nnpm install prism-react-renderer@^1.3.5\\r\\n```"},{"id":"/\u4e2a\u4eba\u535a\u5ba2/docusaurus3.7","metadata":{"permalink":"/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus3.7","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus3.7.md","source":"@site/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus3.7.md","title":"\u4f9d\u8d56\u5de5\u5177\u5b89\u88c5","description":"\u547d\u4ee4\u884c\u4f9d\u8d56\u5de5\u5177","date":"2025-09-15T14:44:13.513Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":3.36,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4f9d\u8d56\u5de5\u5177\u5b89\u88c5","permalink":"/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus2.4"},"nextItem":{"title":"intro","permalink":"/blog/intro"}},"content":"\u547d\u4ee4\u884c\u4f9d\u8d56\u5de5\u5177\\r\\n\\r\\n```\\r\\n\\tapt install git make gcc g++ xz-utils\\r\\n```\\r\\n\\r\\n\u4e0b\u8f7dnodejs\\r\\n\\r\\n```\\r\\nhttps://nodejs.org/en/download\\r\\n```\\r\\n\\r\\n\u6211\u4e0b\u8f7d\u7684\u7248\u672c\u662f\\r\\n\\r\\n```\\r\\nnode-v22.14.0-linux-x64.tar.xz\\r\\n```\\r\\n\\r\\n\u4e0b\u8f7d\u540e\u89e3\u538b\u5230\u6307\u5b9a\u76ee\u5f55\uff0c\u7136\u540e\u4fee\u6539 ~/.bashrc \u6587\u4ef6\uff0c\u5c06 nodejs \u76f8\u5173\u53ef\u6267\u884c\u7a0b\u5e8f\u8def\u5f84\u6dfb\u52a0\u5230 PATH \u4e2d\u3002\u793a\u4f8b\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nNODEJS=/home/szf/docusaurus/node-v22.14.0-linux-x64/bin\\r\\nexport PATH=$NODEJS:$PATH\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n# nodejs \u63d2\u4ef6\u5b89\u88c5\\r\\n\\r\\n\u6267\u884c\u5982\u4e0b\u64cd\u4f5c\u5b89\u88c5\u4e4b\uff1a\\r\\n\\r\\n```\\r\\nnpx create-docusaurus@latest my-website classic\\r\\ncd ./my-website\\r\\nnpm install @easyops-cn/docusaurus-search-local --save-dev --registry=https://registry.npmmirror.com\\r\\nnpm install prism-react-renderer --save-dev --registry=https://registry.npmmirror.com\\r\\nnpm install @node-rs/jieba --save-dev --registry=https://registry.npmmirror.com\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n# \u9879\u76ee clone\\r\\n\\r\\n```\\r\\ngit clone https://github.com/shaozongfan/shaozongfan.github.io.git\\r\\n```\\r\\n\\r\\n\u514b\u9686 docusaurus \u9879\u76ee\u5230\u672c\u5730\uff0c\u6b64\u65f6\u4e0d\u80fd\u76f4\u63a5\u7f16\u8bd1\uff0c\u9700\u8981\u5148\u5b89\u88c5\u4f9d\u8d56\u7684 node_modules\u3002\\r\\n\\r\\n```\\r\\ncd shaozongfan.github.io.git\\r\\ncp -rf ../my-website .\\r\\n```\\r\\n\\r\\n\u4fee\u6539\u6dfb\u52a0\u5185\u5bb9\u5230docusaurus.config.js\\r\\n\\r\\n```\\r\\n const config = {\\r\\n url: \'https://shaozongfan.github.io\',\\r\\n  projectName: \'shaozongfan.github.io\', // Usually your repo name.\\r\\n  deploymentBranch: \'gh-pages\',\\r\\n\\r\\n```\\r\\n\\r\\n# \u7f16\u8bd1\u9879\u76ee\\r\\n\\r\\n\u8fdb\u5165 my-website\u76ee\u5f55\u4e2d\uff0c\u6267\u884c `npm run build`\u6765\u7f16\u8bd1\uff0c\u7f16\u8bd1\u6210\u529f\u7684\u4e3b\u8981\u65e5\u5fd7\u5982\u4e0b\uff1a\\r\\n\\r\\n```\\r\\nrlk@rlk:my-website$ npm run build\\r\\n\\r\\n> my-website@0.0.0 build\\r\\n> docusaurus build\\r\\n\\r\\n[INFO] [en] Creating an optimized production build...\\r\\n\\r\\n\u2714 Client\\r\\n\\r\\n\\r\\n\u2714 Server\\r\\n  Compiled successfully in 1.60m\\r\\n\\r\\n\\r\\n\u2714 Client\\r\\n\\r\\n\\r\\n\u25cf Server \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 cache (99%) shutdown IdleFileCachePlugin\\r\\n stored\\r\\n\\r\\n[SUCCESS] Generated static files in \\"build\\".\\r\\n[INFO] Use `npm run serve` command to test your build locally.\\r\\n\\r\\n```\\r\\n\\r\\n# \u914d\u7f6e deploy\\r\\n\\r\\n### 1. \u751f\u6210SSH\u5bc6\\r\\n\\r\\n\u5982\u679c\u4f60\u8fd8\u6ca1\u6709SSH\u5bc6\u94a5\u5bf9\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5728\u7ec8\u7aef\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u751f\u6210\u5b83\u4eec\uff1a\\r\\n\\r\\nbash\u590d\u5236\\r\\n\\r\\n```bash\\r\\nssh-keygen -t ed25519 -C \\"your_email@example.com\\"\\r\\n```\\r\\n\\r\\n- \u8fd9\u6761\u547d\u4ee4\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684SSH\u5bc6\u94a5\u5bf9\uff08\u516c\u94a5\u548c\u79c1\u94a5\uff09\u3002\\r\\n- \u6309\u7167\u63d0\u793a\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u4e3a\u5bc6\u94a5\u8bbe\u7f6e\u5bc6\u7801\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6309\u56de\u8f66\u952e\u7559\u7a7a\u3002\\r\\n- \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u516c\u94a5\u4f1a\u4fdd\u5b58\u5728`~/.ssh/id_ed25519.pub`\uff0c\u79c1\u94a5\u4f1a\u4fdd\u5b58\u5728`~/.ssh/id_ed25519`\u3002\\r\\n\\r\\n### 2. \u67e5\u770b\u516c\u94a5\\r\\n\\r\\n\u5728\u6dfb\u52a0SSH\u5bc6\u94a5\u5230GitHub\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u67e5\u770b\u516c\u94a5\u7684\u5185\u5bb9\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\uff1a\\r\\n\\r\\nbash\u590d\u5236\\r\\n\\r\\n```bash\\r\\ncat ~/.ssh/id_ed25519.pub\\r\\n```\\r\\n\\r\\n\u8fd9\u5c06\u663e\u793a\u4f60\u7684\u516c\u94a5\uff0c\u4f60\u9700\u8981\u590d\u5236\u8fd9\u90e8\u5206\u5185\u5bb9\u3002\\r\\n\\r\\n### 3. \u6dfb\u52a0SSH\u5bc6\u94a5\u5230GitHub\\r\\n\\r\\n1. \u767b\u5f55\u5230\u4f60\u7684GitHub\u8d26\u6237\u3002\\r\\n2. \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u5934\u50cf\uff0c\u9009\u62e9\u201cSettings\u201d\uff08\u8bbe\u7f6e\uff09\u3002\\r\\n3. \u5728\u8bbe\u7f6e\u9875\u9762\u7684\u4fa7\u8fb9\u680f\u4e2d\uff0c\u70b9\u51fb\u201cSSH and GPG keys\u201d\uff08SSH\u548cGPG\u5bc6\u94a5\uff09\u3002\\r\\n4. \u70b9\u51fb\u201cNew SSH key\u201d\uff08\u65b0\u5efaSSH\u5bc6\u94a5\uff09\u6309\u94ae\u3002\\r\\n5. \u5728\u201cTitle\u201d\uff08\u6807\u9898\uff09\u5b57\u6bb5\u4e2d\uff0c\u4e3a\u4f60\u7684\u5bc6\u94a5\u8bbe\u7f6e\u4e00\u4e2a\u63cf\u8ff0\u6027\u7684\u6807\u9898\uff0c\u4f8b\u5982\u4f60\u7684\u7b14\u8bb0\u672c\u7535\u8111\u7684\u540d\u79f0\u3002\\r\\n6. \u5728\u201cKey\u201d\uff08\u5bc6\u94a5\uff09\u5b57\u6bb5\u4e2d\uff0c\u7c98\u8d34\u4f60\u4e4b\u524d\u590d\u5236\u7684\u516c\u94a5\u5185\u5bb9\u3002\\r\\n7. \u70b9\u51fb\u201cAdd SSH key\u201d\uff08\u6dfb\u52a0SSH\u5bc6\u94a5\uff09\u6309\u94ae\u3002\\r\\n\\r\\n### 4. \u6d4b\u8bd5SSH\u5bc6\u94a5\\r\\n\\r\\n\u6dfb\u52a0SSH\u5bc6\u94a5\u540e\uff0c\u4f60\u5e94\u8be5\u6d4b\u8bd5\u5b83\u4ee5\u786e\u4fdd\u4e00\u5207\u6b63\u5e38\u5de5\u4f5c\u3002\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6d4b\u8bd5\uff1a\\r\\n\\r\\nbash\u590d\u5236\\r\\n\\r\\n```bash\\r\\nssh -T git@github.com\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n### 5.\u6267\u884c\u4e00\u6b21\u5982\u4e0b\u6b65\u9aa4\\r\\n\\r\\n\u4e00\u5b9a\u8981\u6267\u884c\u8fd9\u4e00\u6b65\uff0c\u5b8c\u6210\u8ba4\u8bc1\u8fc7\u7a0b\\r\\n\\r\\n```\\r\\n git clone --depth 1 --branch gh-pages git@github.com:shaozongfan/shaozongfan.github.io.git /tmp/shaozongfan.github.io.git-gh-pagesUOkBdR-tes\\r\\n```\\r\\n\\r\\n### 6.\u7ec8\u7aef\u8bbe\u7f6e\\r\\n\\r\\n```\\r\\n export USE_SSH=true\\r\\n```\\r\\n\\r\\n### 7.\u6267\u884c\\r\\n\\r\\n```\\r\\nnpm run deploy\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n# \u56fd\u5185\u8bbf\u95eegithub\\r\\n\\r\\n```\\r\\nhttps://github.com/maxiaof/github-hosts\\r\\n```"},{"id":"/intro","metadata":{"permalink":"/blog/intro","editUrl":"https://github.com/shaozongfan/shaozongfan.github.io/blog/intro.md","source":"@site/blog/intro.md","title":"intro","description":"\u84b2\u57ce\u5c0f\u519c\u7684\u535a\u5ba2","date":"2025-09-15T14:44:13.489Z","formattedDate":"2025\u5e749\u670815\u65e5","tags":[],"readingTime":0.665,"truncated":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4f9d\u8d56\u5de5\u5177\u5b89\u88c5","permalink":"/blog/\u4e2a\u4eba\u535a\u5ba2/docusaurus3.7"}},"content":"\u84b2\u57ce\u5c0f\u519c\u7684\u535a\u5ba2\\n\\n\u5bb6\u5ead\u7684\u5e95\u5c42\u903b\u8f91\u662f\u7ecf\u6d4e\uff0c\u4e0d\u662f\u611f\u60c5 \\n\\n\u804c\u573a\u7684\u5e95\u5c42\u903b\u8f91\u662f\u4ef7\u503c\uff0c\u4e0d\u662f\u52aa\u529b \\n\\n\u6559\u80b2\u7684\u5e95\u5c42\u903b\u8f91\u662f\u57f9\u517b\uff0c\u4e0d\u662f\u5206\u6570 \\n\\n\u5065\u5eb7\u7684\u5e95\u5c42\u903b\u8f91\u662f\u81ea\u5f8b\uff0c\u4e0d\u662f\u533b\u7597 \\n\\n\u521b\u4e1a\u7684\u5e95\u5c42\u903b\u8f91\u662f\u5e02\u573a\uff0c\u4e0d\u662f\u4ea7\u54c1 \\n\\n\u6210\u4e8b\u7684\u5e95\u5c42\u903b\u8f91\u662f\u5b9e\u8df5\uff0c\u4e0d\u662f\u5b66\u4e60 \\n\\n\u8d5a\u94b1\u7684\u5e95\u5c42\u903b\u8f91\u662f\u9700\u6c42\uff0c\u4e0d\u662f\u8f9b\u82e6 \\n\\n\u6d41\u91cf\u7684\u5e95\u5c42\u903b\u8f91\u662f\u4eba\u6027\uff0c\u4e0d\u662f\u81ea\u55e8 \\n\\n\u6295\u8d44\u7684\u5e95\u5c42\u903b\u8f91\u662f\u98ce\u63a7\uff0c\u4e0d\u662f\u56de\u62a5"}]}')}}]);