"use strict";(self.webpackChunkshaozongfan_website=self.webpackChunkshaozongfan_website||[]).push([[12617],{3905:function(t,e,r){r.d(e,{Zo:function(){return c},kt:function(){return p}});var n=r(67294);function u(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){u(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,u=function(t,e){if(null==t)return{};var r,n,u={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(u[r]=t[r]);return u}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(u[r]=t[r])}return u}var i=n.createContext({}),s=function(t){var e=n.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},c=function(t){var e=s(t.components);return n.createElement(i.Provider,{value:e},t.children)},g={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,u=t.mdxType,o=t.originalType,i=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=s(r),p=u,_=d["".concat(i,".").concat(p)]||d[p]||g[p]||o;return r?n.createElement(_,a(a({ref:e},c),{},{components:r})):n.createElement(_,a({ref:e},c))}));function p(t,e){var r=arguments,u=e&&e.mdxType;if("string"==typeof t||u){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l.mdxType="string"==typeof t?t:u,a[1]=l;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},84453:function(t,e,r){r.r(e),r.d(e,{assets:function(){return c},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return g}});var n=r(87462),u=r(63366),o=(r(67294),r(3905)),a=["components"],l={},i=void 0,s={unversionedId:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8",id:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8",title:"19.5\u3000Regulator\u9a71\u52a8",description:"Regulator\u662fLinux\u7cfb\u7edf\u4e2d\u7535\u6e90\u7ba1\u7406\u7684\u57fa\u7840\u8bbe\u65bd\u4e4b\u4e00\uff0c\u7528\u4e8e\u7a33\u538b\u7535\u6e90\u7684\u7ba1\u7406\uff0c\u662f\u5404\u79cd\u9a71\u52a8\u5b50\u7cfb\u7edf\u4e2d\u8bbe\u7f6e\u7535\u538b\u7684\u6807\u51c6\u63a5\u53e3\u3002\u524d\u9762\u4ecb\u7ecd\u7684CPUFreq\u9a71\u52a8\u5c31\u7ecf\u5e38\u4f7f\u7528\u5b83\u6765\u8bbe\u5b9a\u7535\u538b\uff0c\u6bd4\u5982\u4ee3\u7801\u6e05\u535519.2\u7684\u7b2c57~59\u884c\u3002",source:"@site/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8.md",sourceDirName:"\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3",slug:"/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8",draft:!1,editUrl:"https://github.com/shaozongfan/shaozongfan.github.io/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.5\u3000Regulator\u9a71\u52a8.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"19.4\u3000PowerTop",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.4\u3000PowerTop"},next:{title:"19.6\u3000OPP",permalink:"/docs/\u6280\u672f\u535a\u5ba2/\u5d4c\u5165\u5f0f/linux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3/19.6\u3000OPP"}},c={},g=[],d={toc:g};function p(t){var e=t.components,l=(0,u.Z)(t,a);return(0,o.kt)("wrapper",(0,n.Z)({},d,l,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Regulator\u662fLinux\u7cfb\u7edf\u4e2d\u7535\u6e90\u7ba1\u7406\u7684\u57fa\u7840\u8bbe\u65bd\u4e4b\u4e00\uff0c\u7528\u4e8e\u7a33\u538b\u7535\u6e90\u7684\u7ba1\u7406\uff0c\u662f\u5404\u79cd\u9a71\u52a8\u5b50\u7cfb\u7edf\u4e2d\u8bbe\u7f6e\u7535\u538b\u7684\u6807\u51c6\u63a5\u53e3\u3002\u524d\u9762\u4ecb\u7ecd\u7684CPUFreq\u9a71\u52a8\u5c31\u7ecf\u5e38\u4f7f\u7528\u5b83\u6765\u8bbe\u5b9a\u7535\u538b\uff0c\u6bd4\u5982\u4ee3\u7801\u6e05\u535519.2\u7684\u7b2c57~59\u884c\u3002"),(0,o.kt)("p",null,"\u800cRegulator\u5219\u53ef\u4ee5\u7ba1\u7406\u7cfb\u7edf\u4e2d\u7684\u4f9b\u7535\u5355\u5143\uff0c\u5373\u7a33\u538b\u5668\uff08Low Dropout Regulator\uff0cLDO\uff0c\u5373\u4f4e\u538b\u5dee\u7ebf\u6027\u7a33\u538b\u5668\uff09\uff0c\u5e76\u63d0\u4f9b\u83b7\u53d6\u548c\u8bbe\u7f6e\u8fd9\u4e9b\u4f9b\u7535\u5355\u5143\u7535\u538b\u7684\u63a5\u53e3\u3002\u4e00\u822c\u5728ARM\u7535\u8def\u677f\u4e0a\uff0c\u5404\u4e2a\u7a33\u538b\u5668\u548c\u8bbe\u5907\u4f1a\u5f62\u6210\u4e00\u4e2aRegulator\u6811\u5f62\u7ed3\u6784\uff0c\u5982\u56fe19.6\u6240\u793a\u3002"),(0,o.kt)("p",null,"Linux\u7684Regulator\u5b50\u7cfb\u7edf\u63d0\u4f9b\u5982\u4e0bAPI\u4ee5\u7528\u4e8e\u6ce8\u518c/\u6ce8\u9500\u4e00\u4e2a\u7a33\u538b\u5668\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"structregulator_dev     *        regulator_register(conststructregulator_desc\n*regulator_desc, conststructregulator_config *config);\nvoidregulator_unregister(structregulator_dev *rdev);\n")),(0,o.kt)("p",null,"regulator_register\uff08\uff09\u51fd\u6570\u7684\u4e24\u4e2a\u53c2\u6570\u5206\u522b\u662fregulator_desc\u7ed3\u6784\u4f53\u548cregulator_config\u7ed3\u6784\u4f53\u7684\u6307\u9488\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image-20250430225501894",src:r(77014).Z,width:"1377",height:"769"})),(0,o.kt)("p",null,"\u56fe19.6\u3000Regulator\u6811\u5f62\u7ed3\u6784"),(0,o.kt)("p",null,"regulator_desc\u7ed3\u6784\u4f53\u662f\u5bf9\u8fd9\u4e2a\u7a33\u538b\u5668\u5c5e\u6027\u548c\u64cd\u4f5c\u7684\u5c01\u88c5\uff0c\u5982\u4ee3\u7801\u6e05\u535519.7\u6240\u793a\u3002"),(0,o.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.7\u3000regulator_desc\u7ed3\u6784\u4f53"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"}," 1struct regulator_desc {\n 2       const char *name;                /* Regulator\u7684\u540d\u5b57*/\n 3       const char *supply_name;         /* Regulator Supply\u7684\u540d\u5b57*/\n 4       int id;\n 5       unsigned n_voltages;\n 6       struct regulator_ops *ops;\n 7       int irq;\n 8       enum regulator_type type;        /* \u662f\u7535\u538b\u8fd8\u662f\u7535\u6d41Regulator */\n 9       struct module *owner;\n10\n11       unsigned int min_uV;             /* \u5728\u7ebf\u6027\u6620\u5c04\u60c5\u51b5\u4e0b\u6700\u4f4e\u7684Selector\u7684\u7535\u538b*/\n12       unsigned int uV_step;            /* \u5728\u7ebf\u6027\u6620\u5c04\u60c5\u51b5\u4e0b\u6bcf\u6b65\u589e\u52a0/\u51cf\u5c0f\u7684\u7535\u538b*/\n13       unsigned int ramp_delay;         /* \u7535\u538b\u6539\u53d8\u540e\u7a33\u5b9a\u4e0b\u6765\u6240\u9700\u65f6\u95f4*/\n14\n15       const unsigned int *volt_table;    /* \u57fa\u4e8e\u8868\u6620\u5c04\u60c5\u51b5\u4e0b\u7684\u7535\u538b\u6620\u5c04\u8868 */\n16\n17       unsigned int vsel_reg;\n18       unsigned int vsel_mask;\n19       unsigned int enable_reg;\n20       unsigned int enable_mask;\n21       unsigned int bypass_reg;\n22       unsigned int bypass_mask;\n23\n24       unsigned int enable_time;\n25};\n")),(0,o.kt)("p",null,"\u4e0a\u8ff0\u7ed3\u6784\u4f53\u4e2d\u7684regulator_ops\u6307\u9488ops\u662f\u5bf9\u8fd9\u4e2a\u7a33\u538b\u5668\u786c\u4ef6\u64cd\u4f5c\u7684\u5c01\u88c5\uff0c\u5176\u4e2d\u5305\u542b\u83b7\u53d6\u3001\u8bbe\u7f6e\u7535\u538b\u7b49\u7684\u6210\u5458\u51fd\u6570\uff0c\u5982\u4ee3\u7801\u6e05\u535519.8\u6240\u793a\u3002"),(0,o.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.8\u3000regulator_ops\u7ed3\u6784\u4f53"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"}," 1struct regulator_ops {\n 2      /* enumerate supported voltages */\n 3      int (*list_voltage) (struct regulator_dev *, unsigned selector);\n 4\n 5      /* get/set regulator voltage */\n 6      int (*set_voltage) (struct regulator_dev *, int min_uV, int max_uV,\n 7                       unsigned *selector);\n 8      int (*map_voltage)(struct regulator_dev *, int min_uV, int max_uV);\n 9      int (*set_voltage_sel) (struct regulator_dev *, unsigned selector);\n10      int (*get_voltage) (struct regulator_dev *);\n11      int (*get_voltage_sel) (struct regulator_dev *);\n12\n13      /* get/set regulator current  */\n14      int (*set_current_limit) (struct regulator_dev *,\n15                           int min_uA, int max_uA);\n16      int (*get_current_limit) (struct regulator_dev *);\n17\n18      /* enable/disable regulator */\n19      int (*enable) (struct regulator_dev *);\n20      int (*disable) (struct regulator_dev *);\n21      int (*is_enabled) (struct regulator_dev *);\n22\n23      \u2026\n24};\n")),(0,o.kt)("p",null,"\u5728drivers/regulator\u76ee\u5f55\u4e0b\uff0c\u5305\u542b\u5927\u91cf\u7684\u4e0e\u7535\u6e90\u82af\u7247\u5bf9\u5e94\u7684Regulator\u9a71\u52a8\uff0c\u5982Dialog\u7684DA9052\u3001Intersil\u7684ISL6271A\u3001ST-Ericsson\u7684TPS61050/61052\u3001Wolfon\u7684WM831x\u7cfb\u5217\u7b49\uff0c\u5b83\u540c\u65f6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u865a\u62df\u7684Regulator\u9a71\u52a8\u4f5c\u4e3a\u53c2\u8003\uff0c\u5982\u4ee3\u7801\u6e05\u535519.9\u6240\u793a\u3002"),(0,o.kt)("p",null,"\u4ee3\u7801\u6e05\u535519.9\u3000\u865a\u62df\u7684Regulator\u9a71\u52a8"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},' 1struct regulator_dev *dummy_regulator_rdev;\n 2static struct regulator_init_data dummy_initdata;\n 3static struct regulator_ops dummy_ops;\n 4static struct regulator_desc dummy_desc = {\n 5       .name = "regulator-dummy",\n 6       .id = -1,\n 7       .type = REGULATOR_VOLTAGE,\n 8       .owner = THIS_MODULE,\n 9       .ops = &dummy_ops,\n10};\n11\n12static int __devinit dummy_regulator_probe(struct platform_device *pdev)\n13{\n14       struct regulator_config config = { };\n15       int ret;\n16\n17       config.dev = &pdev->dev;\n18       config.init_data = &dummy_initdata;\n19\n20       dummy_regulator_rdev = regulator_register(&dummy_desc, &config);\n21       if (IS_ERR(dummy_regulator_rdev)) {\n22              ret = PTR_ERR(dummy_regulator_rdev);\n23              pr_err("Failed to register regulator: %d\\n", ret);\n24              return ret;\n25       }\n26\n27       return 0;\n28}\n')),(0,o.kt)("p",null,"Linux\u7684Regulator\u5b50\u7cfb\u7edf\u63d0\u4f9b\u6d88\u8d39\u8005\uff08Consumer\uff09API\u4ee5\u4fbf\u8ba9\u5176\u4ed6\u7684\u9a71\u52a8\u83b7\u53d6\u3001\u8bbe\u7f6e\u3001\u5173\u95ed\u548c\u4f7f\u80fd\u7a33\u538b\u5668\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"structregulator * regulator_get(structdevice *dev, const char *id);\nstructregulator * devm_regulator_get(structdevice *dev, const char *id);\nstructregulator * regulator_get_exclusive(structdevice *dev, const char *id);\nvoidregulator_put(structregulator *regulator);\nvoiddevm_regulator_put(structregulator *regulator);\nintregulator_enable(structregulator *regulator);\nintregulator_disable(structregulator *regulator);\nintregulator_set_voltage(structregulator *regulator, intmin_uV, intmax_uV);\nintregulator_get_voltage(structregulator *regulator);\n")),(0,o.kt)("p",null,"\u8fd9\u4e9b\u6d88\u8d39\u8005API\u7684\u5730\u4f4d\u5927\u81f4\u4e0eGPIO\u5b50\u7cfb\u7edf\u7684gpio_request\uff08\uff09\u3001\u65f6\u949f\u5b50\u7cfb\u7edf\u7684clk_get\uff08\uff09\u3001dmaengine\u5b50\u7cfb\u7edf\u7684dmaengine_submit\uff08\uff09\u7b49\u76f8\u5f53\uff0c\u5c5e\u4e8e\u57fa\u7840\u8bbe\u65bd\u3002"))}p.isMDXComponent=!0},77014:function(t,e,r){e.Z=r.p+"assets/images/image-20250430225501894-e744352b7ff398de6941b237cec59f8c.png"}}]);